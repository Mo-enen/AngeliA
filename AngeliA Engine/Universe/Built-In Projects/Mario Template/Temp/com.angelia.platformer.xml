<?xml version="1.0"?>
<doc>
    <assembly>
        <name>com.angelia.platformer</name>
    </assembly>
    <members>
        <member name="T:AngeliA.Platformer.OnCheckPointTouched_CheckPoint_CharacterAttribute">
            <inheritdoc cref="M:AngeliA.Platformer.OnCheckPointTouched_CheckPoint_CharacterAttribute.#ctor(System.Int32)"/>
        </member>
        <member name="M:AngeliA.Platformer.OnCheckPointTouched_CheckPoint_CharacterAttribute.#ctor(System.Int32)">
            <summary>
            The function will be called when a check point entity touched by player
            </summary>
            <param name="order">Function with smaller order will be called earlier</param>
            <example><code>
            [OnCheckPointTouched_CheckPoint_Character]
            internal static void ExampleFunction (CheckPoint cp, Character player) { }
            </code></example>
        </member>
        <member name="T:AngeliA.Platformer.NavigationOperateMotion">
            <summary>
            Type of navigation motion for a single step
            </summary>
        </member>
        <member name="T:AngeliA.Platformer.Navigation">
            <summary>
            Core system for navigate a platformer entity to move naturally
            </summary>
        </member>
        <member name="T:AngeliA.Platformer.Navigation.Operation">
            <summary>
            Data for a single step of navigation operation
            </summary>
        </member>
        <member name="F:AngeliA.Platformer.Navigation.Operation.Motion">
            <summary>
            Type of the motion
            </summary>
        </member>
        <member name="P:AngeliA.Platformer.Navigation.IsReady">
            <summary>
            True if the navigation system is ready to use
            </summary>
        </member>
        <member name="M:AngeliA.Platformer.Navigation.NavigateTo(AngeliA.Platformer.Navigation.Operation[],System.Int32@,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Perform a navigation analysis to find the natural way to walk to target position
            </summary>
            <param name="Operations">Array to store the result data</param>
            <param name="operationCount">How many operations generated</param>
            <param name="fromX">Navigate from this position in global space</param>
            <param name="fromY">Navigate from this position in global space</param>
            <param name="toX">Navigate to this position in global space</param>
            <param name="toY">Navigate to this position in global space</param>
            <param name="jumpIteration">Iteration limit for jumpping logic</param>
        </member>
        <member name="M:AngeliA.Platformer.Navigation.ExpandTo(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32@,System.Int32@,System.Boolean)">
            <summary>
            Search for a valid place to stay with
            </summary>
            <param name="fromX">Search from this position in global space</param>
            <param name="fromY">Search from this position in global space</param>
            <param name="toX">Search to this position in global space</param>
            <param name="toY">Search to this position in global space</param>
            <param name="maxIteration">Limitation for searching iteration (Set to 16 if you have no idea how many it should be)</param>
            <param name="resultX">Result position to stay with in global space</param>
            <param name="resultY">Result position to stay with in global space</param>
            <param name="endInAir">True if the target is able to stay in air</param>
            <returns>True if the searching performs successfuly</returns>
        </member>
        <member name="M:AngeliA.Platformer.Navigation.IsGround(System.Int32,System.Int32,System.Int32@)">
            <summary>
            True if the given location is ground tile for navigation
            </summary>
            <param name="globalX">Target position in global space</param>
            <param name="globalY">Target position in global space</param>
            <param name="groundY">Position Y for top edge of the founded ground in global space</param>
        </member>
        <member name="T:AngeliA.Platformer.PlatformerUtil">
            <summary>
            Utility class for platformer package
            </summary>
        </member>
        <member name="M:AngeliA.Platformer.PlatformerUtil.NavigationFreeWandering(AngeliA.Int2,AngeliA.Entity,System.Boolean@,System.Int32,System.Int32,System.Int32)">
            <summary>
            Find final position to move to for wandering around.
            </summary>
            <param name="aimPosition">Target position anchor</param>
            <param name="target">Entity that moves around</param>
            <param name="grounded">True if the final position is on ground</param>
            <param name="frequency">Checking frequency in frame</param>
            <param name="maxDistance">Limitation for being away from the aimPosition</param>
            <param name="randomShift">Position shift on X in global space</param>
            <returns>Final position in global space</returns>
        </member>
        <member name="T:AngeliA.Platformer.ArrowBullet`1">
            <summary>
            Bullet entity that spawns an item when destroy
            </summary>
            <typeparam name="I">Type of the item as arrow</typeparam>
        </member>
        <member name="T:AngeliA.Platformer.ArrowBullet">
            <summary>
            Bullet entity that spawns an item when destroy
            </summary>
        </member>
        <member name="P:AngeliA.Platformer.ArrowBullet.ArrowItemID">
            <summary>
            Target item to spawn when destroy
            </summary>
        </member>
        <member name="P:AngeliA.Platformer.ArrowBullet.ArrowArtworkID">
            <summary>
            Artwork sprite ID to render this bullet
            </summary>
        </member>
        <member name="P:AngeliA.Platformer.ArrowBullet.SpawnItemWhenBulletDestroy">
            <summary>
            True if the arrow item should be spawn when bullet destroy
            </summary>
        </member>
        <member name="T:AngeliA.Platformer.BeamBullet">
            <summary>
            A type of bullet that shoot into straight line
            </summary>
        </member>
        <member name="P:AngeliA.Platformer.BeamBullet.BeamSpriteID">
            <summary>
            Artwork sprite ID for the beam body
            </summary>
        </member>
        <member name="P:AngeliA.Platformer.BeamBullet.SparkSpriteID">
            <summary>
            Artwork sprite ID for the beam spark effect
            </summary>
        </member>
        <member name="P:AngeliA.Platformer.BeamBullet.BurstSpriteID">
            <summary>
            Artwork sprite ID for the beam burst effect in the end-side
            </summary>
        </member>
        <member name="P:AngeliA.Platformer.BeamBullet.HandBurstSpriteID">
            <summary>
            Artwork sprite ID for the beam burst effect in the hand-side
            </summary>
        </member>
        <member name="P:AngeliA.Platformer.BeamBullet.BeamSize">
            <summary>
            Thickness of the beam in global space
            </summary>
        </member>
        <member name="P:AngeliA.Platformer.BeamBullet.SparkSize">
            <summary>
            Size of the spark effect in global space
            </summary>
        </member>
        <member name="P:AngeliA.Platformer.BeamBullet.BurstSize">
            <summary>
            Size of the end burst effect in global space
            </summary>
        </member>
        <member name="P:AngeliA.Platformer.BeamBullet.HandBurstSize">
            <summary>
            Size of the hand burst effect in global space
            </summary>
        </member>
        <member name="P:AngeliA.Platformer.BeamBullet.IllumanteUnitRadius">
            <summary>
            Radius in unit space for the LightingSystem
            </summary>
        </member>
        <member name="P:AngeliA.Platformer.BeamBullet.IllumanteAmount">
            <summary>
            How bright of the illumante (0 means no illumante. 1000 means general amount)
            </summary>
        </member>
        <member name="P:AngeliA.Platformer.BeamBullet.OnlyShowBurstWhenHitReceiver">
            <summary>
            True if show burst effect when hit a IDamageReceiver, not just hit the environment
            </summary>
        </member>
        <member name="T:AngeliA.Platformer.Explosion">
            <summary>
            General representation of an explosion
            </summary>
        </member>
        <member name="P:AngeliA.Platformer.Explosion.CollisionMask">
            <summary>
            Cells in which physics layers will be effect by the explosion
            </summary>
        </member>
        <member name="P:AngeliA.Platformer.Explosion.Duration">
            <summary>
            How many frames does this explosion exists in stage
            </summary>
        </member>
        <member name="P:AngeliA.Platformer.Explosion.Damage">
            <summary>
            How many damage does this explosion deal to the targets
            </summary>
        </member>
        <member name="P:AngeliA.Platformer.Explosion.WaveColor">
            <summary>
            Color tint of the wave sprite
            </summary>
        </member>
        <member name="P:AngeliA.Platformer.Explosion.RingColor">
            <summary>
            Color tint of the ring sprite
            </summary>
        </member>
        <member name="P:AngeliA.Platformer.Explosion.FireColor">
            <summary>
            Color tint of the fire sprite
            </summary>
        </member>
        <member name="P:AngeliA.Platformer.Explosion.DestroyBlocks">
            <summary>
            True if this explosion break map blocks
            </summary>
        </member>
        <member name="P:AngeliA.Platformer.Explosion.Radius">
            <summary>
            Size of the explosion in global space
            </summary>
        </member>
        <member name="P:AngeliA.Platformer.Explosion.Sender">
            <summary>
            Which entity create this explosion
            </summary>
        </member>
        <member name="P:AngeliA.Platformer.Explosion.BreakObjectArtwork">
            <summary>
            Artwork sprite ID for object break callback
            </summary>
        </member>
        <member name="M:AngeliA.Platformer.Explosion.OnExplode(AngeliA.IRect)">
            <summary>
            This function is called the this explosion explode
            </summary>
            <param name="range">(in global space)</param>
        </member>
        <member name="T:AngeliA.Platformer.ExplosiveMovableBullet">
            <summary>
            Movable bullet that spawn an explosion entity when despawn
            </summary>
        </member>
        <member name="P:AngeliA.Platformer.ExplosiveMovableBullet.ExplosionRadius">
            <summary>
            Radius in global space for the explosion.
            </summary>
        </member>
        <member name="P:AngeliA.Platformer.ExplosiveMovableBullet.ExplosionDuration">
            <summary>
            Duration of the explosion in frame
            </summary>
        </member>
        <member name="P:AngeliA.Platformer.ExplosiveMovableBullet.ExplosionID">
            <summary>
            Type ID of the explosion
            </summary>
        </member>
        <member name="T:AngeliA.Platformer.HealBullet">
            <summary>
            Bullet that heal a target Character. Use "Damage" to adjust how much does it heals.
            </summary>
        </member>
        <member name="P:AngeliA.Platformer.HealBullet.Lerp">
            <summary>
            How smooth the bullet move to the target
            </summary>
        </member>
        <member name="T:AngeliA.Platformer.MeleeBullet">
            <summary>
            An invisible bullet created by melee weapon
            </summary>
        </member>
        <member name="M:AngeliA.Platformer.MeleeBullet.FollowSender">
            <summary>
            Update the position of bullet so it attach to the weapon
            </summary>
        </member>
        <member name="T:AngeliA.Platformer.MissileBullet">
            <summary>
            A bullet that find and follow a target to attack them
            </summary>
        </member>
        <member name="P:AngeliA.Platformer.MissileBullet.OnlyHitTarget">
            <summary>
            True if this bullet do not hit environment
            </summary>
        </member>
        <member name="P:AngeliA.Platformer.MissileBullet.SmokeParticleFrequency">
            <summary>
            How many frames does it takes to spawn a smoke particle
            </summary>
        </member>
        <member name="P:AngeliA.Platformer.MissileBullet.MissileFlyingSpeed">
            <summary>
            Forward speed in global space
            </summary>
        </member>
        <member name="P:AngeliA.Platformer.MissileBullet.MissileStartSpeed">
            <summary>
            Initial speed in global space
            </summary>
        </member>
        <member name="P:AngeliA.Platformer.MissileBullet.MissileAcceleration">
            <summary>
            Speed acceleration
            </summary>
        </member>
        <member name="P:AngeliA.Platformer.MissileBullet.DestroyWhenTakeDamage">
            <summary>
            True if this bullet get destroy when something else deal damage to it
            </summary>
        </member>
        <member name="P:AngeliA.Platformer.MissileBullet.MissileTarget">
            <summary>
            Current following target entity
            </summary>
        </member>
        <member name="P:AngeliA.Platformer.MissileBullet.CurrentRotation">
            <summary>
            Current flying rotation
            </summary>
        </member>
        <member name="M:AngeliA.Platformer.MissileBullet.UpdateMissileMovement">
            <summary>
            Use this function to control how it flys
            </summary>
        </member>
        <member name="M:AngeliA.Platformer.MissileBullet.FindTargetUpdate">
            <summary>
            Use this function to control how it find target
            </summary>
        </member>
        <member name="T:AngeliA.Platformer.MovableBullet">
            <summary>
            A bullet that moves after being spawned
            </summary>
        </member>
        <member name="P:AngeliA.Platformer.MovableBullet.SpeedForward">
            <summary>
            Movement speed to shooting direction
            </summary>
        </member>
        <member name="P:AngeliA.Platformer.MovableBullet.SpeedSide">
            <summary>
            Movement speed to 90° of shooting direction
            </summary>
        </member>
        <member name="P:AngeliA.Platformer.MovableBullet.EndRotation">
            <summary>
            Bullet will become this rotation after hit target
            </summary>
        </member>
        <member name="P:AngeliA.Platformer.MovableBullet.EndRotationRandomRange">
            <summary>
            Random angle applys to the end rotation
            </summary>
        </member>
        <member name="P:AngeliA.Platformer.MovableBullet.ResidueID">
            <summary>
            This entity spawns after bullet despawn
            </summary>
        </member>
        <member name="P:AngeliA.Platformer.MovableBullet.ArtworkID">
            <summary>
            Artwork sprite ID to render this bullet
            </summary>
        </member>
        <member name="P:AngeliA.Platformer.MovableBullet.Scale">
            <summary>
            Size scale for artwork only. 0 means 0%, 1000 means 100%
            </summary>
        </member>
        <member name="P:AngeliA.Platformer.MovableBullet.WaterSpeedRate">
            <summary>
            Speed multiply rate when bullet inside water. 0 means 0%, 1000 means 100%
            </summary>
        </member>
        <member name="P:AngeliA.Platformer.MovableBullet.MaxRange">
            <summary>
            Bullet get despawn when fly longer than this range in global space
            </summary>
        </member>
        <member name="P:AngeliA.Platformer.MovableBullet.FacingRight">
            <summary>
            True if bullet facing right currently
            </summary>
        </member>
        <member name="P:AngeliA.Platformer.MovableBullet.HitReceiver">
            <summary>
            True if the bullet already hit a receiver
            </summary>
        </member>
        <member name="T:AngeliA.Platformer.CameraAutoDirection">
            <summary>
            Path indicator for the CameraAutoScroll
            </summary>
        </member>
        <member name="T:AngeliA.Platformer.CameraAutoScroll">
            <summary>
            Camera control entity that makes the camera follows a given path
            </summary>
        </member>
        <member name="T:AngeliA.Platformer.CameraGateDown">
            <summary>
            Camera gate that clamp camera to down side
            </summary>
        </member>
        <member name="T:AngeliA.Platformer.CameraGateUp">
            <summary>
            Camera gate that clamp camera to up side
            </summary>
        </member>
        <member name="T:AngeliA.Platformer.CameraGateLeft">
            <summary>
            Camera gate that clamp camera to left side
            </summary>
        </member>
        <member name="T:AngeliA.Platformer.CameraGateRight">
            <summary>
            Camera gate that clamp camera to right side
            </summary>
        </member>
        <member name="T:AngeliA.Platformer.CameraGate">
            <summary>
            Entity that perform extra controls to the in-game camera movement
            </summary>
        </member>
        <member name="P:AngeliA.Platformer.CameraGate.Direction">
            <summary>
            Which direction does this gate clamp the camera position
            </summary>
        </member>
        <member name="T:AngeliA.Platformer.Enemy">
            <summary>
            Characters that attack the player
            </summary>
        </member>
        <member name="P:AngeliA.Platformer.Enemy.DamageOnTouch">
            <summary>
            True if this enemy deal damage to player when touching the player
            </summary>
        </member>
        <member name="T:AngeliA.Platformer.ItemBasedSummon">
            <summary>
            Summon character that summons when other characters put the origin item in their inventory
            </summary>
        </member>
        <member name="P:AngeliA.Platformer.ItemBasedSummon.OriginItemID">
            <summary>
            ID of the item that make this character summons
            </summary>
        </member>
        <member name="T:AngeliA.Platformer.RigidbodyNavigation">
            <summary>
            Behavior that handles auto movement for a target rigidbody
            </summary>
        </member>
        <member name="M:AngeliA.Platformer.RigidbodyNavigation.#ctor(AngeliA.Rigidbody)">
            <summary>
            Behavior that handles auto movement for a target rigidbody
            </summary>
        </member>
        <member name="P:AngeliA.Platformer.RigidbodyNavigation.NavigationAim">
            <summary>
            Current target position this navigation want to go for
            </summary>
        </member>
        <member name="P:AngeliA.Platformer.RigidbodyNavigation.NavigationAimGrounded">
            <summary>
            True if the aim position is touching ground
            </summary>
        </member>
        <member name="P:AngeliA.Platformer.RigidbodyNavigation.HasPerformableOperation">
            <summary>
            True if there is still any operation to perform
            </summary>
        </member>
        <member name="P:AngeliA.Platformer.RigidbodyNavigation.NavigationEnable">
            <summary>
            True if this behavior should work currently
            </summary>
        </member>
        <member name="P:AngeliA.Platformer.RigidbodyNavigation.ClampInSpawnRect">
            <summary>
            True if the target should only be inside the stage spawn rect
            </summary>
        </member>
        <member name="P:AngeliA.Platformer.RigidbodyNavigation.TeleportWhenCantFly">
            <summary>
            True if the target immediately goes to the aim position when they can not fly
            </summary>
        </member>
        <member name="P:AngeliA.Platformer.RigidbodyNavigation.InstanceShift">
            <summary>
            Position offset for distinguish multiple instance with same type
            </summary>
        </member>
        <member name="P:AngeliA.Platformer.RigidbodyNavigation.StartMoveDistance">
            <summary>
            Start to move when distance between target ans aim position is larger than this value
            </summary>
        </member>
        <member name="P:AngeliA.Platformer.RigidbodyNavigation.EndMoveDistance">
            <summary>
            Stop moving when distance between target ans aim position is smaller than this value
            </summary>
        </member>
        <member name="P:AngeliA.Platformer.RigidbodyNavigation.StartFlyDistance">
            <summary>
            Start to fly when distance between target ans aim position is larger than this value
            </summary>
        </member>
        <member name="P:AngeliA.Platformer.RigidbodyNavigation.EndFlyDistance">
            <summary>
            Stop flying when distance between target ans aim position is smaller than this value
            </summary>
        </member>
        <member name="P:AngeliA.Platformer.RigidbodyNavigation.MinimumFlyDuration">
            <summary>
            At least fly this frames long
            </summary>
        </member>
        <member name="P:AngeliA.Platformer.RigidbodyNavigation.EndMoveSlowDown">
            <summary>
            Duration in frame for slowly stop moving
            </summary>
        </member>
        <member name="M:AngeliA.Platformer.RigidbodyNavigation.SetNavigationAim(AngeliA.Int2,System.Boolean)">
            <summary>
            Set aim position in global space
            </summary>
            <param name="newAim"></param>
            <param name="grounded">True if the new aim position is grounded</param>
        </member>
        <member name="T:AngeliA.Platformer.SummonNavigation">
            <summary>
            Behavior to handle auto movement for a summon character
            </summary>
        </member>
        <member name="M:AngeliA.Platformer.SummonNavigation.#ctor(AngeliA.Platformer.Summon)">
            <summary>
            Behavior to handle auto movement for a summon character
            </summary>
        </member>
        <member name="P:AngeliA.Platformer.SummonNavigation.IsFollowingOwner">
            <summary>
            True if the summon following the owner
            </summary>
        </member>
        <member name="P:AngeliA.Platformer.SummonNavigation.IsWandering">
            <summary>
            True if the summon move along a given position
            </summary>
        </member>
        <member name="M:AngeliA.Platformer.SummonNavigation.MakeWander``1">
            <summary>
            Make the summon find a given type of entity on stage and move along at it's position
            </summary>
            <returns>True if the target founded</returns>
        </member>
        <member name="M:AngeliA.Platformer.SummonNavigation.MakeWander(System.Int32,System.Int32)">
            <summary>
            Make the summon move along with given position in global space
            </summary>
        </member>
        <member name="T:AngeliA.Platformer.Slime">
            <summary>
            A slime type enemy that walks on ground/wall/ceilling
            </summary>
        </member>
        <member name="T:AngeliA.Platformer.Summon">
            <summary>
            Represent a character that summoned by another character
            </summary>
        </member>
        <member name="P:AngeliA.Platformer.Summon.Owner">
            <summary>
            The character that summons this character
            </summary>
        </member>
        <member name="P:AngeliA.Platformer.Summon.Navigation">
            <summary>
            Behavior object to handle auto movement of this character
            </summary>
        </member>
        <member name="P:AngeliA.Platformer.Summon.RequireOwner">
            <summary>
            True if this character despawn when owner is null or inactivated
            </summary>
        </member>
        <member name="P:AngeliA.Platformer.Summon.AllowRescueWhenPassout">
            <summary>
            True if the owner can bring back this character after it passout
            </summary>
        </member>
        <member name="M:AngeliA.Platformer.Summon.OnSummoned(System.Boolean)">
            <summary>
            This function is called when the character is being summoned
            </summary>
            <param name="create">True if this character was not on stage before being summon</param>
        </member>
        <member name="M:AngeliA.Platformer.Summon.CreateSummon``1(AngeliA.Character,System.Int32,System.Int32,System.Boolean)">
            <inheritdoc cref="M:AngeliA.Platformer.Summon.CreateSummon(AngeliA.Character,System.Int32,System.Int32,System.Int32,System.Boolean)"/>
        </member>
        <member name="M:AngeliA.Platformer.Summon.CreateSummon(AngeliA.Character,System.Int32,System.Int32,System.Int32,System.Boolean)">
            <summary>
            
            </summary>
            <typeparam name="T">Type of the summon</typeparam>
            <param name="owner">Instance of the summon's owner</param>
            <param name="typeID">Type of the summon</param>
            <param name="x">Position in global space to put this summon</param>
            <param name="y">Position in global space to put this summon</param>
            <param name="forceCreate">True if take an existing summon in same type and owner to summon it again</param>
            <returns>Instance of the summoned character</returns>
        </member>
        <member name="T:AngeliA.Platformer.CheckAltar`1">
            <summary>
            Entity that function as a check point. Can also use to unlock a type of check point.
            </summary>
        </member>
        <member name="T:AngeliA.Platformer.CheckAltar">
            <summary>
            Entity that function as a check point. Can also use to unlock a type of check point.
            </summary>
        </member>
        <member name="P:AngeliA.Platformer.CheckAltar.LinkPoolReady">
            <summary>
            True if the internal cp link pool is ready to use
            </summary>
        </member>
        <member name="P:AngeliA.Platformer.CheckAltar.CurrentAltarID">
            <summary>
            Current activating altar type ID
            </summary>
        </member>
        <member name="P:AngeliA.Platformer.CheckAltar.CurrentAltarUnitPos">
            <summary>
            Current activating altar position in unit space
            </summary>
        </member>
        <member name="M:AngeliA.Platformer.CheckAltar.Touch">
            <summary>
            Use this function to control logic that handles player touch
            </summary>
        </member>
        <member name="T:AngeliA.Platformer.CheckPoint">
            <summary>
            Entity that save player position when player touchs. When game restart, player spawns to the saved position.
            </summary>
        </member>
        <member name="P:AngeliA.Platformer.CheckPoint.LastTriggeredCheckPointUnitPosition">
            <summary>
            Position in unit space for last check point get triggered
            </summary>
        </member>
        <member name="P:AngeliA.Platformer.CheckPoint.LastTriggeredCheckPointID">
            <summary>
            Type ID for last check point get triggered
            </summary>
        </member>
        <member name="P:AngeliA.Platformer.CheckPoint.RequireAltarUnlock">
            <summary>
            True if only work when linked altar is unlocked
            </summary>
        </member>
        <member name="M:AngeliA.Platformer.CheckPoint.Touch">
            <summary>
            Use this function to control logic when player touch
            </summary>
        </member>
        <member name="T:AngeliA.Platformer.CheckPointPortal">
            <summary>
            Portal that telepart player to target check point
            </summary>
        </member>
        <member name="M:AngeliA.Platformer.CheckPointPortal.SetCheckPoint(System.Int32,AngeliA.Int3)">
            <summary>
            Set the target check point
            </summary>
            <param name="checkPointID"></param>
            <param name="unitPosition">Position in unit space to teleport to</param>
        </member>
        <member name="T:AngeliA.Platformer.BulletShooter`1">
            <summary>
            Entity that shoot given bullet repeatedly
            </summary>
            <typeparam name="B">Type of the bullet</typeparam>
        </member>
        <member name="T:AngeliA.Platformer.BulletShooter">
            <summary>
            Entity that shoot given bullet repeatedly
            </summary>
        </member>
        <member name="P:AngeliA.Platformer.BulletShooter.ShootFrequency">
            <summary>
            How many frame does it takes to shoot another bullet
            </summary>
        </member>
        <member name="P:AngeliA.Platformer.BulletShooter.ShootOffsetForward">
            <summary>
            Bullet starting position offset in forward of shooting direction
            </summary>
        </member>
        <member name="P:AngeliA.Platformer.BulletShooter.ShootOffsetSide">
            <summary>
            Bullet starting position offset in side of shooting direction
            </summary>
        </member>
        <member name="P:AngeliA.Platformer.BulletShooter.AttackTargetTeam">
            <summary>
            Which teams should be attack by the bullet
            </summary>
        </member>
        <member name="P:AngeliA.Platformer.BulletShooter.BulletID">
            <summary>
            Type ID of the bullet entity
            </summary>
        </member>
        <member name="P:AngeliA.Platformer.BulletShooter.ShootDirection">
            <summary>
            Which direction to shoot
            </summary>
        </member>
        <member name="M:AngeliA.Platformer.BulletShooter.Shoot">
            <summary>
            Perform a shoot
            </summary>
        </member>
        <member name="M:AngeliA.Platformer.BulletShooter.OnBulletShoot(AngeliA.Bullet)">
            <summary>
            This function is called when a bullet shoot
            </summary>
        </member>
        <member name="T:AngeliA.Platformer.Burner`1">
            <summary>
            Entity that spawn a file entity repeately
            </summary>
            <typeparam name="F">Type of the fire entity</typeparam>
        </member>
        <member name="P:AngeliA.Platformer.Burner`1.FireFrequency">
            <summary>
            How many frame does it take to spawn another file
            </summary>
        </member>
        <member name="P:AngeliA.Platformer.Burner`1.FireDuration">
            <summary>
            How long does a single file stay
            </summary>
        </member>
        <member name="P:AngeliA.Platformer.Burner`1.Direction">
            <summary>
            Direction of the file
            </summary>
        </member>
        <member name="P:AngeliA.Platformer.Burner`1.AllowFireFromMapElement">
            <summary>
            Read fire type from overlaping map element block
            </summary>
        </member>
        <member name="T:AngeliA.Platformer.ChainCrusher">
            <summary>
            Entity holds a rotating chained ball to attack player
            </summary>
        </member>
        <member name="P:AngeliA.Platformer.ChainCrusher.Clockwise">
            <summary>
            True if the chained ball rotate in clockwise
            </summary>
        </member>
        <member name="P:AngeliA.Platformer.ChainCrusher.ChainLength">
            <summary>
            Length of the chain in global space
            </summary>
        </member>
        <member name="P:AngeliA.Platformer.ChainCrusher.RotateFrequency">
            <summary>
            How many frames does the rotation takes for a loop
            </summary>
        </member>
        <member name="P:AngeliA.Platformer.ChainCrusher.DamageAmount">
            <summary>
            Amount of damage it deals at once
            </summary>
        </member>
        <member name="P:AngeliA.Platformer.ChainCrusher.AttackTargetTeam">
            <summary>
            Which teams should be attack by the bullet
            </summary>
        </member>
        <member name="P:AngeliA.Platformer.ChainCrusher.SpikeBallSize">
            <summary>
            Size of the ball in global space
            </summary>
        </member>
        <member name="P:AngeliA.Platformer.ChainCrusher.ReleaseBallOnCircuitTrigger">
            <summary>
            True if the ball release when this entity being triggered by circuit
            </summary>
        </member>
        <member name="P:AngeliA.Platformer.ChainCrusher.ReleaseBallOnDamaged">
            <summary>
            True if the ball release when this entity take damage
            </summary>
        </member>
        <member name="M:AngeliA.Platformer.ChainCrusher.CalculateCurrentSpikeBallTransform">
            <summary>
            Calculate current ball position in global space and rotation
            </summary>
        </member>
        <member name="M:AngeliA.Platformer.ChainCrusher.OnReleaseBall">
            <summary>
            This function is called when the ball is released
            </summary>
        </member>
        <member name="T:AngeliA.Platformer.Conveyor">
            <summary>
            Entity that move the objects on top horizontaly
            </summary>
        </member>
        <member name="P:AngeliA.Platformer.Conveyor.MoveSpeed">
            <summary>
            Speed apply on object on top
            </summary>
        </member>
        <member name="P:AngeliA.Platformer.Conveyor.ArtCodeLeft">
            <summary>
            Artwork sprite ID for left facing block
            </summary>
        </member>
        <member name="P:AngeliA.Platformer.Conveyor.ArtCodeMid">
            <summary>
            Artwork sprite ID for middle block
            </summary>
        </member>
        <member name="P:AngeliA.Platformer.Conveyor.ArtCodeRight">
            <summary>
            Artwork sprite ID for right facing block
            </summary>
        </member>
        <member name="P:AngeliA.Platformer.Conveyor.ArtCodeSingle">
            <summary>
            Artwork sprite ID for isolated block
            </summary>
        </member>
        <member name="M:AngeliA.Platformer.Conveyor.ReloadPose">
            <summary>
            Reload fitting pose from map or stage
            </summary>
        </member>
        <member name="T:AngeliA.Platformer.Launcher">
            <summary>
            Entity that spawn a given target entity repeately
            </summary>
        </member>
        <member name="P:AngeliA.Platformer.Launcher.LaunchOffset">
            <summary>
            Starting position offset in global space for the launched entity
            </summary>
        </member>
        <member name="P:AngeliA.Platformer.Launcher.LaunchVelocity">
            <summary>
            Starting velocity for the launched entity
            </summary>
        </member>
        <member name="P:AngeliA.Platformer.Launcher.TargetEntityID">
            <summary>
            Launching entity type ID
            </summary>
        </member>
        <member name="P:AngeliA.Platformer.Launcher.FailbackEntityID">
            <summary>
            Launching entity with this type ID when the "TargetEntityID" is invalid
            </summary>
        </member>
        <member name="P:AngeliA.Platformer.Launcher.MaxLaunchCount">
            <summary>
            How many entities can it launch every time after the launcher spawned on stage
            </summary>
        </member>
        <member name="P:AngeliA.Platformer.Launcher.LaunchFrequency">
            <summary>
            How many frames does it takes to launch another entity
            </summary>
        </member>
        <member name="P:AngeliA.Platformer.Launcher.ItemCountPerLaunch">
            <summary>
            How many entity does it launch at once
            </summary>
        </member>
        <member name="P:AngeliA.Platformer.Launcher.AllowingAutoLaunch">
            <summary>
            True if the launcher perform launch every "LaunchFrequency" frames
            </summary>
        </member>
        <member name="P:AngeliA.Platformer.Launcher.LaunchOverlappingElement">
            <summary>
            True if launcher search entity target ID from overlapping map element
            </summary>
        </member>
        <member name="P:AngeliA.Platformer.Launcher.LaunchWhenEntranceBlocked">
            <summary>
            True if launcher can launch when the starting position is blocked by other entity
            </summary>
        </member>
        <member name="P:AngeliA.Platformer.Launcher.KeepLaunchedEntityInMap">
            <summary>
            True if the launched entities can reposition and save into the map
            </summary>
        </member>
        <member name="P:AngeliA.Platformer.Launcher.LaunchTowardsPlayer">
            <summary>
            True if the launcher always launch towards player horizontal location
            </summary>
        </member>
        <member name="P:AngeliA.Platformer.Launcher.UseMomentum">
            <summary>
            True if the entity is move by monentum instead of velocity
            </summary>
        </member>
        <member name="P:AngeliA.Platformer.ISlimeWalker.AttachingDirection">
            <summary>
            When this value is "Up" the walker will be upside-down. "Center" means not attaching anything.
            </summary>
        </member>
    </members>
</doc>

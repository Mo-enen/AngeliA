using System.Collections;
using System.Collections.Generic;
using AngeliaFramework;


namespace AngeliaGame {
	public static class ItemCombination {


		[AfterGameInitialize]
		public static void AfterGameInitialize () {

			General0();
			General1();
			General2();
			General3();
			General4();
			General5();
			General6();
			General7();
			General8();
			General9();
			General10();
			General11();
			General12();
			General13();
			General14();

			Food0();
			Food1();
			Food2();
			Food3();
			Food4();
			Food5();
			Food6();
			Food8();
			Food10();
			Food12();
			Food14();

		}


		private static void General0 () {

			Item.AddCombination(
				typeof(iTreeTrunk).AngeHash(),
				typeof(iRuneFire).AngeHash(),
				typeof(iRuneWater).AngeHash(),
				0,
				typeof(iChessPawn).AngeHash()
			);
			Item.AddCombination(
				typeof(iTreeTrunk).AngeHash(),
				typeof(iRuneFire).AngeHash(),
				typeof(iRuneLightning).AngeHash(),
				0,
				typeof(iChessKnight).AngeHash()
			);
			Item.AddCombination(
				typeof(iTreeTrunk).AngeHash(),
				typeof(iRuneFire).AngeHash(),
				typeof(iRunePoison).AngeHash(),
				0,
				typeof(iChessBishop).AngeHash()
			);
			Item.AddCombination(
				typeof(iTreeTrunk).AngeHash(),
				typeof(iRuneWater).AngeHash(),
				typeof(iRuneLightning).AngeHash(),
				0,
				typeof(iChessRook).AngeHash()
			);
			Item.AddCombination(
				typeof(iTreeTrunk).AngeHash(),
				typeof(iRuneWater).AngeHash(),
				typeof(iRunePoison).AngeHash(),
				0,
				typeof(iChessQueen).AngeHash()
			);
			Item.AddCombination(
				typeof(iTreeTrunk).AngeHash(),
				typeof(iRuneLightning).AngeHash(),
				typeof(iRunePoison).AngeHash(),
				0,
				typeof(iChessKing).AngeHash()
			);

			Item.AddCombination(
				typeof(iTreeStump).AngeHash(),
				typeof(iRuneFire).AngeHash(),
				typeof(iRuneWater).AngeHash(),
				0,
				typeof(iChessPawn).AngeHash()
			);
			Item.AddCombination(
				typeof(iTreeStump).AngeHash(),
				typeof(iRuneFire).AngeHash(),
				typeof(iRuneLightning).AngeHash(),
				0,
				typeof(iChessKnight).AngeHash()
			);
			Item.AddCombination(
				typeof(iTreeStump).AngeHash(),
				typeof(iRuneFire).AngeHash(),
				typeof(iRunePoison).AngeHash(),
				0,
				typeof(iChessBishop).AngeHash()
			);
			Item.AddCombination(
				typeof(iTreeStump).AngeHash(),
				typeof(iRuneWater).AngeHash(),
				typeof(iRuneLightning).AngeHash(),
				0,
				typeof(iChessRook).AngeHash()
			);
			Item.AddCombination(
				typeof(iTreeStump).AngeHash(),
				typeof(iRuneWater).AngeHash(),
				typeof(iRunePoison).AngeHash(),
				0,
				typeof(iChessQueen).AngeHash()
			);
			Item.AddCombination(
				typeof(iTreeStump).AngeHash(),
				typeof(iRuneLightning).AngeHash(),
				typeof(iRunePoison).AngeHash(),
				0,
				typeof(iChessKing).AngeHash()
			);

			Item.AddCombination(
				typeof(iIronCage).AngeHash(),
				typeof(iSpikeBall).AngeHash(),
				0,
				0,
				typeof(iTrap).AngeHash()
			);
			Item.AddCombination(
				typeof(iFabric).AngeHash(),
				typeof(iNeedle).AngeHash(),
				typeof(iCottonBall).AngeHash(),
				0,
				typeof(iCurseDoll).AngeHash()
			);
			Item.AddCombination(
				typeof(iTakodachi).AngeHash(),
				typeof(iAntimatterCookie).AngeHash(),
				0,
				0,
				typeof(iTruthOfTheUniverse).AngeHash()
			);
			Item.AddCombination(
				typeof(iCookie).AngeHash(),
				typeof(iAntimatter).AngeHash(),
				0,
				0,
				typeof(iAntimatterCookie).AngeHash()
			);
			Item.AddCombination(
				typeof(iDice).AngeHash(),
				typeof(iTotemFire).AngeHash(),
				typeof(iTotemWater).AngeHash(),
				typeof(iTotemLightning).AngeHash(),
				typeof(iRuneCube).AngeHash()
			);
			Item.AddCombination(
				typeof(iDice).AngeHash(),
				typeof(iTotemFire).AngeHash(),
				typeof(iTotemWater).AngeHash(),
				typeof(iTotemPoison).AngeHash(),
				typeof(iRuneCube).AngeHash()
			);
			Item.AddCombination(
				typeof(iDice).AngeHash(),
				typeof(iTotemFire).AngeHash(),
				typeof(iTotemPoison).AngeHash(),
				typeof(iTotemLightning).AngeHash(),
				typeof(iRuneCube).AngeHash()
			);
			Item.AddCombination(
				typeof(iDice).AngeHash(),
				typeof(iTotemPoison).AngeHash(),
				typeof(iTotemWater).AngeHash(),
				typeof(iTotemLightning).AngeHash(),
				typeof(iRuneCube).AngeHash()
			);

			Item.AddCombination(
				typeof(iEyeBall).AngeHash(),
				typeof(iTentacle).AngeHash(),
				typeof(iTentacle).AngeHash(),
				typeof(iTentacle).AngeHash(),
				typeof(iOracleEye).AngeHash()
			);
			Item.AddCombination(
				typeof(iIngotIron).AngeHash(),
				typeof(iBowlingBall).AngeHash(),
				typeof(iBowlingBall).AngeHash(),
				0,
				typeof(iDumbbell).AngeHash()
			);
			Item.AddCombination(
				typeof(iIngotGold).AngeHash(),
				typeof(iMedalGold).AngeHash(),
				0,
				0,
				typeof(iBadgeGold).AngeHash()
			);
			Item.AddCombination(
				typeof(iIngotIron).AngeHash(),
				typeof(iMedalIron).AngeHash(),
				0,
				0,
				typeof(iBadgeIron).AngeHash()
			);

		}


		private static void General1 () {

			Item.AddCombination(
				typeof(iItemSand).AngeHash(),
				typeof(iPotionEmpty).AngeHash(),
				typeof(iPotionEmpty).AngeHash(),
				0,
				typeof(iHourglass).AngeHash()
			);
			Item.AddCombination(
				typeof(iPaper).AngeHash(),
				typeof(iCompass).AngeHash(),
				typeof(iCrayon).AngeHash(),
				0,
				typeof(iMap).AngeHash()
			);
			Item.AddCombination(
				typeof(iMagnet).AngeHash(),
				typeof(iTrayWood).AngeHash(),
				0,
				0,
				typeof(iCompass).AngeHash()
			);
			Item.AddCombination(
				typeof(iLeather).AngeHash(),
				typeof(iLeather).AngeHash(),
				0,
				0,
				typeof(iBasketball).AngeHash()
			);
			Item.AddCombination(
				typeof(iWoodBoard).AngeHash(),
				typeof(iWoodBoard).AngeHash(),
				0,
				0,
				typeof(iCuttingBoard).AngeHash()
			);

			Item.AddCombination(
				typeof(iStonePolished).AngeHash(),
				typeof(iCross).AngeHash(),
				typeof(iCuttingBoard).AngeHash(),
				0,
				typeof(iTombstone).AngeHash()
			);
			Item.AddCombination(
				typeof(iFabric).AngeHash(),
				typeof(iTreeBranch).AngeHash(),
				0,
				0,
				typeof(iFlag).AngeHash()
			);
			Item.AddCombination(
				typeof(iPaper).AngeHash(),
				typeof(iRuneWater).AngeHash(),
				0,
				0,
				typeof(iToiletPaper).AngeHash()
			);
			Item.AddCombination(
				typeof(iRibbon).AngeHash(),
				typeof(iTreeTrunk).AngeHash(),
				typeof(iLeaf).AngeHash(),
				0,
				typeof(iChristmasTree).AngeHash()
			);

			Item.AddCombination(
				typeof(iWheel).AngeHash(),
				typeof(iCrayon).AngeHash(),
				0,
				0,
				typeof(iDartBoard).AngeHash()
			);
			Item.AddCombination(
				typeof(iIngotIron).AngeHash(),
				typeof(iIngotIron).AngeHash(),
				typeof(iIngotIron).AngeHash(),
				typeof(iCharcoal).AngeHash(),
				typeof(iAnvil).AngeHash()
			);
			Item.AddCombination(
				typeof(iRuneCube).AngeHash(),
				typeof(iCuteGhost).AngeHash(),
				typeof(iLaptop).AngeHash(),
				typeof(iPositronScanner).AngeHash(),
				typeof(iAntimatter).AngeHash()
			);
			Item.AddCombination(
				typeof(iBasketball).AngeHash(),
				typeof(iIngotIron).AngeHash(),
				0,
				0,
				typeof(iBowlingBall).AngeHash()
			);
			Item.AddCombination(
				typeof(iVolatilePotionEmpty).AngeHash(),
				typeof(iLegoBlockWhite).AngeHash(),
				0,
				0,
				typeof(iRubberBall).AngeHash()
			);

		}


		private static void General2 () {
			Item.AddCombination(
				typeof(iBowlingBall).AngeHash(),
				typeof(iBolt).AngeHash(),
				typeof(iBolt).AngeHash(),
				typeof(iBolt).AngeHash(),
				typeof(iSpikeBall).AngeHash()
			);
			Item.AddCombination(
				typeof(iIronWire).AngeHash(),
				typeof(iCorrugatedBox).AngeHash(),
				typeof(iLockIron).AngeHash(),
				0,
				typeof(iIronCage).AngeHash()
			);
			Item.AddCombination(
				typeof(iBucketIron).AngeHash(),
				typeof(iGunpowder).AngeHash(),
				0,
				0,
				typeof(iExplosiveBarrel).AngeHash()
			);
			Item.AddCombination(
				typeof(iLens).AngeHash(),
				typeof(iTreeStump).AngeHash(),
				0,
				0,
				typeof(iTelescope).AngeHash()
			);
			Item.AddCombination(
				typeof(iMusicNote).AngeHash(),
				typeof(iTrayWood).AngeHash(),
				typeof(iRuneFire).AngeHash(),
				typeof(iLegoBlockWhite).AngeHash(),
				typeof(iVinyl).AngeHash()
			);
			Item.AddCombination(
				typeof(iGlass).AngeHash(),
				typeof(iTrayWood).AngeHash(),
				typeof(iRuneFire).AngeHash(),
				0,
				typeof(iLens).AngeHash()
			);
			Item.AddCombination(
				typeof(iItemSand).AngeHash(),
				typeof(iRuneFire).AngeHash(),
				0,
				0,
				typeof(iGlass).AngeHash()
			);
			Item.AddCombination(
				typeof(iLegoBlockRed).AngeHash(),
				typeof(iFlowerWhite).AngeHash(),
				0,
				0,
				typeof(iLegoBlockWhite).AngeHash()
			);
			Item.AddCombination(
				typeof(iFlowerWhite).AngeHash(),
				typeof(iFlowerRed).AngeHash(),
				0,
				0,
				typeof(iLegoBlockRed).AngeHash()
			);
			Item.AddCombination(
				typeof(iTreeBranch).AngeHash(),
				typeof(iCharcoal).AngeHash(),
				0,
				0,
				typeof(iPencil).AngeHash()
			);
			Item.AddCombination(
				typeof(iRibbon).AngeHash(),
				typeof(iRibbon).AngeHash(),
				0,
				0,
				typeof(iBowTie).AngeHash()
			);
			Item.AddCombination(
				typeof(iIronWire).AngeHash(),
				typeof(iBolt).AngeHash(),
				0,
				0,
				typeof(iSpringIron).AngeHash()
			);
			Item.AddCombination(
				typeof(iIronWire).AngeHash(),
				typeof(iIngotIron).AngeHash(),
				0,
				0,
				typeof(iIronHook).AngeHash()
			);
			Item.AddCombination(
				typeof(iClay).AngeHash(),
				typeof(iHerb).AngeHash(),
				typeof(iRuneFire).AngeHash(),
				0,
				typeof(iPipeClay).AngeHash()
			);
		}


		private static void General3 () {

			Item.AddCombination(
				typeof(iFirecracker).AngeHash(),
				typeof(iRibbon).AngeHash(),
				0,
				0,
				typeof(iConfetti).AngeHash()
			);
			Item.AddCombination(
				typeof(iPencil).AngeHash(),
				typeof(iClay).AngeHash(),
				0,
				0,
				typeof(iCrayon).AngeHash()
			);
			Item.AddCombination(
				typeof(iIngotIron).AngeHash(),
				typeof(iIngotIron).AngeHash(),
				typeof(iIronWire).AngeHash(),
				0,
				typeof(iBucketIron).AngeHash()
			);
			Item.AddCombination(
				typeof(iFabric).AngeHash(),
				0,
				0,
				0,
				typeof(iRibbon).AngeHash(), 4
			);
			Item.AddCombination(
				typeof(iBucketIron).AngeHash(),
				typeof(iRuneWater).AngeHash(),
				0,
				0,
				typeof(iBottledWater).AngeHash()
			);
			Item.AddCombination(
				typeof(iGourd).AngeHash(),
				0,
				0,
				0,
				typeof(iTrayWood).AngeHash(), 4
			);
			Item.AddCombination(
				typeof(iLegoBlockWhite).AngeHash(),
				typeof(iLegoBlockRed).AngeHash(),
				typeof(iHerb).AngeHash(),
				0,
				typeof(iCapsule).AngeHash()
			);
			Item.AddCombination(
				typeof(iPaw).AngeHash(),
				typeof(iLove).AngeHash(),
				typeof(iBowTie).AngeHash(),
				typeof(iCorn).AngeHash(),
				typeof(iSucorn).AngeHash()
			);
			Item.AddCombination(
				typeof(iSucorn).AngeHash(),
				typeof(iBambooShoot).AngeHash(),
				0,
				0,
				typeof(iOruyanke).AngeHash()
			);
			Item.AddCombination(
				typeof(iRubberBall).AngeHash(),
				typeof(iRubberBall).AngeHash(),
				0,
				0,
				typeof(iRubberDuck).AngeHash()
			);
		}


		private static void General4 () {

			Item.AddCombination(
				typeof(iGemBlue).AngeHash(),
				typeof(iGemGreen).AngeHash(),
				typeof(iEyeBall).AngeHash(),
				typeof(iCuteGhost).AngeHash(),
				typeof(iCrystalBall).AngeHash()
			);
			Item.AddCombination(
				typeof(iLegoBlockWhite).AngeHash(),
				typeof(iLegoBlockWhite).AngeHash(),
				typeof(iLegoBlockRed).AngeHash(),
				typeof(iLegoBlockRed).AngeHash(),
				typeof(iCone).AngeHash()
			);
			Item.AddCombination(
				typeof(iMusicNote).AngeHash(),
				typeof(iHorn).AngeHash(),
				typeof(iWoodBoard).AngeHash(),
				typeof(iVinyl).AngeHash(),
				typeof(iPhonograph).AngeHash()
			);
			Item.AddCombination(
				typeof(iMeatBone).AngeHash(),
				typeof(iMusicNote).AngeHash(),
				0,
				0,
				typeof(iHorn).AngeHash()
			);
			Item.AddCombination(
				typeof(iHorn).AngeHash(),
				typeof(iMusicNote).AngeHash(),
				typeof(iButton).AngeHash(),
				0,
				typeof(iCornet).AngeHash()
			);
			Item.AddCombination(
				typeof(iMusicNote).AngeHash(),
				typeof(iCornet).AngeHash(),
				typeof(iButton).AngeHash(),
				0,
				typeof(iSaxophone).AngeHash()
			);
			Item.AddCombination(
				typeof(iGourd).AngeHash(),
				typeof(iMusicNote).AngeHash(),
				typeof(iIronWire).AngeHash(),
				0,
				typeof(iGuitar).AngeHash()
			);
			Item.AddCombination(
				typeof(iLeather).AngeHash(),
				typeof(iBucketIron).AngeHash(),
				typeof(iMusicNote).AngeHash(),
				0,
				typeof(iDrum).AngeHash()
			);
			Item.AddCombination(
				typeof(iMusicNote).AngeHash(),
				typeof(iClay).AngeHash(),
				0,
				0,
				typeof(iOcarina).AngeHash()
			);
			Item.AddCombination(
				typeof(iLegoBlockWhite).AngeHash(),
				typeof(iButton).AngeHash(),
				typeof(iBattery).AngeHash(),
				0,
				typeof(iGamepad).AngeHash()
			);
			Item.AddCombination(
				typeof(iLegoBlockWhite).AngeHash(),
				typeof(iButton).AngeHash(),
				typeof(iButton).AngeHash(),
				0,
				typeof(iKeyboard).AngeHash()
			);
			Item.AddCombination(
				typeof(iLegoBlockWhite).AngeHash(),
				typeof(iLegoBlockWhite).AngeHash(),
				typeof(iGlass).AngeHash(),
				typeof(iGlass).AngeHash(),
				typeof(iMonitor).AngeHash()
			);
			Item.AddCombination(
				typeof(iIngotIron).AngeHash(),
				typeof(iIngotIron).AngeHash(),
				typeof(iIngotIron).AngeHash(),
				typeof(iWheel).AngeHash(),
				typeof(iPropeller).AngeHash()
			);
			Item.AddCombination(
				typeof(iLegoBlockWhite).AngeHash(),
				typeof(iLegoBlockRed).AngeHash(),
				0,
				0,
				typeof(iButton).AngeHash()
			);
			Item.AddCombination(
				typeof(iElectricWire).AngeHash(),
				typeof(iPotatoCut).AngeHash(),
				0,
				0,
				typeof(iBattery).AngeHash()
			);
			Item.AddCombination(
				typeof(iElectricWire).AngeHash(),
				typeof(iLemonCut).AngeHash(),
				0,
				0,
				typeof(iBattery).AngeHash()
			);
			Item.AddCombination(
				typeof(iElectricWire).AngeHash(),
				typeof(iLimeCut).AngeHash(),
				0,
				0,
				typeof(iBattery).AngeHash()
			);

		}


		private static void General5 () {

			Item.AddCombination(
				typeof(iRope).AngeHash(),
				typeof(iCottonBall).AngeHash(),
				0,
				0,
				typeof(iYarn).AngeHash()
			);
			Item.AddCombination(
				typeof(iLove).AngeHash(),
				typeof(iFabric).AngeHash(),
				typeof(iCottonBall).AngeHash(),
				typeof(iPaw).AngeHash(),
				typeof(iTeddyBearDoll).AngeHash()
			);
			Item.AddCombination(
				typeof(iLove).AngeHash(),
				typeof(iLegoBlockWhite).AngeHash(),
				typeof(iBowTie).AngeHash(),
				0,
				typeof(iBarbieDoll).AngeHash()
			);
			Item.AddCombination(
				typeof(iYarn).AngeHash(),
				typeof(iYarn).AngeHash(),
				typeof(iYarn).AngeHash(),
				typeof(iYarn).AngeHash(),
				typeof(iFabric).AngeHash()
			);
			Item.AddCombination(
				typeof(iTreeBranch).AngeHash(),
				typeof(iRuneFire).AngeHash(),
				0,
				0,
				typeof(iTorch).AngeHash()
			);
			Item.AddCombination(
				typeof(iIngotIron).AngeHash(),
				typeof(iBolt).AngeHash(),
				0,
				0,
				typeof(iDrill).AngeHash()
			);
			Item.AddCombination(
				typeof(iIngotIron).AngeHash(),
				typeof(iBeefCooked).AngeHash(),
				0,
				0,
				typeof(iSoupCan).AngeHash()
			);
			Item.AddCombination(
				typeof(iIngotIron).AngeHash(),
				typeof(iChickenLegCooked).AngeHash(),
				0,
				0,
				typeof(iSoupCan).AngeHash()
			);
			Item.AddCombination(
				typeof(iIngotIron).AngeHash(),
				typeof(iChickenWingCooked).AngeHash(),
				0,
				0,
				typeof(iSoupCan).AngeHash()
			);
			Item.AddCombination(
				typeof(iIngotIron).AngeHash(),
				typeof(iPorkCooked).AngeHash(),
				0,
				0,
				typeof(iSoupCan).AngeHash()
			);
			Item.AddCombination(
				typeof(iIngotIron).AngeHash(),
				typeof(iMeatballCooked).AngeHash(),
				0,
				0,
				typeof(iSoupCan).AngeHash()
			);
			Item.AddCombination(
				typeof(iTreeStump).AngeHash(),
				typeof(iIngotIron).AngeHash(),
				typeof(iRubberBall).AngeHash(),
				0,
				typeof(iWheel).AngeHash()
			);
			Item.AddCombination(
				typeof(iPaper).AngeHash(),
				typeof(iPaper).AngeHash(),
				typeof(iWoodBoard).AngeHash(),
				typeof(iWoodBoard).AngeHash(),
				typeof(iCorrugatedBox).AngeHash()
			);
			Item.AddCombination(
				typeof(iFabric).AngeHash(),
				typeof(iCottonBall).AngeHash(),
				0,
				0,
				typeof(iPillow).AngeHash()
			);
			Item.AddCombination(
				typeof(iIngotGold).AngeHash(),
				typeof(iGlass).AngeHash(),
				0,
				0,
				typeof(iMirror).AngeHash()
			);

		}


		private static void General6 () {


			Item.AddCombination(
				typeof(iGamepad).AngeHash(),
				typeof(iMonitor).AngeHash(),
				typeof(iProcessor).AngeHash(),
				0,
				typeof(iGameConsole).AngeHash()
			);
			Item.AddCombination(
				typeof(iHourglass).AngeHash(),
				typeof(iBattery).AngeHash(),
				typeof(iLegoBlockWhite).AngeHash(),
				0,
				typeof(iWatch).AngeHash()
			);
			Item.AddCombination(
				typeof(iDrill).AngeHash(),
				typeof(iBattery).AngeHash(),
				typeof(iLegoBlockWhite).AngeHash(),
				0,
				typeof(iElectricDrill).AngeHash()
			);
			Item.AddCombination(
				typeof(iGamepad).AngeHash(),
				typeof(iDice).AngeHash(),
				typeof(iPokerCard).AngeHash(),
				0,
				typeof(iSlotMachine).AngeHash()
			);
			Item.AddCombination(
				typeof(iGuitar).AngeHash(),
				typeof(iBattery).AngeHash(),
				0,
				0,
				typeof(iBass).AngeHash()
			);
			Item.AddCombination(
				typeof(iWatch).AngeHash(),
				typeof(iBell).AngeHash(),
				typeof(iBell).AngeHash(),
				0,
				typeof(iAlarmClock).AngeHash()
			);
			Item.AddCombination(
				typeof(iElectricDrill).AngeHash(),
				typeof(iPropeller).AngeHash(),
				0,
				0,
				typeof(iFan).AngeHash()
			);
			Item.AddCombination(
				typeof(iElectricWire).AngeHash(),
				typeof(iMagnet).AngeHash(),
				typeof(iLegoBlockWhite).AngeHash(),
				typeof(iBattery).AngeHash(),
				typeof(iRadio).AngeHash()
			);
			Item.AddCombination(
				typeof(iKeyboard).AngeHash(),
				typeof(iMusicNote).AngeHash(),
				typeof(iBattery).AngeHash(),
				0,
				typeof(iPianoKeyboard).AngeHash()
			);
			Item.AddCombination(
				typeof(iLens).AngeHash(),
				typeof(iLegoBlockWhite).AngeHash(),
				typeof(iButton).AngeHash(),
				typeof(iBulb).AngeHash(),
				typeof(iCamera).AngeHash()
			);
			Item.AddCombination(
				typeof(iCamera).AngeHash(),
				typeof(iBattery).AngeHash(),
				typeof(iWheel).AngeHash(),
				typeof(iWheel).AngeHash(),
				typeof(iVideoRecorder).AngeHash()
			);
			Item.AddCombination(
				typeof(iPhone).AngeHash(),
				typeof(iRadio).AngeHash(),
				typeof(iSlotMachine).AngeHash(),
				typeof(iVideoRecorder).AngeHash(),
				typeof(iPositronScanner).AngeHash()
			);
			Item.AddCombination(
				typeof(iRuneFire).AngeHash(),
				typeof(iButton).AngeHash(),
				typeof(iLegoBlockWhite).AngeHash(),
				0,
				typeof(iLighter).AngeHash()
			);
			Item.AddCombination(
				typeof(iMonitor).AngeHash(),
				typeof(iKeyboard).AngeHash(),
				typeof(iProcessor).AngeHash(),
				typeof(iBattery).AngeHash(),
				typeof(iLaptop).AngeHash()
			);
			Item.AddCombination(
				typeof(iMonitor).AngeHash(),
				typeof(iProcessor).AngeHash(),
				typeof(iBattery).AngeHash(),
				0,
				typeof(iPhone).AngeHash()
			);

		}


		private static void General7 () {

			Item.AddCombination(
				typeof(iWatch).AngeHash(),
				typeof(iIngotGold).AngeHash(),
				0,
				0,
				typeof(iWatchLegend).AngeHash()
			);
			Item.AddCombination(
				typeof(iTelescope).AngeHash(),
				typeof(iIngotGold).AngeHash(),
				0,
				0,
				typeof(iTelescopeLegend).AngeHash()
			);
			Item.AddCombination(
				typeof(iHourglass).AngeHash(),
				typeof(iIngotGold).AngeHash(),
				0,
				0,
				typeof(iHourglassLegend).AngeHash()
			);
			Item.AddCombination(
				typeof(iBell).AngeHash(),
				typeof(iBell).AngeHash(),
				typeof(iRope).AngeHash(),
				typeof(iIngotGold).AngeHash(),
				typeof(iBegleriLegend).AngeHash()
			);
			Item.AddCombination(
				typeof(iSpringIron).AngeHash(),
				typeof(iIngotGold).AngeHash(),
				0,
				0,
				typeof(iSpringLegend).AngeHash()
			);
			Item.AddCombination(
				typeof(iGameConsole).AngeHash(),
				typeof(iIngotGold).AngeHash(),
				0,
				0,
				typeof(iGameboyLegend).AngeHash()
			);
			Item.AddCombination(
				typeof(iGamepad).AngeHash(),
				typeof(iIngotGold).AngeHash(),
				0,
				0,
				typeof(iGamepadLegend).AngeHash()
			);
			Item.AddCombination(
				typeof(iPencil).AngeHash(),
				typeof(iIngotGold).AngeHash(),
				0,
				0,
				typeof(iPenLegend).AngeHash()
			);
			Item.AddCombination(
				typeof(iBook).AngeHash(),
				typeof(iIngotGold).AngeHash(),
				0,
				0,
				typeof(iNotepadLegend).AngeHash()
			);
			Item.AddCombination(
				typeof(iIronHook).AngeHash(),
				typeof(iIngotGold).AngeHash(),
				0,
				0,
				typeof(iHookLegend).AngeHash()
			);
			Item.AddCombination(
				typeof(iHandFan).AngeHash(),
				typeof(iIngotGold).AngeHash(),
				0,
				0,
				typeof(iHandFanLegend).AngeHash()
			);
			Item.AddCombination(
				typeof(iKeyGold).AngeHash(),
				typeof(iIngotGold).AngeHash(),
				typeof(iGemBlue).AngeHash(),
				typeof(iGemGreen).AngeHash(),
				typeof(iKeyLegend).AngeHash()
			);
			Item.AddCombination(
				typeof(iPipeClay).AngeHash(),
				typeof(iIngotGold).AngeHash(),
				0,
				0,
				typeof(iPipeLegend).AngeHash()
			);
			Item.AddCombination(
				typeof(iCross).AngeHash(),
				typeof(iIngotGold).AngeHash(),
				0,
				0,
				typeof(iCrossLegend).AngeHash()
			);
			Item.AddCombination(
				typeof(iLeaf).AngeHash(),
				typeof(iIngotGold).AngeHash(),
				0,
				0,
				typeof(iLeafLegend).AngeHash()
			);

		}


		private static void General8 () {

			Item.AddCombination(
				typeof(iBook).AngeHash(),
				typeof(iRuneFire).AngeHash(),
				0,
				0,
				typeof(iBookRed).AngeHash()
			);
			Item.AddCombination(
				typeof(iBook).AngeHash(),
				typeof(iRuneWater).AngeHash(),
				0,
				0,
				typeof(iBookBlue).AngeHash()
			);
			Item.AddCombination(
				typeof(iBook).AngeHash(),
				typeof(iRuneLightning).AngeHash(),
				0,
				0,
				typeof(iBookYellow).AngeHash()
			);
			Item.AddCombination(
				typeof(iBook).AngeHash(),
				typeof(iRunePoison).AngeHash(),
				0,
				0,
				typeof(iBookGreen).AngeHash()
			);
			Item.AddCombination(
				typeof(iPaper).AngeHash(),
				typeof(iPaper).AngeHash(),
				typeof(iPaper).AngeHash(),
				typeof(iPaper).AngeHash(),
				typeof(iBook).AngeHash()
			);
			Item.AddCombination(
				typeof(iIngotGold).AngeHash(),
				typeof(iRibbon).AngeHash(),
				0,
				0,
				typeof(iMedalGold).AngeHash()
			);
			Item.AddCombination(
				typeof(iIngotIron).AngeHash(),
				typeof(iRibbon).AngeHash(),
				0,
				0,
				typeof(iMedalIron).AngeHash()
			);
			Item.AddCombination(
				typeof(iTreeBranch).AngeHash(),
				typeof(iTreeBranch).AngeHash(),
				0,
				0,
				typeof(iCross).AngeHash()
			);
			Item.AddCombination(
				typeof(iIngotGold).AngeHash(),
				typeof(iMusicNote).AngeHash(),
				0,
				0,
				typeof(iBell).AngeHash()
			);
			Item.AddCombination(
				typeof(iLetter).AngeHash(),
				typeof(iMagnet).AngeHash(),
				0,
				0,
				typeof(iFloppyDisk).AngeHash()
			);
			Item.AddCombination(
				typeof(iMagnet).AngeHash(),
				typeof(iMusicNote).AngeHash(),
				typeof(iRibbon).AngeHash(),
				0,
				typeof(iTape).AngeHash()
			);
			Item.AddCombination(
				typeof(iPaper).AngeHash(),
				typeof(iPaper).AngeHash(),
				typeof(iPaper).AngeHash(),
				typeof(iTreeBranch).AngeHash(),
				typeof(iScroll).AngeHash()
			);
			Item.AddCombination(
				typeof(iCorrugatedBox).AngeHash(),
				typeof(iRibbon).AngeHash(),
				0,
				0,
				typeof(iGiftBox).AngeHash()
			);
			Item.AddCombination(
				typeof(iLegoBlockWhite).AngeHash(),
				typeof(iRuneFire).AngeHash(),
				0,
				0,
				typeof(iCandle).AngeHash()
			);

		}


		private static void General9 () {

			Item.AddCombination(
				typeof(iGem).AngeHash(),
				typeof(iRuneFire).AngeHash(),
				0,
				0,
				typeof(iGemRed).AngeHash()
			);
			Item.AddCombination(
				typeof(iGem).AngeHash(),
				typeof(iRuneWater).AngeHash(),
				0,
				0,
				typeof(iGemBlue).AngeHash()
			);
			Item.AddCombination(
				typeof(iGem).AngeHash(),
				typeof(iRuneLightning).AngeHash(),
				0,
				0,
				typeof(iGemOrange).AngeHash()
			);
			Item.AddCombination(
				typeof(iGem).AngeHash(),
				typeof(iRunePoison).AngeHash(),
				0,
				0,
				typeof(iGemGreen).AngeHash()
			);
			Item.AddCombination(
				typeof(iRuby).AngeHash(),
				typeof(iRuby).AngeHash(),
				typeof(iRuby).AngeHash(),
				typeof(iRuby).AngeHash(),
				typeof(iGem).AngeHash()
			);
			Item.AddCombination(
				typeof(iRubyRed).AngeHash(),
				typeof(iRubyRed).AngeHash(),
				typeof(iRubyRed).AngeHash(),
				typeof(iRubyRed).AngeHash(),
				typeof(iGemRed).AngeHash()
			);
			Item.AddCombination(
				typeof(iRubyBlue).AngeHash(),
				typeof(iRubyBlue).AngeHash(),
				typeof(iRubyBlue).AngeHash(),
				typeof(iRubyBlue).AngeHash(),
				typeof(iGemBlue).AngeHash()
			);
			Item.AddCombination(
				typeof(iRubyOrange).AngeHash(),
				typeof(iRubyOrange).AngeHash(),
				typeof(iRubyOrange).AngeHash(),
				typeof(iRubyOrange).AngeHash(),
				typeof(iGemOrange).AngeHash()
			);
			Item.AddCombination(
				typeof(iRubyGreen).AngeHash(),
				typeof(iRubyGreen).AngeHash(),
				typeof(iRubyGreen).AngeHash(),
				typeof(iRubyGreen).AngeHash(),
				typeof(iGemGreen).AngeHash()
			);
			Item.AddCombination(
				typeof(iLove).AngeHash(),
				typeof(iTentacle).AngeHash(),
				typeof(iTooth).AngeHash(),
				typeof(iCookie).AngeHash(),
				typeof(iTakodachi).AngeHash()
			);
			Item.AddCombination(
				typeof(iClay).AngeHash(),
				typeof(iClay).AngeHash(),
				typeof(iClay).AngeHash(),
				typeof(iClay).AngeHash(),
				typeof(iFlowerpot).AngeHash()
			);
			Item.AddCombination(
				typeof(iFlowerpot).AngeHash(),
				typeof(iLeaf).AngeHash(),
				0,
				0,
				typeof(iPottedPlant).AngeHash()
			);

		}


		private static void General10 () {

			Item.AddCombination(
				typeof(iRuby).AngeHash(),
				typeof(iRuneFire).AngeHash(),
				0,
				0,
				typeof(iRubyRed).AngeHash()
			);
			Item.AddCombination(
				typeof(iRuby).AngeHash(),
				typeof(iRuneWater).AngeHash(),
				0,
				0,
				typeof(iRubyBlue).AngeHash()
			);
			Item.AddCombination(
				typeof(iRuby).AngeHash(),
				typeof(iRuneLightning).AngeHash(),
				0,
				0,
				typeof(iRubyOrange).AngeHash()
			);
			Item.AddCombination(
				typeof(iRuby).AngeHash(),
				typeof(iRunePoison).AngeHash(),
				0,
				0,
				typeof(iRubyGreen).AngeHash()
			);
			Item.AddCombination(
				typeof(iIngotIron).AngeHash(),
				typeof(iMeatBone).AngeHash(),
				0,
				0,
				typeof(iSpoonFork).AngeHash()
			);
			Item.AddCombination(
				typeof(iIngotIron).AngeHash(),
				typeof(iKeyIron).AngeHash(),
				0,
				0,
				typeof(iLockIron).AngeHash()
			);
			Item.AddCombination(
				typeof(iIngotGold).AngeHash(),
				typeof(iKeyGold).AngeHash(),
				0,
				0,
				typeof(iLockGold).AngeHash()
			);
			Item.AddCombination(
				typeof(iClay).AngeHash(),
				typeof(iLeaf).AngeHash(),
				typeof(iRuneWater).AngeHash(),
				0,
				typeof(iTeapot).AngeHash()
			);
			Item.AddCombination(
				typeof(iIngotIron).AngeHash(),
				0,
				0,
				0,
				typeof(iBolt).AngeHash(), 4
			);
			Item.AddCombination(
				typeof(iPaper).AngeHash(),
				typeof(iDice).AngeHash(),
				0,
				0,
				typeof(iPokerCard).AngeHash()
			);
			Item.AddCombination(
				typeof(iItemCoin).AngeHash(),
				typeof(iDice).AngeHash(),
				0,
				0,
				typeof(iGamblingChip).AngeHash()
			);

		}


		private static void General11 () {

			Item.AddCombination(
				typeof(iSkull).AngeHash(),
				typeof(iRuneFire).AngeHash(),
				0,
				0,
				typeof(iTotemFire).AngeHash()
			);
			Item.AddCombination(
				typeof(iSkull).AngeHash(),
				typeof(iRuneWater).AngeHash(),
				0,
				0,
				typeof(iTotemWater).AngeHash()
			);
			Item.AddCombination(
				typeof(iSkull).AngeHash(),
				typeof(iRuneLightning).AngeHash(),
				0,
				0,
				typeof(iTotemLightning).AngeHash()
			);
			Item.AddCombination(
				typeof(iSkull).AngeHash(),
				typeof(iRunePoison).AngeHash(),
				0,
				0,
				typeof(iTotemPoison).AngeHash()
			);
			Item.AddCombination(
				typeof(iLetter).AngeHash(),
				typeof(iElectricWire).AngeHash(),
				0,
				0,
				typeof(iDialogBox).AngeHash()
			);
			Item.AddCombination(
				typeof(iTreeBranchBundle).AngeHash(),
				typeof(iWoodBoard).AngeHash(),
				typeof(iRuneWater).AngeHash(),
				0,
				typeof(iPaper).AngeHash()
			);
			Item.AddCombination(
				typeof(iIngotGold).AngeHash(),
				0,
				0,
				0,
				typeof(iItemCoin).AngeHash(), 100
			);
			Item.AddCombination(
				typeof(iLeaf).AngeHash(),
				typeof(iRunePoison).AngeHash(),
				0,
				0,
				typeof(iHerb).AngeHash()
			);
			Item.AddCombination(
				typeof(iElectricWire).AngeHash(),
				typeof(iIngotIron).AngeHash(),
				typeof(iBookYellow).AngeHash(),
				typeof(iRuneLightning).AngeHash(),
				typeof(iProcessor).AngeHash()
			);
			Item.AddCombination(
				typeof(iTreeBranch).AngeHash(),
				typeof(iRope).AngeHash(),
				typeof(iTrayWood).AngeHash(),
				typeof(iTrayWood).AngeHash(),
				typeof(iScales).AngeHash()
			);

		}


		private static void General12 () {
			Item.AddCombination(
				typeof(iVolatilePotionEmpty).AngeHash(),
				typeof(iRuneFire).AngeHash(),
				0,
				0,
				typeof(iVolatilePotionRed).AngeHash()
			);
			Item.AddCombination(
				typeof(iVolatilePotionEmpty).AngeHash(),
				typeof(iRuneWater).AngeHash(),
				0,
				0,
				typeof(iVolatilePotionBlue).AngeHash()
			);
			Item.AddCombination(
				typeof(iVolatilePotionEmpty).AngeHash(),
				typeof(iRuneLightning).AngeHash(),
				0,
				0,
				typeof(iVolatilePotionOrange).AngeHash()
			);
			Item.AddCombination(
				typeof(iVolatilePotionEmpty).AngeHash(),
				typeof(iRunePoison).AngeHash(),
				0,
				0,
				typeof(iVolatilePotionGreen).AngeHash()
			);
			Item.AddCombination(
				typeof(iGlass).AngeHash(),
				typeof(iGlass).AngeHash(),
				0,
				0,
				typeof(iVolatilePotionEmpty).AngeHash()
			);
			Item.AddCombination(
				typeof(iTreeBranch).AngeHash(),
				0,
				0,
				0,
				typeof(iRope).AngeHash(), 4
			);
			Item.AddCombination(
				typeof(iRope).AngeHash(),
				typeof(iIngotIron).AngeHash(),
				0,
				0,
				typeof(iIronWire).AngeHash()
			);
			Item.AddCombination(
				typeof(iIronWire).AngeHash(),
				typeof(iRuneLightning).AngeHash(),
				0,
				0,
				typeof(iElectricWire).AngeHash()
			);
			Item.AddCombination(
				typeof(iTreeBranch).AngeHash(),
				typeof(iTreeBranch).AngeHash(),
				typeof(iTreeBranch).AngeHash(),
				typeof(iRope).AngeHash(),
				typeof(iTreeBranchBundle).AngeHash()
			);
			Item.AddCombination(
				typeof(iTreeTrunk).AngeHash(),
				typeof(iTreeTrunk).AngeHash(),
				typeof(iTreeTrunk).AngeHash(),
				0,
				typeof(iWoodBoard).AngeHash()
			);
			Item.AddCombination(
				typeof(iTreeStump).AngeHash(),
				typeof(iTreeStump).AngeHash(),
				0,
				0,
				typeof(iWoodBoard).AngeHash()
			);
			Item.AddCombination(
				typeof(iMedalGold).AngeHash(),
				typeof(iIngotGold).AngeHash(),
				typeof(iIngotGold).AngeHash(),
				0,
				typeof(iTrophy).AngeHash()
			);
			Item.AddCombination(
				typeof(iCandle).AngeHash(),
				typeof(iPotionEmpty).AngeHash(),
				typeof(iIronWire).AngeHash(),
				0,
				typeof(iLantern).AngeHash()
			);

		}


		private static void General13 () {

			Item.AddCombination(
				typeof(iPotionEmpty).AngeHash(),
				typeof(iRuneFire).AngeHash(),
				0,
				0,
				typeof(iPotionRed).AngeHash()
			);
			Item.AddCombination(
				typeof(iPotionEmpty).AngeHash(),
				typeof(iRuneWater).AngeHash(),
				0,
				0,
				typeof(iPotionBlue).AngeHash()
			);
			Item.AddCombination(
				typeof(iPotionEmpty).AngeHash(),
				typeof(iRuneLightning).AngeHash(),
				0,
				0,
				typeof(iPotionOrange).AngeHash()
			);
			Item.AddCombination(
				typeof(iPotionEmpty).AngeHash(),
				typeof(iRunePoison).AngeHash(),
				0,
				0,
				typeof(iPotionGreen).AngeHash()
			);
			Item.AddCombination(
				typeof(iGlass).AngeHash(),
				typeof(iGlass).AngeHash(),
				typeof(iTreeBranch).AngeHash(),
				0,
				typeof(iPotionEmpty).AngeHash()
			);
			Item.AddCombination(
				typeof(iMeatBone).AngeHash(),
				0,
				0,
				0,
				typeof(iBrokenBone).AngeHash(), 2
			);
			Item.AddCombination(
				typeof(iBrokenBone).AngeHash(),
				typeof(iBrokenBone).AngeHash(),
				0,
				0,
				typeof(iMeatBone).AngeHash()
			);
			Item.AddCombination(
				typeof(iPaper).AngeHash(),
				typeof(iTreeBranch).AngeHash(),
				typeof(iTreeBranch).AngeHash(),
				0,
				typeof(iHandFan).AngeHash()
			);
			Item.AddCombination(
				typeof(iPaper).AngeHash(),
				typeof(iABC).AngeHash(),
				0,
				0,
				typeof(iLetter).AngeHash()
			);
			Item.AddCombination(
				typeof(iBeetle).AngeHash(),
				typeof(iProcessor).AngeHash(),
				typeof(iElectricWire).AngeHash(),
				typeof(iBattery).AngeHash(),
				typeof(iMachineBeetle).AngeHash()
			);
			Item.AddCombination(
				typeof(iPotionEmpty).AngeHash(),
				typeof(iRuneLightning).AngeHash(),
				typeof(iElectricWire).AngeHash(),
				0,
				typeof(iBulb).AngeHash()
			);
			Item.AddCombination(
				typeof(iGunpowder).AngeHash(),
				typeof(iPaper).AngeHash(),
				0,
				0,
				typeof(iFirecracker).AngeHash()
			);
		}


		private static void General14 () {
			Item.AddCombination(
				typeof(iLegoBlockWhite).AngeHash(),
				typeof(i123).AngeHash(),
				0,
				0,
				typeof(iDice).AngeHash()
			);
			Item.AddCombination(
				typeof(iTreeBranchBundle).AngeHash(),
				typeof(iRuneFire).AngeHash(),
				0,
				0,
				typeof(iCharcoal).AngeHash(), 3
			);
			Item.AddCombination(
				typeof(iTreeTrunk).AngeHash(),
				typeof(iRuneFire).AngeHash(),
				0,
				0,
				typeof(iCharcoal).AngeHash(), 6
			);
			Item.AddCombination(
				typeof(iTreeStump).AngeHash(),
				typeof(iRuneFire).AngeHash(),
				0,
				0,
				typeof(iCharcoal).AngeHash(), 9
			);
			Item.AddCombination(
				typeof(iWoodBoard).AngeHash(),
				typeof(iRuneFire).AngeHash(),
				0,
				0,
				typeof(iCharcoal).AngeHash(), 12
			);
			Item.AddCombination(
				typeof(iKeyIron).AngeHash(),
				typeof(iIngotGold).AngeHash(),
				0,
				0,
				typeof(iKeyGold).AngeHash()
			);
			Item.AddCombination(
				typeof(iStone).AngeHash(),
				typeof(iStone).AngeHash(),
				0,
				0,
				typeof(iStonePolished).AngeHash()
			);
			Item.AddCombination(
				typeof(iFlint).AngeHash(),
				typeof(iFlint).AngeHash(),
				0,
				0,
				typeof(iFlintPolished).AngeHash()
			);
			Item.AddCombination(
				typeof(iFishBone).AngeHash(),
				typeof(iTreeBranch).AngeHash(),
				0,
				0,
				typeof(iComb).AngeHash()
			);
			Item.AddCombination(
				typeof(iLeather).AngeHash(),
				typeof(iLeather).AngeHash(),
				typeof(iLeather).AngeHash(),
				0,
				typeof(iHandbag).AngeHash()
			);
			Item.AddCombination(
				typeof(iHandbag).AngeHash(),
				typeof(iCapsule).AngeHash(),
				0,
				0,
				typeof(iFirstAidKit).AngeHash()
			);

		}


		private static void Food0 () {
			Item.AddCombination(
				typeof(iBeefRaw).AngeHash(),
				0,
				0,
				0,
				typeof(iMeatballRaw).AngeHash(), 4
			);
			Item.AddCombination(
				typeof(iPorkRaw).AngeHash(),
				0,
				0,
				0,
				typeof(iMeatballRaw).AngeHash(), 3
			);
			Item.AddCombination(
				typeof(iMeatballRaw).AngeHash(),
				typeof(iMeatballRaw).AngeHash(),
				typeof(iMeatballRaw).AngeHash(),
				typeof(iTreeBranch).AngeHash(),
				typeof(iMeatSkewersRaw).AngeHash()
			);
		}


		private static void Food1 () {


			Item.AddCombination(
				typeof(iMeatballCooked).AngeHash(),
				typeof(iMeatballCooked).AngeHash(),
				typeof(iMeatballCooked).AngeHash(),
				typeof(iTreeBranch).AngeHash(),
				typeof(iMeatSkewersCooked).AngeHash()
			);

			Item.AddCombination(
				typeof(iBeefRaw).AngeHash(),
				typeof(iRuneFire).AngeHash(),
				0,
				0,
				typeof(iBeefCooked).AngeHash()
			);
			Item.AddCombination(
				typeof(iChickenLegRaw).AngeHash(),
				typeof(iRuneFire).AngeHash(),
				0,
				0,
				typeof(iChickenLegCooked).AngeHash()
			);
			Item.AddCombination(
				typeof(iChickenWingRaw).AngeHash(),
				typeof(iRuneFire).AngeHash(),
				0,
				0,
				typeof(iChickenWingCooked).AngeHash()
			);
			Item.AddCombination(
				typeof(iPorkRaw).AngeHash(),
				typeof(iRuneFire).AngeHash(),
				0,
				0,
				typeof(iPorkCooked).AngeHash()
			);
			Item.AddCombination(
				typeof(iMeatballRaw).AngeHash(),
				typeof(iRuneFire).AngeHash(),
				0,
				0,
				typeof(iMeatballCooked).AngeHash()
			);
			Item.AddCombination(
				typeof(iMeatSkewersRaw).AngeHash(),
				typeof(iRuneFire).AngeHash(),
				0,
				0,
				typeof(iMeatSkewersCooked).AngeHash()
			);
			Item.AddCombination(
				typeof(iSausageRaw).AngeHash(),
				typeof(iRuneFire).AngeHash(),
				0,
				0,
				typeof(iSausageCooked).AngeHash()
			);
			Item.AddCombination(
				typeof(iTurkeyRaw).AngeHash(),
				typeof(iRuneFire).AngeHash(),
				0,
				0,
				typeof(iTurkeyCooked).AngeHash()
			);
			Item.AddCombination(
				typeof(iFishRaw).AngeHash(),
				typeof(iRuneFire).AngeHash(),
				0,
				0,
				typeof(iFishCooked).AngeHash()
			);
			Item.AddCombination(
				typeof(iPterophyllum).AngeHash(),
				typeof(iRuneFire).AngeHash(),
				0,
				0,
				typeof(iPterophyllumCooked).AngeHash()
			);
			Item.AddCombination(
				typeof(iFlounder).AngeHash(),
				typeof(iRuneFire).AngeHash(),
				0,
				0,
				typeof(iFlounderCooked).AngeHash()
			);
			Item.AddCombination(
				typeof(iSquidRaw).AngeHash(),
				typeof(iRuneFire).AngeHash(),
				0,
				0,
				typeof(iSquidCooked).AngeHash()
			);
			Item.AddCombination(
				typeof(iLobsterRaw).AngeHash(),
				typeof(iRuneFire).AngeHash(),
				0,
				0,
				typeof(iLobsterCooked).AngeHash()
			);
			Item.AddCombination(
				typeof(iCrabRaw).AngeHash(),
				typeof(iRuneFire).AngeHash(),
				0,
				0,
				typeof(iCrabCooked).AngeHash()
			);
			Item.AddCombination(
				typeof(iSnailRaw).AngeHash(),
				typeof(iRuneFire).AngeHash(),
				0,
				0,
				typeof(iSnailCooked).AngeHash()
			);

		}


		private static void Food2 () {


			Item.AddCombination(
				typeof(iFlour).AngeHash(),
				typeof(iCream).AngeHash(),
				typeof(iHorn).AngeHash(),
				typeof(iRuneFire).AngeHash(),
				typeof(iCreamHorn).AngeHash()
			);
			Item.AddCombination(
				typeof(iBread).AngeHash(),
				typeof(iCream).AngeHash(),
				typeof(iHorn).AngeHash(),
				0,
				typeof(iCroissant).AngeHash()
			);
			Item.AddCombination(
				typeof(iBread).AngeHash(),
				typeof(iSausageCooked).AngeHash(),
				typeof(iKetchup).AngeHash(),
				typeof(iButter).AngeHash(),
				typeof(iHotdog).AngeHash()
			);
			Item.AddCombination(
				typeof(iBread).AngeHash(),
				typeof(iRope).AngeHash(),
				0,
				0,
				typeof(iBreadKnot).AngeHash()
			);
			Item.AddCombination(
				typeof(iFlour).AngeHash(),
				typeof(iSalt).AngeHash(),
				typeof(iRuneFire).AngeHash(),
				typeof(iRuneWater).AngeHash(),
				typeof(iLyeRoll).AngeHash()
			);
			Item.AddCombination(
				typeof(iCakeEmbryo).AngeHash(),
				typeof(iCream).AngeHash(),
				0,
				0,
				typeof(iCakeCream).AngeHash()
			);
			Item.AddCombination(
				typeof(iCakeRoll).AngeHash(),
				0,
				0,
				0,
				typeof(iCakeCream).AngeHash()
			);
			Item.AddCombination(
				typeof(iCakeCream).AngeHash(),
				0,
				0,
				0,
				typeof(iCakeRoll).AngeHash()
			);
			Item.AddCombination(
				typeof(iBread).AngeHash(),
				typeof(iBread).AngeHash(),
				typeof(iPorkCooked).AngeHash(),
				typeof(iCollardCut).AngeHash(),
				typeof(iHamburger).AngeHash()
			);
			Item.AddCombination(
				typeof(iBread).AngeHash(),
				typeof(iBread).AngeHash(),
				typeof(iPorkCooked).AngeHash(),
				typeof(iCabbageCut).AngeHash(),
				typeof(iHamburger).AngeHash()
			);
			Item.AddCombination(
				typeof(iBread).AngeHash(),
				typeof(iBread).AngeHash(),
				typeof(iPorkCooked).AngeHash(),
				typeof(iChineseCabbageCut).AngeHash(),
				typeof(iHamburger).AngeHash()
			);
			Item.AddCombination(
				typeof(iFlour).AngeHash(),
				typeof(iFlour).AngeHash(),
				typeof(iRuneFire).AngeHash(),
				typeof(iRuneWater).AngeHash(),
				typeof(iBread).AngeHash()
			);
			Item.AddCombination(
				typeof(iFlour).AngeHash(),
				typeof(iCream).AngeHash(),
				typeof(iRuneFire).AngeHash(),
				typeof(iRuneWater).AngeHash(),
				typeof(iDonut).AngeHash()
			);
			Item.AddCombination(
				typeof(iPotatoCut).AngeHash(),
				typeof(iRuneFire).AngeHash(),
				0,
				0,
				typeof(iFries).AngeHash()
			);
			Item.AddCombination(
				typeof(iFlour).AngeHash(),
				typeof(iMeatballRaw).AngeHash(),
				typeof(iRuneFire).AngeHash(),
				typeof(iRuneWater).AngeHash(),
				typeof(iBaoZi).AngeHash()
			);
			Item.AddCombination(
				typeof(iFlour).AngeHash(),
				typeof(iPorkRaw).AngeHash(),
				typeof(iRuneFire).AngeHash(),
				typeof(iRuneWater).AngeHash(),
				typeof(iDumpling).AngeHash()
			);
			Item.AddCombination(
				typeof(iNori).AngeHash(),
				typeof(iRice).AngeHash(),
				typeof(iCucumberCut).AngeHash(),
				typeof(iSausageCooked).AngeHash(),
				typeof(iSushi).AngeHash()
			);

		}


		private static void Food3 () {

			Item.AddCombination(
				typeof(iMilk).AngeHash(),
				typeof(iMilk).AngeHash(),
				typeof(iSalt).AngeHash(),
				0,
				typeof(iCheese).AngeHash()
			);
			Item.AddCombination(
				typeof(iRice).AngeHash(),
				typeof(iNori).AngeHash(),
				0,
				0,
				typeof(iOnigiri).AngeHash()
			);
			Item.AddCombination(
				typeof(iFlour).AngeHash(),
				typeof(iChocolate).AngeHash(),
				typeof(iRuneFire).AngeHash(),
				typeof(iRuneWater).AngeHash(),
				typeof(iCookie).AngeHash()
			);
			Item.AddCombination(
				typeof(iPancake).AngeHash(),
				typeof(iCheese).AngeHash(),
				typeof(iSausageRaw).AngeHash(),
				typeof(iRuneFire).AngeHash(),
				typeof(iPizza).AngeHash()
			);
			Item.AddCombination(
				typeof(iCookie).AngeHash(),
				typeof(iCream).AngeHash(),
				0,
				0,
				typeof(iSandwichBiscuit).AngeHash()
			);
			Item.AddCombination(
				typeof(iPotatoCut).AngeHash(),
				typeof(iPotatoCut).AngeHash(),
				typeof(iRuneFire).AngeHash(),
				0,
				typeof(iPotatoChips).AngeHash()
			);
			Item.AddCombination(
				typeof(iFlour).AngeHash(),
				typeof(iEgg).AngeHash(),
				typeof(iEgg).AngeHash(),
				typeof(iRuneFire).AngeHash(),
				typeof(iEggTart).AngeHash()
			);
			Item.AddCombination(
				typeof(iPumpkinCut).AngeHash(),
				typeof(iCucumberCut).AngeHash(),
				typeof(iRuneWater).AngeHash(),
				typeof(iRuneFire).AngeHash(),
				typeof(iSoup).AngeHash()
			);
			Item.AddCombination(
				typeof(iFlour).AngeHash(),
				typeof(iFlour).AngeHash(),
				typeof(iRuneFire).AngeHash(),
				0,
				typeof(iPancake).AngeHash()
			);
			Item.AddCombination(
				typeof(iMilk).AngeHash(),
				typeof(iOrangeJuice).AngeHash(),
				typeof(iFlour).AngeHash(),
				typeof(iCornCut).AngeHash(),
				typeof(iPudding).AngeHash()
			);
			Item.AddCombination(
				typeof(iMilk).AngeHash(),
				typeof(iCream).AngeHash(),
				0,
				0,
				typeof(iIceCream).AngeHash()
			);
			Item.AddCombination(
				typeof(iFlour).AngeHash(),
				typeof(iEgg).AngeHash(),
				typeof(iRuneWater).AngeHash(),
				typeof(iRuneFire).AngeHash(),
				typeof(iToast).AngeHash()
			);
			Item.AddCombination(
				typeof(iFlour).AngeHash(),
				typeof(iFlour).AngeHash(),
				typeof(iFlour).AngeHash(),
				typeof(iRuneWater).AngeHash(),
				typeof(iNoodle).AngeHash()
			);

		}


		private static void Food4 () {


			//Ketchup
			//OnionRing
			//Popcorn
			//FriedEgg
			Item.AddCombination(
				typeof(iCakeEmbryo).AngeHash(),
				typeof(iChocolate).AngeHash(),
				0,
				0,
				typeof(iChocolateMousse).AngeHash()
			);
			Item.AddCombination(
				typeof(iCakeEmbryo).AngeHash(),
				typeof(iCherryCut).AngeHash(),
				0,
				0,
				typeof(iCherryMousse).AngeHash()
			);
			//Bacon
			//InstantNoodle
			//Salt
			//BlackPepper
			//Tofu
			//DriedBeef
			//Butter
			/*

			Item.AddCombination(
				typeof(i).AngeHash(),
				typeof(i).AngeHash(),
				0,
				0,
				typeof(i).AngeHash()
			);

			*/
		}


		private static void Food5 () {

			Item.AddCombination(
				typeof(iTentacle).AngeHash(),
				typeof(iSalt).AngeHash(),
				typeof(iRuneFire).AngeHash(),
				0,
				typeof(iTakoyaki).AngeHash()
			);
			//Arepa
			//Taco
			//Spaghetti
			Item.AddCombination(
				typeof(iRice).AngeHash(),
				typeof(iCurry).AngeHash(),
				0,
				0,
				typeof(iCurryRice).AngeHash()
			);
			//Curry
			//CakeEmbryo
			//Cream
			//Flour
			//Zongzi
			//MoonCake
			Item.AddCombination(
				typeof(iTofu).AngeHash(),
				typeof(iChiliCut).AngeHash(),
				typeof(iBlackPepper).AngeHash(),
				typeof(iRuneFire).AngeHash(),
				typeof(iMapoTofu).AngeHash()
			);
			Item.AddCombination(
				typeof(iPorkRaw).AngeHash(),
				typeof(iSalt).AngeHash(),
				typeof(iCarrotCut).AngeHash(),
				typeof(iRuneFire).AngeHash(),
				typeof(iFriedPorkInScoop).AngeHash()
			);
			//Liquor
			/*

			Item.AddCombination(
				typeof(i).AngeHash(),
				typeof(i).AngeHash(),
				0,
				0,
				typeof(i).AngeHash()
			);

			*/
		}


		private static void Food6 () {


			//ColaRed
			//ColaBlue
			//Coffee
			//GreenTea
			//Beer
			//Milk
			//TakoMilk
			//GrapeWine
			//AppleWine
			Item.AddCombination(
				typeof(iOrangeCut).AngeHash(),
				typeof(iRuneWater).AngeHash(),
				0,
				0,
				typeof(iOrangeJuice).AngeHash()
			);
			Item.AddCombination(
				typeof(iGrapePurpleCut).AngeHash(),
				typeof(iRuneWater).AngeHash(),
				0,
				0,
				typeof(iGrapeJuice).AngeHash()
			);
			Item.AddCombination(
				typeof(iStrawberryCut).AngeHash(),
				typeof(iRuneWater).AngeHash(),
				0,
				0,
				typeof(iStrawberryJuice).AngeHash()
			);
			//LemonWater
			Item.AddCombination(
				typeof(iCoconutCut).AngeHash(),
				typeof(iRuneWater).AngeHash(),
				0,
				0,
				typeof(iCoconutJuice).AngeHash()
			);
			Item.AddCombination(
				typeof(iLiquor).AngeHash(),
				typeof(iLiquor).AngeHash(),
				0,
				0,
				typeof(iAlcohol).AngeHash()
			);
			/*

			Item.AddCombination(
				typeof(i).AngeHash(),
				typeof(i).AngeHash(),
				0,
				0,
				typeof(i).AngeHash()
			);

			*/
		}


		private static void Food8 () {


			//CornCut
			//PumpkinCut
			//RadishCut
			//PineappleCut
			//BambooShootCut
			//GreenPepperCut
			//GreenBeansCut
			//GarlicCut
			//GingerCut
			//ScallionCut
			//PeanutCut
			//LotusRootCut
			//CorianderCut
			//CollardCut
			//CabbageCut
			/*

			Item.AddCombination(
				typeof(i).AngeHash(),
				typeof(i).AngeHash(),
				0,
				0,
				typeof(i).AngeHash()
			);

			*/
		}


		private static void Food10 () {


			//CucumberCut
			//ChineseCabbageCut
			//EggplantCut
			//SpinachCut
			//TomatoCut
			//PotatoCut
			//BroccoliCut
			//CauliflowerCut
			//ChiliCut
			//CarrotCut
			//EnokiMushroomCut
			//MushroomRedCut
			//MushroomGreenCut
			//MushroomBlueCut
			//MushroomOrangeCut
			/*

			Item.AddCombination(
				typeof(i).AngeHash(),
				typeof(i).AngeHash(),
				0,
				0,
				typeof(i).AngeHash()
			);

			*/
		}


		private static void Food12 () {


			//WatermelonCut
			//AvocadoCut
			//MulberriesCut
			//LycheeCut
			//MangoCut
			//CarambolaCut
			//PapayaCut
			//PassionFruitCut
			//KiwiCut
			//MangosteenCut
			//CoconutCut
			//DurianCut
			//CherryCut
			//PomegranateCut
			//HawthornCut
			/*

			Item.AddCombination(
				typeof(i).AngeHash(),
				typeof(i).AngeHash(),
				0,
				0,
				typeof(i).AngeHash()
			);

			*/
		}


		private static void Food14 () {

			//AppleRedCut
			//AppleGreenCut
			//PearCut
			//PeachCut
			//BananaCut
			//OrangeCut
			//GrapePurpleCut
			//GrapeGreenCut
			//StrawberryCut
			//BlueberryCut
			//LemonCut
			//LimeCut
			//PitayaCut
			//ApricotCut
			//HoneydewCut
			/*

			Item.AddCombination(
				typeof(i).AngeHash(),
				typeof(i).AngeHash(),
				0,
				0,
				typeof(i).AngeHash()
			);

			*/
		}


	}
}








using System.Collections;
using System.Collections.Generic;
using AngeliaFramework;
using UnityEngine;

namespace AngeliaGame {
	public static class ItemCombination {


		[AfterGameInitialize]
		public static void AfterGameInitialize () {

			General0();
			General1();
			General2();
			General3();
			General4();
			General5();
			General6();
			General7();
			General8();
			General9();
			General10();
			General11();
			General12();
			General13();
			General14();

			Food0();
			Food1();
			Food2();
			Food3();
			Food4();
			Food5();
			Food6();
			Food8();
			Food10();
			Food12();
			Food14();

			Equipment0();
			Equipment1();
			Equipment2();
			Equipment3();
			Equipment4();
			Equipment5();
			Equipment6();
			Equipment7();
			Equipment8();
			Equipment9();
			Equipment10();
			Equipment11();
			Equipment12();
			Equipment13();
			Equipment14();

		}


		private static void General0 () {

			ItemSystem.AddCombination(
				typeof(iTreeTrunk).AngeHash(),
				typeof(iRuneFire).AngeHash(),
				typeof(iRuneWater).AngeHash(),
				0,
				typeof(iChessPawn).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iTreeTrunk).AngeHash(),
				typeof(iRuneFire).AngeHash(),
				typeof(iRuneLightning).AngeHash(),
				0,
				typeof(iChessKnight).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iTreeTrunk).AngeHash(),
				typeof(iRuneFire).AngeHash(),
				typeof(iRunePoison).AngeHash(),
				0,
				typeof(iChessBishop).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iTreeTrunk).AngeHash(),
				typeof(iRuneWater).AngeHash(),
				typeof(iRuneLightning).AngeHash(),
				0,
				typeof(iChessRook).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iTreeTrunk).AngeHash(),
				typeof(iRuneWater).AngeHash(),
				typeof(iRunePoison).AngeHash(),
				0,
				typeof(iChessQueen).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iTreeTrunk).AngeHash(),
				typeof(iRuneLightning).AngeHash(),
				typeof(iRunePoison).AngeHash(),
				0,
				typeof(iChessKing).AngeHash()
			);

			ItemSystem.AddCombination(
				typeof(iIronCage).AngeHash(),
				typeof(iSpikeBall).AngeHash(),
				0,
				0,
				typeof(iTrap).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iFabric).AngeHash(),
				typeof(iNeedle).AngeHash(),
				typeof(iCottonBall).AngeHash(),
				0,
				typeof(iCurseDoll).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iTakodachi).AngeHash(),
				typeof(iAntimatterCookie).AngeHash(),
				0,
				0,
				typeof(iTruthOfTheUniverse).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iCookie).AngeHash(),
				typeof(iAntimatter).AngeHash(),
				0,
				0,
				typeof(iAntimatterCookie).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iDice).AngeHash(),
				typeof(iTotemFire).AngeHash(),
				typeof(iTotemWater).AngeHash(),
				typeof(iTotemLightning).AngeHash(),
				typeof(iRuneCube).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iDice).AngeHash(),
				typeof(iTotemFire).AngeHash(),
				typeof(iTotemWater).AngeHash(),
				typeof(iTotemPoison).AngeHash(),
				typeof(iRuneCube).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iDice).AngeHash(),
				typeof(iTotemFire).AngeHash(),
				typeof(iTotemPoison).AngeHash(),
				typeof(iTotemLightning).AngeHash(),
				typeof(iRuneCube).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iDice).AngeHash(),
				typeof(iTotemPoison).AngeHash(),
				typeof(iTotemWater).AngeHash(),
				typeof(iTotemLightning).AngeHash(),
				typeof(iRuneCube).AngeHash()
			);

			ItemSystem.AddCombination(
				typeof(iEyeBall).AngeHash(),
				typeof(iTentacle).AngeHash(),
				typeof(iTotemPoison).AngeHash(),
				typeof(iBookGreen).AngeHash(),
				typeof(iOracleEye).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iIngotIron).AngeHash(),
				typeof(iBowlingBall).AngeHash(),
				typeof(iBowlingBall).AngeHash(),
				0,
				typeof(iDumbbell).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iIngotGold).AngeHash(),
				typeof(iMedalGold).AngeHash(),
				0,
				0,
				typeof(iBadgeGold).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iIngotIron).AngeHash(),
				typeof(iMedalIron).AngeHash(),
				0,
				0,
				typeof(iBadgeIron).AngeHash()
			);

		}


		private static void General1 () {

			ItemSystem.AddCombination(
				typeof(iItemSand).AngeHash(),
				typeof(iPotionEmpty).AngeHash(),
				typeof(iPotionEmpty).AngeHash(),
				0,
				typeof(iHourglass).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iPaper).AngeHash(),
				typeof(iCompass).AngeHash(),
				typeof(iCrayon).AngeHash(),
				0,
				typeof(iMap).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iMagnet).AngeHash(),
				typeof(iTrayWood).AngeHash(),
				0,
				0,
				typeof(iCompass).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iLeather).AngeHash(),
				typeof(iLeather).AngeHash(),
				0,
				0,
				typeof(iBasketball).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iItemWoodBoard).AngeHash(),
				typeof(iItemWoodBoard).AngeHash(),
				typeof(iItemWoodBoard).AngeHash(),
				0,
				typeof(iCuttingBoard).AngeHash()
			);

			ItemSystem.AddCombination(
				typeof(iStonePolished).AngeHash(),
				typeof(iCross).AngeHash(),
				typeof(iCuttingBoard).AngeHash(),
				0,
				typeof(iTombstone).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iFabric).AngeHash(),
				typeof(iTreeBranch).AngeHash(),
				0,
				0,
				typeof(iFlag).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iPaper).AngeHash(),
				typeof(iRuneWater).AngeHash(),
				0,
				0,
				typeof(iToiletPaper).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iRibbon).AngeHash(),
				typeof(iTreeTrunk).AngeHash(),
				typeof(iLeaf).AngeHash(),
				0,
				typeof(iChristmasTree).AngeHash()
			);

			ItemSystem.AddCombination(
				typeof(iWheel).AngeHash(),
				typeof(iCrayon).AngeHash(),
				0,
				0,
				typeof(iDartBoard).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iIngotIron).AngeHash(),
				typeof(iIngotIron).AngeHash(),
				typeof(iIngotIron).AngeHash(),
				typeof(iCharcoal).AngeHash(),
				typeof(iAnvil).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iRuneCube).AngeHash(),
				typeof(iCuteGhost).AngeHash(),
				typeof(iLaptop).AngeHash(),
				typeof(iPositronScanner).AngeHash(),
				typeof(iAntimatter).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iBasketball).AngeHash(),
				typeof(iIngotIron).AngeHash(),
				0,
				0,
				typeof(iBowlingBall).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iVolatilePotionEmpty).AngeHash(),
				typeof(iLegoBlockWhite).AngeHash(),
				0,
				0,
				typeof(iRubberBall).AngeHash()
			);

		}


		private static void General2 () {
			ItemSystem.AddCombination(
				typeof(iBowlingBall).AngeHash(),
				typeof(iBolt).AngeHash(),
				typeof(iBolt).AngeHash(),
				typeof(iBolt).AngeHash(),
				typeof(iSpikeBall).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iIronWire).AngeHash(),
				typeof(iCorrugatedBox).AngeHash(),
				typeof(iLockIron).AngeHash(),
				0,
				typeof(iIronCage).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iBucketIron).AngeHash(),
				typeof(iGunpowder).AngeHash(),
				0,
				0,
				typeof(iExplosiveBarrel).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iLens).AngeHash(),
				typeof(iTreeStump).AngeHash(),
				0,
				0,
				typeof(iTelescope).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iMusicNote).AngeHash(),
				typeof(iTrayWood).AngeHash(),
				typeof(iRuneFire).AngeHash(),
				typeof(iLegoBlockWhite).AngeHash(),
				typeof(iVinyl).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iGlass).AngeHash(),
				typeof(iTrayWood).AngeHash(),
				typeof(iRuneFire).AngeHash(),
				0,
				typeof(iLens).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iItemSand).AngeHash(),
				typeof(iRuneFire).AngeHash(),
				0,
				0,
				typeof(iGlass).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iLegoBlockRed).AngeHash(),
				typeof(iFlowerWhite).AngeHash(),
				0,
				0,
				typeof(iLegoBlockWhite).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iFlowerWhite).AngeHash(),
				typeof(iFlowerRed).AngeHash(),
				0,
				0,
				typeof(iLegoBlockRed).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iTreeBranch).AngeHash(),
				typeof(iCharcoal).AngeHash(),
				0,
				0,
				typeof(iPencil).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iRibbon).AngeHash(),
				typeof(iRibbon).AngeHash(),
				0,
				0,
				typeof(iBowTie).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iIronWire).AngeHash(),
				typeof(iBolt).AngeHash(),
				0,
				0,
				typeof(iSpringIron).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iIronWire).AngeHash(),
				typeof(iIngotIron).AngeHash(),
				0,
				0,
				typeof(iIronHook).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iClay).AngeHash(),
				typeof(iHerb).AngeHash(),
				typeof(iRuneFire).AngeHash(),
				0,
				typeof(iPipeClay).AngeHash()
			);
		}


		private static void General3 () {

			ItemSystem.AddCombination(
				typeof(iFirecracker).AngeHash(),
				typeof(iRibbon).AngeHash(),
				0,
				0,
				typeof(iConfetti).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iPencil).AngeHash(),
				typeof(iClay).AngeHash(),
				0,
				0,
				typeof(iCrayon).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iIngotIron).AngeHash(),
				typeof(iIngotIron).AngeHash(),
				typeof(iIronWire).AngeHash(),
				0,
				typeof(iBucketIron).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iFabric).AngeHash(),
				0,
				0,
				0,
				typeof(iRibbon).AngeHash(), 4
			);
			ItemSystem.AddCombination(
				typeof(iBucketIron).AngeHash(),
				typeof(iRuneWater).AngeHash(),
				0,
				0,
				typeof(iBottledWater).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iGourd).AngeHash(),
				0,
				0,
				0,
				typeof(iTrayWood).AngeHash(), 4
			);
			ItemSystem.AddCombination(
				typeof(iLegoBlockWhite).AngeHash(),
				typeof(iLegoBlockRed).AngeHash(),
				typeof(iHerb).AngeHash(),
				0,
				typeof(iCapsule).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iPaw).AngeHash(),
				typeof(iLove).AngeHash(),
				typeof(iBowTie).AngeHash(),
				typeof(iCorn).AngeHash(),
				typeof(iSucorn).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iSucorn).AngeHash(),
				typeof(iBambooShoot).AngeHash(),
				0,
				0,
				typeof(iOruyanke).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iRubberBall).AngeHash(),
				typeof(iRubberBall).AngeHash(),
				0,
				0,
				typeof(iRubberDuck).AngeHash()
			);
		}


		private static void General4 () {

			ItemSystem.AddCombination(
				typeof(iGemBlue).AngeHash(),
				typeof(iGemGreen).AngeHash(),
				typeof(iEyeBall).AngeHash(),
				typeof(iCuteGhost).AngeHash(),
				typeof(iCrystalBall).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iLegoBlockWhite).AngeHash(),
				typeof(iLegoBlockWhite).AngeHash(),
				typeof(iLegoBlockRed).AngeHash(),
				typeof(iLegoBlockRed).AngeHash(),
				typeof(iCone).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iMusicNote).AngeHash(),
				typeof(iHorn).AngeHash(),
				typeof(iItemWoodBoard).AngeHash(),
				typeof(iVinyl).AngeHash(),
				typeof(iPhonograph).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iMeatBone).AngeHash(),
				typeof(iMusicNote).AngeHash(),
				0,
				0,
				typeof(iHorn).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iHorn).AngeHash(),
				typeof(iMusicNote).AngeHash(),
				typeof(iButton).AngeHash(),
				0,
				typeof(iCornet).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iMusicNote).AngeHash(),
				typeof(iCornet).AngeHash(),
				typeof(iButton).AngeHash(),
				0,
				typeof(iSaxophone).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iGourd).AngeHash(),
				typeof(iMusicNote).AngeHash(),
				typeof(iIronWire).AngeHash(),
				0,
				typeof(iGuitar).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iLeather).AngeHash(),
				typeof(iBucketIron).AngeHash(),
				typeof(iMusicNote).AngeHash(),
				0,
				typeof(iDrum).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iMusicNote).AngeHash(),
				typeof(iClay).AngeHash(),
				0,
				0,
				typeof(iOcarina).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iLegoBlockWhite).AngeHash(),
				typeof(iButton).AngeHash(),
				typeof(iBattery).AngeHash(),
				0,
				typeof(iGamepad).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iLegoBlockWhite).AngeHash(),
				typeof(iButton).AngeHash(),
				typeof(iButton).AngeHash(),
				0,
				typeof(iKeyboard).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iLegoBlockWhite).AngeHash(),
				typeof(iLegoBlockWhite).AngeHash(),
				typeof(iGlass).AngeHash(),
				typeof(iGlass).AngeHash(),
				typeof(iMonitor).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iIngotIron).AngeHash(),
				typeof(iIngotIron).AngeHash(),
				typeof(iIngotIron).AngeHash(),
				typeof(iWheel).AngeHash(),
				typeof(iPropeller).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iLegoBlockWhite).AngeHash(),
				typeof(iLegoBlockRed).AngeHash(),
				0,
				0,
				typeof(iButton).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iElectricWire).AngeHash(),
				typeof(iPotatoCut).AngeHash(),
				0,
				0,
				typeof(iBattery).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iElectricWire).AngeHash(),
				typeof(iLemonCut).AngeHash(),
				0,
				0,
				typeof(iBattery).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iElectricWire).AngeHash(),
				typeof(iLimeCut).AngeHash(),
				0,
				0,
				typeof(iBattery).AngeHash()
			);

		}


		private static void General5 () {

			ItemSystem.AddCombination(
				typeof(iRope).AngeHash(),
				typeof(iCottonBall).AngeHash(),
				0,
				0,
				typeof(iYarn).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iLove).AngeHash(),
				typeof(iFabric).AngeHash(),
				typeof(iCottonBall).AngeHash(),
				typeof(iPaw).AngeHash(),
				typeof(iTeddyBearDoll).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iLove).AngeHash(),
				typeof(iLegoBlockWhite).AngeHash(),
				typeof(iBowTie).AngeHash(),
				0,
				typeof(iBarbieDoll).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iYarn).AngeHash(),
				typeof(iYarn).AngeHash(),
				typeof(iYarn).AngeHash(),
				typeof(iYarn).AngeHash(),
				typeof(iFabric).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iTreeBranch).AngeHash(),
				typeof(iRuneFire).AngeHash(),
				0,
				0,
				typeof(iTorch).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iIngotIron).AngeHash(),
				typeof(iBolt).AngeHash(),
				0,
				0,
				typeof(iDrill).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iIngotIron).AngeHash(),
				typeof(iBeefCooked).AngeHash(),
				0,
				0,
				typeof(iSoupCan).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iIngotIron).AngeHash(),
				typeof(iChickenLegCooked).AngeHash(),
				0,
				0,
				typeof(iSoupCan).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iIngotIron).AngeHash(),
				typeof(iChickenWingCooked).AngeHash(),
				0,
				0,
				typeof(iSoupCan).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iIngotIron).AngeHash(),
				typeof(iPorkCooked).AngeHash(),
				0,
				0,
				typeof(iSoupCan).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iIngotIron).AngeHash(),
				typeof(iMeatballCooked).AngeHash(),
				0,
				0,
				typeof(iSoupCan).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iTreeStump).AngeHash(),
				typeof(iIngotIron).AngeHash(),
				typeof(iRubberBall).AngeHash(),
				0,
				typeof(iWheel).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iPaper).AngeHash(),
				typeof(iPaper).AngeHash(),
				typeof(iItemWoodBoard).AngeHash(),
				typeof(iItemWoodBoard).AngeHash(),
				typeof(iCorrugatedBox).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iFabric).AngeHash(),
				typeof(iCottonBall).AngeHash(),
				0,
				0,
				typeof(iPillow).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iIngotGold).AngeHash(),
				typeof(iGlass).AngeHash(),
				0,
				0,
				typeof(iMirror).AngeHash()
			);

		}


		private static void General6 () {


			ItemSystem.AddCombination(
				typeof(iGamepad).AngeHash(),
				typeof(iMonitor).AngeHash(),
				typeof(iProcessor).AngeHash(),
				0,
				typeof(iGameConsole).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iHourglass).AngeHash(),
				typeof(iBattery).AngeHash(),
				typeof(iLegoBlockWhite).AngeHash(),
				0,
				typeof(iWatch).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iDrill).AngeHash(),
				typeof(iBattery).AngeHash(),
				typeof(iLegoBlockWhite).AngeHash(),
				0,
				typeof(iElectricDrill).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iGamepad).AngeHash(),
				typeof(iDice).AngeHash(),
				typeof(iPokerCard).AngeHash(),
				0,
				typeof(iSlotMachine).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iGuitar).AngeHash(),
				typeof(iBattery).AngeHash(),
				0,
				0,
				typeof(iBass).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iWatch).AngeHash(),
				typeof(iBell).AngeHash(),
				typeof(iBell).AngeHash(),
				0,
				typeof(iAlarmClock).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iElectricDrill).AngeHash(),
				typeof(iPropeller).AngeHash(),
				0,
				0,
				typeof(iFan).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iElectricWire).AngeHash(),
				typeof(iMagnet).AngeHash(),
				typeof(iLegoBlockWhite).AngeHash(),
				typeof(iBattery).AngeHash(),
				typeof(iRadio).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iKeyboard).AngeHash(),
				typeof(iMusicNote).AngeHash(),
				typeof(iBattery).AngeHash(),
				0,
				typeof(iPianoKeyboard).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iLens).AngeHash(),
				typeof(iLegoBlockWhite).AngeHash(),
				typeof(iButton).AngeHash(),
				typeof(iBulb).AngeHash(),
				typeof(iCamera).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iCamera).AngeHash(),
				typeof(iBattery).AngeHash(),
				typeof(iWheel).AngeHash(),
				typeof(iWheel).AngeHash(),
				typeof(iVideoRecorder).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iPhone).AngeHash(),
				typeof(iRadio).AngeHash(),
				typeof(iSlotMachine).AngeHash(),
				typeof(iVideoRecorder).AngeHash(),
				typeof(iPositronScanner).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iRuneFire).AngeHash(),
				typeof(iButton).AngeHash(),
				typeof(iLegoBlockWhite).AngeHash(),
				0,
				typeof(iLighter).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iMonitor).AngeHash(),
				typeof(iKeyboard).AngeHash(),
				typeof(iProcessor).AngeHash(),
				typeof(iBattery).AngeHash(),
				typeof(iLaptop).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iMonitor).AngeHash(),
				typeof(iProcessor).AngeHash(),
				typeof(iBattery).AngeHash(),
				0,
				typeof(iPhone).AngeHash()
			);

		}


		private static void General7 () {

			ItemSystem.AddCombination(
				typeof(iWatch).AngeHash(),
				typeof(iIngotGold).AngeHash(),
				typeof(iIngotGold).AngeHash(),
				typeof(iIngotGold).AngeHash(),
				typeof(iWatchLegend).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iTelescope).AngeHash(),
				typeof(iIngotGold).AngeHash(),
				typeof(iIngotGold).AngeHash(),
				typeof(iIngotGold).AngeHash(),
				typeof(iTelescopeLegend).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iHourglass).AngeHash(),
				typeof(iIngotGold).AngeHash(),
				typeof(iIngotGold).AngeHash(),
				typeof(iIngotGold).AngeHash(),
				typeof(iHourglassLegend).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iBell).AngeHash(),
				typeof(iBell).AngeHash(),
				typeof(iRope).AngeHash(),
				typeof(iIngotGold).AngeHash(),
				typeof(iBegleriLegend).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iSpringIron).AngeHash(),
				typeof(iIngotGold).AngeHash(),
				typeof(iIngotGold).AngeHash(),
				typeof(iIngotGold).AngeHash(),
				typeof(iSpringLegend).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iGameConsole).AngeHash(),
				typeof(iIngotGold).AngeHash(),
				typeof(iIngotGold).AngeHash(),
				typeof(iIngotGold).AngeHash(),
				typeof(iGameboyLegend).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iGamepad).AngeHash(),
				typeof(iIngotGold).AngeHash(),
				typeof(iIngotGold).AngeHash(),
				typeof(iIngotGold).AngeHash(),
				typeof(iGamepadLegend).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iPencil).AngeHash(),
				typeof(iIngotGold).AngeHash(),
				typeof(iIngotGold).AngeHash(),
				typeof(iIngotGold).AngeHash(),
				typeof(iPenLegend).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iBook).AngeHash(),
				typeof(iIngotGold).AngeHash(),
				typeof(iIngotGold).AngeHash(),
				typeof(iIngotGold).AngeHash(),
				typeof(iNotepadLegend).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iIronHook).AngeHash(),
				typeof(iIngotGold).AngeHash(),
				typeof(iIngotGold).AngeHash(),
				typeof(iIngotGold).AngeHash(),
				typeof(iHookLegend).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iHandFan).AngeHash(),
				typeof(iIngotGold).AngeHash(),
				typeof(iIngotGold).AngeHash(),
				typeof(iIngotGold).AngeHash(),
				typeof(iHandFanLegend).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iKeyGold).AngeHash(),
				typeof(iIngotGold).AngeHash(),
				typeof(iGemBlue).AngeHash(),
				typeof(iGemGreen).AngeHash(),
				typeof(iKeyLegend).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iPipeClay).AngeHash(),
				typeof(iIngotGold).AngeHash(),
				typeof(iIngotGold).AngeHash(),
				typeof(iIngotGold).AngeHash(),
				typeof(iPipeLegend).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iCross).AngeHash(),
				typeof(iIngotGold).AngeHash(),
				typeof(iIngotGold).AngeHash(),
				typeof(iIngotGold).AngeHash(),
				typeof(iCrossLegend).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iLeaf).AngeHash(),
				typeof(iIngotGold).AngeHash(),
				typeof(iIngotGold).AngeHash(),
				typeof(iIngotGold).AngeHash(),
				typeof(iLeafLegend).AngeHash()
			);

		}


		private static void General8 () {

			ItemSystem.AddCombination(
				typeof(iBook).AngeHash(),
				typeof(iRuneFire).AngeHash(),
				0,
				0,
				typeof(iBookRed).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iBook).AngeHash(),
				typeof(iRuneWater).AngeHash(),
				0,
				0,
				typeof(iBookBlue).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iBook).AngeHash(),
				typeof(iRuneLightning).AngeHash(),
				0,
				0,
				typeof(iBookYellow).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iBook).AngeHash(),
				typeof(iRunePoison).AngeHash(),
				0,
				0,
				typeof(iBookGreen).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iPaper).AngeHash(),
				typeof(iPaper).AngeHash(),
				typeof(iPaper).AngeHash(),
				typeof(iPaper).AngeHash(),
				typeof(iBook).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iIngotGold).AngeHash(),
				typeof(iRibbon).AngeHash(),
				0,
				0,
				typeof(iMedalGold).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iIngotIron).AngeHash(),
				typeof(iRibbon).AngeHash(),
				0,
				0,
				typeof(iMedalIron).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iItemWoodBoard).AngeHash(),
				typeof(iItemWoodBoard).AngeHash(),
				0,
				0,
				typeof(iCross).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iIngotGold).AngeHash(),
				typeof(iMusicNote).AngeHash(),
				0,
				0,
				typeof(iBell).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iLetter).AngeHash(),
				typeof(iMagnet).AngeHash(),
				0,
				0,
				typeof(iFloppyDisk).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iMagnet).AngeHash(),
				typeof(iMusicNote).AngeHash(),
				typeof(iRibbon).AngeHash(),
				0,
				typeof(iTape).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iPaper).AngeHash(),
				typeof(iPaper).AngeHash(),
				typeof(iPaper).AngeHash(),
				typeof(iTreeBranch).AngeHash(),
				typeof(iScroll).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iCorrugatedBox).AngeHash(),
				typeof(iRibbon).AngeHash(),
				0,
				0,
				typeof(iGiftBox).AngeHash()
			);

		}


		private static void General9 () {

			ItemSystem.AddCombination(
				typeof(iGem).AngeHash(),
				typeof(iRuneFire).AngeHash(),
				0,
				0,
				typeof(iGemRed).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iGem).AngeHash(),
				typeof(iRuneWater).AngeHash(),
				0,
				0,
				typeof(iGemBlue).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iGem).AngeHash(),
				typeof(iRuneLightning).AngeHash(),
				0,
				0,
				typeof(iGemOrange).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iGem).AngeHash(),
				typeof(iRunePoison).AngeHash(),
				0,
				0,
				typeof(iGemGreen).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iRuby).AngeHash(),
				typeof(iRuby).AngeHash(),
				typeof(iRuby).AngeHash(),
				typeof(iRuby).AngeHash(),
				typeof(iGem).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iRubyRed).AngeHash(),
				typeof(iRubyRed).AngeHash(),
				typeof(iRubyRed).AngeHash(),
				typeof(iRubyRed).AngeHash(),
				typeof(iGemRed).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iRubyBlue).AngeHash(),
				typeof(iRubyBlue).AngeHash(),
				typeof(iRubyBlue).AngeHash(),
				typeof(iRubyBlue).AngeHash(),
				typeof(iGemBlue).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iRubyOrange).AngeHash(),
				typeof(iRubyOrange).AngeHash(),
				typeof(iRubyOrange).AngeHash(),
				typeof(iRubyOrange).AngeHash(),
				typeof(iGemOrange).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iRubyGreen).AngeHash(),
				typeof(iRubyGreen).AngeHash(),
				typeof(iRubyGreen).AngeHash(),
				typeof(iRubyGreen).AngeHash(),
				typeof(iGemGreen).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iLove).AngeHash(),
				typeof(iTentacle).AngeHash(),
				typeof(iTooth).AngeHash(),
				typeof(iCookie).AngeHash(),
				typeof(iTakodachi).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iIronWire).AngeHash(),
				typeof(iIronWire).AngeHash(),
				typeof(iIronWire).AngeHash(),
				typeof(iIronWire).AngeHash(),
				typeof(iChain).AngeHash()
			);

			ItemSystem.AddCombination(
				typeof(iTreeBranch).AngeHash(),
				typeof(iTreeBranch).AngeHash(),
				0,
				0,
				typeof(iChopsticks).AngeHash()
			);

		}


		private static void General10 () {

			ItemSystem.AddCombination(
				typeof(iRuby).AngeHash(),
				typeof(iRuneFire).AngeHash(),
				0,
				0,
				typeof(iRubyRed).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iRuby).AngeHash(),
				typeof(iRuneWater).AngeHash(),
				0,
				0,
				typeof(iRubyBlue).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iRuby).AngeHash(),
				typeof(iRuneLightning).AngeHash(),
				0,
				0,
				typeof(iRubyOrange).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iRuby).AngeHash(),
				typeof(iRunePoison).AngeHash(),
				0,
				0,
				typeof(iRubyGreen).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iIngotIron).AngeHash(),
				typeof(iMeatBone).AngeHash(),
				0,
				0,
				typeof(iSpoonFork).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iIngotIron).AngeHash(),
				typeof(iKeyIron).AngeHash(),
				0,
				0,
				typeof(iLockIron).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iIngotGold).AngeHash(),
				typeof(iKeyGold).AngeHash(),
				0,
				0,
				typeof(iLockGold).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iClay).AngeHash(),
				typeof(iLeaf).AngeHash(),
				typeof(iRuneWater).AngeHash(),
				0,
				typeof(iTeapot).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iIngotIron).AngeHash(),
				0,
				0,
				0,
				typeof(iBolt).AngeHash(), 4
			);
			ItemSystem.AddCombination(
				typeof(iPaper).AngeHash(),
				typeof(iDice).AngeHash(),
				0,
				0,
				typeof(iPokerCard).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iItemCoin).AngeHash(),
				typeof(iDice).AngeHash(),
				0,
				0,
				typeof(iGamblingChip).AngeHash()
			);

		}


		private static void General11 () {

			ItemSystem.AddCombination(
				typeof(iSkull).AngeHash(),
				typeof(iRuneFire).AngeHash(),
				0,
				0,
				typeof(iTotemFire).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iSkull).AngeHash(),
				typeof(iRuneWater).AngeHash(),
				0,
				0,
				typeof(iTotemWater).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iSkull).AngeHash(),
				typeof(iRuneLightning).AngeHash(),
				0,
				0,
				typeof(iTotemLightning).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iSkull).AngeHash(),
				typeof(iRunePoison).AngeHash(),
				0,
				0,
				typeof(iTotemPoison).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iLetter).AngeHash(),
				typeof(iElectricWire).AngeHash(),
				0,
				0,
				typeof(iDialogBox).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iTreeBranchBundle).AngeHash(),
				typeof(iRuneWater).AngeHash(),
				0,
				0,
				typeof(iPaper).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iIngotGold).AngeHash(),
				0,
				0,
				0,
				typeof(iItemCoin).AngeHash(), 100
			);
			ItemSystem.AddCombination(
				typeof(iLeaf).AngeHash(),
				typeof(iRunePoison).AngeHash(),
				0,
				0,
				typeof(iHerb).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iElectricWire).AngeHash(),
				typeof(iIngotIron).AngeHash(),
				typeof(iBookYellow).AngeHash(),
				typeof(iRuneLightning).AngeHash(),
				typeof(iProcessor).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iTreeBranch).AngeHash(),
				typeof(iRope).AngeHash(),
				typeof(iTrayWood).AngeHash(),
				typeof(iTrayWood).AngeHash(),
				typeof(iScales).AngeHash()
			);

		}


		private static void General12 () {
			ItemSystem.AddCombination(
				typeof(iVolatilePotionEmpty).AngeHash(),
				typeof(iRuneFire).AngeHash(),
				0,
				0,
				typeof(iVolatilePotionRed).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iVolatilePotionEmpty).AngeHash(),
				typeof(iRuneWater).AngeHash(),
				0,
				0,
				typeof(iVolatilePotionBlue).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iVolatilePotionEmpty).AngeHash(),
				typeof(iRuneLightning).AngeHash(),
				0,
				0,
				typeof(iVolatilePotionOrange).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iVolatilePotionEmpty).AngeHash(),
				typeof(iRunePoison).AngeHash(),
				0,
				0,
				typeof(iVolatilePotionGreen).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iGlass).AngeHash(),
				typeof(iGlass).AngeHash(),
				0,
				0,
				typeof(iVolatilePotionEmpty).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iTreeBranch).AngeHash(),
				typeof(iRuneWater).AngeHash(),
				0,
				0,
				typeof(iRope).AngeHash(), 4
			);
			ItemSystem.AddCombination(
				typeof(iRope).AngeHash(),
				typeof(iIngotIron).AngeHash(),
				0,
				0,
				typeof(iIronWire).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iIronWire).AngeHash(),
				typeof(iRuneLightning).AngeHash(),
				0,
				0,
				typeof(iElectricWire).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iTreeBranch).AngeHash(),
				typeof(iTreeBranch).AngeHash(),
				typeof(iTreeBranch).AngeHash(),
				typeof(iRope).AngeHash(),
				typeof(iTreeBranchBundle).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iTreeTrunk).AngeHash(),
				typeof(iTreeTrunk).AngeHash(),
				typeof(iTreeTrunk).AngeHash(),
				0,
				typeof(iItemWoodBoard).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iTreeStump).AngeHash(),
				typeof(iTreeStump).AngeHash(),
				0,
				0,
				typeof(iItemWoodBoard).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iMedalGold).AngeHash(),
				typeof(iIngotGold).AngeHash(),
				typeof(iIngotGold).AngeHash(),
				0,
				typeof(iTrophy).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iPotionEmpty).AngeHash(),
				typeof(iIronWire).AngeHash(),
				typeof(iRuneFire).AngeHash(),
				0,
				typeof(iLantern).AngeHash()
			);

		}


		private static void General13 () {

			ItemSystem.AddCombination(
				typeof(iPotionEmpty).AngeHash(),
				typeof(iRuneFire).AngeHash(),
				0,
				0,
				typeof(iPotionRed).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iPotionEmpty).AngeHash(),
				typeof(iRuneWater).AngeHash(),
				0,
				0,
				typeof(iPotionBlue).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iPotionEmpty).AngeHash(),
				typeof(iRuneLightning).AngeHash(),
				0,
				0,
				typeof(iPotionOrange).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iPotionEmpty).AngeHash(),
				typeof(iRunePoison).AngeHash(),
				0,
				0,
				typeof(iPotionGreen).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iGlass).AngeHash(),
				typeof(iGlass).AngeHash(),
				typeof(iTreeBranch).AngeHash(),
				0,
				typeof(iPotionEmpty).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iMeatBone).AngeHash(),
				0,
				0,
				0,
				typeof(iBrokenBone).AngeHash(), 2
			);
			ItemSystem.AddCombination(
				typeof(iPaper).AngeHash(),
				typeof(iTreeBranch).AngeHash(),
				typeof(iTreeBranch).AngeHash(),
				0,
				typeof(iHandFan).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iPaper).AngeHash(),
				typeof(iABC).AngeHash(),
				0,
				0,
				typeof(iLetter).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iBeetle).AngeHash(),
				typeof(iProcessor).AngeHash(),
				typeof(iElectricWire).AngeHash(),
				typeof(iBattery).AngeHash(),
				typeof(iMachineBeetle).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iPotionEmpty).AngeHash(),
				typeof(iRuneLightning).AngeHash(),
				typeof(iElectricWire).AngeHash(),
				0,
				typeof(iBulb).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iGunpowder).AngeHash(),
				typeof(iPaper).AngeHash(),
				0,
				0,
				typeof(iFirecracker).AngeHash()
			);
		}


		private static void General14 () {
			ItemSystem.AddCombination(
				typeof(iLegoBlockWhite).AngeHash(),
				typeof(iPencil).AngeHash(),
				0,
				0,
				typeof(iDice).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iTreeBranchBundle).AngeHash(),
				typeof(iRuneFire).AngeHash(),
				0,
				0,
				typeof(iCharcoal).AngeHash(), 3
			);
			ItemSystem.AddCombination(
				typeof(iTreeTrunk).AngeHash(),
				typeof(iRuneFire).AngeHash(),
				0,
				0,
				typeof(iCharcoal).AngeHash(), 6
			);
			ItemSystem.AddCombination(
				typeof(iTreeStump).AngeHash(),
				typeof(iRuneFire).AngeHash(),
				0,
				0,
				typeof(iCharcoal).AngeHash(), 9
			);
			ItemSystem.AddCombination(
				typeof(iItemWoodBoard).AngeHash(),
				typeof(iRuneFire).AngeHash(),
				0,
				0,
				typeof(iCharcoal).AngeHash(), 12
			);
			ItemSystem.AddCombination(
				typeof(iKeyIron).AngeHash(),
				typeof(iIngotGold).AngeHash(),
				0,
				0,
				typeof(iKeyGold).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iStone).AngeHash(),
				typeof(iStone).AngeHash(),
				0,
				0,
				typeof(iStonePolished).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iFlint).AngeHash(),
				typeof(iFlint).AngeHash(),
				0,
				0,
				typeof(iFlintPolished).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iFishBone).AngeHash(),
				typeof(iTreeBranch).AngeHash(),
				0,
				0,
				typeof(iComb).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iLeather).AngeHash(),
				typeof(iLeather).AngeHash(),
				typeof(iLeather).AngeHash(),
				0,
				typeof(iHandbag).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iHandbag).AngeHash(),
				typeof(iCapsule).AngeHash(),
				0,
				0,
				typeof(iFirstAidKit).AngeHash()
			);

		}


		private static void Food0 () {
			ItemSystem.AddCombination(
				typeof(iBeefRaw).AngeHash(),
				0,
				0,
				0,
				typeof(iMeatballRaw).AngeHash(), 4
			);
			ItemSystem.AddCombination(
				typeof(iPorkRaw).AngeHash(),
				0,
				0,
				0,
				typeof(iMeatballRaw).AngeHash(), 3
			);
			ItemSystem.AddCombination(
				typeof(iMeatballRaw).AngeHash(),
				typeof(iMeatballRaw).AngeHash(),
				typeof(iMeatballRaw).AngeHash(),
				typeof(iTreeBranch).AngeHash(),
				typeof(iMeatSkewersRaw).AngeHash()
			);
		}


		private static void Food1 () {


			ItemSystem.AddCombination(
				typeof(iMeatballCooked).AngeHash(),
				typeof(iMeatballCooked).AngeHash(),
				typeof(iMeatballCooked).AngeHash(),
				typeof(iTreeBranch).AngeHash(),
				typeof(iMeatSkewersCooked).AngeHash()
			);

			ItemSystem.AddCombination(
				typeof(iBeefRaw).AngeHash(),
				typeof(iRuneFire).AngeHash(),
				0,
				0,
				typeof(iBeefCooked).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iChickenLegRaw).AngeHash(),
				typeof(iRuneFire).AngeHash(),
				0,
				0,
				typeof(iChickenLegCooked).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iChickenWingRaw).AngeHash(),
				typeof(iRuneFire).AngeHash(),
				0,
				0,
				typeof(iChickenWingCooked).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iPorkRaw).AngeHash(),
				typeof(iRuneFire).AngeHash(),
				0,
				0,
				typeof(iPorkCooked).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iMeatballRaw).AngeHash(),
				typeof(iRuneFire).AngeHash(),
				0,
				0,
				typeof(iMeatballCooked).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iMeatSkewersRaw).AngeHash(),
				typeof(iRuneFire).AngeHash(),
				0,
				0,
				typeof(iMeatSkewersCooked).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iSausageRaw).AngeHash(),
				typeof(iRuneFire).AngeHash(),
				0,
				0,
				typeof(iSausageCooked).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iTurkeyRaw).AngeHash(),
				typeof(iRuneFire).AngeHash(),
				0,
				0,
				typeof(iTurkeyCooked).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iFishRaw).AngeHash(),
				typeof(iRuneFire).AngeHash(),
				0,
				0,
				typeof(iFishCooked).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iPterophyllum).AngeHash(),
				typeof(iRuneFire).AngeHash(),
				0,
				0,
				typeof(iPterophyllumCooked).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iFlounder).AngeHash(),
				typeof(iRuneFire).AngeHash(),
				0,
				0,
				typeof(iFlounderCooked).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iSquidRaw).AngeHash(),
				typeof(iRuneFire).AngeHash(),
				0,
				0,
				typeof(iSquidCooked).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iLobsterRaw).AngeHash(),
				typeof(iRuneFire).AngeHash(),
				0,
				0,
				typeof(iLobsterCooked).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iCrabRaw).AngeHash(),
				typeof(iRuneFire).AngeHash(),
				0,
				0,
				typeof(iCrabCooked).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iSnailRaw).AngeHash(),
				typeof(iRuneFire).AngeHash(),
				0,
				0,
				typeof(iSnailCooked).AngeHash()
			);

		}


		private static void Food2 () {


			ItemSystem.AddCombination(
				typeof(iFlour).AngeHash(),
				typeof(iCream).AngeHash(),
				typeof(iHorn).AngeHash(),
				typeof(iRuneFire).AngeHash(),
				typeof(iCreamHorn).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iBread).AngeHash(),
				typeof(iCream).AngeHash(),
				typeof(iHorn).AngeHash(),
				0,
				typeof(iCroissant).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iBread).AngeHash(),
				typeof(iSausageCooked).AngeHash(),
				typeof(iKetchup).AngeHash(),
				typeof(iButter).AngeHash(),
				typeof(iHotdog).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iBread).AngeHash(),
				typeof(iRope).AngeHash(),
				0,
				0,
				typeof(iBreadKnot).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iFlour).AngeHash(),
				typeof(iSalt).AngeHash(),
				typeof(iRuneFire).AngeHash(),
				typeof(iRuneWater).AngeHash(),
				typeof(iLyeRoll).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iCakeEmbryo).AngeHash(),
				typeof(iCream).AngeHash(),
				0,
				0,
				typeof(iCakeCream).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iCakeEmbryo).AngeHash(),
				typeof(iCream).AngeHash(),
				typeof(iCream).AngeHash(),
				0,
				typeof(iCakeRoll).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iBread).AngeHash(),
				typeof(iBread).AngeHash(),
				typeof(iPorkCooked).AngeHash(),
				typeof(iCollardCut).AngeHash(),
				typeof(iHamburger).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iBread).AngeHash(),
				typeof(iBread).AngeHash(),
				typeof(iPorkCooked).AngeHash(),
				typeof(iCabbageCut).AngeHash(),
				typeof(iHamburger).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iBread).AngeHash(),
				typeof(iBread).AngeHash(),
				typeof(iPorkCooked).AngeHash(),
				typeof(iChineseCabbageCut).AngeHash(),
				typeof(iHamburger).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iFlour).AngeHash(),
				typeof(iFlour).AngeHash(),
				typeof(iRuneFire).AngeHash(),
				typeof(iRuneWater).AngeHash(),
				typeof(iBread).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iFlour).AngeHash(),
				typeof(iCream).AngeHash(),
				typeof(iRuneFire).AngeHash(),
				typeof(iRuneWater).AngeHash(),
				typeof(iDonut).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iPotatoCut).AngeHash(),
				typeof(iRuneFire).AngeHash(),
				0,
				0,
				typeof(iFries).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iFlour).AngeHash(),
				typeof(iMeatballRaw).AngeHash(),
				typeof(iRuneFire).AngeHash(),
				typeof(iRuneWater).AngeHash(),
				typeof(iBaoZi).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iFlour).AngeHash(),
				typeof(iPorkRaw).AngeHash(),
				typeof(iRuneFire).AngeHash(),
				typeof(iRuneWater).AngeHash(),
				typeof(iDumpling).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iNori).AngeHash(),
				typeof(iRice).AngeHash(),
				typeof(iCucumberCut).AngeHash(),
				typeof(iSausageCooked).AngeHash(),
				typeof(iSushi).AngeHash()
			);

		}


		private static void Food3 () {

			ItemSystem.AddCombination(
				typeof(iMilk).AngeHash(),
				typeof(iMilk).AngeHash(),
				typeof(iSalt).AngeHash(),
				0,
				typeof(iCheese).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iRice).AngeHash(),
				typeof(iNori).AngeHash(),
				0,
				0,
				typeof(iOnigiri).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iFlour).AngeHash(),
				typeof(iChocolate).AngeHash(),
				typeof(iRuneFire).AngeHash(),
				typeof(iRuneWater).AngeHash(),
				typeof(iCookie).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iPancake).AngeHash(),
				typeof(iCheese).AngeHash(),
				typeof(iSausageRaw).AngeHash(),
				typeof(iRuneFire).AngeHash(),
				typeof(iPizza).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iCookie).AngeHash(),
				typeof(iCream).AngeHash(),
				0,
				0,
				typeof(iSandwichBiscuit).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iPotatoCut).AngeHash(),
				typeof(iPotatoCut).AngeHash(),
				typeof(iRuneFire).AngeHash(),
				0,
				typeof(iPotatoChips).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iFlour).AngeHash(),
				typeof(iEgg).AngeHash(),
				typeof(iEgg).AngeHash(),
				typeof(iRuneFire).AngeHash(),
				typeof(iEggTart).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iPumpkinCut).AngeHash(),
				typeof(iCucumberCut).AngeHash(),
				typeof(iRuneWater).AngeHash(),
				typeof(iRuneFire).AngeHash(),
				typeof(iSoup).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iFlour).AngeHash(),
				typeof(iFlour).AngeHash(),
				typeof(iRuneFire).AngeHash(),
				0,
				typeof(iPancake).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iMilk).AngeHash(),
				typeof(iOrangeJuice).AngeHash(),
				typeof(iFlour).AngeHash(),
				typeof(iCornCut).AngeHash(),
				typeof(iPudding).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iMilk).AngeHash(),
				typeof(iCream).AngeHash(),
				0,
				0,
				typeof(iIceCream).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iFlour).AngeHash(),
				typeof(iFlour).AngeHash(),
				typeof(iEgg).AngeHash(),
				typeof(iRuneFire).AngeHash(),
				typeof(iToast).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iFlour).AngeHash(),
				typeof(iFlour).AngeHash(),
				typeof(iFlour).AngeHash(),
				typeof(iRuneWater).AngeHash(),
				typeof(iNoodle).AngeHash()
			);

		}


		private static void Food4 () {

			ItemSystem.AddCombination(
				typeof(iTomatoCut).AngeHash(),
				typeof(iTomatoCut).AngeHash(),
				typeof(iSalt).AngeHash(),
				0,
				typeof(iKetchup).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iOnionCut).AngeHash(),
				typeof(iRuneFire).AngeHash(),
				0,
				0,
				typeof(iOnionRing).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iCornCut).AngeHash(),
				typeof(iRuneFire).AngeHash(),
				0,
				0,
				typeof(iPopcorn).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iEgg).AngeHash(),
				typeof(iRuneFire).AngeHash(),
				0,
				0,
				typeof(iFriedEgg).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iCakeEmbryo).AngeHash(),
				typeof(iChocolate).AngeHash(),
				0,
				0,
				typeof(iChocolateMousse).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iCakeEmbryo).AngeHash(),
				typeof(iCherryCut).AngeHash(),
				0,
				0,
				typeof(iCherryMousse).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iPorkCooked).AngeHash(),
				typeof(iRuneFire).AngeHash(),
				0,
				0,
				typeof(iBacon).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iNoodle).AngeHash(),
				typeof(iSalt).AngeHash(),
				typeof(iBlackPepper).AngeHash(),
				0,
				typeof(iInstantNoodle).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iGreenBeansCut).AngeHash(),
				typeof(iSalt).AngeHash(),
				typeof(iRuneWater).AngeHash(),
				0,
				typeof(iTofu).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iBeefCooked).AngeHash(),
				typeof(iRuneFire).AngeHash(),
				0,
				0,
				typeof(iDriedBeef).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iMilk).AngeHash(),
				typeof(iSalt).AngeHash(),
				0,
				0,
				typeof(iButter).AngeHash()
			);

		}


		private static void Food5 () {

			ItemSystem.AddCombination(
				typeof(iTentacle).AngeHash(),
				typeof(iSalt).AngeHash(),
				typeof(iRuneFire).AngeHash(),
				0,
				typeof(iTakoyaki).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iPancake).AngeHash(),
				typeof(iBeefCooked).AngeHash(),
				typeof(iSpinachCut).AngeHash(),
				typeof(iChili).AngeHash(),
				typeof(iArepa).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iPancake).AngeHash(),
				typeof(iPorkCooked).AngeHash(),
				typeof(iCabbageCut).AngeHash(),
				typeof(iKetchup).AngeHash(),
				typeof(iTaco).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iNoodle).AngeHash(),
				typeof(iKetchup).AngeHash(),
				0,
				0,
				typeof(iSpaghetti).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iRice).AngeHash(),
				typeof(iCurry).AngeHash(),
				0,
				0,
				typeof(iCurryRice).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iGingerCut).AngeHash(),
				typeof(iGarlicCut).AngeHash(),
				typeof(iCorianderCut).AngeHash(),
				typeof(iRuneWater).AngeHash(),
				typeof(iCurry).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iFlour).AngeHash(),
				typeof(iEgg).AngeHash(),
				typeof(iRuneWater).AngeHash(),
				typeof(iRuneFire).AngeHash(),
				typeof(iCakeEmbryo).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iMilk).AngeHash(),
				typeof(iMilk).AngeHash(),
				0,
				0,
				typeof(iCream).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iRice).AngeHash(),
				typeof(iLeaf).AngeHash(),
				typeof(iRuneWater).AngeHash(),
				typeof(iRuneFire).AngeHash(),
				typeof(iZongzi).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iFlour).AngeHash(),
				typeof(iEgg).AngeHash(),
				typeof(iTrayWood).AngeHash(),
				typeof(iRuneFire).AngeHash(),
				typeof(iMoonCake).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iTofu).AngeHash(),
				typeof(iChiliCut).AngeHash(),
				typeof(iBlackPepper).AngeHash(),
				typeof(iRuneFire).AngeHash(),
				typeof(iMapoTofu).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iPorkRaw).AngeHash(),
				typeof(iSalt).AngeHash(),
				typeof(iCarrotCut).AngeHash(),
				typeof(iRuneFire).AngeHash(),
				typeof(iFriedPorkInScoop).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iRice).AngeHash(),
				typeof(iRuneWater).AngeHash(),
				typeof(iRunePoison).AngeHash(),
				0,
				typeof(iLiquor).AngeHash()
			);

		}


		private static void Food6 () {

			ItemSystem.AddCombination(
				typeof(iLeaf).AngeHash(),
				typeof(iRuneWater).AngeHash(),
				0,
				0,
				typeof(iGreenTea).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iLiquor).AngeHash(),
				typeof(iRice).AngeHash(),
				typeof(iRuneWater).AngeHash(),
				typeof(iRuneWater).AngeHash(),
				typeof(iBeer).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iMilk).AngeHash(),
				typeof(iTentacle).AngeHash(),
				0,
				0,
				typeof(iTakoMilk).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iLiquor).AngeHash(),
				typeof(iGrapePurpleCut).AngeHash(),
				typeof(iRuneWater).AngeHash(),
				typeof(iRuneWater).AngeHash(),
				typeof(iGrapeWine).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iLiquor).AngeHash(),
				typeof(iAppleRedCut).AngeHash(),
				typeof(iRuneWater).AngeHash(),
				typeof(iRuneWater).AngeHash(),
				typeof(iAppleWine).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iOrangeCut).AngeHash(),
				typeof(iRuneWater).AngeHash(),
				0,
				0,
				typeof(iOrangeJuice).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iGrapePurpleCut).AngeHash(),
				typeof(iRuneWater).AngeHash(),
				0,
				0,
				typeof(iGrapeJuice).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iStrawberryCut).AngeHash(),
				typeof(iRuneWater).AngeHash(),
				0,
				0,
				typeof(iStrawberryJuice).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iLemonCut).AngeHash(),
				typeof(iRuneWater).AngeHash(),
				0,
				0,
				typeof(iLemonWater).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iCoconutCut).AngeHash(),
				typeof(iRuneWater).AngeHash(),
				0,
				0,
				typeof(iCoconutJuice).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iLiquor).AngeHash(),
				typeof(iLiquor).AngeHash(),
				0,
				0,
				typeof(iAlcohol).AngeHash()
			);
		}


		private static void Food8 () {

			ItemSystem.AddCombination(
				typeof(iCorn).AngeHash(),
				0, 0, 0,
				typeof(iCornCut).AngeHash(), 2
			);
			ItemSystem.AddCombination(
				typeof(iPumpkin).AngeHash(),
				0, 0, 0,
				typeof(iPumpkinCut).AngeHash(), 2
			);
			ItemSystem.AddCombination(
				typeof(iRadish).AngeHash(),
				0, 0, 0,
				typeof(iRadishCut).AngeHash(), 2
			);
			ItemSystem.AddCombination(
				typeof(iPineapple).AngeHash(),
				0, 0, 0,
				typeof(iPineappleCut).AngeHash(), 2
			);
			ItemSystem.AddCombination(
				typeof(iBambooShoot).AngeHash(),
				0, 0, 0,
				typeof(iBambooShootCut).AngeHash(), 2
			);
			ItemSystem.AddCombination(
				typeof(iGreenPepper).AngeHash(),
				0, 0, 0,
				typeof(iGreenPepperCut).AngeHash(), 2
			);
			ItemSystem.AddCombination(
				typeof(iGreenBeans).AngeHash(),
				0, 0, 0,
				typeof(iGreenBeansCut).AngeHash(), 2
			);
			ItemSystem.AddCombination(
				typeof(iGarlic).AngeHash(),
				0, 0, 0,
				typeof(iGarlicCut).AngeHash(), 2
			);
			ItemSystem.AddCombination(
				typeof(iGinger).AngeHash(),
				0, 0, 0,
				typeof(iGingerCut).AngeHash(), 2
			);
			ItemSystem.AddCombination(
				typeof(iScallion).AngeHash(),
				0, 0, 0,
				typeof(iScallionCut).AngeHash(), 2
			);
			ItemSystem.AddCombination(
				typeof(iPeanut).AngeHash(),
				0, 0, 0,
				typeof(iPeanutCut).AngeHash(), 2
			);
			ItemSystem.AddCombination(
				typeof(iLotusRoot).AngeHash(),
				0, 0, 0,
				typeof(iLotusRootCut).AngeHash(), 2
			);
			ItemSystem.AddCombination(
				typeof(iCoriander).AngeHash(),
				0, 0, 0,
				typeof(iCorianderCut).AngeHash(), 2
			);
			ItemSystem.AddCombination(
				typeof(iCollard).AngeHash(),
				0, 0, 0,
				typeof(iCollardCut).AngeHash(), 2
			);
			ItemSystem.AddCombination(
				typeof(iCabbage).AngeHash(),
				0, 0, 0,
				typeof(iCabbageCut).AngeHash(), 2
			);
		}


		private static void Food10 () {

			ItemSystem.AddCombination(
				typeof(iCucumber).AngeHash(),
				0, 0, 0,
				typeof(iCucumberCut).AngeHash(), 2
			);
			ItemSystem.AddCombination(
				typeof(iChineseCabbage).AngeHash(),
				0, 0, 0,
				typeof(iChineseCabbageCut).AngeHash(), 2
			);
			ItemSystem.AddCombination(
				typeof(iEggplant).AngeHash(),
				0, 0, 0,
				typeof(iEggplantCut).AngeHash(), 2
			);
			ItemSystem.AddCombination(
				typeof(iSpinach).AngeHash(),
				0, 0, 0,
				typeof(iSpinachCut).AngeHash(), 2
			);
			ItemSystem.AddCombination(
				typeof(iTomato).AngeHash(),
				0, 0, 0,
				typeof(iTomatoCut).AngeHash(), 2
			);
			ItemSystem.AddCombination(
				typeof(iPotato).AngeHash(),
				0, 0, 0,
				typeof(iPotatoCut).AngeHash(), 2
			);
			ItemSystem.AddCombination(
				typeof(iBroccoli).AngeHash(),
				0, 0, 0,
				typeof(iBroccoliCut).AngeHash(), 2
			);
			ItemSystem.AddCombination(
				typeof(iCauliflower).AngeHash(),
				0, 0, 0,
				typeof(iCauliflowerCut).AngeHash(), 2
			);
			ItemSystem.AddCombination(
				typeof(iChili).AngeHash(),
				0, 0, 0,
				typeof(iChiliCut).AngeHash(), 2
			);
			ItemSystem.AddCombination(
				typeof(iCarrot).AngeHash(),
				0, 0, 0,
				typeof(iCarrotCut).AngeHash(), 2
			);
			ItemSystem.AddCombination(
				typeof(iEnokiMushroom).AngeHash(),
				0, 0, 0,
				typeof(iEnokiMushroomCut).AngeHash(), 2
			);
			ItemSystem.AddCombination(
				typeof(iMushroomRed).AngeHash(),
				0, 0, 0,
				typeof(iMushroomRedCut).AngeHash(), 2
			);
			ItemSystem.AddCombination(
				typeof(iMushroomGreen).AngeHash(),
				0, 0, 0,
				typeof(iMushroomGreenCut).AngeHash(), 2
			);
			ItemSystem.AddCombination(
				typeof(iMushroomBlue).AngeHash(),
				0, 0, 0,
				typeof(iMushroomBlueCut).AngeHash(), 2
			);
			ItemSystem.AddCombination(
				typeof(iOnion).AngeHash(),
				0, 0, 0,
				typeof(iOnionCut).AngeHash(), 2
			);
		}


		private static void Food12 () {

			ItemSystem.AddCombination(
				typeof(iWatermelon).AngeHash(),
				0, 0, 0,
				typeof(iWatermelonCut).AngeHash(), 2
			);
			ItemSystem.AddCombination(
				typeof(iAvocado).AngeHash(),
				0, 0, 0,
				typeof(iAvocadoCut).AngeHash(), 2
			);
			ItemSystem.AddCombination(
				typeof(iMulberries).AngeHash(),
				0, 0, 0,
				typeof(iMulberriesCut).AngeHash(), 2
			);
			ItemSystem.AddCombination(
				typeof(iLychee).AngeHash(),
				0, 0, 0,
				typeof(iLycheeCut).AngeHash(), 2
			);
			ItemSystem.AddCombination(
				typeof(iMango).AngeHash(),
				0, 0, 0,
				typeof(iMangoCut).AngeHash(), 2
			);
			ItemSystem.AddCombination(
				typeof(iCarambola).AngeHash(),
				0, 0, 0,
				typeof(iCarambolaCut).AngeHash(), 2
			);
			ItemSystem.AddCombination(
				typeof(iPapaya).AngeHash(),
				0, 0, 0,
				typeof(iPapayaCut).AngeHash(), 2
			);
			ItemSystem.AddCombination(
				typeof(iPassionFruit).AngeHash(),
				0, 0, 0,
				typeof(iPassionFruitCut).AngeHash(), 2
			);
			ItemSystem.AddCombination(
				typeof(iKiwi).AngeHash(),
				0, 0, 0,
				typeof(iKiwiCut).AngeHash(), 2
			);
			ItemSystem.AddCombination(
				typeof(iMangosteen).AngeHash(),
				0, 0, 0,
				typeof(iMangosteenCut).AngeHash(), 2
			);
			ItemSystem.AddCombination(
				typeof(iCoconut).AngeHash(),
				0, 0, 0,
				typeof(iCoconutCut).AngeHash(), 2
			);
			ItemSystem.AddCombination(
				typeof(iDurian).AngeHash(),
				0, 0, 0,
				typeof(iDurianCut).AngeHash(), 2
			);
			ItemSystem.AddCombination(
				typeof(iCherry).AngeHash(),
				0, 0, 0,
				typeof(iCherryCut).AngeHash(), 2
			);
			ItemSystem.AddCombination(
				typeof(iPomegranate).AngeHash(),
				0, 0, 0,
				typeof(iPomegranateCut).AngeHash(), 2
			);
			ItemSystem.AddCombination(
				typeof(iHawthorn).AngeHash(),
				0, 0, 0,
				typeof(iHawthornCut).AngeHash(), 2
			);
		}


		private static void Food14 () {

			ItemSystem.AddCombination(
				typeof(iAppleRed).AngeHash(),
				0, 0, 0,
				typeof(iAppleRedCut).AngeHash(), 2
			);
			ItemSystem.AddCombination(
				typeof(iAppleGreen).AngeHash(),
				0, 0, 0,
				typeof(iAppleGreenCut).AngeHash(), 2
			);
			ItemSystem.AddCombination(
				typeof(iPear).AngeHash(),
				0, 0, 0,
				typeof(iPearCut).AngeHash(), 2
			);
			ItemSystem.AddCombination(
				typeof(iPeach).AngeHash(),
				0, 0, 0,
				typeof(iPeachCut).AngeHash(), 2
			);
			ItemSystem.AddCombination(
				typeof(iBanana).AngeHash(),
				0, 0, 0,
				typeof(iBananaCut).AngeHash(), 2
			);
			ItemSystem.AddCombination(
				typeof(iOrange).AngeHash(),
				0, 0, 0,
				typeof(iOrangeCut).AngeHash(), 2
			);
			ItemSystem.AddCombination(
				typeof(iGrapePurple).AngeHash(),
				0, 0, 0,
				typeof(iGrapePurpleCut).AngeHash(), 2
			);
			ItemSystem.AddCombination(
				typeof(iGrapeGreen).AngeHash(),
				0, 0, 0,
				typeof(iGrapeGreenCut).AngeHash(), 2
			);
			ItemSystem.AddCombination(
				typeof(iStrawberry).AngeHash(),
				0, 0, 0,
				typeof(iStrawberryCut).AngeHash(), 2
			);
			ItemSystem.AddCombination(
				typeof(iBlueberry).AngeHash(),
				0, 0, 0,
				typeof(iBlueberryCut).AngeHash(), 2
			);
			ItemSystem.AddCombination(
				typeof(iLemon).AngeHash(),
				0, 0, 0,
				typeof(iLemonCut).AngeHash(), 2
			);
			ItemSystem.AddCombination(
				typeof(iLime).AngeHash(),
				0, 0, 0,
				typeof(iLimeCut).AngeHash(), 2
			);
			ItemSystem.AddCombination(
				typeof(iPitaya).AngeHash(),
				0, 0, 0,
				typeof(iPitayaCut).AngeHash(), 2
			);
			ItemSystem.AddCombination(
				typeof(iApricot).AngeHash(),
				0, 0, 0,
				typeof(iApricotCut).AngeHash(), 2
			);
			ItemSystem.AddCombination(
				typeof(iHoneydew).AngeHash(),
				0, 0, 0,
				typeof(iHoneydewCut).AngeHash(), 2
			);
		}


		private static void Equipment0 () {


			ItemSystem.AddCombination(
				typeof(iTreeStump).AngeHash(),
				typeof(iTreeTrunk).AngeHash(),
				0,
				0,
				typeof(iHelmetWood).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iHelmetWood).AngeHash(),
				typeof(iIngotIron).AngeHash(),
				0,
				0,
				typeof(iHelmetIron).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iHelmetIron).AngeHash(),
				typeof(iIngotGold).AngeHash(),
				0,
				0,
				typeof(iHelmetGold).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iHelmetWood).AngeHash(),
				typeof(iCone).AngeHash(),
				0,
				0,
				typeof(iSafetyHelmet).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iTopHat).AngeHash(),
				typeof(iSkull).AngeHash(),
				typeof(iMeatBone).AngeHash(),
				typeof(iMeatBone).AngeHash(),
				typeof(iPirateHat).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iTopHat).AngeHash(),
				typeof(iRuneCube).AngeHash(),
				0,
				0,
				typeof(iWizardHat).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iFabric).AngeHash(),
				typeof(iRibbon).AngeHash(),
				typeof(iBucketIron).AngeHash(),
				0,
				typeof(iTopHat).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iPaw).AngeHash(),
				typeof(iRope).AngeHash(),
				typeof(iItemWoodBoard).AngeHash(),
				0,
				typeof(iFoxMask).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iIngotGold).AngeHash(),
				typeof(iWheel).AngeHash(),
				0,
				0,
				typeof(iCirclet).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iHelmetIron).AngeHash(),
				typeof(iIngotIron).AngeHash(),
				0,
				0,
				typeof(iHelmetFull).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iCirclet).AngeHash(),
				typeof(iIngotGold).AngeHash(),
				typeof(iIngotGold).AngeHash(),
				typeof(iIngotGold).AngeHash(),
				typeof(iCrown).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iHelmetWood).AngeHash(),
				typeof(iRunePoison).AngeHash(),
				0,
				0,
				typeof(iGasMask).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iHelmetIron).AngeHash(),
				typeof(iHorn).AngeHash(),
				typeof(iHorn).AngeHash(),
				0,
				typeof(iHelmetViking).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iHelmetIron).AngeHash(),
				typeof(iHelmetIron).AngeHash(),
				0,
				0,
				typeof(iHelmetKnight).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iFabric).AngeHash(),
				typeof(iRope).AngeHash(),
				0,
				0,
				typeof(iHelmetBandit).AngeHash()
			);

		}


		private static void Equipment1 () {

			ItemSystem.AddCombination(
				typeof(iTreeStump).AngeHash(),
				typeof(iItemWoodBoard).AngeHash(),
				0,
				0,
				typeof(iArmorWood).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iArmorWood).AngeHash(),
				typeof(iIngotIron).AngeHash(),
				0,
				0,
				typeof(iArmorIron).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iArmorIron).AngeHash(),
				typeof(iIngotGold).AngeHash(),
				0,
				0,
				typeof(iArmorGold).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iArmorIron).AngeHash(),
				typeof(iFabric).AngeHash(),
				0,
				0,
				typeof(iArmorBrave).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iArmorWood).AngeHash(),
				typeof(iSkull).AngeHash(),
				typeof(iSkull).AngeHash(),
				0,
				typeof(iArmorSkull).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iArmorIron).AngeHash(),
				typeof(iIngotIron).AngeHash(),
				0,
				0,
				typeof(iChainMail).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iArmorWood).AngeHash(),
				typeof(iClay).AngeHash(),
				0,
				0,
				typeof(iArmorClay).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iFabric).AngeHash(),
				typeof(iFabric).AngeHash(),
				typeof(iFabric).AngeHash(),
				typeof(iFabric).AngeHash(),
				typeof(iVelvetDress).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iFabric).AngeHash(),
				typeof(iFabric).AngeHash(),
				typeof(iFabric).AngeHash(),
				typeof(iRope).AngeHash(),
				typeof(iCloak).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iArmorIron).AngeHash(),
				typeof(iArmorIron).AngeHash(),
				0,
				0,
				typeof(iArmorKnight).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iCloak).AngeHash(),
				typeof(iRuneCube).AngeHash(),
				0,
				0,
				typeof(iMageRobe).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iArmorWood).AngeHash(),
				typeof(iLeather).AngeHash(),
				typeof(iLeather).AngeHash(),
				typeof(iLeather).AngeHash(),
				typeof(iArmorLeather).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iArmorWood).AngeHash(),
				typeof(iBolt).AngeHash(),
				typeof(iBolt).AngeHash(),
				typeof(iBolt).AngeHash(),
				typeof(iArmorStudded).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iCloak).AngeHash(),
				typeof(iFist).AngeHash(),
				typeof(iEar).AngeHash(),
				typeof(iNose).AngeHash(),
				typeof(iPractitionerRobe).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iArmorStudded).AngeHash(),
				typeof(iIngotGold).AngeHash(),
				0,
				0,
				typeof(iArmorPaladin).AngeHash()
			);

		}


		private static void Equipment2 () {

			ItemSystem.AddCombination(
				typeof(iTreeTrunk).AngeHash(),
				typeof(iTreeBranch).AngeHash(),
				0,
				0,
				typeof(iGlovesWood).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iGlovesWood).AngeHash(),
				typeof(iIngotIron).AngeHash(),
				0,
				0,
				typeof(iGlovesIron).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iGlovesIron).AngeHash(),
				typeof(iIngotGold).AngeHash(),
				0,
				0,
				typeof(iGlovesGold).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iGlovesWood).AngeHash(),
				typeof(iCottonBall).AngeHash(),
				0,
				0,
				typeof(iGlovesSki).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iGlovesIron).AngeHash(),
				typeof(iBolt).AngeHash(),
				typeof(iElectricWire).AngeHash(),
				typeof(iBattery).AngeHash(),
				typeof(iGlovesMachine).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iGlovesIron).AngeHash(),
				typeof(iGemRed).AngeHash(),
				typeof(iGemBlue).AngeHash(),
				typeof(iGemOrange).AngeHash(),
				typeof(iGlovesGem).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iGlovesIron).AngeHash(),
				typeof(iGemRed).AngeHash(),
				typeof(iGemBlue).AngeHash(),
				typeof(iGemGreen).AngeHash(),
				typeof(iGlovesGem).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iGlovesIron).AngeHash(),
				typeof(iGemRed).AngeHash(),
				typeof(iGemGreen).AngeHash(),
				typeof(iGemOrange).AngeHash(),
				typeof(iGlovesGem).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iGlovesIron).AngeHash(),
				typeof(iGemGreen).AngeHash(),
				typeof(iGemBlue).AngeHash(),
				typeof(iGemOrange).AngeHash(),
				typeof(iGlovesGem).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iGlovesGem).AngeHash(),
				typeof(iRuneWater).AngeHash(),
				0,
				0,
				typeof(iGlovesIce).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iGlovesGem).AngeHash(),
				typeof(iRuneFire).AngeHash(),
				0,
				0,
				typeof(iGlovesFire).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iFabric).AngeHash(),
				typeof(iFabric).AngeHash(),
				0,
				0,
				typeof(iGlovesVelvet).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iGlovesWood).AngeHash(),
				typeof(iGoblinHead).AngeHash(),
				0,
				0,
				typeof(iGlovesOrc).AngeHash()
			);

			ItemSystem.AddCombination(
				typeof(iGlovesVelvet).AngeHash(),
				typeof(iCottonBall).AngeHash(),
				0,
				0,
				typeof(iGlovesBoxing).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iGlovesVelvet).AngeHash(),
				typeof(iCottonBall).AngeHash(),
				typeof(iCottonBall).AngeHash(),
				typeof(iCottonBall).AngeHash(),
				typeof(iGlovesOven).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iGlovesVelvet).AngeHash(),
				typeof(iIngotGold).AngeHash(),
				0,
				0,
				typeof(iGlovesPaladin).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iGlovesVelvet).AngeHash(),
				typeof(iCuteGhost).AngeHash(),
				0,
				0,
				typeof(iGlovesFairy).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iGlovesVelvet).AngeHash(),
				typeof(iRuneCube).AngeHash(),
				0,
				0,
				typeof(iGlovesMage).AngeHash()
			);

		}


		private static void Equipment3 () {

			ItemSystem.AddCombination(
				typeof(iTreeStump).AngeHash(),
				typeof(iTreeBranch).AngeHash(),
				0,
				0,
				typeof(iShoesWood).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iShoesWood).AngeHash(),
				typeof(iIngotIron).AngeHash(),
				0,
				0,
				typeof(iShoesIron).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iShoesIron).AngeHash(),
				typeof(iIngotGold).AngeHash(),
				0,
				0,
				typeof(iShoesGold).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iShoesVelvet).AngeHash(),
				typeof(iCottonBall).AngeHash(),
				0,
				0,
				typeof(iShoesSki).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iShoesWood).AngeHash(),
				typeof(iPropeller).AngeHash(),
				0,
				0,
				typeof(iShoesWing).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iShoesVelvet).AngeHash(),
				typeof(iCuteGhost).AngeHash(),
				0,
				0,
				typeof(iShoesFairy).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iShoesVelvet).AngeHash(),
				typeof(iRope).AngeHash(),
				0,
				0,
				typeof(iShoesSand).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iFabric).AngeHash(),
				typeof(iFabric).AngeHash(),
				typeof(iFabric).AngeHash(),
				0,
				typeof(iShoesVelvet).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iShoesVelvet).AngeHash(),
				typeof(iRuneCube).AngeHash(),
				0,
				0,
				typeof(iShoesMage).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iShoesIron).AngeHash(),
				typeof(iShoesIron).AngeHash(),
				0,
				0,
				typeof(iShoesKnight).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iShoesVelvet).AngeHash(),
				typeof(iShoesVelvet).AngeHash(),
				0,
				0,
				typeof(iShoesHiking).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iShoesWood).AngeHash(),
				typeof(iRope).AngeHash(),
				0,
				0,
				typeof(iWoodenClogs).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iShoesVelvet).AngeHash(),
				typeof(iIngotGold).AngeHash(),
				0,
				0,
				typeof(iShoesPaladin).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iShoesIron).AngeHash(),
				typeof(iBolt).AngeHash(),
				typeof(iBolt).AngeHash(),
				typeof(iBolt).AngeHash(),
				typeof(iShoesStudded).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iShoesIron).AngeHash(),
				typeof(iSpikeBall).AngeHash(),
				0,
				0,
				typeof(iShoesSpike).AngeHash()
			);

		}


		private static void Equipment4 () {

			ItemSystem.AddCombination(
				typeof(iGem).AngeHash(),
				typeof(iRope).AngeHash(),
				typeof(iTreeBranch).AngeHash(),
				0,
				typeof(iNecklaceWood).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iGem).AngeHash(),
				typeof(iRope).AngeHash(),
				typeof(iIngotIron).AngeHash(),
				0,
				typeof(iNecklaceIron).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iNecklaceWood).AngeHash(),
				typeof(iIngotIron).AngeHash(),
				0,
				0,
				typeof(iNecklaceIron).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iGem).AngeHash(),
				typeof(iRope).AngeHash(),
				typeof(iIngotGold).AngeHash(),
				0,
				typeof(iNecklaceGold).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iNecklaceIron).AngeHash(),
				typeof(iIngotGold).AngeHash(),
				0,
				0,
				typeof(iNecklaceGold).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iIngotGold).AngeHash(),
				typeof(iIngotGold).AngeHash(),
				typeof(iIngotGold).AngeHash(),
				0,
				typeof(iBraceletGold).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iBraceletIron).AngeHash(),
				typeof(iIngotGold).AngeHash(),
				0,
				0,
				typeof(iBraceletGold).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iIngotIron).AngeHash(),
				typeof(iIngotIron).AngeHash(),
				typeof(iIngotIron).AngeHash(),
				0,
				typeof(iBraceletIron).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iStonePolished).AngeHash(),
				typeof(iCuteGhost).AngeHash(),
				typeof(iAmber).AngeHash(),
				0,
				typeof(iMagatama).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iGemRed).AngeHash(),
				typeof(iGemBlue).AngeHash(),
				typeof(iGemOrange).AngeHash(),
				typeof(iGemGreen).AngeHash(),
				typeof(iPendant).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iGourd).AngeHash(),
				typeof(iGourd).AngeHash(),
				typeof(iGourd).AngeHash(),
				typeof(iRope).AngeHash(),
				typeof(iPrayerBeads).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iPrayerBeads).AngeHash(),
				typeof(iIngotGold).AngeHash(),
				0,
				0,
				typeof(iPrayerBeadsGold).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iBeetle).AngeHash(),
				typeof(iButter).AngeHash(),
				typeof(iRuneWater).AngeHash(),
				0,
				typeof(iAmber).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iIngotGold).AngeHash(),
				typeof(iIngotGold).AngeHash(),
				0,
				0,
				typeof(iRingGold).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iRubyRed).AngeHash(),
				typeof(iIngotGold).AngeHash(),
				0,
				0,
				typeof(iRubyJewelRed).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iRubyBlue).AngeHash(),
				typeof(iIngotGold).AngeHash(),
				0,
				0,
				typeof(iRubyJewelBlue).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iRubyOrange).AngeHash(),
				typeof(iIngotGold).AngeHash(),
				0,
				0,
				typeof(iRubyJewelYellow).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iRubyGreen).AngeHash(),
				typeof(iIngotGold).AngeHash(),
				0,
				0,
				typeof(iRubyJewelGreen).AngeHash()
			);

		}


		private static void Equipment5 () {

			ItemSystem.AddCombination(
				typeof(iItemWoodBoard).AngeHash(),
				typeof(iTreeBranch).AngeHash(),
				typeof(iTreeBranch).AngeHash(),
				typeof(iTreeBranch).AngeHash(),
				typeof(iSwordWood).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iSwordWood).AngeHash(),
				typeof(iIngotIron).AngeHash(),
				0,
				0,
				typeof(iSwordIron).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iSwordIron).AngeHash(),
				typeof(iIngotGold).AngeHash(),
				0,
				0,
				typeof(iSwordGold).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iIngotIron).AngeHash(),
				typeof(iTreeBranch).AngeHash(),
				typeof(iTreeBranch).AngeHash(),
				0,
				typeof(iDagger).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iSwordIron).AngeHash(),
				typeof(iGemRed).AngeHash(),
				typeof(iGemRed).AngeHash(),
				typeof(iGemRed).AngeHash(),
				typeof(iSwordCrimson).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iSwordIron).AngeHash(),
				typeof(iRubyRed).AngeHash(),
				typeof(iRubyRed).AngeHash(),
				typeof(iRubyRed).AngeHash(),
				typeof(iSwordScarlet).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iIngotIron).AngeHash(),
				typeof(iTreeBranch).AngeHash(),
				typeof(iTreeBranch).AngeHash(),
				typeof(iTreeBranch).AngeHash(),
				typeof(iScimitar).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iSwordIron).AngeHash(),
				typeof(iSkull).AngeHash(),
				typeof(iMeatBone).AngeHash(),
				typeof(iMeatBone).AngeHash(),
				typeof(iSwordPirate).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iSwordIron).AngeHash(),
				typeof(iRuneLightning).AngeHash(),
				0,
				0,
				typeof(iSwordAgile).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iScimitar).AngeHash(),
				typeof(iRuneLightning).AngeHash(),
				0,
				0,
				typeof(iScimitarAgile).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iSwordIron).AngeHash(),
				typeof(iComb).AngeHash(),
				0,
				0,
				typeof(iSwordJagged).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iSwordGold).AngeHash(),
				typeof(iSwordGold).AngeHash(),
				0,
				0,
				typeof(iSwordGreat).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iSwordIron).AngeHash(),
				typeof(iCharcoal).AngeHash(),
				typeof(iGunpowder).AngeHash(),
				typeof(iClay).AngeHash(),
				typeof(iSwordDark).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iSwordIron).AngeHash(),
				typeof(iBoStaffWood).AngeHash(),
				0,
				0,
				typeof(iSwordCrutch).AngeHash()
			);
			ItemSystem.AddCombination(
			   typeof(iScimitar).AngeHash(),
			   typeof(iScimitar).AngeHash(),
			   0,
			   0,
			   typeof(iKnifeGiant).AngeHash()
		   );
		}


		private static void Equipment6 () {
			ItemSystem.AddCombination(
				typeof(iTreeBranch).AngeHash(),
				typeof(iIngotIron).AngeHash(),
				typeof(iIngotIron).AngeHash(),
				0,
				typeof(iAxeWood).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iAxeWood).AngeHash(),
				typeof(iIngotIron).AngeHash(),
				0,
				0,
				typeof(iAxeIron).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iAxeIron).AngeHash(),
				typeof(iIngotGold).AngeHash(),
				0,
				0,
				typeof(iAxeGold).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iAxeWood).AngeHash(),
				typeof(iSwordWood).AngeHash(),
				0,
				0,
				typeof(iBattleAxe).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iAxeWood).AngeHash(),
				typeof(iFist).AngeHash(),
				0,
				0,
				typeof(iErgonomicAxe).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iAxeIron).AngeHash(),
				typeof(iComb).AngeHash(),
				0,
				0,
				typeof(iAxeJagged).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iAxeIron).AngeHash(),
				typeof(iGoblinHead).AngeHash(),
				0,
				0,
				typeof(iAxeOrc).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iAxeOrc).AngeHash(),
				typeof(iOracleEye).AngeHash(),
				0,
				0,
				typeof(iAxeCursed).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iTreeBranch).AngeHash(),
				typeof(iIngotIron).AngeHash(),
				0,
				0,
				typeof(iPickWood).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iPickWood).AngeHash(),
				typeof(iIngotIron).AngeHash(),
				0,
				0,
				typeof(iPickIron).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iPickIron).AngeHash(),
				typeof(iIngotGold).AngeHash(),
				0,
				0,
				typeof(iPickGold).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iAxeWood).AngeHash(),
				typeof(iAxeWood).AngeHash(),
				0,
				0,
				typeof(iAxeGreat).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iAxeWood).AngeHash(),
				typeof(iDrill).AngeHash(),
				0,
				0,
				typeof(iAxeButterfly).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iTreeBranch).AngeHash(),
				typeof(iMeatBone).AngeHash(),
				0,
				0,
				typeof(iAxeBone).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iTreeBranch).AngeHash(),
				typeof(iFlintPolished).AngeHash(),
				0,
				0,
				typeof(iAxeStone).AngeHash()
			);
		}


		private static void Equipment7 () {
			ItemSystem.AddCombination(
				typeof(iTreeBranch).AngeHash(),
				typeof(iStonePolished).AngeHash(),
				0,
				0,
				typeof(iHammerWood).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iHammerWood).AngeHash(),
				typeof(iIngotIron).AngeHash(),
				0,
				0,
				typeof(iHammerIron).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iHammerIron).AngeHash(),
				typeof(iIngotGold).AngeHash(),
				0,
				0,
				typeof(iHammerGold).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iTreeBranch).AngeHash(),
				typeof(iSpikeBall).AngeHash(),
				0,
				0,
				typeof(iMaceRound).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iTreeBranch).AngeHash(),
				typeof(iSkull).AngeHash(),
				0,
				0,
				typeof(iMaceSkull).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iTreeBranch).AngeHash(),
				typeof(iTreeBranch).AngeHash(),
				typeof(iTreeTrunk).AngeHash(),
				0,
				typeof(iBaseballBatWood).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iBaseballBatWood).AngeHash(),
				typeof(iBolt).AngeHash(),
				typeof(iBolt).AngeHash(),
				typeof(iBolt).AngeHash(),
				typeof(iMaceSpiked).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iBaseballBatWood).AngeHash(),
				typeof(iIngotIron).AngeHash(),
				typeof(iIngotIron).AngeHash(),
				typeof(iIngotIron).AngeHash(),
				typeof(iBian).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iTreeBranch).AngeHash(),
				typeof(iTreeTrunk).AngeHash(),
				typeof(iTreeTrunk).AngeHash(),
				typeof(iTreeTrunk).AngeHash(),
				typeof(iHammerRiceCake).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iTreeBranch).AngeHash(),
				typeof(iHorn).AngeHash(),
				0,
				0,
				typeof(iHammerGoatHorn).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iBaseballBatWood).AngeHash(),
				typeof(iIngotIron).AngeHash(),
				0,
				0,
				typeof(iBaseballBatIron).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iHammerIron).AngeHash(),
				typeof(iRuneLightning).AngeHash(),
				typeof(iRuneLightning).AngeHash(),
				typeof(iRuneLightning).AngeHash(),
				typeof(iHammerThunder).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iHammerWood).AngeHash(),
				typeof(iStonePolished).AngeHash(),
				typeof(iStonePolished).AngeHash(),
				typeof(iStonePolished).AngeHash(),
				typeof(iHammerMoai).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iHammerGold).AngeHash(),
				typeof(iIngotGold).AngeHash(),
				0,
				0,
				typeof(iHammerPaladin).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iHammerGold).AngeHash(),
				typeof(iRubyRed).AngeHash(),
				typeof(iRubyRed).AngeHash(),
				typeof(iRubyRed).AngeHash(),
				typeof(iHammerRuby).AngeHash()
			);

		}


		private static void Equipment8 () {

			ItemSystem.AddCombination(
				typeof(iTreeBranch).AngeHash(),
				typeof(iChain).AngeHash(),
				typeof(iSpikeBall).AngeHash(),
				0,
				typeof(iFlailWood).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iFlailWood).AngeHash(),
				typeof(iIngotIron).AngeHash(),
				0,
				0,
				typeof(iFlailIron).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iFlailIron).AngeHash(),
				typeof(iIngotGold).AngeHash(),
				0,
				0,
				typeof(iFlailGold).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iFlailWood).AngeHash(),
				typeof(iFlailWood).AngeHash(),
				typeof(iFlailWood).AngeHash(),
				0,
				typeof(iFlailTriple).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iFlailIron).AngeHash(),
				typeof(iEyeBall).AngeHash(),
				0,
				0,
				typeof(iFlailEye).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iFlailWood).AngeHash(),
				typeof(iSkull).AngeHash(),
				0,
				0,
				typeof(iFlailSkull).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iTreeBranch).AngeHash(),
				typeof(iRope).AngeHash(),
				typeof(iIronHook).AngeHash(),
				0,
				typeof(iFishingPole).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iTreeBranch).AngeHash(),
				typeof(iChain).AngeHash(),
				typeof(iMaceSpiked).AngeHash(),
				0,
				typeof(iFlailMace).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iChain).AngeHash(),
				typeof(iIronHook).AngeHash(),
				0,
				0,
				typeof(iFlailHook).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iTreeBranch).AngeHash(),
				typeof(iTreeBranch).AngeHash(),
				typeof(iChain).AngeHash(),
				0,
				typeof(iNunchaku).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iTreeBranch).AngeHash(),
				typeof(iChain).AngeHash(),
				typeof(iPickWood).AngeHash(),
				0,
				typeof(iFlailPick).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iMaceSpiked).AngeHash(),
				typeof(iMaceSpiked).AngeHash(),
				typeof(iChain).AngeHash(),
				typeof(iChain).AngeHash(),
				typeof(iChainMace).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iSpikeBall).AngeHash(),
				typeof(iChain).AngeHash(),
				0,
				0,
				typeof(iChainSpikeBall).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iChain).AngeHash(),
				typeof(iBolt).AngeHash(),
				typeof(iBolt).AngeHash(),
				typeof(iBolt).AngeHash(),
				typeof(iChainBarbed).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iChain).AngeHash(),
				typeof(iFist).AngeHash(),
				0,
				0,
				typeof(iChainFist).AngeHash()
			);
		}


		private static void Equipment9 () {

			ItemSystem.AddCombination(
				typeof(iTreeBranch).AngeHash(),
				typeof(iRope).AngeHash(),
				0,
				0,
				typeof(iBowWood).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iBowWood).AngeHash(),
				typeof(iIngotIron).AngeHash(),
				0,
				0,
				typeof(iBowIron).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iBowIron).AngeHash(),
				typeof(iIngotGold).AngeHash(),
				0,
				0,
				typeof(iBowGold).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iTreeBranch).AngeHash(),
				typeof(iTreeBranch).AngeHash(),
				typeof(iRope).AngeHash(),
				0,
				typeof(iCrossbowWood).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iCrossbowWood).AngeHash(),
				typeof(iIngotIron).AngeHash(),
				0,
				0,
				typeof(iCrossbowIron).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iCrossbowIron).AngeHash(),
				typeof(iIngotGold).AngeHash(),
				0,
				0,
				typeof(iCrossbowGold).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iTreeBranch).AngeHash(),
				typeof(iNeedle).AngeHash(),
				typeof(iRunePoison).AngeHash(),
				0,
				typeof(iBlowgun).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iIngotIron).AngeHash(),
				typeof(iRibbon).AngeHash(),
				typeof(iRubberBall).AngeHash(),
				0,
				typeof(iSlingshot).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iBowIron).AngeHash(),
				typeof(iBowIron).AngeHash(),
				0,
				0,
				typeof(iCompoundBow).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iBowWood).AngeHash(),
				typeof(iBowWood).AngeHash(),
				0,
				0,
				typeof(iRepeatingCrossbow).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iBowWood).AngeHash(),
				typeof(iLeaf).AngeHash(),
				0,
				0,
				typeof(iBowNature).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iBowWood).AngeHash(),
				typeof(iSkull).AngeHash(),
				typeof(iSkull).AngeHash(),
				typeof(iRibbon).AngeHash(),
				typeof(iBowSkull).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iBowIron).AngeHash(),
				typeof(iRuneCube).AngeHash(),
				0,
				0,
				typeof(iBowMage).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iBowGold).AngeHash(),
				typeof(iLeafLegend).AngeHash(),
				0,
				0,
				typeof(iBowSky).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iBowGold).AngeHash(),
				typeof(iRope).AngeHash(),
				typeof(iRope).AngeHash(),
				typeof(iRope).AngeHash(),
				typeof(iBowHarp).AngeHash()
			);
		}


		private static void Equipment10 () {

			ItemSystem.AddCombination(
				typeof(iBoStaffWood).AngeHash(),
				typeof(iDagger).AngeHash(),
				0,
				0,
				typeof(iSpearWood).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iSpearWood).AngeHash(),
				typeof(iIngotIron).AngeHash(),
				0,
				0,
				typeof(iSpearIron).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iSpearIron).AngeHash(),
				typeof(iIngotGold).AngeHash(),
				0,
				0,
				typeof(iSpearGold).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iSpearIron).AngeHash(),
				typeof(iMagatama).AngeHash(),
				typeof(iMagatama).AngeHash(),
				typeof(iMagatama).AngeHash(),
				typeof(iTrident).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iTreeBranch).AngeHash(),
				typeof(iTreeBranch).AngeHash(),
				typeof(iTreeBranch).AngeHash(),
				typeof(iRibbon).AngeHash(),
				typeof(iBoStaffWood).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iBoStaffWood).AngeHash(),
				typeof(iIngotIron).AngeHash(),
				0,
				0,
				typeof(iBoStaffIron).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iBoStaffIron).AngeHash(),
				typeof(iIngotGold).AngeHash(),
				0,
				0,
				typeof(iBoStaffGold).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iBoStaffWood).AngeHash(),
				typeof(iKnifeGiant).AngeHash(),
				0,
				0,
				typeof(iNaginata).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iBoStaffWood).AngeHash(),
				typeof(iAxeWood).AngeHash(),
				0,
				0,
				typeof(iHalberd).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iBoStaffWood).AngeHash(),
				typeof(iWuXingHook).AngeHash(),
				typeof(iWuXingHook).AngeHash(),
				0,
				typeof(iJi).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iBoStaffWood).AngeHash(),
				typeof(iAxeWood).AngeHash(),
				typeof(iWuXingHook).AngeHash(),
				0,
				typeof(iMonkSpade).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iBoStaffWood).AngeHash(),
				typeof(iWuXingHook).AngeHash(),
				typeof(iBolt).AngeHash(),
				typeof(iBolt).AngeHash(),
				typeof(iManCatcher).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iBoStaffWood).AngeHash(),
				typeof(iScimitar).AngeHash(),
				typeof(iScimitar).AngeHash(),
				0,
				typeof(iSwallow).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iBoStaffWood).AngeHash(),
				typeof(iDagger).AngeHash(),
				typeof(iDagger).AngeHash(),
				0,
				typeof(iFork).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iBoStaffWood).AngeHash(),
				typeof(iBolt).AngeHash(),
				typeof(iBolt).AngeHash(),
				typeof(iBolt).AngeHash(),
				typeof(iBrandistock).AngeHash()
			);
		}


		private static void Equipment11 () {

			ItemSystem.AddCombination(
				typeof(iTreeBranch).AngeHash(),
				typeof(iScimitar).AngeHash(),
				0,
				0,
				typeof(iScytheWood).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iScytheWood).AngeHash(),
				typeof(iIngotIron).AngeHash(),
				0,
				0,
				typeof(iScytheIron).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iScytheIron).AngeHash(),
				typeof(iIngotGold).AngeHash(),
				0,
				0,
				typeof(iScytheGold).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iTreeBranch).AngeHash(),
				typeof(iIronHook).AngeHash(),
				0,
				0,
				typeof(iSickle).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iIronHook).AngeHash(),
				typeof(iWuXingHook).AngeHash(),
				0,
				0,
				typeof(iHookIron).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iHookIron).AngeHash(),
				typeof(iIngotGold).AngeHash(),
				0,
				0,
				typeof(iHookGold).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iIronHook).AngeHash(),
				typeof(iIngotIron).AngeHash(),
				0,
				0,
				typeof(iHookHand).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iTreeBranch).AngeHash(),
				typeof(iTreeBranch).AngeHash(),
				typeof(iIronHook).AngeHash(),
				0,
				typeof(iHookJungle).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iTreeBranch).AngeHash(),
				typeof(iChain).AngeHash(),
				typeof(iMeatBone).AngeHash(),
				0,
				typeof(iHookBone).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iSickle).AngeHash(),
				typeof(iComb).AngeHash(),
				0,
				0,
				typeof(iHookJagged).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iIronHook).AngeHash(),
				typeof(iIronHook).AngeHash(),
				typeof(iIronHook).AngeHash(),
				0,
				typeof(iHookTripple).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iSickle).AngeHash(),
				typeof(iSickle).AngeHash(),
				0,
				0,
				typeof(iHookBig).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iSickle).AngeHash(),
				typeof(iIronHook).AngeHash(),
				typeof(iIronHook).AngeHash(),
				0,
				typeof(iHookPudge).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iSickle).AngeHash(),
				typeof(iErgonomicAxe).AngeHash(),
				0,
				0,
				typeof(iHookChicken).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iHookIron).AngeHash(),
				typeof(iRuneWater).AngeHash(),
				typeof(iRuneLightning).AngeHash(),
				typeof(iSalt).AngeHash(),
				typeof(iHookRusty).AngeHash()
			);
		}


		private static void Equipment12 () {

			ItemSystem.AddCombination(
				typeof(iDagger).AngeHash(),
				typeof(iDagger).AngeHash(),
				typeof(iDagger).AngeHash(),
				0,
				typeof(iClawWood).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iClawWood).AngeHash(),
				typeof(iIngotIron).AngeHash(),
				0,
				0,
				typeof(iClawIron).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iClawIron).AngeHash(),
				typeof(iIngotGold).AngeHash(),
				0,
				0,
				typeof(iClawGold).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iWuXingHook).AngeHash(),
				typeof(iIngotIron).AngeHash(),
				0,
				0,
				typeof(iMandarinDuckAxe).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iDagger).AngeHash(),
				typeof(iDagger).AngeHash(),
				typeof(iDagger).AngeHash(),
				typeof(iPaw).AngeHash(),
				typeof(iClawCat).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iClawCat).AngeHash(),
				typeof(iPaw).AngeHash(),
				0,
				0,
				typeof(iClawFox).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iClawGold).AngeHash(),
				typeof(iIngotGold).AngeHash(),
				0,
				0,
				typeof(iKatars).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iKatars).AngeHash(),
				typeof(iKatars).AngeHash(),
				typeof(iKatars).AngeHash(),
				0,
				typeof(iKatarsTripple).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iNeedle).AngeHash(),
				typeof(iNeedle).AngeHash(),
				typeof(iRingGold).AngeHash(),
				typeof(iRingGold).AngeHash(),
				typeof(iEmeiPiercer).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iEmeiPiercer).AngeHash(),
				typeof(iTreeBranch).AngeHash(),
				0,
				0,
				typeof(iBaton).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iFist).AngeHash(),
				typeof(iIngotIron).AngeHash(),
				0,
				0,
				typeof(iKnuckleDuster).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iEmeiPiercer).AngeHash(),
				typeof(iEmeiPiercer).AngeHash(),
				typeof(iEmeiPiercer).AngeHash(),
				0,
				typeof(iEmeiFork).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iTreeBranch).AngeHash(),
				typeof(iIronHook).AngeHash(),
				typeof(iIronHook).AngeHash(),
				0,
				typeof(iWuXingHook).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iClawWood).AngeHash(),
				typeof(iRubyRed).AngeHash(),
				0,
				0,
				typeof(iKatarsRuby).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iKatars).AngeHash(),
				typeof(iComb).AngeHash(),
				0,
				0,
				typeof(iKatarsJagged).AngeHash()
			);
		}


		private static void Equipment13 () {

			ItemSystem.AddCombination(
				typeof(iTreeBranch).AngeHash(),
				typeof(iBook).AngeHash(),
				typeof(iRuneCube).AngeHash(),
				0,
				typeof(iWand).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iBookRed).AngeHash(),
				typeof(iBookBlue).AngeHash(),
				typeof(iTruthOfTheUniverse).AngeHash(),
				typeof(iOracleEye).AngeHash(),
				typeof(iTheAncientOne).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iBoStaffWood).AngeHash(),
				typeof(iRubyRed).AngeHash(),
				typeof(iRuneFire).AngeHash(),
				typeof(iBookRed).AngeHash(),
				typeof(iStaffFire).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iBoStaffWood).AngeHash(),
				typeof(iRubyBlue).AngeHash(),
				typeof(iRuneWater).AngeHash(),
				typeof(iBookBlue).AngeHash(),
				typeof(iStaffWater).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iBoStaffWood).AngeHash(),
				typeof(iRubyOrange).AngeHash(),
				typeof(iRuneLightning).AngeHash(),
				typeof(iBookYellow).AngeHash(),
				typeof(iStaffLightning).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iBoStaffWood).AngeHash(),
				typeof(iRubyGreen).AngeHash(),
				typeof(iRunePoison).AngeHash(),
				typeof(iBookGreen).AngeHash(),
				typeof(iStaffPoision).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iSkull).AngeHash(),
				typeof(iRuneFire).AngeHash(),
				typeof(iRuneLightning).AngeHash(),
				typeof(iRunePoison).AngeHash(),
				typeof(iRitualSkull).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iScroll).AngeHash(),
				typeof(iBook).AngeHash(),
				typeof(iItemWoodBoard).AngeHash(),
				0,
				typeof(iBambooSlips).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iRuneCube).AngeHash(),
				typeof(iRuneFire).AngeHash(),
				typeof(iRuneLightning).AngeHash(),
				typeof(iRunePoison).AngeHash(),
				typeof(iRitualRuneCube).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iGoblinHead).AngeHash(),
				typeof(iRuneFire).AngeHash(),
				typeof(iRuneLightning).AngeHash(),
				typeof(iRunePoison).AngeHash(),
				typeof(iGoblinTrophy).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iCrystalBall).AngeHash(),
				typeof(iRuneCube).AngeHash(),
				0,
				0,
				typeof(iMagicOrb).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iEyeBall).AngeHash(),
				typeof(iRuneCube).AngeHash(),
				0,
				0,
				typeof(iMagicEyeball).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iPotionRed).AngeHash(),
				typeof(iPotionBlue).AngeHash(),
				typeof(iRuneCube).AngeHash(),
				0,
				typeof(iMagicPotion).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iWand).AngeHash(),
				typeof(iStar).AngeHash(),
				0,
				0,
				typeof(iWandStar).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iWand).AngeHash(),
				typeof(iCuteGhost).AngeHash(),
				0,
				0,
				typeof(iWandFairy).AngeHash()
			);
		}


		private static void Equipment14 () {

			ItemSystem.AddCombination(
				typeof(iBanana).AngeHash(),
				typeof(iTreeBranch).AngeHash(),
				0,
				0,
				typeof(iBoomerang).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iNinjaStar).AngeHash(),
				0,
				0,
				0,
				typeof(iNinjaStarHalf).AngeHash(), 2
			);
			ItemSystem.AddCombination(
				typeof(iStar).AngeHash(),
				typeof(iIngotIron).AngeHash(),
				0,
				0,
				typeof(iNinjaStar).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iThrowingKnife).AngeHash(),
				typeof(iIngotIron).AngeHash(),
				0,
				0,
				typeof(iKunai).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iAxeWood).AngeHash(),
				typeof(iBraceletIron).AngeHash(),
				0,
				0,
				typeof(iChakram).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iIngotIron).AngeHash(),
				typeof(iFlintPolished).AngeHash(),
				0,
				0,
				typeof(iThrowingKnife).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iTreeBranch).AngeHash(),
				typeof(iIngotIron).AngeHash(),
				typeof(iFlintPolished).AngeHash(),
				0,
				typeof(iThrowingAxe).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iIronWire).AngeHash(),
				typeof(iIronWire).AngeHash(),
				typeof(iIronWire).AngeHash(),
				0,
				typeof(iNeedle).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iChainSpikeBall).AngeHash(),
				typeof(iChainSpikeBall).AngeHash(),
				typeof(iChain).AngeHash(),
				0,
				typeof(iChainMaceBall).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iGunpowder).AngeHash(),
				typeof(iBowlingBall).AngeHash(),
				0,
				0,
				typeof(iBomb).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iIngotIron).AngeHash(),
				typeof(iIngotIron).AngeHash(),
				typeof(iIngotIron).AngeHash(),
				typeof(iIronHook).AngeHash(),
				typeof(iAnchor).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iThrowingAxe).AngeHash(),
				typeof(iIngotGold).AngeHash(),
				0,
				0,
				typeof(iCrossAxe).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iGrapePurple).AngeHash(),
				typeof(iGunpowder).AngeHash(),
				0,
				0,
				typeof(iGrapeBomb).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iPotionEmpty).AngeHash(),
				typeof(iBlackPepper).AngeHash(),
				typeof(iGunpowder).AngeHash(),
				0,
				typeof(iTearGas).AngeHash()
			);
			ItemSystem.AddCombination(
				typeof(iPotionEmpty).AngeHash(),
				typeof(iGunpowder).AngeHash(),
				0,
				0,
				typeof(iGrenade).AngeHash()
			);
		}


	}
}
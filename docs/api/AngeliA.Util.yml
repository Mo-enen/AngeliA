### YamlMime:ManagedReference
items:
- uid: AngeliA.Util
  commentId: T:AngeliA.Util
  id: Util
  parent: AngeliA
  children:
  - AngeliA.Util.Abs(System.Int32)
  - AngeliA.Util.Abs(System.Single)
  - AngeliA.Util.AddAssembly(System.Reflection.Assembly)
  - AngeliA.Util.AddEnvironmentVariable(System.String,System.String)
  - AngeliA.Util.AllAssemblies
  - AngeliA.Util.AllChildClass(System.Type,System.Boolean,System.Boolean)
  - AngeliA.Util.AllChildClassID(System.Type,System.Boolean,System.Boolean)
  - AngeliA.Util.AllClassImplemented(System.Type,System.Boolean)
  - AngeliA.Util.AllClassImplementedID(System.Type,System.Boolean)
  - AngeliA.Util.AllClassWithAttribute(System.Type,System.Boolean,System.Boolean)
  - AngeliA.Util.AllClassWithAttribute``1(System.Boolean,System.Boolean,System.Boolean)
  - AngeliA.Util.AllEnumIdPairs``1
  - AngeliA.Util.AllStaticMethodWithAttribute``1
  - AngeliA.Util.Approximately(System.Single,System.Single)
  - AngeliA.Util.ArgPath_to_Path(System.String)
  - AngeliA.Util.Atan(System.Single,System.Single)
  - AngeliA.Util.BabylonianSqrt(System.Int32)
  - AngeliA.Util.ByteToCompressedFile(System.String,System.Byte[],System.Int32)
  - AngeliA.Util.BytesToFile(System.Byte[],System.String,System.Int32)
  - AngeliA.Util.CeilToInt(System.Single)
  - AngeliA.Util.ChangeExtension(System.String,System.String)
  - AngeliA.Util.Clamp(System.Int32,System.Int32,System.Int32)
  - AngeliA.Util.Clamp(System.Single,System.Single,System.Single)
  - AngeliA.Util.Clamp01(System.Single)
  - AngeliA.Util.ColorToHtml(AngeliA.Color32,System.Boolean)
  - AngeliA.Util.ColorToInt(AngeliA.Color32)
  - AngeliA.Util.CombinePaths(System.String,System.String)
  - AngeliA.Util.CombinePaths(System.String,System.String,System.String)
  - AngeliA.Util.CombinePaths(System.String,System.String,System.String,System.String)
  - AngeliA.Util.CombinePaths(System.String[])
  - AngeliA.Util.CompressedFileToByte(System.String,System.Int32@)
  - AngeliA.Util.CopyFile(System.String,System.String,System.Boolean)
  - AngeliA.Util.CopyFolder(System.String,System.String,System.Boolean,System.Boolean,System.Boolean)
  - AngeliA.Util.Cos(System.Single)
  - AngeliA.Util.CreateFolder(System.String)
  - AngeliA.Util.DecompressBytes(System.Byte[])
  - AngeliA.Util.Deg2Rad
  - AngeliA.Util.DeleteFile(System.String)
  - AngeliA.Util.DeleteFolder(System.String)
  - AngeliA.Util.DistanceFloat(AngeliA.Float2,AngeliA.Float2)
  - AngeliA.Util.DistanceFloat(System.Single,System.Single,System.Single,System.Single)
  - AngeliA.Util.DistanceInt(AngeliA.Int2,AngeliA.Int2)
  - AngeliA.Util.DistanceInt(System.Int32,System.Int32,System.Int32,System.Int32)
  - AngeliA.Util.DrawFilledEllipse_Patrick(System.Int32,System.Int32,System.Int32,System.Int32)
  - AngeliA.Util.DrawHoloEllipse_Patrick(System.Int32,System.Int32,System.Int32,System.Int32)
  - AngeliA.Util.DrawLineWithRect_DDA(System.Int32,System.Int32,System.Int32,System.Int32)
  - AngeliA.Util.DrawLine_DDA(System.Int32,System.Int32,System.Int32,System.Int32)
  - AngeliA.Util.EnumerateFiles(System.String,System.Boolean,System.String)
  - AngeliA.Util.EnumerateFiles(System.String,System.Boolean,System.String[])
  - AngeliA.Util.EnumerateFolders(System.String,System.Boolean,System.String)
  - AngeliA.Util.EnumerateFolders(System.String,System.Boolean,System.String[])
  - AngeliA.Util.Epsilon
  - AngeliA.Util.ExecuteCommand(System.String,System.String,System.Int32,System.Boolean)
  - AngeliA.Util.FileExists(System.String)
  - AngeliA.Util.FileToBytes(System.String)
  - AngeliA.Util.FileToText(System.String)
  - AngeliA.Util.FileToText(System.String,System.Text.Encoding)
  - AngeliA.Util.FindNextStringStep(System.String,System.Int32,System.Boolean)
  - AngeliA.Util.FixPath(System.String,System.Boolean)
  - AngeliA.Util.FloorToInt(System.Single)
  - AngeliA.Util.FolderExists(System.String)
  - AngeliA.Util.ForAllAssemblyWithAttribute``1
  - AngeliA.Util.ForAllLinesInFile(System.String)
  - AngeliA.Util.ForAllLinesInFile(System.String,System.Text.Encoding)
  - AngeliA.Util.ForAllLinesInString(System.String)
  - AngeliA.Util.ForAllNameAndIntInFile(System.IO.StreamReader)
  - AngeliA.Util.ForAllNameAndIntInFile(System.String)
  - AngeliA.Util.ForAllNameAndIntInFile(System.String,System.Text.Encoding)
  - AngeliA.Util.ForAllNameAndStringInFile(System.IO.StreamReader)
  - AngeliA.Util.ForAllNameAndStringInFile(System.String)
  - AngeliA.Util.ForAllNameAndStringInFile(System.String,System.Text.Encoding)
  - AngeliA.Util.ForAllSystemLanguages
  - AngeliA.Util.GetAllTypeSpan
  - AngeliA.Util.GetAngeHashForClassName(System.String)
  - AngeliA.Util.GetDirection(System.Int32,System.Int32)
  - AngeliA.Util.GetDisplayName(System.String)
  - AngeliA.Util.GetDisplayTimeFromTicks(System.Int64)
  - AngeliA.Util.GetExtensionWithDot(System.String)
  - AngeliA.Util.GetField(System.Type,System.String)
  - AngeliA.Util.GetFieldType(System.Object,System.String)
  - AngeliA.Util.GetFieldValue(System.Object,System.String)
  - AngeliA.Util.GetFileCount(System.String,System.String,System.IO.SearchOption)
  - AngeliA.Util.GetFileCreationDate(System.String)
  - AngeliA.Util.GetFileModifyDate(System.String)
  - AngeliA.Util.GetFileSizeInMB(System.String)
  - AngeliA.Util.GetFolderCount(System.String,System.String,System.IO.SearchOption)
  - AngeliA.Util.GetFolderFullPath(System.String)
  - AngeliA.Util.GetFolderModifyDate(System.String)
  - AngeliA.Util.GetFullPath(System.String)
  - AngeliA.Util.GetKeyDisplayName(AngeliA.KeyboardKey)
  - AngeliA.Util.GetLanguageDisplayName(System.String)
  - AngeliA.Util.GetLanguageDisplayNameInEnglish(System.String)
  - AngeliA.Util.GetLongTime
  - AngeliA.Util.GetNameWithExtension(System.String)
  - AngeliA.Util.GetNameWithoutExtension(System.String)
  - AngeliA.Util.GetParentPath(System.String)
  - AngeliA.Util.GetProperty(System.Type,System.String)
  - AngeliA.Util.GetPropertyValue(System.Object,System.String)
  - AngeliA.Util.GetStaticFieldType(System.Type,System.String)
  - AngeliA.Util.GetStaticFieldValue(System.Type,System.String)
  - AngeliA.Util.GetStaticPropertyValue(System.Type,System.String)
  - AngeliA.Util.GetTimeString
  - AngeliA.Util.GetTrimedPixels(AngeliA.Color32[],System.Int32,System.Int32,System.Int32@,System.Int32@,System.Int32@,System.Int32@)
  - AngeliA.Util.GetUrl(System.String)
  - AngeliA.Util.GreatestCommonFactor(System.Int32,System.Int32)
  - AngeliA.Util.HasFileIn(System.String,System.Boolean,System.String)
  - AngeliA.Util.HasFileIn(System.String,System.Boolean,System.String[])
  - AngeliA.Util.HsvToRgb(System.Single,System.Single,System.Single)
  - AngeliA.Util.HsvToRgbF(System.Single,System.Single,System.Single)
  - AngeliA.Util.HtmlToColor(System.String,AngeliA.Color32@)
  - AngeliA.Util.IntToColor(System.Int32)
  - AngeliA.Util.InverseLerp(System.Single,System.Single,System.Single)
  - AngeliA.Util.InverseLerpUnclamped(System.Single,System.Single,System.Single)
  - AngeliA.Util.InvokeAllStaticMethodWithAttribute``1
  - AngeliA.Util.InvokeAllStaticMethodWithAttribute``1(System.Comparison{System.Collections.Generic.KeyValuePair{System.Reflection.MethodInfo,``0}})
  - AngeliA.Util.InvokeAllStaticMethodWithAttribute``1(System.Func{System.Collections.Generic.KeyValuePair{System.Reflection.MethodInfo,``0},System.Boolean})
  - AngeliA.Util.InvokeMethod(System.Object,System.String,System.Object[])
  - AngeliA.Util.InvokeStaticMethod(System.Type,System.String,System.Object[])
  - AngeliA.Util.IsExistingFileEmpty(System.String)
  - AngeliA.Util.IsFileHidden(System.String)
  - AngeliA.Util.IsFolderHidden(System.String)
  - AngeliA.Util.IsPathValid(System.String)
  - AngeliA.Util.IsPowerOfTwo(System.Int32)
  - AngeliA.Util.IsSameDay(System.Int64,System.Int64)
  - AngeliA.Util.IsSamePath(System.String,System.String)
  - AngeliA.Util.IsSupportedLanguageISO(System.String)
  - AngeliA.Util.IsValidForFileName(System.String)
  - AngeliA.Util.LeastCommonMultiple(System.Int32,System.Int32)
  - AngeliA.Util.Lerp(System.Single,System.Single,System.Single)
  - AngeliA.Util.LerpAngle(System.Single,System.Single,System.Single)
  - AngeliA.Util.LerpAngleUnclamped(System.Single,System.Single,System.Single)
  - AngeliA.Util.LerpUnclamped(System.Single,System.Single,System.Single)
  - AngeliA.Util.Max(System.Int32,System.Int32)
  - AngeliA.Util.Max(System.Int32,System.Int32,System.Int32)
  - AngeliA.Util.Max(System.Single,System.Single)
  - AngeliA.Util.MergeColor(AngeliA.Color32,AngeliA.Color32)
  - AngeliA.Util.MergeColor(AngeliA.ColorF,AngeliA.ColorF)
  - AngeliA.Util.MergeColor_Editor(AngeliA.Color32,AngeliA.Color32)
  - AngeliA.Util.MergeColor_Lerp(AngeliA.Color32,AngeliA.Color32)
  - AngeliA.Util.MergeColor_Lerp(AngeliA.ColorF,AngeliA.ColorF)
  - AngeliA.Util.MergeColor_Overlay(AngeliA.Color32,AngeliA.Color32)
  - AngeliA.Util.MergeColor_Overlay(AngeliA.ColorF,AngeliA.ColorF)
  - AngeliA.Util.Min(System.Int32,System.Int32)
  - AngeliA.Util.Min(System.Int32,System.Int32,System.Int32)
  - AngeliA.Util.Min(System.Single,System.Single)
  - AngeliA.Util.MoveFile(System.String,System.String)
  - AngeliA.Util.MoveFolder(System.String,System.String)
  - AngeliA.Util.OverlapRectCircle(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  - AngeliA.Util.PI
  - AngeliA.Util.PathIsFolder(System.String)
  - AngeliA.Util.Path_to_ArgPath(System.String)
  - AngeliA.Util.PingPong(System.Single,System.Single)
  - AngeliA.Util.PointInTriangle(AngeliA.Float2,AngeliA.Float2,AngeliA.Float2,AngeliA.Float2)
  - AngeliA.Util.PointInTriangle(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)
  - AngeliA.Util.PointLine_Distance(AngeliA.Float2,AngeliA.Float2,AngeliA.Float2,AngeliA.Float2@)
  - AngeliA.Util.Pow(System.Single,System.Single)
  - AngeliA.Util.QuickRandom
  - AngeliA.Util.QuickRandom(System.Int32,System.Int32)
  - AngeliA.Util.QuickRandomColor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  - AngeliA.Util.QuickRandomSign
  - AngeliA.Util.QuickRandomWithSeed(System.Int32)
  - AngeliA.Util.QuickRandomWithSeed(System.Int32,System.Int32,System.Int32)
  - AngeliA.Util.QuickRandomWithSeed(System.Int64)
  - AngeliA.Util.QuickRandomWithSeed(System.Int64,System.Int32,System.Int32)
  - AngeliA.Util.QuickSort``1(System.Span{``0},System.Int32,System.Int32,System.Collections.Generic.IComparer{``0})
  - AngeliA.Util.QuickSort``1(``0[],System.Int32,System.Int32,System.Collections.Generic.IComparer{``0})
  - AngeliA.Util.RGBToHSV(AngeliA.Color32,System.Single@,System.Single@,System.Single@)
  - AngeliA.Util.RGBToHSV(AngeliA.ColorF,System.Single@,System.Single@,System.Single@)
  - AngeliA.Util.Rad2Deg
  - AngeliA.Util.ReadBool(System.Byte*@)
  - AngeliA.Util.ReadBool(System.Byte*@,System.Byte*)
  - AngeliA.Util.ReadByte(System.Byte*@)
  - AngeliA.Util.ReadByte(System.Byte*@,System.Byte*)
  - AngeliA.Util.ReadBytes(System.Byte*@,System.Int32)
  - AngeliA.Util.ReadBytes(System.Byte*@,System.Int32,System.Byte*)
  - AngeliA.Util.ReadChar(System.Byte*@)
  - AngeliA.Util.ReadChar(System.Byte*@,System.Byte*)
  - AngeliA.Util.ReadDouble(System.Byte*@)
  - AngeliA.Util.ReadDouble(System.Byte*@,System.Byte*)
  - AngeliA.Util.ReadFloat(System.Byte*@)
  - AngeliA.Util.ReadFloat(System.Byte*@,System.Byte*)
  - AngeliA.Util.ReadInt(System.Byte*@)
  - AngeliA.Util.ReadInt(System.Byte*@,System.Byte*)
  - AngeliA.Util.ReadLong(System.Byte*@)
  - AngeliA.Util.ReadLong(System.Byte*@,System.Byte*)
  - AngeliA.Util.ReadSByte(System.Byte*@)
  - AngeliA.Util.ReadSByte(System.Byte*@,System.Byte*)
  - AngeliA.Util.ReadShort(System.Byte*@)
  - AngeliA.Util.ReadShort(System.Byte*@,System.Byte*)
  - AngeliA.Util.ReadUInt(System.Byte*@)
  - AngeliA.Util.ReadUInt(System.Byte*@,System.Byte*)
  - AngeliA.Util.ReadULong(System.Byte*@)
  - AngeliA.Util.ReadULong(System.Byte*@,System.Byte*)
  - AngeliA.Util.ReadUShort(System.Byte*@)
  - AngeliA.Util.ReadUShort(System.Byte*@,System.Byte*)
  - AngeliA.Util.ReadXML``1(System.String)
  - AngeliA.Util.Remap(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  - AngeliA.Util.Remap(System.Single,System.Single,System.Single,System.Single,System.Single)
  - AngeliA.Util.RemapUnclamped(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  - AngeliA.Util.RemapUnclamped(System.Single,System.Single,System.Single,System.Single,System.Single)
  - AngeliA.Util.Repeat(System.Single,System.Single)
  - AngeliA.Util.RotateAround(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  - AngeliA.Util.RoundToInt(System.Single)
  - AngeliA.Util.SegmentIntersect(AngeliA.Float2,AngeliA.Float2,AngeliA.Float2,AngeliA.Float2)
  - AngeliA.Util.SegmentRectIntersect(AngeliA.Float2,AngeliA.Float2,AngeliA.FRect)
  - AngeliA.Util.SetFieldValue(System.Object,System.String,System.Object)
  - AngeliA.Util.SetFileModifyDate(System.String,System.Int64)
  - AngeliA.Util.SetFolderModifyDate(System.String,System.Int64)
  - AngeliA.Util.SetPropertyValue(System.Object,System.String,System.Object)
  - AngeliA.Util.SetStaticFieldValue(System.Type,System.String,System.Object)
  - AngeliA.Util.SetStaticPropertyValue(System.Type,System.String,System.Object)
  - AngeliA.Util.Sin(System.Single)
  - AngeliA.Util.Sqrt(System.Single)
  - AngeliA.Util.SquareDistance(AngeliA.Int2,AngeliA.Int2)
  - AngeliA.Util.SquareDistance(System.Int32,System.Int32,System.Int32,System.Int32)
  - AngeliA.Util.SquareDistanceF(System.Single,System.Single,System.Single,System.Single)
  - AngeliA.Util.TextToFile(System.String,System.String,System.Boolean)
  - AngeliA.Util.TextToFile(System.String,System.String,System.Text.Encoding,System.Boolean)
  - AngeliA.Util.TryCompute(System.String,System.Int32@)
  - AngeliA.Util.TryGetAttributeFromAllAssemblies``1
  - AngeliA.Util.TryGetAttributeFromAllAssemblies``1(``0@)
  - AngeliA.Util.TryGetIntFromString(System.String,System.Int32,System.Int32@,System.Int32@)
  - AngeliA.Util.TryGetLanguageDisplayName(System.String,System.String@)
  - AngeliA.Util.TryGetRelativePath(System.String,System.String,System.String@)
  - AngeliA.Util.UpdateFile(System.String,System.String,System.Boolean)
  - AngeliA.Util.Vector2InverseLerp2(AngeliA.Float2,AngeliA.Float2,System.Single,System.Single)
  - AngeliA.Util.Vector2Lerp2(AngeliA.Float2,AngeliA.Float2,System.Single,System.Single)
  - AngeliA.Util.Vector3InverseLerp3(AngeliA.Float3,AngeliA.Float3,System.Single,System.Single,System.Single)
  - AngeliA.Util.Vector3Lerp3(AngeliA.Float3,AngeliA.Float3,System.Single,System.Single,System.Single)
  - AngeliA.Util.Write(System.Byte*@,System.Boolean)
  - AngeliA.Util.Write(System.Byte*@,System.Boolean,System.Byte*)
  - AngeliA.Util.Write(System.Byte*@,System.Byte)
  - AngeliA.Util.Write(System.Byte*@,System.Byte,System.Byte*)
  - AngeliA.Util.Write(System.Byte*@,System.Byte[],System.Int32)
  - AngeliA.Util.Write(System.Byte*@,System.Byte[],System.Int32,System.Byte*)
  - AngeliA.Util.Write(System.Byte*@,System.Char)
  - AngeliA.Util.Write(System.Byte*@,System.Char,System.Byte*)
  - AngeliA.Util.Write(System.Byte*@,System.Double)
  - AngeliA.Util.Write(System.Byte*@,System.Double,System.Byte*)
  - AngeliA.Util.Write(System.Byte*@,System.Int16)
  - AngeliA.Util.Write(System.Byte*@,System.Int16,System.Byte*)
  - AngeliA.Util.Write(System.Byte*@,System.Int32)
  - AngeliA.Util.Write(System.Byte*@,System.Int32,System.Byte*)
  - AngeliA.Util.Write(System.Byte*@,System.Int64)
  - AngeliA.Util.Write(System.Byte*@,System.Int64,System.Byte*)
  - AngeliA.Util.Write(System.Byte*@,System.SByte)
  - AngeliA.Util.Write(System.Byte*@,System.SByte,System.Byte*)
  - AngeliA.Util.Write(System.Byte*@,System.Single)
  - AngeliA.Util.Write(System.Byte*@,System.Single,System.Byte*)
  - AngeliA.Util.Write(System.Byte*@,System.UInt16)
  - AngeliA.Util.Write(System.Byte*@,System.UInt16,System.Byte*)
  - AngeliA.Util.Write(System.Byte*@,System.UInt32)
  - AngeliA.Util.Write(System.Byte*@,System.UInt32,System.Byte*)
  - AngeliA.Util.Write(System.Byte*@,System.UInt64)
  - AngeliA.Util.Write(System.Byte*@,System.UInt64,System.Byte*)
  - AngeliA.Util.WritePixelsToConsole(AngeliA.Color32[],System.Int32)
  - AngeliA.Util.WriteXML``1(``0,System.String)
  langs:
  - csharp
  - vb
  name: Util
  nameWithType: Util
  fullName: AngeliA.Util
  type: Class
  source:
    remote:
      path: AngeliA Framework/src/Utility/Util_Ref.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: Util
    path: ../AngeliA Framework/src/Utility/Util_Ref.cs
    startLine: 9
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static class Util
    content.vb: Public Module Util
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: AngeliA.Util.FileToText(System.String)
  commentId: M:AngeliA.Util.FileToText(System.String)
  id: FileToText(System.String)
  parent: AngeliA.Util
  langs:
  - csharp
  - vb
  name: FileToText(string)
  nameWithType: Util.FileToText(string)
  fullName: AngeliA.Util.FileToText(string)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/Util_File.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: FileToText
    path: ../AngeliA Framework/src/Utility/Util_File.cs
    startLine: 15
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static string FileToText(string path)
    parameters:
    - id: path
      type: System.String
    return:
      type: System.String
    content.vb: Public Shared Function FileToText(path As String) As String
  overload: AngeliA.Util.FileToText*
  nameWithType.vb: Util.FileToText(String)
  fullName.vb: AngeliA.Util.FileToText(String)
  name.vb: FileToText(String)
- uid: AngeliA.Util.FileToText(System.String,System.Text.Encoding)
  commentId: M:AngeliA.Util.FileToText(System.String,System.Text.Encoding)
  id: FileToText(System.String,System.Text.Encoding)
  parent: AngeliA.Util
  langs:
  - csharp
  - vb
  name: FileToText(string, Encoding)
  nameWithType: Util.FileToText(string, Encoding)
  fullName: AngeliA.Util.FileToText(string, System.Text.Encoding)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/Util_File.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: FileToText
    path: ../AngeliA Framework/src/Utility/Util_File.cs
    startLine: 24
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static string FileToText(string path, Encoding encoding)
    parameters:
    - id: path
      type: System.String
    - id: encoding
      type: System.Text.Encoding
    return:
      type: System.String
    content.vb: Public Shared Function FileToText(path As String, encoding As Encoding) As String
  overload: AngeliA.Util.FileToText*
  nameWithType.vb: Util.FileToText(String, Encoding)
  fullName.vb: AngeliA.Util.FileToText(String, System.Text.Encoding)
  name.vb: FileToText(String, Encoding)
- uid: AngeliA.Util.TextToFile(System.String,System.String,System.Boolean)
  commentId: M:AngeliA.Util.TextToFile(System.String,System.String,System.Boolean)
  id: TextToFile(System.String,System.String,System.Boolean)
  parent: AngeliA.Util
  langs:
  - csharp
  - vb
  name: TextToFile(string, string, bool)
  nameWithType: Util.TextToFile(string, string, bool)
  fullName: AngeliA.Util.TextToFile(string, string, bool)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/Util_File.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: TextToFile
    path: ../AngeliA Framework/src/Utility/Util_File.cs
    startLine: 33
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static void TextToFile(string data, string path, bool append = false)
    parameters:
    - id: data
      type: System.String
    - id: path
      type: System.String
    - id: append
      type: System.Boolean
    content.vb: Public Shared Sub TextToFile(data As String, path As String, append As Boolean = False)
  overload: AngeliA.Util.TextToFile*
  nameWithType.vb: Util.TextToFile(String, String, Boolean)
  fullName.vb: AngeliA.Util.TextToFile(String, String, Boolean)
  name.vb: TextToFile(String, String, Boolean)
- uid: AngeliA.Util.TextToFile(System.String,System.String,System.Text.Encoding,System.Boolean)
  commentId: M:AngeliA.Util.TextToFile(System.String,System.String,System.Text.Encoding,System.Boolean)
  id: TextToFile(System.String,System.String,System.Text.Encoding,System.Boolean)
  parent: AngeliA.Util
  langs:
  - csharp
  - vb
  name: TextToFile(string, string, Encoding, bool)
  nameWithType: Util.TextToFile(string, string, Encoding, bool)
  fullName: AngeliA.Util.TextToFile(string, string, System.Text.Encoding, bool)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/Util_File.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: TextToFile
    path: ../AngeliA Framework/src/Utility/Util_File.cs
    startLine: 43
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static void TextToFile(string data, string path, Encoding encoding, bool append = false)
    parameters:
    - id: data
      type: System.String
    - id: path
      type: System.String
    - id: encoding
      type: System.Text.Encoding
    - id: append
      type: System.Boolean
    content.vb: Public Shared Sub TextToFile(data As String, path As String, encoding As Encoding, append As Boolean = False)
  overload: AngeliA.Util.TextToFile*
  nameWithType.vb: Util.TextToFile(String, String, Encoding, Boolean)
  fullName.vb: AngeliA.Util.TextToFile(String, String, System.Text.Encoding, Boolean)
  name.vb: TextToFile(String, String, Encoding, Boolean)
- uid: AngeliA.Util.ForAllLinesInFile(System.String)
  commentId: M:AngeliA.Util.ForAllLinesInFile(System.String)
  id: ForAllLinesInFile(System.String)
  parent: AngeliA.Util
  langs:
  - csharp
  - vb
  name: ForAllLinesInFile(string)
  nameWithType: Util.ForAllLinesInFile(string)
  fullName: AngeliA.Util.ForAllLinesInFile(string)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/Util_File.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: ForAllLinesInFile
    path: ../AngeliA Framework/src/Utility/Util_File.cs
    startLine: 54
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static IEnumerable<string> ForAllLinesInFile(string path)
    parameters:
    - id: path
      type: System.String
    return:
      type: System.Collections.Generic.IEnumerable{System.String}
    content.vb: Public Shared Function ForAllLinesInFile(path As String) As IEnumerable(Of String)
  overload: AngeliA.Util.ForAllLinesInFile*
  nameWithType.vb: Util.ForAllLinesInFile(String)
  fullName.vb: AngeliA.Util.ForAllLinesInFile(String)
  name.vb: ForAllLinesInFile(String)
- uid: AngeliA.Util.ForAllLinesInFile(System.String,System.Text.Encoding)
  commentId: M:AngeliA.Util.ForAllLinesInFile(System.String,System.Text.Encoding)
  id: ForAllLinesInFile(System.String,System.Text.Encoding)
  parent: AngeliA.Util
  langs:
  - csharp
  - vb
  name: ForAllLinesInFile(string, Encoding)
  nameWithType: Util.ForAllLinesInFile(string, Encoding)
  fullName: AngeliA.Util.ForAllLinesInFile(string, System.Text.Encoding)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/Util_File.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: ForAllLinesInFile
    path: ../AngeliA Framework/src/Utility/Util_File.cs
    startLine: 61
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static IEnumerable<string> ForAllLinesInFile(string path, Encoding encoding)
    parameters:
    - id: path
      type: System.String
    - id: encoding
      type: System.Text.Encoding
    return:
      type: System.Collections.Generic.IEnumerable{System.String}
    content.vb: Public Shared Function ForAllLinesInFile(path As String, encoding As Encoding) As IEnumerable(Of String)
  overload: AngeliA.Util.ForAllLinesInFile*
  nameWithType.vb: Util.ForAllLinesInFile(String, Encoding)
  fullName.vb: AngeliA.Util.ForAllLinesInFile(String, System.Text.Encoding)
  name.vb: ForAllLinesInFile(String, Encoding)
- uid: AngeliA.Util.ForAllLinesInString(System.String)
  commentId: M:AngeliA.Util.ForAllLinesInString(System.String)
  id: ForAllLinesInString(System.String)
  parent: AngeliA.Util
  langs:
  - csharp
  - vb
  name: ForAllLinesInString(string)
  nameWithType: Util.ForAllLinesInString(string)
  fullName: AngeliA.Util.ForAllLinesInString(string)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/Util_File.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: ForAllLinesInString
    path: ../AngeliA Framework/src/Utility/Util_File.cs
    startLine: 68
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static IEnumerable<string> ForAllLinesInString(string content)
    parameters:
    - id: content
      type: System.String
    return:
      type: System.Collections.Generic.IEnumerable{System.String}
    content.vb: Public Shared Function ForAllLinesInString(content As String) As IEnumerable(Of String)
  overload: AngeliA.Util.ForAllLinesInString*
  nameWithType.vb: Util.ForAllLinesInString(String)
  fullName.vb: AngeliA.Util.ForAllLinesInString(String)
  name.vb: ForAllLinesInString(String)
- uid: AngeliA.Util.ForAllNameAndIntInFile(System.String)
  commentId: M:AngeliA.Util.ForAllNameAndIntInFile(System.String)
  id: ForAllNameAndIntInFile(System.String)
  parent: AngeliA.Util
  langs:
  - csharp
  - vb
  name: ForAllNameAndIntInFile(string)
  nameWithType: Util.ForAllNameAndIntInFile(string)
  fullName: AngeliA.Util.ForAllNameAndIntInFile(string)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/Util_File.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: ForAllNameAndIntInFile
    path: ../AngeliA Framework/src/Utility/Util_File.cs
    startLine: 74
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static IEnumerable<(string name, int value)> ForAllNameAndIntInFile(string path)
    parameters:
    - id: path
      type: System.String
    return:
      type: System.Collections.Generic.IEnumerable{System.ValueTuple{System.String,System.Int32}}
    content.vb: Public Shared Function ForAllNameAndIntInFile(path As String) As IEnumerable(Of (name As String, value As Integer))
  overload: AngeliA.Util.ForAllNameAndIntInFile*
  nameWithType.vb: Util.ForAllNameAndIntInFile(String)
  fullName.vb: AngeliA.Util.ForAllNameAndIntInFile(String)
  name.vb: ForAllNameAndIntInFile(String)
- uid: AngeliA.Util.ForAllNameAndIntInFile(System.String,System.Text.Encoding)
  commentId: M:AngeliA.Util.ForAllNameAndIntInFile(System.String,System.Text.Encoding)
  id: ForAllNameAndIntInFile(System.String,System.Text.Encoding)
  parent: AngeliA.Util
  langs:
  - csharp
  - vb
  name: ForAllNameAndIntInFile(string, Encoding)
  nameWithType: Util.ForAllNameAndIntInFile(string, Encoding)
  fullName: AngeliA.Util.ForAllNameAndIntInFile(string, System.Text.Encoding)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/Util_File.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: ForAllNameAndIntInFile
    path: ../AngeliA Framework/src/Utility/Util_File.cs
    startLine: 81
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static IEnumerable<(string name, int value)> ForAllNameAndIntInFile(string path, Encoding encoding)
    parameters:
    - id: path
      type: System.String
    - id: encoding
      type: System.Text.Encoding
    return:
      type: System.Collections.Generic.IEnumerable{System.ValueTuple{System.String,System.Int32}}
    content.vb: Public Shared Function ForAllNameAndIntInFile(path As String, encoding As Encoding) As IEnumerable(Of (name As String, value As Integer))
  overload: AngeliA.Util.ForAllNameAndIntInFile*
  nameWithType.vb: Util.ForAllNameAndIntInFile(String, Encoding)
  fullName.vb: AngeliA.Util.ForAllNameAndIntInFile(String, System.Text.Encoding)
  name.vb: ForAllNameAndIntInFile(String, Encoding)
- uid: AngeliA.Util.ForAllNameAndIntInFile(System.IO.StreamReader)
  commentId: M:AngeliA.Util.ForAllNameAndIntInFile(System.IO.StreamReader)
  id: ForAllNameAndIntInFile(System.IO.StreamReader)
  parent: AngeliA.Util
  langs:
  - csharp
  - vb
  name: ForAllNameAndIntInFile(StreamReader)
  nameWithType: Util.ForAllNameAndIntInFile(StreamReader)
  fullName: AngeliA.Util.ForAllNameAndIntInFile(System.IO.StreamReader)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/Util_File.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: ForAllNameAndIntInFile
    path: ../AngeliA Framework/src/Utility/Util_File.cs
    startLine: 88
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static IEnumerable<(string name, int value)> ForAllNameAndIntInFile(StreamReader reader)
    parameters:
    - id: reader
      type: System.IO.StreamReader
    return:
      type: System.Collections.Generic.IEnumerable{System.ValueTuple{System.String,System.Int32}}
    content.vb: Public Shared Function ForAllNameAndIntInFile(reader As StreamReader) As IEnumerable(Of (name As String, value As Integer))
  overload: AngeliA.Util.ForAllNameAndIntInFile*
- uid: AngeliA.Util.ForAllNameAndStringInFile(System.String)
  commentId: M:AngeliA.Util.ForAllNameAndStringInFile(System.String)
  id: ForAllNameAndStringInFile(System.String)
  parent: AngeliA.Util
  langs:
  - csharp
  - vb
  name: ForAllNameAndStringInFile(string)
  nameWithType: Util.ForAllNameAndStringInFile(string)
  fullName: AngeliA.Util.ForAllNameAndStringInFile(string)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/Util_File.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: ForAllNameAndStringInFile
    path: ../AngeliA Framework/src/Utility/Util_File.cs
    startLine: 100
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static IEnumerable<(string name, string value)> ForAllNameAndStringInFile(string path)
    parameters:
    - id: path
      type: System.String
    return:
      type: System.Collections.Generic.IEnumerable{System.ValueTuple{System.String,System.String}}
    content.vb: Public Shared Function ForAllNameAndStringInFile(path As String) As IEnumerable(Of (name As String, value As String))
  overload: AngeliA.Util.ForAllNameAndStringInFile*
  nameWithType.vb: Util.ForAllNameAndStringInFile(String)
  fullName.vb: AngeliA.Util.ForAllNameAndStringInFile(String)
  name.vb: ForAllNameAndStringInFile(String)
- uid: AngeliA.Util.ForAllNameAndStringInFile(System.String,System.Text.Encoding)
  commentId: M:AngeliA.Util.ForAllNameAndStringInFile(System.String,System.Text.Encoding)
  id: ForAllNameAndStringInFile(System.String,System.Text.Encoding)
  parent: AngeliA.Util
  langs:
  - csharp
  - vb
  name: ForAllNameAndStringInFile(string, Encoding)
  nameWithType: Util.ForAllNameAndStringInFile(string, Encoding)
  fullName: AngeliA.Util.ForAllNameAndStringInFile(string, System.Text.Encoding)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/Util_File.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: ForAllNameAndStringInFile
    path: ../AngeliA Framework/src/Utility/Util_File.cs
    startLine: 107
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static IEnumerable<(string name, string value)> ForAllNameAndStringInFile(string path, Encoding encoding)
    parameters:
    - id: path
      type: System.String
    - id: encoding
      type: System.Text.Encoding
    return:
      type: System.Collections.Generic.IEnumerable{System.ValueTuple{System.String,System.String}}
    content.vb: Public Shared Function ForAllNameAndStringInFile(path As String, encoding As Encoding) As IEnumerable(Of (name As String, value As String))
  overload: AngeliA.Util.ForAllNameAndStringInFile*
  nameWithType.vb: Util.ForAllNameAndStringInFile(String, Encoding)
  fullName.vb: AngeliA.Util.ForAllNameAndStringInFile(String, System.Text.Encoding)
  name.vb: ForAllNameAndStringInFile(String, Encoding)
- uid: AngeliA.Util.ForAllNameAndStringInFile(System.IO.StreamReader)
  commentId: M:AngeliA.Util.ForAllNameAndStringInFile(System.IO.StreamReader)
  id: ForAllNameAndStringInFile(System.IO.StreamReader)
  parent: AngeliA.Util
  langs:
  - csharp
  - vb
  name: ForAllNameAndStringInFile(StreamReader)
  nameWithType: Util.ForAllNameAndStringInFile(StreamReader)
  fullName: AngeliA.Util.ForAllNameAndStringInFile(System.IO.StreamReader)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/Util_File.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: ForAllNameAndStringInFile
    path: ../AngeliA Framework/src/Utility/Util_File.cs
    startLine: 114
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static IEnumerable<(string name, string value)> ForAllNameAndStringInFile(StreamReader reader)
    parameters:
    - id: reader
      type: System.IO.StreamReader
    return:
      type: System.Collections.Generic.IEnumerable{System.ValueTuple{System.String,System.String}}
    content.vb: Public Shared Function ForAllNameAndStringInFile(reader As StreamReader) As IEnumerable(Of (name As String, value As String))
  overload: AngeliA.Util.ForAllNameAndStringInFile*
- uid: AngeliA.Util.CreateFolder(System.String)
  commentId: M:AngeliA.Util.CreateFolder(System.String)
  id: CreateFolder(System.String)
  parent: AngeliA.Util
  langs:
  - csharp
  - vb
  name: CreateFolder(string)
  nameWithType: Util.CreateFolder(string)
  fullName: AngeliA.Util.CreateFolder(string)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/Util_File.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: CreateFolder
    path: ../AngeliA Framework/src/Utility/Util_File.cs
    startLine: 124
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static void CreateFolder(string path)
    parameters:
    - id: path
      type: System.String
    content.vb: Public Shared Sub CreateFolder(path As String)
  overload: AngeliA.Util.CreateFolder*
  nameWithType.vb: Util.CreateFolder(String)
  fullName.vb: AngeliA.Util.CreateFolder(String)
  name.vb: CreateFolder(String)
- uid: AngeliA.Util.FileToBytes(System.String)
  commentId: M:AngeliA.Util.FileToBytes(System.String)
  id: FileToBytes(System.String)
  parent: AngeliA.Util
  langs:
  - csharp
  - vb
  name: FileToBytes(string)
  nameWithType: Util.FileToBytes(string)
  fullName: AngeliA.Util.FileToBytes(string)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/Util_File.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: FileToBytes
    path: ../AngeliA Framework/src/Utility/Util_File.cs
    startLine: 134
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static byte[] FileToBytes(string path)
    parameters:
    - id: path
      type: System.String
    return:
      type: System.Byte[]
    content.vb: Public Shared Function FileToBytes(path As String) As Byte()
  overload: AngeliA.Util.FileToBytes*
  nameWithType.vb: Util.FileToBytes(String)
  fullName.vb: AngeliA.Util.FileToBytes(String)
  name.vb: FileToBytes(String)
- uid: AngeliA.Util.BytesToFile(System.Byte[],System.String,System.Int32)
  commentId: M:AngeliA.Util.BytesToFile(System.Byte[],System.String,System.Int32)
  id: BytesToFile(System.Byte[],System.String,System.Int32)
  parent: AngeliA.Util
  langs:
  - csharp
  - vb
  name: BytesToFile(byte[], string, int)
  nameWithType: Util.BytesToFile(byte[], string, int)
  fullName: AngeliA.Util.BytesToFile(byte[], string, int)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/Util_File.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: BytesToFile
    path: ../AngeliA Framework/src/Utility/Util_File.cs
    startLine: 143
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static void BytesToFile(byte[] bytes, string path, int length = -1)
    parameters:
    - id: bytes
      type: System.Byte[]
    - id: path
      type: System.String
    - id: length
      type: System.Int32
    content.vb: Public Shared Sub BytesToFile(bytes As Byte(), path As String, length As Integer = -1)
  overload: AngeliA.Util.BytesToFile*
  nameWithType.vb: Util.BytesToFile(Byte(), String, Integer)
  fullName.vb: AngeliA.Util.BytesToFile(Byte(), String, Integer)
  name.vb: BytesToFile(Byte(), String, Integer)
- uid: AngeliA.Util.HasFileIn(System.String,System.Boolean,System.String)
  commentId: M:AngeliA.Util.HasFileIn(System.String,System.Boolean,System.String)
  id: HasFileIn(System.String,System.Boolean,System.String)
  parent: AngeliA.Util
  langs:
  - csharp
  - vb
  name: HasFileIn(string, bool, string)
  nameWithType: Util.HasFileIn(string, bool, string)
  fullName: AngeliA.Util.HasFileIn(string, bool, string)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/Util_File.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: HasFileIn
    path: ../AngeliA Framework/src/Utility/Util_File.cs
    startLine: 151
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static bool HasFileIn(string path, bool topOnly, string searchPattern)
    parameters:
    - id: path
      type: System.String
    - id: topOnly
      type: System.Boolean
    - id: searchPattern
      type: System.String
    return:
      type: System.Boolean
    content.vb: Public Shared Function HasFileIn(path As String, topOnly As Boolean, searchPattern As String) As Boolean
  overload: AngeliA.Util.HasFileIn*
  nameWithType.vb: Util.HasFileIn(String, Boolean, String)
  fullName.vb: AngeliA.Util.HasFileIn(String, Boolean, String)
  name.vb: HasFileIn(String, Boolean, String)
- uid: AngeliA.Util.HasFileIn(System.String,System.Boolean,System.String[])
  commentId: M:AngeliA.Util.HasFileIn(System.String,System.Boolean,System.String[])
  id: HasFileIn(System.String,System.Boolean,System.String[])
  parent: AngeliA.Util
  langs:
  - csharp
  - vb
  name: HasFileIn(string, bool, params string[])
  nameWithType: Util.HasFileIn(string, bool, params string[])
  fullName: AngeliA.Util.HasFileIn(string, bool, params string[])
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/Util_File.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: HasFileIn
    path: ../AngeliA Framework/src/Utility/Util_File.cs
    startLine: 156
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static bool HasFileIn(string path, bool topOnly, params string[] searchPattern)
    parameters:
    - id: path
      type: System.String
    - id: topOnly
      type: System.Boolean
    - id: searchPattern
      type: System.String[]
    return:
      type: System.Boolean
    content.vb: Public Shared Function HasFileIn(path As String, topOnly As Boolean, ParamArray searchPattern As String()) As Boolean
  overload: AngeliA.Util.HasFileIn*
  nameWithType.vb: Util.HasFileIn(String, Boolean, ParamArray String())
  fullName.vb: AngeliA.Util.HasFileIn(String, Boolean, ParamArray String())
  name.vb: HasFileIn(String, Boolean, ParamArray String())
- uid: AngeliA.Util.EnumerateFiles(System.String,System.Boolean,System.String)
  commentId: M:AngeliA.Util.EnumerateFiles(System.String,System.Boolean,System.String)
  id: EnumerateFiles(System.String,System.Boolean,System.String)
  parent: AngeliA.Util
  langs:
  - csharp
  - vb
  name: EnumerateFiles(string, bool, string)
  nameWithType: Util.EnumerateFiles(string, bool, string)
  fullName: AngeliA.Util.EnumerateFiles(string, bool, string)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/Util_File.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: EnumerateFiles
    path: ../AngeliA Framework/src/Utility/Util_File.cs
    startLine: 163
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static IEnumerable<string> EnumerateFiles(string path, bool topOnly, string searchPattern)
    parameters:
    - id: path
      type: System.String
    - id: topOnly
      type: System.Boolean
    - id: searchPattern
      type: System.String
    return:
      type: System.Collections.Generic.IEnumerable{System.String}
    content.vb: Public Shared Function EnumerateFiles(path As String, topOnly As Boolean, searchPattern As String) As IEnumerable(Of String)
  overload: AngeliA.Util.EnumerateFiles*
  nameWithType.vb: Util.EnumerateFiles(String, Boolean, String)
  fullName.vb: AngeliA.Util.EnumerateFiles(String, Boolean, String)
  name.vb: EnumerateFiles(String, Boolean, String)
- uid: AngeliA.Util.EnumerateFiles(System.String,System.Boolean,System.String[])
  commentId: M:AngeliA.Util.EnumerateFiles(System.String,System.Boolean,System.String[])
  id: EnumerateFiles(System.String,System.Boolean,System.String[])
  parent: AngeliA.Util
  langs:
  - csharp
  - vb
  name: EnumerateFiles(string, bool, params string[])
  nameWithType: Util.EnumerateFiles(string, bool, params string[])
  fullName: AngeliA.Util.EnumerateFiles(string, bool, params string[])
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/Util_File.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: EnumerateFiles
    path: ../AngeliA Framework/src/Utility/Util_File.cs
    startLine: 170
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static IEnumerable<string> EnumerateFiles(string path, bool topOnly, params string[] searchPatterns)
    parameters:
    - id: path
      type: System.String
    - id: topOnly
      type: System.Boolean
    - id: searchPatterns
      type: System.String[]
    return:
      type: System.Collections.Generic.IEnumerable{System.String}
    content.vb: Public Shared Function EnumerateFiles(path As String, topOnly As Boolean, ParamArray searchPatterns As String()) As IEnumerable(Of String)
  overload: AngeliA.Util.EnumerateFiles*
  nameWithType.vb: Util.EnumerateFiles(String, Boolean, ParamArray String())
  fullName.vb: AngeliA.Util.EnumerateFiles(String, Boolean, ParamArray String())
  name.vb: EnumerateFiles(String, Boolean, ParamArray String())
- uid: AngeliA.Util.EnumerateFolders(System.String,System.Boolean,System.String)
  commentId: M:AngeliA.Util.EnumerateFolders(System.String,System.Boolean,System.String)
  id: EnumerateFolders(System.String,System.Boolean,System.String)
  parent: AngeliA.Util
  langs:
  - csharp
  - vb
  name: EnumerateFolders(string, bool, string)
  nameWithType: Util.EnumerateFolders(string, bool, string)
  fullName: AngeliA.Util.EnumerateFolders(string, bool, string)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/Util_File.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: EnumerateFolders
    path: ../AngeliA Framework/src/Utility/Util_File.cs
    startLine: 187
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static IEnumerable<string> EnumerateFolders(string path, bool topOnly, string searchPattern = "*")
    parameters:
    - id: path
      type: System.String
    - id: topOnly
      type: System.Boolean
    - id: searchPattern
      type: System.String
    return:
      type: System.Collections.Generic.IEnumerable{System.String}
    content.vb: Public Shared Function EnumerateFolders(path As String, topOnly As Boolean, searchPattern As String = "*") As IEnumerable(Of String)
  overload: AngeliA.Util.EnumerateFolders*
  nameWithType.vb: Util.EnumerateFolders(String, Boolean, String)
  fullName.vb: AngeliA.Util.EnumerateFolders(String, Boolean, String)
  name.vb: EnumerateFolders(String, Boolean, String)
- uid: AngeliA.Util.EnumerateFolders(System.String,System.Boolean,System.String[])
  commentId: M:AngeliA.Util.EnumerateFolders(System.String,System.Boolean,System.String[])
  id: EnumerateFolders(System.String,System.Boolean,System.String[])
  parent: AngeliA.Util
  langs:
  - csharp
  - vb
  name: EnumerateFolders(string, bool, params string[])
  nameWithType: Util.EnumerateFolders(string, bool, params string[])
  fullName: AngeliA.Util.EnumerateFolders(string, bool, params string[])
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/Util_File.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: EnumerateFolders
    path: ../AngeliA Framework/src/Utility/Util_File.cs
    startLine: 194
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static IEnumerable<string> EnumerateFolders(string path, bool topOnly, params string[] searchPatterns)
    parameters:
    - id: path
      type: System.String
    - id: topOnly
      type: System.Boolean
    - id: searchPatterns
      type: System.String[]
    return:
      type: System.Collections.Generic.IEnumerable{System.String}
    content.vb: Public Shared Function EnumerateFolders(path As String, topOnly As Boolean, ParamArray searchPatterns As String()) As IEnumerable(Of String)
  overload: AngeliA.Util.EnumerateFolders*
  nameWithType.vb: Util.EnumerateFolders(String, Boolean, ParamArray String())
  fullName.vb: AngeliA.Util.EnumerateFolders(String, Boolean, ParamArray String())
  name.vb: EnumerateFolders(String, Boolean, ParamArray String())
- uid: AngeliA.Util.DeleteFile(System.String)
  commentId: M:AngeliA.Util.DeleteFile(System.String)
  id: DeleteFile(System.String)
  parent: AngeliA.Util
  langs:
  - csharp
  - vb
  name: DeleteFile(string)
  nameWithType: Util.DeleteFile(string)
  fullName: AngeliA.Util.DeleteFile(string)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/Util_File.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: DeleteFile
    path: ../AngeliA Framework/src/Utility/Util_File.cs
    startLine: 211
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static void DeleteFile(string path)
    parameters:
    - id: path
      type: System.String
    content.vb: Public Shared Sub DeleteFile(path As String)
  overload: AngeliA.Util.DeleteFile*
  nameWithType.vb: Util.DeleteFile(String)
  fullName.vb: AngeliA.Util.DeleteFile(String)
  name.vb: DeleteFile(String)
- uid: AngeliA.Util.CopyFile(System.String,System.String,System.Boolean)
  commentId: M:AngeliA.Util.CopyFile(System.String,System.String,System.Boolean)
  id: CopyFile(System.String,System.String,System.Boolean)
  parent: AngeliA.Util
  langs:
  - csharp
  - vb
  name: CopyFile(string, string, bool)
  nameWithType: Util.CopyFile(string, string, bool)
  fullName: AngeliA.Util.CopyFile(string, string, bool)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/Util_File.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: CopyFile
    path: ../AngeliA Framework/src/Utility/Util_File.cs
    startLine: 218
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static bool CopyFile(string from, string to, bool overwrite = true)
    parameters:
    - id: from
      type: System.String
    - id: to
      type: System.String
    - id: overwrite
      type: System.Boolean
    return:
      type: System.Boolean
    content.vb: Public Shared Function CopyFile(from As String, [to] As String, overwrite As Boolean = True) As Boolean
  overload: AngeliA.Util.CopyFile*
  nameWithType.vb: Util.CopyFile(String, String, Boolean)
  fullName.vb: AngeliA.Util.CopyFile(String, String, Boolean)
  name.vb: CopyFile(String, String, Boolean)
- uid: AngeliA.Util.CopyFolder(System.String,System.String,System.Boolean,System.Boolean,System.Boolean)
  commentId: M:AngeliA.Util.CopyFolder(System.String,System.String,System.Boolean,System.Boolean,System.Boolean)
  id: CopyFolder(System.String,System.String,System.Boolean,System.Boolean,System.Boolean)
  parent: AngeliA.Util
  langs:
  - csharp
  - vb
  name: CopyFolder(string, string, bool, bool, bool)
  nameWithType: Util.CopyFolder(string, string, bool, bool, bool)
  fullName: AngeliA.Util.CopyFolder(string, string, bool, bool, bool)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/Util_File.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: CopyFolder
    path: ../AngeliA Framework/src/Utility/Util_File.cs
    startLine: 231
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static bool CopyFolder(string from, string to, bool copySubDirs, bool ignoreHidden, bool overrideFile = false)
    parameters:
    - id: from
      type: System.String
    - id: to
      type: System.String
    - id: copySubDirs
      type: System.Boolean
    - id: ignoreHidden
      type: System.Boolean
    - id: overrideFile
      type: System.Boolean
    return:
      type: System.Boolean
    content.vb: Public Shared Function CopyFolder(from As String, [to] As String, copySubDirs As Boolean, ignoreHidden As Boolean, overrideFile As Boolean = False) As Boolean
  overload: AngeliA.Util.CopyFolder*
  nameWithType.vb: Util.CopyFolder(String, String, Boolean, Boolean, Boolean)
  fullName.vb: AngeliA.Util.CopyFolder(String, String, Boolean, Boolean, Boolean)
  name.vb: CopyFolder(String, String, Boolean, Boolean, Boolean)
- uid: AngeliA.Util.DeleteFolder(System.String)
  commentId: M:AngeliA.Util.DeleteFolder(System.String)
  id: DeleteFolder(System.String)
  parent: AngeliA.Util
  langs:
  - csharp
  - vb
  name: DeleteFolder(string)
  nameWithType: Util.DeleteFolder(string)
  fullName: AngeliA.Util.DeleteFolder(string)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/Util_File.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: DeleteFolder
    path: ../AngeliA Framework/src/Utility/Util_File.cs
    startLine: 270
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static void DeleteFolder(string path)
    parameters:
    - id: path
      type: System.String
    content.vb: Public Shared Sub DeleteFolder(path As String)
  overload: AngeliA.Util.DeleteFolder*
  nameWithType.vb: Util.DeleteFolder(String)
  fullName.vb: AngeliA.Util.DeleteFolder(String)
  name.vb: DeleteFolder(String)
- uid: AngeliA.Util.GetFileSizeInMB(System.String)
  commentId: M:AngeliA.Util.GetFileSizeInMB(System.String)
  id: GetFileSizeInMB(System.String)
  parent: AngeliA.Util
  langs:
  - csharp
  - vb
  name: GetFileSizeInMB(string)
  nameWithType: Util.GetFileSizeInMB(string)
  fullName: AngeliA.Util.GetFileSizeInMB(string)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/Util_File.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: GetFileSizeInMB
    path: ../AngeliA Framework/src/Utility/Util_File.cs
    startLine: 277
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static float GetFileSizeInMB(string path)
    parameters:
    - id: path
      type: System.String
    return:
      type: System.Single
    content.vb: Public Shared Function GetFileSizeInMB(path As String) As Single
  overload: AngeliA.Util.GetFileSizeInMB*
  nameWithType.vb: Util.GetFileSizeInMB(String)
  fullName.vb: AngeliA.Util.GetFileSizeInMB(String)
  name.vb: GetFileSizeInMB(String)
- uid: AngeliA.Util.ReadXML``1(System.String)
  commentId: M:AngeliA.Util.ReadXML``1(System.String)
  id: ReadXML``1(System.String)
  parent: AngeliA.Util
  langs:
  - csharp
  - vb
  name: ReadXML<T>(string)
  nameWithType: Util.ReadXML<T>(string)
  fullName: AngeliA.Util.ReadXML<T>(string)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/Util_File.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: ReadXML
    path: ../AngeliA Framework/src/Utility/Util_File.cs
    startLine: 286
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: 'public static T ReadXML<T>(string path) where T : class'
    parameters:
    - id: path
      type: System.String
    typeParameters:
    - id: T
    return:
      type: '{T}'
    content.vb: Public Shared Function ReadXML(Of T As Class)(path As String) As T
  overload: AngeliA.Util.ReadXML*
  nameWithType.vb: Util.ReadXML(Of T)(String)
  fullName.vb: AngeliA.Util.ReadXML(Of T)(String)
  name.vb: ReadXML(Of T)(String)
- uid: AngeliA.Util.WriteXML``1(``0,System.String)
  commentId: M:AngeliA.Util.WriteXML``1(``0,System.String)
  id: WriteXML``1(``0,System.String)
  parent: AngeliA.Util
  langs:
  - csharp
  - vb
  name: WriteXML<T>(T, string)
  nameWithType: Util.WriteXML<T>(T, string)
  fullName: AngeliA.Util.WriteXML<T>(T, string)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/Util_File.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: WriteXML
    path: ../AngeliA Framework/src/Utility/Util_File.cs
    startLine: 295
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: 'public static void WriteXML<T>(T data, string path) where T : class'
    parameters:
    - id: data
      type: '{T}'
    - id: path
      type: System.String
    typeParameters:
    - id: T
    content.vb: Public Shared Sub WriteXML(Of T As Class)(data As T, path As String)
  overload: AngeliA.Util.WriteXML*
  nameWithType.vb: Util.WriteXML(Of T)(T, String)
  fullName.vb: AngeliA.Util.WriteXML(Of T)(T, String)
  name.vb: WriteXML(Of T)(T, String)
- uid: AngeliA.Util.GetFileCount(System.String,System.String,System.IO.SearchOption)
  commentId: M:AngeliA.Util.GetFileCount(System.String,System.String,System.IO.SearchOption)
  id: GetFileCount(System.String,System.String,System.IO.SearchOption)
  parent: AngeliA.Util
  langs:
  - csharp
  - vb
  name: GetFileCount(string, string, SearchOption)
  nameWithType: Util.GetFileCount(string, string, SearchOption)
  fullName: AngeliA.Util.GetFileCount(string, string, System.IO.SearchOption)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/Util_File.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: GetFileCount
    path: ../AngeliA Framework/src/Utility/Util_File.cs
    startLine: 303
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static int GetFileCount(string path, string search = "*", SearchOption option = SearchOption.TopDirectoryOnly)
    parameters:
    - id: path
      type: System.String
    - id: search
      type: System.String
    - id: option
      type: System.IO.SearchOption
    return:
      type: System.Int32
    content.vb: Public Shared Function GetFileCount(path As String, search As String = "*", [option] As SearchOption = SearchOption.TopDirectoryOnly) As Integer
  overload: AngeliA.Util.GetFileCount*
  nameWithType.vb: Util.GetFileCount(String, String, SearchOption)
  fullName.vb: AngeliA.Util.GetFileCount(String, String, System.IO.SearchOption)
  name.vb: GetFileCount(String, String, SearchOption)
- uid: AngeliA.Util.GetFolderCount(System.String,System.String,System.IO.SearchOption)
  commentId: M:AngeliA.Util.GetFolderCount(System.String,System.String,System.IO.SearchOption)
  id: GetFolderCount(System.String,System.String,System.IO.SearchOption)
  parent: AngeliA.Util
  langs:
  - csharp
  - vb
  name: GetFolderCount(string, string, SearchOption)
  nameWithType: Util.GetFolderCount(string, string, SearchOption)
  fullName: AngeliA.Util.GetFolderCount(string, string, System.IO.SearchOption)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/Util_File.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: GetFolderCount
    path: ../AngeliA Framework/src/Utility/Util_File.cs
    startLine: 311
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static int GetFolderCount(string path, string search = "*", SearchOption option = SearchOption.TopDirectoryOnly)
    parameters:
    - id: path
      type: System.String
    - id: search
      type: System.String
    - id: option
      type: System.IO.SearchOption
    return:
      type: System.Int32
    content.vb: Public Shared Function GetFolderCount(path As String, search As String = "*", [option] As SearchOption = SearchOption.TopDirectoryOnly) As Integer
  overload: AngeliA.Util.GetFolderCount*
  nameWithType.vb: Util.GetFolderCount(String, String, SearchOption)
  fullName.vb: AngeliA.Util.GetFolderCount(String, String, System.IO.SearchOption)
  name.vb: GetFolderCount(String, String, SearchOption)
- uid: AngeliA.Util.MoveFile(System.String,System.String)
  commentId: M:AngeliA.Util.MoveFile(System.String,System.String)
  id: MoveFile(System.String,System.String)
  parent: AngeliA.Util
  langs:
  - csharp
  - vb
  name: MoveFile(string, string)
  nameWithType: Util.MoveFile(string, string)
  fullName: AngeliA.Util.MoveFile(string, string)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/Util_File.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: MoveFile
    path: ../AngeliA Framework/src/Utility/Util_File.cs
    startLine: 319
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static void MoveFile(string from, string to)
    parameters:
    - id: from
      type: System.String
    - id: to
      type: System.String
    content.vb: Public Shared Sub MoveFile(from As String, [to] As String)
  overload: AngeliA.Util.MoveFile*
  nameWithType.vb: Util.MoveFile(String, String)
  fullName.vb: AngeliA.Util.MoveFile(String, String)
  name.vb: MoveFile(String, String)
- uid: AngeliA.Util.MoveFolder(System.String,System.String)
  commentId: M:AngeliA.Util.MoveFolder(System.String,System.String)
  id: MoveFolder(System.String,System.String)
  parent: AngeliA.Util
  langs:
  - csharp
  - vb
  name: MoveFolder(string, string)
  nameWithType: Util.MoveFolder(string, string)
  fullName: AngeliA.Util.MoveFolder(string, string)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/Util_File.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: MoveFolder
    path: ../AngeliA Framework/src/Utility/Util_File.cs
    startLine: 326
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static bool MoveFolder(string from, string to)
    parameters:
    - id: from
      type: System.String
    - id: to
      type: System.String
    return:
      type: System.Boolean
    content.vb: Public Shared Function MoveFolder(from As String, [to] As String) As Boolean
  overload: AngeliA.Util.MoveFolder*
  nameWithType.vb: Util.MoveFolder(String, String)
  fullName.vb: AngeliA.Util.MoveFolder(String, String)
  name.vb: MoveFolder(String, String)
- uid: AngeliA.Util.GetFileModifyDate(System.String)
  commentId: M:AngeliA.Util.GetFileModifyDate(System.String)
  id: GetFileModifyDate(System.String)
  parent: AngeliA.Util
  langs:
  - csharp
  - vb
  name: GetFileModifyDate(string)
  nameWithType: Util.GetFileModifyDate(string)
  fullName: AngeliA.Util.GetFileModifyDate(string)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/Util_File.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: GetFileModifyDate
    path: ../AngeliA Framework/src/Utility/Util_File.cs
    startLine: 337
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static long GetFileModifyDate(string path)
    parameters:
    - id: path
      type: System.String
    return:
      type: System.Int64
    content.vb: Public Shared Function GetFileModifyDate(path As String) As Long
  overload: AngeliA.Util.GetFileModifyDate*
  nameWithType.vb: Util.GetFileModifyDate(String)
  fullName.vb: AngeliA.Util.GetFileModifyDate(String)
  name.vb: GetFileModifyDate(String)
- uid: AngeliA.Util.GetFolderModifyDate(System.String)
  commentId: M:AngeliA.Util.GetFolderModifyDate(System.String)
  id: GetFolderModifyDate(System.String)
  parent: AngeliA.Util
  langs:
  - csharp
  - vb
  name: GetFolderModifyDate(string)
  nameWithType: Util.GetFolderModifyDate(string)
  fullName: AngeliA.Util.GetFolderModifyDate(string)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/Util_File.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: GetFolderModifyDate
    path: ../AngeliA Framework/src/Utility/Util_File.cs
    startLine: 343
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static long GetFolderModifyDate(string path)
    parameters:
    - id: path
      type: System.String
    return:
      type: System.Int64
    content.vb: Public Shared Function GetFolderModifyDate(path As String) As Long
  overload: AngeliA.Util.GetFolderModifyDate*
  nameWithType.vb: Util.GetFolderModifyDate(String)
  fullName.vb: AngeliA.Util.GetFolderModifyDate(String)
  name.vb: GetFolderModifyDate(String)
- uid: AngeliA.Util.SetFolderModifyDate(System.String,System.Int64)
  commentId: M:AngeliA.Util.SetFolderModifyDate(System.String,System.Int64)
  id: SetFolderModifyDate(System.String,System.Int64)
  parent: AngeliA.Util
  langs:
  - csharp
  - vb
  name: SetFolderModifyDate(string, long)
  nameWithType: Util.SetFolderModifyDate(string, long)
  fullName: AngeliA.Util.SetFolderModifyDate(string, long)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/Util_File.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: SetFolderModifyDate
    path: ../AngeliA Framework/src/Utility/Util_File.cs
    startLine: 349
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static void SetFolderModifyDate(string path, long fileTime)
    parameters:
    - id: path
      type: System.String
    - id: fileTime
      type: System.Int64
    content.vb: Public Shared Sub SetFolderModifyDate(path As String, fileTime As Long)
  overload: AngeliA.Util.SetFolderModifyDate*
  nameWithType.vb: Util.SetFolderModifyDate(String, Long)
  fullName.vb: AngeliA.Util.SetFolderModifyDate(String, Long)
  name.vb: SetFolderModifyDate(String, Long)
- uid: AngeliA.Util.GetFileCreationDate(System.String)
  commentId: M:AngeliA.Util.GetFileCreationDate(System.String)
  id: GetFileCreationDate(System.String)
  parent: AngeliA.Util
  langs:
  - csharp
  - vb
  name: GetFileCreationDate(string)
  nameWithType: Util.GetFileCreationDate(string)
  fullName: AngeliA.Util.GetFileCreationDate(string)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/Util_File.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: GetFileCreationDate
    path: ../AngeliA Framework/src/Utility/Util_File.cs
    startLine: 355
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static long GetFileCreationDate(string path)
    parameters:
    - id: path
      type: System.String
    return:
      type: System.Int64
    content.vb: Public Shared Function GetFileCreationDate(path As String) As Long
  overload: AngeliA.Util.GetFileCreationDate*
  nameWithType.vb: Util.GetFileCreationDate(String)
  fullName.vb: AngeliA.Util.GetFileCreationDate(String)
  name.vb: GetFileCreationDate(String)
- uid: AngeliA.Util.SetFileModifyDate(System.String,System.Int64)
  commentId: M:AngeliA.Util.SetFileModifyDate(System.String,System.Int64)
  id: SetFileModifyDate(System.String,System.Int64)
  parent: AngeliA.Util
  langs:
  - csharp
  - vb
  name: SetFileModifyDate(string, long)
  nameWithType: Util.SetFileModifyDate(string, long)
  fullName: AngeliA.Util.SetFileModifyDate(string, long)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/Util_File.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: SetFileModifyDate
    path: ../AngeliA Framework/src/Utility/Util_File.cs
    startLine: 361
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static void SetFileModifyDate(string path, long fileTime)
    parameters:
    - id: path
      type: System.String
    - id: fileTime
      type: System.Int64
    content.vb: Public Shared Sub SetFileModifyDate(path As String, fileTime As Long)
  overload: AngeliA.Util.SetFileModifyDate*
  nameWithType.vb: Util.SetFileModifyDate(String, Long)
  fullName.vb: AngeliA.Util.SetFileModifyDate(String, Long)
  name.vb: SetFileModifyDate(String, Long)
- uid: AngeliA.Util.ByteToCompressedFile(System.String,System.Byte[],System.Int32)
  commentId: M:AngeliA.Util.ByteToCompressedFile(System.String,System.Byte[],System.Int32)
  id: ByteToCompressedFile(System.String,System.Byte[],System.Int32)
  parent: AngeliA.Util
  langs:
  - csharp
  - vb
  name: ByteToCompressedFile(string, byte[], int)
  nameWithType: Util.ByteToCompressedFile(string, byte[], int)
  fullName: AngeliA.Util.ByteToCompressedFile(string, byte[], int)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/Util_File.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: ByteToCompressedFile
    path: ../AngeliA Framework/src/Utility/Util_File.cs
    startLine: 367
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static void ByteToCompressedFile(string path, byte[] rawBytes, int length = -1)
    parameters:
    - id: path
      type: System.String
    - id: rawBytes
      type: System.Byte[]
    - id: length
      type: System.Int32
    content.vb: Public Shared Sub ByteToCompressedFile(path As String, rawBytes As Byte(), length As Integer = -1)
  overload: AngeliA.Util.ByteToCompressedFile*
  nameWithType.vb: Util.ByteToCompressedFile(String, Byte(), Integer)
  fullName.vb: AngeliA.Util.ByteToCompressedFile(String, Byte(), Integer)
  name.vb: ByteToCompressedFile(String, Byte(), Integer)
- uid: AngeliA.Util.CompressedFileToByte(System.String,System.Int32@)
  commentId: M:AngeliA.Util.CompressedFileToByte(System.String,System.Int32@)
  id: CompressedFileToByte(System.String,System.Int32@)
  parent: AngeliA.Util
  langs:
  - csharp
  - vb
  name: CompressedFileToByte(string, out int)
  nameWithType: Util.CompressedFileToByte(string, out int)
  fullName: AngeliA.Util.CompressedFileToByte(string, out int)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/Util_File.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: CompressedFileToByte
    path: ../AngeliA Framework/src/Utility/Util_File.cs
    startLine: 375
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static byte[] CompressedFileToByte(string path, out int byteLength)
    parameters:
    - id: path
      type: System.String
    - id: byteLength
      type: System.Int32
    return:
      type: System.Byte[]
    content.vb: Public Shared Function CompressedFileToByte(path As String, byteLength As Integer) As Byte()
  overload: AngeliA.Util.CompressedFileToByte*
  nameWithType.vb: Util.CompressedFileToByte(String, Integer)
  fullName.vb: AngeliA.Util.CompressedFileToByte(String, Integer)
  name.vb: CompressedFileToByte(String, Integer)
- uid: AngeliA.Util.DecompressBytes(System.Byte[])
  commentId: M:AngeliA.Util.DecompressBytes(System.Byte[])
  id: DecompressBytes(System.Byte[])
  parent: AngeliA.Util
  langs:
  - csharp
  - vb
  name: DecompressBytes(byte[])
  nameWithType: Util.DecompressBytes(byte[])
  fullName: AngeliA.Util.DecompressBytes(byte[])
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/Util_File.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: DecompressBytes
    path: ../AngeliA Framework/src/Utility/Util_File.cs
    startLine: 387
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static byte[] DecompressBytes(byte[] compressedBytes)
    parameters:
    - id: compressedBytes
      type: System.Byte[]
    return:
      type: System.Byte[]
    content.vb: Public Shared Function DecompressBytes(compressedBytes As Byte()) As Byte()
  overload: AngeliA.Util.DecompressBytes*
  nameWithType.vb: Util.DecompressBytes(Byte())
  fullName.vb: AngeliA.Util.DecompressBytes(Byte())
  name.vb: DecompressBytes(Byte())
- uid: AngeliA.Util.IsExistingFileEmpty(System.String)
  commentId: M:AngeliA.Util.IsExistingFileEmpty(System.String)
  id: IsExistingFileEmpty(System.String)
  parent: AngeliA.Util
  langs:
  - csharp
  - vb
  name: IsExistingFileEmpty(string)
  nameWithType: Util.IsExistingFileEmpty(string)
  fullName: AngeliA.Util.IsExistingFileEmpty(string)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/Util_File.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: IsExistingFileEmpty
    path: ../AngeliA Framework/src/Utility/Util_File.cs
    startLine: 402
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static bool IsExistingFileEmpty(string path)
    parameters:
    - id: path
      type: System.String
    return:
      type: System.Boolean
    content.vb: Public Shared Function IsExistingFileEmpty(path As String) As Boolean
  overload: AngeliA.Util.IsExistingFileEmpty*
  nameWithType.vb: Util.IsExistingFileEmpty(String)
  fullName.vb: AngeliA.Util.IsExistingFileEmpty(String)
  name.vb: IsExistingFileEmpty(String)
- uid: AngeliA.Util.UpdateFile(System.String,System.String,System.Boolean)
  commentId: M:AngeliA.Util.UpdateFile(System.String,System.String,System.Boolean)
  id: UpdateFile(System.String,System.String,System.Boolean)
  parent: AngeliA.Util
  langs:
  - csharp
  - vb
  name: UpdateFile(string, string, bool)
  nameWithType: Util.UpdateFile(string, string, bool)
  fullName: AngeliA.Util.UpdateFile(string, string, bool)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/Util_File.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: UpdateFile
    path: ../AngeliA Framework/src/Utility/Util_File.cs
    startLine: 405
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static void UpdateFile(string source, string target, bool skipWhenTargetNotExists = false)
    parameters:
    - id: source
      type: System.String
    - id: target
      type: System.String
    - id: skipWhenTargetNotExists
      type: System.Boolean
    content.vb: Public Shared Sub UpdateFile(source As String, target As String, skipWhenTargetNotExists As Boolean = False)
  overload: AngeliA.Util.UpdateFile*
  nameWithType.vb: Util.UpdateFile(String, String, Boolean)
  fullName.vb: AngeliA.Util.UpdateFile(String, String, Boolean)
  name.vb: UpdateFile(String, String, Boolean)
- uid: AngeliA.Util.GreatestCommonFactor(System.Int32,System.Int32)
  commentId: M:AngeliA.Util.GreatestCommonFactor(System.Int32,System.Int32)
  id: GreatestCommonFactor(System.Int32,System.Int32)
  parent: AngeliA.Util
  langs:
  - csharp
  - vb
  name: GreatestCommonFactor(int, int)
  nameWithType: Util.GreatestCommonFactor(int, int)
  fullName: AngeliA.Util.GreatestCommonFactor(int, int)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/Util_Math.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: GreatestCommonFactor
    path: ../AngeliA Framework/src/Utility/Util_Math.cs
    startLine: 13
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static int GreatestCommonFactor(int a, int b)
    parameters:
    - id: a
      type: System.Int32
    - id: b
      type: System.Int32
    return:
      type: System.Int32
    content.vb: Public Shared Function GreatestCommonFactor(a As Integer, b As Integer) As Integer
  overload: AngeliA.Util.GreatestCommonFactor*
  nameWithType.vb: Util.GreatestCommonFactor(Integer, Integer)
  fullName.vb: AngeliA.Util.GreatestCommonFactor(Integer, Integer)
  name.vb: GreatestCommonFactor(Integer, Integer)
- uid: AngeliA.Util.LeastCommonMultiple(System.Int32,System.Int32)
  commentId: M:AngeliA.Util.LeastCommonMultiple(System.Int32,System.Int32)
  id: LeastCommonMultiple(System.Int32,System.Int32)
  parent: AngeliA.Util
  langs:
  - csharp
  - vb
  name: LeastCommonMultiple(int, int)
  nameWithType: Util.LeastCommonMultiple(int, int)
  fullName: AngeliA.Util.LeastCommonMultiple(int, int)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/Util_Math.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: LeastCommonMultiple
    path: ../AngeliA Framework/src/Utility/Util_Math.cs
    startLine: 23
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static int LeastCommonMultiple(int a, int b)
    parameters:
    - id: a
      type: System.Int32
    - id: b
      type: System.Int32
    return:
      type: System.Int32
    content.vb: Public Shared Function LeastCommonMultiple(a As Integer, b As Integer) As Integer
  overload: AngeliA.Util.LeastCommonMultiple*
  nameWithType.vb: Util.LeastCommonMultiple(Integer, Integer)
  fullName.vb: AngeliA.Util.LeastCommonMultiple(Integer, Integer)
  name.vb: LeastCommonMultiple(Integer, Integer)
- uid: AngeliA.Util.RotateAround(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  commentId: M:AngeliA.Util.RotateAround(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  id: RotateAround(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  parent: AngeliA.Util
  langs:
  - csharp
  - vb
  name: RotateAround(int, int, int, int, int)
  nameWithType: Util.RotateAround(int, int, int, int, int)
  fullName: AngeliA.Util.RotateAround(int, int, int, int, int)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/Util_Math.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: RotateAround
    path: ../AngeliA Framework/src/Utility/Util_Math.cs
    startLine: 26
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static Int2 RotateAround(int x, int y, int rotation, int originX, int originY)
    parameters:
    - id: x
      type: System.Int32
    - id: y
      type: System.Int32
    - id: rotation
      type: System.Int32
    - id: originX
      type: System.Int32
    - id: originY
      type: System.Int32
    return:
      type: AngeliA.Int2
    content.vb: Public Shared Function RotateAround(x As Integer, y As Integer, rotation As Integer, originX As Integer, originY As Integer) As Int2
  overload: AngeliA.Util.RotateAround*
  nameWithType.vb: Util.RotateAround(Integer, Integer, Integer, Integer, Integer)
  fullName.vb: AngeliA.Util.RotateAround(Integer, Integer, Integer, Integer, Integer)
  name.vb: RotateAround(Integer, Integer, Integer, Integer, Integer)
- uid: AngeliA.Util.IsPowerOfTwo(System.Int32)
  commentId: M:AngeliA.Util.IsPowerOfTwo(System.Int32)
  id: IsPowerOfTwo(System.Int32)
  parent: AngeliA.Util
  langs:
  - csharp
  - vb
  name: IsPowerOfTwo(int)
  nameWithType: Util.IsPowerOfTwo(int)
  fullName: AngeliA.Util.IsPowerOfTwo(int)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/Util_Math.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: IsPowerOfTwo
    path: ../AngeliA Framework/src/Utility/Util_Math.cs
    startLine: 32
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static bool IsPowerOfTwo(int x)
    parameters:
    - id: x
      type: System.Int32
    return:
      type: System.Boolean
    content.vb: Public Shared Function IsPowerOfTwo(x As Integer) As Boolean
  overload: AngeliA.Util.IsPowerOfTwo*
  nameWithType.vb: Util.IsPowerOfTwo(Integer)
  fullName.vb: AngeliA.Util.IsPowerOfTwo(Integer)
  name.vb: IsPowerOfTwo(Integer)
- uid: AngeliA.Util.SquareDistanceF(System.Single,System.Single,System.Single,System.Single)
  commentId: M:AngeliA.Util.SquareDistanceF(System.Single,System.Single,System.Single,System.Single)
  id: SquareDistanceF(System.Single,System.Single,System.Single,System.Single)
  parent: AngeliA.Util
  langs:
  - csharp
  - vb
  name: SquareDistanceF(float, float, float, float)
  nameWithType: Util.SquareDistanceF(float, float, float, float)
  fullName: AngeliA.Util.SquareDistanceF(float, float, float, float)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/Util_Math.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: SquareDistanceF
    path: ../AngeliA Framework/src/Utility/Util_Math.cs
    startLine: 36
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static float SquareDistanceF(float aX, float aY, float bX, float bY)
    parameters:
    - id: aX
      type: System.Single
    - id: aY
      type: System.Single
    - id: bX
      type: System.Single
    - id: bY
      type: System.Single
    return:
      type: System.Single
    content.vb: Public Shared Function SquareDistanceF(aX As Single, aY As Single, bX As Single, bY As Single) As Single
  overload: AngeliA.Util.SquareDistanceF*
  nameWithType.vb: Util.SquareDistanceF(Single, Single, Single, Single)
  fullName.vb: AngeliA.Util.SquareDistanceF(Single, Single, Single, Single)
  name.vb: SquareDistanceF(Single, Single, Single, Single)
- uid: AngeliA.Util.SquareDistance(AngeliA.Int2,AngeliA.Int2)
  commentId: M:AngeliA.Util.SquareDistance(AngeliA.Int2,AngeliA.Int2)
  id: SquareDistance(AngeliA.Int2,AngeliA.Int2)
  parent: AngeliA.Util
  langs:
  - csharp
  - vb
  name: SquareDistance(Int2, Int2)
  nameWithType: Util.SquareDistance(Int2, Int2)
  fullName: AngeliA.Util.SquareDistance(AngeliA.Int2, AngeliA.Int2)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/Util_Math.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: SquareDistance
    path: ../AngeliA Framework/src/Utility/Util_Math.cs
    startLine: 43
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static int SquareDistance(Int2 a, Int2 b)
    parameters:
    - id: a
      type: AngeliA.Int2
    - id: b
      type: AngeliA.Int2
    return:
      type: System.Int32
    content.vb: Public Shared Function SquareDistance(a As Int2, b As Int2) As Integer
  overload: AngeliA.Util.SquareDistance*
- uid: AngeliA.Util.SquareDistance(System.Int32,System.Int32,System.Int32,System.Int32)
  commentId: M:AngeliA.Util.SquareDistance(System.Int32,System.Int32,System.Int32,System.Int32)
  id: SquareDistance(System.Int32,System.Int32,System.Int32,System.Int32)
  parent: AngeliA.Util
  langs:
  - csharp
  - vb
  name: SquareDistance(int, int, int, int)
  nameWithType: Util.SquareDistance(int, int, int, int)
  fullName: AngeliA.Util.SquareDistance(int, int, int, int)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/Util_Math.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: SquareDistance
    path: ../AngeliA Framework/src/Utility/Util_Math.cs
    startLine: 50
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static int SquareDistance(int aX, int aY, int bX, int bY)
    parameters:
    - id: aX
      type: System.Int32
    - id: aY
      type: System.Int32
    - id: bX
      type: System.Int32
    - id: bY
      type: System.Int32
    return:
      type: System.Int32
    content.vb: Public Shared Function SquareDistance(aX As Integer, aY As Integer, bX As Integer, bY As Integer) As Integer
  overload: AngeliA.Util.SquareDistance*
  nameWithType.vb: Util.SquareDistance(Integer, Integer, Integer, Integer)
  fullName.vb: AngeliA.Util.SquareDistance(Integer, Integer, Integer, Integer)
  name.vb: SquareDistance(Integer, Integer, Integer, Integer)
- uid: AngeliA.Util.DistanceFloat(AngeliA.Float2,AngeliA.Float2)
  commentId: M:AngeliA.Util.DistanceFloat(AngeliA.Float2,AngeliA.Float2)
  id: DistanceFloat(AngeliA.Float2,AngeliA.Float2)
  parent: AngeliA.Util
  langs:
  - csharp
  - vb
  name: DistanceFloat(Float2, Float2)
  nameWithType: Util.DistanceFloat(Float2, Float2)
  fullName: AngeliA.Util.DistanceFloat(AngeliA.Float2, AngeliA.Float2)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/Util_Math.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: DistanceFloat
    path: ../AngeliA Framework/src/Utility/Util_Math.cs
    startLine: 58
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static float DistanceFloat(Float2 a, Float2 b)
    parameters:
    - id: a
      type: AngeliA.Float2
    - id: b
      type: AngeliA.Float2
    return:
      type: System.Single
    content.vb: Public Shared Function DistanceFloat(a As Float2, b As Float2) As Single
  overload: AngeliA.Util.DistanceFloat*
- uid: AngeliA.Util.DistanceFloat(System.Single,System.Single,System.Single,System.Single)
  commentId: M:AngeliA.Util.DistanceFloat(System.Single,System.Single,System.Single,System.Single)
  id: DistanceFloat(System.Single,System.Single,System.Single,System.Single)
  parent: AngeliA.Util
  langs:
  - csharp
  - vb
  name: DistanceFloat(float, float, float, float)
  nameWithType: Util.DistanceFloat(float, float, float, float)
  fullName: AngeliA.Util.DistanceFloat(float, float, float, float)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/Util_Math.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: DistanceFloat
    path: ../AngeliA Framework/src/Utility/Util_Math.cs
    startLine: 65
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static float DistanceFloat(float aX, float aY, float bX, float bY)
    parameters:
    - id: aX
      type: System.Single
    - id: aY
      type: System.Single
    - id: bX
      type: System.Single
    - id: bY
      type: System.Single
    return:
      type: System.Single
    content.vb: Public Shared Function DistanceFloat(aX As Single, aY As Single, bX As Single, bY As Single) As Single
  overload: AngeliA.Util.DistanceFloat*
  nameWithType.vb: Util.DistanceFloat(Single, Single, Single, Single)
  fullName.vb: AngeliA.Util.DistanceFloat(Single, Single, Single, Single)
  name.vb: DistanceFloat(Single, Single, Single, Single)
- uid: AngeliA.Util.DistanceInt(AngeliA.Int2,AngeliA.Int2)
  commentId: M:AngeliA.Util.DistanceInt(AngeliA.Int2,AngeliA.Int2)
  id: DistanceInt(AngeliA.Int2,AngeliA.Int2)
  parent: AngeliA.Util
  langs:
  - csharp
  - vb
  name: DistanceInt(Int2, Int2)
  nameWithType: Util.DistanceInt(Int2, Int2)
  fullName: AngeliA.Util.DistanceInt(AngeliA.Int2, AngeliA.Int2)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/Util_Math.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: DistanceInt
    path: ../AngeliA Framework/src/Utility/Util_Math.cs
    startLine: 73
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static int DistanceInt(Int2 a, Int2 b)
    parameters:
    - id: a
      type: AngeliA.Int2
    - id: b
      type: AngeliA.Int2
    return:
      type: System.Int32
    content.vb: Public Shared Function DistanceInt(a As Int2, b As Int2) As Integer
  overload: AngeliA.Util.DistanceInt*
- uid: AngeliA.Util.DistanceInt(System.Int32,System.Int32,System.Int32,System.Int32)
  commentId: M:AngeliA.Util.DistanceInt(System.Int32,System.Int32,System.Int32,System.Int32)
  id: DistanceInt(System.Int32,System.Int32,System.Int32,System.Int32)
  parent: AngeliA.Util
  langs:
  - csharp
  - vb
  name: DistanceInt(int, int, int, int)
  nameWithType: Util.DistanceInt(int, int, int, int)
  fullName: AngeliA.Util.DistanceInt(int, int, int, int)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/Util_Math.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: DistanceInt
    path: ../AngeliA Framework/src/Utility/Util_Math.cs
    startLine: 80
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static int DistanceInt(int aX, int aY, int bX, int bY)
    parameters:
    - id: aX
      type: System.Int32
    - id: aY
      type: System.Int32
    - id: bX
      type: System.Int32
    - id: bY
      type: System.Int32
    return:
      type: System.Int32
    content.vb: Public Shared Function DistanceInt(aX As Integer, aY As Integer, bX As Integer, bY As Integer) As Integer
  overload: AngeliA.Util.DistanceInt*
  nameWithType.vb: Util.DistanceInt(Integer, Integer, Integer, Integer)
  fullName.vb: AngeliA.Util.DistanceInt(Integer, Integer, Integer, Integer)
  name.vb: DistanceInt(Integer, Integer, Integer, Integer)
- uid: AngeliA.Util.BabylonianSqrt(System.Int32)
  commentId: M:AngeliA.Util.BabylonianSqrt(System.Int32)
  id: BabylonianSqrt(System.Int32)
  parent: AngeliA.Util
  langs:
  - csharp
  - vb
  name: BabylonianSqrt(int)
  nameWithType: Util.BabylonianSqrt(int)
  fullName: AngeliA.Util.BabylonianSqrt(int)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/Util_Math.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: BabylonianSqrt
    path: ../AngeliA Framework/src/Utility/Util_Math.cs
    startLine: 88
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static int BabylonianSqrt(int n)
    parameters:
    - id: n
      type: System.Int32
    return:
      type: System.Int32
    content.vb: Public Shared Function BabylonianSqrt(n As Integer) As Integer
  overload: AngeliA.Util.BabylonianSqrt*
  nameWithType.vb: Util.BabylonianSqrt(Integer)
  fullName.vb: AngeliA.Util.BabylonianSqrt(Integer)
  name.vb: BabylonianSqrt(Integer)
- uid: AngeliA.Util.PointInTriangle(AngeliA.Float2,AngeliA.Float2,AngeliA.Float2,AngeliA.Float2)
  commentId: M:AngeliA.Util.PointInTriangle(AngeliA.Float2,AngeliA.Float2,AngeliA.Float2,AngeliA.Float2)
  id: PointInTriangle(AngeliA.Float2,AngeliA.Float2,AngeliA.Float2,AngeliA.Float2)
  parent: AngeliA.Util
  langs:
  - csharp
  - vb
  name: PointInTriangle(Float2, Float2, Float2, Float2)
  nameWithType: Util.PointInTriangle(Float2, Float2, Float2, Float2)
  fullName: AngeliA.Util.PointInTriangle(AngeliA.Float2, AngeliA.Float2, AngeliA.Float2, AngeliA.Float2)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/Util_Math.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: PointInTriangle
    path: ../AngeliA Framework/src/Utility/Util_Math.cs
    startLine: 100
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static bool PointInTriangle(Float2 p, Float2 a, Float2 b, Float2 c)
    parameters:
    - id: p
      type: AngeliA.Float2
    - id: a
      type: AngeliA.Float2
    - id: b
      type: AngeliA.Float2
    - id: c
      type: AngeliA.Float2
    return:
      type: System.Boolean
    content.vb: Public Shared Function PointInTriangle(p As Float2, a As Float2, b As Float2, c As Float2) As Boolean
  overload: AngeliA.Util.PointInTriangle*
- uid: AngeliA.Util.PointInTriangle(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)
  commentId: M:AngeliA.Util.PointInTriangle(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)
  id: PointInTriangle(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)
  parent: AngeliA.Util
  langs:
  - csharp
  - vb
  name: PointInTriangle(float, float, float, float, float, float, float, float)
  nameWithType: Util.PointInTriangle(float, float, float, float, float, float, float, float)
  fullName: AngeliA.Util.PointInTriangle(float, float, float, float, float, float, float, float)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/Util_Math.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: PointInTriangle
    path: ../AngeliA Framework/src/Utility/Util_Math.cs
    startLine: 102
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static bool PointInTriangle(float px, float py, float p0x, float p0y, float p1x, float p1y, float p2x, float p2y)
    parameters:
    - id: px
      type: System.Single
    - id: py
      type: System.Single
    - id: p0x
      type: System.Single
    - id: p0y
      type: System.Single
    - id: p1x
      type: System.Single
    - id: p1y
      type: System.Single
    - id: p2x
      type: System.Single
    - id: p2y
      type: System.Single
    return:
      type: System.Boolean
    content.vb: Public Shared Function PointInTriangle(px As Single, py As Single, p0x As Single, p0y As Single, p1x As Single, p1y As Single, p2x As Single, p2y As Single) As Boolean
  overload: AngeliA.Util.PointInTriangle*
  nameWithType.vb: Util.PointInTriangle(Single, Single, Single, Single, Single, Single, Single, Single)
  fullName.vb: AngeliA.Util.PointInTriangle(Single, Single, Single, Single, Single, Single, Single, Single)
  name.vb: PointInTriangle(Single, Single, Single, Single, Single, Single, Single, Single)
- uid: AngeliA.Util.PointLine_Distance(AngeliA.Float2,AngeliA.Float2,AngeliA.Float2,AngeliA.Float2@)
  commentId: M:AngeliA.Util.PointLine_Distance(AngeliA.Float2,AngeliA.Float2,AngeliA.Float2,AngeliA.Float2@)
  id: PointLine_Distance(AngeliA.Float2,AngeliA.Float2,AngeliA.Float2,AngeliA.Float2@)
  parent: AngeliA.Util
  langs:
  - csharp
  - vb
  name: PointLine_Distance(Float2, Float2, Float2, out Float2)
  nameWithType: Util.PointLine_Distance(Float2, Float2, Float2, out Float2)
  fullName: AngeliA.Util.PointLine_Distance(AngeliA.Float2, AngeliA.Float2, AngeliA.Float2, out AngeliA.Float2)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/Util_Math.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: PointLine_Distance
    path: ../AngeliA Framework/src/Utility/Util_Math.cs
    startLine: 111
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static float PointLine_Distance(Float2 pt, Float2 p1, Float2 p2, out Float2 closest)
    parameters:
    - id: pt
      type: AngeliA.Float2
    - id: p1
      type: AngeliA.Float2
    - id: p2
      type: AngeliA.Float2
    - id: closest
      type: AngeliA.Float2
    return:
      type: System.Single
    content.vb: Public Shared Function PointLine_Distance(pt As Float2, p1 As Float2, p2 As Float2, closest As Float2) As Single
  overload: AngeliA.Util.PointLine_Distance*
  nameWithType.vb: Util.PointLine_Distance(Float2, Float2, Float2, Float2)
  fullName.vb: AngeliA.Util.PointLine_Distance(AngeliA.Float2, AngeliA.Float2, AngeliA.Float2, AngeliA.Float2)
  name.vb: PointLine_Distance(Float2, Float2, Float2, Float2)
- uid: AngeliA.Util.SegmentIntersect(AngeliA.Float2,AngeliA.Float2,AngeliA.Float2,AngeliA.Float2)
  commentId: M:AngeliA.Util.SegmentIntersect(AngeliA.Float2,AngeliA.Float2,AngeliA.Float2,AngeliA.Float2)
  id: SegmentIntersect(AngeliA.Float2,AngeliA.Float2,AngeliA.Float2,AngeliA.Float2)
  parent: AngeliA.Util
  langs:
  - csharp
  - vb
  name: SegmentIntersect(Float2, Float2, Float2, Float2)
  nameWithType: Util.SegmentIntersect(Float2, Float2, Float2, Float2)
  fullName: AngeliA.Util.SegmentIntersect(AngeliA.Float2, AngeliA.Float2, AngeliA.Float2, AngeliA.Float2)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/Util_Math.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: SegmentIntersect
    path: ../AngeliA Framework/src/Utility/Util_Math.cs
    startLine: 146
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static Float2? SegmentIntersect(Float2 a1, Float2 a2, Float2 b1, Float2 b2)
    parameters:
    - id: a1
      type: AngeliA.Float2
    - id: a2
      type: AngeliA.Float2
    - id: b1
      type: AngeliA.Float2
    - id: b2
      type: AngeliA.Float2
    return:
      type: System.Nullable{AngeliA.Float2}
    content.vb: Public Shared Function SegmentIntersect(a1 As Float2, a2 As Float2, b1 As Float2, b2 As Float2) As Float2?
  overload: AngeliA.Util.SegmentIntersect*
- uid: AngeliA.Util.SegmentRectIntersect(AngeliA.Float2,AngeliA.Float2,AngeliA.FRect)
  commentId: M:AngeliA.Util.SegmentRectIntersect(AngeliA.Float2,AngeliA.Float2,AngeliA.FRect)
  id: SegmentRectIntersect(AngeliA.Float2,AngeliA.Float2,AngeliA.FRect)
  parent: AngeliA.Util
  langs:
  - csharp
  - vb
  name: SegmentRectIntersect(Float2, Float2, FRect)
  nameWithType: Util.SegmentRectIntersect(Float2, Float2, FRect)
  fullName: AngeliA.Util.SegmentRectIntersect(AngeliA.Float2, AngeliA.Float2, AngeliA.FRect)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/Util_Math.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: SegmentRectIntersect
    path: ../AngeliA Framework/src/Utility/Util_Math.cs
    startLine: 170
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static (Float2? intersect0, Float2? intersect1) SegmentRectIntersect(Float2 a0, Float2 a1, FRect rect)
    parameters:
    - id: a0
      type: AngeliA.Float2
    - id: a1
      type: AngeliA.Float2
    - id: rect
      type: AngeliA.FRect
    return:
      type: System.ValueTuple{System.Nullable{AngeliA.Float2},System.Nullable{AngeliA.Float2}}
    content.vb: Public Shared Function SegmentRectIntersect(a0 As Float2, a1 As Float2, rect As FRect) As (intersect0 As Float2?, intersect1 As Float2?)
  overload: AngeliA.Util.SegmentRectIntersect*
- uid: AngeliA.Util.OverlapRectCircle(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  commentId: M:AngeliA.Util.OverlapRectCircle(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  id: OverlapRectCircle(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  parent: AngeliA.Util
  langs:
  - csharp
  - vb
  name: OverlapRectCircle(int, int, int, int, int, int, int)
  nameWithType: Util.OverlapRectCircle(int, int, int, int, int, int, int)
  fullName: AngeliA.Util.OverlapRectCircle(int, int, int, int, int, int, int)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/Util_Math.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: OverlapRectCircle
    path: ../AngeliA Framework/src/Utility/Util_Math.cs
    startLine: 214
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static bool OverlapRectCircle(int radius, int circleX, int circleY, int minX, int minY, int maxX, int maxY)
    parameters:
    - id: radius
      type: System.Int32
    - id: circleX
      type: System.Int32
    - id: circleY
      type: System.Int32
    - id: minX
      type: System.Int32
    - id: minY
      type: System.Int32
    - id: maxX
      type: System.Int32
    - id: maxY
      type: System.Int32
    return:
      type: System.Boolean
    content.vb: Public Shared Function OverlapRectCircle(radius As Integer, circleX As Integer, circleY As Integer, minX As Integer, minY As Integer, maxX As Integer, maxY As Integer) As Boolean
  overload: AngeliA.Util.OverlapRectCircle*
  nameWithType.vb: Util.OverlapRectCircle(Integer, Integer, Integer, Integer, Integer, Integer, Integer)
  fullName.vb: AngeliA.Util.OverlapRectCircle(Integer, Integer, Integer, Integer, Integer, Integer, Integer)
  name.vb: OverlapRectCircle(Integer, Integer, Integer, Integer, Integer, Integer, Integer)
- uid: AngeliA.Util.IntToColor(System.Int32)
  commentId: M:AngeliA.Util.IntToColor(System.Int32)
  id: IntToColor(System.Int32)
  parent: AngeliA.Util
  langs:
  - csharp
  - vb
  name: IntToColor(int)
  nameWithType: Util.IntToColor(int)
  fullName: AngeliA.Util.IntToColor(int)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/Util_Math.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: IntToColor
    path: ../AngeliA Framework/src/Utility/Util_Math.cs
    startLine: 221
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static Color32 IntToColor(int i)
    parameters:
    - id: i
      type: System.Int32
    return:
      type: AngeliA.Color32
    content.vb: Public Shared Function IntToColor(i As Integer) As Color32
  overload: AngeliA.Util.IntToColor*
  nameWithType.vb: Util.IntToColor(Integer)
  fullName.vb: AngeliA.Util.IntToColor(Integer)
  name.vb: IntToColor(Integer)
- uid: AngeliA.Util.ColorToInt(AngeliA.Color32)
  commentId: M:AngeliA.Util.ColorToInt(AngeliA.Color32)
  id: ColorToInt(AngeliA.Color32)
  parent: AngeliA.Util
  langs:
  - csharp
  - vb
  name: ColorToInt(Color32)
  nameWithType: Util.ColorToInt(Color32)
  fullName: AngeliA.Util.ColorToInt(AngeliA.Color32)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/Util_Math.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: ColorToInt
    path: ../AngeliA Framework/src/Utility/Util_Math.cs
    startLine: 224
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static int ColorToInt(Color32 color)
    parameters:
    - id: color
      type: AngeliA.Color32
    return:
      type: System.Int32
    content.vb: Public Shared Function ColorToInt(color As Color32) As Integer
  overload: AngeliA.Util.ColorToInt*
- uid: AngeliA.Util.ColorToHtml(AngeliA.Color32,System.Boolean)
  commentId: M:AngeliA.Util.ColorToHtml(AngeliA.Color32,System.Boolean)
  id: ColorToHtml(AngeliA.Color32,System.Boolean)
  parent: AngeliA.Util
  langs:
  - csharp
  - vb
  name: ColorToHtml(Color32, bool)
  nameWithType: Util.ColorToHtml(Color32, bool)
  fullName: AngeliA.Util.ColorToHtml(AngeliA.Color32, bool)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/Util_Math.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: ColorToHtml
    path: ../AngeliA Framework/src/Utility/Util_Math.cs
    startLine: 228
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static string ColorToHtml(Color32 color, bool ignoreAlpha = false)
    parameters:
    - id: color
      type: AngeliA.Color32
    - id: ignoreAlpha
      type: System.Boolean
    return:
      type: System.String
    content.vb: Public Shared Function ColorToHtml(color As Color32, ignoreAlpha As Boolean = False) As String
  overload: AngeliA.Util.ColorToHtml*
  nameWithType.vb: Util.ColorToHtml(Color32, Boolean)
  fullName.vb: AngeliA.Util.ColorToHtml(AngeliA.Color32, Boolean)
  name.vb: ColorToHtml(Color32, Boolean)
- uid: AngeliA.Util.HtmlToColor(System.String,AngeliA.Color32@)
  commentId: M:AngeliA.Util.HtmlToColor(System.String,AngeliA.Color32@)
  id: HtmlToColor(System.String,AngeliA.Color32@)
  parent: AngeliA.Util
  langs:
  - csharp
  - vb
  name: HtmlToColor(string, out Color32)
  nameWithType: Util.HtmlToColor(string, out Color32)
  fullName: AngeliA.Util.HtmlToColor(string, out AngeliA.Color32)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/Util_Math.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: HtmlToColor
    path: ../AngeliA Framework/src/Utility/Util_Math.cs
    startLine: 229
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static bool HtmlToColor(string html, out Color32 color)
    parameters:
    - id: html
      type: System.String
    - id: color
      type: AngeliA.Color32
    return:
      type: System.Boolean
    content.vb: Public Shared Function HtmlToColor(html As String, color As Color32) As Boolean
  overload: AngeliA.Util.HtmlToColor*
  nameWithType.vb: Util.HtmlToColor(String, Color32)
  fullName.vb: AngeliA.Util.HtmlToColor(String, AngeliA.Color32)
  name.vb: HtmlToColor(String, Color32)
- uid: AngeliA.Util.TryCompute(System.String,System.Int32@)
  commentId: M:AngeliA.Util.TryCompute(System.String,System.Int32@)
  id: TryCompute(System.String,System.Int32@)
  parent: AngeliA.Util
  langs:
  - csharp
  - vb
  name: TryCompute(string, out int)
  nameWithType: Util.TryCompute(string, out int)
  fullName: AngeliA.Util.TryCompute(string, out int)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/Util_Math.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: TryCompute
    path: ../AngeliA Framework/src/Utility/Util_Math.cs
    startLine: 250
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static bool TryCompute(string expression, out int result)
    parameters:
    - id: expression
      type: System.String
    - id: result
      type: System.Int32
    return:
      type: System.Boolean
    content.vb: Public Shared Function TryCompute(expression As String, result As Integer) As Boolean
  overload: AngeliA.Util.TryCompute*
  nameWithType.vb: Util.TryCompute(String, Integer)
  fullName.vb: AngeliA.Util.TryCompute(String, Integer)
  name.vb: TryCompute(String, Integer)
- uid: AngeliA.Util.DrawLine_DDA(System.Int32,System.Int32,System.Int32,System.Int32)
  commentId: M:AngeliA.Util.DrawLine_DDA(System.Int32,System.Int32,System.Int32,System.Int32)
  id: DrawLine_DDA(System.Int32,System.Int32,System.Int32,System.Int32)
  parent: AngeliA.Util
  langs:
  - csharp
  - vb
  name: DrawLine_DDA(int, int, int, int)
  nameWithType: Util.DrawLine_DDA(int, int, int, int)
  fullName: AngeliA.Util.DrawLine_DDA(int, int, int, int)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/Util_Math.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: DrawLine_DDA
    path: ../AngeliA Framework/src/Utility/Util_Math.cs
    startLine: 262
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static IEnumerable<Int2> DrawLine_DDA(int x0, int y0, int x1, int y1)
    parameters:
    - id: x0
      type: System.Int32
    - id: y0
      type: System.Int32
    - id: x1
      type: System.Int32
    - id: y1
      type: System.Int32
    return:
      type: System.Collections.Generic.IEnumerable{AngeliA.Int2}
    content.vb: Public Shared Function DrawLine_DDA(x0 As Integer, y0 As Integer, x1 As Integer, y1 As Integer) As IEnumerable(Of Int2)
  overload: AngeliA.Util.DrawLine_DDA*
  nameWithType.vb: Util.DrawLine_DDA(Integer, Integer, Integer, Integer)
  fullName.vb: AngeliA.Util.DrawLine_DDA(Integer, Integer, Integer, Integer)
  name.vb: DrawLine_DDA(Integer, Integer, Integer, Integer)
- uid: AngeliA.Util.DrawLineWithRect_DDA(System.Int32,System.Int32,System.Int32,System.Int32)
  commentId: M:AngeliA.Util.DrawLineWithRect_DDA(System.Int32,System.Int32,System.Int32,System.Int32)
  id: DrawLineWithRect_DDA(System.Int32,System.Int32,System.Int32,System.Int32)
  parent: AngeliA.Util
  langs:
  - csharp
  - vb
  name: DrawLineWithRect_DDA(int, int, int, int)
  nameWithType: Util.DrawLineWithRect_DDA(int, int, int, int)
  fullName: AngeliA.Util.DrawLineWithRect_DDA(int, int, int, int)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/Util_Math.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: DrawLineWithRect_DDA
    path: ../AngeliA Framework/src/Utility/Util_Math.cs
    startLine: 295
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static IEnumerable<IRect> DrawLineWithRect_DDA(int x0, int y0, int x1, int y1)
    parameters:
    - id: x0
      type: System.Int32
    - id: y0
      type: System.Int32
    - id: x1
      type: System.Int32
    - id: y1
      type: System.Int32
    return:
      type: System.Collections.Generic.IEnumerable{AngeliA.IRect}
    content.vb: Public Shared Function DrawLineWithRect_DDA(x0 As Integer, y0 As Integer, x1 As Integer, y1 As Integer) As IEnumerable(Of IRect)
  overload: AngeliA.Util.DrawLineWithRect_DDA*
  nameWithType.vb: Util.DrawLineWithRect_DDA(Integer, Integer, Integer, Integer)
  fullName.vb: AngeliA.Util.DrawLineWithRect_DDA(Integer, Integer, Integer, Integer)
  name.vb: DrawLineWithRect_DDA(Integer, Integer, Integer, Integer)
- uid: AngeliA.Util.DrawFilledEllipse_Patrick(System.Int32,System.Int32,System.Int32,System.Int32)
  commentId: M:AngeliA.Util.DrawFilledEllipse_Patrick(System.Int32,System.Int32,System.Int32,System.Int32)
  id: DrawFilledEllipse_Patrick(System.Int32,System.Int32,System.Int32,System.Int32)
  parent: AngeliA.Util
  langs:
  - csharp
  - vb
  name: DrawFilledEllipse_Patrick(int, int, int, int)
  nameWithType: Util.DrawFilledEllipse_Patrick(int, int, int, int)
  fullName: AngeliA.Util.DrawFilledEllipse_Patrick(int, int, int, int)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/Util_Math.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: DrawFilledEllipse_Patrick
    path: ../AngeliA Framework/src/Utility/Util_Math.cs
    startLine: 327
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static IEnumerable<IRect> DrawFilledEllipse_Patrick(int left, int bottom, int width, int height)
    parameters:
    - id: left
      type: System.Int32
    - id: bottom
      type: System.Int32
    - id: width
      type: System.Int32
    - id: height
      type: System.Int32
    return:
      type: System.Collections.Generic.IEnumerable{AngeliA.IRect}
    content.vb: Public Shared Function DrawFilledEllipse_Patrick(left As Integer, bottom As Integer, width As Integer, height As Integer) As IEnumerable(Of IRect)
  overload: AngeliA.Util.DrawFilledEllipse_Patrick*
  nameWithType.vb: Util.DrawFilledEllipse_Patrick(Integer, Integer, Integer, Integer)
  fullName.vb: AngeliA.Util.DrawFilledEllipse_Patrick(Integer, Integer, Integer, Integer)
  name.vb: DrawFilledEllipse_Patrick(Integer, Integer, Integer, Integer)
- uid: AngeliA.Util.DrawHoloEllipse_Patrick(System.Int32,System.Int32,System.Int32,System.Int32)
  commentId: M:AngeliA.Util.DrawHoloEllipse_Patrick(System.Int32,System.Int32,System.Int32,System.Int32)
  id: DrawHoloEllipse_Patrick(System.Int32,System.Int32,System.Int32,System.Int32)
  parent: AngeliA.Util
  langs:
  - csharp
  - vb
  name: DrawHoloEllipse_Patrick(int, int, int, int)
  nameWithType: Util.DrawHoloEllipse_Patrick(int, int, int, int)
  fullName: AngeliA.Util.DrawHoloEllipse_Patrick(int, int, int, int)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/Util_Math.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: DrawHoloEllipse_Patrick
    path: ../AngeliA Framework/src/Utility/Util_Math.cs
    startLine: 432
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static IEnumerable<Int2> DrawHoloEllipse_Patrick(int left, int bottom, int width, int height)
    parameters:
    - id: left
      type: System.Int32
    - id: bottom
      type: System.Int32
    - id: width
      type: System.Int32
    - id: height
      type: System.Int32
    return:
      type: System.Collections.Generic.IEnumerable{AngeliA.Int2}
    content.vb: Public Shared Function DrawHoloEllipse_Patrick(left As Integer, bottom As Integer, width As Integer, height As Integer) As IEnumerable(Of Int2)
  overload: AngeliA.Util.DrawHoloEllipse_Patrick*
  nameWithType.vb: Util.DrawHoloEllipse_Patrick(Integer, Integer, Integer, Integer)
  fullName.vb: AngeliA.Util.DrawHoloEllipse_Patrick(Integer, Integer, Integer, Integer)
  name.vb: DrawHoloEllipse_Patrick(Integer, Integer, Integer, Integer)
- uid: AngeliA.Util.Rad2Deg
  commentId: F:AngeliA.Util.Rad2Deg
  id: Rad2Deg
  parent: AngeliA.Util
  langs:
  - csharp
  - vb
  name: Rad2Deg
  nameWithType: Util.Rad2Deg
  fullName: AngeliA.Util.Rad2Deg
  type: Field
  source:
    remote:
      path: AngeliA Framework/src/Utility/Util_Misc.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: Rad2Deg
    path: ../AngeliA Framework/src/Utility/Util_Misc.cs
    startLine: 22
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public const float Rad2Deg = 57.29578
    return:
      type: System.Single
    content.vb: Public Const Rad2Deg As Single = 57.29578
- uid: AngeliA.Util.Deg2Rad
  commentId: F:AngeliA.Util.Deg2Rad
  id: Deg2Rad
  parent: AngeliA.Util
  langs:
  - csharp
  - vb
  name: Deg2Rad
  nameWithType: Util.Deg2Rad
  fullName: AngeliA.Util.Deg2Rad
  type: Field
  source:
    remote:
      path: AngeliA Framework/src/Utility/Util_Misc.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: Deg2Rad
    path: ../AngeliA Framework/src/Utility/Util_Misc.cs
    startLine: 23
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public const float Deg2Rad = 0.017453292
    return:
      type: System.Single
    content.vb: Public Const Deg2Rad As Single = 0.017453292
- uid: AngeliA.Util.PI
  commentId: F:AngeliA.Util.PI
  id: PI
  parent: AngeliA.Util
  langs:
  - csharp
  - vb
  name: PI
  nameWithType: Util.PI
  fullName: AngeliA.Util.PI
  type: Field
  source:
    remote:
      path: AngeliA Framework/src/Utility/Util_Misc.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: PI
    path: ../AngeliA Framework/src/Utility/Util_Misc.cs
    startLine: 24
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public const float PI = 3.1415927
    return:
      type: System.Single
    content.vb: Public Const PI As Single = 3.1415927
- uid: AngeliA.Util.Epsilon
  commentId: F:AngeliA.Util.Epsilon
  id: Epsilon
  parent: AngeliA.Util
  langs:
  - csharp
  - vb
  name: Epsilon
  nameWithType: Util.Epsilon
  fullName: AngeliA.Util.Epsilon
  type: Field
  source:
    remote:
      path: AngeliA Framework/src/Utility/Util_Misc.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: Epsilon
    path: ../AngeliA Framework/src/Utility/Util_Misc.cs
    startLine: 25
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static readonly float Epsilon
    return:
      type: System.Single
    content.vb: Public Shared ReadOnly Epsilon As Single
- uid: AngeliA.Util.TryGetLanguageDisplayName(System.String,System.String@)
  commentId: M:AngeliA.Util.TryGetLanguageDisplayName(System.String,System.String@)
  id: TryGetLanguageDisplayName(System.String,System.String@)
  parent: AngeliA.Util
  langs:
  - csharp
  - vb
  name: TryGetLanguageDisplayName(string, out string)
  nameWithType: Util.TryGetLanguageDisplayName(string, out string)
  fullName: AngeliA.Util.TryGetLanguageDisplayName(string, out string)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/Util_Misc.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: TryGetLanguageDisplayName
    path: ../AngeliA Framework/src/Utility/Util_Misc.cs
    startLine: 62
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static bool TryGetLanguageDisplayName(string iso, out string displayName)
    parameters:
    - id: iso
      type: System.String
    - id: displayName
      type: System.String
    return:
      type: System.Boolean
    content.vb: Public Shared Function TryGetLanguageDisplayName(iso As String, displayName As String) As Boolean
  overload: AngeliA.Util.TryGetLanguageDisplayName*
  nameWithType.vb: Util.TryGetLanguageDisplayName(String, String)
  fullName.vb: AngeliA.Util.TryGetLanguageDisplayName(String, String)
  name.vb: TryGetLanguageDisplayName(String, String)
- uid: AngeliA.Util.GetLanguageDisplayNameInEnglish(System.String)
  commentId: M:AngeliA.Util.GetLanguageDisplayNameInEnglish(System.String)
  id: GetLanguageDisplayNameInEnglish(System.String)
  parent: AngeliA.Util
  langs:
  - csharp
  - vb
  name: GetLanguageDisplayNameInEnglish(string)
  nameWithType: Util.GetLanguageDisplayNameInEnglish(string)
  fullName: AngeliA.Util.GetLanguageDisplayNameInEnglish(string)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/Util_Misc.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: GetLanguageDisplayNameInEnglish
    path: ../AngeliA Framework/src/Utility/Util_Misc.cs
    startLine: 63
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static string GetLanguageDisplayNameInEnglish(string iso)
    parameters:
    - id: iso
      type: System.String
    return:
      type: System.String
    content.vb: Public Shared Function GetLanguageDisplayNameInEnglish(iso As String) As String
  overload: AngeliA.Util.GetLanguageDisplayNameInEnglish*
  nameWithType.vb: Util.GetLanguageDisplayNameInEnglish(String)
  fullName.vb: AngeliA.Util.GetLanguageDisplayNameInEnglish(String)
  name.vb: GetLanguageDisplayNameInEnglish(String)
- uid: AngeliA.Util.GetLanguageDisplayName(System.String)
  commentId: M:AngeliA.Util.GetLanguageDisplayName(System.String)
  id: GetLanguageDisplayName(System.String)
  parent: AngeliA.Util
  langs:
  - csharp
  - vb
  name: GetLanguageDisplayName(string)
  nameWithType: Util.GetLanguageDisplayName(string)
  fullName: AngeliA.Util.GetLanguageDisplayName(string)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/Util_Misc.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: GetLanguageDisplayName
    path: ../AngeliA Framework/src/Utility/Util_Misc.cs
    startLine: 64
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static string GetLanguageDisplayName(string iso)
    parameters:
    - id: iso
      type: System.String
    return:
      type: System.String
    content.vb: Public Shared Function GetLanguageDisplayName(iso As String) As String
  overload: AngeliA.Util.GetLanguageDisplayName*
  nameWithType.vb: Util.GetLanguageDisplayName(String)
  fullName.vb: AngeliA.Util.GetLanguageDisplayName(String)
  name.vb: GetLanguageDisplayName(String)
- uid: AngeliA.Util.IsSupportedLanguageISO(System.String)
  commentId: M:AngeliA.Util.IsSupportedLanguageISO(System.String)
  id: IsSupportedLanguageISO(System.String)
  parent: AngeliA.Util
  langs:
  - csharp
  - vb
  name: IsSupportedLanguageISO(string)
  nameWithType: Util.IsSupportedLanguageISO(string)
  fullName: AngeliA.Util.IsSupportedLanguageISO(string)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/Util_Misc.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: IsSupportedLanguageISO
    path: ../AngeliA Framework/src/Utility/Util_Misc.cs
    startLine: 65
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static bool IsSupportedLanguageISO(string iso)
    parameters:
    - id: iso
      type: System.String
    return:
      type: System.Boolean
    content.vb: Public Shared Function IsSupportedLanguageISO(iso As String) As Boolean
  overload: AngeliA.Util.IsSupportedLanguageISO*
  nameWithType.vb: Util.IsSupportedLanguageISO(String)
  fullName.vb: AngeliA.Util.IsSupportedLanguageISO(String)
  name.vb: IsSupportedLanguageISO(String)
- uid: AngeliA.Util.ForAllSystemLanguages
  commentId: M:AngeliA.Util.ForAllSystemLanguages
  id: ForAllSystemLanguages
  parent: AngeliA.Util
  langs:
  - csharp
  - vb
  name: ForAllSystemLanguages()
  nameWithType: Util.ForAllSystemLanguages()
  fullName: AngeliA.Util.ForAllSystemLanguages()
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/Util_Misc.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: ForAllSystemLanguages
    path: ../AngeliA Framework/src/Utility/Util_Misc.cs
    startLine: 66
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static IEnumerable<string> ForAllSystemLanguages()
    return:
      type: System.Collections.Generic.IEnumerable{System.String}
    content.vb: Public Shared Function ForAllSystemLanguages() As IEnumerable(Of String)
  overload: AngeliA.Util.ForAllSystemLanguages*
- uid: AngeliA.Util.GetKeyDisplayName(AngeliA.KeyboardKey)
  commentId: M:AngeliA.Util.GetKeyDisplayName(AngeliA.KeyboardKey)
  id: GetKeyDisplayName(AngeliA.KeyboardKey)
  parent: AngeliA.Util
  langs:
  - csharp
  - vb
  name: GetKeyDisplayName(KeyboardKey)
  nameWithType: Util.GetKeyDisplayName(KeyboardKey)
  fullName: AngeliA.Util.GetKeyDisplayName(AngeliA.KeyboardKey)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/Util_Misc.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: GetKeyDisplayName
    path: ../AngeliA Framework/src/Utility/Util_Misc.cs
    startLine: 71
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static string GetKeyDisplayName(KeyboardKey key)
    parameters:
    - id: key
      type: AngeliA.KeyboardKey
    return:
      type: System.String
    content.vb: Public Shared Function GetKeyDisplayName(key As KeyboardKey) As String
  overload: AngeliA.Util.GetKeyDisplayName*
- uid: AngeliA.Util.GetAngeHashForClassName(System.String)
  commentId: M:AngeliA.Util.GetAngeHashForClassName(System.String)
  id: GetAngeHashForClassName(System.String)
  parent: AngeliA.Util
  langs:
  - csharp
  - vb
  name: GetAngeHashForClassName(string)
  nameWithType: Util.GetAngeHashForClassName(string)
  fullName: AngeliA.Util.GetAngeHashForClassName(string)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/Util_Misc.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: GetAngeHashForClassName
    path: ../AngeliA Framework/src/Utility/Util_Misc.cs
    startLine: 75
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static int GetAngeHashForClassName(string className)
    parameters:
    - id: className
      type: System.String
    return:
      type: System.Int32
    content.vb: Public Shared Function GetAngeHashForClassName(className As String) As Integer
  overload: AngeliA.Util.GetAngeHashForClassName*
  nameWithType.vb: Util.GetAngeHashForClassName(String)
  fullName.vb: AngeliA.Util.GetAngeHashForClassName(String)
  name.vb: GetAngeHashForClassName(String)
- uid: AngeliA.Util.AddEnvironmentVariable(System.String,System.String)
  commentId: M:AngeliA.Util.AddEnvironmentVariable(System.String,System.String)
  id: AddEnvironmentVariable(System.String,System.String)
  parent: AngeliA.Util
  langs:
  - csharp
  - vb
  name: AddEnvironmentVariable(string, string)
  nameWithType: Util.AddEnvironmentVariable(string, string)
  fullName: AngeliA.Util.AddEnvironmentVariable(string, string)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/Util_Misc.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: AddEnvironmentVariable
    path: ../AngeliA Framework/src/Utility/Util_Misc.cs
    startLine: 82
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static void AddEnvironmentVariable(string key, string value)
    parameters:
    - id: key
      type: System.String
    - id: value
      type: System.String
    content.vb: Public Shared Sub AddEnvironmentVariable(key As String, value As String)
  overload: AngeliA.Util.AddEnvironmentVariable*
  nameWithType.vb: Util.AddEnvironmentVariable(String, String)
  fullName.vb: AngeliA.Util.AddEnvironmentVariable(String, String)
  name.vb: AddEnvironmentVariable(String, String)
- uid: AngeliA.Util.GetDisplayName(System.String)
  commentId: M:AngeliA.Util.GetDisplayName(System.String)
  id: GetDisplayName(System.String)
  parent: AngeliA.Util
  langs:
  - csharp
  - vb
  name: GetDisplayName(string)
  nameWithType: Util.GetDisplayName(string)
  fullName: AngeliA.Util.GetDisplayName(string)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/Util_Misc.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: GetDisplayName
    path: ../AngeliA Framework/src/Utility/Util_Misc.cs
    startLine: 92
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static string GetDisplayName(string name)
    parameters:
    - id: name
      type: System.String
    return:
      type: System.String
    content.vb: Public Shared Function GetDisplayName(name As String) As String
  overload: AngeliA.Util.GetDisplayName*
  nameWithType.vb: Util.GetDisplayName(String)
  fullName.vb: AngeliA.Util.GetDisplayName(String)
  name.vb: GetDisplayName(String)
- uid: AngeliA.Util.TryGetIntFromString(System.String,System.Int32,System.Int32@,System.Int32@)
  commentId: M:AngeliA.Util.TryGetIntFromString(System.String,System.Int32,System.Int32@,System.Int32@)
  id: TryGetIntFromString(System.String,System.Int32,System.Int32@,System.Int32@)
  parent: AngeliA.Util
  langs:
  - csharp
  - vb
  name: TryGetIntFromString(string, int, out int, out int)
  nameWithType: Util.TryGetIntFromString(string, int, out int, out int)
  fullName: AngeliA.Util.TryGetIntFromString(string, int, out int, out int)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/Util_Misc.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: TryGetIntFromString
    path: ../AngeliA Framework/src/Utility/Util_Misc.cs
    startLine: 121
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static bool TryGetIntFromString(string str, int startIndex, out int value, out int endIndex)
    parameters:
    - id: str
      type: System.String
    - id: startIndex
      type: System.Int32
    - id: value
      type: System.Int32
    - id: endIndex
      type: System.Int32
    return:
      type: System.Boolean
    content.vb: Public Shared Function TryGetIntFromString(str As String, startIndex As Integer, value As Integer, endIndex As Integer) As Boolean
  overload: AngeliA.Util.TryGetIntFromString*
  nameWithType.vb: Util.TryGetIntFromString(String, Integer, Integer, Integer)
  fullName.vb: AngeliA.Util.TryGetIntFromString(String, Integer, Integer, Integer)
  name.vb: TryGetIntFromString(String, Integer, Integer, Integer)
- uid: AngeliA.Util.QuickSort``1(``0[],System.Int32,System.Int32,System.Collections.Generic.IComparer{``0})
  commentId: M:AngeliA.Util.QuickSort``1(``0[],System.Int32,System.Int32,System.Collections.Generic.IComparer{``0})
  id: QuickSort``1(``0[],System.Int32,System.Int32,System.Collections.Generic.IComparer{``0})
  parent: AngeliA.Util
  langs:
  - csharp
  - vb
  name: QuickSort<T>(T[], int, int, IComparer<T>)
  nameWithType: Util.QuickSort<T>(T[], int, int, IComparer<T>)
  fullName: AngeliA.Util.QuickSort<T>(T[], int, int, System.Collections.Generic.IComparer<T>)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/Util_Misc.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: QuickSort
    path: ../AngeliA Framework/src/Utility/Util_Misc.cs
    startLine: 132
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static void QuickSort<T>(T[] cells, int min, int max, IComparer<T> comparer)
    parameters:
    - id: cells
      type: '{T}[]'
    - id: min
      type: System.Int32
    - id: max
      type: System.Int32
    - id: comparer
      type: System.Collections.Generic.IComparer{{T}}
    typeParameters:
    - id: T
    content.vb: Public Shared Sub QuickSort(Of T)(cells As T(), min As Integer, max As Integer, comparer As IComparer(Of T))
  overload: AngeliA.Util.QuickSort*
  nameWithType.vb: Util.QuickSort(Of T)(T(), Integer, Integer, IComparer(Of T))
  fullName.vb: AngeliA.Util.QuickSort(Of T)(T(), Integer, Integer, System.Collections.Generic.IComparer(Of T))
  name.vb: QuickSort(Of T)(T(), Integer, Integer, IComparer(Of T))
- uid: AngeliA.Util.QuickSort``1(System.Span{``0},System.Int32,System.Int32,System.Collections.Generic.IComparer{``0})
  commentId: M:AngeliA.Util.QuickSort``1(System.Span{``0},System.Int32,System.Int32,System.Collections.Generic.IComparer{``0})
  id: QuickSort``1(System.Span{``0},System.Int32,System.Int32,System.Collections.Generic.IComparer{``0})
  parent: AngeliA.Util
  langs:
  - csharp
  - vb
  name: QuickSort<T>(Span<T>, int, int, IComparer<T>)
  nameWithType: Util.QuickSort<T>(Span<T>, int, int, IComparer<T>)
  fullName: AngeliA.Util.QuickSort<T>(System.Span<T>, int, int, System.Collections.Generic.IComparer<T>)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/Util_Misc.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: QuickSort
    path: ../AngeliA Framework/src/Utility/Util_Misc.cs
    startLine: 149
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static void QuickSort<T>(Span<T> cells, int min, int max, IComparer<T> comparer)
    parameters:
    - id: cells
      type: System.Span{{T}}
    - id: min
      type: System.Int32
    - id: max
      type: System.Int32
    - id: comparer
      type: System.Collections.Generic.IComparer{{T}}
    typeParameters:
    - id: T
    content.vb: Public Shared Sub QuickSort(Of T)(cells As Span(Of T), min As Integer, max As Integer, comparer As IComparer(Of T))
  overload: AngeliA.Util.QuickSort*
  nameWithType.vb: Util.QuickSort(Of T)(Span(Of T), Integer, Integer, IComparer(Of T))
  fullName.vb: AngeliA.Util.QuickSort(Of T)(System.Span(Of T), Integer, Integer, System.Collections.Generic.IComparer(Of T))
  name.vb: QuickSort(Of T)(Span(Of T), Integer, Integer, IComparer(Of T))
- uid: AngeliA.Util.QuickRandomColor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  commentId: M:AngeliA.Util.QuickRandomColor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  id: QuickRandomColor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  parent: AngeliA.Util
  langs:
  - csharp
  - vb
  name: QuickRandomColor(int, int, int, int, int, int, int, int)
  nameWithType: Util.QuickRandomColor(int, int, int, int, int, int, int, int)
  fullName: AngeliA.Util.QuickRandomColor(int, int, int, int, int, int, int, int)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/Util_Misc.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: QuickRandomColor
    path: ../AngeliA Framework/src/Utility/Util_Misc.cs
    startLine: 166
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static Color32 QuickRandomColor(int minH = 0, int maxH = 360, int minS = 0, int maxS = 100, int minV = 0, int maxV = 100, int minA = 0, int maxA = 255)
    parameters:
    - id: minH
      type: System.Int32
    - id: maxH
      type: System.Int32
    - id: minS
      type: System.Int32
    - id: maxS
      type: System.Int32
    - id: minV
      type: System.Int32
    - id: maxV
      type: System.Int32
    - id: minA
      type: System.Int32
    - id: maxA
      type: System.Int32
    return:
      type: AngeliA.Color32
    content.vb: Public Shared Function QuickRandomColor(minH As Integer = 0, maxH As Integer = 360, minS As Integer = 0, maxS As Integer = 100, minV As Integer = 0, maxV As Integer = 100, minA As Integer = 0, maxA As Integer = 255) As Color32
  overload: AngeliA.Util.QuickRandomColor*
  nameWithType.vb: Util.QuickRandomColor(Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer)
  fullName.vb: AngeliA.Util.QuickRandomColor(Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer)
  name.vb: QuickRandomColor(Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer)
- uid: AngeliA.Util.QuickRandom(System.Int32,System.Int32)
  commentId: M:AngeliA.Util.QuickRandom(System.Int32,System.Int32)
  id: QuickRandom(System.Int32,System.Int32)
  parent: AngeliA.Util
  langs:
  - csharp
  - vb
  name: QuickRandom(int, int)
  nameWithType: Util.QuickRandom(int, int)
  fullName: AngeliA.Util.QuickRandom(int, int)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/Util_Misc.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: QuickRandom
    path: ../AngeliA Framework/src/Utility/Util_Misc.cs
    startLine: 179
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: "\"min\" is Included, \"max\" is Excluded"
  example: []
  syntax:
    content: public static int QuickRandom(int min, int max)
    parameters:
    - id: min
      type: System.Int32
    - id: max
      type: System.Int32
    return:
      type: System.Int32
    content.vb: Public Shared Function QuickRandom(min As Integer, max As Integer) As Integer
  overload: AngeliA.Util.QuickRandom*
  nameWithType.vb: Util.QuickRandom(Integer, Integer)
  fullName.vb: AngeliA.Util.QuickRandom(Integer, Integer)
  name.vb: QuickRandom(Integer, Integer)
- uid: AngeliA.Util.QuickRandom
  commentId: M:AngeliA.Util.QuickRandom
  id: QuickRandom
  parent: AngeliA.Util
  langs:
  - csharp
  - vb
  name: QuickRandom()
  nameWithType: Util.QuickRandom()
  fullName: AngeliA.Util.QuickRandom()
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/Util_Misc.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: QuickRandom
    path: ../AngeliA Framework/src/Utility/Util_Misc.cs
    startLine: 180
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static int QuickRandom()
    return:
      type: System.Int32
    content.vb: Public Shared Function QuickRandom() As Integer
  overload: AngeliA.Util.QuickRandom*
- uid: AngeliA.Util.QuickRandomSign
  commentId: M:AngeliA.Util.QuickRandomSign
  id: QuickRandomSign
  parent: AngeliA.Util
  langs:
  - csharp
  - vb
  name: QuickRandomSign()
  nameWithType: Util.QuickRandomSign()
  fullName: AngeliA.Util.QuickRandomSign()
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/Util_Misc.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: QuickRandomSign
    path: ../AngeliA Framework/src/Utility/Util_Misc.cs
    startLine: 181
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static int QuickRandomSign()
    return:
      type: System.Int32
    content.vb: Public Shared Function QuickRandomSign() As Integer
  overload: AngeliA.Util.QuickRandomSign*
- uid: AngeliA.Util.QuickRandomWithSeed(System.Int32,System.Int32,System.Int32)
  commentId: M:AngeliA.Util.QuickRandomWithSeed(System.Int32,System.Int32,System.Int32)
  id: QuickRandomWithSeed(System.Int32,System.Int32,System.Int32)
  parent: AngeliA.Util
  langs:
  - csharp
  - vb
  name: QuickRandomWithSeed(int, int, int)
  nameWithType: Util.QuickRandomWithSeed(int, int, int)
  fullName: AngeliA.Util.QuickRandomWithSeed(int, int, int)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/Util_Misc.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: QuickRandomWithSeed
    path: ../AngeliA Framework/src/Utility/Util_Misc.cs
    startLine: 185
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: "\"min\" is Included, \"max\" is Excluded"
  example: []
  syntax:
    content: public static int QuickRandomWithSeed(int seed, int min, int max)
    parameters:
    - id: seed
      type: System.Int32
    - id: min
      type: System.Int32
    - id: max
      type: System.Int32
    return:
      type: System.Int32
    content.vb: Public Shared Function QuickRandomWithSeed(seed As Integer, min As Integer, max As Integer) As Integer
  overload: AngeliA.Util.QuickRandomWithSeed*
  nameWithType.vb: Util.QuickRandomWithSeed(Integer, Integer, Integer)
  fullName.vb: AngeliA.Util.QuickRandomWithSeed(Integer, Integer, Integer)
  name.vb: QuickRandomWithSeed(Integer, Integer, Integer)
- uid: AngeliA.Util.QuickRandomWithSeed(System.Int32)
  commentId: M:AngeliA.Util.QuickRandomWithSeed(System.Int32)
  id: QuickRandomWithSeed(System.Int32)
  parent: AngeliA.Util
  langs:
  - csharp
  - vb
  name: QuickRandomWithSeed(int)
  nameWithType: Util.QuickRandomWithSeed(int)
  fullName: AngeliA.Util.QuickRandomWithSeed(int)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/Util_Misc.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: QuickRandomWithSeed
    path: ../AngeliA Framework/src/Utility/Util_Misc.cs
    startLine: 186
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static int QuickRandomWithSeed(int seed)
    parameters:
    - id: seed
      type: System.Int32
    return:
      type: System.Int32
    content.vb: Public Shared Function QuickRandomWithSeed(seed As Integer) As Integer
  overload: AngeliA.Util.QuickRandomWithSeed*
  nameWithType.vb: Util.QuickRandomWithSeed(Integer)
  fullName.vb: AngeliA.Util.QuickRandomWithSeed(Integer)
  name.vb: QuickRandomWithSeed(Integer)
- uid: AngeliA.Util.QuickRandomWithSeed(System.Int64,System.Int32,System.Int32)
  commentId: M:AngeliA.Util.QuickRandomWithSeed(System.Int64,System.Int32,System.Int32)
  id: QuickRandomWithSeed(System.Int64,System.Int32,System.Int32)
  parent: AngeliA.Util
  langs:
  - csharp
  - vb
  name: QuickRandomWithSeed(long, int, int)
  nameWithType: Util.QuickRandomWithSeed(long, int, int)
  fullName: AngeliA.Util.QuickRandomWithSeed(long, int, int)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/Util_Misc.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: QuickRandomWithSeed
    path: ../AngeliA Framework/src/Utility/Util_Misc.cs
    startLine: 196
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: "\"min\" is Included, \"max\" is Excluded"
  example: []
  syntax:
    content: public static int QuickRandomWithSeed(long seed, int min, int max)
    parameters:
    - id: seed
      type: System.Int64
    - id: min
      type: System.Int32
    - id: max
      type: System.Int32
    return:
      type: System.Int32
    content.vb: Public Shared Function QuickRandomWithSeed(seed As Long, min As Integer, max As Integer) As Integer
  overload: AngeliA.Util.QuickRandomWithSeed*
  nameWithType.vb: Util.QuickRandomWithSeed(Long, Integer, Integer)
  fullName.vb: AngeliA.Util.QuickRandomWithSeed(Long, Integer, Integer)
  name.vb: QuickRandomWithSeed(Long, Integer, Integer)
- uid: AngeliA.Util.QuickRandomWithSeed(System.Int64)
  commentId: M:AngeliA.Util.QuickRandomWithSeed(System.Int64)
  id: QuickRandomWithSeed(System.Int64)
  parent: AngeliA.Util
  langs:
  - csharp
  - vb
  name: QuickRandomWithSeed(long)
  nameWithType: Util.QuickRandomWithSeed(long)
  fullName: AngeliA.Util.QuickRandomWithSeed(long)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/Util_Misc.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: QuickRandomWithSeed
    path: ../AngeliA Framework/src/Utility/Util_Misc.cs
    startLine: 197
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static int QuickRandomWithSeed(long seed)
    parameters:
    - id: seed
      type: System.Int64
    return:
      type: System.Int32
    content.vb: Public Shared Function QuickRandomWithSeed(seed As Long) As Integer
  overload: AngeliA.Util.QuickRandomWithSeed*
  nameWithType.vb: Util.QuickRandomWithSeed(Long)
  fullName.vb: AngeliA.Util.QuickRandomWithSeed(Long)
  name.vb: QuickRandomWithSeed(Long)
- uid: AngeliA.Util.ExecuteCommand(System.String,System.String,System.Int32,System.Boolean)
  commentId: M:AngeliA.Util.ExecuteCommand(System.String,System.String,System.Int32,System.Boolean)
  id: ExecuteCommand(System.String,System.String,System.Int32,System.Boolean)
  parent: AngeliA.Util
  langs:
  - csharp
  - vb
  name: ExecuteCommand(string, string, int, bool)
  nameWithType: Util.ExecuteCommand(string, string, int, bool)
  fullName: AngeliA.Util.ExecuteCommand(string, string, int, bool)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/Util_Misc.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: ExecuteCommand
    path: ../AngeliA Framework/src/Utility/Util_Misc.cs
    startLine: 206
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static int ExecuteCommand(string workingDirectory, string arguments, int logID = -1, bool wait = true)
    parameters:
    - id: workingDirectory
      type: System.String
    - id: arguments
      type: System.String
    - id: logID
      type: System.Int32
    - id: wait
      type: System.Boolean
    return:
      type: System.Int32
    content.vb: Public Shared Function ExecuteCommand(workingDirectory As String, arguments As String, logID As Integer = -1, wait As Boolean = True) As Integer
  overload: AngeliA.Util.ExecuteCommand*
  nameWithType.vb: Util.ExecuteCommand(String, String, Integer, Boolean)
  fullName.vb: AngeliA.Util.ExecuteCommand(String, String, Integer, Boolean)
  name.vb: ExecuteCommand(String, String, Integer, Boolean)
- uid: AngeliA.Util.FindNextStringStep(System.String,System.Int32,System.Boolean)
  commentId: M:AngeliA.Util.FindNextStringStep(System.String,System.Int32,System.Boolean)
  id: FindNextStringStep(System.String,System.Int32,System.Boolean)
  parent: AngeliA.Util
  langs:
  - csharp
  - vb
  name: FindNextStringStep(string, int, bool)
  nameWithType: Util.FindNextStringStep(string, int, bool)
  fullName: AngeliA.Util.FindNextStringStep(string, int, bool)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/Util_Misc.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: FindNextStringStep
    path: ../AngeliA Framework/src/Utility/Util_Misc.cs
    startLine: 250
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static int FindNextStringStep(string content, int start, bool toRight)
    parameters:
    - id: content
      type: System.String
    - id: start
      type: System.Int32
    - id: toRight
      type: System.Boolean
    return:
      type: System.Int32
    content.vb: Public Shared Function FindNextStringStep(content As String, start As Integer, toRight As Boolean) As Integer
  overload: AngeliA.Util.FindNextStringStep*
  nameWithType.vb: Util.FindNextStringStep(String, Integer, Boolean)
  fullName.vb: AngeliA.Util.FindNextStringStep(String, Integer, Boolean)
  name.vb: FindNextStringStep(String, Integer, Boolean)
- uid: AngeliA.Util.GetTrimedPixels(AngeliA.Color32[],System.Int32,System.Int32,System.Int32@,System.Int32@,System.Int32@,System.Int32@)
  commentId: M:AngeliA.Util.GetTrimedPixels(AngeliA.Color32[],System.Int32,System.Int32,System.Int32@,System.Int32@,System.Int32@,System.Int32@)
  id: GetTrimedPixels(AngeliA.Color32[],System.Int32,System.Int32,System.Int32@,System.Int32@,System.Int32@,System.Int32@)
  parent: AngeliA.Util
  langs:
  - csharp
  - vb
  name: GetTrimedPixels(Color32[], int, int, out int, out int, out int, out int)
  nameWithType: Util.GetTrimedPixels(Color32[], int, int, out int, out int, out int, out int)
  fullName: AngeliA.Util.GetTrimedPixels(AngeliA.Color32[], int, int, out int, out int, out int, out int)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/Util_Misc.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: GetTrimedPixels
    path: ../AngeliA Framework/src/Utility/Util_Misc.cs
    startLine: 269
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static Color32[] GetTrimedPixels(Color32[] pixels, int width, int height, out int left, out int right, out int down, out int up)
    parameters:
    - id: pixels
      type: AngeliA.Color32[]
    - id: width
      type: System.Int32
    - id: height
      type: System.Int32
    - id: left
      type: System.Int32
    - id: right
      type: System.Int32
    - id: down
      type: System.Int32
    - id: up
      type: System.Int32
    return:
      type: AngeliA.Color32[]
    content.vb: Public Shared Function GetTrimedPixels(pixels As Color32(), width As Integer, height As Integer, left As Integer, right As Integer, down As Integer, up As Integer) As Color32()
  overload: AngeliA.Util.GetTrimedPixels*
  nameWithType.vb: Util.GetTrimedPixels(Color32(), Integer, Integer, Integer, Integer, Integer, Integer)
  fullName.vb: AngeliA.Util.GetTrimedPixels(AngeliA.Color32(), Integer, Integer, Integer, Integer, Integer, Integer)
  name.vb: GetTrimedPixels(Color32(), Integer, Integer, Integer, Integer, Integer, Integer)
- uid: AngeliA.Util.Vector3Lerp3(AngeliA.Float3,AngeliA.Float3,System.Single,System.Single,System.Single)
  commentId: M:AngeliA.Util.Vector3Lerp3(AngeliA.Float3,AngeliA.Float3,System.Single,System.Single,System.Single)
  id: Vector3Lerp3(AngeliA.Float3,AngeliA.Float3,System.Single,System.Single,System.Single)
  parent: AngeliA.Util
  langs:
  - csharp
  - vb
  name: Vector3Lerp3(Float3, Float3, float, float, float)
  nameWithType: Util.Vector3Lerp3(Float3, Float3, float, float, float)
  fullName: AngeliA.Util.Vector3Lerp3(AngeliA.Float3, AngeliA.Float3, float, float, float)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/Util_Misc.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: Vector3Lerp3
    path: ../AngeliA Framework/src/Utility/Util_Misc.cs
    startLine: 327
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static Float3 Vector3Lerp3(Float3 a, Float3 b, float x, float y, float z = 0)
    parameters:
    - id: a
      type: AngeliA.Float3
    - id: b
      type: AngeliA.Float3
    - id: x
      type: System.Single
    - id: y
      type: System.Single
    - id: z
      type: System.Single
    return:
      type: AngeliA.Float3
    content.vb: Public Shared Function Vector3Lerp3(a As Float3, b As Float3, x As Single, y As Single, z As Single = 0) As Float3
  overload: AngeliA.Util.Vector3Lerp3*
  nameWithType.vb: Util.Vector3Lerp3(Float3, Float3, Single, Single, Single)
  fullName.vb: AngeliA.Util.Vector3Lerp3(AngeliA.Float3, AngeliA.Float3, Single, Single, Single)
  name.vb: Vector3Lerp3(Float3, Float3, Single, Single, Single)
- uid: AngeliA.Util.Vector2Lerp2(AngeliA.Float2,AngeliA.Float2,System.Single,System.Single)
  commentId: M:AngeliA.Util.Vector2Lerp2(AngeliA.Float2,AngeliA.Float2,System.Single,System.Single)
  id: Vector2Lerp2(AngeliA.Float2,AngeliA.Float2,System.Single,System.Single)
  parent: AngeliA.Util
  langs:
  - csharp
  - vb
  name: Vector2Lerp2(Float2, Float2, float, float)
  nameWithType: Util.Vector2Lerp2(Float2, Float2, float, float)
  fullName: AngeliA.Util.Vector2Lerp2(AngeliA.Float2, AngeliA.Float2, float, float)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/Util_Misc.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: Vector2Lerp2
    path: ../AngeliA Framework/src/Utility/Util_Misc.cs
    startLine: 332
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static Float2 Vector2Lerp2(Float2 a, Float2 b, float x, float y)
    parameters:
    - id: a
      type: AngeliA.Float2
    - id: b
      type: AngeliA.Float2
    - id: x
      type: System.Single
    - id: y
      type: System.Single
    return:
      type: AngeliA.Float2
    content.vb: Public Shared Function Vector2Lerp2(a As Float2, b As Float2, x As Single, y As Single) As Float2
  overload: AngeliA.Util.Vector2Lerp2*
  nameWithType.vb: Util.Vector2Lerp2(Float2, Float2, Single, Single)
  fullName.vb: AngeliA.Util.Vector2Lerp2(AngeliA.Float2, AngeliA.Float2, Single, Single)
  name.vb: Vector2Lerp2(Float2, Float2, Single, Single)
- uid: AngeliA.Util.Vector3InverseLerp3(AngeliA.Float3,AngeliA.Float3,System.Single,System.Single,System.Single)
  commentId: M:AngeliA.Util.Vector3InverseLerp3(AngeliA.Float3,AngeliA.Float3,System.Single,System.Single,System.Single)
  id: Vector3InverseLerp3(AngeliA.Float3,AngeliA.Float3,System.Single,System.Single,System.Single)
  parent: AngeliA.Util
  langs:
  - csharp
  - vb
  name: Vector3InverseLerp3(Float3, Float3, float, float, float)
  nameWithType: Util.Vector3InverseLerp3(Float3, Float3, float, float, float)
  fullName: AngeliA.Util.Vector3InverseLerp3(AngeliA.Float3, AngeliA.Float3, float, float, float)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/Util_Misc.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: Vector3InverseLerp3
    path: ../AngeliA Framework/src/Utility/Util_Misc.cs
    startLine: 338
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static Float3 Vector3InverseLerp3(Float3 a, Float3 b, float x, float y, float z = 0)
    parameters:
    - id: a
      type: AngeliA.Float3
    - id: b
      type: AngeliA.Float3
    - id: x
      type: System.Single
    - id: y
      type: System.Single
    - id: z
      type: System.Single
    return:
      type: AngeliA.Float3
    content.vb: Public Shared Function Vector3InverseLerp3(a As Float3, b As Float3, x As Single, y As Single, z As Single = 0) As Float3
  overload: AngeliA.Util.Vector3InverseLerp3*
  nameWithType.vb: Util.Vector3InverseLerp3(Float3, Float3, Single, Single, Single)
  fullName.vb: AngeliA.Util.Vector3InverseLerp3(AngeliA.Float3, AngeliA.Float3, Single, Single, Single)
  name.vb: Vector3InverseLerp3(Float3, Float3, Single, Single, Single)
- uid: AngeliA.Util.Vector2InverseLerp2(AngeliA.Float2,AngeliA.Float2,System.Single,System.Single)
  commentId: M:AngeliA.Util.Vector2InverseLerp2(AngeliA.Float2,AngeliA.Float2,System.Single,System.Single)
  id: Vector2InverseLerp2(AngeliA.Float2,AngeliA.Float2,System.Single,System.Single)
  parent: AngeliA.Util
  langs:
  - csharp
  - vb
  name: Vector2InverseLerp2(Float2, Float2, float, float)
  nameWithType: Util.Vector2InverseLerp2(Float2, Float2, float, float)
  fullName: AngeliA.Util.Vector2InverseLerp2(AngeliA.Float2, AngeliA.Float2, float, float)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/Util_Misc.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: Vector2InverseLerp2
    path: ../AngeliA Framework/src/Utility/Util_Misc.cs
    startLine: 343
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static Float2 Vector2InverseLerp2(Float2 a, Float2 b, float x, float y)
    parameters:
    - id: a
      type: AngeliA.Float2
    - id: b
      type: AngeliA.Float2
    - id: x
      type: System.Single
    - id: y
      type: System.Single
    return:
      type: AngeliA.Float2
    content.vb: Public Shared Function Vector2InverseLerp2(a As Float2, b As Float2, x As Single, y As Single) As Float2
  overload: AngeliA.Util.Vector2InverseLerp2*
  nameWithType.vb: Util.Vector2InverseLerp2(Float2, Float2, Single, Single)
  fullName.vb: AngeliA.Util.Vector2InverseLerp2(AngeliA.Float2, AngeliA.Float2, Single, Single)
  name.vb: Vector2InverseLerp2(Float2, Float2, Single, Single)
- uid: AngeliA.Util.Remap(System.Single,System.Single,System.Single,System.Single,System.Single)
  commentId: M:AngeliA.Util.Remap(System.Single,System.Single,System.Single,System.Single,System.Single)
  id: Remap(System.Single,System.Single,System.Single,System.Single,System.Single)
  parent: AngeliA.Util
  langs:
  - csharp
  - vb
  name: Remap(float, float, float, float, float)
  nameWithType: Util.Remap(float, float, float, float, float)
  fullName: AngeliA.Util.Remap(float, float, float, float, float)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/Util_Misc.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: Remap
    path: ../AngeliA Framework/src/Utility/Util_Misc.cs
    startLine: 349
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static float Remap(float l, float r, float newL, float newR, float t)
    parameters:
    - id: l
      type: System.Single
    - id: r
      type: System.Single
    - id: newL
      type: System.Single
    - id: newR
      type: System.Single
    - id: t
      type: System.Single
    return:
      type: System.Single
    content.vb: Public Shared Function Remap(l As Single, r As Single, newL As Single, newR As Single, t As Single) As Single
  overload: AngeliA.Util.Remap*
  nameWithType.vb: Util.Remap(Single, Single, Single, Single, Single)
  fullName.vb: AngeliA.Util.Remap(Single, Single, Single, Single, Single)
  name.vb: Remap(Single, Single, Single, Single, Single)
- uid: AngeliA.Util.RemapUnclamped(System.Single,System.Single,System.Single,System.Single,System.Single)
  commentId: M:AngeliA.Util.RemapUnclamped(System.Single,System.Single,System.Single,System.Single,System.Single)
  id: RemapUnclamped(System.Single,System.Single,System.Single,System.Single,System.Single)
  parent: AngeliA.Util
  langs:
  - csharp
  - vb
  name: RemapUnclamped(float, float, float, float, float)
  nameWithType: Util.RemapUnclamped(float, float, float, float, float)
  fullName: AngeliA.Util.RemapUnclamped(float, float, float, float, float)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/Util_Misc.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: RemapUnclamped
    path: ../AngeliA Framework/src/Utility/Util_Misc.cs
    startLine: 355
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static float RemapUnclamped(float l, float r, float newL, float newR, float t)
    parameters:
    - id: l
      type: System.Single
    - id: r
      type: System.Single
    - id: newL
      type: System.Single
    - id: newR
      type: System.Single
    - id: t
      type: System.Single
    return:
      type: System.Single
    content.vb: Public Shared Function RemapUnclamped(l As Single, r As Single, newL As Single, newR As Single, t As Single) As Single
  overload: AngeliA.Util.RemapUnclamped*
  nameWithType.vb: Util.RemapUnclamped(Single, Single, Single, Single, Single)
  fullName.vb: AngeliA.Util.RemapUnclamped(Single, Single, Single, Single, Single)
  name.vb: RemapUnclamped(Single, Single, Single, Single, Single)
- uid: AngeliA.Util.Remap(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  commentId: M:AngeliA.Util.Remap(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  id: Remap(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  parent: AngeliA.Util
  langs:
  - csharp
  - vb
  name: Remap(int, int, int, int, int)
  nameWithType: Util.Remap(int, int, int, int, int)
  fullName: AngeliA.Util.Remap(int, int, int, int, int)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/Util_Misc.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: Remap
    path: ../AngeliA Framework/src/Utility/Util_Misc.cs
    startLine: 356
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static int Remap(int l, int r, int newL, int newR, int t)
    parameters:
    - id: l
      type: System.Int32
    - id: r
      type: System.Int32
    - id: newL
      type: System.Int32
    - id: newR
      type: System.Int32
    - id: t
      type: System.Int32
    return:
      type: System.Int32
    content.vb: Public Shared Function Remap(l As Integer, r As Integer, newL As Integer, newR As Integer, t As Integer) As Integer
  overload: AngeliA.Util.Remap*
  nameWithType.vb: Util.Remap(Integer, Integer, Integer, Integer, Integer)
  fullName.vb: AngeliA.Util.Remap(Integer, Integer, Integer, Integer, Integer)
  name.vb: Remap(Integer, Integer, Integer, Integer, Integer)
- uid: AngeliA.Util.RemapUnclamped(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  commentId: M:AngeliA.Util.RemapUnclamped(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  id: RemapUnclamped(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  parent: AngeliA.Util
  langs:
  - csharp
  - vb
  name: RemapUnclamped(int, int, int, int, int)
  nameWithType: Util.RemapUnclamped(int, int, int, int, int)
  fullName: AngeliA.Util.RemapUnclamped(int, int, int, int, int)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/Util_Misc.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: RemapUnclamped
    path: ../AngeliA Framework/src/Utility/Util_Misc.cs
    startLine: 357
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static int RemapUnclamped(int l, int r, int newL, int newR, int t)
    parameters:
    - id: l
      type: System.Int32
    - id: r
      type: System.Int32
    - id: newL
      type: System.Int32
    - id: newR
      type: System.Int32
    - id: t
      type: System.Int32
    return:
      type: System.Int32
    content.vb: Public Shared Function RemapUnclamped(l As Integer, r As Integer, newL As Integer, newR As Integer, t As Integer) As Integer
  overload: AngeliA.Util.RemapUnclamped*
  nameWithType.vb: Util.RemapUnclamped(Integer, Integer, Integer, Integer, Integer)
  fullName.vb: AngeliA.Util.RemapUnclamped(Integer, Integer, Integer, Integer, Integer)
  name.vb: RemapUnclamped(Integer, Integer, Integer, Integer, Integer)
- uid: AngeliA.Util.InverseLerp(System.Single,System.Single,System.Single)
  commentId: M:AngeliA.Util.InverseLerp(System.Single,System.Single,System.Single)
  id: InverseLerp(System.Single,System.Single,System.Single)
  parent: AngeliA.Util
  langs:
  - csharp
  - vb
  name: InverseLerp(float, float, float)
  nameWithType: Util.InverseLerp(float, float, float)
  fullName: AngeliA.Util.InverseLerp(float, float, float)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/Util_Misc.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: InverseLerp
    path: ../AngeliA Framework/src/Utility/Util_Misc.cs
    startLine: 373
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static float InverseLerp(float from, float to, float value)
    parameters:
    - id: from
      type: System.Single
    - id: to
      type: System.Single
    - id: value
      type: System.Single
    return:
      type: System.Single
    content.vb: Public Shared Function InverseLerp(from As Single, [to] As Single, value As Single) As Single
  overload: AngeliA.Util.InverseLerp*
  nameWithType.vb: Util.InverseLerp(Single, Single, Single)
  fullName.vb: AngeliA.Util.InverseLerp(Single, Single, Single)
  name.vb: InverseLerp(Single, Single, Single)
- uid: AngeliA.Util.InverseLerpUnclamped(System.Single,System.Single,System.Single)
  commentId: M:AngeliA.Util.InverseLerpUnclamped(System.Single,System.Single,System.Single)
  id: InverseLerpUnclamped(System.Single,System.Single,System.Single)
  parent: AngeliA.Util
  langs:
  - csharp
  - vb
  name: InverseLerpUnclamped(float, float, float)
  nameWithType: Util.InverseLerpUnclamped(float, float, float)
  fullName: AngeliA.Util.InverseLerpUnclamped(float, float, float)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/Util_Misc.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: InverseLerpUnclamped
    path: ../AngeliA Framework/src/Utility/Util_Misc.cs
    startLine: 380
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static float InverseLerpUnclamped(float from, float to, float value)
    parameters:
    - id: from
      type: System.Single
    - id: to
      type: System.Single
    - id: value
      type: System.Single
    return:
      type: System.Single
    content.vb: Public Shared Function InverseLerpUnclamped(from As Single, [to] As Single, value As Single) As Single
  overload: AngeliA.Util.InverseLerpUnclamped*
  nameWithType.vb: Util.InverseLerpUnclamped(Single, Single, Single)
  fullName.vb: AngeliA.Util.InverseLerpUnclamped(Single, Single, Single)
  name.vb: InverseLerpUnclamped(Single, Single, Single)
- uid: AngeliA.Util.PingPong(System.Single,System.Single)
  commentId: M:AngeliA.Util.PingPong(System.Single,System.Single)
  id: PingPong(System.Single,System.Single)
  parent: AngeliA.Util
  langs:
  - csharp
  - vb
  name: PingPong(float, float)
  nameWithType: Util.PingPong(float, float)
  fullName: AngeliA.Util.PingPong(float, float)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/Util_Misc.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: PingPong
    path: ../AngeliA Framework/src/Utility/Util_Misc.cs
    startLine: 387
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static float PingPong(float t, float length)
    parameters:
    - id: t
      type: System.Single
    - id: length
      type: System.Single
    return:
      type: System.Single
    content.vb: Public Shared Function PingPong(t As Single, length As Single) As Single
  overload: AngeliA.Util.PingPong*
  nameWithType.vb: Util.PingPong(Single, Single)
  fullName.vb: AngeliA.Util.PingPong(Single, Single)
  name.vb: PingPong(Single, Single)
- uid: AngeliA.Util.Repeat(System.Single,System.Single)
  commentId: M:AngeliA.Util.Repeat(System.Single,System.Single)
  id: Repeat(System.Single,System.Single)
  parent: AngeliA.Util
  langs:
  - csharp
  - vb
  name: Repeat(float, float)
  nameWithType: Util.Repeat(float, float)
  fullName: AngeliA.Util.Repeat(float, float)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/Util_Misc.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: Repeat
    path: ../AngeliA Framework/src/Utility/Util_Misc.cs
    startLine: 392
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static float Repeat(float t, float length)
    parameters:
    - id: t
      type: System.Single
    - id: length
      type: System.Single
    return:
      type: System.Single
    content.vb: Public Shared Function Repeat(t As Single, length As Single) As Single
  overload: AngeliA.Util.Repeat*
  nameWithType.vb: Util.Repeat(Single, Single)
  fullName.vb: AngeliA.Util.Repeat(Single, Single)
  name.vb: Repeat(Single, Single)
- uid: AngeliA.Util.Lerp(System.Single,System.Single,System.Single)
  commentId: M:AngeliA.Util.Lerp(System.Single,System.Single,System.Single)
  id: Lerp(System.Single,System.Single,System.Single)
  parent: AngeliA.Util
  langs:
  - csharp
  - vb
  name: Lerp(float, float, float)
  nameWithType: Util.Lerp(float, float, float)
  fullName: AngeliA.Util.Lerp(float, float, float)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/Util_Misc.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: Lerp
    path: ../AngeliA Framework/src/Utility/Util_Misc.cs
    startLine: 393
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static float Lerp(float a, float b, float t)
    parameters:
    - id: a
      type: System.Single
    - id: b
      type: System.Single
    - id: t
      type: System.Single
    return:
      type: System.Single
    content.vb: Public Shared Function Lerp(a As Single, b As Single, t As Single) As Single
  overload: AngeliA.Util.Lerp*
  nameWithType.vb: Util.Lerp(Single, Single, Single)
  fullName.vb: AngeliA.Util.Lerp(Single, Single, Single)
  name.vb: Lerp(Single, Single, Single)
- uid: AngeliA.Util.LerpUnclamped(System.Single,System.Single,System.Single)
  commentId: M:AngeliA.Util.LerpUnclamped(System.Single,System.Single,System.Single)
  id: LerpUnclamped(System.Single,System.Single,System.Single)
  parent: AngeliA.Util
  langs:
  - csharp
  - vb
  name: LerpUnclamped(float, float, float)
  nameWithType: Util.LerpUnclamped(float, float, float)
  fullName: AngeliA.Util.LerpUnclamped(float, float, float)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/Util_Misc.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: LerpUnclamped
    path: ../AngeliA Framework/src/Utility/Util_Misc.cs
    startLine: 394
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static float LerpUnclamped(float a, float b, float t)
    parameters:
    - id: a
      type: System.Single
    - id: b
      type: System.Single
    - id: t
      type: System.Single
    return:
      type: System.Single
    content.vb: Public Shared Function LerpUnclamped(a As Single, b As Single, t As Single) As Single
  overload: AngeliA.Util.LerpUnclamped*
  nameWithType.vb: Util.LerpUnclamped(Single, Single, Single)
  fullName.vb: AngeliA.Util.LerpUnclamped(Single, Single, Single)
  name.vb: LerpUnclamped(Single, Single, Single)
- uid: AngeliA.Util.LerpAngle(System.Single,System.Single,System.Single)
  commentId: M:AngeliA.Util.LerpAngle(System.Single,System.Single,System.Single)
  id: LerpAngle(System.Single,System.Single,System.Single)
  parent: AngeliA.Util
  langs:
  - csharp
  - vb
  name: LerpAngle(float, float, float)
  nameWithType: Util.LerpAngle(float, float, float)
  fullName: AngeliA.Util.LerpAngle(float, float, float)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/Util_Misc.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: LerpAngle
    path: ../AngeliA Framework/src/Utility/Util_Misc.cs
    startLine: 395
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static float LerpAngle(float a, float b, float t)
    parameters:
    - id: a
      type: System.Single
    - id: b
      type: System.Single
    - id: t
      type: System.Single
    return:
      type: System.Single
    content.vb: Public Shared Function LerpAngle(a As Single, b As Single, t As Single) As Single
  overload: AngeliA.Util.LerpAngle*
  nameWithType.vb: Util.LerpAngle(Single, Single, Single)
  fullName.vb: AngeliA.Util.LerpAngle(Single, Single, Single)
  name.vb: LerpAngle(Single, Single, Single)
- uid: AngeliA.Util.LerpAngleUnclamped(System.Single,System.Single,System.Single)
  commentId: M:AngeliA.Util.LerpAngleUnclamped(System.Single,System.Single,System.Single)
  id: LerpAngleUnclamped(System.Single,System.Single,System.Single)
  parent: AngeliA.Util
  langs:
  - csharp
  - vb
  name: LerpAngleUnclamped(float, float, float)
  nameWithType: Util.LerpAngleUnclamped(float, float, float)
  fullName: AngeliA.Util.LerpAngleUnclamped(float, float, float)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/Util_Misc.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: LerpAngleUnclamped
    path: ../AngeliA Framework/src/Utility/Util_Misc.cs
    startLine: 402
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static float LerpAngleUnclamped(float a, float b, float t)
    parameters:
    - id: a
      type: System.Single
    - id: b
      type: System.Single
    - id: t
      type: System.Single
    return:
      type: System.Single
    content.vb: Public Shared Function LerpAngleUnclamped(a As Single, b As Single, t As Single) As Single
  overload: AngeliA.Util.LerpAngleUnclamped*
  nameWithType.vb: Util.LerpAngleUnclamped(Single, Single, Single)
  fullName.vb: AngeliA.Util.LerpAngleUnclamped(Single, Single, Single)
  name.vb: LerpAngleUnclamped(Single, Single, Single)
- uid: AngeliA.Util.Atan(System.Single,System.Single)
  commentId: M:AngeliA.Util.Atan(System.Single,System.Single)
  id: Atan(System.Single,System.Single)
  parent: AngeliA.Util
  langs:
  - csharp
  - vb
  name: Atan(float, float)
  nameWithType: Util.Atan(float, float)
  fullName: AngeliA.Util.Atan(float, float)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/Util_Misc.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: Atan
    path: ../AngeliA Framework/src/Utility/Util_Misc.cs
    startLine: 409
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static float Atan(float x, float y)
    parameters:
    - id: x
      type: System.Single
    - id: y
      type: System.Single
    return:
      type: System.Single
    content.vb: Public Shared Function Atan(x As Single, y As Single) As Single
  overload: AngeliA.Util.Atan*
  nameWithType.vb: Util.Atan(Single, Single)
  fullName.vb: AngeliA.Util.Atan(Single, Single)
  name.vb: Atan(Single, Single)
- uid: AngeliA.Util.Min(System.Int32,System.Int32)
  commentId: M:AngeliA.Util.Min(System.Int32,System.Int32)
  id: Min(System.Int32,System.Int32)
  parent: AngeliA.Util
  langs:
  - csharp
  - vb
  name: Min(int, int)
  nameWithType: Util.Min(int, int)
  fullName: AngeliA.Util.Min(int, int)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/Util_Misc.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: Min
    path: ../AngeliA Framework/src/Utility/Util_Misc.cs
    startLine: 410
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static int Min(int a, int b)
    parameters:
    - id: a
      type: System.Int32
    - id: b
      type: System.Int32
    return:
      type: System.Int32
    content.vb: Public Shared Function Min(a As Integer, b As Integer) As Integer
  overload: AngeliA.Util.Min*
  nameWithType.vb: Util.Min(Integer, Integer)
  fullName.vb: AngeliA.Util.Min(Integer, Integer)
  name.vb: Min(Integer, Integer)
- uid: AngeliA.Util.Min(System.Int32,System.Int32,System.Int32)
  commentId: M:AngeliA.Util.Min(System.Int32,System.Int32,System.Int32)
  id: Min(System.Int32,System.Int32,System.Int32)
  parent: AngeliA.Util
  langs:
  - csharp
  - vb
  name: Min(int, int, int)
  nameWithType: Util.Min(int, int, int)
  fullName: AngeliA.Util.Min(int, int, int)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/Util_Misc.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: Min
    path: ../AngeliA Framework/src/Utility/Util_Misc.cs
    startLine: 411
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static int Min(int a, int b, int c)
    parameters:
    - id: a
      type: System.Int32
    - id: b
      type: System.Int32
    - id: c
      type: System.Int32
    return:
      type: System.Int32
    content.vb: Public Shared Function Min(a As Integer, b As Integer, c As Integer) As Integer
  overload: AngeliA.Util.Min*
  nameWithType.vb: Util.Min(Integer, Integer, Integer)
  fullName.vb: AngeliA.Util.Min(Integer, Integer, Integer)
  name.vb: Min(Integer, Integer, Integer)
- uid: AngeliA.Util.Max(System.Int32,System.Int32)
  commentId: M:AngeliA.Util.Max(System.Int32,System.Int32)
  id: Max(System.Int32,System.Int32)
  parent: AngeliA.Util
  langs:
  - csharp
  - vb
  name: Max(int, int)
  nameWithType: Util.Max(int, int)
  fullName: AngeliA.Util.Max(int, int)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/Util_Misc.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: Max
    path: ../AngeliA Framework/src/Utility/Util_Misc.cs
    startLine: 416
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static int Max(int a, int b)
    parameters:
    - id: a
      type: System.Int32
    - id: b
      type: System.Int32
    return:
      type: System.Int32
    content.vb: Public Shared Function Max(a As Integer, b As Integer) As Integer
  overload: AngeliA.Util.Max*
  nameWithType.vb: Util.Max(Integer, Integer)
  fullName.vb: AngeliA.Util.Max(Integer, Integer)
  name.vb: Max(Integer, Integer)
- uid: AngeliA.Util.Max(System.Int32,System.Int32,System.Int32)
  commentId: M:AngeliA.Util.Max(System.Int32,System.Int32,System.Int32)
  id: Max(System.Int32,System.Int32,System.Int32)
  parent: AngeliA.Util
  langs:
  - csharp
  - vb
  name: Max(int, int, int)
  nameWithType: Util.Max(int, int, int)
  fullName: AngeliA.Util.Max(int, int, int)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/Util_Misc.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: Max
    path: ../AngeliA Framework/src/Utility/Util_Misc.cs
    startLine: 417
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static int Max(int a, int b, int c)
    parameters:
    - id: a
      type: System.Int32
    - id: b
      type: System.Int32
    - id: c
      type: System.Int32
    return:
      type: System.Int32
    content.vb: Public Shared Function Max(a As Integer, b As Integer, c As Integer) As Integer
  overload: AngeliA.Util.Max*
  nameWithType.vb: Util.Max(Integer, Integer, Integer)
  fullName.vb: AngeliA.Util.Max(Integer, Integer, Integer)
  name.vb: Max(Integer, Integer, Integer)
- uid: AngeliA.Util.Min(System.Single,System.Single)
  commentId: M:AngeliA.Util.Min(System.Single,System.Single)
  id: Min(System.Single,System.Single)
  parent: AngeliA.Util
  langs:
  - csharp
  - vb
  name: Min(float, float)
  nameWithType: Util.Min(float, float)
  fullName: AngeliA.Util.Min(float, float)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/Util_Misc.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: Min
    path: ../AngeliA Framework/src/Utility/Util_Misc.cs
    startLine: 422
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static float Min(float a, float b)
    parameters:
    - id: a
      type: System.Single
    - id: b
      type: System.Single
    return:
      type: System.Single
    content.vb: Public Shared Function Min(a As Single, b As Single) As Single
  overload: AngeliA.Util.Min*
  nameWithType.vb: Util.Min(Single, Single)
  fullName.vb: AngeliA.Util.Min(Single, Single)
  name.vb: Min(Single, Single)
- uid: AngeliA.Util.Max(System.Single,System.Single)
  commentId: M:AngeliA.Util.Max(System.Single,System.Single)
  id: Max(System.Single,System.Single)
  parent: AngeliA.Util
  langs:
  - csharp
  - vb
  name: Max(float, float)
  nameWithType: Util.Max(float, float)
  fullName: AngeliA.Util.Max(float, float)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/Util_Misc.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: Max
    path: ../AngeliA Framework/src/Utility/Util_Misc.cs
    startLine: 423
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static float Max(float a, float b)
    parameters:
    - id: a
      type: System.Single
    - id: b
      type: System.Single
    return:
      type: System.Single
    content.vb: Public Shared Function Max(a As Single, b As Single) As Single
  overload: AngeliA.Util.Max*
  nameWithType.vb: Util.Max(Single, Single)
  fullName.vb: AngeliA.Util.Max(Single, Single)
  name.vb: Max(Single, Single)
- uid: AngeliA.Util.Sin(System.Single)
  commentId: M:AngeliA.Util.Sin(System.Single)
  id: Sin(System.Single)
  parent: AngeliA.Util
  langs:
  - csharp
  - vb
  name: Sin(float)
  nameWithType: Util.Sin(float)
  fullName: AngeliA.Util.Sin(float)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/Util_Misc.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: Sin
    path: ../AngeliA Framework/src/Utility/Util_Misc.cs
    startLine: 424
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static float Sin(float radAngle)
    parameters:
    - id: radAngle
      type: System.Single
    return:
      type: System.Single
    content.vb: Public Shared Function Sin(radAngle As Single) As Single
  overload: AngeliA.Util.Sin*
  nameWithType.vb: Util.Sin(Single)
  fullName.vb: AngeliA.Util.Sin(Single)
  name.vb: Sin(Single)
- uid: AngeliA.Util.Cos(System.Single)
  commentId: M:AngeliA.Util.Cos(System.Single)
  id: Cos(System.Single)
  parent: AngeliA.Util
  langs:
  - csharp
  - vb
  name: Cos(float)
  nameWithType: Util.Cos(float)
  fullName: AngeliA.Util.Cos(float)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/Util_Misc.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: Cos
    path: ../AngeliA Framework/src/Utility/Util_Misc.cs
    startLine: 425
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static float Cos(float radAngle)
    parameters:
    - id: radAngle
      type: System.Single
    return:
      type: System.Single
    content.vb: Public Shared Function Cos(radAngle As Single) As Single
  overload: AngeliA.Util.Cos*
  nameWithType.vb: Util.Cos(Single)
  fullName.vb: AngeliA.Util.Cos(Single)
  name.vb: Cos(Single)
- uid: AngeliA.Util.Abs(System.Int32)
  commentId: M:AngeliA.Util.Abs(System.Int32)
  id: Abs(System.Int32)
  parent: AngeliA.Util
  langs:
  - csharp
  - vb
  name: Abs(int)
  nameWithType: Util.Abs(int)
  fullName: AngeliA.Util.Abs(int)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/Util_Misc.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: Abs
    path: ../AngeliA Framework/src/Utility/Util_Misc.cs
    startLine: 426
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static int Abs(int value)
    parameters:
    - id: value
      type: System.Int32
    return:
      type: System.Int32
    content.vb: Public Shared Function Abs(value As Integer) As Integer
  overload: AngeliA.Util.Abs*
  nameWithType.vb: Util.Abs(Integer)
  fullName.vb: AngeliA.Util.Abs(Integer)
  name.vb: Abs(Integer)
- uid: AngeliA.Util.Abs(System.Single)
  commentId: M:AngeliA.Util.Abs(System.Single)
  id: Abs(System.Single)
  parent: AngeliA.Util
  langs:
  - csharp
  - vb
  name: Abs(float)
  nameWithType: Util.Abs(float)
  fullName: AngeliA.Util.Abs(float)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/Util_Misc.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: Abs
    path: ../AngeliA Framework/src/Utility/Util_Misc.cs
    startLine: 427
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static float Abs(float value)
    parameters:
    - id: value
      type: System.Single
    return:
      type: System.Single
    content.vb: Public Shared Function Abs(value As Single) As Single
  overload: AngeliA.Util.Abs*
  nameWithType.vb: Util.Abs(Single)
  fullName.vb: AngeliA.Util.Abs(Single)
  name.vb: Abs(Single)
- uid: AngeliA.Util.Approximately(System.Single,System.Single)
  commentId: M:AngeliA.Util.Approximately(System.Single,System.Single)
  id: Approximately(System.Single,System.Single)
  parent: AngeliA.Util
  langs:
  - csharp
  - vb
  name: Approximately(float, float)
  nameWithType: Util.Approximately(float, float)
  fullName: AngeliA.Util.Approximately(float, float)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/Util_Misc.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: Approximately
    path: ../AngeliA Framework/src/Utility/Util_Misc.cs
    startLine: 428
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static bool Approximately(float a, float b)
    parameters:
    - id: a
      type: System.Single
    - id: b
      type: System.Single
    return:
      type: System.Boolean
    content.vb: Public Shared Function Approximately(a As Single, b As Single) As Boolean
  overload: AngeliA.Util.Approximately*
  nameWithType.vb: Util.Approximately(Single, Single)
  fullName.vb: AngeliA.Util.Approximately(Single, Single)
  name.vb: Approximately(Single, Single)
- uid: AngeliA.Util.Clamp(System.Int32,System.Int32,System.Int32)
  commentId: M:AngeliA.Util.Clamp(System.Int32,System.Int32,System.Int32)
  id: Clamp(System.Int32,System.Int32,System.Int32)
  parent: AngeliA.Util
  langs:
  - csharp
  - vb
  name: Clamp(int, int, int)
  nameWithType: Util.Clamp(int, int, int)
  fullName: AngeliA.Util.Clamp(int, int, int)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/Util_Misc.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: Clamp
    path: ../AngeliA Framework/src/Utility/Util_Misc.cs
    startLine: 429
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static int Clamp(int a, int min, int max)
    parameters:
    - id: a
      type: System.Int32
    - id: min
      type: System.Int32
    - id: max
      type: System.Int32
    return:
      type: System.Int32
    content.vb: Public Shared Function Clamp(a As Integer, min As Integer, max As Integer) As Integer
  overload: AngeliA.Util.Clamp*
  nameWithType.vb: Util.Clamp(Integer, Integer, Integer)
  fullName.vb: AngeliA.Util.Clamp(Integer, Integer, Integer)
  name.vb: Clamp(Integer, Integer, Integer)
- uid: AngeliA.Util.Clamp(System.Single,System.Single,System.Single)
  commentId: M:AngeliA.Util.Clamp(System.Single,System.Single,System.Single)
  id: Clamp(System.Single,System.Single,System.Single)
  parent: AngeliA.Util
  langs:
  - csharp
  - vb
  name: Clamp(float, float, float)
  nameWithType: Util.Clamp(float, float, float)
  fullName: AngeliA.Util.Clamp(float, float, float)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/Util_Misc.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: Clamp
    path: ../AngeliA Framework/src/Utility/Util_Misc.cs
    startLine: 430
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static float Clamp(float a, float min, float max)
    parameters:
    - id: a
      type: System.Single
    - id: min
      type: System.Single
    - id: max
      type: System.Single
    return:
      type: System.Single
    content.vb: Public Shared Function Clamp(a As Single, min As Single, max As Single) As Single
  overload: AngeliA.Util.Clamp*
  nameWithType.vb: Util.Clamp(Single, Single, Single)
  fullName.vb: AngeliA.Util.Clamp(Single, Single, Single)
  name.vb: Clamp(Single, Single, Single)
- uid: AngeliA.Util.Clamp01(System.Single)
  commentId: M:AngeliA.Util.Clamp01(System.Single)
  id: Clamp01(System.Single)
  parent: AngeliA.Util
  langs:
  - csharp
  - vb
  name: Clamp01(float)
  nameWithType: Util.Clamp01(float)
  fullName: AngeliA.Util.Clamp01(float)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/Util_Misc.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: Clamp01
    path: ../AngeliA Framework/src/Utility/Util_Misc.cs
    startLine: 431
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static float Clamp01(float value)
    parameters:
    - id: value
      type: System.Single
    return:
      type: System.Single
    content.vb: Public Shared Function Clamp01(value As Single) As Single
  overload: AngeliA.Util.Clamp01*
  nameWithType.vb: Util.Clamp01(Single)
  fullName.vb: AngeliA.Util.Clamp01(Single)
  name.vb: Clamp01(Single)
- uid: AngeliA.Util.Pow(System.Single,System.Single)
  commentId: M:AngeliA.Util.Pow(System.Single,System.Single)
  id: Pow(System.Single,System.Single)
  parent: AngeliA.Util
  langs:
  - csharp
  - vb
  name: Pow(float, float)
  nameWithType: Util.Pow(float, float)
  fullName: AngeliA.Util.Pow(float, float)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/Util_Misc.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: Pow
    path: ../AngeliA Framework/src/Utility/Util_Misc.cs
    startLine: 432
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static float Pow(float f, float p)
    parameters:
    - id: f
      type: System.Single
    - id: p
      type: System.Single
    return:
      type: System.Single
    content.vb: Public Shared Function Pow(f As Single, p As Single) As Single
  overload: AngeliA.Util.Pow*
  nameWithType.vb: Util.Pow(Single, Single)
  fullName.vb: AngeliA.Util.Pow(Single, Single)
  name.vb: Pow(Single, Single)
- uid: AngeliA.Util.Sqrt(System.Single)
  commentId: M:AngeliA.Util.Sqrt(System.Single)
  id: Sqrt(System.Single)
  parent: AngeliA.Util
  langs:
  - csharp
  - vb
  name: Sqrt(float)
  nameWithType: Util.Sqrt(float)
  fullName: AngeliA.Util.Sqrt(float)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/Util_Misc.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: Sqrt
    path: ../AngeliA Framework/src/Utility/Util_Misc.cs
    startLine: 433
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static float Sqrt(float f)
    parameters:
    - id: f
      type: System.Single
    return:
      type: System.Single
    content.vb: Public Shared Function Sqrt(f As Single) As Single
  overload: AngeliA.Util.Sqrt*
  nameWithType.vb: Util.Sqrt(Single)
  fullName.vb: AngeliA.Util.Sqrt(Single)
  name.vb: Sqrt(Single)
- uid: AngeliA.Util.RoundToInt(System.Single)
  commentId: M:AngeliA.Util.RoundToInt(System.Single)
  id: RoundToInt(System.Single)
  parent: AngeliA.Util
  langs:
  - csharp
  - vb
  name: RoundToInt(float)
  nameWithType: Util.RoundToInt(float)
  fullName: AngeliA.Util.RoundToInt(float)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/Util_Misc.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: RoundToInt
    path: ../AngeliA Framework/src/Utility/Util_Misc.cs
    startLine: 434
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static int RoundToInt(float value)
    parameters:
    - id: value
      type: System.Single
    return:
      type: System.Int32
    content.vb: Public Shared Function RoundToInt(value As Single) As Integer
  overload: AngeliA.Util.RoundToInt*
  nameWithType.vb: Util.RoundToInt(Single)
  fullName.vb: AngeliA.Util.RoundToInt(Single)
  name.vb: RoundToInt(Single)
- uid: AngeliA.Util.CeilToInt(System.Single)
  commentId: M:AngeliA.Util.CeilToInt(System.Single)
  id: CeilToInt(System.Single)
  parent: AngeliA.Util
  langs:
  - csharp
  - vb
  name: CeilToInt(float)
  nameWithType: Util.CeilToInt(float)
  fullName: AngeliA.Util.CeilToInt(float)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/Util_Misc.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: CeilToInt
    path: ../AngeliA Framework/src/Utility/Util_Misc.cs
    startLine: 435
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static int CeilToInt(float value)
    parameters:
    - id: value
      type: System.Single
    return:
      type: System.Int32
    content.vb: Public Shared Function CeilToInt(value As Single) As Integer
  overload: AngeliA.Util.CeilToInt*
  nameWithType.vb: Util.CeilToInt(Single)
  fullName.vb: AngeliA.Util.CeilToInt(Single)
  name.vb: CeilToInt(Single)
- uid: AngeliA.Util.FloorToInt(System.Single)
  commentId: M:AngeliA.Util.FloorToInt(System.Single)
  id: FloorToInt(System.Single)
  parent: AngeliA.Util
  langs:
  - csharp
  - vb
  name: FloorToInt(float)
  nameWithType: Util.FloorToInt(float)
  fullName: AngeliA.Util.FloorToInt(float)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/Util_Misc.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: FloorToInt
    path: ../AngeliA Framework/src/Utility/Util_Misc.cs
    startLine: 436
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static int FloorToInt(float value)
    parameters:
    - id: value
      type: System.Single
    return:
      type: System.Int32
    content.vb: Public Shared Function FloorToInt(value As Single) As Integer
  overload: AngeliA.Util.FloorToInt*
  nameWithType.vb: Util.FloorToInt(Single)
  fullName.vb: AngeliA.Util.FloorToInt(Single)
  name.vb: FloorToInt(Single)
- uid: AngeliA.Util.HsvToRgb(System.Single,System.Single,System.Single)
  commentId: M:AngeliA.Util.HsvToRgb(System.Single,System.Single,System.Single)
  id: HsvToRgb(System.Single,System.Single,System.Single)
  parent: AngeliA.Util
  langs:
  - csharp
  - vb
  name: HsvToRgb(float, float, float)
  nameWithType: Util.HsvToRgb(float, float, float)
  fullName: AngeliA.Util.HsvToRgb(float, float, float)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/Util_Misc.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: HsvToRgb
    path: ../AngeliA Framework/src/Utility/Util_Misc.cs
    startLine: 439
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static Color32 HsvToRgb(float h, float s, float v)
    parameters:
    - id: h
      type: System.Single
    - id: s
      type: System.Single
    - id: v
      type: System.Single
    return:
      type: AngeliA.Color32
    content.vb: Public Shared Function HsvToRgb(h As Single, s As Single, v As Single) As Color32
  overload: AngeliA.Util.HsvToRgb*
  nameWithType.vb: Util.HsvToRgb(Single, Single, Single)
  fullName.vb: AngeliA.Util.HsvToRgb(Single, Single, Single)
  name.vb: HsvToRgb(Single, Single, Single)
- uid: AngeliA.Util.HsvToRgbF(System.Single,System.Single,System.Single)
  commentId: M:AngeliA.Util.HsvToRgbF(System.Single,System.Single,System.Single)
  id: HsvToRgbF(System.Single,System.Single,System.Single)
  parent: AngeliA.Util
  langs:
  - csharp
  - vb
  name: HsvToRgbF(float, float, float)
  nameWithType: Util.HsvToRgbF(float, float, float)
  fullName: AngeliA.Util.HsvToRgbF(float, float, float)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/Util_Misc.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: HsvToRgbF
    path: ../AngeliA Framework/src/Utility/Util_Misc.cs
    startLine: 440
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static ColorF HsvToRgbF(float h, float s, float v)
    parameters:
    - id: h
      type: System.Single
    - id: s
      type: System.Single
    - id: v
      type: System.Single
    return:
      type: AngeliA.ColorF
    content.vb: Public Shared Function HsvToRgbF(h As Single, s As Single, v As Single) As ColorF
  overload: AngeliA.Util.HsvToRgbF*
  nameWithType.vb: Util.HsvToRgbF(Single, Single, Single)
  fullName.vb: AngeliA.Util.HsvToRgbF(Single, Single, Single)
  name.vb: HsvToRgbF(Single, Single, Single)
- uid: AngeliA.Util.RGBToHSV(AngeliA.Color32,System.Single@,System.Single@,System.Single@)
  commentId: M:AngeliA.Util.RGBToHSV(AngeliA.Color32,System.Single@,System.Single@,System.Single@)
  id: RGBToHSV(AngeliA.Color32,System.Single@,System.Single@,System.Single@)
  parent: AngeliA.Util
  langs:
  - csharp
  - vb
  name: RGBToHSV(Color32, out float, out float, out float)
  nameWithType: Util.RGBToHSV(Color32, out float, out float, out float)
  fullName: AngeliA.Util.RGBToHSV(AngeliA.Color32, out float, out float, out float)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/Util_Misc.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: RGBToHSV
    path: ../AngeliA Framework/src/Utility/Util_Misc.cs
    startLine: 513
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static void RGBToHSV(Color32 rgbColor, out float h, out float s, out float v)
    parameters:
    - id: rgbColor
      type: AngeliA.Color32
    - id: h
      type: System.Single
    - id: s
      type: System.Single
    - id: v
      type: System.Single
    content.vb: Public Shared Sub RGBToHSV(rgbColor As Color32, h As Single, s As Single, v As Single)
  overload: AngeliA.Util.RGBToHSV*
  nameWithType.vb: Util.RGBToHSV(Color32, Single, Single, Single)
  fullName.vb: AngeliA.Util.RGBToHSV(AngeliA.Color32, Single, Single, Single)
  name.vb: RGBToHSV(Color32, Single, Single, Single)
- uid: AngeliA.Util.RGBToHSV(AngeliA.ColorF,System.Single@,System.Single@,System.Single@)
  commentId: M:AngeliA.Util.RGBToHSV(AngeliA.ColorF,System.Single@,System.Single@,System.Single@)
  id: RGBToHSV(AngeliA.ColorF,System.Single@,System.Single@,System.Single@)
  parent: AngeliA.Util
  langs:
  - csharp
  - vb
  name: RGBToHSV(ColorF, out float, out float, out float)
  nameWithType: Util.RGBToHSV(ColorF, out float, out float, out float)
  fullName: AngeliA.Util.RGBToHSV(AngeliA.ColorF, out float, out float, out float)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/Util_Misc.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: RGBToHSV
    path: ../AngeliA Framework/src/Utility/Util_Misc.cs
    startLine: 514
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static void RGBToHSV(ColorF rgbColor, out float h, out float s, out float v)
    parameters:
    - id: rgbColor
      type: AngeliA.ColorF
    - id: h
      type: System.Single
    - id: s
      type: System.Single
    - id: v
      type: System.Single
    content.vb: Public Shared Sub RGBToHSV(rgbColor As ColorF, h As Single, s As Single, v As Single)
  overload: AngeliA.Util.RGBToHSV*
  nameWithType.vb: Util.RGBToHSV(ColorF, Single, Single, Single)
  fullName.vb: AngeliA.Util.RGBToHSV(AngeliA.ColorF, Single, Single, Single)
  name.vb: RGBToHSV(ColorF, Single, Single, Single)
- uid: AngeliA.Util.MergeColor_Overlay(AngeliA.ColorF,AngeliA.ColorF)
  commentId: M:AngeliA.Util.MergeColor_Overlay(AngeliA.ColorF,AngeliA.ColorF)
  id: MergeColor_Overlay(AngeliA.ColorF,AngeliA.ColorF)
  parent: AngeliA.Util
  langs:
  - csharp
  - vb
  name: MergeColor_Overlay(ColorF, ColorF)
  nameWithType: Util.MergeColor_Overlay(ColorF, ColorF)
  fullName: AngeliA.Util.MergeColor_Overlay(AngeliA.ColorF, AngeliA.ColorF)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/Util_Misc.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: MergeColor_Overlay
    path: ../AngeliA Framework/src/Utility/Util_Misc.cs
    startLine: 552
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static ColorF MergeColor_Overlay(ColorF top, ColorF back)
    parameters:
    - id: top
      type: AngeliA.ColorF
    - id: back
      type: AngeliA.ColorF
    return:
      type: AngeliA.ColorF
    content.vb: Public Shared Function MergeColor_Overlay(top As ColorF, back As ColorF) As ColorF
  overload: AngeliA.Util.MergeColor_Overlay*
- uid: AngeliA.Util.MergeColor_Lerp(AngeliA.ColorF,AngeliA.ColorF)
  commentId: M:AngeliA.Util.MergeColor_Lerp(AngeliA.ColorF,AngeliA.ColorF)
  id: MergeColor_Lerp(AngeliA.ColorF,AngeliA.ColorF)
  parent: AngeliA.Util
  langs:
  - csharp
  - vb
  name: MergeColor_Lerp(ColorF, ColorF)
  nameWithType: Util.MergeColor_Lerp(ColorF, ColorF)
  fullName: AngeliA.Util.MergeColor_Lerp(AngeliA.ColorF, AngeliA.ColorF)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/Util_Misc.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: MergeColor_Lerp
    path: ../AngeliA Framework/src/Utility/Util_Misc.cs
    startLine: 561
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static ColorF MergeColor_Lerp(ColorF top, ColorF back)
    parameters:
    - id: top
      type: AngeliA.ColorF
    - id: back
      type: AngeliA.ColorF
    return:
      type: AngeliA.ColorF
    content.vb: Public Shared Function MergeColor_Lerp(top As ColorF, back As ColorF) As ColorF
  overload: AngeliA.Util.MergeColor_Lerp*
- uid: AngeliA.Util.MergeColor(AngeliA.ColorF,AngeliA.ColorF)
  commentId: M:AngeliA.Util.MergeColor(AngeliA.ColorF,AngeliA.ColorF)
  id: MergeColor(AngeliA.ColorF,AngeliA.ColorF)
  parent: AngeliA.Util
  langs:
  - csharp
  - vb
  name: MergeColor(ColorF, ColorF)
  nameWithType: Util.MergeColor(ColorF, ColorF)
  fullName: AngeliA.Util.MergeColor(AngeliA.ColorF, AngeliA.ColorF)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/Util_Misc.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: MergeColor
    path: ../AngeliA Framework/src/Utility/Util_Misc.cs
    startLine: 571
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static ColorF MergeColor(ColorF top, ColorF back)
    parameters:
    - id: top
      type: AngeliA.ColorF
    - id: back
      type: AngeliA.ColorF
    return:
      type: AngeliA.ColorF
    content.vb: Public Shared Function MergeColor(top As ColorF, back As ColorF) As ColorF
  overload: AngeliA.Util.MergeColor*
- uid: AngeliA.Util.MergeColor_Overlay(AngeliA.Color32,AngeliA.Color32)
  commentId: M:AngeliA.Util.MergeColor_Overlay(AngeliA.Color32,AngeliA.Color32)
  id: MergeColor_Overlay(AngeliA.Color32,AngeliA.Color32)
  parent: AngeliA.Util
  langs:
  - csharp
  - vb
  name: MergeColor_Overlay(Color32, Color32)
  nameWithType: Util.MergeColor_Overlay(Color32, Color32)
  fullName: AngeliA.Util.MergeColor_Overlay(AngeliA.Color32, AngeliA.Color32)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/Util_Misc.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: MergeColor_Overlay
    path: ../AngeliA Framework/src/Utility/Util_Misc.cs
    startLine: 579
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static Color32 MergeColor_Overlay(Color32 top, Color32 back)
    parameters:
    - id: top
      type: AngeliA.Color32
    - id: back
      type: AngeliA.Color32
    return:
      type: AngeliA.Color32
    content.vb: Public Shared Function MergeColor_Overlay(top As Color32, back As Color32) As Color32
  overload: AngeliA.Util.MergeColor_Overlay*
- uid: AngeliA.Util.MergeColor_Lerp(AngeliA.Color32,AngeliA.Color32)
  commentId: M:AngeliA.Util.MergeColor_Lerp(AngeliA.Color32,AngeliA.Color32)
  id: MergeColor_Lerp(AngeliA.Color32,AngeliA.Color32)
  parent: AngeliA.Util
  langs:
  - csharp
  - vb
  name: MergeColor_Lerp(Color32, Color32)
  nameWithType: Util.MergeColor_Lerp(Color32, Color32)
  fullName: AngeliA.Util.MergeColor_Lerp(AngeliA.Color32, AngeliA.Color32)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/Util_Misc.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: MergeColor_Lerp
    path: ../AngeliA Framework/src/Utility/Util_Misc.cs
    startLine: 580
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static Color32 MergeColor_Lerp(Color32 top, Color32 back)
    parameters:
    - id: top
      type: AngeliA.Color32
    - id: back
      type: AngeliA.Color32
    return:
      type: AngeliA.Color32
    content.vb: Public Shared Function MergeColor_Lerp(top As Color32, back As Color32) As Color32
  overload: AngeliA.Util.MergeColor_Lerp*
- uid: AngeliA.Util.MergeColor(AngeliA.Color32,AngeliA.Color32)
  commentId: M:AngeliA.Util.MergeColor(AngeliA.Color32,AngeliA.Color32)
  id: MergeColor(AngeliA.Color32,AngeliA.Color32)
  parent: AngeliA.Util
  langs:
  - csharp
  - vb
  name: MergeColor(Color32, Color32)
  nameWithType: Util.MergeColor(Color32, Color32)
  fullName: AngeliA.Util.MergeColor(AngeliA.Color32, AngeliA.Color32)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/Util_Misc.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: MergeColor
    path: ../AngeliA Framework/src/Utility/Util_Misc.cs
    startLine: 581
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static Color32 MergeColor(Color32 top, Color32 back)
    parameters:
    - id: top
      type: AngeliA.Color32
    - id: back
      type: AngeliA.Color32
    return:
      type: AngeliA.Color32
    content.vb: Public Shared Function MergeColor(top As Color32, back As Color32) As Color32
  overload: AngeliA.Util.MergeColor*
- uid: AngeliA.Util.MergeColor_Editor(AngeliA.Color32,AngeliA.Color32)
  commentId: M:AngeliA.Util.MergeColor_Editor(AngeliA.Color32,AngeliA.Color32)
  id: MergeColor_Editor(AngeliA.Color32,AngeliA.Color32)
  parent: AngeliA.Util
  langs:
  - csharp
  - vb
  name: MergeColor_Editor(Color32, Color32)
  nameWithType: Util.MergeColor_Editor(Color32, Color32)
  fullName: AngeliA.Util.MergeColor_Editor(AngeliA.Color32, AngeliA.Color32)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/Util_Misc.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: MergeColor_Editor
    path: ../AngeliA Framework/src/Utility/Util_Misc.cs
    startLine: 584
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static Color32 MergeColor_Editor(Color32 top, Color32 back)
    parameters:
    - id: top
      type: AngeliA.Color32
    - id: back
      type: AngeliA.Color32
    return:
      type: AngeliA.Color32
    content.vb: Public Shared Function MergeColor_Editor(top As Color32, back As Color32) As Color32
  overload: AngeliA.Util.MergeColor_Editor*
- uid: AngeliA.Util.WritePixelsToConsole(AngeliA.Color32[],System.Int32)
  commentId: M:AngeliA.Util.WritePixelsToConsole(AngeliA.Color32[],System.Int32)
  id: WritePixelsToConsole(AngeliA.Color32[],System.Int32)
  parent: AngeliA.Util
  langs:
  - csharp
  - vb
  name: WritePixelsToConsole(Color32[], int)
  nameWithType: Util.WritePixelsToConsole(Color32[], int)
  fullName: AngeliA.Util.WritePixelsToConsole(AngeliA.Color32[], int)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/Util_Misc.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: WritePixelsToConsole
    path: ../AngeliA Framework/src/Utility/Util_Misc.cs
    startLine: 597
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static void WritePixelsToConsole(Color32[] pixels, int width)
    parameters:
    - id: pixels
      type: AngeliA.Color32[]
    - id: width
      type: System.Int32
    content.vb: Public Shared Sub WritePixelsToConsole(pixels As Color32(), width As Integer)
  overload: AngeliA.Util.WritePixelsToConsole*
  nameWithType.vb: Util.WritePixelsToConsole(Color32(), Integer)
  fullName.vb: AngeliA.Util.WritePixelsToConsole(AngeliA.Color32(), Integer)
  name.vb: WritePixelsToConsole(Color32(), Integer)
- uid: AngeliA.Util.GetDirection(System.Int32,System.Int32)
  commentId: M:AngeliA.Util.GetDirection(System.Int32,System.Int32)
  id: GetDirection(System.Int32,System.Int32)
  parent: AngeliA.Util
  langs:
  - csharp
  - vb
  name: GetDirection(int, int)
  nameWithType: Util.GetDirection(int, int)
  fullName: AngeliA.Util.GetDirection(int, int)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/Util_Misc.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: GetDirection
    path: ../AngeliA Framework/src/Utility/Util_Misc.cs
    startLine: 624
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static Direction8 GetDirection(int deltaX, int deltaY)
    parameters:
    - id: deltaX
      type: System.Int32
    - id: deltaY
      type: System.Int32
    return:
      type: AngeliA.Direction8
    content.vb: Public Shared Function GetDirection(deltaX As Integer, deltaY As Integer) As Direction8
  overload: AngeliA.Util.GetDirection*
  nameWithType.vb: Util.GetDirection(Integer, Integer)
  fullName.vb: AngeliA.Util.GetDirection(Integer, Integer)
  name.vb: GetDirection(Integer, Integer)
- uid: AngeliA.Util.ReadByte(System.Byte*@,System.Byte*)
  commentId: M:AngeliA.Util.ReadByte(System.Byte*@,System.Byte*)
  id: ReadByte(System.Byte*@,System.Byte*)
  parent: AngeliA.Util
  langs:
  - csharp
  - vb
  name: ReadByte(ref byte*, byte*)
  nameWithType: Util.ReadByte(ref byte*, byte*)
  fullName: AngeliA.Util.ReadByte(ref byte*, byte*)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/Util_Misc.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: ReadByte
    path: ../AngeliA Framework/src/Utility/Util_Misc.cs
    startLine: 633
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static byte ReadByte(ref byte* p, byte* end)
    parameters:
    - id: p
      type: System.Byte*
    - id: end
      type: System.Byte*
    return:
      type: System.Byte
    content.vb: Public Shared Function ReadByte(p As Byte*, [end] As Byte*) As Byte
  overload: AngeliA.Util.ReadByte*
  nameWithType.vb: Util.ReadByte(Byte*, Byte*)
  fullName.vb: AngeliA.Util.ReadByte(Byte*, Byte*)
  name.vb: ReadByte(Byte*, Byte*)
- uid: AngeliA.Util.ReadSByte(System.Byte*@,System.Byte*)
  commentId: M:AngeliA.Util.ReadSByte(System.Byte*@,System.Byte*)
  id: ReadSByte(System.Byte*@,System.Byte*)
  parent: AngeliA.Util
  langs:
  - csharp
  - vb
  name: ReadSByte(ref byte*, byte*)
  nameWithType: Util.ReadSByte(ref byte*, byte*)
  fullName: AngeliA.Util.ReadSByte(ref byte*, byte*)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/Util_Misc.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: ReadSByte
    path: ../AngeliA Framework/src/Utility/Util_Misc.cs
    startLine: 637
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static sbyte ReadSByte(ref byte* p, byte* end)
    parameters:
    - id: p
      type: System.Byte*
    - id: end
      type: System.Byte*
    return:
      type: System.SByte
    content.vb: Public Shared Function ReadSByte(p As Byte*, [end] As Byte*) As SByte
  overload: AngeliA.Util.ReadSByte*
  nameWithType.vb: Util.ReadSByte(Byte*, Byte*)
  fullName.vb: AngeliA.Util.ReadSByte(Byte*, Byte*)
  name.vb: ReadSByte(Byte*, Byte*)
- uid: AngeliA.Util.ReadBool(System.Byte*@,System.Byte*)
  commentId: M:AngeliA.Util.ReadBool(System.Byte*@,System.Byte*)
  id: ReadBool(System.Byte*@,System.Byte*)
  parent: AngeliA.Util
  langs:
  - csharp
  - vb
  name: ReadBool(ref byte*, byte*)
  nameWithType: Util.ReadBool(ref byte*, byte*)
  fullName: AngeliA.Util.ReadBool(ref byte*, byte*)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/Util_Misc.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: ReadBool
    path: ../AngeliA Framework/src/Utility/Util_Misc.cs
    startLine: 641
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static bool ReadBool(ref byte* p, byte* end)
    parameters:
    - id: p
      type: System.Byte*
    - id: end
      type: System.Byte*
    return:
      type: System.Boolean
    content.vb: Public Shared Function ReadBool(p As Byte*, [end] As Byte*) As Boolean
  overload: AngeliA.Util.ReadBool*
  nameWithType.vb: Util.ReadBool(Byte*, Byte*)
  fullName.vb: AngeliA.Util.ReadBool(Byte*, Byte*)
  name.vb: ReadBool(Byte*, Byte*)
- uid: AngeliA.Util.ReadChar(System.Byte*@,System.Byte*)
  commentId: M:AngeliA.Util.ReadChar(System.Byte*@,System.Byte*)
  id: ReadChar(System.Byte*@,System.Byte*)
  parent: AngeliA.Util
  langs:
  - csharp
  - vb
  name: ReadChar(ref byte*, byte*)
  nameWithType: Util.ReadChar(ref byte*, byte*)
  fullName: AngeliA.Util.ReadChar(ref byte*, byte*)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/Util_Misc.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: ReadChar
    path: ../AngeliA Framework/src/Utility/Util_Misc.cs
    startLine: 645
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static char ReadChar(ref byte* p, byte* end)
    parameters:
    - id: p
      type: System.Byte*
    - id: end
      type: System.Byte*
    return:
      type: System.Char
    content.vb: Public Shared Function ReadChar(p As Byte*, [end] As Byte*) As Char
  overload: AngeliA.Util.ReadChar*
  nameWithType.vb: Util.ReadChar(Byte*, Byte*)
  fullName.vb: AngeliA.Util.ReadChar(Byte*, Byte*)
  name.vb: ReadChar(Byte*, Byte*)
- uid: AngeliA.Util.ReadShort(System.Byte*@,System.Byte*)
  commentId: M:AngeliA.Util.ReadShort(System.Byte*@,System.Byte*)
  id: ReadShort(System.Byte*@,System.Byte*)
  parent: AngeliA.Util
  langs:
  - csharp
  - vb
  name: ReadShort(ref byte*, byte*)
  nameWithType: Util.ReadShort(ref byte*, byte*)
  fullName: AngeliA.Util.ReadShort(ref byte*, byte*)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/Util_Misc.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: ReadShort
    path: ../AngeliA Framework/src/Utility/Util_Misc.cs
    startLine: 649
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static short ReadShort(ref byte* p, byte* end)
    parameters:
    - id: p
      type: System.Byte*
    - id: end
      type: System.Byte*
    return:
      type: System.Int16
    content.vb: Public Shared Function ReadShort(p As Byte*, [end] As Byte*) As Short
  overload: AngeliA.Util.ReadShort*
  nameWithType.vb: Util.ReadShort(Byte*, Byte*)
  fullName.vb: AngeliA.Util.ReadShort(Byte*, Byte*)
  name.vb: ReadShort(Byte*, Byte*)
- uid: AngeliA.Util.ReadUShort(System.Byte*@,System.Byte*)
  commentId: M:AngeliA.Util.ReadUShort(System.Byte*@,System.Byte*)
  id: ReadUShort(System.Byte*@,System.Byte*)
  parent: AngeliA.Util
  langs:
  - csharp
  - vb
  name: ReadUShort(ref byte*, byte*)
  nameWithType: Util.ReadUShort(ref byte*, byte*)
  fullName: AngeliA.Util.ReadUShort(ref byte*, byte*)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/Util_Misc.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: ReadUShort
    path: ../AngeliA Framework/src/Utility/Util_Misc.cs
    startLine: 653
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static ushort ReadUShort(ref byte* p, byte* end)
    parameters:
    - id: p
      type: System.Byte*
    - id: end
      type: System.Byte*
    return:
      type: System.UInt16
    content.vb: Public Shared Function ReadUShort(p As Byte*, [end] As Byte*) As UShort
  overload: AngeliA.Util.ReadUShort*
  nameWithType.vb: Util.ReadUShort(Byte*, Byte*)
  fullName.vb: AngeliA.Util.ReadUShort(Byte*, Byte*)
  name.vb: ReadUShort(Byte*, Byte*)
- uid: AngeliA.Util.ReadInt(System.Byte*@,System.Byte*)
  commentId: M:AngeliA.Util.ReadInt(System.Byte*@,System.Byte*)
  id: ReadInt(System.Byte*@,System.Byte*)
  parent: AngeliA.Util
  langs:
  - csharp
  - vb
  name: ReadInt(ref byte*, byte*)
  nameWithType: Util.ReadInt(ref byte*, byte*)
  fullName: AngeliA.Util.ReadInt(ref byte*, byte*)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/Util_Misc.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: ReadInt
    path: ../AngeliA Framework/src/Utility/Util_Misc.cs
    startLine: 657
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static int ReadInt(ref byte* p, byte* end)
    parameters:
    - id: p
      type: System.Byte*
    - id: end
      type: System.Byte*
    return:
      type: System.Int32
    content.vb: Public Shared Function ReadInt(p As Byte*, [end] As Byte*) As Integer
  overload: AngeliA.Util.ReadInt*
  nameWithType.vb: Util.ReadInt(Byte*, Byte*)
  fullName.vb: AngeliA.Util.ReadInt(Byte*, Byte*)
  name.vb: ReadInt(Byte*, Byte*)
- uid: AngeliA.Util.ReadUInt(System.Byte*@,System.Byte*)
  commentId: M:AngeliA.Util.ReadUInt(System.Byte*@,System.Byte*)
  id: ReadUInt(System.Byte*@,System.Byte*)
  parent: AngeliA.Util
  langs:
  - csharp
  - vb
  name: ReadUInt(ref byte*, byte*)
  nameWithType: Util.ReadUInt(ref byte*, byte*)
  fullName: AngeliA.Util.ReadUInt(ref byte*, byte*)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/Util_Misc.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: ReadUInt
    path: ../AngeliA Framework/src/Utility/Util_Misc.cs
    startLine: 661
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static uint ReadUInt(ref byte* p, byte* end)
    parameters:
    - id: p
      type: System.Byte*
    - id: end
      type: System.Byte*
    return:
      type: System.UInt32
    content.vb: Public Shared Function ReadUInt(p As Byte*, [end] As Byte*) As UInteger
  overload: AngeliA.Util.ReadUInt*
  nameWithType.vb: Util.ReadUInt(Byte*, Byte*)
  fullName.vb: AngeliA.Util.ReadUInt(Byte*, Byte*)
  name.vb: ReadUInt(Byte*, Byte*)
- uid: AngeliA.Util.ReadFloat(System.Byte*@,System.Byte*)
  commentId: M:AngeliA.Util.ReadFloat(System.Byte*@,System.Byte*)
  id: ReadFloat(System.Byte*@,System.Byte*)
  parent: AngeliA.Util
  langs:
  - csharp
  - vb
  name: ReadFloat(ref byte*, byte*)
  nameWithType: Util.ReadFloat(ref byte*, byte*)
  fullName: AngeliA.Util.ReadFloat(ref byte*, byte*)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/Util_Misc.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: ReadFloat
    path: ../AngeliA Framework/src/Utility/Util_Misc.cs
    startLine: 665
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static float ReadFloat(ref byte* p, byte* end)
    parameters:
    - id: p
      type: System.Byte*
    - id: end
      type: System.Byte*
    return:
      type: System.Single
    content.vb: Public Shared Function ReadFloat(p As Byte*, [end] As Byte*) As Single
  overload: AngeliA.Util.ReadFloat*
  nameWithType.vb: Util.ReadFloat(Byte*, Byte*)
  fullName.vb: AngeliA.Util.ReadFloat(Byte*, Byte*)
  name.vb: ReadFloat(Byte*, Byte*)
- uid: AngeliA.Util.ReadLong(System.Byte*@,System.Byte*)
  commentId: M:AngeliA.Util.ReadLong(System.Byte*@,System.Byte*)
  id: ReadLong(System.Byte*@,System.Byte*)
  parent: AngeliA.Util
  langs:
  - csharp
  - vb
  name: ReadLong(ref byte*, byte*)
  nameWithType: Util.ReadLong(ref byte*, byte*)
  fullName: AngeliA.Util.ReadLong(ref byte*, byte*)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/Util_Misc.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: ReadLong
    path: ../AngeliA Framework/src/Utility/Util_Misc.cs
    startLine: 669
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static long ReadLong(ref byte* p, byte* end)
    parameters:
    - id: p
      type: System.Byte*
    - id: end
      type: System.Byte*
    return:
      type: System.Int64
    content.vb: Public Shared Function ReadLong(p As Byte*, [end] As Byte*) As Long
  overload: AngeliA.Util.ReadLong*
  nameWithType.vb: Util.ReadLong(Byte*, Byte*)
  fullName.vb: AngeliA.Util.ReadLong(Byte*, Byte*)
  name.vb: ReadLong(Byte*, Byte*)
- uid: AngeliA.Util.ReadULong(System.Byte*@,System.Byte*)
  commentId: M:AngeliA.Util.ReadULong(System.Byte*@,System.Byte*)
  id: ReadULong(System.Byte*@,System.Byte*)
  parent: AngeliA.Util
  langs:
  - csharp
  - vb
  name: ReadULong(ref byte*, byte*)
  nameWithType: Util.ReadULong(ref byte*, byte*)
  fullName: AngeliA.Util.ReadULong(ref byte*, byte*)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/Util_Misc.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: ReadULong
    path: ../AngeliA Framework/src/Utility/Util_Misc.cs
    startLine: 673
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static ulong ReadULong(ref byte* p, byte* end)
    parameters:
    - id: p
      type: System.Byte*
    - id: end
      type: System.Byte*
    return:
      type: System.UInt64
    content.vb: Public Shared Function ReadULong(p As Byte*, [end] As Byte*) As ULong
  overload: AngeliA.Util.ReadULong*
  nameWithType.vb: Util.ReadULong(Byte*, Byte*)
  fullName.vb: AngeliA.Util.ReadULong(Byte*, Byte*)
  name.vb: ReadULong(Byte*, Byte*)
- uid: AngeliA.Util.ReadDouble(System.Byte*@,System.Byte*)
  commentId: M:AngeliA.Util.ReadDouble(System.Byte*@,System.Byte*)
  id: ReadDouble(System.Byte*@,System.Byte*)
  parent: AngeliA.Util
  langs:
  - csharp
  - vb
  name: ReadDouble(ref byte*, byte*)
  nameWithType: Util.ReadDouble(ref byte*, byte*)
  fullName: AngeliA.Util.ReadDouble(ref byte*, byte*)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/Util_Misc.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: ReadDouble
    path: ../AngeliA Framework/src/Utility/Util_Misc.cs
    startLine: 677
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static double ReadDouble(ref byte* p, byte* end)
    parameters:
    - id: p
      type: System.Byte*
    - id: end
      type: System.Byte*
    return:
      type: System.Double
    content.vb: Public Shared Function ReadDouble(p As Byte*, [end] As Byte*) As Double
  overload: AngeliA.Util.ReadDouble*
  nameWithType.vb: Util.ReadDouble(Byte*, Byte*)
  fullName.vb: AngeliA.Util.ReadDouble(Byte*, Byte*)
  name.vb: ReadDouble(Byte*, Byte*)
- uid: AngeliA.Util.ReadBytes(System.Byte*@,System.Int32,System.Byte*)
  commentId: M:AngeliA.Util.ReadBytes(System.Byte*@,System.Int32,System.Byte*)
  id: ReadBytes(System.Byte*@,System.Int32,System.Byte*)
  parent: AngeliA.Util
  langs:
  - csharp
  - vb
  name: ReadBytes(ref byte*, int, byte*)
  nameWithType: Util.ReadBytes(ref byte*, int, byte*)
  fullName: AngeliA.Util.ReadBytes(ref byte*, int, byte*)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/Util_Misc.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: ReadBytes
    path: ../AngeliA Framework/src/Utility/Util_Misc.cs
    startLine: 681
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static byte[] ReadBytes(ref byte* p, int length, byte* end)
    parameters:
    - id: p
      type: System.Byte*
    - id: length
      type: System.Int32
    - id: end
      type: System.Byte*
    return:
      type: System.Byte[]
    content.vb: Public Shared Function ReadBytes(p As Byte*, length As Integer, [end] As Byte*) As Byte()
  overload: AngeliA.Util.ReadBytes*
  nameWithType.vb: Util.ReadBytes(Byte*, Integer, Byte*)
  fullName.vb: AngeliA.Util.ReadBytes(Byte*, Integer, Byte*)
  name.vb: ReadBytes(Byte*, Integer, Byte*)
- uid: AngeliA.Util.ReadByte(System.Byte*@)
  commentId: M:AngeliA.Util.ReadByte(System.Byte*@)
  id: ReadByte(System.Byte*@)
  parent: AngeliA.Util
  langs:
  - csharp
  - vb
  name: ReadByte(ref byte*)
  nameWithType: Util.ReadByte(ref byte*)
  fullName: AngeliA.Util.ReadByte(ref byte*)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/Util_Misc.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: ReadByte
    path: ../AngeliA Framework/src/Utility/Util_Misc.cs
    startLine: 686
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static byte ReadByte(ref byte* p)
    parameters:
    - id: p
      type: System.Byte*
    return:
      type: System.Byte
    content.vb: Public Shared Function ReadByte(p As Byte*) As Byte
  overload: AngeliA.Util.ReadByte*
  nameWithType.vb: Util.ReadByte(Byte*)
  fullName.vb: AngeliA.Util.ReadByte(Byte*)
  name.vb: ReadByte(Byte*)
- uid: AngeliA.Util.ReadSByte(System.Byte*@)
  commentId: M:AngeliA.Util.ReadSByte(System.Byte*@)
  id: ReadSByte(System.Byte*@)
  parent: AngeliA.Util
  langs:
  - csharp
  - vb
  name: ReadSByte(ref byte*)
  nameWithType: Util.ReadSByte(ref byte*)
  fullName: AngeliA.Util.ReadSByte(ref byte*)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/Util_Misc.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: ReadSByte
    path: ../AngeliA Framework/src/Utility/Util_Misc.cs
    startLine: 691
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static sbyte ReadSByte(ref byte* p)
    parameters:
    - id: p
      type: System.Byte*
    return:
      type: System.SByte
    content.vb: Public Shared Function ReadSByte(p As Byte*) As SByte
  overload: AngeliA.Util.ReadSByte*
  nameWithType.vb: Util.ReadSByte(Byte*)
  fullName.vb: AngeliA.Util.ReadSByte(Byte*)
  name.vb: ReadSByte(Byte*)
- uid: AngeliA.Util.ReadBool(System.Byte*@)
  commentId: M:AngeliA.Util.ReadBool(System.Byte*@)
  id: ReadBool(System.Byte*@)
  parent: AngeliA.Util
  langs:
  - csharp
  - vb
  name: ReadBool(ref byte*)
  nameWithType: Util.ReadBool(ref byte*)
  fullName: AngeliA.Util.ReadBool(ref byte*)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/Util_Misc.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: ReadBool
    path: ../AngeliA Framework/src/Utility/Util_Misc.cs
    startLine: 696
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static bool ReadBool(ref byte* p)
    parameters:
    - id: p
      type: System.Byte*
    return:
      type: System.Boolean
    content.vb: Public Shared Function ReadBool(p As Byte*) As Boolean
  overload: AngeliA.Util.ReadBool*
  nameWithType.vb: Util.ReadBool(Byte*)
  fullName.vb: AngeliA.Util.ReadBool(Byte*)
  name.vb: ReadBool(Byte*)
- uid: AngeliA.Util.ReadChar(System.Byte*@)
  commentId: M:AngeliA.Util.ReadChar(System.Byte*@)
  id: ReadChar(System.Byte*@)
  parent: AngeliA.Util
  langs:
  - csharp
  - vb
  name: ReadChar(ref byte*)
  nameWithType: Util.ReadChar(ref byte*)
  fullName: AngeliA.Util.ReadChar(ref byte*)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/Util_Misc.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: ReadChar
    path: ../AngeliA Framework/src/Utility/Util_Misc.cs
    startLine: 701
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static char ReadChar(ref byte* p)
    parameters:
    - id: p
      type: System.Byte*
    return:
      type: System.Char
    content.vb: Public Shared Function ReadChar(p As Byte*) As Char
  overload: AngeliA.Util.ReadChar*
  nameWithType.vb: Util.ReadChar(Byte*)
  fullName.vb: AngeliA.Util.ReadChar(Byte*)
  name.vb: ReadChar(Byte*)
- uid: AngeliA.Util.ReadShort(System.Byte*@)
  commentId: M:AngeliA.Util.ReadShort(System.Byte*@)
  id: ReadShort(System.Byte*@)
  parent: AngeliA.Util
  langs:
  - csharp
  - vb
  name: ReadShort(ref byte*)
  nameWithType: Util.ReadShort(ref byte*)
  fullName: AngeliA.Util.ReadShort(ref byte*)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/Util_Misc.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: ReadShort
    path: ../AngeliA Framework/src/Utility/Util_Misc.cs
    startLine: 706
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static short ReadShort(ref byte* p)
    parameters:
    - id: p
      type: System.Byte*
    return:
      type: System.Int16
    content.vb: Public Shared Function ReadShort(p As Byte*) As Short
  overload: AngeliA.Util.ReadShort*
  nameWithType.vb: Util.ReadShort(Byte*)
  fullName.vb: AngeliA.Util.ReadShort(Byte*)
  name.vb: ReadShort(Byte*)
- uid: AngeliA.Util.ReadUShort(System.Byte*@)
  commentId: M:AngeliA.Util.ReadUShort(System.Byte*@)
  id: ReadUShort(System.Byte*@)
  parent: AngeliA.Util
  langs:
  - csharp
  - vb
  name: ReadUShort(ref byte*)
  nameWithType: Util.ReadUShort(ref byte*)
  fullName: AngeliA.Util.ReadUShort(ref byte*)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/Util_Misc.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: ReadUShort
    path: ../AngeliA Framework/src/Utility/Util_Misc.cs
    startLine: 711
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static ushort ReadUShort(ref byte* p)
    parameters:
    - id: p
      type: System.Byte*
    return:
      type: System.UInt16
    content.vb: Public Shared Function ReadUShort(p As Byte*) As UShort
  overload: AngeliA.Util.ReadUShort*
  nameWithType.vb: Util.ReadUShort(Byte*)
  fullName.vb: AngeliA.Util.ReadUShort(Byte*)
  name.vb: ReadUShort(Byte*)
- uid: AngeliA.Util.ReadInt(System.Byte*@)
  commentId: M:AngeliA.Util.ReadInt(System.Byte*@)
  id: ReadInt(System.Byte*@)
  parent: AngeliA.Util
  langs:
  - csharp
  - vb
  name: ReadInt(ref byte*)
  nameWithType: Util.ReadInt(ref byte*)
  fullName: AngeliA.Util.ReadInt(ref byte*)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/Util_Misc.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: ReadInt
    path: ../AngeliA Framework/src/Utility/Util_Misc.cs
    startLine: 716
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static int ReadInt(ref byte* p)
    parameters:
    - id: p
      type: System.Byte*
    return:
      type: System.Int32
    content.vb: Public Shared Function ReadInt(p As Byte*) As Integer
  overload: AngeliA.Util.ReadInt*
  nameWithType.vb: Util.ReadInt(Byte*)
  fullName.vb: AngeliA.Util.ReadInt(Byte*)
  name.vb: ReadInt(Byte*)
- uid: AngeliA.Util.ReadUInt(System.Byte*@)
  commentId: M:AngeliA.Util.ReadUInt(System.Byte*@)
  id: ReadUInt(System.Byte*@)
  parent: AngeliA.Util
  langs:
  - csharp
  - vb
  name: ReadUInt(ref byte*)
  nameWithType: Util.ReadUInt(ref byte*)
  fullName: AngeliA.Util.ReadUInt(ref byte*)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/Util_Misc.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: ReadUInt
    path: ../AngeliA Framework/src/Utility/Util_Misc.cs
    startLine: 721
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static uint ReadUInt(ref byte* p)
    parameters:
    - id: p
      type: System.Byte*
    return:
      type: System.UInt32
    content.vb: Public Shared Function ReadUInt(p As Byte*) As UInteger
  overload: AngeliA.Util.ReadUInt*
  nameWithType.vb: Util.ReadUInt(Byte*)
  fullName.vb: AngeliA.Util.ReadUInt(Byte*)
  name.vb: ReadUInt(Byte*)
- uid: AngeliA.Util.ReadFloat(System.Byte*@)
  commentId: M:AngeliA.Util.ReadFloat(System.Byte*@)
  id: ReadFloat(System.Byte*@)
  parent: AngeliA.Util
  langs:
  - csharp
  - vb
  name: ReadFloat(ref byte*)
  nameWithType: Util.ReadFloat(ref byte*)
  fullName: AngeliA.Util.ReadFloat(ref byte*)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/Util_Misc.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: ReadFloat
    path: ../AngeliA Framework/src/Utility/Util_Misc.cs
    startLine: 726
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static float ReadFloat(ref byte* p)
    parameters:
    - id: p
      type: System.Byte*
    return:
      type: System.Single
    content.vb: Public Shared Function ReadFloat(p As Byte*) As Single
  overload: AngeliA.Util.ReadFloat*
  nameWithType.vb: Util.ReadFloat(Byte*)
  fullName.vb: AngeliA.Util.ReadFloat(Byte*)
  name.vb: ReadFloat(Byte*)
- uid: AngeliA.Util.ReadLong(System.Byte*@)
  commentId: M:AngeliA.Util.ReadLong(System.Byte*@)
  id: ReadLong(System.Byte*@)
  parent: AngeliA.Util
  langs:
  - csharp
  - vb
  name: ReadLong(ref byte*)
  nameWithType: Util.ReadLong(ref byte*)
  fullName: AngeliA.Util.ReadLong(ref byte*)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/Util_Misc.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: ReadLong
    path: ../AngeliA Framework/src/Utility/Util_Misc.cs
    startLine: 731
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static long ReadLong(ref byte* p)
    parameters:
    - id: p
      type: System.Byte*
    return:
      type: System.Int64
    content.vb: Public Shared Function ReadLong(p As Byte*) As Long
  overload: AngeliA.Util.ReadLong*
  nameWithType.vb: Util.ReadLong(Byte*)
  fullName.vb: AngeliA.Util.ReadLong(Byte*)
  name.vb: ReadLong(Byte*)
- uid: AngeliA.Util.ReadULong(System.Byte*@)
  commentId: M:AngeliA.Util.ReadULong(System.Byte*@)
  id: ReadULong(System.Byte*@)
  parent: AngeliA.Util
  langs:
  - csharp
  - vb
  name: ReadULong(ref byte*)
  nameWithType: Util.ReadULong(ref byte*)
  fullName: AngeliA.Util.ReadULong(ref byte*)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/Util_Misc.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: ReadULong
    path: ../AngeliA Framework/src/Utility/Util_Misc.cs
    startLine: 736
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static ulong ReadULong(ref byte* p)
    parameters:
    - id: p
      type: System.Byte*
    return:
      type: System.UInt64
    content.vb: Public Shared Function ReadULong(p As Byte*) As ULong
  overload: AngeliA.Util.ReadULong*
  nameWithType.vb: Util.ReadULong(Byte*)
  fullName.vb: AngeliA.Util.ReadULong(Byte*)
  name.vb: ReadULong(Byte*)
- uid: AngeliA.Util.ReadDouble(System.Byte*@)
  commentId: M:AngeliA.Util.ReadDouble(System.Byte*@)
  id: ReadDouble(System.Byte*@)
  parent: AngeliA.Util
  langs:
  - csharp
  - vb
  name: ReadDouble(ref byte*)
  nameWithType: Util.ReadDouble(ref byte*)
  fullName: AngeliA.Util.ReadDouble(ref byte*)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/Util_Misc.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: ReadDouble
    path: ../AngeliA Framework/src/Utility/Util_Misc.cs
    startLine: 741
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static double ReadDouble(ref byte* p)
    parameters:
    - id: p
      type: System.Byte*
    return:
      type: System.Double
    content.vb: Public Shared Function ReadDouble(p As Byte*) As Double
  overload: AngeliA.Util.ReadDouble*
  nameWithType.vb: Util.ReadDouble(Byte*)
  fullName.vb: AngeliA.Util.ReadDouble(Byte*)
  name.vb: ReadDouble(Byte*)
- uid: AngeliA.Util.ReadBytes(System.Byte*@,System.Int32)
  commentId: M:AngeliA.Util.ReadBytes(System.Byte*@,System.Int32)
  id: ReadBytes(System.Byte*@,System.Int32)
  parent: AngeliA.Util
  langs:
  - csharp
  - vb
  name: ReadBytes(ref byte*, int)
  nameWithType: Util.ReadBytes(ref byte*, int)
  fullName: AngeliA.Util.ReadBytes(ref byte*, int)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/Util_Misc.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: ReadBytes
    path: ../AngeliA Framework/src/Utility/Util_Misc.cs
    startLine: 746
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static byte[] ReadBytes(ref byte* p, int length)
    parameters:
    - id: p
      type: System.Byte*
    - id: length
      type: System.Int32
    return:
      type: System.Byte[]
    content.vb: Public Shared Function ReadBytes(p As Byte*, length As Integer) As Byte()
  overload: AngeliA.Util.ReadBytes*
  nameWithType.vb: Util.ReadBytes(Byte*, Integer)
  fullName.vb: AngeliA.Util.ReadBytes(Byte*, Integer)
  name.vb: ReadBytes(Byte*, Integer)
- uid: AngeliA.Util.Write(System.Byte*@,System.Byte,System.Byte*)
  commentId: M:AngeliA.Util.Write(System.Byte*@,System.Byte,System.Byte*)
  id: Write(System.Byte*@,System.Byte,System.Byte*)
  parent: AngeliA.Util
  langs:
  - csharp
  - vb
  name: Write(ref byte*, byte, byte*)
  nameWithType: Util.Write(ref byte*, byte, byte*)
  fullName: AngeliA.Util.Write(ref byte*, byte, byte*)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/Util_Misc.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: Write
    path: ../AngeliA Framework/src/Utility/Util_Misc.cs
    startLine: 756
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static void Write(ref byte* p, byte value, byte* end)
    parameters:
    - id: p
      type: System.Byte*
    - id: value
      type: System.Byte
    - id: end
      type: System.Byte*
    content.vb: Public Shared Sub Write(p As Byte*, value As Byte, [end] As Byte*)
  overload: AngeliA.Util.Write*
  nameWithType.vb: Util.Write(Byte*, Byte, Byte*)
  fullName.vb: AngeliA.Util.Write(Byte*, Byte, Byte*)
  name.vb: Write(Byte*, Byte, Byte*)
- uid: AngeliA.Util.Write(System.Byte*@,System.SByte,System.Byte*)
  commentId: M:AngeliA.Util.Write(System.Byte*@,System.SByte,System.Byte*)
  id: Write(System.Byte*@,System.SByte,System.Byte*)
  parent: AngeliA.Util
  langs:
  - csharp
  - vb
  name: Write(ref byte*, sbyte, byte*)
  nameWithType: Util.Write(ref byte*, sbyte, byte*)
  fullName: AngeliA.Util.Write(ref byte*, sbyte, byte*)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/Util_Misc.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: Write
    path: ../AngeliA Framework/src/Utility/Util_Misc.cs
    startLine: 760
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static void Write(ref byte* p, sbyte value, byte* end)
    parameters:
    - id: p
      type: System.Byte*
    - id: value
      type: System.SByte
    - id: end
      type: System.Byte*
    content.vb: Public Shared Sub Write(p As Byte*, value As SByte, [end] As Byte*)
  overload: AngeliA.Util.Write*
  nameWithType.vb: Util.Write(Byte*, SByte, Byte*)
  fullName.vb: AngeliA.Util.Write(Byte*, SByte, Byte*)
  name.vb: Write(Byte*, SByte, Byte*)
- uid: AngeliA.Util.Write(System.Byte*@,System.Boolean,System.Byte*)
  commentId: M:AngeliA.Util.Write(System.Byte*@,System.Boolean,System.Byte*)
  id: Write(System.Byte*@,System.Boolean,System.Byte*)
  parent: AngeliA.Util
  langs:
  - csharp
  - vb
  name: Write(ref byte*, bool, byte*)
  nameWithType: Util.Write(ref byte*, bool, byte*)
  fullName: AngeliA.Util.Write(ref byte*, bool, byte*)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/Util_Misc.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: Write
    path: ../AngeliA Framework/src/Utility/Util_Misc.cs
    startLine: 764
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static void Write(ref byte* p, bool value, byte* end)
    parameters:
    - id: p
      type: System.Byte*
    - id: value
      type: System.Boolean
    - id: end
      type: System.Byte*
    content.vb: Public Shared Sub Write(p As Byte*, value As Boolean, [end] As Byte*)
  overload: AngeliA.Util.Write*
  nameWithType.vb: Util.Write(Byte*, Boolean, Byte*)
  fullName.vb: AngeliA.Util.Write(Byte*, Boolean, Byte*)
  name.vb: Write(Byte*, Boolean, Byte*)
- uid: AngeliA.Util.Write(System.Byte*@,System.Char,System.Byte*)
  commentId: M:AngeliA.Util.Write(System.Byte*@,System.Char,System.Byte*)
  id: Write(System.Byte*@,System.Char,System.Byte*)
  parent: AngeliA.Util
  langs:
  - csharp
  - vb
  name: Write(ref byte*, char, byte*)
  nameWithType: Util.Write(ref byte*, char, byte*)
  fullName: AngeliA.Util.Write(ref byte*, char, byte*)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/Util_Misc.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: Write
    path: ../AngeliA Framework/src/Utility/Util_Misc.cs
    startLine: 768
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static void Write(ref byte* p, char value, byte* end)
    parameters:
    - id: p
      type: System.Byte*
    - id: value
      type: System.Char
    - id: end
      type: System.Byte*
    content.vb: Public Shared Sub Write(p As Byte*, value As Char, [end] As Byte*)
  overload: AngeliA.Util.Write*
  nameWithType.vb: Util.Write(Byte*, Char, Byte*)
  fullName.vb: AngeliA.Util.Write(Byte*, Char, Byte*)
  name.vb: Write(Byte*, Char, Byte*)
- uid: AngeliA.Util.Write(System.Byte*@,System.Int16,System.Byte*)
  commentId: M:AngeliA.Util.Write(System.Byte*@,System.Int16,System.Byte*)
  id: Write(System.Byte*@,System.Int16,System.Byte*)
  parent: AngeliA.Util
  langs:
  - csharp
  - vb
  name: Write(ref byte*, short, byte*)
  nameWithType: Util.Write(ref byte*, short, byte*)
  fullName: AngeliA.Util.Write(ref byte*, short, byte*)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/Util_Misc.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: Write
    path: ../AngeliA Framework/src/Utility/Util_Misc.cs
    startLine: 772
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static void Write(ref byte* p, short value, byte* end)
    parameters:
    - id: p
      type: System.Byte*
    - id: value
      type: System.Int16
    - id: end
      type: System.Byte*
    content.vb: Public Shared Sub Write(p As Byte*, value As Short, [end] As Byte*)
  overload: AngeliA.Util.Write*
  nameWithType.vb: Util.Write(Byte*, Short, Byte*)
  fullName.vb: AngeliA.Util.Write(Byte*, Short, Byte*)
  name.vb: Write(Byte*, Short, Byte*)
- uid: AngeliA.Util.Write(System.Byte*@,System.UInt16,System.Byte*)
  commentId: M:AngeliA.Util.Write(System.Byte*@,System.UInt16,System.Byte*)
  id: Write(System.Byte*@,System.UInt16,System.Byte*)
  parent: AngeliA.Util
  langs:
  - csharp
  - vb
  name: Write(ref byte*, ushort, byte*)
  nameWithType: Util.Write(ref byte*, ushort, byte*)
  fullName: AngeliA.Util.Write(ref byte*, ushort, byte*)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/Util_Misc.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: Write
    path: ../AngeliA Framework/src/Utility/Util_Misc.cs
    startLine: 776
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static void Write(ref byte* p, ushort value, byte* end)
    parameters:
    - id: p
      type: System.Byte*
    - id: value
      type: System.UInt16
    - id: end
      type: System.Byte*
    content.vb: Public Shared Sub Write(p As Byte*, value As UShort, [end] As Byte*)
  overload: AngeliA.Util.Write*
  nameWithType.vb: Util.Write(Byte*, UShort, Byte*)
  fullName.vb: AngeliA.Util.Write(Byte*, UShort, Byte*)
  name.vb: Write(Byte*, UShort, Byte*)
- uid: AngeliA.Util.Write(System.Byte*@,System.Int32,System.Byte*)
  commentId: M:AngeliA.Util.Write(System.Byte*@,System.Int32,System.Byte*)
  id: Write(System.Byte*@,System.Int32,System.Byte*)
  parent: AngeliA.Util
  langs:
  - csharp
  - vb
  name: Write(ref byte*, int, byte*)
  nameWithType: Util.Write(ref byte*, int, byte*)
  fullName: AngeliA.Util.Write(ref byte*, int, byte*)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/Util_Misc.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: Write
    path: ../AngeliA Framework/src/Utility/Util_Misc.cs
    startLine: 780
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static void Write(ref byte* p, int value, byte* end)
    parameters:
    - id: p
      type: System.Byte*
    - id: value
      type: System.Int32
    - id: end
      type: System.Byte*
    content.vb: Public Shared Sub Write(p As Byte*, value As Integer, [end] As Byte*)
  overload: AngeliA.Util.Write*
  nameWithType.vb: Util.Write(Byte*, Integer, Byte*)
  fullName.vb: AngeliA.Util.Write(Byte*, Integer, Byte*)
  name.vb: Write(Byte*, Integer, Byte*)
- uid: AngeliA.Util.Write(System.Byte*@,System.UInt32,System.Byte*)
  commentId: M:AngeliA.Util.Write(System.Byte*@,System.UInt32,System.Byte*)
  id: Write(System.Byte*@,System.UInt32,System.Byte*)
  parent: AngeliA.Util
  langs:
  - csharp
  - vb
  name: Write(ref byte*, uint, byte*)
  nameWithType: Util.Write(ref byte*, uint, byte*)
  fullName: AngeliA.Util.Write(ref byte*, uint, byte*)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/Util_Misc.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: Write
    path: ../AngeliA Framework/src/Utility/Util_Misc.cs
    startLine: 784
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static void Write(ref byte* p, uint value, byte* end)
    parameters:
    - id: p
      type: System.Byte*
    - id: value
      type: System.UInt32
    - id: end
      type: System.Byte*
    content.vb: Public Shared Sub Write(p As Byte*, value As UInteger, [end] As Byte*)
  overload: AngeliA.Util.Write*
  nameWithType.vb: Util.Write(Byte*, UInteger, Byte*)
  fullName.vb: AngeliA.Util.Write(Byte*, UInteger, Byte*)
  name.vb: Write(Byte*, UInteger, Byte*)
- uid: AngeliA.Util.Write(System.Byte*@,System.Single,System.Byte*)
  commentId: M:AngeliA.Util.Write(System.Byte*@,System.Single,System.Byte*)
  id: Write(System.Byte*@,System.Single,System.Byte*)
  parent: AngeliA.Util
  langs:
  - csharp
  - vb
  name: Write(ref byte*, float, byte*)
  nameWithType: Util.Write(ref byte*, float, byte*)
  fullName: AngeliA.Util.Write(ref byte*, float, byte*)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/Util_Misc.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: Write
    path: ../AngeliA Framework/src/Utility/Util_Misc.cs
    startLine: 788
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static void Write(ref byte* p, float value, byte* end)
    parameters:
    - id: p
      type: System.Byte*
    - id: value
      type: System.Single
    - id: end
      type: System.Byte*
    content.vb: Public Shared Sub Write(p As Byte*, value As Single, [end] As Byte*)
  overload: AngeliA.Util.Write*
  nameWithType.vb: Util.Write(Byte*, Single, Byte*)
  fullName.vb: AngeliA.Util.Write(Byte*, Single, Byte*)
  name.vb: Write(Byte*, Single, Byte*)
- uid: AngeliA.Util.Write(System.Byte*@,System.Int64,System.Byte*)
  commentId: M:AngeliA.Util.Write(System.Byte*@,System.Int64,System.Byte*)
  id: Write(System.Byte*@,System.Int64,System.Byte*)
  parent: AngeliA.Util
  langs:
  - csharp
  - vb
  name: Write(ref byte*, long, byte*)
  nameWithType: Util.Write(ref byte*, long, byte*)
  fullName: AngeliA.Util.Write(ref byte*, long, byte*)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/Util_Misc.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: Write
    path: ../AngeliA Framework/src/Utility/Util_Misc.cs
    startLine: 792
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static void Write(ref byte* p, long value, byte* end)
    parameters:
    - id: p
      type: System.Byte*
    - id: value
      type: System.Int64
    - id: end
      type: System.Byte*
    content.vb: Public Shared Sub Write(p As Byte*, value As Long, [end] As Byte*)
  overload: AngeliA.Util.Write*
  nameWithType.vb: Util.Write(Byte*, Long, Byte*)
  fullName.vb: AngeliA.Util.Write(Byte*, Long, Byte*)
  name.vb: Write(Byte*, Long, Byte*)
- uid: AngeliA.Util.Write(System.Byte*@,System.UInt64,System.Byte*)
  commentId: M:AngeliA.Util.Write(System.Byte*@,System.UInt64,System.Byte*)
  id: Write(System.Byte*@,System.UInt64,System.Byte*)
  parent: AngeliA.Util
  langs:
  - csharp
  - vb
  name: Write(ref byte*, ulong, byte*)
  nameWithType: Util.Write(ref byte*, ulong, byte*)
  fullName: AngeliA.Util.Write(ref byte*, ulong, byte*)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/Util_Misc.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: Write
    path: ../AngeliA Framework/src/Utility/Util_Misc.cs
    startLine: 796
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static void Write(ref byte* p, ulong value, byte* end)
    parameters:
    - id: p
      type: System.Byte*
    - id: value
      type: System.UInt64
    - id: end
      type: System.Byte*
    content.vb: Public Shared Sub Write(p As Byte*, value As ULong, [end] As Byte*)
  overload: AngeliA.Util.Write*
  nameWithType.vb: Util.Write(Byte*, ULong, Byte*)
  fullName.vb: AngeliA.Util.Write(Byte*, ULong, Byte*)
  name.vb: Write(Byte*, ULong, Byte*)
- uid: AngeliA.Util.Write(System.Byte*@,System.Double,System.Byte*)
  commentId: M:AngeliA.Util.Write(System.Byte*@,System.Double,System.Byte*)
  id: Write(System.Byte*@,System.Double,System.Byte*)
  parent: AngeliA.Util
  langs:
  - csharp
  - vb
  name: Write(ref byte*, double, byte*)
  nameWithType: Util.Write(ref byte*, double, byte*)
  fullName: AngeliA.Util.Write(ref byte*, double, byte*)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/Util_Misc.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: Write
    path: ../AngeliA Framework/src/Utility/Util_Misc.cs
    startLine: 800
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static void Write(ref byte* p, double value, byte* end)
    parameters:
    - id: p
      type: System.Byte*
    - id: value
      type: System.Double
    - id: end
      type: System.Byte*
    content.vb: Public Shared Sub Write(p As Byte*, value As Double, [end] As Byte*)
  overload: AngeliA.Util.Write*
  nameWithType.vb: Util.Write(Byte*, Double, Byte*)
  fullName.vb: AngeliA.Util.Write(Byte*, Double, Byte*)
  name.vb: Write(Byte*, Double, Byte*)
- uid: AngeliA.Util.Write(System.Byte*@,System.Byte[],System.Int32,System.Byte*)
  commentId: M:AngeliA.Util.Write(System.Byte*@,System.Byte[],System.Int32,System.Byte*)
  id: Write(System.Byte*@,System.Byte[],System.Int32,System.Byte*)
  parent: AngeliA.Util
  langs:
  - csharp
  - vb
  name: Write(ref byte*, byte[], int, byte*)
  nameWithType: Util.Write(ref byte*, byte[], int, byte*)
  fullName: AngeliA.Util.Write(ref byte*, byte[], int, byte*)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/Util_Misc.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: Write
    path: ../AngeliA Framework/src/Utility/Util_Misc.cs
    startLine: 804
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static void Write(ref byte* p, byte[] bytes, int length, byte* end)
    parameters:
    - id: p
      type: System.Byte*
    - id: bytes
      type: System.Byte[]
    - id: length
      type: System.Int32
    - id: end
      type: System.Byte*
    content.vb: Public Shared Sub Write(p As Byte*, bytes As Byte(), length As Integer, [end] As Byte*)
  overload: AngeliA.Util.Write*
  nameWithType.vb: Util.Write(Byte*, Byte(), Integer, Byte*)
  fullName.vb: AngeliA.Util.Write(Byte*, Byte(), Integer, Byte*)
  name.vb: Write(Byte*, Byte(), Integer, Byte*)
- uid: AngeliA.Util.Write(System.Byte*@,System.Byte)
  commentId: M:AngeliA.Util.Write(System.Byte*@,System.Byte)
  id: Write(System.Byte*@,System.Byte)
  parent: AngeliA.Util
  langs:
  - csharp
  - vb
  name: Write(ref byte*, byte)
  nameWithType: Util.Write(ref byte*, byte)
  fullName: AngeliA.Util.Write(ref byte*, byte)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/Util_Misc.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: Write
    path: ../AngeliA Framework/src/Utility/Util_Misc.cs
    startLine: 810
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static void Write(ref byte* p, byte value)
    parameters:
    - id: p
      type: System.Byte*
    - id: value
      type: System.Byte
    content.vb: Public Shared Sub Write(p As Byte*, value As Byte)
  overload: AngeliA.Util.Write*
  nameWithType.vb: Util.Write(Byte*, Byte)
  fullName.vb: AngeliA.Util.Write(Byte*, Byte)
  name.vb: Write(Byte*, Byte)
- uid: AngeliA.Util.Write(System.Byte*@,System.SByte)
  commentId: M:AngeliA.Util.Write(System.Byte*@,System.SByte)
  id: Write(System.Byte*@,System.SByte)
  parent: AngeliA.Util
  langs:
  - csharp
  - vb
  name: Write(ref byte*, sbyte)
  nameWithType: Util.Write(ref byte*, sbyte)
  fullName: AngeliA.Util.Write(ref byte*, sbyte)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/Util_Misc.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: Write
    path: ../AngeliA Framework/src/Utility/Util_Misc.cs
    startLine: 814
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static void Write(ref byte* p, sbyte value)
    parameters:
    - id: p
      type: System.Byte*
    - id: value
      type: System.SByte
    content.vb: Public Shared Sub Write(p As Byte*, value As SByte)
  overload: AngeliA.Util.Write*
  nameWithType.vb: Util.Write(Byte*, SByte)
  fullName.vb: AngeliA.Util.Write(Byte*, SByte)
  name.vb: Write(Byte*, SByte)
- uid: AngeliA.Util.Write(System.Byte*@,System.Boolean)
  commentId: M:AngeliA.Util.Write(System.Byte*@,System.Boolean)
  id: Write(System.Byte*@,System.Boolean)
  parent: AngeliA.Util
  langs:
  - csharp
  - vb
  name: Write(ref byte*, bool)
  nameWithType: Util.Write(ref byte*, bool)
  fullName: AngeliA.Util.Write(ref byte*, bool)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/Util_Misc.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: Write
    path: ../AngeliA Framework/src/Utility/Util_Misc.cs
    startLine: 819
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static void Write(ref byte* p, bool value)
    parameters:
    - id: p
      type: System.Byte*
    - id: value
      type: System.Boolean
    content.vb: Public Shared Sub Write(p As Byte*, value As Boolean)
  overload: AngeliA.Util.Write*
  nameWithType.vb: Util.Write(Byte*, Boolean)
  fullName.vb: AngeliA.Util.Write(Byte*, Boolean)
  name.vb: Write(Byte*, Boolean)
- uid: AngeliA.Util.Write(System.Byte*@,System.Char)
  commentId: M:AngeliA.Util.Write(System.Byte*@,System.Char)
  id: Write(System.Byte*@,System.Char)
  parent: AngeliA.Util
  langs:
  - csharp
  - vb
  name: Write(ref byte*, char)
  nameWithType: Util.Write(ref byte*, char)
  fullName: AngeliA.Util.Write(ref byte*, char)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/Util_Misc.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: Write
    path: ../AngeliA Framework/src/Utility/Util_Misc.cs
    startLine: 823
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static void Write(ref byte* p, char value)
    parameters:
    - id: p
      type: System.Byte*
    - id: value
      type: System.Char
    content.vb: Public Shared Sub Write(p As Byte*, value As Char)
  overload: AngeliA.Util.Write*
  nameWithType.vb: Util.Write(Byte*, Char)
  fullName.vb: AngeliA.Util.Write(Byte*, Char)
  name.vb: Write(Byte*, Char)
- uid: AngeliA.Util.Write(System.Byte*@,System.Int16)
  commentId: M:AngeliA.Util.Write(System.Byte*@,System.Int16)
  id: Write(System.Byte*@,System.Int16)
  parent: AngeliA.Util
  langs:
  - csharp
  - vb
  name: Write(ref byte*, short)
  nameWithType: Util.Write(ref byte*, short)
  fullName: AngeliA.Util.Write(ref byte*, short)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/Util_Misc.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: Write
    path: ../AngeliA Framework/src/Utility/Util_Misc.cs
    startLine: 828
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static void Write(ref byte* p, short value)
    parameters:
    - id: p
      type: System.Byte*
    - id: value
      type: System.Int16
    content.vb: Public Shared Sub Write(p As Byte*, value As Short)
  overload: AngeliA.Util.Write*
  nameWithType.vb: Util.Write(Byte*, Short)
  fullName.vb: AngeliA.Util.Write(Byte*, Short)
  name.vb: Write(Byte*, Short)
- uid: AngeliA.Util.Write(System.Byte*@,System.UInt16)
  commentId: M:AngeliA.Util.Write(System.Byte*@,System.UInt16)
  id: Write(System.Byte*@,System.UInt16)
  parent: AngeliA.Util
  langs:
  - csharp
  - vb
  name: Write(ref byte*, ushort)
  nameWithType: Util.Write(ref byte*, ushort)
  fullName: AngeliA.Util.Write(ref byte*, ushort)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/Util_Misc.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: Write
    path: ../AngeliA Framework/src/Utility/Util_Misc.cs
    startLine: 833
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static void Write(ref byte* p, ushort value)
    parameters:
    - id: p
      type: System.Byte*
    - id: value
      type: System.UInt16
    content.vb: Public Shared Sub Write(p As Byte*, value As UShort)
  overload: AngeliA.Util.Write*
  nameWithType.vb: Util.Write(Byte*, UShort)
  fullName.vb: AngeliA.Util.Write(Byte*, UShort)
  name.vb: Write(Byte*, UShort)
- uid: AngeliA.Util.Write(System.Byte*@,System.Int32)
  commentId: M:AngeliA.Util.Write(System.Byte*@,System.Int32)
  id: Write(System.Byte*@,System.Int32)
  parent: AngeliA.Util
  langs:
  - csharp
  - vb
  name: Write(ref byte*, int)
  nameWithType: Util.Write(ref byte*, int)
  fullName: AngeliA.Util.Write(ref byte*, int)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/Util_Misc.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: Write
    path: ../AngeliA Framework/src/Utility/Util_Misc.cs
    startLine: 838
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static void Write(ref byte* p, int value)
    parameters:
    - id: p
      type: System.Byte*
    - id: value
      type: System.Int32
    content.vb: Public Shared Sub Write(p As Byte*, value As Integer)
  overload: AngeliA.Util.Write*
  nameWithType.vb: Util.Write(Byte*, Integer)
  fullName.vb: AngeliA.Util.Write(Byte*, Integer)
  name.vb: Write(Byte*, Integer)
- uid: AngeliA.Util.Write(System.Byte*@,System.UInt32)
  commentId: M:AngeliA.Util.Write(System.Byte*@,System.UInt32)
  id: Write(System.Byte*@,System.UInt32)
  parent: AngeliA.Util
  langs:
  - csharp
  - vb
  name: Write(ref byte*, uint)
  nameWithType: Util.Write(ref byte*, uint)
  fullName: AngeliA.Util.Write(ref byte*, uint)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/Util_Misc.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: Write
    path: ../AngeliA Framework/src/Utility/Util_Misc.cs
    startLine: 843
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static void Write(ref byte* p, uint value)
    parameters:
    - id: p
      type: System.Byte*
    - id: value
      type: System.UInt32
    content.vb: Public Shared Sub Write(p As Byte*, value As UInteger)
  overload: AngeliA.Util.Write*
  nameWithType.vb: Util.Write(Byte*, UInteger)
  fullName.vb: AngeliA.Util.Write(Byte*, UInteger)
  name.vb: Write(Byte*, UInteger)
- uid: AngeliA.Util.Write(System.Byte*@,System.Single)
  commentId: M:AngeliA.Util.Write(System.Byte*@,System.Single)
  id: Write(System.Byte*@,System.Single)
  parent: AngeliA.Util
  langs:
  - csharp
  - vb
  name: Write(ref byte*, float)
  nameWithType: Util.Write(ref byte*, float)
  fullName: AngeliA.Util.Write(ref byte*, float)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/Util_Misc.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: Write
    path: ../AngeliA Framework/src/Utility/Util_Misc.cs
    startLine: 848
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static void Write(ref byte* p, float value)
    parameters:
    - id: p
      type: System.Byte*
    - id: value
      type: System.Single
    content.vb: Public Shared Sub Write(p As Byte*, value As Single)
  overload: AngeliA.Util.Write*
  nameWithType.vb: Util.Write(Byte*, Single)
  fullName.vb: AngeliA.Util.Write(Byte*, Single)
  name.vb: Write(Byte*, Single)
- uid: AngeliA.Util.Write(System.Byte*@,System.Int64)
  commentId: M:AngeliA.Util.Write(System.Byte*@,System.Int64)
  id: Write(System.Byte*@,System.Int64)
  parent: AngeliA.Util
  langs:
  - csharp
  - vb
  name: Write(ref byte*, long)
  nameWithType: Util.Write(ref byte*, long)
  fullName: AngeliA.Util.Write(ref byte*, long)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/Util_Misc.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: Write
    path: ../AngeliA Framework/src/Utility/Util_Misc.cs
    startLine: 853
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static void Write(ref byte* p, long value)
    parameters:
    - id: p
      type: System.Byte*
    - id: value
      type: System.Int64
    content.vb: Public Shared Sub Write(p As Byte*, value As Long)
  overload: AngeliA.Util.Write*
  nameWithType.vb: Util.Write(Byte*, Long)
  fullName.vb: AngeliA.Util.Write(Byte*, Long)
  name.vb: Write(Byte*, Long)
- uid: AngeliA.Util.Write(System.Byte*@,System.UInt64)
  commentId: M:AngeliA.Util.Write(System.Byte*@,System.UInt64)
  id: Write(System.Byte*@,System.UInt64)
  parent: AngeliA.Util
  langs:
  - csharp
  - vb
  name: Write(ref byte*, ulong)
  nameWithType: Util.Write(ref byte*, ulong)
  fullName: AngeliA.Util.Write(ref byte*, ulong)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/Util_Misc.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: Write
    path: ../AngeliA Framework/src/Utility/Util_Misc.cs
    startLine: 858
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static void Write(ref byte* p, ulong value)
    parameters:
    - id: p
      type: System.Byte*
    - id: value
      type: System.UInt64
    content.vb: Public Shared Sub Write(p As Byte*, value As ULong)
  overload: AngeliA.Util.Write*
  nameWithType.vb: Util.Write(Byte*, ULong)
  fullName.vb: AngeliA.Util.Write(Byte*, ULong)
  name.vb: Write(Byte*, ULong)
- uid: AngeliA.Util.Write(System.Byte*@,System.Double)
  commentId: M:AngeliA.Util.Write(System.Byte*@,System.Double)
  id: Write(System.Byte*@,System.Double)
  parent: AngeliA.Util
  langs:
  - csharp
  - vb
  name: Write(ref byte*, double)
  nameWithType: Util.Write(ref byte*, double)
  fullName: AngeliA.Util.Write(ref byte*, double)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/Util_Misc.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: Write
    path: ../AngeliA Framework/src/Utility/Util_Misc.cs
    startLine: 863
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static void Write(ref byte* p, double value)
    parameters:
    - id: p
      type: System.Byte*
    - id: value
      type: System.Double
    content.vb: Public Shared Sub Write(p As Byte*, value As Double)
  overload: AngeliA.Util.Write*
  nameWithType.vb: Util.Write(Byte*, Double)
  fullName.vb: AngeliA.Util.Write(Byte*, Double)
  name.vb: Write(Byte*, Double)
- uid: AngeliA.Util.Write(System.Byte*@,System.Byte[],System.Int32)
  commentId: M:AngeliA.Util.Write(System.Byte*@,System.Byte[],System.Int32)
  id: Write(System.Byte*@,System.Byte[],System.Int32)
  parent: AngeliA.Util
  langs:
  - csharp
  - vb
  name: Write(ref byte*, byte[], int)
  nameWithType: Util.Write(ref byte*, byte[], int)
  fullName: AngeliA.Util.Write(ref byte*, byte[], int)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/Util_Misc.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: Write
    path: ../AngeliA Framework/src/Utility/Util_Misc.cs
    startLine: 868
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static void Write(ref byte* p, byte[] bytes, int length)
    parameters:
    - id: p
      type: System.Byte*
    - id: bytes
      type: System.Byte[]
    - id: length
      type: System.Int32
    content.vb: Public Shared Sub Write(p As Byte*, bytes As Byte(), length As Integer)
  overload: AngeliA.Util.Write*
  nameWithType.vb: Util.Write(Byte*, Byte(), Integer)
  fullName.vb: AngeliA.Util.Write(Byte*, Byte(), Integer)
  name.vb: Write(Byte*, Byte(), Integer)
- uid: AngeliA.Util.GetParentPath(System.String)
  commentId: M:AngeliA.Util.GetParentPath(System.String)
  id: GetParentPath(System.String)
  parent: AngeliA.Util
  langs:
  - csharp
  - vb
  name: GetParentPath(string)
  nameWithType: Util.GetParentPath(string)
  fullName: AngeliA.Util.GetParentPath(string)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/Util_Path.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: GetParentPath
    path: ../AngeliA Framework/src/Utility/Util_Path.cs
    startLine: 14
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static string GetParentPath(string path)
    parameters:
    - id: path
      type: System.String
    return:
      type: System.String
    content.vb: Public Shared Function GetParentPath(path As String) As String
  overload: AngeliA.Util.GetParentPath*
  nameWithType.vb: Util.GetParentPath(String)
  fullName.vb: AngeliA.Util.GetParentPath(String)
  name.vb: GetParentPath(String)
- uid: AngeliA.Util.GetFullPath(System.String)
  commentId: M:AngeliA.Util.GetFullPath(System.String)
  id: GetFullPath(System.String)
  parent: AngeliA.Util
  langs:
  - csharp
  - vb
  name: GetFullPath(string)
  nameWithType: Util.GetFullPath(string)
  fullName: AngeliA.Util.GetFullPath(string)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/Util_Path.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: GetFullPath
    path: ../AngeliA Framework/src/Utility/Util_Path.cs
    startLine: 21
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static string GetFullPath(string path)
    parameters:
    - id: path
      type: System.String
    return:
      type: System.String
    content.vb: Public Shared Function GetFullPath(path As String) As String
  overload: AngeliA.Util.GetFullPath*
  nameWithType.vb: Util.GetFullPath(String)
  fullName.vb: AngeliA.Util.GetFullPath(String)
  name.vb: GetFullPath(String)
- uid: AngeliA.Util.GetFolderFullPath(System.String)
  commentId: M:AngeliA.Util.GetFolderFullPath(System.String)
  id: GetFolderFullPath(System.String)
  parent: AngeliA.Util
  langs:
  - csharp
  - vb
  name: GetFolderFullPath(string)
  nameWithType: Util.GetFolderFullPath(string)
  fullName: AngeliA.Util.GetFolderFullPath(string)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/Util_Path.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: GetFolderFullPath
    path: ../AngeliA Framework/src/Utility/Util_Path.cs
    startLine: 24
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static string GetFolderFullPath(string path)
    parameters:
    - id: path
      type: System.String
    return:
      type: System.String
    content.vb: Public Shared Function GetFolderFullPath(path As String) As String
  overload: AngeliA.Util.GetFolderFullPath*
  nameWithType.vb: Util.GetFolderFullPath(String)
  fullName.vb: AngeliA.Util.GetFolderFullPath(String)
  name.vb: GetFolderFullPath(String)
- uid: AngeliA.Util.CombinePaths(System.String,System.String)
  commentId: M:AngeliA.Util.CombinePaths(System.String,System.String)
  id: CombinePaths(System.String,System.String)
  parent: AngeliA.Util
  langs:
  - csharp
  - vb
  name: CombinePaths(string, string)
  nameWithType: Util.CombinePaths(string, string)
  fullName: AngeliA.Util.CombinePaths(string, string)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/Util_Path.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: CombinePaths
    path: ../AngeliA Framework/src/Utility/Util_Path.cs
    startLine: 27
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static string CombinePaths(string path1, string path2)
    parameters:
    - id: path1
      type: System.String
    - id: path2
      type: System.String
    return:
      type: System.String
    content.vb: Public Shared Function CombinePaths(path1 As String, path2 As String) As String
  overload: AngeliA.Util.CombinePaths*
  nameWithType.vb: Util.CombinePaths(String, String)
  fullName.vb: AngeliA.Util.CombinePaths(String, String)
  name.vb: CombinePaths(String, String)
- uid: AngeliA.Util.CombinePaths(System.String,System.String,System.String)
  commentId: M:AngeliA.Util.CombinePaths(System.String,System.String,System.String)
  id: CombinePaths(System.String,System.String,System.String)
  parent: AngeliA.Util
  langs:
  - csharp
  - vb
  name: CombinePaths(string, string, string)
  nameWithType: Util.CombinePaths(string, string, string)
  fullName: AngeliA.Util.CombinePaths(string, string, string)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/Util_Path.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: CombinePaths
    path: ../AngeliA Framework/src/Utility/Util_Path.cs
    startLine: 28
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static string CombinePaths(string path1, string path2, string path3)
    parameters:
    - id: path1
      type: System.String
    - id: path2
      type: System.String
    - id: path3
      type: System.String
    return:
      type: System.String
    content.vb: Public Shared Function CombinePaths(path1 As String, path2 As String, path3 As String) As String
  overload: AngeliA.Util.CombinePaths*
  nameWithType.vb: Util.CombinePaths(String, String, String)
  fullName.vb: AngeliA.Util.CombinePaths(String, String, String)
  name.vb: CombinePaths(String, String, String)
- uid: AngeliA.Util.CombinePaths(System.String,System.String,System.String,System.String)
  commentId: M:AngeliA.Util.CombinePaths(System.String,System.String,System.String,System.String)
  id: CombinePaths(System.String,System.String,System.String,System.String)
  parent: AngeliA.Util
  langs:
  - csharp
  - vb
  name: CombinePaths(string, string, string, string)
  nameWithType: Util.CombinePaths(string, string, string, string)
  fullName: AngeliA.Util.CombinePaths(string, string, string, string)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/Util_Path.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: CombinePaths
    path: ../AngeliA Framework/src/Utility/Util_Path.cs
    startLine: 29
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static string CombinePaths(string path1, string path2, string path3, string path4)
    parameters:
    - id: path1
      type: System.String
    - id: path2
      type: System.String
    - id: path3
      type: System.String
    - id: path4
      type: System.String
    return:
      type: System.String
    content.vb: Public Shared Function CombinePaths(path1 As String, path2 As String, path3 As String, path4 As String) As String
  overload: AngeliA.Util.CombinePaths*
  nameWithType.vb: Util.CombinePaths(String, String, String, String)
  fullName.vb: AngeliA.Util.CombinePaths(String, String, String, String)
  name.vb: CombinePaths(String, String, String, String)
- uid: AngeliA.Util.CombinePaths(System.String[])
  commentId: M:AngeliA.Util.CombinePaths(System.String[])
  id: CombinePaths(System.String[])
  parent: AngeliA.Util
  langs:
  - csharp
  - vb
  name: CombinePaths(params string[])
  nameWithType: Util.CombinePaths(params string[])
  fullName: AngeliA.Util.CombinePaths(params string[])
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/Util_Path.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: CombinePaths
    path: ../AngeliA Framework/src/Utility/Util_Path.cs
    startLine: 30
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static string CombinePaths(params string[] paths)
    parameters:
    - id: paths
      type: System.String[]
    return:
      type: System.String
    content.vb: Public Shared Function CombinePaths(ParamArray paths As String()) As String
  overload: AngeliA.Util.CombinePaths*
  nameWithType.vb: Util.CombinePaths(ParamArray String())
  fullName.vb: AngeliA.Util.CombinePaths(ParamArray String())
  name.vb: CombinePaths(ParamArray String())
- uid: AngeliA.Util.GetExtensionWithDot(System.String)
  commentId: M:AngeliA.Util.GetExtensionWithDot(System.String)
  id: GetExtensionWithDot(System.String)
  parent: AngeliA.Util
  langs:
  - csharp
  - vb
  name: GetExtensionWithDot(string)
  nameWithType: Util.GetExtensionWithDot(string)
  fullName: AngeliA.Util.GetExtensionWithDot(string)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/Util_Path.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: GetExtensionWithDot
    path: ../AngeliA Framework/src/Utility/Util_Path.cs
    startLine: 33
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static string GetExtensionWithDot(string path)
    parameters:
    - id: path
      type: System.String
    return:
      type: System.String
    content.vb: Public Shared Function GetExtensionWithDot(path As String) As String
  overload: AngeliA.Util.GetExtensionWithDot*
  nameWithType.vb: Util.GetExtensionWithDot(String)
  fullName.vb: AngeliA.Util.GetExtensionWithDot(String)
  name.vb: GetExtensionWithDot(String)
- uid: AngeliA.Util.GetNameWithoutExtension(System.String)
  commentId: M:AngeliA.Util.GetNameWithoutExtension(System.String)
  id: GetNameWithoutExtension(System.String)
  parent: AngeliA.Util
  langs:
  - csharp
  - vb
  name: GetNameWithoutExtension(string)
  nameWithType: Util.GetNameWithoutExtension(string)
  fullName: AngeliA.Util.GetNameWithoutExtension(string)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/Util_Path.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: GetNameWithoutExtension
    path: ../AngeliA Framework/src/Utility/Util_Path.cs
    startLine: 36
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static string GetNameWithoutExtension(string path)
    parameters:
    - id: path
      type: System.String
    return:
      type: System.String
    content.vb: Public Shared Function GetNameWithoutExtension(path As String) As String
  overload: AngeliA.Util.GetNameWithoutExtension*
  nameWithType.vb: Util.GetNameWithoutExtension(String)
  fullName.vb: AngeliA.Util.GetNameWithoutExtension(String)
  name.vb: GetNameWithoutExtension(String)
- uid: AngeliA.Util.GetNameWithExtension(System.String)
  commentId: M:AngeliA.Util.GetNameWithExtension(System.String)
  id: GetNameWithExtension(System.String)
  parent: AngeliA.Util
  langs:
  - csharp
  - vb
  name: GetNameWithExtension(string)
  nameWithType: Util.GetNameWithExtension(string)
  fullName: AngeliA.Util.GetNameWithExtension(string)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/Util_Path.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: GetNameWithExtension
    path: ../AngeliA Framework/src/Utility/Util_Path.cs
    startLine: 39
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static string GetNameWithExtension(string path)
    parameters:
    - id: path
      type: System.String
    return:
      type: System.String
    content.vb: Public Shared Function GetNameWithExtension(path As String) As String
  overload: AngeliA.Util.GetNameWithExtension*
  nameWithType.vb: Util.GetNameWithExtension(String)
  fullName.vb: AngeliA.Util.GetNameWithExtension(String)
  name.vb: GetNameWithExtension(String)
- uid: AngeliA.Util.ChangeExtension(System.String,System.String)
  commentId: M:AngeliA.Util.ChangeExtension(System.String,System.String)
  id: ChangeExtension(System.String,System.String)
  parent: AngeliA.Util
  langs:
  - csharp
  - vb
  name: ChangeExtension(string, string)
  nameWithType: Util.ChangeExtension(string, string)
  fullName: AngeliA.Util.ChangeExtension(string, string)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/Util_Path.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: ChangeExtension
    path: ../AngeliA Framework/src/Utility/Util_Path.cs
    startLine: 42
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static string ChangeExtension(string path, string newEx)
    parameters:
    - id: path
      type: System.String
    - id: newEx
      type: System.String
    return:
      type: System.String
    content.vb: Public Shared Function ChangeExtension(path As String, newEx As String) As String
  overload: AngeliA.Util.ChangeExtension*
  nameWithType.vb: Util.ChangeExtension(String, String)
  fullName.vb: AngeliA.Util.ChangeExtension(String, String)
  name.vb: ChangeExtension(String, String)
- uid: AngeliA.Util.FolderExists(System.String)
  commentId: M:AngeliA.Util.FolderExists(System.String)
  id: FolderExists(System.String)
  parent: AngeliA.Util
  langs:
  - csharp
  - vb
  name: FolderExists(string)
  nameWithType: Util.FolderExists(string)
  fullName: AngeliA.Util.FolderExists(string)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/Util_Path.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: FolderExists
    path: ../AngeliA Framework/src/Utility/Util_Path.cs
    startLine: 45
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static bool FolderExists(string path)
    parameters:
    - id: path
      type: System.String
    return:
      type: System.Boolean
    content.vb: Public Shared Function FolderExists(path As String) As Boolean
  overload: AngeliA.Util.FolderExists*
  nameWithType.vb: Util.FolderExists(String)
  fullName.vb: AngeliA.Util.FolderExists(String)
  name.vb: FolderExists(String)
- uid: AngeliA.Util.FileExists(System.String)
  commentId: M:AngeliA.Util.FileExists(System.String)
  id: FileExists(System.String)
  parent: AngeliA.Util
  langs:
  - csharp
  - vb
  name: FileExists(string)
  nameWithType: Util.FileExists(string)
  fullName: AngeliA.Util.FileExists(string)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/Util_Path.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: FileExists
    path: ../AngeliA Framework/src/Utility/Util_Path.cs
    startLine: 48
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static bool FileExists(string path)
    parameters:
    - id: path
      type: System.String
    return:
      type: System.Boolean
    content.vb: Public Shared Function FileExists(path As String) As Boolean
  overload: AngeliA.Util.FileExists*
  nameWithType.vb: Util.FileExists(String)
  fullName.vb: AngeliA.Util.FileExists(String)
  name.vb: FileExists(String)
- uid: AngeliA.Util.PathIsFolder(System.String)
  commentId: M:AngeliA.Util.PathIsFolder(System.String)
  id: PathIsFolder(System.String)
  parent: AngeliA.Util
  langs:
  - csharp
  - vb
  name: PathIsFolder(string)
  nameWithType: Util.PathIsFolder(string)
  fullName: AngeliA.Util.PathIsFolder(string)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/Util_Path.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: PathIsFolder
    path: ../AngeliA Framework/src/Utility/Util_Path.cs
    startLine: 51
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static bool PathIsFolder(string path)
    parameters:
    - id: path
      type: System.String
    return:
      type: System.Boolean
    content.vb: Public Shared Function PathIsFolder(path As String) As Boolean
  overload: AngeliA.Util.PathIsFolder*
  nameWithType.vb: Util.PathIsFolder(String)
  fullName.vb: AngeliA.Util.PathIsFolder(String)
  name.vb: PathIsFolder(String)
- uid: AngeliA.Util.GetUrl(System.String)
  commentId: M:AngeliA.Util.GetUrl(System.String)
  id: GetUrl(System.String)
  parent: AngeliA.Util
  langs:
  - csharp
  - vb
  name: GetUrl(string)
  nameWithType: Util.GetUrl(string)
  fullName: AngeliA.Util.GetUrl(string)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/Util_Path.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: GetUrl
    path: ../AngeliA Framework/src/Utility/Util_Path.cs
    startLine: 54
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static string GetUrl(string path)
    parameters:
    - id: path
      type: System.String
    return:
      type: System.String
    content.vb: Public Shared Function GetUrl(path As String) As String
  overload: AngeliA.Util.GetUrl*
  nameWithType.vb: Util.GetUrl(String)
  fullName.vb: AngeliA.Util.GetUrl(String)
  name.vb: GetUrl(String)
- uid: AngeliA.Util.GetTimeString
  commentId: M:AngeliA.Util.GetTimeString
  id: GetTimeString
  parent: AngeliA.Util
  langs:
  - csharp
  - vb
  name: GetTimeString()
  nameWithType: Util.GetTimeString()
  fullName: AngeliA.Util.GetTimeString()
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/Util_Path.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: GetTimeString
    path: ../AngeliA Framework/src/Utility/Util_Path.cs
    startLine: 57
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static string GetTimeString()
    return:
      type: System.String
    content.vb: Public Shared Function GetTimeString() As String
  overload: AngeliA.Util.GetTimeString*
- uid: AngeliA.Util.GetLongTime
  commentId: M:AngeliA.Util.GetLongTime
  id: GetLongTime
  parent: AngeliA.Util
  langs:
  - csharp
  - vb
  name: GetLongTime()
  nameWithType: Util.GetLongTime()
  fullName: AngeliA.Util.GetLongTime()
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/Util_Path.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: GetLongTime
    path: ../AngeliA Framework/src/Utility/Util_Path.cs
    startLine: 60
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static long GetLongTime()
    return:
      type: System.Int64
    content.vb: Public Shared Function GetLongTime() As Long
  overload: AngeliA.Util.GetLongTime*
- uid: AngeliA.Util.IsSameDay(System.Int64,System.Int64)
  commentId: M:AngeliA.Util.IsSameDay(System.Int64,System.Int64)
  id: IsSameDay(System.Int64,System.Int64)
  parent: AngeliA.Util
  langs:
  - csharp
  - vb
  name: IsSameDay(long, long)
  nameWithType: Util.IsSameDay(long, long)
  fullName: AngeliA.Util.IsSameDay(long, long)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/Util_Path.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: IsSameDay
    path: ../AngeliA Framework/src/Utility/Util_Path.cs
    startLine: 63
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static bool IsSameDay(long timeA, long timeB)
    parameters:
    - id: timeA
      type: System.Int64
    - id: timeB
      type: System.Int64
    return:
      type: System.Boolean
    content.vb: Public Shared Function IsSameDay(timeA As Long, timeB As Long) As Boolean
  overload: AngeliA.Util.IsSameDay*
  nameWithType.vb: Util.IsSameDay(Long, Long)
  fullName.vb: AngeliA.Util.IsSameDay(Long, Long)
  name.vb: IsSameDay(Long, Long)
- uid: AngeliA.Util.GetDisplayTimeFromTicks(System.Int64)
  commentId: M:AngeliA.Util.GetDisplayTimeFromTicks(System.Int64)
  id: GetDisplayTimeFromTicks(System.Int64)
  parent: AngeliA.Util
  langs:
  - csharp
  - vb
  name: GetDisplayTimeFromTicks(long)
  nameWithType: Util.GetDisplayTimeFromTicks(long)
  fullName: AngeliA.Util.GetDisplayTimeFromTicks(long)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/Util_Path.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: GetDisplayTimeFromTicks
    path: ../AngeliA Framework/src/Utility/Util_Path.cs
    startLine: 66
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static string GetDisplayTimeFromTicks(long ticks)
    parameters:
    - id: ticks
      type: System.Int64
    return:
      type: System.String
    content.vb: Public Shared Function GetDisplayTimeFromTicks(ticks As Long) As String
  overload: AngeliA.Util.GetDisplayTimeFromTicks*
  nameWithType.vb: Util.GetDisplayTimeFromTicks(Long)
  fullName.vb: AngeliA.Util.GetDisplayTimeFromTicks(Long)
  name.vb: GetDisplayTimeFromTicks(Long)
- uid: AngeliA.Util.FixPath(System.String,System.Boolean)
  commentId: M:AngeliA.Util.FixPath(System.String,System.Boolean)
  id: FixPath(System.String,System.Boolean)
  parent: AngeliA.Util
  langs:
  - csharp
  - vb
  name: FixPath(string, bool)
  nameWithType: Util.FixPath(string, bool)
  fullName: AngeliA.Util.FixPath(string, bool)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/Util_Path.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: FixPath
    path: ../AngeliA Framework/src/Utility/Util_Path.cs
    startLine: 69
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static string FixPath(string path, bool forUnity = true)
    parameters:
    - id: path
      type: System.String
    - id: forUnity
      type: System.Boolean
    return:
      type: System.String
    content.vb: Public Shared Function FixPath(path As String, forUnity As Boolean = True) As String
  overload: AngeliA.Util.FixPath*
  nameWithType.vb: Util.FixPath(String, Boolean)
  fullName.vb: AngeliA.Util.FixPath(String, Boolean)
  name.vb: FixPath(String, Boolean)
- uid: AngeliA.Util.IsSamePath(System.String,System.String)
  commentId: M:AngeliA.Util.IsSamePath(System.String,System.String)
  id: IsSamePath(System.String,System.String)
  parent: AngeliA.Util
  langs:
  - csharp
  - vb
  name: IsSamePath(string, string)
  nameWithType: Util.IsSamePath(string, string)
  fullName: AngeliA.Util.IsSamePath(string, string)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/Util_Path.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: IsSamePath
    path: ../AngeliA Framework/src/Utility/Util_Path.cs
    startLine: 84
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static bool IsSamePath(string pathA, string pathB)
    parameters:
    - id: pathA
      type: System.String
    - id: pathB
      type: System.String
    return:
      type: System.Boolean
    content.vb: Public Shared Function IsSamePath(pathA As String, pathB As String) As Boolean
  overload: AngeliA.Util.IsSamePath*
  nameWithType.vb: Util.IsSamePath(String, String)
  fullName.vb: AngeliA.Util.IsSamePath(String, String)
  name.vb: IsSamePath(String, String)
- uid: AngeliA.Util.IsFileHidden(System.String)
  commentId: M:AngeliA.Util.IsFileHidden(System.String)
  id: IsFileHidden(System.String)
  parent: AngeliA.Util
  langs:
  - csharp
  - vb
  name: IsFileHidden(string)
  nameWithType: Util.IsFileHidden(string)
  fullName: AngeliA.Util.IsFileHidden(string)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/Util_Path.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: IsFileHidden
    path: ../AngeliA Framework/src/Utility/Util_Path.cs
    startLine: 87
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static bool IsFileHidden(string path)
    parameters:
    - id: path
      type: System.String
    return:
      type: System.Boolean
    content.vb: Public Shared Function IsFileHidden(path As String) As Boolean
  overload: AngeliA.Util.IsFileHidden*
  nameWithType.vb: Util.IsFileHidden(String)
  fullName.vb: AngeliA.Util.IsFileHidden(String)
  name.vb: IsFileHidden(String)
- uid: AngeliA.Util.IsFolderHidden(System.String)
  commentId: M:AngeliA.Util.IsFolderHidden(System.String)
  id: IsFolderHidden(System.String)
  parent: AngeliA.Util
  langs:
  - csharp
  - vb
  name: IsFolderHidden(string)
  nameWithType: Util.IsFolderHidden(string)
  fullName: AngeliA.Util.IsFolderHidden(string)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/Util_Path.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: IsFolderHidden
    path: ../AngeliA Framework/src/Utility/Util_Path.cs
    startLine: 90
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static bool IsFolderHidden(string path)
    parameters:
    - id: path
      type: System.String
    return:
      type: System.Boolean
    content.vb: Public Shared Function IsFolderHidden(path As String) As Boolean
  overload: AngeliA.Util.IsFolderHidden*
  nameWithType.vb: Util.IsFolderHidden(String)
  fullName.vb: AngeliA.Util.IsFolderHidden(String)
  name.vb: IsFolderHidden(String)
- uid: AngeliA.Util.IsValidForFileName(System.String)
  commentId: M:AngeliA.Util.IsValidForFileName(System.String)
  id: IsValidForFileName(System.String)
  parent: AngeliA.Util
  langs:
  - csharp
  - vb
  name: IsValidForFileName(string)
  nameWithType: Util.IsValidForFileName(string)
  fullName: AngeliA.Util.IsValidForFileName(string)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/Util_Path.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: IsValidForFileName
    path: ../AngeliA Framework/src/Utility/Util_Path.cs
    startLine: 93
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static bool IsValidForFileName(string content)
    parameters:
    - id: content
      type: System.String
    return:
      type: System.Boolean
    content.vb: Public Shared Function IsValidForFileName(content As String) As Boolean
  overload: AngeliA.Util.IsValidForFileName*
  nameWithType.vb: Util.IsValidForFileName(String)
  fullName.vb: AngeliA.Util.IsValidForFileName(String)
  name.vb: IsValidForFileName(String)
- uid: AngeliA.Util.IsPathValid(System.String)
  commentId: M:AngeliA.Util.IsPathValid(System.String)
  id: IsPathValid(System.String)
  parent: AngeliA.Util
  langs:
  - csharp
  - vb
  name: IsPathValid(string)
  nameWithType: Util.IsPathValid(string)
  fullName: AngeliA.Util.IsPathValid(string)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/Util_Path.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: IsPathValid
    path: ../AngeliA Framework/src/Utility/Util_Path.cs
    startLine: 96
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static bool IsPathValid(string path)
    parameters:
    - id: path
      type: System.String
    return:
      type: System.Boolean
    content.vb: Public Shared Function IsPathValid(path As String) As Boolean
  overload: AngeliA.Util.IsPathValid*
  nameWithType.vb: Util.IsPathValid(String)
  fullName.vb: AngeliA.Util.IsPathValid(String)
  name.vb: IsPathValid(String)
- uid: AngeliA.Util.Path_to_ArgPath(System.String)
  commentId: M:AngeliA.Util.Path_to_ArgPath(System.String)
  id: Path_to_ArgPath(System.String)
  parent: AngeliA.Util
  langs:
  - csharp
  - vb
  name: Path_to_ArgPath(string)
  nameWithType: Util.Path_to_ArgPath(string)
  fullName: AngeliA.Util.Path_to_ArgPath(string)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/Util_Path.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: Path_to_ArgPath
    path: ../AngeliA Framework/src/Utility/Util_Path.cs
    startLine: 108
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static string Path_to_ArgPath(string path)
    parameters:
    - id: path
      type: System.String
    return:
      type: System.String
    content.vb: Public Shared Function Path_to_ArgPath(path As String) As String
  overload: AngeliA.Util.Path_to_ArgPath*
  nameWithType.vb: Util.Path_to_ArgPath(String)
  fullName.vb: AngeliA.Util.Path_to_ArgPath(String)
  name.vb: Path_to_ArgPath(String)
- uid: AngeliA.Util.ArgPath_to_Path(System.String)
  commentId: M:AngeliA.Util.ArgPath_to_Path(System.String)
  id: ArgPath_to_Path(System.String)
  parent: AngeliA.Util
  langs:
  - csharp
  - vb
  name: ArgPath_to_Path(string)
  nameWithType: Util.ArgPath_to_Path(string)
  fullName: AngeliA.Util.ArgPath_to_Path(string)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/Util_Path.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: ArgPath_to_Path
    path: ../AngeliA Framework/src/Utility/Util_Path.cs
    startLine: 109
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static string ArgPath_to_Path(string path)
    parameters:
    - id: path
      type: System.String
    return:
      type: System.String
    content.vb: Public Shared Function ArgPath_to_Path(path As String) As String
  overload: AngeliA.Util.ArgPath_to_Path*
  nameWithType.vb: Util.ArgPath_to_Path(String)
  fullName.vb: AngeliA.Util.ArgPath_to_Path(String)
  name.vb: ArgPath_to_Path(String)
- uid: AngeliA.Util.TryGetRelativePath(System.String,System.String,System.String@)
  commentId: M:AngeliA.Util.TryGetRelativePath(System.String,System.String,System.String@)
  id: TryGetRelativePath(System.String,System.String,System.String@)
  parent: AngeliA.Util
  langs:
  - csharp
  - vb
  name: TryGetRelativePath(string, string, out string)
  nameWithType: Util.TryGetRelativePath(string, string, out string)
  fullName: AngeliA.Util.TryGetRelativePath(string, string, out string)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/Util_Path.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: TryGetRelativePath
    path: ../AngeliA Framework/src/Utility/Util_Path.cs
    startLine: 112
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static bool TryGetRelativePath(string relativeTo, string path, out string relativePath)
    parameters:
    - id: relativeTo
      type: System.String
    - id: path
      type: System.String
    - id: relativePath
      type: System.String
    return:
      type: System.Boolean
    content.vb: Public Shared Function TryGetRelativePath(relativeTo As String, path As String, relativePath As String) As Boolean
  overload: AngeliA.Util.TryGetRelativePath*
  nameWithType.vb: Util.TryGetRelativePath(String, String, String)
  fullName.vb: AngeliA.Util.TryGetRelativePath(String, String, String)
  name.vb: TryGetRelativePath(String, String, String)
- uid: AngeliA.Util.AllAssemblies
  commentId: F:AngeliA.Util.AllAssemblies
  id: AllAssemblies
  parent: AngeliA.Util
  langs:
  - csharp
  - vb
  name: AllAssemblies
  nameWithType: Util.AllAssemblies
  fullName: AngeliA.Util.AllAssemblies
  type: Field
  source:
    remote:
      path: AngeliA Framework/src/Utility/Util_Ref.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: AllAssemblies
    path: ../AngeliA Framework/src/Utility/Util_Ref.cs
    startLine: 12
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static readonly List<Assembly> AllAssemblies
    return:
      type: System.Collections.Generic.List{System.Reflection.Assembly}
    content.vb: Public Shared ReadOnly AllAssemblies As List(Of Assembly)
- uid: AngeliA.Util.GetAllTypeSpan
  commentId: M:AngeliA.Util.GetAllTypeSpan
  id: GetAllTypeSpan
  parent: AngeliA.Util
  langs:
  - csharp
  - vb
  name: GetAllTypeSpan()
  nameWithType: Util.GetAllTypeSpan()
  fullName: AngeliA.Util.GetAllTypeSpan()
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/Util_Ref.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: GetAllTypeSpan
    path: ../AngeliA Framework/src/Utility/Util_Ref.cs
    startLine: 16
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static ReadOnlySpan<Type> GetAllTypeSpan()
    return:
      type: System.ReadOnlySpan{System.Type}
    content.vb: Public Shared Function GetAllTypeSpan() As ReadOnlySpan(Of Type)
  overload: AngeliA.Util.GetAllTypeSpan*
- uid: AngeliA.Util.AddAssembly(System.Reflection.Assembly)
  commentId: M:AngeliA.Util.AddAssembly(System.Reflection.Assembly)
  id: AddAssembly(System.Reflection.Assembly)
  parent: AngeliA.Util
  langs:
  - csharp
  - vb
  name: AddAssembly(Assembly)
  nameWithType: Util.AddAssembly(Assembly)
  fullName: AngeliA.Util.AddAssembly(System.Reflection.Assembly)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/Util_Ref.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: AddAssembly
    path: ../AngeliA Framework/src/Utility/Util_Ref.cs
    startLine: 19
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static void AddAssembly(Assembly assembly)
    parameters:
    - id: assembly
      type: System.Reflection.Assembly
    content.vb: Public Shared Sub AddAssembly(assembly As Assembly)
  overload: AngeliA.Util.AddAssembly*
- uid: AngeliA.Util.AllChildClass(System.Type,System.Boolean,System.Boolean)
  commentId: M:AngeliA.Util.AllChildClass(System.Type,System.Boolean,System.Boolean)
  id: AllChildClass(System.Type,System.Boolean,System.Boolean)
  isExtensionMethod: true
  parent: AngeliA.Util
  langs:
  - csharp
  - vb
  name: AllChildClass(Type, bool, bool)
  nameWithType: Util.AllChildClass(Type, bool, bool)
  fullName: AngeliA.Util.AllChildClass(System.Type, bool, bool)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/Util_Ref.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: AllChildClass
    path: ../AngeliA Framework/src/Utility/Util_Ref.cs
    startLine: 30
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static IEnumerable<Type> AllChildClass(this Type type, bool includeAbstract = false, bool includeInterface = false)
    parameters:
    - id: type
      type: System.Type
    - id: includeAbstract
      type: System.Boolean
    - id: includeInterface
      type: System.Boolean
    return:
      type: System.Collections.Generic.IEnumerable{System.Type}
    content.vb: Public Shared Function AllChildClass(type As Type, includeAbstract As Boolean = False, includeInterface As Boolean = False) As IEnumerable(Of Type)
  overload: AngeliA.Util.AllChildClass*
  nameWithType.vb: Util.AllChildClass(Type, Boolean, Boolean)
  fullName.vb: AngeliA.Util.AllChildClass(System.Type, Boolean, Boolean)
  name.vb: AllChildClass(Type, Boolean, Boolean)
- uid: AngeliA.Util.AllChildClassID(System.Type,System.Boolean,System.Boolean)
  commentId: M:AngeliA.Util.AllChildClassID(System.Type,System.Boolean,System.Boolean)
  id: AllChildClassID(System.Type,System.Boolean,System.Boolean)
  isExtensionMethod: true
  parent: AngeliA.Util
  langs:
  - csharp
  - vb
  name: AllChildClassID(Type, bool, bool)
  nameWithType: Util.AllChildClassID(Type, bool, bool)
  fullName: AngeliA.Util.AllChildClassID(System.Type, bool, bool)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/Util_Ref.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: AllChildClassID
    path: ../AngeliA Framework/src/Utility/Util_Ref.cs
    startLine: 48
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static IEnumerable<int> AllChildClassID(this Type type, bool includeAbstract = false, bool includeInterface = false)
    parameters:
    - id: type
      type: System.Type
    - id: includeAbstract
      type: System.Boolean
    - id: includeInterface
      type: System.Boolean
    return:
      type: System.Collections.Generic.IEnumerable{System.Int32}
    content.vb: Public Shared Function AllChildClassID(type As Type, includeAbstract As Boolean = False, includeInterface As Boolean = False) As IEnumerable(Of Integer)
  overload: AngeliA.Util.AllChildClassID*
  nameWithType.vb: Util.AllChildClassID(Type, Boolean, Boolean)
  fullName.vb: AngeliA.Util.AllChildClassID(System.Type, Boolean, Boolean)
  name.vb: AllChildClassID(Type, Boolean, Boolean)
- uid: AngeliA.Util.ForAllAssemblyWithAttribute``1
  commentId: M:AngeliA.Util.ForAllAssemblyWithAttribute``1
  id: ForAllAssemblyWithAttribute``1
  parent: AngeliA.Util
  langs:
  - csharp
  - vb
  name: ForAllAssemblyWithAttribute<A>()
  nameWithType: Util.ForAllAssemblyWithAttribute<A>()
  fullName: AngeliA.Util.ForAllAssemblyWithAttribute<A>()
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/Util_Ref.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: ForAllAssemblyWithAttribute
    path: ../AngeliA Framework/src/Utility/Util_Ref.cs
    startLine: 54
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: 'public static IEnumerable<(Assembly assembly, A attribyte)> ForAllAssemblyWithAttribute<A>() where A : Attribute'
    typeParameters:
    - id: A
    return:
      type: System.Collections.Generic.IEnumerable{System.ValueTuple{System.Reflection.Assembly,{A}}}
    content.vb: Public Shared Function ForAllAssemblyWithAttribute(Of A As Attribute)() As IEnumerable(Of (assembly As Assembly, attribyte As A))
  overload: AngeliA.Util.ForAllAssemblyWithAttribute*
  nameWithType.vb: Util.ForAllAssemblyWithAttribute(Of A)()
  fullName.vb: AngeliA.Util.ForAllAssemblyWithAttribute(Of A)()
  name.vb: ForAllAssemblyWithAttribute(Of A)()
- uid: AngeliA.Util.TryGetAttributeFromAllAssemblies``1
  commentId: M:AngeliA.Util.TryGetAttributeFromAllAssemblies``1
  id: TryGetAttributeFromAllAssemblies``1
  parent: AngeliA.Util
  langs:
  - csharp
  - vb
  name: TryGetAttributeFromAllAssemblies<A>()
  nameWithType: Util.TryGetAttributeFromAllAssemblies<A>()
  fullName: AngeliA.Util.TryGetAttributeFromAllAssemblies<A>()
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/Util_Ref.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: TryGetAttributeFromAllAssemblies
    path: ../AngeliA Framework/src/Utility/Util_Ref.cs
    startLine: 65
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: 'public static bool TryGetAttributeFromAllAssemblies<A>() where A : Attribute'
    typeParameters:
    - id: A
    return:
      type: System.Boolean
    content.vb: Public Shared Function TryGetAttributeFromAllAssemblies(Of A As Attribute)() As Boolean
  overload: AngeliA.Util.TryGetAttributeFromAllAssemblies*
  nameWithType.vb: Util.TryGetAttributeFromAllAssemblies(Of A)()
  fullName.vb: AngeliA.Util.TryGetAttributeFromAllAssemblies(Of A)()
  name.vb: TryGetAttributeFromAllAssemblies(Of A)()
- uid: AngeliA.Util.TryGetAttributeFromAllAssemblies``1(``0@)
  commentId: M:AngeliA.Util.TryGetAttributeFromAllAssemblies``1(``0@)
  id: TryGetAttributeFromAllAssemblies``1(``0@)
  parent: AngeliA.Util
  langs:
  - csharp
  - vb
  name: TryGetAttributeFromAllAssemblies<A>(out A)
  nameWithType: Util.TryGetAttributeFromAllAssemblies<A>(out A)
  fullName: AngeliA.Util.TryGetAttributeFromAllAssemblies<A>(out A)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/Util_Ref.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: TryGetAttributeFromAllAssemblies
    path: ../AngeliA Framework/src/Utility/Util_Ref.cs
    startLine: 66
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: 'public static bool TryGetAttributeFromAllAssemblies<A>(out A attribute) where A : Attribute'
    parameters:
    - id: attribute
      type: '{A}'
    typeParameters:
    - id: A
    return:
      type: System.Boolean
    content.vb: Public Shared Function TryGetAttributeFromAllAssemblies(Of A As Attribute)(attribute As A) As Boolean
  overload: AngeliA.Util.TryGetAttributeFromAllAssemblies*
  nameWithType.vb: Util.TryGetAttributeFromAllAssemblies(Of A)(A)
  fullName.vb: AngeliA.Util.TryGetAttributeFromAllAssemblies(Of A)(A)
  name.vb: TryGetAttributeFromAllAssemblies(Of A)(A)
- uid: AngeliA.Util.AllEnumIdPairs``1
  commentId: M:AngeliA.Util.AllEnumIdPairs``1
  id: AllEnumIdPairs``1
  parent: AngeliA.Util
  langs:
  - csharp
  - vb
  name: AllEnumIdPairs<E>()
  nameWithType: Util.AllEnumIdPairs<E>()
  fullName: AngeliA.Util.AllEnumIdPairs<E>()
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/Util_Ref.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: AllEnumIdPairs
    path: ../AngeliA Framework/src/Utility/Util_Ref.cs
    startLine: 76
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: 'public static IEnumerable<KeyValuePair<E, int>> AllEnumIdPairs<E>() where E : struct, Enum'
    typeParameters:
    - id: E
    return:
      type: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{{E},System.Int32}}
    content.vb: Public Shared Function AllEnumIdPairs(Of E As {Structure, [Enum]})() As IEnumerable(Of KeyValuePair(Of E, Integer))
  overload: AngeliA.Util.AllEnumIdPairs*
  nameWithType.vb: Util.AllEnumIdPairs(Of E)()
  fullName.vb: AngeliA.Util.AllEnumIdPairs(Of E)()
  name.vb: AllEnumIdPairs(Of E)()
- uid: AngeliA.Util.AllClassImplemented(System.Type,System.Boolean)
  commentId: M:AngeliA.Util.AllClassImplemented(System.Type,System.Boolean)
  id: AllClassImplemented(System.Type,System.Boolean)
  isExtensionMethod: true
  parent: AngeliA.Util
  langs:
  - csharp
  - vb
  name: AllClassImplemented(Type, bool)
  nameWithType: Util.AllClassImplemented(Type, bool)
  fullName: AngeliA.Util.AllClassImplemented(System.Type, bool)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/Util_Ref.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: AllClassImplemented
    path: ../AngeliA Framework/src/Utility/Util_Ref.cs
    startLine: 84
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static IEnumerable<Type> AllClassImplemented(this Type interfaceType, bool includeAbstract = false)
    parameters:
    - id: interfaceType
      type: System.Type
    - id: includeAbstract
      type: System.Boolean
    return:
      type: System.Collections.Generic.IEnumerable{System.Type}
    content.vb: Public Shared Function AllClassImplemented(interfaceType As Type, includeAbstract As Boolean = False) As IEnumerable(Of Type)
  overload: AngeliA.Util.AllClassImplemented*
  nameWithType.vb: Util.AllClassImplemented(Type, Boolean)
  fullName.vb: AngeliA.Util.AllClassImplemented(System.Type, Boolean)
  name.vb: AllClassImplemented(Type, Boolean)
- uid: AngeliA.Util.AllClassImplementedID(System.Type,System.Boolean)
  commentId: M:AngeliA.Util.AllClassImplementedID(System.Type,System.Boolean)
  id: AllClassImplementedID(System.Type,System.Boolean)
  isExtensionMethod: true
  parent: AngeliA.Util
  langs:
  - csharp
  - vb
  name: AllClassImplementedID(Type, bool)
  nameWithType: Util.AllClassImplementedID(Type, bool)
  fullName: AngeliA.Util.AllClassImplementedID(System.Type, bool)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/Util_Ref.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: AllClassImplementedID
    path: ../AngeliA Framework/src/Utility/Util_Ref.cs
    startLine: 87
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static IEnumerable<int> AllClassImplementedID(this Type interfaceType, bool includeAbstract = false)
    parameters:
    - id: interfaceType
      type: System.Type
    - id: includeAbstract
      type: System.Boolean
    return:
      type: System.Collections.Generic.IEnumerable{System.Int32}
    content.vb: Public Shared Function AllClassImplementedID(interfaceType As Type, includeAbstract As Boolean = False) As IEnumerable(Of Integer)
  overload: AngeliA.Util.AllClassImplementedID*
  nameWithType.vb: Util.AllClassImplementedID(Type, Boolean)
  fullName.vb: AngeliA.Util.AllClassImplementedID(System.Type, Boolean)
  name.vb: AllClassImplementedID(Type, Boolean)
- uid: AngeliA.Util.AllClassWithAttribute(System.Type,System.Boolean,System.Boolean)
  commentId: M:AngeliA.Util.AllClassWithAttribute(System.Type,System.Boolean,System.Boolean)
  id: AllClassWithAttribute(System.Type,System.Boolean,System.Boolean)
  isExtensionMethod: true
  parent: AngeliA.Util
  langs:
  - csharp
  - vb
  name: AllClassWithAttribute(Type, bool, bool)
  nameWithType: Util.AllClassWithAttribute(Type, bool, bool)
  fullName: AngeliA.Util.AllClassWithAttribute(System.Type, bool, bool)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/Util_Ref.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: AllClassWithAttribute
    path: ../AngeliA Framework/src/Utility/Util_Ref.cs
    startLine: 94
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static IEnumerable<(Type, Attribute)> AllClassWithAttribute(this Type attribute, bool ignoreAbstract = true, bool ignoreInterface = true)
    parameters:
    - id: attribute
      type: System.Type
    - id: ignoreAbstract
      type: System.Boolean
    - id: ignoreInterface
      type: System.Boolean
    return:
      type: System.Collections.Generic.IEnumerable{System.ValueTuple{System.Type,System.Attribute}}
    content.vb: Public Shared Function AllClassWithAttribute(attribute As Type, ignoreAbstract As Boolean = True, ignoreInterface As Boolean = True) As IEnumerable(Of (Type, Attribute))
  overload: AngeliA.Util.AllClassWithAttribute*
  nameWithType.vb: Util.AllClassWithAttribute(Type, Boolean, Boolean)
  fullName.vb: AngeliA.Util.AllClassWithAttribute(System.Type, Boolean, Boolean)
  name.vb: AllClassWithAttribute(Type, Boolean, Boolean)
- uid: AngeliA.Util.AllClassWithAttribute``1(System.Boolean,System.Boolean,System.Boolean)
  commentId: M:AngeliA.Util.AllClassWithAttribute``1(System.Boolean,System.Boolean,System.Boolean)
  id: AllClassWithAttribute``1(System.Boolean,System.Boolean,System.Boolean)
  parent: AngeliA.Util
  langs:
  - csharp
  - vb
  name: AllClassWithAttribute<A>(bool, bool, bool)
  nameWithType: Util.AllClassWithAttribute<A>(bool, bool, bool)
  fullName: AngeliA.Util.AllClassWithAttribute<A>(bool, bool, bool)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/Util_Ref.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: AllClassWithAttribute
    path: ../AngeliA Framework/src/Utility/Util_Ref.cs
    startLine: 104
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: 'public static IEnumerable<(Type, A)> AllClassWithAttribute<A>(bool ignoreAbstract = true, bool ignoreInterface = true, bool inherit = false) where A : Attribute'
    parameters:
    - id: ignoreAbstract
      type: System.Boolean
    - id: ignoreInterface
      type: System.Boolean
    - id: inherit
      type: System.Boolean
    typeParameters:
    - id: A
    return:
      type: System.Collections.Generic.IEnumerable{System.ValueTuple{System.Type,{A}}}
    content.vb: Public Shared Function AllClassWithAttribute(Of A As Attribute)(ignoreAbstract As Boolean = True, ignoreInterface As Boolean = True, inherit As Boolean = False) As IEnumerable(Of (Type, A))
  overload: AngeliA.Util.AllClassWithAttribute*
  nameWithType.vb: Util.AllClassWithAttribute(Of A)(Boolean, Boolean, Boolean)
  fullName.vb: AngeliA.Util.AllClassWithAttribute(Of A)(Boolean, Boolean, Boolean)
  name.vb: AllClassWithAttribute(Of A)(Boolean, Boolean, Boolean)
- uid: AngeliA.Util.AllStaticMethodWithAttribute``1
  commentId: M:AngeliA.Util.AllStaticMethodWithAttribute``1
  id: AllStaticMethodWithAttribute``1
  parent: AngeliA.Util
  langs:
  - csharp
  - vb
  name: AllStaticMethodWithAttribute<T>()
  nameWithType: Util.AllStaticMethodWithAttribute<T>()
  fullName: AngeliA.Util.AllStaticMethodWithAttribute<T>()
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/Util_Ref.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: AllStaticMethodWithAttribute
    path: ../AngeliA Framework/src/Utility/Util_Ref.cs
    startLine: 117
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: 'public static IEnumerable<KeyValuePair<MethodInfo, T>> AllStaticMethodWithAttribute<T>() where T : Attribute'
    typeParameters:
    - id: T
    return:
      type: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.Reflection.MethodInfo,{T}}}
    content.vb: Public Shared Function AllStaticMethodWithAttribute(Of T As Attribute)() As IEnumerable(Of KeyValuePair(Of MethodInfo, T))
  overload: AngeliA.Util.AllStaticMethodWithAttribute*
  nameWithType.vb: Util.AllStaticMethodWithAttribute(Of T)()
  fullName.vb: AngeliA.Util.AllStaticMethodWithAttribute(Of T)()
  name.vb: AllStaticMethodWithAttribute(Of T)()
- uid: AngeliA.Util.InvokeAllStaticMethodWithAttribute``1
  commentId: M:AngeliA.Util.InvokeAllStaticMethodWithAttribute``1
  id: InvokeAllStaticMethodWithAttribute``1
  parent: AngeliA.Util
  langs:
  - csharp
  - vb
  name: InvokeAllStaticMethodWithAttribute<A>()
  nameWithType: Util.InvokeAllStaticMethodWithAttribute<A>()
  fullName: AngeliA.Util.InvokeAllStaticMethodWithAttribute<A>()
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/Util_Ref.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: InvokeAllStaticMethodWithAttribute
    path: ../AngeliA Framework/src/Utility/Util_Ref.cs
    startLine: 136
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: 'public static void InvokeAllStaticMethodWithAttribute<A>() where A : Attribute'
    typeParameters:
    - id: A
    content.vb: Public Shared Sub InvokeAllStaticMethodWithAttribute(Of A As Attribute)()
  overload: AngeliA.Util.InvokeAllStaticMethodWithAttribute*
  nameWithType.vb: Util.InvokeAllStaticMethodWithAttribute(Of A)()
  fullName.vb: AngeliA.Util.InvokeAllStaticMethodWithAttribute(Of A)()
  name.vb: InvokeAllStaticMethodWithAttribute(Of A)()
- uid: AngeliA.Util.InvokeAllStaticMethodWithAttribute``1(System.Func{System.Collections.Generic.KeyValuePair{System.Reflection.MethodInfo,``0},System.Boolean})
  commentId: M:AngeliA.Util.InvokeAllStaticMethodWithAttribute``1(System.Func{System.Collections.Generic.KeyValuePair{System.Reflection.MethodInfo,``0},System.Boolean})
  id: InvokeAllStaticMethodWithAttribute``1(System.Func{System.Collections.Generic.KeyValuePair{System.Reflection.MethodInfo,``0},System.Boolean})
  parent: AngeliA.Util
  langs:
  - csharp
  - vb
  name: InvokeAllStaticMethodWithAttribute<A>(Func<KeyValuePair<MethodInfo, A>, bool>)
  nameWithType: Util.InvokeAllStaticMethodWithAttribute<A>(Func<KeyValuePair<MethodInfo, A>, bool>)
  fullName: AngeliA.Util.InvokeAllStaticMethodWithAttribute<A>(System.Func<System.Collections.Generic.KeyValuePair<System.Reflection.MethodInfo, A>, bool>)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/Util_Ref.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: InvokeAllStaticMethodWithAttribute
    path: ../AngeliA Framework/src/Utility/Util_Ref.cs
    startLine: 144
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: 'public static void InvokeAllStaticMethodWithAttribute<A>(Func<KeyValuePair<MethodInfo, A>, bool> predicte) where A : Attribute'
    parameters:
    - id: predicte
      type: System.Func{System.Collections.Generic.KeyValuePair{System.Reflection.MethodInfo,{A}},System.Boolean}
    typeParameters:
    - id: A
    content.vb: Public Shared Sub InvokeAllStaticMethodWithAttribute(Of A As Attribute)(predicte As Func(Of KeyValuePair(Of MethodInfo, A), Boolean))
  overload: AngeliA.Util.InvokeAllStaticMethodWithAttribute*
  nameWithType.vb: Util.InvokeAllStaticMethodWithAttribute(Of A)(Func(Of KeyValuePair(Of MethodInfo, A), Boolean))
  fullName.vb: AngeliA.Util.InvokeAllStaticMethodWithAttribute(Of A)(System.Func(Of System.Collections.Generic.KeyValuePair(Of System.Reflection.MethodInfo, A), Boolean))
  name.vb: InvokeAllStaticMethodWithAttribute(Of A)(Func(Of KeyValuePair(Of MethodInfo, A), Boolean))
- uid: AngeliA.Util.InvokeAllStaticMethodWithAttribute``1(System.Comparison{System.Collections.Generic.KeyValuePair{System.Reflection.MethodInfo,``0}})
  commentId: M:AngeliA.Util.InvokeAllStaticMethodWithAttribute``1(System.Comparison{System.Collections.Generic.KeyValuePair{System.Reflection.MethodInfo,``0}})
  id: InvokeAllStaticMethodWithAttribute``1(System.Comparison{System.Collections.Generic.KeyValuePair{System.Reflection.MethodInfo,``0}})
  parent: AngeliA.Util
  langs:
  - csharp
  - vb
  name: InvokeAllStaticMethodWithAttribute<A>(Comparison<KeyValuePair<MethodInfo, A>>)
  nameWithType: Util.InvokeAllStaticMethodWithAttribute<A>(Comparison<KeyValuePair<MethodInfo, A>>)
  fullName: AngeliA.Util.InvokeAllStaticMethodWithAttribute<A>(System.Comparison<System.Collections.Generic.KeyValuePair<System.Reflection.MethodInfo, A>>)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/Util_Ref.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: InvokeAllStaticMethodWithAttribute
    path: ../AngeliA Framework/src/Utility/Util_Ref.cs
    startLine: 154
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: 'public static void InvokeAllStaticMethodWithAttribute<A>(Comparison<KeyValuePair<MethodInfo, A>> comparison) where A : Attribute'
    parameters:
    - id: comparison
      type: System.Comparison{System.Collections.Generic.KeyValuePair{System.Reflection.MethodInfo,{A}}}
    typeParameters:
    - id: A
    content.vb: Public Shared Sub InvokeAllStaticMethodWithAttribute(Of A As Attribute)(comparison As Comparison(Of KeyValuePair(Of MethodInfo, A)))
  overload: AngeliA.Util.InvokeAllStaticMethodWithAttribute*
  nameWithType.vb: Util.InvokeAllStaticMethodWithAttribute(Of A)(Comparison(Of KeyValuePair(Of MethodInfo, A)))
  fullName.vb: AngeliA.Util.InvokeAllStaticMethodWithAttribute(Of A)(System.Comparison(Of System.Collections.Generic.KeyValuePair(Of System.Reflection.MethodInfo, A)))
  name.vb: InvokeAllStaticMethodWithAttribute(Of A)(Comparison(Of KeyValuePair(Of MethodInfo, A)))
- uid: AngeliA.Util.InvokeStaticMethod(System.Type,System.String,System.Object[])
  commentId: M:AngeliA.Util.InvokeStaticMethod(System.Type,System.String,System.Object[])
  id: InvokeStaticMethod(System.Type,System.String,System.Object[])
  parent: AngeliA.Util
  langs:
  - csharp
  - vb
  name: InvokeStaticMethod(Type, string, params object[])
  nameWithType: Util.InvokeStaticMethod(Type, string, params object[])
  fullName: AngeliA.Util.InvokeStaticMethod(System.Type, string, params object[])
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/Util_Ref.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: InvokeStaticMethod
    path: ../AngeliA Framework/src/Utility/Util_Ref.cs
    startLine: 166
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static object InvokeStaticMethod(Type type, string methodName, params object[] param)
    parameters:
    - id: type
      type: System.Type
    - id: methodName
      type: System.String
    - id: param
      type: System.Object[]
    return:
      type: System.Object
    content.vb: Public Shared Function InvokeStaticMethod(type As Type, methodName As String, ParamArray param As Object()) As Object
  overload: AngeliA.Util.InvokeStaticMethod*
  nameWithType.vb: Util.InvokeStaticMethod(Type, String, ParamArray Object())
  fullName.vb: AngeliA.Util.InvokeStaticMethod(System.Type, String, ParamArray Object())
  name.vb: InvokeStaticMethod(Type, String, ParamArray Object())
- uid: AngeliA.Util.InvokeMethod(System.Object,System.String,System.Object[])
  commentId: M:AngeliA.Util.InvokeMethod(System.Object,System.String,System.Object[])
  id: InvokeMethod(System.Object,System.String,System.Object[])
  parent: AngeliA.Util
  langs:
  - csharp
  - vb
  name: InvokeMethod(object, string, params object[])
  nameWithType: Util.InvokeMethod(object, string, params object[])
  fullName: AngeliA.Util.InvokeMethod(object, string, params object[])
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/Util_Ref.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: InvokeMethod
    path: ../AngeliA Framework/src/Utility/Util_Ref.cs
    startLine: 176
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static object InvokeMethod(object obj, string methodName, params object[] param)
    parameters:
    - id: obj
      type: System.Object
    - id: methodName
      type: System.String
    - id: param
      type: System.Object[]
    return:
      type: System.Object
    content.vb: Public Shared Function InvokeMethod(obj As Object, methodName As String, ParamArray param As Object()) As Object
  overload: AngeliA.Util.InvokeMethod*
  nameWithType.vb: Util.InvokeMethod(Object, String, ParamArray Object())
  fullName.vb: AngeliA.Util.InvokeMethod(Object, String, ParamArray Object())
  name.vb: InvokeMethod(Object, String, ParamArray Object())
- uid: AngeliA.Util.GetStaticPropertyValue(System.Type,System.String)
  commentId: M:AngeliA.Util.GetStaticPropertyValue(System.Type,System.String)
  id: GetStaticPropertyValue(System.Type,System.String)
  parent: AngeliA.Util
  langs:
  - csharp
  - vb
  name: GetStaticPropertyValue(Type, string)
  nameWithType: Util.GetStaticPropertyValue(Type, string)
  fullName: AngeliA.Util.GetStaticPropertyValue(System.Type, string)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/Util_Ref.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: GetStaticPropertyValue
    path: ../AngeliA Framework/src/Utility/Util_Ref.cs
    startLine: 193
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static object GetStaticPropertyValue(Type type, string name)
    parameters:
    - id: type
      type: System.Type
    - id: name
      type: System.String
    return:
      type: System.Object
    content.vb: Public Shared Function GetStaticPropertyValue(type As Type, name As String) As Object
  overload: AngeliA.Util.GetStaticPropertyValue*
  nameWithType.vb: Util.GetStaticPropertyValue(Type, String)
  fullName.vb: AngeliA.Util.GetStaticPropertyValue(System.Type, String)
  name.vb: GetStaticPropertyValue(Type, String)
- uid: AngeliA.Util.GetPropertyValue(System.Object,System.String)
  commentId: M:AngeliA.Util.GetPropertyValue(System.Object,System.String)
  id: GetPropertyValue(System.Object,System.String)
  parent: AngeliA.Util
  langs:
  - csharp
  - vb
  name: GetPropertyValue(object, string)
  nameWithType: Util.GetPropertyValue(object, string)
  fullName: AngeliA.Util.GetPropertyValue(object, string)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/Util_Ref.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: GetPropertyValue
    path: ../AngeliA Framework/src/Utility/Util_Ref.cs
    startLine: 198
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static object GetPropertyValue(object target, string name)
    parameters:
    - id: target
      type: System.Object
    - id: name
      type: System.String
    return:
      type: System.Object
    content.vb: Public Shared Function GetPropertyValue(target As Object, name As String) As Object
  overload: AngeliA.Util.GetPropertyValue*
  nameWithType.vb: Util.GetPropertyValue(Object, String)
  fullName.vb: AngeliA.Util.GetPropertyValue(Object, String)
  name.vb: GetPropertyValue(Object, String)
- uid: AngeliA.Util.GetProperty(System.Type,System.String)
  commentId: M:AngeliA.Util.GetProperty(System.Type,System.String)
  id: GetProperty(System.Type,System.String)
  parent: AngeliA.Util
  langs:
  - csharp
  - vb
  name: GetProperty(Type, string)
  nameWithType: Util.GetProperty(Type, string)
  fullName: AngeliA.Util.GetProperty(System.Type, string)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/Util_Ref.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: GetProperty
    path: ../AngeliA Framework/src/Utility/Util_Ref.cs
    startLine: 202
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static PropertyInfo GetProperty(Type type, string name)
    parameters:
    - id: type
      type: System.Type
    - id: name
      type: System.String
    return:
      type: System.Reflection.PropertyInfo
    content.vb: Public Shared Function GetProperty(type As Type, name As String) As PropertyInfo
  overload: AngeliA.Util.GetProperty*
  nameWithType.vb: Util.GetProperty(Type, String)
  fullName.vb: AngeliA.Util.GetProperty(System.Type, String)
  name.vb: GetProperty(Type, String)
- uid: AngeliA.Util.SetStaticPropertyValue(System.Type,System.String,System.Object)
  commentId: M:AngeliA.Util.SetStaticPropertyValue(System.Type,System.String,System.Object)
  id: SetStaticPropertyValue(System.Type,System.String,System.Object)
  parent: AngeliA.Util
  langs:
  - csharp
  - vb
  name: SetStaticPropertyValue(Type, string, object)
  nameWithType: Util.SetStaticPropertyValue(Type, string, object)
  fullName: AngeliA.Util.SetStaticPropertyValue(System.Type, string, object)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/Util_Ref.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: SetStaticPropertyValue
    path: ../AngeliA Framework/src/Utility/Util_Ref.cs
    startLine: 207
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static void SetStaticPropertyValue(Type type, string name, object value)
    parameters:
    - id: type
      type: System.Type
    - id: name
      type: System.String
    - id: value
      type: System.Object
    content.vb: Public Shared Sub SetStaticPropertyValue(type As Type, name As String, value As Object)
  overload: AngeliA.Util.SetStaticPropertyValue*
  nameWithType.vb: Util.SetStaticPropertyValue(Type, String, Object)
  fullName.vb: AngeliA.Util.SetStaticPropertyValue(System.Type, String, Object)
  name.vb: SetStaticPropertyValue(Type, String, Object)
- uid: AngeliA.Util.SetPropertyValue(System.Object,System.String,System.Object)
  commentId: M:AngeliA.Util.SetPropertyValue(System.Object,System.String,System.Object)
  id: SetPropertyValue(System.Object,System.String,System.Object)
  parent: AngeliA.Util
  langs:
  - csharp
  - vb
  name: SetPropertyValue(object, string, object)
  nameWithType: Util.SetPropertyValue(object, string, object)
  fullName: AngeliA.Util.SetPropertyValue(object, string, object)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/Util_Ref.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: SetPropertyValue
    path: ../AngeliA Framework/src/Utility/Util_Ref.cs
    startLine: 212
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static void SetPropertyValue(object target, string name, object value)
    parameters:
    - id: target
      type: System.Object
    - id: name
      type: System.String
    - id: value
      type: System.Object
    content.vb: Public Shared Sub SetPropertyValue(target As Object, name As String, value As Object)
  overload: AngeliA.Util.SetPropertyValue*
  nameWithType.vb: Util.SetPropertyValue(Object, String, Object)
  fullName.vb: AngeliA.Util.SetPropertyValue(Object, String, Object)
  name.vb: SetPropertyValue(Object, String, Object)
- uid: AngeliA.Util.GetFieldValue(System.Object,System.String)
  commentId: M:AngeliA.Util.GetFieldValue(System.Object,System.String)
  id: GetFieldValue(System.Object,System.String)
  parent: AngeliA.Util
  langs:
  - csharp
  - vb
  name: GetFieldValue(object, string)
  nameWithType: Util.GetFieldValue(object, string)
  fullName: AngeliA.Util.GetFieldValue(object, string)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/Util_Ref.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: GetFieldValue
    path: ../AngeliA Framework/src/Utility/Util_Ref.cs
    startLine: 228
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static object GetFieldValue(object target, string fieldName)
    parameters:
    - id: target
      type: System.Object
    - id: fieldName
      type: System.String
    return:
      type: System.Object
    content.vb: Public Shared Function GetFieldValue(target As Object, fieldName As String) As Object
  overload: AngeliA.Util.GetFieldValue*
  nameWithType.vb: Util.GetFieldValue(Object, String)
  fullName.vb: AngeliA.Util.GetFieldValue(Object, String)
  name.vb: GetFieldValue(Object, String)
- uid: AngeliA.Util.GetField(System.Type,System.String)
  commentId: M:AngeliA.Util.GetField(System.Type,System.String)
  id: GetField(System.Type,System.String)
  parent: AngeliA.Util
  langs:
  - csharp
  - vb
  name: GetField(Type, string)
  nameWithType: Util.GetField(Type, string)
  fullName: AngeliA.Util.GetField(System.Type, string)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/Util_Ref.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: GetField
    path: ../AngeliA Framework/src/Utility/Util_Ref.cs
    startLine: 231
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static FieldInfo GetField(Type type, string name)
    parameters:
    - id: type
      type: System.Type
    - id: name
      type: System.String
    return:
      type: System.Reflection.FieldInfo
    content.vb: Public Shared Function GetField(type As Type, name As String) As FieldInfo
  overload: AngeliA.Util.GetField*
  nameWithType.vb: Util.GetField(Type, String)
  fullName.vb: AngeliA.Util.GetField(System.Type, String)
  name.vb: GetField(Type, String)
- uid: AngeliA.Util.SetFieldValue(System.Object,System.String,System.Object)
  commentId: M:AngeliA.Util.SetFieldValue(System.Object,System.String,System.Object)
  id: SetFieldValue(System.Object,System.String,System.Object)
  parent: AngeliA.Util
  langs:
  - csharp
  - vb
  name: SetFieldValue(object, string, object)
  nameWithType: Util.SetFieldValue(object, string, object)
  fullName: AngeliA.Util.SetFieldValue(object, string, object)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/Util_Ref.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: SetFieldValue
    path: ../AngeliA Framework/src/Utility/Util_Ref.cs
    startLine: 245
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static void SetFieldValue(object target, string name, object value)
    parameters:
    - id: target
      type: System.Object
    - id: name
      type: System.String
    - id: value
      type: System.Object
    content.vb: Public Shared Sub SetFieldValue(target As Object, name As String, value As Object)
  overload: AngeliA.Util.SetFieldValue*
  nameWithType.vb: Util.SetFieldValue(Object, String, Object)
  fullName.vb: AngeliA.Util.SetFieldValue(Object, String, Object)
  name.vb: SetFieldValue(Object, String, Object)
- uid: AngeliA.Util.GetStaticFieldValue(System.Type,System.String)
  commentId: M:AngeliA.Util.GetStaticFieldValue(System.Type,System.String)
  id: GetStaticFieldValue(System.Type,System.String)
  parent: AngeliA.Util
  langs:
  - csharp
  - vb
  name: GetStaticFieldValue(Type, string)
  nameWithType: Util.GetStaticFieldValue(Type, string)
  fullName: AngeliA.Util.GetStaticFieldValue(System.Type, string)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/Util_Ref.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: GetStaticFieldValue
    path: ../AngeliA Framework/src/Utility/Util_Ref.cs
    startLine: 260
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static object GetStaticFieldValue(Type type, string name)
    parameters:
    - id: type
      type: System.Type
    - id: name
      type: System.String
    return:
      type: System.Object
    content.vb: Public Shared Function GetStaticFieldValue(type As Type, name As String) As Object
  overload: AngeliA.Util.GetStaticFieldValue*
  nameWithType.vb: Util.GetStaticFieldValue(Type, String)
  fullName.vb: AngeliA.Util.GetStaticFieldValue(System.Type, String)
  name.vb: GetStaticFieldValue(Type, String)
- uid: AngeliA.Util.SetStaticFieldValue(System.Type,System.String,System.Object)
  commentId: M:AngeliA.Util.SetStaticFieldValue(System.Type,System.String,System.Object)
  id: SetStaticFieldValue(System.Type,System.String,System.Object)
  parent: AngeliA.Util
  langs:
  - csharp
  - vb
  name: SetStaticFieldValue(Type, string, object)
  nameWithType: Util.SetStaticFieldValue(Type, string, object)
  fullName: AngeliA.Util.SetStaticFieldValue(System.Type, string, object)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/Util_Ref.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: SetStaticFieldValue
    path: ../AngeliA Framework/src/Utility/Util_Ref.cs
    startLine: 265
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static void SetStaticFieldValue(Type type, string name, object value)
    parameters:
    - id: type
      type: System.Type
    - id: name
      type: System.String
    - id: value
      type: System.Object
    content.vb: Public Shared Sub SetStaticFieldValue(type As Type, name As String, value As Object)
  overload: AngeliA.Util.SetStaticFieldValue*
  nameWithType.vb: Util.SetStaticFieldValue(Type, String, Object)
  fullName.vb: AngeliA.Util.SetStaticFieldValue(System.Type, String, Object)
  name.vb: SetStaticFieldValue(Type, String, Object)
- uid: AngeliA.Util.GetFieldType(System.Object,System.String)
  commentId: M:AngeliA.Util.GetFieldType(System.Object,System.String)
  id: GetFieldType(System.Object,System.String)
  parent: AngeliA.Util
  langs:
  - csharp
  - vb
  name: GetFieldType(object, string)
  nameWithType: Util.GetFieldType(object, string)
  fullName: AngeliA.Util.GetFieldType(object, string)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/Util_Ref.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: GetFieldType
    path: ../AngeliA Framework/src/Utility/Util_Ref.cs
    startLine: 270
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static Type GetFieldType(object target, string name)
    parameters:
    - id: target
      type: System.Object
    - id: name
      type: System.String
    return:
      type: System.Type
    content.vb: Public Shared Function GetFieldType(target As Object, name As String) As Type
  overload: AngeliA.Util.GetFieldType*
  nameWithType.vb: Util.GetFieldType(Object, String)
  fullName.vb: AngeliA.Util.GetFieldType(Object, String)
  name.vb: GetFieldType(Object, String)
- uid: AngeliA.Util.GetStaticFieldType(System.Type,System.String)
  commentId: M:AngeliA.Util.GetStaticFieldType(System.Type,System.String)
  id: GetStaticFieldType(System.Type,System.String)
  parent: AngeliA.Util
  langs:
  - csharp
  - vb
  name: GetStaticFieldType(Type, string)
  nameWithType: Util.GetStaticFieldType(Type, string)
  fullName: AngeliA.Util.GetStaticFieldType(System.Type, string)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/Util_Ref.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: GetStaticFieldType
    path: ../AngeliA Framework/src/Utility/Util_Ref.cs
    startLine: 276
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static Type GetStaticFieldType(Type type, string name)
    parameters:
    - id: type
      type: System.Type
    - id: name
      type: System.String
    return:
      type: System.Type
    content.vb: Public Shared Function GetStaticFieldType(type As Type, name As String) As Type
  overload: AngeliA.Util.GetStaticFieldType*
  nameWithType.vb: Util.GetStaticFieldType(Type, String)
  fullName.vb: AngeliA.Util.GetStaticFieldType(System.Type, String)
  name.vb: GetStaticFieldType(Type, String)
references:
- uid: AngeliA
  commentId: N:AngeliA
  href: AngeliA.html
  name: AngeliA
  nameWithType: AngeliA
  fullName: AngeliA
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: AngeliA.Util.FileToText*
  commentId: Overload:AngeliA.Util.FileToText
  href: AngeliA.Util.html#AngeliA_Util_FileToText_System_String_
  name: FileToText
  nameWithType: Util.FileToText
  fullName: AngeliA.Util.FileToText
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.Text.Encoding
  commentId: T:System.Text.Encoding
  parent: System.Text
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.text.encoding
  name: Encoding
  nameWithType: Encoding
  fullName: System.Text.Encoding
- uid: System.Text
  commentId: N:System.Text
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Text
  nameWithType: System.Text
  fullName: System.Text
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Text
    name: Text
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.text
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Text
    name: Text
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.text
- uid: AngeliA.Util.TextToFile*
  commentId: Overload:AngeliA.Util.TextToFile
  href: AngeliA.Util.html#AngeliA_Util_TextToFile_System_String_System_String_System_Boolean_
  name: TextToFile
  nameWithType: Util.TextToFile
  fullName: AngeliA.Util.TextToFile
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: AngeliA.Util.ForAllLinesInFile*
  commentId: Overload:AngeliA.Util.ForAllLinesInFile
  href: AngeliA.Util.html#AngeliA_Util_ForAllLinesInFile_System_String_
  name: ForAllLinesInFile
  nameWithType: Util.ForAllLinesInFile
  fullName: AngeliA.Util.ForAllLinesInFile
- uid: System.Collections.Generic.IEnumerable{System.String}
  commentId: T:System.Collections.Generic.IEnumerable{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<string>
  nameWithType: IEnumerable<string>
  fullName: System.Collections.Generic.IEnumerable<string>
  nameWithType.vb: IEnumerable(Of String)
  fullName.vb: System.Collections.Generic.IEnumerable(Of String)
  name.vb: IEnumerable(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: AngeliA.Util.ForAllLinesInString*
  commentId: Overload:AngeliA.Util.ForAllLinesInString
  href: AngeliA.Util.html#AngeliA_Util_ForAllLinesInString_System_String_
  name: ForAllLinesInString
  nameWithType: Util.ForAllLinesInString
  fullName: AngeliA.Util.ForAllLinesInString
- uid: AngeliA.Util.ForAllNameAndIntInFile*
  commentId: Overload:AngeliA.Util.ForAllNameAndIntInFile
  href: AngeliA.Util.html#AngeliA_Util_ForAllNameAndIntInFile_System_String_
  name: ForAllNameAndIntInFile
  nameWithType: Util.ForAllNameAndIntInFile
  fullName: AngeliA.Util.ForAllNameAndIntInFile
- uid: System.Collections.Generic.IEnumerable{System.ValueTuple{System.String,System.Int32}}
  commentId: T:System.Collections.Generic.IEnumerable{System.ValueTuple{System.String,System.Int32}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<(string name, int value)>
  nameWithType: IEnumerable<(string name, int value)>
  fullName: System.Collections.Generic.IEnumerable<(string name, int value)>
  nameWithType.vb: IEnumerable(Of (name As String, value As Integer))
  fullName.vb: System.Collections.Generic.IEnumerable(Of (name As String, value As Integer))
  name.vb: IEnumerable(Of (name As String, value As Integer))
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: " "
  - uid: System.ValueTuple{System.String,System.Int32}.name
    name: name
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.string,system.int32-.name
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: " "
  - uid: System.ValueTuple{System.String,System.Int32}.value
    name: value
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.string,system.int32-.value
  - name: )
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: (
  - uid: System.ValueTuple{System.String,System.Int32}.name
    name: name
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.string,system.int32-.name
  - name: " "
  - name: As
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.ValueTuple{System.String,System.Int32}.value
    name: value
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.string,system.int32-.value
  - name: " "
  - name: As
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  - name: )
- uid: System.IO.StreamReader
  commentId: T:System.IO.StreamReader
  parent: System.IO
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.io.streamreader
  name: StreamReader
  nameWithType: StreamReader
  fullName: System.IO.StreamReader
- uid: System.IO
  commentId: N:System.IO
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.IO
  nameWithType: System.IO
  fullName: System.IO
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.IO
    name: IO
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.IO
    name: IO
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io
- uid: AngeliA.Util.ForAllNameAndStringInFile*
  commentId: Overload:AngeliA.Util.ForAllNameAndStringInFile
  href: AngeliA.Util.html#AngeliA_Util_ForAllNameAndStringInFile_System_String_
  name: ForAllNameAndStringInFile
  nameWithType: Util.ForAllNameAndStringInFile
  fullName: AngeliA.Util.ForAllNameAndStringInFile
- uid: System.Collections.Generic.IEnumerable{System.ValueTuple{System.String,System.String}}
  commentId: T:System.Collections.Generic.IEnumerable{System.ValueTuple{System.String,System.String}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<(string name, string value)>
  nameWithType: IEnumerable<(string name, string value)>
  fullName: System.Collections.Generic.IEnumerable<(string name, string value)>
  nameWithType.vb: IEnumerable(Of (name As String, value As String))
  fullName.vb: System.Collections.Generic.IEnumerable(Of (name As String, value As String))
  name.vb: IEnumerable(Of (name As String, value As String))
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: " "
  - uid: System.ValueTuple{System.String,System.String}.name
    name: name
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.string,system.string-.name
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: " "
  - uid: System.ValueTuple{System.String,System.String}.value
    name: value
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.string,system.string-.value
  - name: )
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: (
  - uid: System.ValueTuple{System.String,System.String}.name
    name: name
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.string,system.string-.name
  - name: " "
  - name: As
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.ValueTuple{System.String,System.String}.value
    name: value
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.string,system.string-.value
  - name: " "
  - name: As
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  - name: )
- uid: AngeliA.Util.CreateFolder*
  commentId: Overload:AngeliA.Util.CreateFolder
  href: AngeliA.Util.html#AngeliA_Util_CreateFolder_System_String_
  name: CreateFolder
  nameWithType: Util.CreateFolder
  fullName: AngeliA.Util.CreateFolder
- uid: AngeliA.Util.FileToBytes*
  commentId: Overload:AngeliA.Util.FileToBytes
  href: AngeliA.Util.html#AngeliA_Util_FileToBytes_System_String_
  name: FileToBytes
  nameWithType: Util.FileToBytes
  fullName: AngeliA.Util.FileToBytes
- uid: System.Byte[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.byte
  name: byte[]
  nameWithType: byte[]
  fullName: byte[]
  nameWithType.vb: Byte()
  fullName.vb: Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Byte
    name: Byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: (
  - name: )
- uid: AngeliA.Util.BytesToFile*
  commentId: Overload:AngeliA.Util.BytesToFile
  href: AngeliA.Util.html#AngeliA_Util_BytesToFile_System_Byte___System_String_System_Int32_
  name: BytesToFile
  nameWithType: Util.BytesToFile
  fullName: AngeliA.Util.BytesToFile
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: AngeliA.Util.HasFileIn*
  commentId: Overload:AngeliA.Util.HasFileIn
  href: AngeliA.Util.html#AngeliA_Util_HasFileIn_System_String_System_Boolean_System_String_
  name: HasFileIn
  nameWithType: Util.HasFileIn
  fullName: AngeliA.Util.HasFileIn
- uid: System.String[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string[]
  nameWithType: string[]
  fullName: string[]
  nameWithType.vb: String()
  fullName.vb: String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: (
  - name: )
- uid: AngeliA.Util.EnumerateFiles*
  commentId: Overload:AngeliA.Util.EnumerateFiles
  href: AngeliA.Util.html#AngeliA_Util_EnumerateFiles_System_String_System_Boolean_System_String_
  name: EnumerateFiles
  nameWithType: Util.EnumerateFiles
  fullName: AngeliA.Util.EnumerateFiles
- uid: AngeliA.Util.EnumerateFolders*
  commentId: Overload:AngeliA.Util.EnumerateFolders
  href: AngeliA.Util.html#AngeliA_Util_EnumerateFolders_System_String_System_Boolean_System_String_
  name: EnumerateFolders
  nameWithType: Util.EnumerateFolders
  fullName: AngeliA.Util.EnumerateFolders
- uid: AngeliA.Util.DeleteFile*
  commentId: Overload:AngeliA.Util.DeleteFile
  href: AngeliA.Util.html#AngeliA_Util_DeleteFile_System_String_
  name: DeleteFile
  nameWithType: Util.DeleteFile
  fullName: AngeliA.Util.DeleteFile
- uid: AngeliA.Util.CopyFile*
  commentId: Overload:AngeliA.Util.CopyFile
  href: AngeliA.Util.html#AngeliA_Util_CopyFile_System_String_System_String_System_Boolean_
  name: CopyFile
  nameWithType: Util.CopyFile
  fullName: AngeliA.Util.CopyFile
- uid: AngeliA.Util.CopyFolder*
  commentId: Overload:AngeliA.Util.CopyFolder
  href: AngeliA.Util.html#AngeliA_Util_CopyFolder_System_String_System_String_System_Boolean_System_Boolean_System_Boolean_
  name: CopyFolder
  nameWithType: Util.CopyFolder
  fullName: AngeliA.Util.CopyFolder
- uid: AngeliA.Util.DeleteFolder*
  commentId: Overload:AngeliA.Util.DeleteFolder
  href: AngeliA.Util.html#AngeliA_Util_DeleteFolder_System_String_
  name: DeleteFolder
  nameWithType: Util.DeleteFolder
  fullName: AngeliA.Util.DeleteFolder
- uid: AngeliA.Util.GetFileSizeInMB*
  commentId: Overload:AngeliA.Util.GetFileSizeInMB
  href: AngeliA.Util.html#AngeliA_Util_GetFileSizeInMB_System_String_
  name: GetFileSizeInMB
  nameWithType: Util.GetFileSizeInMB
  fullName: AngeliA.Util.GetFileSizeInMB
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: AngeliA.Util.ReadXML*
  commentId: Overload:AngeliA.Util.ReadXML
  href: AngeliA.Util.html#AngeliA_Util_ReadXML__1_System_String_
  name: ReadXML
  nameWithType: Util.ReadXML
  fullName: AngeliA.Util.ReadXML
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: AngeliA.Util.WriteXML*
  commentId: Overload:AngeliA.Util.WriteXML
  href: AngeliA.Util.html#AngeliA_Util_WriteXML__1___0_System_String_
  name: WriteXML
  nameWithType: Util.WriteXML
  fullName: AngeliA.Util.WriteXML
- uid: AngeliA.Util.GetFileCount*
  commentId: Overload:AngeliA.Util.GetFileCount
  href: AngeliA.Util.html#AngeliA_Util_GetFileCount_System_String_System_String_System_IO_SearchOption_
  name: GetFileCount
  nameWithType: Util.GetFileCount
  fullName: AngeliA.Util.GetFileCount
- uid: System.IO.SearchOption
  commentId: T:System.IO.SearchOption
  parent: System.IO
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.io.searchoption
  name: SearchOption
  nameWithType: SearchOption
  fullName: System.IO.SearchOption
- uid: AngeliA.Util.GetFolderCount*
  commentId: Overload:AngeliA.Util.GetFolderCount
  href: AngeliA.Util.html#AngeliA_Util_GetFolderCount_System_String_System_String_System_IO_SearchOption_
  name: GetFolderCount
  nameWithType: Util.GetFolderCount
  fullName: AngeliA.Util.GetFolderCount
- uid: AngeliA.Util.MoveFile*
  commentId: Overload:AngeliA.Util.MoveFile
  href: AngeliA.Util.html#AngeliA_Util_MoveFile_System_String_System_String_
  name: MoveFile
  nameWithType: Util.MoveFile
  fullName: AngeliA.Util.MoveFile
- uid: AngeliA.Util.MoveFolder*
  commentId: Overload:AngeliA.Util.MoveFolder
  href: AngeliA.Util.html#AngeliA_Util_MoveFolder_System_String_System_String_
  name: MoveFolder
  nameWithType: Util.MoveFolder
  fullName: AngeliA.Util.MoveFolder
- uid: AngeliA.Util.GetFileModifyDate*
  commentId: Overload:AngeliA.Util.GetFileModifyDate
  href: AngeliA.Util.html#AngeliA_Util_GetFileModifyDate_System_String_
  name: GetFileModifyDate
  nameWithType: Util.GetFileModifyDate
  fullName: AngeliA.Util.GetFileModifyDate
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int64
  name: long
  nameWithType: long
  fullName: long
  nameWithType.vb: Long
  fullName.vb: Long
  name.vb: Long
- uid: AngeliA.Util.GetFolderModifyDate*
  commentId: Overload:AngeliA.Util.GetFolderModifyDate
  href: AngeliA.Util.html#AngeliA_Util_GetFolderModifyDate_System_String_
  name: GetFolderModifyDate
  nameWithType: Util.GetFolderModifyDate
  fullName: AngeliA.Util.GetFolderModifyDate
- uid: AngeliA.Util.SetFolderModifyDate*
  commentId: Overload:AngeliA.Util.SetFolderModifyDate
  href: AngeliA.Util.html#AngeliA_Util_SetFolderModifyDate_System_String_System_Int64_
  name: SetFolderModifyDate
  nameWithType: Util.SetFolderModifyDate
  fullName: AngeliA.Util.SetFolderModifyDate
- uid: AngeliA.Util.GetFileCreationDate*
  commentId: Overload:AngeliA.Util.GetFileCreationDate
  href: AngeliA.Util.html#AngeliA_Util_GetFileCreationDate_System_String_
  name: GetFileCreationDate
  nameWithType: Util.GetFileCreationDate
  fullName: AngeliA.Util.GetFileCreationDate
- uid: AngeliA.Util.SetFileModifyDate*
  commentId: Overload:AngeliA.Util.SetFileModifyDate
  href: AngeliA.Util.html#AngeliA_Util_SetFileModifyDate_System_String_System_Int64_
  name: SetFileModifyDate
  nameWithType: Util.SetFileModifyDate
  fullName: AngeliA.Util.SetFileModifyDate
- uid: AngeliA.Util.ByteToCompressedFile*
  commentId: Overload:AngeliA.Util.ByteToCompressedFile
  href: AngeliA.Util.html#AngeliA_Util_ByteToCompressedFile_System_String_System_Byte___System_Int32_
  name: ByteToCompressedFile
  nameWithType: Util.ByteToCompressedFile
  fullName: AngeliA.Util.ByteToCompressedFile
- uid: AngeliA.Util.CompressedFileToByte*
  commentId: Overload:AngeliA.Util.CompressedFileToByte
  href: AngeliA.Util.html#AngeliA_Util_CompressedFileToByte_System_String_System_Int32__
  name: CompressedFileToByte
  nameWithType: Util.CompressedFileToByte
  fullName: AngeliA.Util.CompressedFileToByte
- uid: AngeliA.Util.DecompressBytes*
  commentId: Overload:AngeliA.Util.DecompressBytes
  href: AngeliA.Util.html#AngeliA_Util_DecompressBytes_System_Byte___
  name: DecompressBytes
  nameWithType: Util.DecompressBytes
  fullName: AngeliA.Util.DecompressBytes
- uid: AngeliA.Util.IsExistingFileEmpty*
  commentId: Overload:AngeliA.Util.IsExistingFileEmpty
  href: AngeliA.Util.html#AngeliA_Util_IsExistingFileEmpty_System_String_
  name: IsExistingFileEmpty
  nameWithType: Util.IsExistingFileEmpty
  fullName: AngeliA.Util.IsExistingFileEmpty
- uid: AngeliA.Util.UpdateFile*
  commentId: Overload:AngeliA.Util.UpdateFile
  href: AngeliA.Util.html#AngeliA_Util_UpdateFile_System_String_System_String_System_Boolean_
  name: UpdateFile
  nameWithType: Util.UpdateFile
  fullName: AngeliA.Util.UpdateFile
- uid: AngeliA.Util.GreatestCommonFactor*
  commentId: Overload:AngeliA.Util.GreatestCommonFactor
  href: AngeliA.Util.html#AngeliA_Util_GreatestCommonFactor_System_Int32_System_Int32_
  name: GreatestCommonFactor
  nameWithType: Util.GreatestCommonFactor
  fullName: AngeliA.Util.GreatestCommonFactor
- uid: AngeliA.Util.LeastCommonMultiple*
  commentId: Overload:AngeliA.Util.LeastCommonMultiple
  href: AngeliA.Util.html#AngeliA_Util_LeastCommonMultiple_System_Int32_System_Int32_
  name: LeastCommonMultiple
  nameWithType: Util.LeastCommonMultiple
  fullName: AngeliA.Util.LeastCommonMultiple
- uid: AngeliA.Util.RotateAround*
  commentId: Overload:AngeliA.Util.RotateAround
  href: AngeliA.Util.html#AngeliA_Util_RotateAround_System_Int32_System_Int32_System_Int32_System_Int32_System_Int32_
  name: RotateAround
  nameWithType: Util.RotateAround
  fullName: AngeliA.Util.RotateAround
- uid: AngeliA.Int2
  commentId: T:AngeliA.Int2
  parent: AngeliA
  href: AngeliA.Int2.html
  name: Int2
  nameWithType: Int2
  fullName: AngeliA.Int2
- uid: AngeliA.Util.IsPowerOfTwo*
  commentId: Overload:AngeliA.Util.IsPowerOfTwo
  href: AngeliA.Util.html#AngeliA_Util_IsPowerOfTwo_System_Int32_
  name: IsPowerOfTwo
  nameWithType: Util.IsPowerOfTwo
  fullName: AngeliA.Util.IsPowerOfTwo
- uid: AngeliA.Util.SquareDistanceF*
  commentId: Overload:AngeliA.Util.SquareDistanceF
  href: AngeliA.Util.html#AngeliA_Util_SquareDistanceF_System_Single_System_Single_System_Single_System_Single_
  name: SquareDistanceF
  nameWithType: Util.SquareDistanceF
  fullName: AngeliA.Util.SquareDistanceF
- uid: AngeliA.Util.SquareDistance*
  commentId: Overload:AngeliA.Util.SquareDistance
  href: AngeliA.Util.html#AngeliA_Util_SquareDistance_AngeliA_Int2_AngeliA_Int2_
  name: SquareDistance
  nameWithType: Util.SquareDistance
  fullName: AngeliA.Util.SquareDistance
- uid: AngeliA.Util.DistanceFloat*
  commentId: Overload:AngeliA.Util.DistanceFloat
  href: AngeliA.Util.html#AngeliA_Util_DistanceFloat_AngeliA_Float2_AngeliA_Float2_
  name: DistanceFloat
  nameWithType: Util.DistanceFloat
  fullName: AngeliA.Util.DistanceFloat
- uid: AngeliA.Float2
  commentId: T:AngeliA.Float2
  parent: AngeliA
  href: AngeliA.Float2.html
  name: Float2
  nameWithType: Float2
  fullName: AngeliA.Float2
- uid: AngeliA.Util.DistanceInt*
  commentId: Overload:AngeliA.Util.DistanceInt
  href: AngeliA.Util.html#AngeliA_Util_DistanceInt_AngeliA_Int2_AngeliA_Int2_
  name: DistanceInt
  nameWithType: Util.DistanceInt
  fullName: AngeliA.Util.DistanceInt
- uid: AngeliA.Util.BabylonianSqrt*
  commentId: Overload:AngeliA.Util.BabylonianSqrt
  href: AngeliA.Util.html#AngeliA_Util_BabylonianSqrt_System_Int32_
  name: BabylonianSqrt
  nameWithType: Util.BabylonianSqrt
  fullName: AngeliA.Util.BabylonianSqrt
- uid: AngeliA.Util.PointInTriangle*
  commentId: Overload:AngeliA.Util.PointInTriangle
  href: AngeliA.Util.html#AngeliA_Util_PointInTriangle_AngeliA_Float2_AngeliA_Float2_AngeliA_Float2_AngeliA_Float2_
  name: PointInTriangle
  nameWithType: Util.PointInTriangle
  fullName: AngeliA.Util.PointInTriangle
- uid: AngeliA.Util.PointLine_Distance*
  commentId: Overload:AngeliA.Util.PointLine_Distance
  href: AngeliA.Util.html#AngeliA_Util_PointLine_Distance_AngeliA_Float2_AngeliA_Float2_AngeliA_Float2_AngeliA_Float2__
  name: PointLine_Distance
  nameWithType: Util.PointLine_Distance
  fullName: AngeliA.Util.PointLine_Distance
- uid: AngeliA.Util.SegmentIntersect*
  commentId: Overload:AngeliA.Util.SegmentIntersect
  href: AngeliA.Util.html#AngeliA_Util_SegmentIntersect_AngeliA_Float2_AngeliA_Float2_AngeliA_Float2_AngeliA_Float2_
  name: SegmentIntersect
  nameWithType: Util.SegmentIntersect
  fullName: AngeliA.Util.SegmentIntersect
- uid: System.Nullable{AngeliA.Float2}
  commentId: T:System.Nullable{AngeliA.Float2}
  parent: System
  definition: System.Nullable`1
  href: AngeliA.Float2.html
  name: Float2?
  nameWithType: Float2?
  fullName: AngeliA.Float2?
  spec.csharp:
  - uid: AngeliA.Float2
    name: Float2
    href: AngeliA.Float2.html
  - name: '?'
  spec.vb:
  - uid: AngeliA.Float2
    name: Float2
    href: AngeliA.Float2.html
  - name: '?'
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: AngeliA.Util.SegmentRectIntersect*
  commentId: Overload:AngeliA.Util.SegmentRectIntersect
  href: AngeliA.Util.html#AngeliA_Util_SegmentRectIntersect_AngeliA_Float2_AngeliA_Float2_AngeliA_FRect_
  name: SegmentRectIntersect
  nameWithType: Util.SegmentRectIntersect
  fullName: AngeliA.Util.SegmentRectIntersect
- uid: AngeliA.FRect
  commentId: T:AngeliA.FRect
  parent: AngeliA
  href: AngeliA.FRect.html
  name: FRect
  nameWithType: FRect
  fullName: AngeliA.FRect
- uid: System.ValueTuple{System.Nullable{AngeliA.Float2},System.Nullable{AngeliA.Float2}}
  commentId: T:System.ValueTuple{System.Nullable{AngeliA.Float2},System.Nullable{AngeliA.Float2}}
  parent: System
  definition: System.ValueTuple`2
  href: AngeliA.Float2.html
  name: (Float2? intersect0, Float2? intersect1)
  nameWithType: (Float2? intersect0, Float2? intersect1)
  fullName: (AngeliA.Float2? intersect0, AngeliA.Float2? intersect1)
  nameWithType.vb: (intersect0 As Float2?, intersect1 As Float2?)
  fullName.vb: (intersect0 As AngeliA.Float2?, intersect1 As AngeliA.Float2?)
  name.vb: (intersect0 As Float2?, intersect1 As Float2?)
  spec.csharp:
  - name: (
  - uid: AngeliA.Float2
    name: Float2
    href: AngeliA.Float2.html
  - name: '?'
  - name: " "
  - uid: System.ValueTuple{System.Nullable{AngeliA.Float2},System.Nullable{AngeliA.Float2}}.intersect0
    name: intersect0
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.nullable-angelia.float2-,system.nullable-angelia.float2--.intersect0
  - name: ','
  - name: " "
  - uid: AngeliA.Float2
    name: Float2
    href: AngeliA.Float2.html
  - name: '?'
  - name: " "
  - uid: System.ValueTuple{System.Nullable{AngeliA.Float2},System.Nullable{AngeliA.Float2}}.intersect1
    name: intersect1
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.nullable-angelia.float2-,system.nullable-angelia.float2--.intersect1
  - name: )
  spec.vb:
  - name: (
  - uid: System.ValueTuple{System.Nullable{AngeliA.Float2},System.Nullable{AngeliA.Float2}}.intersect0
    name: intersect0
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.nullable-angelia.float2-,system.nullable-angelia.float2--.intersect0
  - name: " "
  - name: As
  - name: " "
  - uid: AngeliA.Float2
    name: Float2
    href: AngeliA.Float2.html
  - name: '?'
  - name: ','
  - name: " "
  - uid: System.ValueTuple{System.Nullable{AngeliA.Float2},System.Nullable{AngeliA.Float2}}.intersect1
    name: intersect1
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.nullable-angelia.float2-,system.nullable-angelia.float2--.intersect1
  - name: " "
  - name: As
  - name: " "
  - uid: AngeliA.Float2
    name: Float2
    href: AngeliA.Float2.html
  - name: '?'
  - name: )
- uid: System.ValueTuple`2
  commentId: T:System.ValueTuple`2
  name: (T1, T2)
  nameWithType: (T1, T2)
  fullName: (T1, T2)
  spec.csharp:
  - name: (
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: )
  spec.vb:
  - name: (
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: )
- uid: AngeliA.Util.OverlapRectCircle*
  commentId: Overload:AngeliA.Util.OverlapRectCircle
  href: AngeliA.Util.html#AngeliA_Util_OverlapRectCircle_System_Int32_System_Int32_System_Int32_System_Int32_System_Int32_System_Int32_System_Int32_
  name: OverlapRectCircle
  nameWithType: Util.OverlapRectCircle
  fullName: AngeliA.Util.OverlapRectCircle
- uid: AngeliA.Util.IntToColor*
  commentId: Overload:AngeliA.Util.IntToColor
  href: AngeliA.Util.html#AngeliA_Util_IntToColor_System_Int32_
  name: IntToColor
  nameWithType: Util.IntToColor
  fullName: AngeliA.Util.IntToColor
- uid: AngeliA.Color32
  commentId: T:AngeliA.Color32
  parent: AngeliA
  href: AngeliA.Color32.html
  name: Color32
  nameWithType: Color32
  fullName: AngeliA.Color32
- uid: AngeliA.Util.ColorToInt*
  commentId: Overload:AngeliA.Util.ColorToInt
  href: AngeliA.Util.html#AngeliA_Util_ColorToInt_AngeliA_Color32_
  name: ColorToInt
  nameWithType: Util.ColorToInt
  fullName: AngeliA.Util.ColorToInt
- uid: AngeliA.Util.ColorToHtml*
  commentId: Overload:AngeliA.Util.ColorToHtml
  href: AngeliA.Util.html#AngeliA_Util_ColorToHtml_AngeliA_Color32_System_Boolean_
  name: ColorToHtml
  nameWithType: Util.ColorToHtml
  fullName: AngeliA.Util.ColorToHtml
- uid: AngeliA.Util.HtmlToColor*
  commentId: Overload:AngeliA.Util.HtmlToColor
  href: AngeliA.Util.html#AngeliA_Util_HtmlToColor_System_String_AngeliA_Color32__
  name: HtmlToColor
  nameWithType: Util.HtmlToColor
  fullName: AngeliA.Util.HtmlToColor
- uid: AngeliA.Util.TryCompute*
  commentId: Overload:AngeliA.Util.TryCompute
  href: AngeliA.Util.html#AngeliA_Util_TryCompute_System_String_System_Int32__
  name: TryCompute
  nameWithType: Util.TryCompute
  fullName: AngeliA.Util.TryCompute
- uid: AngeliA.Util.DrawLine_DDA*
  commentId: Overload:AngeliA.Util.DrawLine_DDA
  href: AngeliA.Util.html#AngeliA_Util_DrawLine_DDA_System_Int32_System_Int32_System_Int32_System_Int32_
  name: DrawLine_DDA
  nameWithType: Util.DrawLine_DDA
  fullName: AngeliA.Util.DrawLine_DDA
- uid: System.Collections.Generic.IEnumerable{AngeliA.Int2}
  commentId: T:System.Collections.Generic.IEnumerable{AngeliA.Int2}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<Int2>
  nameWithType: IEnumerable<Int2>
  fullName: System.Collections.Generic.IEnumerable<AngeliA.Int2>
  nameWithType.vb: IEnumerable(Of Int2)
  fullName.vb: System.Collections.Generic.IEnumerable(Of AngeliA.Int2)
  name.vb: IEnumerable(Of Int2)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: AngeliA.Int2
    name: Int2
    href: AngeliA.Int2.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: AngeliA.Int2
    name: Int2
    href: AngeliA.Int2.html
  - name: )
- uid: AngeliA.Util.DrawLineWithRect_DDA*
  commentId: Overload:AngeliA.Util.DrawLineWithRect_DDA
  href: AngeliA.Util.html#AngeliA_Util_DrawLineWithRect_DDA_System_Int32_System_Int32_System_Int32_System_Int32_
  name: DrawLineWithRect_DDA
  nameWithType: Util.DrawLineWithRect_DDA
  fullName: AngeliA.Util.DrawLineWithRect_DDA
- uid: System.Collections.Generic.IEnumerable{AngeliA.IRect}
  commentId: T:System.Collections.Generic.IEnumerable{AngeliA.IRect}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<IRect>
  nameWithType: IEnumerable<IRect>
  fullName: System.Collections.Generic.IEnumerable<AngeliA.IRect>
  nameWithType.vb: IEnumerable(Of IRect)
  fullName.vb: System.Collections.Generic.IEnumerable(Of AngeliA.IRect)
  name.vb: IEnumerable(Of IRect)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: AngeliA.IRect
    name: IRect
    href: AngeliA.IRect.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: AngeliA.IRect
    name: IRect
    href: AngeliA.IRect.html
  - name: )
- uid: AngeliA.Util.DrawFilledEllipse_Patrick*
  commentId: Overload:AngeliA.Util.DrawFilledEllipse_Patrick
  href: AngeliA.Util.html#AngeliA_Util_DrawFilledEllipse_Patrick_System_Int32_System_Int32_System_Int32_System_Int32_
  name: DrawFilledEllipse_Patrick
  nameWithType: Util.DrawFilledEllipse_Patrick
  fullName: AngeliA.Util.DrawFilledEllipse_Patrick
- uid: AngeliA.Util.DrawHoloEllipse_Patrick*
  commentId: Overload:AngeliA.Util.DrawHoloEllipse_Patrick
  href: AngeliA.Util.html#AngeliA_Util_DrawHoloEllipse_Patrick_System_Int32_System_Int32_System_Int32_System_Int32_
  name: DrawHoloEllipse_Patrick
  nameWithType: Util.DrawHoloEllipse_Patrick
  fullName: AngeliA.Util.DrawHoloEllipse_Patrick
- uid: AngeliA.Util.TryGetLanguageDisplayName*
  commentId: Overload:AngeliA.Util.TryGetLanguageDisplayName
  href: AngeliA.Util.html#AngeliA_Util_TryGetLanguageDisplayName_System_String_System_String__
  name: TryGetLanguageDisplayName
  nameWithType: Util.TryGetLanguageDisplayName
  fullName: AngeliA.Util.TryGetLanguageDisplayName
- uid: AngeliA.Util.GetLanguageDisplayNameInEnglish*
  commentId: Overload:AngeliA.Util.GetLanguageDisplayNameInEnglish
  href: AngeliA.Util.html#AngeliA_Util_GetLanguageDisplayNameInEnglish_System_String_
  name: GetLanguageDisplayNameInEnglish
  nameWithType: Util.GetLanguageDisplayNameInEnglish
  fullName: AngeliA.Util.GetLanguageDisplayNameInEnglish
- uid: AngeliA.Util.GetLanguageDisplayName*
  commentId: Overload:AngeliA.Util.GetLanguageDisplayName
  href: AngeliA.Util.html#AngeliA_Util_GetLanguageDisplayName_System_String_
  name: GetLanguageDisplayName
  nameWithType: Util.GetLanguageDisplayName
  fullName: AngeliA.Util.GetLanguageDisplayName
- uid: AngeliA.Util.IsSupportedLanguageISO*
  commentId: Overload:AngeliA.Util.IsSupportedLanguageISO
  href: AngeliA.Util.html#AngeliA_Util_IsSupportedLanguageISO_System_String_
  name: IsSupportedLanguageISO
  nameWithType: Util.IsSupportedLanguageISO
  fullName: AngeliA.Util.IsSupportedLanguageISO
- uid: AngeliA.Util.ForAllSystemLanguages*
  commentId: Overload:AngeliA.Util.ForAllSystemLanguages
  href: AngeliA.Util.html#AngeliA_Util_ForAllSystemLanguages
  name: ForAllSystemLanguages
  nameWithType: Util.ForAllSystemLanguages
  fullName: AngeliA.Util.ForAllSystemLanguages
- uid: AngeliA.Util.GetKeyDisplayName*
  commentId: Overload:AngeliA.Util.GetKeyDisplayName
  href: AngeliA.Util.html#AngeliA_Util_GetKeyDisplayName_AngeliA_KeyboardKey_
  name: GetKeyDisplayName
  nameWithType: Util.GetKeyDisplayName
  fullName: AngeliA.Util.GetKeyDisplayName
- uid: AngeliA.KeyboardKey
  commentId: T:AngeliA.KeyboardKey
  parent: AngeliA
  href: AngeliA.KeyboardKey.html
  name: KeyboardKey
  nameWithType: KeyboardKey
  fullName: AngeliA.KeyboardKey
- uid: AngeliA.Util.GetAngeHashForClassName*
  commentId: Overload:AngeliA.Util.GetAngeHashForClassName
  href: AngeliA.Util.html#AngeliA_Util_GetAngeHashForClassName_System_String_
  name: GetAngeHashForClassName
  nameWithType: Util.GetAngeHashForClassName
  fullName: AngeliA.Util.GetAngeHashForClassName
- uid: AngeliA.Util.AddEnvironmentVariable*
  commentId: Overload:AngeliA.Util.AddEnvironmentVariable
  href: AngeliA.Util.html#AngeliA_Util_AddEnvironmentVariable_System_String_System_String_
  name: AddEnvironmentVariable
  nameWithType: Util.AddEnvironmentVariable
  fullName: AngeliA.Util.AddEnvironmentVariable
- uid: AngeliA.Util.GetDisplayName*
  commentId: Overload:AngeliA.Util.GetDisplayName
  href: AngeliA.Util.html#AngeliA_Util_GetDisplayName_System_String_
  name: GetDisplayName
  nameWithType: Util.GetDisplayName
  fullName: AngeliA.Util.GetDisplayName
- uid: AngeliA.Util.TryGetIntFromString*
  commentId: Overload:AngeliA.Util.TryGetIntFromString
  href: AngeliA.Util.html#AngeliA_Util_TryGetIntFromString_System_String_System_Int32_System_Int32__System_Int32__
  name: TryGetIntFromString
  nameWithType: Util.TryGetIntFromString
  fullName: AngeliA.Util.TryGetIntFromString
- uid: AngeliA.Util.QuickSort*
  commentId: Overload:AngeliA.Util.QuickSort
  href: AngeliA.Util.html#AngeliA_Util_QuickSort__1___0___System_Int32_System_Int32_System_Collections_Generic_IComparer___0__
  name: QuickSort
  nameWithType: Util.QuickSort
  fullName: AngeliA.Util.QuickSort
- uid: '{T}[]'
  isExternal: true
  name: T[]
  nameWithType: T[]
  fullName: T[]
  nameWithType.vb: T()
  fullName.vb: T()
  name.vb: T()
  spec.csharp:
  - name: T
  - name: '['
  - name: ']'
  spec.vb:
  - name: T
  - name: (
  - name: )
- uid: System.Collections.Generic.IComparer{{T}}
  commentId: T:System.Collections.Generic.IComparer{`0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IComparer`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icomparer-1
  name: IComparer<T>
  nameWithType: IComparer<T>
  fullName: System.Collections.Generic.IComparer<T>
  nameWithType.vb: IComparer(Of T)
  fullName.vb: System.Collections.Generic.IComparer(Of T)
  name.vb: IComparer(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icomparer-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icomparer-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic.IComparer`1
  commentId: T:System.Collections.Generic.IComparer`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icomparer-1
  name: IComparer<T>
  nameWithType: IComparer<T>
  fullName: System.Collections.Generic.IComparer<T>
  nameWithType.vb: IComparer(Of T)
  fullName.vb: System.Collections.Generic.IComparer(Of T)
  name.vb: IComparer(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icomparer-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icomparer-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Span{{T}}
  commentId: T:System.Span{``0}
  parent: System
  definition: System.Span`1
  href: https://learn.microsoft.com/dotnet/api/system.span-1
  name: Span<T>
  nameWithType: Span<T>
  fullName: System.Span<T>
  nameWithType.vb: Span(Of T)
  fullName.vb: System.Span(Of T)
  name.vb: Span(Of T)
  spec.csharp:
  - uid: System.Span`1
    name: Span
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.span-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Span`1
    name: Span
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.span-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Span`1
  commentId: T:System.Span`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.span-1
  name: Span<T>
  nameWithType: Span<T>
  fullName: System.Span<T>
  nameWithType.vb: Span(Of T)
  fullName.vb: System.Span(Of T)
  name.vb: Span(Of T)
  spec.csharp:
  - uid: System.Span`1
    name: Span
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.span-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Span`1
    name: Span
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.span-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: AngeliA.Util.QuickRandomColor*
  commentId: Overload:AngeliA.Util.QuickRandomColor
  href: AngeliA.Util.html#AngeliA_Util_QuickRandomColor_System_Int32_System_Int32_System_Int32_System_Int32_System_Int32_System_Int32_System_Int32_System_Int32_
  name: QuickRandomColor
  nameWithType: Util.QuickRandomColor
  fullName: AngeliA.Util.QuickRandomColor
- uid: AngeliA.Util.QuickRandom*
  commentId: Overload:AngeliA.Util.QuickRandom
  href: AngeliA.Util.html#AngeliA_Util_QuickRandom_System_Int32_System_Int32_
  name: QuickRandom
  nameWithType: Util.QuickRandom
  fullName: AngeliA.Util.QuickRandom
- uid: AngeliA.Util.QuickRandomSign*
  commentId: Overload:AngeliA.Util.QuickRandomSign
  href: AngeliA.Util.html#AngeliA_Util_QuickRandomSign
  name: QuickRandomSign
  nameWithType: Util.QuickRandomSign
  fullName: AngeliA.Util.QuickRandomSign
- uid: AngeliA.Util.QuickRandomWithSeed*
  commentId: Overload:AngeliA.Util.QuickRandomWithSeed
  href: AngeliA.Util.html#AngeliA_Util_QuickRandomWithSeed_System_Int32_System_Int32_System_Int32_
  name: QuickRandomWithSeed
  nameWithType: Util.QuickRandomWithSeed
  fullName: AngeliA.Util.QuickRandomWithSeed
- uid: AngeliA.Util.ExecuteCommand*
  commentId: Overload:AngeliA.Util.ExecuteCommand
  href: AngeliA.Util.html#AngeliA_Util_ExecuteCommand_System_String_System_String_System_Int32_System_Boolean_
  name: ExecuteCommand
  nameWithType: Util.ExecuteCommand
  fullName: AngeliA.Util.ExecuteCommand
- uid: AngeliA.Util.FindNextStringStep*
  commentId: Overload:AngeliA.Util.FindNextStringStep
  href: AngeliA.Util.html#AngeliA_Util_FindNextStringStep_System_String_System_Int32_System_Boolean_
  name: FindNextStringStep
  nameWithType: Util.FindNextStringStep
  fullName: AngeliA.Util.FindNextStringStep
- uid: AngeliA.Util.GetTrimedPixels*
  commentId: Overload:AngeliA.Util.GetTrimedPixels
  href: AngeliA.Util.html#AngeliA_Util_GetTrimedPixels_AngeliA_Color32___System_Int32_System_Int32_System_Int32__System_Int32__System_Int32__System_Int32__
  name: GetTrimedPixels
  nameWithType: Util.GetTrimedPixels
  fullName: AngeliA.Util.GetTrimedPixels
- uid: AngeliA.Color32[]
  isExternal: true
  href: AngeliA.Color32.html
  name: Color32[]
  nameWithType: Color32[]
  fullName: AngeliA.Color32[]
  nameWithType.vb: Color32()
  fullName.vb: AngeliA.Color32()
  name.vb: Color32()
  spec.csharp:
  - uid: AngeliA.Color32
    name: Color32
    href: AngeliA.Color32.html
  - name: '['
  - name: ']'
  spec.vb:
  - uid: AngeliA.Color32
    name: Color32
    href: AngeliA.Color32.html
  - name: (
  - name: )
- uid: AngeliA.Util.Vector3Lerp3*
  commentId: Overload:AngeliA.Util.Vector3Lerp3
  href: AngeliA.Util.html#AngeliA_Util_Vector3Lerp3_AngeliA_Float3_AngeliA_Float3_System_Single_System_Single_System_Single_
  name: Vector3Lerp3
  nameWithType: Util.Vector3Lerp3
  fullName: AngeliA.Util.Vector3Lerp3
- uid: AngeliA.Float3
  commentId: T:AngeliA.Float3
  parent: AngeliA
  href: AngeliA.Float3.html
  name: Float3
  nameWithType: Float3
  fullName: AngeliA.Float3
- uid: AngeliA.Util.Vector2Lerp2*
  commentId: Overload:AngeliA.Util.Vector2Lerp2
  href: AngeliA.Util.html#AngeliA_Util_Vector2Lerp2_AngeliA_Float2_AngeliA_Float2_System_Single_System_Single_
  name: Vector2Lerp2
  nameWithType: Util.Vector2Lerp2
  fullName: AngeliA.Util.Vector2Lerp2
- uid: AngeliA.Util.Vector3InverseLerp3*
  commentId: Overload:AngeliA.Util.Vector3InverseLerp3
  href: AngeliA.Util.html#AngeliA_Util_Vector3InverseLerp3_AngeliA_Float3_AngeliA_Float3_System_Single_System_Single_System_Single_
  name: Vector3InverseLerp3
  nameWithType: Util.Vector3InverseLerp3
  fullName: AngeliA.Util.Vector3InverseLerp3
- uid: AngeliA.Util.Vector2InverseLerp2*
  commentId: Overload:AngeliA.Util.Vector2InverseLerp2
  href: AngeliA.Util.html#AngeliA_Util_Vector2InverseLerp2_AngeliA_Float2_AngeliA_Float2_System_Single_System_Single_
  name: Vector2InverseLerp2
  nameWithType: Util.Vector2InverseLerp2
  fullName: AngeliA.Util.Vector2InverseLerp2
- uid: AngeliA.Util.Remap*
  commentId: Overload:AngeliA.Util.Remap
  href: AngeliA.Util.html#AngeliA_Util_Remap_System_Single_System_Single_System_Single_System_Single_System_Single_
  name: Remap
  nameWithType: Util.Remap
  fullName: AngeliA.Util.Remap
- uid: AngeliA.Util.RemapUnclamped*
  commentId: Overload:AngeliA.Util.RemapUnclamped
  href: AngeliA.Util.html#AngeliA_Util_RemapUnclamped_System_Single_System_Single_System_Single_System_Single_System_Single_
  name: RemapUnclamped
  nameWithType: Util.RemapUnclamped
  fullName: AngeliA.Util.RemapUnclamped
- uid: AngeliA.Util.InverseLerp*
  commentId: Overload:AngeliA.Util.InverseLerp
  href: AngeliA.Util.html#AngeliA_Util_InverseLerp_System_Single_System_Single_System_Single_
  name: InverseLerp
  nameWithType: Util.InverseLerp
  fullName: AngeliA.Util.InverseLerp
- uid: AngeliA.Util.InverseLerpUnclamped*
  commentId: Overload:AngeliA.Util.InverseLerpUnclamped
  href: AngeliA.Util.html#AngeliA_Util_InverseLerpUnclamped_System_Single_System_Single_System_Single_
  name: InverseLerpUnclamped
  nameWithType: Util.InverseLerpUnclamped
  fullName: AngeliA.Util.InverseLerpUnclamped
- uid: AngeliA.Util.PingPong*
  commentId: Overload:AngeliA.Util.PingPong
  href: AngeliA.Util.html#AngeliA_Util_PingPong_System_Single_System_Single_
  name: PingPong
  nameWithType: Util.PingPong
  fullName: AngeliA.Util.PingPong
- uid: AngeliA.Util.Repeat*
  commentId: Overload:AngeliA.Util.Repeat
  href: AngeliA.Util.html#AngeliA_Util_Repeat_System_Single_System_Single_
  name: Repeat
  nameWithType: Util.Repeat
  fullName: AngeliA.Util.Repeat
- uid: AngeliA.Util.Lerp*
  commentId: Overload:AngeliA.Util.Lerp
  href: AngeliA.Util.html#AngeliA_Util_Lerp_System_Single_System_Single_System_Single_
  name: Lerp
  nameWithType: Util.Lerp
  fullName: AngeliA.Util.Lerp
- uid: AngeliA.Util.LerpUnclamped*
  commentId: Overload:AngeliA.Util.LerpUnclamped
  href: AngeliA.Util.html#AngeliA_Util_LerpUnclamped_System_Single_System_Single_System_Single_
  name: LerpUnclamped
  nameWithType: Util.LerpUnclamped
  fullName: AngeliA.Util.LerpUnclamped
- uid: AngeliA.Util.LerpAngle*
  commentId: Overload:AngeliA.Util.LerpAngle
  href: AngeliA.Util.html#AngeliA_Util_LerpAngle_System_Single_System_Single_System_Single_
  name: LerpAngle
  nameWithType: Util.LerpAngle
  fullName: AngeliA.Util.LerpAngle
- uid: AngeliA.Util.LerpAngleUnclamped*
  commentId: Overload:AngeliA.Util.LerpAngleUnclamped
  href: AngeliA.Util.html#AngeliA_Util_LerpAngleUnclamped_System_Single_System_Single_System_Single_
  name: LerpAngleUnclamped
  nameWithType: Util.LerpAngleUnclamped
  fullName: AngeliA.Util.LerpAngleUnclamped
- uid: AngeliA.Util.Atan*
  commentId: Overload:AngeliA.Util.Atan
  href: AngeliA.Util.html#AngeliA_Util_Atan_System_Single_System_Single_
  name: Atan
  nameWithType: Util.Atan
  fullName: AngeliA.Util.Atan
- uid: AngeliA.Util.Min*
  commentId: Overload:AngeliA.Util.Min
  href: AngeliA.Util.html#AngeliA_Util_Min_System_Int32_System_Int32_
  name: Min
  nameWithType: Util.Min
  fullName: AngeliA.Util.Min
- uid: AngeliA.Util.Max*
  commentId: Overload:AngeliA.Util.Max
  href: AngeliA.Util.html#AngeliA_Util_Max_System_Int32_System_Int32_
  name: Max
  nameWithType: Util.Max
  fullName: AngeliA.Util.Max
- uid: AngeliA.Util.Sin*
  commentId: Overload:AngeliA.Util.Sin
  href: AngeliA.Util.html#AngeliA_Util_Sin_System_Single_
  name: Sin
  nameWithType: Util.Sin
  fullName: AngeliA.Util.Sin
- uid: AngeliA.Util.Cos*
  commentId: Overload:AngeliA.Util.Cos
  href: AngeliA.Util.html#AngeliA_Util_Cos_System_Single_
  name: Cos
  nameWithType: Util.Cos
  fullName: AngeliA.Util.Cos
- uid: AngeliA.Util.Abs*
  commentId: Overload:AngeliA.Util.Abs
  href: AngeliA.Util.html#AngeliA_Util_Abs_System_Int32_
  name: Abs
  nameWithType: Util.Abs
  fullName: AngeliA.Util.Abs
- uid: AngeliA.Util.Approximately*
  commentId: Overload:AngeliA.Util.Approximately
  href: AngeliA.Util.html#AngeliA_Util_Approximately_System_Single_System_Single_
  name: Approximately
  nameWithType: Util.Approximately
  fullName: AngeliA.Util.Approximately
- uid: AngeliA.Util.Clamp*
  commentId: Overload:AngeliA.Util.Clamp
  href: AngeliA.Util.html#AngeliA_Util_Clamp_System_Int32_System_Int32_System_Int32_
  name: Clamp
  nameWithType: Util.Clamp
  fullName: AngeliA.Util.Clamp
- uid: AngeliA.Util.Clamp01*
  commentId: Overload:AngeliA.Util.Clamp01
  href: AngeliA.Util.html#AngeliA_Util_Clamp01_System_Single_
  name: Clamp01
  nameWithType: Util.Clamp01
  fullName: AngeliA.Util.Clamp01
- uid: AngeliA.Util.Pow*
  commentId: Overload:AngeliA.Util.Pow
  href: AngeliA.Util.html#AngeliA_Util_Pow_System_Single_System_Single_
  name: Pow
  nameWithType: Util.Pow
  fullName: AngeliA.Util.Pow
- uid: AngeliA.Util.Sqrt*
  commentId: Overload:AngeliA.Util.Sqrt
  href: AngeliA.Util.html#AngeliA_Util_Sqrt_System_Single_
  name: Sqrt
  nameWithType: Util.Sqrt
  fullName: AngeliA.Util.Sqrt
- uid: AngeliA.Util.RoundToInt*
  commentId: Overload:AngeliA.Util.RoundToInt
  href: AngeliA.Util.html#AngeliA_Util_RoundToInt_System_Single_
  name: RoundToInt
  nameWithType: Util.RoundToInt
  fullName: AngeliA.Util.RoundToInt
- uid: AngeliA.Util.CeilToInt*
  commentId: Overload:AngeliA.Util.CeilToInt
  href: AngeliA.Util.html#AngeliA_Util_CeilToInt_System_Single_
  name: CeilToInt
  nameWithType: Util.CeilToInt
  fullName: AngeliA.Util.CeilToInt
- uid: AngeliA.Util.FloorToInt*
  commentId: Overload:AngeliA.Util.FloorToInt
  href: AngeliA.Util.html#AngeliA_Util_FloorToInt_System_Single_
  name: FloorToInt
  nameWithType: Util.FloorToInt
  fullName: AngeliA.Util.FloorToInt
- uid: AngeliA.Util.HsvToRgb*
  commentId: Overload:AngeliA.Util.HsvToRgb
  href: AngeliA.Util.html#AngeliA_Util_HsvToRgb_System_Single_System_Single_System_Single_
  name: HsvToRgb
  nameWithType: Util.HsvToRgb
  fullName: AngeliA.Util.HsvToRgb
- uid: AngeliA.Util.HsvToRgbF*
  commentId: Overload:AngeliA.Util.HsvToRgbF
  href: AngeliA.Util.html#AngeliA_Util_HsvToRgbF_System_Single_System_Single_System_Single_
  name: HsvToRgbF
  nameWithType: Util.HsvToRgbF
  fullName: AngeliA.Util.HsvToRgbF
- uid: AngeliA.ColorF
  commentId: T:AngeliA.ColorF
  parent: AngeliA
  href: AngeliA.ColorF.html
  name: ColorF
  nameWithType: ColorF
  fullName: AngeliA.ColorF
- uid: AngeliA.Util.RGBToHSV*
  commentId: Overload:AngeliA.Util.RGBToHSV
  href: AngeliA.Util.html#AngeliA_Util_RGBToHSV_AngeliA_Color32_System_Single__System_Single__System_Single__
  name: RGBToHSV
  nameWithType: Util.RGBToHSV
  fullName: AngeliA.Util.RGBToHSV
- uid: AngeliA.Util.MergeColor_Overlay*
  commentId: Overload:AngeliA.Util.MergeColor_Overlay
  href: AngeliA.Util.html#AngeliA_Util_MergeColor_Overlay_AngeliA_ColorF_AngeliA_ColorF_
  name: MergeColor_Overlay
  nameWithType: Util.MergeColor_Overlay
  fullName: AngeliA.Util.MergeColor_Overlay
- uid: AngeliA.Util.MergeColor_Lerp*
  commentId: Overload:AngeliA.Util.MergeColor_Lerp
  href: AngeliA.Util.html#AngeliA_Util_MergeColor_Lerp_AngeliA_ColorF_AngeliA_ColorF_
  name: MergeColor_Lerp
  nameWithType: Util.MergeColor_Lerp
  fullName: AngeliA.Util.MergeColor_Lerp
- uid: AngeliA.Util.MergeColor*
  commentId: Overload:AngeliA.Util.MergeColor
  href: AngeliA.Util.html#AngeliA_Util_MergeColor_AngeliA_ColorF_AngeliA_ColorF_
  name: MergeColor
  nameWithType: Util.MergeColor
  fullName: AngeliA.Util.MergeColor
- uid: AngeliA.Util.MergeColor_Editor*
  commentId: Overload:AngeliA.Util.MergeColor_Editor
  href: AngeliA.Util.html#AngeliA_Util_MergeColor_Editor_AngeliA_Color32_AngeliA_Color32_
  name: MergeColor_Editor
  nameWithType: Util.MergeColor_Editor
  fullName: AngeliA.Util.MergeColor_Editor
- uid: AngeliA.Util.WritePixelsToConsole*
  commentId: Overload:AngeliA.Util.WritePixelsToConsole
  href: AngeliA.Util.html#AngeliA_Util_WritePixelsToConsole_AngeliA_Color32___System_Int32_
  name: WritePixelsToConsole
  nameWithType: Util.WritePixelsToConsole
  fullName: AngeliA.Util.WritePixelsToConsole
- uid: AngeliA.Util.GetDirection*
  commentId: Overload:AngeliA.Util.GetDirection
  href: AngeliA.Util.html#AngeliA_Util_GetDirection_System_Int32_System_Int32_
  name: GetDirection
  nameWithType: Util.GetDirection
  fullName: AngeliA.Util.GetDirection
- uid: AngeliA.Direction8
  commentId: T:AngeliA.Direction8
  parent: AngeliA
  href: AngeliA.Direction8.html
  name: Direction8
  nameWithType: Direction8
  fullName: AngeliA.Direction8
- uid: AngeliA.Util.ReadByte*
  commentId: Overload:AngeliA.Util.ReadByte
  href: AngeliA.Util.html#AngeliA_Util_ReadByte_System_Byte___System_Byte__
  name: ReadByte
  nameWithType: Util.ReadByte
  fullName: AngeliA.Util.ReadByte
- uid: System.Byte*
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.byte
  name: byte*
  nameWithType: byte*
  fullName: byte*
  nameWithType.vb: Byte*
  fullName.vb: Byte*
  name.vb: Byte*
  spec.csharp:
  - uid: System.Byte
    name: byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: '*'
  spec.vb:
  - uid: System.Byte
    name: Byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: '*'
- uid: System.Byte
  commentId: T:System.Byte
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.byte
  name: byte
  nameWithType: byte
  fullName: byte
  nameWithType.vb: Byte
  fullName.vb: Byte
  name.vb: Byte
- uid: AngeliA.Util.ReadSByte*
  commentId: Overload:AngeliA.Util.ReadSByte
  href: AngeliA.Util.html#AngeliA_Util_ReadSByte_System_Byte___System_Byte__
  name: ReadSByte
  nameWithType: Util.ReadSByte
  fullName: AngeliA.Util.ReadSByte
- uid: System.SByte
  commentId: T:System.SByte
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.sbyte
  name: sbyte
  nameWithType: sbyte
  fullName: sbyte
  nameWithType.vb: SByte
  fullName.vb: SByte
  name.vb: SByte
- uid: AngeliA.Util.ReadBool*
  commentId: Overload:AngeliA.Util.ReadBool
  href: AngeliA.Util.html#AngeliA_Util_ReadBool_System_Byte___System_Byte__
  name: ReadBool
  nameWithType: Util.ReadBool
  fullName: AngeliA.Util.ReadBool
- uid: AngeliA.Util.ReadChar*
  commentId: Overload:AngeliA.Util.ReadChar
  href: AngeliA.Util.html#AngeliA_Util_ReadChar_System_Byte___System_Byte__
  name: ReadChar
  nameWithType: Util.ReadChar
  fullName: AngeliA.Util.ReadChar
- uid: System.Char
  commentId: T:System.Char
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.char
  name: char
  nameWithType: char
  fullName: char
  nameWithType.vb: Char
  fullName.vb: Char
  name.vb: Char
- uid: AngeliA.Util.ReadShort*
  commentId: Overload:AngeliA.Util.ReadShort
  href: AngeliA.Util.html#AngeliA_Util_ReadShort_System_Byte___System_Byte__
  name: ReadShort
  nameWithType: Util.ReadShort
  fullName: AngeliA.Util.ReadShort
- uid: System.Int16
  commentId: T:System.Int16
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int16
  name: short
  nameWithType: short
  fullName: short
  nameWithType.vb: Short
  fullName.vb: Short
  name.vb: Short
- uid: AngeliA.Util.ReadUShort*
  commentId: Overload:AngeliA.Util.ReadUShort
  href: AngeliA.Util.html#AngeliA_Util_ReadUShort_System_Byte___System_Byte__
  name: ReadUShort
  nameWithType: Util.ReadUShort
  fullName: AngeliA.Util.ReadUShort
- uid: System.UInt16
  commentId: T:System.UInt16
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.uint16
  name: ushort
  nameWithType: ushort
  fullName: ushort
  nameWithType.vb: UShort
  fullName.vb: UShort
  name.vb: UShort
- uid: AngeliA.Util.ReadInt*
  commentId: Overload:AngeliA.Util.ReadInt
  href: AngeliA.Util.html#AngeliA_Util_ReadInt_System_Byte___System_Byte__
  name: ReadInt
  nameWithType: Util.ReadInt
  fullName: AngeliA.Util.ReadInt
- uid: AngeliA.Util.ReadUInt*
  commentId: Overload:AngeliA.Util.ReadUInt
  href: AngeliA.Util.html#AngeliA_Util_ReadUInt_System_Byte___System_Byte__
  name: ReadUInt
  nameWithType: Util.ReadUInt
  fullName: AngeliA.Util.ReadUInt
- uid: System.UInt32
  commentId: T:System.UInt32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.uint32
  name: uint
  nameWithType: uint
  fullName: uint
  nameWithType.vb: UInteger
  fullName.vb: UInteger
  name.vb: UInteger
- uid: AngeliA.Util.ReadFloat*
  commentId: Overload:AngeliA.Util.ReadFloat
  href: AngeliA.Util.html#AngeliA_Util_ReadFloat_System_Byte___System_Byte__
  name: ReadFloat
  nameWithType: Util.ReadFloat
  fullName: AngeliA.Util.ReadFloat
- uid: AngeliA.Util.ReadLong*
  commentId: Overload:AngeliA.Util.ReadLong
  href: AngeliA.Util.html#AngeliA_Util_ReadLong_System_Byte___System_Byte__
  name: ReadLong
  nameWithType: Util.ReadLong
  fullName: AngeliA.Util.ReadLong
- uid: AngeliA.Util.ReadULong*
  commentId: Overload:AngeliA.Util.ReadULong
  href: AngeliA.Util.html#AngeliA_Util_ReadULong_System_Byte___System_Byte__
  name: ReadULong
  nameWithType: Util.ReadULong
  fullName: AngeliA.Util.ReadULong
- uid: System.UInt64
  commentId: T:System.UInt64
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.uint64
  name: ulong
  nameWithType: ulong
  fullName: ulong
  nameWithType.vb: ULong
  fullName.vb: ULong
  name.vb: ULong
- uid: AngeliA.Util.ReadDouble*
  commentId: Overload:AngeliA.Util.ReadDouble
  href: AngeliA.Util.html#AngeliA_Util_ReadDouble_System_Byte___System_Byte__
  name: ReadDouble
  nameWithType: Util.ReadDouble
  fullName: AngeliA.Util.ReadDouble
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.double
  name: double
  nameWithType: double
  fullName: double
  nameWithType.vb: Double
  fullName.vb: Double
  name.vb: Double
- uid: AngeliA.Util.ReadBytes*
  commentId: Overload:AngeliA.Util.ReadBytes
  href: AngeliA.Util.html#AngeliA_Util_ReadBytes_System_Byte___System_Int32_System_Byte__
  name: ReadBytes
  nameWithType: Util.ReadBytes
  fullName: AngeliA.Util.ReadBytes
- uid: AngeliA.Util.Write*
  commentId: Overload:AngeliA.Util.Write
  href: AngeliA.Util.html#AngeliA_Util_Write_System_Byte___System_Byte_System_Byte__
  name: Write
  nameWithType: Util.Write
  fullName: AngeliA.Util.Write
- uid: AngeliA.Util.GetParentPath*
  commentId: Overload:AngeliA.Util.GetParentPath
  href: AngeliA.Util.html#AngeliA_Util_GetParentPath_System_String_
  name: GetParentPath
  nameWithType: Util.GetParentPath
  fullName: AngeliA.Util.GetParentPath
- uid: AngeliA.Util.GetFullPath*
  commentId: Overload:AngeliA.Util.GetFullPath
  href: AngeliA.Util.html#AngeliA_Util_GetFullPath_System_String_
  name: GetFullPath
  nameWithType: Util.GetFullPath
  fullName: AngeliA.Util.GetFullPath
- uid: AngeliA.Util.GetFolderFullPath*
  commentId: Overload:AngeliA.Util.GetFolderFullPath
  href: AngeliA.Util.html#AngeliA_Util_GetFolderFullPath_System_String_
  name: GetFolderFullPath
  nameWithType: Util.GetFolderFullPath
  fullName: AngeliA.Util.GetFolderFullPath
- uid: AngeliA.Util.CombinePaths*
  commentId: Overload:AngeliA.Util.CombinePaths
  href: AngeliA.Util.html#AngeliA_Util_CombinePaths_System_String_System_String_
  name: CombinePaths
  nameWithType: Util.CombinePaths
  fullName: AngeliA.Util.CombinePaths
- uid: AngeliA.Util.GetExtensionWithDot*
  commentId: Overload:AngeliA.Util.GetExtensionWithDot
  href: AngeliA.Util.html#AngeliA_Util_GetExtensionWithDot_System_String_
  name: GetExtensionWithDot
  nameWithType: Util.GetExtensionWithDot
  fullName: AngeliA.Util.GetExtensionWithDot
- uid: AngeliA.Util.GetNameWithoutExtension*
  commentId: Overload:AngeliA.Util.GetNameWithoutExtension
  href: AngeliA.Util.html#AngeliA_Util_GetNameWithoutExtension_System_String_
  name: GetNameWithoutExtension
  nameWithType: Util.GetNameWithoutExtension
  fullName: AngeliA.Util.GetNameWithoutExtension
- uid: AngeliA.Util.GetNameWithExtension*
  commentId: Overload:AngeliA.Util.GetNameWithExtension
  href: AngeliA.Util.html#AngeliA_Util_GetNameWithExtension_System_String_
  name: GetNameWithExtension
  nameWithType: Util.GetNameWithExtension
  fullName: AngeliA.Util.GetNameWithExtension
- uid: AngeliA.Util.ChangeExtension*
  commentId: Overload:AngeliA.Util.ChangeExtension
  href: AngeliA.Util.html#AngeliA_Util_ChangeExtension_System_String_System_String_
  name: ChangeExtension
  nameWithType: Util.ChangeExtension
  fullName: AngeliA.Util.ChangeExtension
- uid: AngeliA.Util.FolderExists*
  commentId: Overload:AngeliA.Util.FolderExists
  href: AngeliA.Util.html#AngeliA_Util_FolderExists_System_String_
  name: FolderExists
  nameWithType: Util.FolderExists
  fullName: AngeliA.Util.FolderExists
- uid: AngeliA.Util.FileExists*
  commentId: Overload:AngeliA.Util.FileExists
  href: AngeliA.Util.html#AngeliA_Util_FileExists_System_String_
  name: FileExists
  nameWithType: Util.FileExists
  fullName: AngeliA.Util.FileExists
- uid: AngeliA.Util.PathIsFolder*
  commentId: Overload:AngeliA.Util.PathIsFolder
  href: AngeliA.Util.html#AngeliA_Util_PathIsFolder_System_String_
  name: PathIsFolder
  nameWithType: Util.PathIsFolder
  fullName: AngeliA.Util.PathIsFolder
- uid: AngeliA.Util.GetUrl*
  commentId: Overload:AngeliA.Util.GetUrl
  href: AngeliA.Util.html#AngeliA_Util_GetUrl_System_String_
  name: GetUrl
  nameWithType: Util.GetUrl
  fullName: AngeliA.Util.GetUrl
- uid: AngeliA.Util.GetTimeString*
  commentId: Overload:AngeliA.Util.GetTimeString
  href: AngeliA.Util.html#AngeliA_Util_GetTimeString
  name: GetTimeString
  nameWithType: Util.GetTimeString
  fullName: AngeliA.Util.GetTimeString
- uid: AngeliA.Util.GetLongTime*
  commentId: Overload:AngeliA.Util.GetLongTime
  href: AngeliA.Util.html#AngeliA_Util_GetLongTime
  name: GetLongTime
  nameWithType: Util.GetLongTime
  fullName: AngeliA.Util.GetLongTime
- uid: AngeliA.Util.IsSameDay*
  commentId: Overload:AngeliA.Util.IsSameDay
  href: AngeliA.Util.html#AngeliA_Util_IsSameDay_System_Int64_System_Int64_
  name: IsSameDay
  nameWithType: Util.IsSameDay
  fullName: AngeliA.Util.IsSameDay
- uid: AngeliA.Util.GetDisplayTimeFromTicks*
  commentId: Overload:AngeliA.Util.GetDisplayTimeFromTicks
  href: AngeliA.Util.html#AngeliA_Util_GetDisplayTimeFromTicks_System_Int64_
  name: GetDisplayTimeFromTicks
  nameWithType: Util.GetDisplayTimeFromTicks
  fullName: AngeliA.Util.GetDisplayTimeFromTicks
- uid: AngeliA.Util.FixPath*
  commentId: Overload:AngeliA.Util.FixPath
  href: AngeliA.Util.html#AngeliA_Util_FixPath_System_String_System_Boolean_
  name: FixPath
  nameWithType: Util.FixPath
  fullName: AngeliA.Util.FixPath
- uid: AngeliA.Util.IsSamePath*
  commentId: Overload:AngeliA.Util.IsSamePath
  href: AngeliA.Util.html#AngeliA_Util_IsSamePath_System_String_System_String_
  name: IsSamePath
  nameWithType: Util.IsSamePath
  fullName: AngeliA.Util.IsSamePath
- uid: AngeliA.Util.IsFileHidden*
  commentId: Overload:AngeliA.Util.IsFileHidden
  href: AngeliA.Util.html#AngeliA_Util_IsFileHidden_System_String_
  name: IsFileHidden
  nameWithType: Util.IsFileHidden
  fullName: AngeliA.Util.IsFileHidden
- uid: AngeliA.Util.IsFolderHidden*
  commentId: Overload:AngeliA.Util.IsFolderHidden
  href: AngeliA.Util.html#AngeliA_Util_IsFolderHidden_System_String_
  name: IsFolderHidden
  nameWithType: Util.IsFolderHidden
  fullName: AngeliA.Util.IsFolderHidden
- uid: AngeliA.Util.IsValidForFileName*
  commentId: Overload:AngeliA.Util.IsValidForFileName
  href: AngeliA.Util.html#AngeliA_Util_IsValidForFileName_System_String_
  name: IsValidForFileName
  nameWithType: Util.IsValidForFileName
  fullName: AngeliA.Util.IsValidForFileName
- uid: AngeliA.Util.IsPathValid*
  commentId: Overload:AngeliA.Util.IsPathValid
  href: AngeliA.Util.html#AngeliA_Util_IsPathValid_System_String_
  name: IsPathValid
  nameWithType: Util.IsPathValid
  fullName: AngeliA.Util.IsPathValid
- uid: AngeliA.Util.Path_to_ArgPath*
  commentId: Overload:AngeliA.Util.Path_to_ArgPath
  href: AngeliA.Util.html#AngeliA_Util_Path_to_ArgPath_System_String_
  name: Path_to_ArgPath
  nameWithType: Util.Path_to_ArgPath
  fullName: AngeliA.Util.Path_to_ArgPath
- uid: AngeliA.Util.ArgPath_to_Path*
  commentId: Overload:AngeliA.Util.ArgPath_to_Path
  href: AngeliA.Util.html#AngeliA_Util_ArgPath_to_Path_System_String_
  name: ArgPath_to_Path
  nameWithType: Util.ArgPath_to_Path
  fullName: AngeliA.Util.ArgPath_to_Path
- uid: AngeliA.Util.TryGetRelativePath*
  commentId: Overload:AngeliA.Util.TryGetRelativePath
  href: AngeliA.Util.html#AngeliA_Util_TryGetRelativePath_System_String_System_String_System_String__
  name: TryGetRelativePath
  nameWithType: Util.TryGetRelativePath
  fullName: AngeliA.Util.TryGetRelativePath
- uid: System.Collections.Generic.List{System.Reflection.Assembly}
  commentId: T:System.Collections.Generic.List{System.Reflection.Assembly}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<Assembly>
  nameWithType: List<Assembly>
  fullName: System.Collections.Generic.List<System.Reflection.Assembly>
  nameWithType.vb: List(Of Assembly)
  fullName.vb: System.Collections.Generic.List(Of System.Reflection.Assembly)
  name.vb: List(Of Assembly)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: System.Reflection.Assembly
    name: Assembly
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.reflection.assembly
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Reflection.Assembly
    name: Assembly
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.reflection.assembly
  - name: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: AngeliA.Util.GetAllTypeSpan*
  commentId: Overload:AngeliA.Util.GetAllTypeSpan
  href: AngeliA.Util.html#AngeliA_Util_GetAllTypeSpan
  name: GetAllTypeSpan
  nameWithType: Util.GetAllTypeSpan
  fullName: AngeliA.Util.GetAllTypeSpan
- uid: System.ReadOnlySpan{System.Type}
  commentId: T:System.ReadOnlySpan{System.Type}
  parent: System
  definition: System.ReadOnlySpan`1
  href: https://learn.microsoft.com/dotnet/api/system.readonlyspan-1
  name: ReadOnlySpan<Type>
  nameWithType: ReadOnlySpan<Type>
  fullName: System.ReadOnlySpan<System.Type>
  nameWithType.vb: ReadOnlySpan(Of Type)
  fullName.vb: System.ReadOnlySpan(Of System.Type)
  name.vb: ReadOnlySpan(Of Type)
  spec.csharp:
  - uid: System.ReadOnlySpan`1
    name: ReadOnlySpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.readonlyspan-1
  - name: <
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: '>'
  spec.vb:
  - uid: System.ReadOnlySpan`1
    name: ReadOnlySpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.readonlyspan-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: )
- uid: System.ReadOnlySpan`1
  commentId: T:System.ReadOnlySpan`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.readonlyspan-1
  name: ReadOnlySpan<T>
  nameWithType: ReadOnlySpan<T>
  fullName: System.ReadOnlySpan<T>
  nameWithType.vb: ReadOnlySpan(Of T)
  fullName.vb: System.ReadOnlySpan(Of T)
  name.vb: ReadOnlySpan(Of T)
  spec.csharp:
  - uid: System.ReadOnlySpan`1
    name: ReadOnlySpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.readonlyspan-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.ReadOnlySpan`1
    name: ReadOnlySpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.readonlyspan-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: AngeliA.Util.AddAssembly*
  commentId: Overload:AngeliA.Util.AddAssembly
  href: AngeliA.Util.html#AngeliA_Util_AddAssembly_System_Reflection_Assembly_
  name: AddAssembly
  nameWithType: Util.AddAssembly
  fullName: AngeliA.Util.AddAssembly
- uid: System.Reflection.Assembly
  commentId: T:System.Reflection.Assembly
  parent: System.Reflection
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.reflection.assembly
  name: Assembly
  nameWithType: Assembly
  fullName: System.Reflection.Assembly
- uid: System.Reflection
  commentId: N:System.Reflection
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Reflection
  nameWithType: System.Reflection
  fullName: System.Reflection
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Reflection
    name: Reflection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.reflection
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Reflection
    name: Reflection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.reflection
- uid: AngeliA.Util.AllChildClass*
  commentId: Overload:AngeliA.Util.AllChildClass
  href: AngeliA.Util.html#AngeliA_Util_AllChildClass_System_Type_System_Boolean_System_Boolean_
  name: AllChildClass
  nameWithType: Util.AllChildClass
  fullName: AngeliA.Util.AllChildClass
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.type
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Collections.Generic.IEnumerable{System.Type}
  commentId: T:System.Collections.Generic.IEnumerable{System.Type}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<Type>
  nameWithType: IEnumerable<Type>
  fullName: System.Collections.Generic.IEnumerable<System.Type>
  nameWithType.vb: IEnumerable(Of Type)
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.Type)
  name.vb: IEnumerable(Of Type)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: )
- uid: AngeliA.Util.AllChildClassID*
  commentId: Overload:AngeliA.Util.AllChildClassID
  href: AngeliA.Util.html#AngeliA_Util_AllChildClassID_System_Type_System_Boolean_System_Boolean_
  name: AllChildClassID
  nameWithType: Util.AllChildClassID
  fullName: AngeliA.Util.AllChildClassID
- uid: System.Collections.Generic.IEnumerable{System.Int32}
  commentId: T:System.Collections.Generic.IEnumerable{System.Int32}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<int>
  nameWithType: IEnumerable<int>
  fullName: System.Collections.Generic.IEnumerable<int>
  nameWithType.vb: IEnumerable(Of Integer)
  fullName.vb: System.Collections.Generic.IEnumerable(Of Integer)
  name.vb: IEnumerable(Of Integer)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: AngeliA.Util.ForAllAssemblyWithAttribute*
  commentId: Overload:AngeliA.Util.ForAllAssemblyWithAttribute
  href: AngeliA.Util.html#AngeliA_Util_ForAllAssemblyWithAttribute__1
  name: ForAllAssemblyWithAttribute
  nameWithType: Util.ForAllAssemblyWithAttribute
  fullName: AngeliA.Util.ForAllAssemblyWithAttribute
- uid: System.Collections.Generic.IEnumerable{System.ValueTuple{System.Reflection.Assembly,{A}}}
  commentId: T:System.Collections.Generic.IEnumerable{System.ValueTuple{System.Reflection.Assembly,``0}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<(Assembly assembly, A attribyte)>
  nameWithType: IEnumerable<(Assembly assembly, A attribyte)>
  fullName: System.Collections.Generic.IEnumerable<(System.Reflection.Assembly assembly, A attribyte)>
  nameWithType.vb: IEnumerable(Of (assembly As Assembly, attribyte As A))
  fullName.vb: System.Collections.Generic.IEnumerable(Of (assembly As System.Reflection.Assembly, attribyte As A))
  name.vb: IEnumerable(Of (assembly As Assembly, attribyte As A))
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: (
  - uid: System.Reflection.Assembly
    name: Assembly
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.reflection.assembly
  - name: " "
  - uid: System.ValueTuple{System.Reflection.Assembly,``0}.assembly
    name: assembly
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.reflection.assembly,--0-.assembly
  - name: ','
  - name: " "
  - name: A
  - name: " "
  - uid: System.ValueTuple{System.Reflection.Assembly,``0}.attribyte
    name: attribyte
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.reflection.assembly,--0-.attribyte
  - name: )
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: (
  - uid: System.ValueTuple{System.Reflection.Assembly,``0}.assembly
    name: assembly
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.reflection.assembly,--0-.assembly
  - name: " "
  - name: As
  - name: " "
  - uid: System.Reflection.Assembly
    name: Assembly
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.reflection.assembly
  - name: ','
  - name: " "
  - uid: System.ValueTuple{System.Reflection.Assembly,``0}.attribyte
    name: attribyte
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.reflection.assembly,--0-.attribyte
  - name: " "
  - name: As
  - name: " "
  - name: A
  - name: )
  - name: )
- uid: AngeliA.Util.TryGetAttributeFromAllAssemblies*
  commentId: Overload:AngeliA.Util.TryGetAttributeFromAllAssemblies
  href: AngeliA.Util.html#AngeliA_Util_TryGetAttributeFromAllAssemblies__1
  name: TryGetAttributeFromAllAssemblies
  nameWithType: Util.TryGetAttributeFromAllAssemblies
  fullName: AngeliA.Util.TryGetAttributeFromAllAssemblies
- uid: '{A}'
  commentId: '!:A'
  definition: A
  name: A
  nameWithType: A
  fullName: A
- uid: A
  name: A
  nameWithType: A
  fullName: A
- uid: AngeliA.Util.AllEnumIdPairs*
  commentId: Overload:AngeliA.Util.AllEnumIdPairs
  href: AngeliA.Util.html#AngeliA_Util_AllEnumIdPairs__1
  name: AllEnumIdPairs
  nameWithType: Util.AllEnumIdPairs
  fullName: AngeliA.Util.AllEnumIdPairs
- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{{E},System.Int32}}
  commentId: T:System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,System.Int32}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<KeyValuePair<E, int>>
  nameWithType: IEnumerable<KeyValuePair<E, int>>
  fullName: System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<E, int>>
  nameWithType.vb: IEnumerable(Of KeyValuePair(Of E, Integer))
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of E, Integer))
  name.vb: IEnumerable(Of KeyValuePair(Of E, Integer))
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.keyvaluepair-2
  - name: <
  - name: E
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.keyvaluepair-2
  - name: (
  - name: Of
  - name: " "
  - name: E
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  - name: )
- uid: AngeliA.Util.AllClassImplemented*
  commentId: Overload:AngeliA.Util.AllClassImplemented
  href: AngeliA.Util.html#AngeliA_Util_AllClassImplemented_System_Type_System_Boolean_
  name: AllClassImplemented
  nameWithType: Util.AllClassImplemented
  fullName: AngeliA.Util.AllClassImplemented
- uid: AngeliA.Util.AllClassImplementedID*
  commentId: Overload:AngeliA.Util.AllClassImplementedID
  href: AngeliA.Util.html#AngeliA_Util_AllClassImplementedID_System_Type_System_Boolean_
  name: AllClassImplementedID
  nameWithType: Util.AllClassImplementedID
  fullName: AngeliA.Util.AllClassImplementedID
- uid: AngeliA.Util.AllClassWithAttribute*
  commentId: Overload:AngeliA.Util.AllClassWithAttribute
  href: AngeliA.Util.html#AngeliA_Util_AllClassWithAttribute_System_Type_System_Boolean_System_Boolean_
  name: AllClassWithAttribute
  nameWithType: Util.AllClassWithAttribute
  fullName: AngeliA.Util.AllClassWithAttribute
- uid: System.Collections.Generic.IEnumerable{System.ValueTuple{System.Type,System.Attribute}}
  commentId: T:System.Collections.Generic.IEnumerable{System.ValueTuple{System.Type,System.Attribute}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<(Type, Attribute)>
  nameWithType: IEnumerable<(Type, Attribute)>
  fullName: System.Collections.Generic.IEnumerable<(System.Type, System.Attribute)>
  nameWithType.vb: IEnumerable(Of (Type, Attribute))
  fullName.vb: System.Collections.Generic.IEnumerable(Of (System.Type, System.Attribute))
  name.vb: IEnumerable(Of (Type, Attribute))
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: ','
  - name: " "
  - uid: System.Attribute
    name: Attribute
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.attribute
  - name: )
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: ','
  - name: " "
  - uid: System.Attribute
    name: Attribute
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.attribute
  - name: )
  - name: )
- uid: System.Collections.Generic.IEnumerable{System.ValueTuple{System.Type,{A}}}
  commentId: T:System.Collections.Generic.IEnumerable{System.ValueTuple{System.Type,``0}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<(Type, A)>
  nameWithType: IEnumerable<(Type, A)>
  fullName: System.Collections.Generic.IEnumerable<(System.Type, A)>
  nameWithType.vb: IEnumerable(Of (Type, A))
  fullName.vb: System.Collections.Generic.IEnumerable(Of (System.Type, A))
  name.vb: IEnumerable(Of (Type, A))
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: ','
  - name: " "
  - name: A
  - name: )
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: ','
  - name: " "
  - name: A
  - name: )
  - name: )
- uid: AngeliA.Util.AllStaticMethodWithAttribute*
  commentId: Overload:AngeliA.Util.AllStaticMethodWithAttribute
  href: AngeliA.Util.html#AngeliA_Util_AllStaticMethodWithAttribute__1
  name: AllStaticMethodWithAttribute
  nameWithType: Util.AllStaticMethodWithAttribute
  fullName: AngeliA.Util.AllStaticMethodWithAttribute
- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.Reflection.MethodInfo,{T}}}
  commentId: T:System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.Reflection.MethodInfo,``0}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<KeyValuePair<MethodInfo, T>>
  nameWithType: IEnumerable<KeyValuePair<MethodInfo, T>>
  fullName: System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.Reflection.MethodInfo, T>>
  nameWithType.vb: IEnumerable(Of KeyValuePair(Of MethodInfo, T))
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of System.Reflection.MethodInfo, T))
  name.vb: IEnumerable(Of KeyValuePair(Of MethodInfo, T))
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.keyvaluepair-2
  - name: <
  - uid: System.Reflection.MethodInfo
    name: MethodInfo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.reflection.methodinfo
  - name: ','
  - name: " "
  - name: T
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.keyvaluepair-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.Reflection.MethodInfo
    name: MethodInfo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.reflection.methodinfo
  - name: ','
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: AngeliA.Util.InvokeAllStaticMethodWithAttribute*
  commentId: Overload:AngeliA.Util.InvokeAllStaticMethodWithAttribute
  href: AngeliA.Util.html#AngeliA_Util_InvokeAllStaticMethodWithAttribute__1
  name: InvokeAllStaticMethodWithAttribute
  nameWithType: Util.InvokeAllStaticMethodWithAttribute
  fullName: AngeliA.Util.InvokeAllStaticMethodWithAttribute
- uid: System.Func{System.Collections.Generic.KeyValuePair{System.Reflection.MethodInfo,{A}},System.Boolean}
  commentId: T:System.Func{System.Collections.Generic.KeyValuePair{System.Reflection.MethodInfo,``0},System.Boolean}
  parent: System
  definition: System.Func`2
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<KeyValuePair<MethodInfo, A>, bool>
  nameWithType: Func<KeyValuePair<MethodInfo, A>, bool>
  fullName: System.Func<System.Collections.Generic.KeyValuePair<System.Reflection.MethodInfo, A>, bool>
  nameWithType.vb: Func(Of KeyValuePair(Of MethodInfo, A), Boolean)
  fullName.vb: System.Func(Of System.Collections.Generic.KeyValuePair(Of System.Reflection.MethodInfo, A), Boolean)
  name.vb: Func(Of KeyValuePair(Of MethodInfo, A), Boolean)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.keyvaluepair-2
  - name: <
  - uid: System.Reflection.MethodInfo
    name: MethodInfo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.reflection.methodinfo
  - name: ','
  - name: " "
  - name: A
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.keyvaluepair-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.Reflection.MethodInfo
    name: MethodInfo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.reflection.methodinfo
  - name: ','
  - name: " "
  - name: A
  - name: )
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: System.Func`2
  commentId: T:System.Func`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<T, TResult>
  nameWithType: Func<T, TResult>
  fullName: System.Func<T, TResult>
  nameWithType.vb: Func(Of T, TResult)
  fullName.vb: System.Func(Of T, TResult)
  name.vb: Func(Of T, TResult)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: TResult
  - name: )
- uid: System.Comparison{System.Collections.Generic.KeyValuePair{System.Reflection.MethodInfo,{A}}}
  commentId: T:System.Comparison{System.Collections.Generic.KeyValuePair{System.Reflection.MethodInfo,``0}}
  parent: System
  definition: System.Comparison`1
  href: https://learn.microsoft.com/dotnet/api/system.comparison-1
  name: Comparison<KeyValuePair<MethodInfo, A>>
  nameWithType: Comparison<KeyValuePair<MethodInfo, A>>
  fullName: System.Comparison<System.Collections.Generic.KeyValuePair<System.Reflection.MethodInfo, A>>
  nameWithType.vb: Comparison(Of KeyValuePair(Of MethodInfo, A))
  fullName.vb: System.Comparison(Of System.Collections.Generic.KeyValuePair(Of System.Reflection.MethodInfo, A))
  name.vb: Comparison(Of KeyValuePair(Of MethodInfo, A))
  spec.csharp:
  - uid: System.Comparison`1
    name: Comparison
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.comparison-1
  - name: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.keyvaluepair-2
  - name: <
  - uid: System.Reflection.MethodInfo
    name: MethodInfo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.reflection.methodinfo
  - name: ','
  - name: " "
  - name: A
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Comparison`1
    name: Comparison
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.comparison-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.keyvaluepair-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.Reflection.MethodInfo
    name: MethodInfo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.reflection.methodinfo
  - name: ','
  - name: " "
  - name: A
  - name: )
  - name: )
- uid: System.Comparison`1
  commentId: T:System.Comparison`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.comparison-1
  name: Comparison<T>
  nameWithType: Comparison<T>
  fullName: System.Comparison<T>
  nameWithType.vb: Comparison(Of T)
  fullName.vb: System.Comparison(Of T)
  name.vb: Comparison(Of T)
  spec.csharp:
  - uid: System.Comparison`1
    name: Comparison
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.comparison-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Comparison`1
    name: Comparison
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.comparison-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: AngeliA.Util.InvokeStaticMethod*
  commentId: Overload:AngeliA.Util.InvokeStaticMethod
  href: AngeliA.Util.html#AngeliA_Util_InvokeStaticMethod_System_Type_System_String_System_Object___
  name: InvokeStaticMethod
  nameWithType: Util.InvokeStaticMethod
  fullName: AngeliA.Util.InvokeStaticMethod
- uid: System.Object[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object[]
  nameWithType: object[]
  fullName: object[]
  nameWithType.vb: Object()
  fullName.vb: Object()
  name.vb: Object()
  spec.csharp:
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: (
  - name: )
- uid: AngeliA.Util.InvokeMethod*
  commentId: Overload:AngeliA.Util.InvokeMethod
  href: AngeliA.Util.html#AngeliA_Util_InvokeMethod_System_Object_System_String_System_Object___
  name: InvokeMethod
  nameWithType: Util.InvokeMethod
  fullName: AngeliA.Util.InvokeMethod
- uid: AngeliA.Util.GetStaticPropertyValue*
  commentId: Overload:AngeliA.Util.GetStaticPropertyValue
  href: AngeliA.Util.html#AngeliA_Util_GetStaticPropertyValue_System_Type_System_String_
  name: GetStaticPropertyValue
  nameWithType: Util.GetStaticPropertyValue
  fullName: AngeliA.Util.GetStaticPropertyValue
- uid: AngeliA.Util.GetPropertyValue*
  commentId: Overload:AngeliA.Util.GetPropertyValue
  href: AngeliA.Util.html#AngeliA_Util_GetPropertyValue_System_Object_System_String_
  name: GetPropertyValue
  nameWithType: Util.GetPropertyValue
  fullName: AngeliA.Util.GetPropertyValue
- uid: AngeliA.Util.GetProperty*
  commentId: Overload:AngeliA.Util.GetProperty
  href: AngeliA.Util.html#AngeliA_Util_GetProperty_System_Type_System_String_
  name: GetProperty
  nameWithType: Util.GetProperty
  fullName: AngeliA.Util.GetProperty
- uid: System.Reflection.PropertyInfo
  commentId: T:System.Reflection.PropertyInfo
  parent: System.Reflection
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.reflection.propertyinfo
  name: PropertyInfo
  nameWithType: PropertyInfo
  fullName: System.Reflection.PropertyInfo
- uid: AngeliA.Util.SetStaticPropertyValue*
  commentId: Overload:AngeliA.Util.SetStaticPropertyValue
  href: AngeliA.Util.html#AngeliA_Util_SetStaticPropertyValue_System_Type_System_String_System_Object_
  name: SetStaticPropertyValue
  nameWithType: Util.SetStaticPropertyValue
  fullName: AngeliA.Util.SetStaticPropertyValue
- uid: AngeliA.Util.SetPropertyValue*
  commentId: Overload:AngeliA.Util.SetPropertyValue
  href: AngeliA.Util.html#AngeliA_Util_SetPropertyValue_System_Object_System_String_System_Object_
  name: SetPropertyValue
  nameWithType: Util.SetPropertyValue
  fullName: AngeliA.Util.SetPropertyValue
- uid: AngeliA.Util.GetFieldValue*
  commentId: Overload:AngeliA.Util.GetFieldValue
  href: AngeliA.Util.html#AngeliA_Util_GetFieldValue_System_Object_System_String_
  name: GetFieldValue
  nameWithType: Util.GetFieldValue
  fullName: AngeliA.Util.GetFieldValue
- uid: AngeliA.Util.GetField*
  commentId: Overload:AngeliA.Util.GetField
  href: AngeliA.Util.html#AngeliA_Util_GetField_System_Type_System_String_
  name: GetField
  nameWithType: Util.GetField
  fullName: AngeliA.Util.GetField
- uid: System.Reflection.FieldInfo
  commentId: T:System.Reflection.FieldInfo
  parent: System.Reflection
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.reflection.fieldinfo
  name: FieldInfo
  nameWithType: FieldInfo
  fullName: System.Reflection.FieldInfo
- uid: AngeliA.Util.SetFieldValue*
  commentId: Overload:AngeliA.Util.SetFieldValue
  href: AngeliA.Util.html#AngeliA_Util_SetFieldValue_System_Object_System_String_System_Object_
  name: SetFieldValue
  nameWithType: Util.SetFieldValue
  fullName: AngeliA.Util.SetFieldValue
- uid: AngeliA.Util.GetStaticFieldValue*
  commentId: Overload:AngeliA.Util.GetStaticFieldValue
  href: AngeliA.Util.html#AngeliA_Util_GetStaticFieldValue_System_Type_System_String_
  name: GetStaticFieldValue
  nameWithType: Util.GetStaticFieldValue
  fullName: AngeliA.Util.GetStaticFieldValue
- uid: AngeliA.Util.SetStaticFieldValue*
  commentId: Overload:AngeliA.Util.SetStaticFieldValue
  href: AngeliA.Util.html#AngeliA_Util_SetStaticFieldValue_System_Type_System_String_System_Object_
  name: SetStaticFieldValue
  nameWithType: Util.SetStaticFieldValue
  fullName: AngeliA.Util.SetStaticFieldValue
- uid: AngeliA.Util.GetFieldType*
  commentId: Overload:AngeliA.Util.GetFieldType
  href: AngeliA.Util.html#AngeliA_Util_GetFieldType_System_Object_System_String_
  name: GetFieldType
  nameWithType: Util.GetFieldType
  fullName: AngeliA.Util.GetFieldType
- uid: AngeliA.Util.GetStaticFieldType*
  commentId: Overload:AngeliA.Util.GetStaticFieldType
  href: AngeliA.Util.html#AngeliA_Util_GetStaticFieldType_System_Type_System_String_
  name: GetStaticFieldType
  nameWithType: Util.GetStaticFieldType
  fullName: AngeliA.Util.GetStaticFieldType

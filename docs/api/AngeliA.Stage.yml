### YamlMime:ManagedReference
items:
- uid: AngeliA.Stage
  commentId: T:AngeliA.Stage
  id: Stage
  parent: AngeliA
  children:
  - AngeliA.Stage.AntiSpawnRect
  - AngeliA.Stage.DelayingViewHeight
  - AngeliA.Stage.DelayingViewX
  - AngeliA.Stage.DelayingViewY
  - AngeliA.Stage.DespawnAllEntitiesOfType``1(System.Int32)
  - AngeliA.Stage.DespawnAllNonUiEntities(System.Boolean)
  - AngeliA.Stage.Enable
  - AngeliA.Stage.Entities
  - AngeliA.Stage.EntityCounts
  - AngeliA.Stage.FindEntity(System.Int32)
  - AngeliA.Stage.FindEntity``1
  - AngeliA.Stage.ForAllActiveEntities``1(System.Int32)
  - AngeliA.Stage.GetCameraCullingPadding
  - AngeliA.Stage.GetEntityCapacity(System.Int32)
  - AngeliA.Stage.GetEntityType(System.Int32)
  - AngeliA.Stage.GetOrSpawnEntity(System.Int32,System.Int32,System.Int32)
  - AngeliA.Stage.GetOrSpawnEntity``1(System.Int32,System.Int32)
  - AngeliA.Stage.GetSpawnedEntityCount(System.Int32)
  - AngeliA.Stage.IsEntityRequireDrawBehind(System.Int32)
  - AngeliA.Stage.IsEntityRequireReposition(System.Int32)
  - AngeliA.Stage.IsReady
  - AngeliA.Stage.IsValidEntityID(System.Int32)
  - AngeliA.Stage.LastSettleFrame
  - AngeliA.Stage.PeekOrGetEntity(System.Int32)
  - AngeliA.Stage.PeekOrGetEntity``1
  - AngeliA.Stage.RemoveStagedEntity(AngeliA.Int3)
  - AngeliA.Stage.SETTING_SET_VIEW_H
  - AngeliA.Stage.SETTING_SET_VIEW_X
  - AngeliA.Stage.SETTING_SET_VIEW_Y
  - AngeliA.Stage.SETTING_SET_VIEW_Z
  - AngeliA.Stage.SetViewPositionDelay(System.Int32,System.Int32,System.Int32,System.Int32)
  - AngeliA.Stage.SetViewRectImmediately(AngeliA.IRect,System.Boolean,System.Boolean)
  - AngeliA.Stage.SetViewSizeDelay(System.Int32,System.Int32,System.Int32,System.Boolean)
  - AngeliA.Stage.SetViewXDelay(System.Int32,System.Int32,System.Int32)
  - AngeliA.Stage.SetViewYDelay(System.Int32,System.Int32,System.Int32)
  - AngeliA.Stage.SetViewZ(System.Int32,System.Boolean)
  - AngeliA.Stage.Settle
  - AngeliA.Stage.SpawnEntity(System.Int32,System.Int32,System.Int32)
  - AngeliA.Stage.SpawnEntityFromWorld(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean)
  - AngeliA.Stage.SpawnEntity``1(System.Int32,System.Int32)
  - AngeliA.Stage.SpawnRect
  - AngeliA.Stage.TryFindEntity(System.Int32,AngeliA.Entity@)
  - AngeliA.Stage.TryFindEntityNearby``1(AngeliA.Int2,``0@,System.Func{``0,System.Boolean})
  - AngeliA.Stage.TryFindEntity``1(``0@)
  - AngeliA.Stage.TryGetEntities(System.Int32,System.ReadOnlySpan{AngeliA.Entity}@,System.Int32@)
  - AngeliA.Stage.TryGetStagedEntity(AngeliA.Int3,AngeliA.Entity@)
  - AngeliA.Stage.TryRepositionEntity(AngeliA.Entity,System.Boolean)
  - AngeliA.Stage.TrySpawnEntity(System.Int32,System.Int32,System.Int32,AngeliA.Entity@)
  - AngeliA.Stage.TrySpawnEntity(System.Int32,System.Object,System.Object,AngeliA.Entity@)
  - AngeliA.Stage.TrySpawnEntity``1(System.Int32,System.Int32,``0@)
  - AngeliA.Stage.ViewRect
  - AngeliA.Stage.ViewZ
  langs:
  - csharp
  - vb
  name: Stage
  nameWithType: Stage
  fullName: AngeliA.Stage
  type: Class
  source:
    remote:
      path: AngeliA Framework/src/Core/Stage.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: Stage
    path: ../AngeliA Framework/src/Core/Stage.cs
    startLine: 7
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static class Stage
    content.vb: Public Module Stage
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: AngeliA.Stage.SETTING_SET_VIEW_X
  commentId: F:AngeliA.Stage.SETTING_SET_VIEW_X
  id: SETTING_SET_VIEW_X
  parent: AngeliA.Stage
  langs:
  - csharp
  - vb
  name: SETTING_SET_VIEW_X
  nameWithType: Stage.SETTING_SET_VIEW_X
  fullName: AngeliA.Stage.SETTING_SET_VIEW_X
  type: Field
  source:
    remote:
      path: AngeliA Framework/src/Core/Stage.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: SETTING_SET_VIEW_X
    path: ../AngeliA Framework/src/Core/Stage.cs
    startLine: 102
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public const int SETTING_SET_VIEW_X = 921736235
    return:
      type: System.Int32
    content.vb: Public Const SETTING_SET_VIEW_X As Integer = 921736235
- uid: AngeliA.Stage.SETTING_SET_VIEW_Y
  commentId: F:AngeliA.Stage.SETTING_SET_VIEW_Y
  id: SETTING_SET_VIEW_Y
  parent: AngeliA.Stage
  langs:
  - csharp
  - vb
  name: SETTING_SET_VIEW_Y
  nameWithType: Stage.SETTING_SET_VIEW_Y
  fullName: AngeliA.Stage.SETTING_SET_VIEW_Y
  type: Field
  source:
    remote:
      path: AngeliA Framework/src/Core/Stage.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: SETTING_SET_VIEW_Y
    path: ../AngeliA Framework/src/Core/Stage.cs
    startLine: 103
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public const int SETTING_SET_VIEW_Y = 921736236
    return:
      type: System.Int32
    content.vb: Public Const SETTING_SET_VIEW_Y As Integer = 921736236
- uid: AngeliA.Stage.SETTING_SET_VIEW_Z
  commentId: F:AngeliA.Stage.SETTING_SET_VIEW_Z
  id: SETTING_SET_VIEW_Z
  parent: AngeliA.Stage
  langs:
  - csharp
  - vb
  name: SETTING_SET_VIEW_Z
  nameWithType: Stage.SETTING_SET_VIEW_Z
  fullName: AngeliA.Stage.SETTING_SET_VIEW_Z
  type: Field
  source:
    remote:
      path: AngeliA Framework/src/Core/Stage.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: SETTING_SET_VIEW_Z
    path: ../AngeliA Framework/src/Core/Stage.cs
    startLine: 104
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public const int SETTING_SET_VIEW_Z = 921736237
    return:
      type: System.Int32
    content.vb: Public Const SETTING_SET_VIEW_Z As Integer = 921736237
- uid: AngeliA.Stage.SETTING_SET_VIEW_H
  commentId: F:AngeliA.Stage.SETTING_SET_VIEW_H
  id: SETTING_SET_VIEW_H
  parent: AngeliA.Stage
  langs:
  - csharp
  - vb
  name: SETTING_SET_VIEW_H
  nameWithType: Stage.SETTING_SET_VIEW_H
  fullName: AngeliA.Stage.SETTING_SET_VIEW_H
  type: Field
  source:
    remote:
      path: AngeliA Framework/src/Core/Stage.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: SETTING_SET_VIEW_H
    path: ../AngeliA Framework/src/Core/Stage.cs
    startLine: 105
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public const int SETTING_SET_VIEW_H = 921736238
    return:
      type: System.Int32
    content.vb: Public Const SETTING_SET_VIEW_H As Integer = 921736238
- uid: AngeliA.Stage.EntityCounts
  commentId: P:AngeliA.Stage.EntityCounts
  id: EntityCounts
  parent: AngeliA.Stage
  langs:
  - csharp
  - vb
  name: EntityCounts
  nameWithType: Stage.EntityCounts
  fullName: AngeliA.Stage.EntityCounts
  type: Property
  source:
    remote:
      path: AngeliA Framework/src/Core/Stage.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: EntityCounts
    path: ../AngeliA Framework/src/Core/Stage.cs
    startLine: 108
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static int[] EntityCounts { get; }
    parameters: []
    return:
      type: System.Int32[]
    content.vb: Public Shared Property EntityCounts As Integer()
  overload: AngeliA.Stage.EntityCounts*
- uid: AngeliA.Stage.Entities
  commentId: P:AngeliA.Stage.Entities
  id: Entities
  parent: AngeliA.Stage
  langs:
  - csharp
  - vb
  name: Entities
  nameWithType: Stage.Entities
  fullName: AngeliA.Stage.Entities
  type: Property
  source:
    remote:
      path: AngeliA Framework/src/Core/Stage.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: Entities
    path: ../AngeliA Framework/src/Core/Stage.cs
    startLine: 109
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static Entity[][] Entities { get; }
    parameters: []
    return:
      type: AngeliA.Entity[][]
    content.vb: Public Shared Property Entities As Entity()()
  overload: AngeliA.Stage.Entities*
- uid: AngeliA.Stage.SpawnRect
  commentId: P:AngeliA.Stage.SpawnRect
  id: SpawnRect
  parent: AngeliA.Stage
  langs:
  - csharp
  - vb
  name: SpawnRect
  nameWithType: Stage.SpawnRect
  fullName: AngeliA.Stage.SpawnRect
  type: Property
  source:
    remote:
      path: AngeliA Framework/src/Core/Stage.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: SpawnRect
    path: ../AngeliA Framework/src/Core/Stage.cs
    startLine: 110
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static IRect SpawnRect { get; }
    parameters: []
    return:
      type: AngeliA.IRect
    content.vb: Public Shared Property SpawnRect As IRect
  overload: AngeliA.Stage.SpawnRect*
- uid: AngeliA.Stage.AntiSpawnRect
  commentId: P:AngeliA.Stage.AntiSpawnRect
  id: AntiSpawnRect
  parent: AngeliA.Stage
  langs:
  - csharp
  - vb
  name: AntiSpawnRect
  nameWithType: Stage.AntiSpawnRect
  fullName: AngeliA.Stage.AntiSpawnRect
  type: Property
  source:
    remote:
      path: AngeliA Framework/src/Core/Stage.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: AntiSpawnRect
    path: ../AngeliA Framework/src/Core/Stage.cs
    startLine: 111
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static IRect AntiSpawnRect { get; }
    parameters: []
    return:
      type: AngeliA.IRect
    content.vb: Public Shared Property AntiSpawnRect As IRect
  overload: AngeliA.Stage.AntiSpawnRect*
- uid: AngeliA.Stage.ViewRect
  commentId: P:AngeliA.Stage.ViewRect
  id: ViewRect
  parent: AngeliA.Stage
  langs:
  - csharp
  - vb
  name: ViewRect
  nameWithType: Stage.ViewRect
  fullName: AngeliA.Stage.ViewRect
  type: Property
  source:
    remote:
      path: AngeliA Framework/src/Core/Stage.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: ViewRect
    path: ../AngeliA Framework/src/Core/Stage.cs
    startLine: 112
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static IRect ViewRect { get; }
    parameters: []
    return:
      type: AngeliA.IRect
    content.vb: Public Shared Property ViewRect As IRect
  overload: AngeliA.Stage.ViewRect*
- uid: AngeliA.Stage.LastSettleFrame
  commentId: P:AngeliA.Stage.LastSettleFrame
  id: LastSettleFrame
  parent: AngeliA.Stage
  langs:
  - csharp
  - vb
  name: LastSettleFrame
  nameWithType: Stage.LastSettleFrame
  fullName: AngeliA.Stage.LastSettleFrame
  type: Property
  source:
    remote:
      path: AngeliA Framework/src/Core/Stage.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: LastSettleFrame
    path: ../AngeliA Framework/src/Core/Stage.cs
    startLine: 113
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static int LastSettleFrame { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Shared Property LastSettleFrame As Integer
  overload: AngeliA.Stage.LastSettleFrame*
- uid: AngeliA.Stage.ViewZ
  commentId: P:AngeliA.Stage.ViewZ
  id: ViewZ
  parent: AngeliA.Stage
  langs:
  - csharp
  - vb
  name: ViewZ
  nameWithType: Stage.ViewZ
  fullName: AngeliA.Stage.ViewZ
  type: Property
  source:
    remote:
      path: AngeliA Framework/src/Core/Stage.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: ViewZ
    path: ../AngeliA Framework/src/Core/Stage.cs
    startLine: 114
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static int ViewZ { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Shared Property ViewZ As Integer
  overload: AngeliA.Stage.ViewZ*
- uid: AngeliA.Stage.DelayingViewX
  commentId: P:AngeliA.Stage.DelayingViewX
  id: DelayingViewX
  parent: AngeliA.Stage
  langs:
  - csharp
  - vb
  name: DelayingViewX
  nameWithType: Stage.DelayingViewX
  fullName: AngeliA.Stage.DelayingViewX
  type: Property
  source:
    remote:
      path: AngeliA Framework/src/Core/Stage.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: DelayingViewX
    path: ../AngeliA Framework/src/Core/Stage.cs
    startLine: 115
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static int? DelayingViewX { get; }
    parameters: []
    return:
      type: System.Nullable{System.Int32}
    content.vb: Public Shared ReadOnly Property DelayingViewX As Integer?
  overload: AngeliA.Stage.DelayingViewX*
- uid: AngeliA.Stage.DelayingViewY
  commentId: P:AngeliA.Stage.DelayingViewY
  id: DelayingViewY
  parent: AngeliA.Stage
  langs:
  - csharp
  - vb
  name: DelayingViewY
  nameWithType: Stage.DelayingViewY
  fullName: AngeliA.Stage.DelayingViewY
  type: Property
  source:
    remote:
      path: AngeliA Framework/src/Core/Stage.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: DelayingViewY
    path: ../AngeliA Framework/src/Core/Stage.cs
    startLine: 116
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static int? DelayingViewY { get; }
    parameters: []
    return:
      type: System.Nullable{System.Int32}
    content.vb: Public Shared ReadOnly Property DelayingViewY As Integer?
  overload: AngeliA.Stage.DelayingViewY*
- uid: AngeliA.Stage.DelayingViewHeight
  commentId: P:AngeliA.Stage.DelayingViewHeight
  id: DelayingViewHeight
  parent: AngeliA.Stage
  langs:
  - csharp
  - vb
  name: DelayingViewHeight
  nameWithType: Stage.DelayingViewHeight
  fullName: AngeliA.Stage.DelayingViewHeight
  type: Property
  source:
    remote:
      path: AngeliA Framework/src/Core/Stage.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: DelayingViewHeight
    path: ../AngeliA Framework/src/Core/Stage.cs
    startLine: 117
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static int? DelayingViewHeight { get; }
    parameters: []
    return:
      type: System.Nullable{System.Int32}
    content.vb: Public Shared ReadOnly Property DelayingViewHeight As Integer?
  overload: AngeliA.Stage.DelayingViewHeight*
- uid: AngeliA.Stage.Enable
  commentId: P:AngeliA.Stage.Enable
  id: Enable
  parent: AngeliA.Stage
  langs:
  - csharp
  - vb
  name: Enable
  nameWithType: Stage.Enable
  fullName: AngeliA.Stage.Enable
  type: Property
  source:
    remote:
      path: AngeliA Framework/src/Core/Stage.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: Enable
    path: ../AngeliA Framework/src/Core/Stage.cs
    startLine: 118
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static bool Enable { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Shared Property Enable As Boolean
  overload: AngeliA.Stage.Enable*
- uid: AngeliA.Stage.IsReady
  commentId: P:AngeliA.Stage.IsReady
  id: IsReady
  parent: AngeliA.Stage
  langs:
  - csharp
  - vb
  name: IsReady
  nameWithType: Stage.IsReady
  fullName: AngeliA.Stage.IsReady
  type: Property
  source:
    remote:
      path: AngeliA Framework/src/Core/Stage.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: IsReady
    path: ../AngeliA Framework/src/Core/Stage.cs
    startLine: 119
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static bool IsReady { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Shared Property IsReady As Boolean
  overload: AngeliA.Stage.IsReady*
- uid: AngeliA.Stage.SetViewZ(System.Int32,System.Boolean)
  commentId: M:AngeliA.Stage.SetViewZ(System.Int32,System.Boolean)
  id: SetViewZ(System.Int32,System.Boolean)
  parent: AngeliA.Stage
  langs:
  - csharp
  - vb
  name: SetViewZ(int, bool)
  nameWithType: Stage.SetViewZ(int, bool)
  fullName: AngeliA.Stage.SetViewZ(int, bool)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Core/Stage.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: SetViewZ
    path: ../AngeliA Framework/src/Core/Stage.cs
    startLine: 446
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static void SetViewZ(int newZ, bool immediately = false)
    parameters:
    - id: newZ
      type: System.Int32
    - id: immediately
      type: System.Boolean
    content.vb: Public Shared Sub SetViewZ(newZ As Integer, immediately As Boolean = False)
  overload: AngeliA.Stage.SetViewZ*
  nameWithType.vb: Stage.SetViewZ(Integer, Boolean)
  fullName.vb: AngeliA.Stage.SetViewZ(Integer, Boolean)
  name.vb: SetViewZ(Integer, Boolean)
- uid: AngeliA.Stage.SetViewRectImmediately(AngeliA.IRect,System.Boolean,System.Boolean)
  commentId: M:AngeliA.Stage.SetViewRectImmediately(AngeliA.IRect,System.Boolean,System.Boolean)
  id: SetViewRectImmediately(AngeliA.IRect,System.Boolean,System.Boolean)
  parent: AngeliA.Stage
  langs:
  - csharp
  - vb
  name: SetViewRectImmediately(IRect, bool, bool)
  nameWithType: Stage.SetViewRectImmediately(IRect, bool, bool)
  fullName: AngeliA.Stage.SetViewRectImmediately(AngeliA.IRect, bool, bool)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Core/Stage.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: SetViewRectImmediately
    path: ../AngeliA Framework/src/Core/Stage.cs
    startLine: 452
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static void SetViewRectImmediately(IRect newRect, bool remapAllRenderingCells = false, bool resetDelay = true)
    parameters:
    - id: newRect
      type: AngeliA.IRect
    - id: remapAllRenderingCells
      type: System.Boolean
    - id: resetDelay
      type: System.Boolean
    content.vb: Public Shared Sub SetViewRectImmediately(newRect As IRect, remapAllRenderingCells As Boolean = False, resetDelay As Boolean = True)
  overload: AngeliA.Stage.SetViewRectImmediately*
  nameWithType.vb: Stage.SetViewRectImmediately(IRect, Boolean, Boolean)
  fullName.vb: AngeliA.Stage.SetViewRectImmediately(AngeliA.IRect, Boolean, Boolean)
  name.vb: SetViewRectImmediately(IRect, Boolean, Boolean)
- uid: AngeliA.Stage.Settle
  commentId: M:AngeliA.Stage.Settle
  id: Settle
  parent: AngeliA.Stage
  langs:
  - csharp
  - vb
  name: Settle()
  nameWithType: Stage.Settle()
  fullName: AngeliA.Stage.Settle()
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Core/Stage.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: Settle
    path: ../AngeliA Framework/src/Core/Stage.cs
    startLine: 499
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static void Settle()
    content.vb: Public Shared Sub Settle()
  overload: AngeliA.Stage.Settle*
- uid: AngeliA.Stage.SetViewPositionDelay(System.Int32,System.Int32,System.Int32,System.Int32)
  commentId: M:AngeliA.Stage.SetViewPositionDelay(System.Int32,System.Int32,System.Int32,System.Int32)
  id: SetViewPositionDelay(System.Int32,System.Int32,System.Int32,System.Int32)
  parent: AngeliA.Stage
  langs:
  - csharp
  - vb
  name: SetViewPositionDelay(int, int, int, int)
  nameWithType: Stage.SetViewPositionDelay(int, int, int, int)
  fullName: AngeliA.Stage.SetViewPositionDelay(int, int, int, int)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Core/Stage.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: SetViewPositionDelay
    path: ../AngeliA Framework/src/Core/Stage.cs
    startLine: 503
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static void SetViewPositionDelay(int x, int y, int lerp = 1000, int priority = -2147483648)
    parameters:
    - id: x
      type: System.Int32
    - id: y
      type: System.Int32
    - id: lerp
      type: System.Int32
    - id: priority
      type: System.Int32
    content.vb: Public Shared Sub SetViewPositionDelay(x As Integer, y As Integer, lerp As Integer = 1000, priority As Integer = -2147483648)
  overload: AngeliA.Stage.SetViewPositionDelay*
  nameWithType.vb: Stage.SetViewPositionDelay(Integer, Integer, Integer, Integer)
  fullName.vb: AngeliA.Stage.SetViewPositionDelay(Integer, Integer, Integer, Integer)
  name.vb: SetViewPositionDelay(Integer, Integer, Integer, Integer)
- uid: AngeliA.Stage.SetViewXDelay(System.Int32,System.Int32,System.Int32)
  commentId: M:AngeliA.Stage.SetViewXDelay(System.Int32,System.Int32,System.Int32)
  id: SetViewXDelay(System.Int32,System.Int32,System.Int32)
  parent: AngeliA.Stage
  langs:
  - csharp
  - vb
  name: SetViewXDelay(int, int, int)
  nameWithType: Stage.SetViewXDelay(int, int, int)
  fullName: AngeliA.Stage.SetViewXDelay(int, int, int)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Core/Stage.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: SetViewXDelay
    path: ../AngeliA Framework/src/Core/Stage.cs
    startLine: 510
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static void SetViewXDelay(int x, int lerp = 1000, int priority = -2147483648)
    parameters:
    - id: x
      type: System.Int32
    - id: lerp
      type: System.Int32
    - id: priority
      type: System.Int32
    content.vb: Public Shared Sub SetViewXDelay(x As Integer, lerp As Integer = 1000, priority As Integer = -2147483648)
  overload: AngeliA.Stage.SetViewXDelay*
  nameWithType.vb: Stage.SetViewXDelay(Integer, Integer, Integer)
  fullName.vb: AngeliA.Stage.SetViewXDelay(Integer, Integer, Integer)
  name.vb: SetViewXDelay(Integer, Integer, Integer)
- uid: AngeliA.Stage.SetViewYDelay(System.Int32,System.Int32,System.Int32)
  commentId: M:AngeliA.Stage.SetViewYDelay(System.Int32,System.Int32,System.Int32)
  id: SetViewYDelay(System.Int32,System.Int32,System.Int32)
  parent: AngeliA.Stage
  langs:
  - csharp
  - vb
  name: SetViewYDelay(int, int, int)
  nameWithType: Stage.SetViewYDelay(int, int, int)
  fullName: AngeliA.Stage.SetViewYDelay(int, int, int)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Core/Stage.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: SetViewYDelay
    path: ../AngeliA Framework/src/Core/Stage.cs
    startLine: 516
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static void SetViewYDelay(int y, int lerp = 1000, int priority = -2147483648)
    parameters:
    - id: y
      type: System.Int32
    - id: lerp
      type: System.Int32
    - id: priority
      type: System.Int32
    content.vb: Public Shared Sub SetViewYDelay(y As Integer, lerp As Integer = 1000, priority As Integer = -2147483648)
  overload: AngeliA.Stage.SetViewYDelay*
  nameWithType.vb: Stage.SetViewYDelay(Integer, Integer, Integer)
  fullName.vb: AngeliA.Stage.SetViewYDelay(Integer, Integer, Integer)
  name.vb: SetViewYDelay(Integer, Integer, Integer)
- uid: AngeliA.Stage.SetViewSizeDelay(System.Int32,System.Int32,System.Int32,System.Boolean)
  commentId: M:AngeliA.Stage.SetViewSizeDelay(System.Int32,System.Int32,System.Int32,System.Boolean)
  id: SetViewSizeDelay(System.Int32,System.Int32,System.Int32,System.Boolean)
  parent: AngeliA.Stage
  langs:
  - csharp
  - vb
  name: SetViewSizeDelay(int, int, int, bool)
  nameWithType: Stage.SetViewSizeDelay(int, int, int, bool)
  fullName: AngeliA.Stage.SetViewSizeDelay(int, int, int, bool)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Core/Stage.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: SetViewSizeDelay
    path: ../AngeliA Framework/src/Core/Stage.cs
    startLine: 522
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static void SetViewSizeDelay(int height, int lerp = 1000, int priority = -2147483648, bool centralized = false)
    parameters:
    - id: height
      type: System.Int32
    - id: lerp
      type: System.Int32
    - id: priority
      type: System.Int32
    - id: centralized
      type: System.Boolean
    content.vb: Public Shared Sub SetViewSizeDelay(height As Integer, lerp As Integer = 1000, priority As Integer = -2147483648, centralized As Boolean = False)
  overload: AngeliA.Stage.SetViewSizeDelay*
  nameWithType.vb: Stage.SetViewSizeDelay(Integer, Integer, Integer, Boolean)
  fullName.vb: AngeliA.Stage.SetViewSizeDelay(Integer, Integer, Integer, Boolean)
  name.vb: SetViewSizeDelay(Integer, Integer, Integer, Boolean)
- uid: AngeliA.Stage.SpawnEntity(System.Int32,System.Int32,System.Int32)
  commentId: M:AngeliA.Stage.SpawnEntity(System.Int32,System.Int32,System.Int32)
  id: SpawnEntity(System.Int32,System.Int32,System.Int32)
  parent: AngeliA.Stage
  langs:
  - csharp
  - vb
  name: SpawnEntity(int, int, int)
  nameWithType: Stage.SpawnEntity(int, int, int)
  fullName: AngeliA.Stage.SpawnEntity(int, int, int)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Core/Stage.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: SpawnEntity
    path: ../AngeliA Framework/src/Core/Stage.cs
    startLine: 531
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static Entity SpawnEntity(int typeID, int x, int y)
    parameters:
    - id: typeID
      type: System.Int32
    - id: x
      type: System.Int32
    - id: y
      type: System.Int32
    return:
      type: AngeliA.Entity
    content.vb: Public Shared Function SpawnEntity(typeID As Integer, x As Integer, y As Integer) As Entity
  overload: AngeliA.Stage.SpawnEntity*
  nameWithType.vb: Stage.SpawnEntity(Integer, Integer, Integer)
  fullName.vb: AngeliA.Stage.SpawnEntity(Integer, Integer, Integer)
  name.vb: SpawnEntity(Integer, Integer, Integer)
- uid: AngeliA.Stage.SpawnEntity``1(System.Int32,System.Int32)
  commentId: M:AngeliA.Stage.SpawnEntity``1(System.Int32,System.Int32)
  id: SpawnEntity``1(System.Int32,System.Int32)
  parent: AngeliA.Stage
  langs:
  - csharp
  - vb
  name: SpawnEntity<T>(int, int)
  nameWithType: Stage.SpawnEntity<T>(int, int)
  fullName: AngeliA.Stage.SpawnEntity<T>(int, int)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Core/Stage.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: SpawnEntity
    path: ../AngeliA Framework/src/Core/Stage.cs
    startLine: 532
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: 'public static T SpawnEntity<T>(int x, int y) where T : Entity'
    parameters:
    - id: x
      type: System.Int32
    - id: y
      type: System.Int32
    typeParameters:
    - id: T
    return:
      type: '{T}'
    content.vb: Public Shared Function SpawnEntity(Of T As Entity)(x As Integer, y As Integer) As T
  overload: AngeliA.Stage.SpawnEntity*
  nameWithType.vb: Stage.SpawnEntity(Of T)(Integer, Integer)
  fullName.vb: AngeliA.Stage.SpawnEntity(Of T)(Integer, Integer)
  name.vb: SpawnEntity(Of T)(Integer, Integer)
- uid: AngeliA.Stage.TrySpawnEntity(System.Int32,System.Int32,System.Int32,AngeliA.Entity@)
  commentId: M:AngeliA.Stage.TrySpawnEntity(System.Int32,System.Int32,System.Int32,AngeliA.Entity@)
  id: TrySpawnEntity(System.Int32,System.Int32,System.Int32,AngeliA.Entity@)
  parent: AngeliA.Stage
  langs:
  - csharp
  - vb
  name: TrySpawnEntity(int, int, int, out Entity)
  nameWithType: Stage.TrySpawnEntity(int, int, int, out Entity)
  fullName: AngeliA.Stage.TrySpawnEntity(int, int, int, out AngeliA.Entity)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Core/Stage.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: TrySpawnEntity
    path: ../AngeliA Framework/src/Core/Stage.cs
    startLine: 533
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static bool TrySpawnEntity(int typeID, int x, int y, out Entity entity)
    parameters:
    - id: typeID
      type: System.Int32
    - id: x
      type: System.Int32
    - id: y
      type: System.Int32
    - id: entity
      type: AngeliA.Entity
    return:
      type: System.Boolean
    content.vb: Public Shared Function TrySpawnEntity(typeID As Integer, x As Integer, y As Integer, entity As Entity) As Boolean
  overload: AngeliA.Stage.TrySpawnEntity*
  nameWithType.vb: Stage.TrySpawnEntity(Integer, Integer, Integer, Entity)
  fullName.vb: AngeliA.Stage.TrySpawnEntity(Integer, Integer, Integer, AngeliA.Entity)
  name.vb: TrySpawnEntity(Integer, Integer, Integer, Entity)
- uid: AngeliA.Stage.TrySpawnEntity``1(System.Int32,System.Int32,``0@)
  commentId: M:AngeliA.Stage.TrySpawnEntity``1(System.Int32,System.Int32,``0@)
  id: TrySpawnEntity``1(System.Int32,System.Int32,``0@)
  parent: AngeliA.Stage
  langs:
  - csharp
  - vb
  name: TrySpawnEntity<T>(int, int, out T)
  nameWithType: Stage.TrySpawnEntity<T>(int, int, out T)
  fullName: AngeliA.Stage.TrySpawnEntity<T>(int, int, out T)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Core/Stage.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: TrySpawnEntity
    path: ../AngeliA Framework/src/Core/Stage.cs
    startLine: 537
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: 'public static bool TrySpawnEntity<T>(int x, int y, out T entity) where T : Entity'
    parameters:
    - id: x
      type: System.Int32
    - id: y
      type: System.Int32
    - id: entity
      type: '{T}'
    typeParameters:
    - id: T
    return:
      type: System.Boolean
    content.vb: Public Shared Function TrySpawnEntity(Of T As Entity)(x As Integer, y As Integer, entity As T) As Boolean
  overload: AngeliA.Stage.TrySpawnEntity*
  nameWithType.vb: Stage.TrySpawnEntity(Of T)(Integer, Integer, T)
  fullName.vb: AngeliA.Stage.TrySpawnEntity(Of T)(Integer, Integer, T)
  name.vb: TrySpawnEntity(Of T)(Integer, Integer, T)
- uid: AngeliA.Stage.SpawnEntityFromWorld(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean)
  commentId: M:AngeliA.Stage.SpawnEntityFromWorld(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean)
  id: SpawnEntityFromWorld(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean)
  parent: AngeliA.Stage
  langs:
  - csharp
  - vb
  name: SpawnEntityFromWorld(int, int, int, int, int, int, bool)
  nameWithType: Stage.SpawnEntityFromWorld(int, int, int, int, int, int, bool)
  fullName: AngeliA.Stage.SpawnEntityFromWorld(int, int, int, int, int, int, bool)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Core/Stage.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: SpawnEntityFromWorld
    path: ../AngeliA Framework/src/Core/Stage.cs
    startLine: 545
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static Entity SpawnEntityFromWorld(int typeID, int x, int y, int z, int reposDeltaX = 0, int reposDeltaY = 0, bool forceSpawn = false)
    parameters:
    - id: typeID
      type: System.Int32
    - id: x
      type: System.Int32
    - id: y
      type: System.Int32
    - id: z
      type: System.Int32
    - id: reposDeltaX
      type: System.Int32
    - id: reposDeltaY
      type: System.Int32
    - id: forceSpawn
      type: System.Boolean
    return:
      type: AngeliA.Entity
    content.vb: Public Shared Function SpawnEntityFromWorld(typeID As Integer, x As Integer, y As Integer, z As Integer, reposDeltaX As Integer = 0, reposDeltaY As Integer = 0, forceSpawn As Boolean = False) As Entity
  overload: AngeliA.Stage.SpawnEntityFromWorld*
  nameWithType.vb: Stage.SpawnEntityFromWorld(Integer, Integer, Integer, Integer, Integer, Integer, Boolean)
  fullName.vb: AngeliA.Stage.SpawnEntityFromWorld(Integer, Integer, Integer, Integer, Integer, Integer, Boolean)
  name.vb: SpawnEntityFromWorld(Integer, Integer, Integer, Integer, Integer, Integer, Boolean)
- uid: AngeliA.Stage.FindEntity``1
  commentId: M:AngeliA.Stage.FindEntity``1
  id: FindEntity``1
  parent: AngeliA.Stage
  langs:
  - csharp
  - vb
  name: FindEntity<T>()
  nameWithType: Stage.FindEntity<T>()
  fullName: AngeliA.Stage.FindEntity<T>()
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Core/Stage.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: FindEntity
    path: ../AngeliA Framework/src/Core/Stage.cs
    startLine: 556
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: 'public static T FindEntity<T>() where T : Entity'
    typeParameters:
    - id: T
    return:
      type: '{T}'
    content.vb: Public Shared Function FindEntity(Of T As Entity)() As T
  overload: AngeliA.Stage.FindEntity*
  nameWithType.vb: Stage.FindEntity(Of T)()
  fullName.vb: AngeliA.Stage.FindEntity(Of T)()
  name.vb: FindEntity(Of T)()
- uid: AngeliA.Stage.FindEntity(System.Int32)
  commentId: M:AngeliA.Stage.FindEntity(System.Int32)
  id: FindEntity(System.Int32)
  parent: AngeliA.Stage
  langs:
  - csharp
  - vb
  name: FindEntity(int)
  nameWithType: Stage.FindEntity(int)
  fullName: AngeliA.Stage.FindEntity(int)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Core/Stage.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: FindEntity
    path: ../AngeliA Framework/src/Core/Stage.cs
    startLine: 557
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static Entity FindEntity(int typeID)
    parameters:
    - id: typeID
      type: System.Int32
    return:
      type: AngeliA.Entity
    content.vb: Public Shared Function FindEntity(typeID As Integer) As Entity
  overload: AngeliA.Stage.FindEntity*
  nameWithType.vb: Stage.FindEntity(Integer)
  fullName.vb: AngeliA.Stage.FindEntity(Integer)
  name.vb: FindEntity(Integer)
- uid: AngeliA.Stage.TryFindEntity``1(``0@)
  commentId: M:AngeliA.Stage.TryFindEntity``1(``0@)
  id: TryFindEntity``1(``0@)
  parent: AngeliA.Stage
  langs:
  - csharp
  - vb
  name: TryFindEntity<E>(out E)
  nameWithType: Stage.TryFindEntity<E>(out E)
  fullName: AngeliA.Stage.TryFindEntity<E>(out E)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Core/Stage.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: TryFindEntity
    path: ../AngeliA Framework/src/Core/Stage.cs
    startLine: 560
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: 'public static bool TryFindEntity<E>(out E result) where E : Entity'
    parameters:
    - id: result
      type: '{E}'
    typeParameters:
    - id: E
    return:
      type: System.Boolean
    content.vb: Public Shared Function TryFindEntity(Of E As Entity)(result As E) As Boolean
  overload: AngeliA.Stage.TryFindEntity*
  nameWithType.vb: Stage.TryFindEntity(Of E)(E)
  fullName.vb: AngeliA.Stage.TryFindEntity(Of E)(E)
  name.vb: TryFindEntity(Of E)(E)
- uid: AngeliA.Stage.TryFindEntity(System.Int32,AngeliA.Entity@)
  commentId: M:AngeliA.Stage.TryFindEntity(System.Int32,AngeliA.Entity@)
  id: TryFindEntity(System.Int32,AngeliA.Entity@)
  parent: AngeliA.Stage
  langs:
  - csharp
  - vb
  name: TryFindEntity(int, out Entity)
  nameWithType: Stage.TryFindEntity(int, out Entity)
  fullName: AngeliA.Stage.TryFindEntity(int, out AngeliA.Entity)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Core/Stage.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: TryFindEntity
    path: ../AngeliA Framework/src/Core/Stage.cs
    startLine: 576
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static bool TryFindEntity(int typeID, out Entity result)
    parameters:
    - id: typeID
      type: System.Int32
    - id: result
      type: AngeliA.Entity
    return:
      type: System.Boolean
    content.vb: Public Shared Function TryFindEntity(typeID As Integer, result As Entity) As Boolean
  overload: AngeliA.Stage.TryFindEntity*
  nameWithType.vb: Stage.TryFindEntity(Integer, Entity)
  fullName.vb: AngeliA.Stage.TryFindEntity(Integer, AngeliA.Entity)
  name.vb: TryFindEntity(Integer, Entity)
- uid: AngeliA.Stage.TryFindEntityNearby``1(AngeliA.Int2,``0@,System.Func{``0,System.Boolean})
  commentId: M:AngeliA.Stage.TryFindEntityNearby``1(AngeliA.Int2,``0@,System.Func{``0,System.Boolean})
  id: TryFindEntityNearby``1(AngeliA.Int2,``0@,System.Func{``0,System.Boolean})
  parent: AngeliA.Stage
  langs:
  - csharp
  - vb
  name: TryFindEntityNearby<E>(Int2, out E, Func<E, bool>)
  nameWithType: Stage.TryFindEntityNearby<E>(Int2, out E, Func<E, bool>)
  fullName: AngeliA.Stage.TryFindEntityNearby<E>(AngeliA.Int2, out E, System.Func<E, bool>)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Core/Stage.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: TryFindEntityNearby
    path: ../AngeliA Framework/src/Core/Stage.cs
    startLine: 601
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static bool TryFindEntityNearby<E>(Int2 pos, out E finalTarget, Func<E, bool> condition = null)
    parameters:
    - id: pos
      type: AngeliA.Int2
    - id: finalTarget
      type: '{E}'
    - id: condition
      type: System.Func{{E},System.Boolean}
    typeParameters:
    - id: E
    return:
      type: System.Boolean
    content.vb: Public Shared Function TryFindEntityNearby(Of E)(pos As Int2, finalTarget As E, condition As Func(Of E, Boolean) = Nothing) As Boolean
  overload: AngeliA.Stage.TryFindEntityNearby*
  nameWithType.vb: Stage.TryFindEntityNearby(Of E)(Int2, E, Func(Of E, Boolean))
  fullName.vb: AngeliA.Stage.TryFindEntityNearby(Of E)(AngeliA.Int2, E, System.Func(Of E, Boolean))
  name.vb: TryFindEntityNearby(Of E)(Int2, E, Func(Of E, Boolean))
- uid: AngeliA.Stage.TryGetEntities(System.Int32,System.ReadOnlySpan{AngeliA.Entity}@,System.Int32@)
  commentId: M:AngeliA.Stage.TryGetEntities(System.Int32,System.ReadOnlySpan{AngeliA.Entity}@,System.Int32@)
  id: TryGetEntities(System.Int32,System.ReadOnlySpan{AngeliA.Entity}@,System.Int32@)
  parent: AngeliA.Stage
  langs:
  - csharp
  - vb
  name: TryGetEntities(int, out ReadOnlySpan<Entity>, out int)
  nameWithType: Stage.TryGetEntities(int, out ReadOnlySpan<Entity>, out int)
  fullName: AngeliA.Stage.TryGetEntities(int, out System.ReadOnlySpan<AngeliA.Entity>, out int)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Core/Stage.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: TryGetEntities
    path: ../AngeliA Framework/src/Core/Stage.cs
    startLine: 628
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static bool TryGetEntities(int layer, out ReadOnlySpan<Entity> entities, out int count)
    parameters:
    - id: layer
      type: System.Int32
    - id: entities
      type: System.ReadOnlySpan{AngeliA.Entity}
    - id: count
      type: System.Int32
    return:
      type: System.Boolean
    content.vb: Public Shared Function TryGetEntities(layer As Integer, entities As ReadOnlySpan(Of Entity), count As Integer) As Boolean
  overload: AngeliA.Stage.TryGetEntities*
  nameWithType.vb: Stage.TryGetEntities(Integer, ReadOnlySpan(Of Entity), Integer)
  fullName.vb: AngeliA.Stage.TryGetEntities(Integer, System.ReadOnlySpan(Of AngeliA.Entity), Integer)
  name.vb: TryGetEntities(Integer, ReadOnlySpan(Of Entity), Integer)
- uid: AngeliA.Stage.IsValidEntityID(System.Int32)
  commentId: M:AngeliA.Stage.IsValidEntityID(System.Int32)
  id: IsValidEntityID(System.Int32)
  parent: AngeliA.Stage
  langs:
  - csharp
  - vb
  name: IsValidEntityID(int)
  nameWithType: Stage.IsValidEntityID(int)
  fullName: AngeliA.Stage.IsValidEntityID(int)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Core/Stage.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: IsValidEntityID
    path: ../AngeliA Framework/src/Core/Stage.cs
    startLine: 641
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static bool IsValidEntityID(int id)
    parameters:
    - id: id
      type: System.Int32
    return:
      type: System.Boolean
    content.vb: Public Shared Function IsValidEntityID(id As Integer) As Boolean
  overload: AngeliA.Stage.IsValidEntityID*
  nameWithType.vb: Stage.IsValidEntityID(Integer)
  fullName.vb: AngeliA.Stage.IsValidEntityID(Integer)
  name.vb: IsValidEntityID(Integer)
- uid: AngeliA.Stage.ForAllActiveEntities``1(System.Int32)
  commentId: M:AngeliA.Stage.ForAllActiveEntities``1(System.Int32)
  id: ForAllActiveEntities``1(System.Int32)
  parent: AngeliA.Stage
  langs:
  - csharp
  - vb
  name: ForAllActiveEntities<E>(int)
  nameWithType: Stage.ForAllActiveEntities<E>(int)
  fullName: AngeliA.Stage.ForAllActiveEntities<E>(int)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Core/Stage.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: ForAllActiveEntities
    path: ../AngeliA Framework/src/Core/Stage.cs
    startLine: 644
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: 'public static IEnumerable<E> ForAllActiveEntities<E>(int entityLayer = -1) where E : Entity'
    parameters:
    - id: entityLayer
      type: System.Int32
    typeParameters:
    - id: E
    return:
      type: System.Collections.Generic.IEnumerable{{E}}
    content.vb: Public Shared Function ForAllActiveEntities(Of E As Entity)(entityLayer As Integer = -1) As IEnumerable(Of E)
  overload: AngeliA.Stage.ForAllActiveEntities*
  nameWithType.vb: Stage.ForAllActiveEntities(Of E)(Integer)
  fullName.vb: AngeliA.Stage.ForAllActiveEntities(Of E)(Integer)
  name.vb: ForAllActiveEntities(Of E)(Integer)
- uid: AngeliA.Stage.GetSpawnedEntityCount(System.Int32)
  commentId: M:AngeliA.Stage.GetSpawnedEntityCount(System.Int32)
  id: GetSpawnedEntityCount(System.Int32)
  parent: AngeliA.Stage
  langs:
  - csharp
  - vb
  name: GetSpawnedEntityCount(int)
  nameWithType: Stage.GetSpawnedEntityCount(int)
  fullName: AngeliA.Stage.GetSpawnedEntityCount(int)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Core/Stage.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: GetSpawnedEntityCount
    path: ../AngeliA Framework/src/Core/Stage.cs
    startLine: 659
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static int GetSpawnedEntityCount(int id)
    parameters:
    - id: id
      type: System.Int32
    return:
      type: System.Int32
    content.vb: Public Shared Function GetSpawnedEntityCount(id As Integer) As Integer
  overload: AngeliA.Stage.GetSpawnedEntityCount*
  nameWithType.vb: Stage.GetSpawnedEntityCount(Integer)
  fullName.vb: AngeliA.Stage.GetSpawnedEntityCount(Integer)
  name.vb: GetSpawnedEntityCount(Integer)
- uid: AngeliA.Stage.TryGetStagedEntity(AngeliA.Int3,AngeliA.Entity@)
  commentId: M:AngeliA.Stage.TryGetStagedEntity(AngeliA.Int3,AngeliA.Entity@)
  id: TryGetStagedEntity(AngeliA.Int3,AngeliA.Entity@)
  parent: AngeliA.Stage
  langs:
  - csharp
  - vb
  name: TryGetStagedEntity(Int3, out Entity)
  nameWithType: Stage.TryGetStagedEntity(Int3, out Entity)
  fullName: AngeliA.Stage.TryGetStagedEntity(AngeliA.Int3, out AngeliA.Entity)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Core/Stage.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: TryGetStagedEntity
    path: ../AngeliA Framework/src/Core/Stage.cs
    startLine: 662
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static bool TryGetStagedEntity(Int3 instanceID, out Entity instance)
    parameters:
    - id: instanceID
      type: AngeliA.Int3
    - id: instance
      type: AngeliA.Entity
    return:
      type: System.Boolean
    content.vb: Public Shared Function TryGetStagedEntity(instanceID As Int3, instance As Entity) As Boolean
  overload: AngeliA.Stage.TryGetStagedEntity*
  nameWithType.vb: Stage.TryGetStagedEntity(Int3, Entity)
  fullName.vb: AngeliA.Stage.TryGetStagedEntity(AngeliA.Int3, AngeliA.Entity)
  name.vb: TryGetStagedEntity(Int3, Entity)
- uid: AngeliA.Stage.DespawnAllEntitiesOfType``1(System.Int32)
  commentId: M:AngeliA.Stage.DespawnAllEntitiesOfType``1(System.Int32)
  id: DespawnAllEntitiesOfType``1(System.Int32)
  parent: AngeliA.Stage
  langs:
  - csharp
  - vb
  name: DespawnAllEntitiesOfType<E>(int)
  nameWithType: Stage.DespawnAllEntitiesOfType<E>(int)
  fullName: AngeliA.Stage.DespawnAllEntitiesOfType<E>(int)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Core/Stage.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: DespawnAllEntitiesOfType
    path: ../AngeliA Framework/src/Core/Stage.cs
    startLine: 666
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: 'public static void DespawnAllEntitiesOfType<E>(int targetLayer = -1) where E : Entity'
    parameters:
    - id: targetLayer
      type: System.Int32
    typeParameters:
    - id: E
    content.vb: Public Shared Sub DespawnAllEntitiesOfType(Of E As Entity)(targetLayer As Integer = -1)
  overload: AngeliA.Stage.DespawnAllEntitiesOfType*
  nameWithType.vb: Stage.DespawnAllEntitiesOfType(Of E)(Integer)
  fullName.vb: AngeliA.Stage.DespawnAllEntitiesOfType(Of E)(Integer)
  name.vb: DespawnAllEntitiesOfType(Of E)(Integer)
- uid: AngeliA.Stage.RemoveStagedEntity(AngeliA.Int3)
  commentId: M:AngeliA.Stage.RemoveStagedEntity(AngeliA.Int3)
  id: RemoveStagedEntity(AngeliA.Int3)
  parent: AngeliA.Stage
  langs:
  - csharp
  - vb
  name: RemoveStagedEntity(Int3)
  nameWithType: Stage.RemoveStagedEntity(Int3)
  fullName: AngeliA.Stage.RemoveStagedEntity(AngeliA.Int3)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Core/Stage.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: RemoveStagedEntity
    path: ../AngeliA Framework/src/Core/Stage.cs
    startLine: 683
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static void RemoveStagedEntity(Int3 instanceID)
    parameters:
    - id: instanceID
      type: AngeliA.Int3
    content.vb: Public Shared Sub RemoveStagedEntity(instanceID As Int3)
  overload: AngeliA.Stage.RemoveStagedEntity*
- uid: AngeliA.Stage.DespawnAllNonUiEntities(System.Boolean)
  commentId: M:AngeliA.Stage.DespawnAllNonUiEntities(System.Boolean)
  id: DespawnAllNonUiEntities(System.Boolean)
  parent: AngeliA.Stage
  langs:
  - csharp
  - vb
  name: DespawnAllNonUiEntities(bool)
  nameWithType: Stage.DespawnAllNonUiEntities(bool)
  fullName: AngeliA.Stage.DespawnAllNonUiEntities(bool)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Core/Stage.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: DespawnAllNonUiEntities
    path: ../AngeliA Framework/src/Core/Stage.cs
    startLine: 692
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static void DespawnAllNonUiEntities(bool refreshImmediately = false)
    parameters:
    - id: refreshImmediately
      type: System.Boolean
    content.vb: Public Shared Sub DespawnAllNonUiEntities(refreshImmediately As Boolean = False)
  overload: AngeliA.Stage.DespawnAllNonUiEntities*
  nameWithType.vb: Stage.DespawnAllNonUiEntities(Boolean)
  fullName.vb: AngeliA.Stage.DespawnAllNonUiEntities(Boolean)
  name.vb: DespawnAllNonUiEntities(Boolean)
- uid: AngeliA.Stage.PeekOrGetEntity(System.Int32)
  commentId: M:AngeliA.Stage.PeekOrGetEntity(System.Int32)
  id: PeekOrGetEntity(System.Int32)
  parent: AngeliA.Stage
  langs:
  - csharp
  - vb
  name: PeekOrGetEntity(int)
  nameWithType: Stage.PeekOrGetEntity(int)
  fullName: AngeliA.Stage.PeekOrGetEntity(int)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Core/Stage.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: PeekOrGetEntity
    path: ../AngeliA Framework/src/Core/Stage.cs
    startLine: 709
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static Entity PeekOrGetEntity(int typeID)
    parameters:
    - id: typeID
      type: System.Int32
    return:
      type: AngeliA.Entity
    content.vb: Public Shared Function PeekOrGetEntity(typeID As Integer) As Entity
  overload: AngeliA.Stage.PeekOrGetEntity*
  nameWithType.vb: Stage.PeekOrGetEntity(Integer)
  fullName.vb: AngeliA.Stage.PeekOrGetEntity(Integer)
  name.vb: PeekOrGetEntity(Integer)
- uid: AngeliA.Stage.PeekOrGetEntity``1
  commentId: M:AngeliA.Stage.PeekOrGetEntity``1
  id: PeekOrGetEntity``1
  parent: AngeliA.Stage
  langs:
  - csharp
  - vb
  name: PeekOrGetEntity<T>()
  nameWithType: Stage.PeekOrGetEntity<T>()
  fullName: AngeliA.Stage.PeekOrGetEntity<T>()
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Core/Stage.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: PeekOrGetEntity
    path: ../AngeliA Framework/src/Core/Stage.cs
    startLine: 710
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: 'public static T PeekOrGetEntity<T>() where T : Entity'
    typeParameters:
    - id: T
    return:
      type: '{T}'
    content.vb: Public Shared Function PeekOrGetEntity(Of T As Entity)() As T
  overload: AngeliA.Stage.PeekOrGetEntity*
  nameWithType.vb: Stage.PeekOrGetEntity(Of T)()
  fullName.vb: AngeliA.Stage.PeekOrGetEntity(Of T)()
  name.vb: PeekOrGetEntity(Of T)()
- uid: AngeliA.Stage.GetOrSpawnEntity(System.Int32,System.Int32,System.Int32)
  commentId: M:AngeliA.Stage.GetOrSpawnEntity(System.Int32,System.Int32,System.Int32)
  id: GetOrSpawnEntity(System.Int32,System.Int32,System.Int32)
  parent: AngeliA.Stage
  langs:
  - csharp
  - vb
  name: GetOrSpawnEntity(int, int, int)
  nameWithType: Stage.GetOrSpawnEntity(int, int, int)
  fullName: AngeliA.Stage.GetOrSpawnEntity(int, int, int)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Core/Stage.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: GetOrSpawnEntity
    path: ../AngeliA Framework/src/Core/Stage.cs
    startLine: 711
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static Entity GetOrSpawnEntity(int typeID, int x, int y)
    parameters:
    - id: typeID
      type: System.Int32
    - id: x
      type: System.Int32
    - id: y
      type: System.Int32
    return:
      type: AngeliA.Entity
    content.vb: Public Shared Function GetOrSpawnEntity(typeID As Integer, x As Integer, y As Integer) As Entity
  overload: AngeliA.Stage.GetOrSpawnEntity*
  nameWithType.vb: Stage.GetOrSpawnEntity(Integer, Integer, Integer)
  fullName.vb: AngeliA.Stage.GetOrSpawnEntity(Integer, Integer, Integer)
  name.vb: GetOrSpawnEntity(Integer, Integer, Integer)
- uid: AngeliA.Stage.GetOrSpawnEntity``1(System.Int32,System.Int32)
  commentId: M:AngeliA.Stage.GetOrSpawnEntity``1(System.Int32,System.Int32)
  id: GetOrSpawnEntity``1(System.Int32,System.Int32)
  parent: AngeliA.Stage
  langs:
  - csharp
  - vb
  name: GetOrSpawnEntity<T>(int, int)
  nameWithType: Stage.GetOrSpawnEntity<T>(int, int)
  fullName: AngeliA.Stage.GetOrSpawnEntity<T>(int, int)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Core/Stage.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: GetOrSpawnEntity
    path: ../AngeliA Framework/src/Core/Stage.cs
    startLine: 720
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: 'public static T GetOrSpawnEntity<T>(int x, int y) where T : Entity'
    parameters:
    - id: x
      type: System.Int32
    - id: y
      type: System.Int32
    typeParameters:
    - id: T
    return:
      type: '{T}'
    content.vb: Public Shared Function GetOrSpawnEntity(Of T As Entity)(x As Integer, y As Integer) As T
  overload: AngeliA.Stage.GetOrSpawnEntity*
  nameWithType.vb: Stage.GetOrSpawnEntity(Of T)(Integer, Integer)
  fullName.vb: AngeliA.Stage.GetOrSpawnEntity(Of T)(Integer, Integer)
  name.vb: GetOrSpawnEntity(Of T)(Integer, Integer)
- uid: AngeliA.Stage.IsEntityRequireDrawBehind(System.Int32)
  commentId: M:AngeliA.Stage.IsEntityRequireDrawBehind(System.Int32)
  id: IsEntityRequireDrawBehind(System.Int32)
  parent: AngeliA.Stage
  langs:
  - csharp
  - vb
  name: IsEntityRequireDrawBehind(int)
  nameWithType: Stage.IsEntityRequireDrawBehind(int)
  fullName: AngeliA.Stage.IsEntityRequireDrawBehind(int)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Core/Stage.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: IsEntityRequireDrawBehind
    path: ../AngeliA Framework/src/Core/Stage.cs
    startLine: 732
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static bool IsEntityRequireDrawBehind(int id)
    parameters:
    - id: id
      type: System.Int32
    return:
      type: System.Boolean
    content.vb: Public Shared Function IsEntityRequireDrawBehind(id As Integer) As Boolean
  overload: AngeliA.Stage.IsEntityRequireDrawBehind*
  nameWithType.vb: Stage.IsEntityRequireDrawBehind(Integer)
  fullName.vb: AngeliA.Stage.IsEntityRequireDrawBehind(Integer)
  name.vb: IsEntityRequireDrawBehind(Integer)
- uid: AngeliA.Stage.GetEntityCapacity(System.Int32)
  commentId: M:AngeliA.Stage.GetEntityCapacity(System.Int32)
  id: GetEntityCapacity(System.Int32)
  parent: AngeliA.Stage
  langs:
  - csharp
  - vb
  name: GetEntityCapacity(int)
  nameWithType: Stage.GetEntityCapacity(int)
  fullName: AngeliA.Stage.GetEntityCapacity(int)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Core/Stage.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: GetEntityCapacity
    path: ../AngeliA Framework/src/Core/Stage.cs
    startLine: 735
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static int GetEntityCapacity(int typeID)
    parameters:
    - id: typeID
      type: System.Int32
    return:
      type: System.Int32
    content.vb: Public Shared Function GetEntityCapacity(typeID As Integer) As Integer
  overload: AngeliA.Stage.GetEntityCapacity*
  nameWithType.vb: Stage.GetEntityCapacity(Integer)
  fullName.vb: AngeliA.Stage.GetEntityCapacity(Integer)
  name.vb: GetEntityCapacity(Integer)
- uid: AngeliA.Stage.IsEntityRequireReposition(System.Int32)
  commentId: M:AngeliA.Stage.IsEntityRequireReposition(System.Int32)
  id: IsEntityRequireReposition(System.Int32)
  parent: AngeliA.Stage
  langs:
  - csharp
  - vb
  name: IsEntityRequireReposition(int)
  nameWithType: Stage.IsEntityRequireReposition(int)
  fullName: AngeliA.Stage.IsEntityRequireReposition(int)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Core/Stage.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: IsEntityRequireReposition
    path: ../AngeliA Framework/src/Core/Stage.cs
    startLine: 738
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static bool IsEntityRequireReposition(int typeID)
    parameters:
    - id: typeID
      type: System.Int32
    return:
      type: System.Boolean
    content.vb: Public Shared Function IsEntityRequireReposition(typeID As Integer) As Boolean
  overload: AngeliA.Stage.IsEntityRequireReposition*
  nameWithType.vb: Stage.IsEntityRequireReposition(Integer)
  fullName.vb: AngeliA.Stage.IsEntityRequireReposition(Integer)
  name.vb: IsEntityRequireReposition(Integer)
- uid: AngeliA.Stage.GetCameraCullingPadding
  commentId: M:AngeliA.Stage.GetCameraCullingPadding
  id: GetCameraCullingPadding
  parent: AngeliA.Stage
  langs:
  - csharp
  - vb
  name: GetCameraCullingPadding()
  nameWithType: Stage.GetCameraCullingPadding()
  fullName: AngeliA.Stage.GetCameraCullingPadding()
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Core/Stage.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: GetCameraCullingPadding
    path: ../AngeliA Framework/src/Core/Stage.cs
    startLine: 741
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static Int4 GetCameraCullingPadding()
    return:
      type: AngeliA.Int4
    content.vb: Public Shared Function GetCameraCullingPadding() As Int4
  overload: AngeliA.Stage.GetCameraCullingPadding*
- uid: AngeliA.Stage.GetEntityType(System.Int32)
  commentId: M:AngeliA.Stage.GetEntityType(System.Int32)
  id: GetEntityType(System.Int32)
  parent: AngeliA.Stage
  langs:
  - csharp
  - vb
  name: GetEntityType(int)
  nameWithType: Stage.GetEntityType(int)
  fullName: AngeliA.Stage.GetEntityType(int)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Core/Stage.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: GetEntityType
    path: ../AngeliA Framework/src/Core/Stage.cs
    startLine: 749
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static Type GetEntityType(int id)
    parameters:
    - id: id
      type: System.Int32
    return:
      type: System.Type
    content.vb: Public Shared Function GetEntityType(id As Integer) As Type
  overload: AngeliA.Stage.GetEntityType*
  nameWithType.vb: Stage.GetEntityType(Integer)
  fullName.vb: AngeliA.Stage.GetEntityType(Integer)
  name.vb: GetEntityType(Integer)
- uid: AngeliA.Stage.TryRepositionEntity(AngeliA.Entity,System.Boolean)
  commentId: M:AngeliA.Stage.TryRepositionEntity(AngeliA.Entity,System.Boolean)
  id: TryRepositionEntity(AngeliA.Entity,System.Boolean)
  parent: AngeliA.Stage
  langs:
  - csharp
  - vb
  name: TryRepositionEntity(Entity, bool)
  nameWithType: Stage.TryRepositionEntity(Entity, bool)
  fullName: AngeliA.Stage.TryRepositionEntity(AngeliA.Entity, bool)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Core/Stage.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: TryRepositionEntity
    path: ../AngeliA Framework/src/Core/Stage.cs
    startLine: 757
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static void TryRepositionEntity(Entity entity, bool carryThoughZ = false)
    parameters:
    - id: entity
      type: AngeliA.Entity
    - id: carryThoughZ
      type: System.Boolean
    content.vb: Public Shared Sub TryRepositionEntity(entity As Entity, carryThoughZ As Boolean = False)
  overload: AngeliA.Stage.TryRepositionEntity*
  nameWithType.vb: Stage.TryRepositionEntity(Entity, Boolean)
  fullName.vb: AngeliA.Stage.TryRepositionEntity(AngeliA.Entity, Boolean)
  name.vb: TryRepositionEntity(Entity, Boolean)
- uid: AngeliA.Stage.TrySpawnEntity(System.Int32,System.Object,System.Object,AngeliA.Entity@)
  commentId: M:AngeliA.Stage.TrySpawnEntity(System.Int32,System.Object,System.Object,AngeliA.Entity@)
  id: TrySpawnEntity(System.Int32,System.Object,System.Object,AngeliA.Entity@)
  parent: AngeliA.Stage
  langs:
  - csharp
  - vb
  name: TrySpawnEntity(int, object, object, out Entity)
  nameWithType: Stage.TrySpawnEntity(int, object, object, out Entity)
  fullName: AngeliA.Stage.TrySpawnEntity(int, object, object, out AngeliA.Entity)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Core/Stage.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: TrySpawnEntity
    path: ../AngeliA Framework/src/Core/Stage.cs
    startLine: 963
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static void TrySpawnEntity(int tYPE_ID, object x, object value, out Entity _)
    parameters:
    - id: tYPE_ID
      type: System.Int32
    - id: x
      type: System.Object
    - id: value
      type: System.Object
    - id: _
      type: AngeliA.Entity
    content.vb: Public Shared Sub TrySpawnEntity(tYPE_ID As Integer, x As Object, value As Object, _ As Entity)
  overload: AngeliA.Stage.TrySpawnEntity*
  nameWithType.vb: Stage.TrySpawnEntity(Integer, Object, Object, Entity)
  fullName.vb: AngeliA.Stage.TrySpawnEntity(Integer, Object, Object, AngeliA.Entity)
  name.vb: TrySpawnEntity(Integer, Object, Object, Entity)
references:
- uid: AngeliA
  commentId: N:AngeliA
  href: AngeliA.html
  name: AngeliA
  nameWithType: AngeliA
  fullName: AngeliA
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: AngeliA.Stage.EntityCounts*
  commentId: Overload:AngeliA.Stage.EntityCounts
  href: AngeliA.Stage.html#AngeliA_Stage_EntityCounts
  name: EntityCounts
  nameWithType: Stage.EntityCounts
  fullName: AngeliA.Stage.EntityCounts
- uid: System.Int32[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int[]
  nameWithType: int[]
  fullName: int[]
  nameWithType.vb: Integer()
  fullName.vb: Integer()
  name.vb: Integer()
  spec.csharp:
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: (
  - name: )
- uid: AngeliA.Stage.Entities*
  commentId: Overload:AngeliA.Stage.Entities
  href: AngeliA.Stage.html#AngeliA_Stage_Entities
  name: Entities
  nameWithType: Stage.Entities
  fullName: AngeliA.Stage.Entities
- uid: AngeliA.Entity[][]
  isExternal: true
  href: AngeliA.Entity.html
  name: Entity[][]
  nameWithType: Entity[][]
  fullName: AngeliA.Entity[][]
  nameWithType.vb: Entity()()
  fullName.vb: AngeliA.Entity()()
  name.vb: Entity()()
  spec.csharp:
  - uid: AngeliA.Entity
    name: Entity
    href: AngeliA.Entity.html
  - name: '['
  - name: ']'
  - name: '['
  - name: ']'
  spec.vb:
  - uid: AngeliA.Entity
    name: Entity
    href: AngeliA.Entity.html
  - name: (
  - name: )
  - name: (
  - name: )
- uid: AngeliA.Stage.SpawnRect*
  commentId: Overload:AngeliA.Stage.SpawnRect
  href: AngeliA.Stage.html#AngeliA_Stage_SpawnRect
  name: SpawnRect
  nameWithType: Stage.SpawnRect
  fullName: AngeliA.Stage.SpawnRect
- uid: AngeliA.IRect
  commentId: T:AngeliA.IRect
  parent: AngeliA
  href: AngeliA.IRect.html
  name: IRect
  nameWithType: IRect
  fullName: AngeliA.IRect
- uid: AngeliA.Stage.AntiSpawnRect*
  commentId: Overload:AngeliA.Stage.AntiSpawnRect
  href: AngeliA.Stage.html#AngeliA_Stage_AntiSpawnRect
  name: AntiSpawnRect
  nameWithType: Stage.AntiSpawnRect
  fullName: AngeliA.Stage.AntiSpawnRect
- uid: AngeliA.Stage.ViewRect*
  commentId: Overload:AngeliA.Stage.ViewRect
  href: AngeliA.Stage.html#AngeliA_Stage_ViewRect
  name: ViewRect
  nameWithType: Stage.ViewRect
  fullName: AngeliA.Stage.ViewRect
- uid: AngeliA.Stage.LastSettleFrame*
  commentId: Overload:AngeliA.Stage.LastSettleFrame
  href: AngeliA.Stage.html#AngeliA_Stage_LastSettleFrame
  name: LastSettleFrame
  nameWithType: Stage.LastSettleFrame
  fullName: AngeliA.Stage.LastSettleFrame
- uid: AngeliA.Stage.ViewZ*
  commentId: Overload:AngeliA.Stage.ViewZ
  href: AngeliA.Stage.html#AngeliA_Stage_ViewZ
  name: ViewZ
  nameWithType: Stage.ViewZ
  fullName: AngeliA.Stage.ViewZ
- uid: AngeliA.Stage.DelayingViewX*
  commentId: Overload:AngeliA.Stage.DelayingViewX
  href: AngeliA.Stage.html#AngeliA_Stage_DelayingViewX
  name: DelayingViewX
  nameWithType: Stage.DelayingViewX
  fullName: AngeliA.Stage.DelayingViewX
- uid: System.Nullable{System.Int32}
  commentId: T:System.Nullable{System.Int32}
  parent: System
  definition: System.Nullable`1
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int?
  nameWithType: int?
  fullName: int?
  nameWithType.vb: Integer?
  fullName.vb: Integer?
  name.vb: Integer?
  spec.csharp:
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '?'
  spec.vb:
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '?'
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: AngeliA.Stage.DelayingViewY*
  commentId: Overload:AngeliA.Stage.DelayingViewY
  href: AngeliA.Stage.html#AngeliA_Stage_DelayingViewY
  name: DelayingViewY
  nameWithType: Stage.DelayingViewY
  fullName: AngeliA.Stage.DelayingViewY
- uid: AngeliA.Stage.DelayingViewHeight*
  commentId: Overload:AngeliA.Stage.DelayingViewHeight
  href: AngeliA.Stage.html#AngeliA_Stage_DelayingViewHeight
  name: DelayingViewHeight
  nameWithType: Stage.DelayingViewHeight
  fullName: AngeliA.Stage.DelayingViewHeight
- uid: AngeliA.Stage.Enable*
  commentId: Overload:AngeliA.Stage.Enable
  href: AngeliA.Stage.html#AngeliA_Stage_Enable
  name: Enable
  nameWithType: Stage.Enable
  fullName: AngeliA.Stage.Enable
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: AngeliA.Stage.IsReady*
  commentId: Overload:AngeliA.Stage.IsReady
  href: AngeliA.Stage.html#AngeliA_Stage_IsReady
  name: IsReady
  nameWithType: Stage.IsReady
  fullName: AngeliA.Stage.IsReady
- uid: AngeliA.Stage.SetViewZ*
  commentId: Overload:AngeliA.Stage.SetViewZ
  href: AngeliA.Stage.html#AngeliA_Stage_SetViewZ_System_Int32_System_Boolean_
  name: SetViewZ
  nameWithType: Stage.SetViewZ
  fullName: AngeliA.Stage.SetViewZ
- uid: AngeliA.Stage.SetViewRectImmediately*
  commentId: Overload:AngeliA.Stage.SetViewRectImmediately
  href: AngeliA.Stage.html#AngeliA_Stage_SetViewRectImmediately_AngeliA_IRect_System_Boolean_System_Boolean_
  name: SetViewRectImmediately
  nameWithType: Stage.SetViewRectImmediately
  fullName: AngeliA.Stage.SetViewRectImmediately
- uid: AngeliA.Stage.Settle*
  commentId: Overload:AngeliA.Stage.Settle
  href: AngeliA.Stage.html#AngeliA_Stage_Settle
  name: Settle
  nameWithType: Stage.Settle
  fullName: AngeliA.Stage.Settle
- uid: AngeliA.Stage.SetViewPositionDelay*
  commentId: Overload:AngeliA.Stage.SetViewPositionDelay
  href: AngeliA.Stage.html#AngeliA_Stage_SetViewPositionDelay_System_Int32_System_Int32_System_Int32_System_Int32_
  name: SetViewPositionDelay
  nameWithType: Stage.SetViewPositionDelay
  fullName: AngeliA.Stage.SetViewPositionDelay
- uid: AngeliA.Stage.SetViewXDelay*
  commentId: Overload:AngeliA.Stage.SetViewXDelay
  href: AngeliA.Stage.html#AngeliA_Stage_SetViewXDelay_System_Int32_System_Int32_System_Int32_
  name: SetViewXDelay
  nameWithType: Stage.SetViewXDelay
  fullName: AngeliA.Stage.SetViewXDelay
- uid: AngeliA.Stage.SetViewYDelay*
  commentId: Overload:AngeliA.Stage.SetViewYDelay
  href: AngeliA.Stage.html#AngeliA_Stage_SetViewYDelay_System_Int32_System_Int32_System_Int32_
  name: SetViewYDelay
  nameWithType: Stage.SetViewYDelay
  fullName: AngeliA.Stage.SetViewYDelay
- uid: AngeliA.Stage.SetViewSizeDelay*
  commentId: Overload:AngeliA.Stage.SetViewSizeDelay
  href: AngeliA.Stage.html#AngeliA_Stage_SetViewSizeDelay_System_Int32_System_Int32_System_Int32_System_Boolean_
  name: SetViewSizeDelay
  nameWithType: Stage.SetViewSizeDelay
  fullName: AngeliA.Stage.SetViewSizeDelay
- uid: AngeliA.Stage.SpawnEntity*
  commentId: Overload:AngeliA.Stage.SpawnEntity
  href: AngeliA.Stage.html#AngeliA_Stage_SpawnEntity_System_Int32_System_Int32_System_Int32_
  name: SpawnEntity
  nameWithType: Stage.SpawnEntity
  fullName: AngeliA.Stage.SpawnEntity
- uid: AngeliA.Entity
  commentId: T:AngeliA.Entity
  parent: AngeliA
  href: AngeliA.Entity.html
  name: Entity
  nameWithType: Entity
  fullName: AngeliA.Entity
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: AngeliA.Stage.TrySpawnEntity*
  commentId: Overload:AngeliA.Stage.TrySpawnEntity
  href: AngeliA.Stage.html#AngeliA_Stage_TrySpawnEntity_System_Int32_System_Int32_System_Int32_AngeliA_Entity__
  name: TrySpawnEntity
  nameWithType: Stage.TrySpawnEntity
  fullName: AngeliA.Stage.TrySpawnEntity
- uid: AngeliA.Stage.SpawnEntityFromWorld*
  commentId: Overload:AngeliA.Stage.SpawnEntityFromWorld
  href: AngeliA.Stage.html#AngeliA_Stage_SpawnEntityFromWorld_System_Int32_System_Int32_System_Int32_System_Int32_System_Int32_System_Int32_System_Boolean_
  name: SpawnEntityFromWorld
  nameWithType: Stage.SpawnEntityFromWorld
  fullName: AngeliA.Stage.SpawnEntityFromWorld
- uid: AngeliA.Stage.FindEntity*
  commentId: Overload:AngeliA.Stage.FindEntity
  href: AngeliA.Stage.html#AngeliA_Stage_FindEntity__1
  name: FindEntity
  nameWithType: Stage.FindEntity
  fullName: AngeliA.Stage.FindEntity
- uid: AngeliA.Stage.TryFindEntity*
  commentId: Overload:AngeliA.Stage.TryFindEntity
  href: AngeliA.Stage.html#AngeliA_Stage_TryFindEntity__1___0__
  name: TryFindEntity
  nameWithType: Stage.TryFindEntity
  fullName: AngeliA.Stage.TryFindEntity
- uid: '{E}'
  commentId: '!:E'
  definition: E
  name: E
  nameWithType: E
  fullName: E
- uid: E
  name: E
  nameWithType: E
  fullName: E
- uid: AngeliA.Stage.TryFindEntityNearby*
  commentId: Overload:AngeliA.Stage.TryFindEntityNearby
  href: AngeliA.Stage.html#AngeliA_Stage_TryFindEntityNearby__1_AngeliA_Int2___0__System_Func___0_System_Boolean__
  name: TryFindEntityNearby
  nameWithType: Stage.TryFindEntityNearby
  fullName: AngeliA.Stage.TryFindEntityNearby
- uid: AngeliA.Int2
  commentId: T:AngeliA.Int2
  parent: AngeliA
  href: AngeliA.Int2.html
  name: Int2
  nameWithType: Int2
  fullName: AngeliA.Int2
- uid: System.Func{{E},System.Boolean}
  commentId: T:System.Func{``0,System.Boolean}
  parent: System
  definition: System.Func`2
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<E, bool>
  nameWithType: Func<E, bool>
  fullName: System.Func<E, bool>
  nameWithType.vb: Func(Of E, Boolean)
  fullName.vb: System.Func(Of E, Boolean)
  name.vb: Func(Of E, Boolean)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: E
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: E
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: System.Func`2
  commentId: T:System.Func`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<T, TResult>
  nameWithType: Func<T, TResult>
  fullName: System.Func<T, TResult>
  nameWithType.vb: Func(Of T, TResult)
  fullName.vb: System.Func(Of T, TResult)
  name.vb: Func(Of T, TResult)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: TResult
  - name: )
- uid: AngeliA.Stage.TryGetEntities*
  commentId: Overload:AngeliA.Stage.TryGetEntities
  href: AngeliA.Stage.html#AngeliA_Stage_TryGetEntities_System_Int32_System_ReadOnlySpan_AngeliA_Entity___System_Int32__
  name: TryGetEntities
  nameWithType: Stage.TryGetEntities
  fullName: AngeliA.Stage.TryGetEntities
- uid: System.ReadOnlySpan{AngeliA.Entity}
  commentId: T:System.ReadOnlySpan{AngeliA.Entity}
  parent: System
  definition: System.ReadOnlySpan`1
  href: https://learn.microsoft.com/dotnet/api/system.readonlyspan-1
  name: ReadOnlySpan<Entity>
  nameWithType: ReadOnlySpan<Entity>
  fullName: System.ReadOnlySpan<AngeliA.Entity>
  nameWithType.vb: ReadOnlySpan(Of Entity)
  fullName.vb: System.ReadOnlySpan(Of AngeliA.Entity)
  name.vb: ReadOnlySpan(Of Entity)
  spec.csharp:
  - uid: System.ReadOnlySpan`1
    name: ReadOnlySpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.readonlyspan-1
  - name: <
  - uid: AngeliA.Entity
    name: Entity
    href: AngeliA.Entity.html
  - name: '>'
  spec.vb:
  - uid: System.ReadOnlySpan`1
    name: ReadOnlySpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.readonlyspan-1
  - name: (
  - name: Of
  - name: " "
  - uid: AngeliA.Entity
    name: Entity
    href: AngeliA.Entity.html
  - name: )
- uid: System.ReadOnlySpan`1
  commentId: T:System.ReadOnlySpan`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.readonlyspan-1
  name: ReadOnlySpan<T>
  nameWithType: ReadOnlySpan<T>
  fullName: System.ReadOnlySpan<T>
  nameWithType.vb: ReadOnlySpan(Of T)
  fullName.vb: System.ReadOnlySpan(Of T)
  name.vb: ReadOnlySpan(Of T)
  spec.csharp:
  - uid: System.ReadOnlySpan`1
    name: ReadOnlySpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.readonlyspan-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.ReadOnlySpan`1
    name: ReadOnlySpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.readonlyspan-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: AngeliA.Stage.IsValidEntityID*
  commentId: Overload:AngeliA.Stage.IsValidEntityID
  href: AngeliA.Stage.html#AngeliA_Stage_IsValidEntityID_System_Int32_
  name: IsValidEntityID
  nameWithType: Stage.IsValidEntityID
  fullName: AngeliA.Stage.IsValidEntityID
- uid: AngeliA.Stage.ForAllActiveEntities*
  commentId: Overload:AngeliA.Stage.ForAllActiveEntities
  href: AngeliA.Stage.html#AngeliA_Stage_ForAllActiveEntities__1_System_Int32_
  name: ForAllActiveEntities
  nameWithType: Stage.ForAllActiveEntities
  fullName: AngeliA.Stage.ForAllActiveEntities
- uid: System.Collections.Generic.IEnumerable{{E}}
  commentId: T:System.Collections.Generic.IEnumerable{``0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<E>
  nameWithType: IEnumerable<E>
  fullName: System.Collections.Generic.IEnumerable<E>
  nameWithType.vb: IEnumerable(Of E)
  fullName.vb: System.Collections.Generic.IEnumerable(Of E)
  name.vb: IEnumerable(Of E)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: E
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: E
  - name: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: AngeliA.Stage.GetSpawnedEntityCount*
  commentId: Overload:AngeliA.Stage.GetSpawnedEntityCount
  href: AngeliA.Stage.html#AngeliA_Stage_GetSpawnedEntityCount_System_Int32_
  name: GetSpawnedEntityCount
  nameWithType: Stage.GetSpawnedEntityCount
  fullName: AngeliA.Stage.GetSpawnedEntityCount
- uid: AngeliA.Stage.TryGetStagedEntity*
  commentId: Overload:AngeliA.Stage.TryGetStagedEntity
  href: AngeliA.Stage.html#AngeliA_Stage_TryGetStagedEntity_AngeliA_Int3_AngeliA_Entity__
  name: TryGetStagedEntity
  nameWithType: Stage.TryGetStagedEntity
  fullName: AngeliA.Stage.TryGetStagedEntity
- uid: AngeliA.Int3
  commentId: T:AngeliA.Int3
  parent: AngeliA
  href: AngeliA.Int3.html
  name: Int3
  nameWithType: Int3
  fullName: AngeliA.Int3
- uid: AngeliA.Stage.DespawnAllEntitiesOfType*
  commentId: Overload:AngeliA.Stage.DespawnAllEntitiesOfType
  href: AngeliA.Stage.html#AngeliA_Stage_DespawnAllEntitiesOfType__1_System_Int32_
  name: DespawnAllEntitiesOfType
  nameWithType: Stage.DespawnAllEntitiesOfType
  fullName: AngeliA.Stage.DespawnAllEntitiesOfType
- uid: AngeliA.Stage.RemoveStagedEntity*
  commentId: Overload:AngeliA.Stage.RemoveStagedEntity
  href: AngeliA.Stage.html#AngeliA_Stage_RemoveStagedEntity_AngeliA_Int3_
  name: RemoveStagedEntity
  nameWithType: Stage.RemoveStagedEntity
  fullName: AngeliA.Stage.RemoveStagedEntity
- uid: AngeliA.Stage.DespawnAllNonUiEntities*
  commentId: Overload:AngeliA.Stage.DespawnAllNonUiEntities
  href: AngeliA.Stage.html#AngeliA_Stage_DespawnAllNonUiEntities_System_Boolean_
  name: DespawnAllNonUiEntities
  nameWithType: Stage.DespawnAllNonUiEntities
  fullName: AngeliA.Stage.DespawnAllNonUiEntities
- uid: AngeliA.Stage.PeekOrGetEntity*
  commentId: Overload:AngeliA.Stage.PeekOrGetEntity
  href: AngeliA.Stage.html#AngeliA_Stage_PeekOrGetEntity_System_Int32_
  name: PeekOrGetEntity
  nameWithType: Stage.PeekOrGetEntity
  fullName: AngeliA.Stage.PeekOrGetEntity
- uid: AngeliA.Stage.GetOrSpawnEntity*
  commentId: Overload:AngeliA.Stage.GetOrSpawnEntity
  href: AngeliA.Stage.html#AngeliA_Stage_GetOrSpawnEntity_System_Int32_System_Int32_System_Int32_
  name: GetOrSpawnEntity
  nameWithType: Stage.GetOrSpawnEntity
  fullName: AngeliA.Stage.GetOrSpawnEntity
- uid: AngeliA.Stage.IsEntityRequireDrawBehind*
  commentId: Overload:AngeliA.Stage.IsEntityRequireDrawBehind
  href: AngeliA.Stage.html#AngeliA_Stage_IsEntityRequireDrawBehind_System_Int32_
  name: IsEntityRequireDrawBehind
  nameWithType: Stage.IsEntityRequireDrawBehind
  fullName: AngeliA.Stage.IsEntityRequireDrawBehind
- uid: AngeliA.Stage.GetEntityCapacity*
  commentId: Overload:AngeliA.Stage.GetEntityCapacity
  href: AngeliA.Stage.html#AngeliA_Stage_GetEntityCapacity_System_Int32_
  name: GetEntityCapacity
  nameWithType: Stage.GetEntityCapacity
  fullName: AngeliA.Stage.GetEntityCapacity
- uid: AngeliA.Stage.IsEntityRequireReposition*
  commentId: Overload:AngeliA.Stage.IsEntityRequireReposition
  href: AngeliA.Stage.html#AngeliA_Stage_IsEntityRequireReposition_System_Int32_
  name: IsEntityRequireReposition
  nameWithType: Stage.IsEntityRequireReposition
  fullName: AngeliA.Stage.IsEntityRequireReposition
- uid: AngeliA.Stage.GetCameraCullingPadding*
  commentId: Overload:AngeliA.Stage.GetCameraCullingPadding
  href: AngeliA.Stage.html#AngeliA_Stage_GetCameraCullingPadding
  name: GetCameraCullingPadding
  nameWithType: Stage.GetCameraCullingPadding
  fullName: AngeliA.Stage.GetCameraCullingPadding
- uid: AngeliA.Int4
  commentId: T:AngeliA.Int4
  parent: AngeliA
  href: AngeliA.Int4.html
  name: Int4
  nameWithType: Int4
  fullName: AngeliA.Int4
- uid: AngeliA.Stage.GetEntityType*
  commentId: Overload:AngeliA.Stage.GetEntityType
  href: AngeliA.Stage.html#AngeliA_Stage_GetEntityType_System_Int32_
  name: GetEntityType
  nameWithType: Stage.GetEntityType
  fullName: AngeliA.Stage.GetEntityType
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.type
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: AngeliA.Stage.TryRepositionEntity*
  commentId: Overload:AngeliA.Stage.TryRepositionEntity
  href: AngeliA.Stage.html#AngeliA_Stage_TryRepositionEntity_AngeliA_Entity_System_Boolean_
  name: TryRepositionEntity
  nameWithType: Stage.TryRepositionEntity
  fullName: AngeliA.Stage.TryRepositionEntity

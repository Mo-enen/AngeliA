{
  "api/AngeliA.AfterLateUpdateAttribute.html": {
    "href": "api/AngeliA.AfterLateUpdateAttribute.html",
    "title": "Class AfterLateUpdateAttribute | AngeliA",
    "summary": "Class AfterLateUpdateAttribute Namespace AngeliA Assembly AngeliA Framework.dll The function will be called after all entity.LateUpdate is called public class AfterLateUpdateAttribute : EventAttribute Inheritance object Attribute OrderedAttribute EventAttribute AfterLateUpdateAttribute Inherited Members OrderedAttribute.InvokeAsAutoOrderingTask<A>() Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Examples internal static void ExampleFunction () { }"
  },
  "api/AngeliA.AfterLayerFrameUpdate_IntLayerAttribute.html": {
    "href": "api/AngeliA.AfterLayerFrameUpdate_IntLayerAttribute.html",
    "title": "Class AfterLayerFrameUpdate_IntLayerAttribute | AngeliA",
    "summary": "Class AfterLayerFrameUpdate_IntLayerAttribute Namespace AngeliA Assembly AngeliA Framework.dll The function will be called after rendering layer update public class AfterLayerFrameUpdate_IntLayerAttribute : EventAttribute Inheritance object Attribute OrderedAttribute EventAttribute AfterLayerFrameUpdate_IntLayerAttribute Inherited Members OrderedAttribute.InvokeAsAutoOrderingTask<A>() Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Examples internal static void ExampleFunction () { }"
  },
  "api/AngeliA.AfterLevelRenderedAttribute.html": {
    "href": "api/AngeliA.AfterLevelRenderedAttribute.html",
    "title": "Class AfterLevelRenderedAttribute | AngeliA",
    "summary": "Class AfterLevelRenderedAttribute Namespace AngeliA Assembly AngeliA Framework.dll The function will be called after world squad render all level blocks for the current frame public class AfterLevelRenderedAttribute : EventAttribute Inheritance object Attribute OrderedAttribute EventAttribute AfterLevelRenderedAttribute Inherited Members OrderedAttribute.InvokeAsAutoOrderingTask<A>() Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Examples internal static void ExampleFunction () { } Constructors AfterLevelRenderedAttribute(int) The function will be called after world squad render all level blocks for the current frame public AfterLevelRenderedAttribute(int order = 0) Parameters order int Examples internal static void ExampleFunction () { }"
  },
  "api/AngeliA.AfterimageScope.html": {
    "href": "api/AngeliA.AfterimageScope.html",
    "title": "Struct AfterimageScope | AngeliA",
    "summary": "Struct AfterimageScope Namespace AngeliA Assembly AngeliA Framework.dll public readonly struct AfterimageScope : IDisposable Implements IDisposable Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Constructors AfterimageScope(int, int, Color32, Color32, int, int, int, int, int, int) public AfterimageScope(int speedX, int speedY, Color32 tintStart, Color32 tintEnd, int rotateSpeed = 0, int count = 3, int frameStep = 2, int scaleStart = 1000, int scaleEnd = 1000, int renderLayer = 3) Parameters speedX int speedY int tintStart Color32 tintEnd Color32 rotateSpeed int count int frameStep int scaleStart int scaleEnd int renderLayer int AfterimageScope(int, int, int, int, int, int, int, int) public AfterimageScope(int speedX, int speedY, int rotateSpeed = 0, int count = 3, int frameStep = 2, int scaleStart = 1000, int scaleEnd = 1000, int renderLayer = 3) Parameters speedX int speedY int rotateSpeed int count int frameStep int scaleStart int scaleEnd int renderLayer int Methods Dispose() Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources. public void Dispose()"
  },
  "api/AngeliA.Alignment.html": {
    "href": "api/AngeliA.Alignment.html",
    "title": "Enum Alignment | AngeliA",
    "summary": "Enum Alignment Namespace AngeliA Assembly AngeliA Framework.dll public enum Alignment : byte Extension Methods Extension.IsBottom(Alignment) Extension.IsLeft(Alignment) Extension.IsMidX(Alignment) Extension.IsMidY(Alignment) Extension.IsRight(Alignment) Extension.IsTop(Alignment) Extension.Next<E>(E) Extension.Normal(Alignment) Extension.Prev<E>(E) Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Fields BottomLeft = 6 BottomMid = 7 BottomRight = 8 Full = 9 MidLeft = 3 MidMid = 4 MidRight = 5 TopLeft = 0 TopMid = 1 TopRight = 2"
  },
  "api/AngeliA.AngePath.html": {
    "href": "api/AngeliA.AngePath.html",
    "title": "Class AngePath | AngeliA",
    "summary": "Class AngePath Namespace AngeliA Assembly AngeliA Framework.dll Utility class for path related logic for an AngeliA project public static class AngePath Inheritance object AngePath Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields CONVERSATION_FILE_EXT public const string CONVERSATION_FILE_EXT = \"txt\" Field Value string DesktopPath public static string DesktopPath Field Value string EDITABLE_CONVERSATION_FILE_EXT public const string EDITABLE_CONVERSATION_FILE_EXT = \"conversation\" Field Value string EDITABLE_CONVERSATION_SEARCH_PATTERN public const string EDITABLE_CONVERSATION_SEARCH_PATTERN = \"*.conversation\" Field Value string EQ_INVENTORY_FILE_EXT Inventory file extension with equipment data public const string EQ_INVENTORY_FILE_EXT = \"invq\" Field Value string EQ_INVENTORY_SEARCH_PATTERN Inventory file search pattern with equipment data public const string EQ_INVENTORY_SEARCH_PATTERN = \"*.invq\" Field Value string INVENTORY_FILE_EXT public const string INVENTORY_FILE_EXT = \"inv\" Field Value string INVENTORY_SEARCH_PATTERN public const string INVENTORY_SEARCH_PATTERN = \"*.inv\" Field Value string LANGUAGE_FILE_EXT public const string LANGUAGE_FILE_EXT = \"txt\" Field Value string LANGUAGE_SEARCH_PATTERN public const string LANGUAGE_SEARCH_PATTERN = \"*.txt\" Field Value string MAP_FILE_EXT public const string MAP_FILE_EXT = \"ibb\" Field Value string MAP_SEARCH_PATTERN public const string MAP_SEARCH_PATTERN = \"*.ibb\" Field Value string MOVEMENT_CONFIG_FILE_EXT public const string MOVEMENT_CONFIG_FILE_EXT = \"txt\" Field Value string MOVEMENT_CONFIG_SEARCH_PATTERN public const string MOVEMENT_CONFIG_SEARCH_PATTERN = \"*.txt\" Field Value string PACKAGE_FILE_EXT public const string PACKAGE_FILE_EXT = \"angepack\" Field Value string PACKAGE_SEARCH_PATTERN public const string PACKAGE_SEARCH_PATTERN = \"*.angepack\" Field Value string SHEET_FILE_EXT public const string SHEET_FILE_EXT = \"sheet\" Field Value string SHEET_SEARCH_PATTERN public const string SHEET_SEARCH_PATTERN = \"*.sheet\" Field Value string Properties BuiltInUniverseRoot Game universe folder path. This folder contents project data for an AngeliA project public static string BuiltInUniverseRoot { get; } Property Value string PersistentDataPath public static string PersistentDataPath { get; } Property Value string TempDataPath public static string TempDataPath { get; } Property Value string Methods GetAsepriteRoot(string) public static string GetAsepriteRoot(string universeFolder) Parameters universeFolder string Returns string GetAtlasRoot(string) public static string GetAtlasRoot(string universeFolder) Parameters universeFolder string Returns string GetBuiltInSheetPath(string) public static string GetBuiltInSheetPath(string universeFolder) Parameters universeFolder string Returns string GetCharacterMovementConfigRoot(string) public static string GetCharacterMovementConfigRoot(string universeFolder) Parameters universeFolder string Returns string GetConversationRoot(string) public static string GetConversationRoot(string universeFolder) Parameters universeFolder string Returns string GetEditableConversationRoot(string) public static string GetEditableConversationRoot(string universeFolder) Parameters universeFolder string Returns string GetGameSheetPath(string) public static string GetGameSheetPath(string universeFolder) Parameters universeFolder string Returns string GetLanguageRoot(string) public static string GetLanguageRoot(string universeFolder) Parameters universeFolder string Returns string GetMapRoot(string) public static string GetMapRoot(string universeFolder) Parameters universeFolder string Returns string GetPersistentDataPath(string, string) public static string GetPersistentDataPath(string devName, string productName) Parameters devName string productName string Returns string GetSheetRoot(string) public static string GetSheetRoot(string universeFolder) Parameters universeFolder string Returns string GetSlotInventoryRoot(string, int) public static string GetSlotInventoryRoot(string savingFolder, int slot) Parameters savingFolder string slot int Returns string GetSlotMetaCharacterConfigRoot(string, int) public static string GetSlotMetaCharacterConfigRoot(string savingFolder, int slot) Parameters savingFolder string slot int Returns string GetSlotMetaRoot(string, int) public static string GetSlotMetaRoot(string savingFolder, int slot) Parameters savingFolder string slot int Returns string GetSlotRoot(string, int) public static string GetSlotRoot(string savingFolder, int slot) Parameters savingFolder string slot int Returns string GetSlotUserMapRoot(string, int) public static string GetSlotUserMapRoot(string savingFolder, int slot) Parameters savingFolder string slot int Returns string GetTempDataPath(string, string) public static string GetTempDataPath(string devName, string productName) Parameters devName string productName string Returns string GetUniverseCoverPath(string) public static string GetUniverseCoverPath(string universeFolder) Parameters universeFolder string Returns string GetUniverseFontRoot(string) public static string GetUniverseFontRoot(string universeFolder) Parameters universeFolder string Returns string GetUniverseInfoPath(string) public static string GetUniverseInfoPath(string universeFolder) Parameters universeFolder string Returns string GetUniverseMetaRoot(string) public static string GetUniverseMetaRoot(string universeFolder) Parameters universeFolder string Returns string GetUniverseMusicRoot(string) public static string GetUniverseMusicRoot(string universeFolder) Parameters universeFolder string Returns string GetUniverseRoot(string) public static string GetUniverseRoot(string projectFolder) Parameters projectFolder string Returns string GetUniverseSoundRoot(string) public static string GetUniverseSoundRoot(string universeFolder) Parameters universeFolder string Returns string"
  },
  "api/AngeliA.AngeSprite.html": {
    "href": "api/AngeliA.AngeSprite.html",
    "title": "Class AngeSprite | AngeliA",
    "summary": "Class AngeSprite Namespace AngeliA Assembly AngeliA Framework.dll public class AngeSprite Inheritance object AngeSprite Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Fields Atlas public Atlas Atlas Field Value Atlas AtlasID public int AtlasID Field Value int AttachedSprite public AngeSprite AttachedSprite Field Value AngeSprite Duration public int Duration Field Value int EMPTY public static readonly AngeSprite EMPTY Field Value AngeSprite GlobalBorder public Int4 GlobalBorder Field Value Int4 GlobalHeight public int GlobalHeight Field Value int GlobalWidth public int GlobalWidth Field Value int Group public SpriteGroup Group Field Value SpriteGroup ID public int ID Field Value int IsTrigger public bool IsTrigger Field Value bool LocalZ public int LocalZ Field Value int PivotX public int PivotX Field Value int PivotY public int PivotY Field Value int PixelRect public IRect PixelRect Field Value IRect Pixels public Color32[] Pixels Field Value Color32[] RealName public string RealName Field Value string Rule public BlockRule Rule Field Value BlockRule SummaryTint public Color32 SummaryTint Field Value Color32 Tag public Tag Tag Field Value Tag Methods CopyTo(AngeSprite) public AngeSprite CopyTo(AngeSprite target) Parameters target AngeSprite Returns AngeSprite CreateCopy() public AngeSprite CreateCopy() Returns AngeSprite GetAlignmentFromPivot() public Alignment GetAlignmentFromPivot() Returns Alignment LoadFromBinary_v0(BinaryReader, bool) public void LoadFromBinary_v0(BinaryReader reader, bool ignorePixels) Parameters reader BinaryReader ignorePixels bool MakeDedicatedForTexture(object, Sheet) public void MakeDedicatedForTexture(object texture, Sheet sheet) Parameters texture object sheet Sheet RemoveFromDedicatedTexture(Sheet) public void RemoveFromDedicatedTexture(Sheet sheet) Parameters sheet Sheet ResizePixelRect(IRect, bool, out bool) public void ResizePixelRect(IRect newRect, bool resizeBorder, out bool contentChanged) Parameters newRect IRect resizeBorder bool contentChanged bool SaveToBinary_v0(BinaryWriter) public void SaveToBinary_v0(BinaryWriter writer) Parameters writer BinaryWriter SetPixelDirty() public void SetPixelDirty() ValidBorders(Direction8?) public void ValidBorders(Direction8? priority = null) Parameters priority Direction8?"
  },
  "api/AngeliA.AntiBuffItem-1.TriggerMode.html": {
    "href": "api/AngeliA.AntiBuffItem-1.TriggerMode.html",
    "title": "Enum AntiBuffItem<B>.TriggerMode | AngeliA",
    "summary": "Enum AntiBuffItem<B>.TriggerMode Namespace AngeliA Assembly AngeliA Framework.dll protected enum AntiBuffItem<B>.TriggerMode Extension Methods Extension.Next<E>(E) Extension.Prev<E>(E) Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Fields Auto = 0 Manual = 1"
  },
  "api/AngeliA.AntiBuffItem-1.html": {
    "href": "api/AngeliA.AntiBuffItem-1.html",
    "title": "Class AntiBuffItem<B> | AngeliA",
    "summary": "Class AntiBuffItem<B> Namespace AngeliA Assembly AngeliA Framework.dll public abstract class AntiBuffItem<B> : Item, IMapItem where B : Buff Type Parameters B Inheritance object Item AntiBuffItem<B> Implements IMapItem Inherited Members Item.MaxStackCount Item.AllowDuplicateUpdate Item.EmbedIntoLevel Item.TypeID Item.OnItemUpdate_FromInventory(Character, int, int) Item.OnPoseAnimationUpdate_FromInventory(PoseCharacterRenderer, int, int) Item.OnTakeDamage_FromInventory(Character, int, int, ref Damage) Item.OnCharacterAttack_FromInventory(Character, Bullet, int, int) Item.BeforeItemUpdate_FromEquipment(Character) Item.OnItemUpdate_FromEquipment(Character) Item.BeforePoseAnimationUpdate_FromEquipment(PoseCharacterRenderer) Item.OnPoseAnimationUpdate_FromEquipment(PoseCharacterRenderer) Item.OnTakeDamage_FromEquipment(Character, ref Damage) Item.OnCharacterAttack_FromEquipment(Character, Bullet) Item.TryRepairEquipment(Character) Item.OnItemUpdate_FromItemHolder(ItemHolder, int) Item.OnCollect(Character) Item.ItemConditionCheck(Character) Item.DrawItem(Entity, IRect, Color32, int) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Constructors AntiBuffItem() public AntiBuffItem() Properties Duration public abstract int Duration { get; } Property Value int Mode protected abstract AntiBuffItem<B>.TriggerMode Mode { get; } Property Value AntiBuffItem<B>.TriggerMode Methods BeforeItemUpdate_FromInventory(Character, int, int) public override void BeforeItemUpdate_FromInventory(Character character, int inventoryID, int itemIndex) Parameters character Character inventoryID int itemIndex int CanUse(Character) public override bool CanUse(Character character) Parameters character Character Returns bool OnAntiBuffTriggerd(Character) public virtual void OnAntiBuffTriggerd(Character target) Parameters target Character Use(Character, int, int, out bool) public override bool Use(Character character, int inventoryID, int itemIndex, out bool consume) Parameters character Character inventoryID int itemIndex int consume bool Returns bool"
  },
  "api/AngeliA.Atlas.html": {
    "href": "api/AngeliA.Atlas.html",
    "title": "Class Atlas | AngeliA",
    "summary": "Class Atlas Namespace AngeliA Assembly AngeliA Framework.dll public class Atlas Inheritance object Atlas Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Fields ID public int ID Field Value int Name public string Name Field Value string State public AtlasState State Field Value AtlasState Type public AtlasType Type Field Value AtlasType Properties InFolder public bool InFolder { get; } Property Value bool IsFolder public bool IsFolder { get; } Property Value bool Methods LoadFromBinary_v0(BinaryReader) public void LoadFromBinary_v0(BinaryReader reader) Parameters reader BinaryReader SaveToBinary_v0(BinaryWriter) public void SaveToBinary_v0(BinaryWriter writer) Parameters writer BinaryWriter"
  },
  "api/AngeliA.AtlasState.html": {
    "href": "api/AngeliA.AtlasState.html",
    "title": "Enum AtlasState | AngeliA",
    "summary": "Enum AtlasState Namespace AngeliA Assembly AngeliA Framework.dll public enum AtlasState Extension Methods Extension.Next<E>(E) Extension.Prev<E>(E) Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Fields Folded = 2 Root = 0 Sub = 1 Unfolded = 3"
  },
  "api/AngeliA.AtlasType.html": {
    "href": "api/AngeliA.AtlasType.html",
    "title": "Enum AtlasType | AngeliA",
    "summary": "Enum AtlasType Namespace AngeliA Assembly AngeliA Framework.dll public enum AtlasType Extension Methods Extension.Next<E>(E) Extension.Prev<E>(E) Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Fields Background = 2 General = 0 Level = 1"
  },
  "api/AngeliA.AudioCode.html": {
    "href": "api/AngeliA.AudioCode.html",
    "title": "Class AudioCode | AngeliA",
    "summary": "Class AudioCode Namespace AngeliA Assembly AngeliA Framework.dll public class AudioCode Inheritance object AudioCode Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Constructors AudioCode(string) public AudioCode(string name) Parameters name string Fields ID public readonly int ID Field Value int Properties Name public string Name { get; } Property Value string Operators implicit operator int(AudioCode) public static implicit operator int(AudioCode code) Parameters code AudioCode Returns int implicit operator AudioCode(string) public static implicit operator AudioCode(string value) Parameters value string Returns AudioCode"
  },
  "api/AngeliA.AudioData.html": {
    "href": "api/AngeliA.AudioData.html",
    "title": "Class AudioData | AngeliA",
    "summary": "Class AudioData Namespace AngeliA Assembly AngeliA Framework.dll public abstract class AudioData Inheritance object AudioData Derived MusicData SoundData Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Fields ID public int ID Field Value int Name public string Name Field Value string Path public string Path Field Value string"
  },
  "api/AngeliA.AutoValidList-1.html": {
    "href": "api/AngeliA.AutoValidList-1.html",
    "title": "Class AutoValidList<T> | AngeliA",
    "summary": "Class AutoValidList<T> Namespace AngeliA Assembly AngeliA Framework.dll A list that auto remove element inside based on the given function public class AutoValidList<T> Type Parameters T Inheritance object AutoValidList<T> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Constructors AutoValidList(int, Func<T, bool>) A list that auto remove element inside based on the given function public AutoValidList(int capacity, Func<T, bool> updateFunc) Parameters capacity int updateFunc Func<T, bool> Properties Capacity public int Capacity { get; } Property Value int Count public int Count { get; } Property Value int Methods Add(T) public bool Add(T element) Parameters element T Returns bool Update() Valid all elements in the list based on the given funtion. public void Update()"
  },
  "api/AngeliA.BasicGlobalItemCombinationAttribute.html": {
    "href": "api/AngeliA.BasicGlobalItemCombinationAttribute.html",
    "title": "Class BasicGlobalItemCombinationAttribute | AngeliA",
    "summary": "Class BasicGlobalItemCombinationAttribute Namespace AngeliA Assembly AngeliA Framework.dll public abstract class BasicGlobalItemCombinationAttribute : BasicItemCombinationAttribute Inheritance object Attribute BasicItemCombinationAttribute BasicGlobalItemCombinationAttribute Derived GlobalItemCombinationAttribute GlobalItemCombinationAttribute<I0> GlobalItemCombinationAttribute<I0, I1> GlobalItemCombinationAttribute<I0, I1, I2> GlobalItemCombinationAttribute<I0, I1, I2, I3> Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Constructors BasicGlobalItemCombinationAttribute(ItemCombinationParam, ItemCombinationParam, ItemCombinationParam, ItemCombinationParam, string, int, string, string, string, string) protected BasicGlobalItemCombinationAttribute(ItemCombinationParam itemA, ItemCombinationParam itemB, ItemCombinationParam itemC, ItemCombinationParam itemD, string result, int count = 1, string keepId0 = \"\", string keepId1 = \"\", string keepId2 = \"\", string keepId3 = \"\") Parameters itemA ItemCombinationParam itemB ItemCombinationParam itemC ItemCombinationParam itemD ItemCombinationParam result string count int keepId0 string keepId1 string keepId2 string keepId3 string"
  },
  "api/AngeliA.BasicItemCombinationAttribute.html": {
    "href": "api/AngeliA.BasicItemCombinationAttribute.html",
    "title": "Class BasicItemCombinationAttribute | AngeliA",
    "summary": "Class BasicItemCombinationAttribute Namespace AngeliA Assembly AngeliA Framework.dll Define a item combination to craft the item. public abstract class BasicItemCombinationAttribute : Attribute Inheritance object Attribute BasicItemCombinationAttribute Derived BasicGlobalItemCombinationAttribute ItemCombinationAttribute ItemCombinationAttribute<I0> ItemCombinationAttribute<I0, I1> ItemCombinationAttribute<I0, I1, I2> ItemCombinationAttribute<I0, I1, I2, I3> Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Constructors BasicItemCombinationAttribute(ItemCombinationParam, ItemCombinationParam, ItemCombinationParam, ItemCombinationParam, int, string, string, string, string) Define a item combination to craft the item. protected BasicItemCombinationAttribute(ItemCombinationParam itemA, ItemCombinationParam itemB, ItemCombinationParam itemC, ItemCombinationParam itemD, int count = 1, string keepId0 = \"\", string keepId1 = \"\", string keepId2 = \"\", string keepId3 = \"\") Parameters itemA ItemCombinationParam An item required to craft the result item itemB ItemCombinationParam An item required to craft the result item itemC ItemCombinationParam An item required to craft the result item itemD ItemCombinationParam An item required to craft the result item count int How many item does it craft at once keepId0 string Do not consume this item keepId1 string Do not consume this item keepId2 string Do not consume this item keepId3 string Do not consume this item"
  },
  "api/AngeliA.BeforeBeforeUpdateAttribute.html": {
    "href": "api/AngeliA.BeforeBeforeUpdateAttribute.html",
    "title": "Class BeforeBeforeUpdateAttribute | AngeliA",
    "summary": "Class BeforeBeforeUpdateAttribute Namespace AngeliA Assembly AngeliA Framework.dll The function will be called before any entity.BeforeUpdate is called public class BeforeBeforeUpdateAttribute : EventAttribute Inheritance object Attribute OrderedAttribute EventAttribute BeforeBeforeUpdateAttribute Inherited Members OrderedAttribute.InvokeAsAutoOrderingTask<A>() Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Examples internal static void ExampleFunction () { }"
  },
  "api/AngeliA.BeforeFirstUpdateAttribute.html": {
    "href": "api/AngeliA.BeforeFirstUpdateAttribute.html",
    "title": "Class BeforeFirstUpdateAttribute | AngeliA",
    "summary": "Class BeforeFirstUpdateAttribute Namespace AngeliA Assembly AngeliA Framework.dll The function will be called before any entity.FirstUpdate is called public class BeforeFirstUpdateAttribute : EventAttribute Inheritance object Attribute OrderedAttribute EventAttribute BeforeFirstUpdateAttribute Inherited Members OrderedAttribute.InvokeAsAutoOrderingTask<A>() Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Examples internal static void ExampleFunction () { }"
  },
  "api/AngeliA.BeforeLateUpdateAttribute.html": {
    "href": "api/AngeliA.BeforeLateUpdateAttribute.html",
    "title": "Class BeforeLateUpdateAttribute | AngeliA",
    "summary": "Class BeforeLateUpdateAttribute Namespace AngeliA Assembly AngeliA Framework.dll The function will be called before any entity.LateUpdate is called public class BeforeLateUpdateAttribute : EventAttribute Inheritance object Attribute OrderedAttribute EventAttribute BeforeLateUpdateAttribute Inherited Members OrderedAttribute.InvokeAsAutoOrderingTask<A>() Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Examples internal static void ExampleFunction () { }"
  },
  "api/AngeliA.BeforeLayerFrameUpdate_IntLayerAttribute.html": {
    "href": "api/AngeliA.BeforeLayerFrameUpdate_IntLayerAttribute.html",
    "title": "Class BeforeLayerFrameUpdate_IntLayerAttribute | AngeliA",
    "summary": "Class BeforeLayerFrameUpdate_IntLayerAttribute Namespace AngeliA Assembly AngeliA Framework.dll The function will be called before rendering layer update public class BeforeLayerFrameUpdate_IntLayerAttribute : EventAttribute Inheritance object Attribute OrderedAttribute EventAttribute BeforeLayerFrameUpdate_IntLayerAttribute Inherited Members OrderedAttribute.InvokeAsAutoOrderingTask<A>() Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Examples internal static void ExampleFunction (int layerIndex) { }"
  },
  "api/AngeliA.BeforeLevelRenderedAttribute.html": {
    "href": "api/AngeliA.BeforeLevelRenderedAttribute.html",
    "title": "Class BeforeLevelRenderedAttribute | AngeliA",
    "summary": "Class BeforeLevelRenderedAttribute Namespace AngeliA Assembly AngeliA Framework.dll The function will be called before world squad rendering any level blocks for the current frame public class BeforeLevelRenderedAttribute : EventAttribute Inheritance object Attribute OrderedAttribute EventAttribute BeforeLevelRenderedAttribute Inherited Members OrderedAttribute.InvokeAsAutoOrderingTask<A>() Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Examples internal static void ExampleFunction () { } Constructors BeforeLevelRenderedAttribute(int) The function will be called before world squad rendering any level blocks for the current frame public BeforeLevelRenderedAttribute(int order = 0) Parameters order int Examples internal static void ExampleFunction () { }"
  },
  "api/AngeliA.BeforeSavingSlotChanged.html": {
    "href": "api/AngeliA.BeforeSavingSlotChanged.html",
    "title": "Class BeforeSavingSlotChanged | AngeliA",
    "summary": "Class BeforeSavingSlotChanged Namespace AngeliA Assembly AngeliA Framework.dll The function will be called before user change the saving slot. Universe.BuiltIn.CurrentSavingSlot is still the old value when this function is called. public class BeforeSavingSlotChanged : OrderedAttribute Inheritance object Attribute OrderedAttribute BeforeSavingSlotChanged Inherited Members OrderedAttribute.InvokeAsAutoOrderingTask<A>() Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Examples internal static void ExampleFunction () { } Constructors BeforeSavingSlotChanged(int) The function will be called before user change the saving slot. Universe.BuiltIn.CurrentSavingSlot is still the old value when this function is called. public BeforeSavingSlotChanged(int order = 0) Parameters order int Function with smaller order will be called earlier Examples internal static void ExampleFunction () { }"
  },
  "api/AngeliA.BeforeUpdateUpdateAttribute.html": {
    "href": "api/AngeliA.BeforeUpdateUpdateAttribute.html",
    "title": "Class BeforeUpdateUpdateAttribute | AngeliA",
    "summary": "Class BeforeUpdateUpdateAttribute Namespace AngeliA Assembly AngeliA Framework.dll The function will be called before any entity.Update is called public class BeforeUpdateUpdateAttribute : EventAttribute Inheritance object Attribute OrderedAttribute EventAttribute BeforeUpdateUpdateAttribute Inherited Members OrderedAttribute.InvokeAsAutoOrderingTask<A>() Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Examples internal static void ExampleFunction () { }"
  },
  "api/AngeliA.BlockBuilder.html": {
    "href": "api/AngeliA.BlockBuilder.html",
    "title": "Class BlockBuilder | AngeliA",
    "summary": "Class BlockBuilder Namespace AngeliA Assembly AngeliA Framework.dll public sealed class BlockBuilder : HandTool, IMapItem Inheritance object Item Equipment HandTool BlockBuilder Implements IMapItem Inherited Members HandTool.SpriteID HandTool.EquipmentType HandTool.PerformDelayFrame HandTool.PerformDelayRate HandTool.TypeName HandTool.Cooldown HandTool.HoldPunish HandTool.ChargeDuration HandTool.UseStackAsUsage HandTool.RepeatWhenHolding HandTool.CancelUseWhenRelease HandTool.LockFacingOnUse HandTool.IgnoreGrabTwist HandTool.AvailableInAir HandTool.AvailableInWater HandTool.AvailableWhenRunning HandTool.AvailableWhenFlying HandTool.AvailableWhenRolling HandTool.AvailableWhenDashing HandTool.AvailableWhenGrabbing HandTool.AvailableWhenRushing HandTool.AvailableWhenPounding HandTool.LoadFromSheet() HandTool.OnToolSpriteRendered(PoseCharacterRenderer, int, int, int, int, int, int, AngeSprite, int) HandTool.AllowingUse(Character) Item.AllowDuplicateUpdate Item.EmbedIntoLevel Item.TypeID Item.BeforeItemUpdate_FromInventory(Character, int, int) Item.OnItemUpdate_FromInventory(Character, int, int) Item.OnPoseAnimationUpdate_FromInventory(PoseCharacterRenderer, int, int) Item.OnTakeDamage_FromInventory(Character, int, int, ref Damage) Item.OnCharacterAttack_FromInventory(Character, Bullet, int, int) Item.BeforeItemUpdate_FromEquipment(Character) Item.OnItemUpdate_FromEquipment(Character) Item.BeforePoseAnimationUpdate_FromEquipment(PoseCharacterRenderer) Item.OnTakeDamage_FromEquipment(Character, ref Damage) Item.OnCharacterAttack_FromEquipment(Character, Bullet) Item.TryRepairEquipment(Character) Item.OnItemUpdate_FromItemHolder(ItemHolder, int) Item.OnCollect(Character) Item.CanUse(Character) Item.Use(Character, int, int, out bool) Item.ItemConditionCheck(Character) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Constructors BlockBuilder(int, string, BlockType, int) public BlockBuilder(int blockID, string blockName, BlockType blockType, int maxStackCount) Parameters blockID int blockName string blockType BlockType maxStackCount int Properties AvailableWhenClimbing public override bool AvailableWhenClimbing { get; } Property Value bool AvailableWhenSliding public override bool AvailableWhenSliding { get; } Property Value bool AvailableWhenSquatting public override bool AvailableWhenSquatting { get; } Property Value bool AvailableWhenWalking public override bool AvailableWhenWalking { get; } Property Value bool BlockID public int BlockID { get; init; } Property Value int BlockType public BlockType BlockType { get; init; } Property Value BlockType DefaultMovementSpeedRateOnUse public override int? DefaultMovementSpeedRateOnUse { get; } Property Value int? Duration public override int Duration { get; } Property Value int MaxStackCount public override int MaxStackCount { get; } Property Value int RunningMovementSpeedRateOnUse public override int? RunningMovementSpeedRateOnUse { get; } Property Value int? WalkingMovementSpeedRateOnUse public override int? WalkingMovementSpeedRateOnUse { get; } Property Value int? Methods DrawItem(Entity, IRect, Color32, int) public override void DrawItem(Entity holder, IRect rect, Color32 tint, int z) Parameters holder Entity rect IRect tint Color32 z int GetHandheldPoseAnimationID(Character) public override int GetHandheldPoseAnimationID(Character character) Parameters character Character Returns int GetPerformPoseAnimationID(Character) public override int GetPerformPoseAnimationID(Character character) Parameters character Character Returns int OnPoseAnimationUpdate_FromEquipment(PoseCharacterRenderer) public override void OnPoseAnimationUpdate_FromEquipment(PoseCharacterRenderer rendering) Parameters rendering PoseCharacterRenderer OnToolPerform(Character) public override void OnToolPerform(Character sender) Parameters sender Character"
  },
  "api/AngeliA.BlockColor.html": {
    "href": "api/AngeliA.BlockColor.html",
    "title": "Class BlockColor | AngeliA",
    "summary": "Class BlockColor Namespace AngeliA Assembly AngeliA Framework.dll [Entity.MapEditorGroup(\"System\", 0)] public abstract class BlockColor : IMapItem Inheritance object BlockColor Implements IMapItem Derived BlockColorBlack BlockColorBlue BlockColorCyan BlockColorGreen BlockColorGrey BlockColorOrange BlockColorPink BlockColorPurple BlockColorRed BlockColorYellow Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Properties Color public abstract Color32 Color { get; } Property Value Color32"
  },
  "api/AngeliA.BlockColorBlack.html": {
    "href": "api/AngeliA.BlockColorBlack.html",
    "title": "Class BlockColorBlack | AngeliA",
    "summary": "Class BlockColorBlack Namespace AngeliA Assembly AngeliA Framework.dll public sealed class BlockColorBlack : BlockColor, IMapItem Inheritance object BlockColor BlockColorBlack Implements IMapItem Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Fields TYPE_ID public static readonly int TYPE_ID Field Value int Properties Color public override Color32 Color { get; } Property Value Color32"
  },
  "api/AngeliA.BlockColorBlue.html": {
    "href": "api/AngeliA.BlockColorBlue.html",
    "title": "Class BlockColorBlue | AngeliA",
    "summary": "Class BlockColorBlue Namespace AngeliA Assembly AngeliA Framework.dll public sealed class BlockColorBlue : BlockColor, IMapItem Inheritance object BlockColor BlockColorBlue Implements IMapItem Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Fields TYPE_ID public static readonly int TYPE_ID Field Value int Properties Color public override Color32 Color { get; } Property Value Color32"
  },
  "api/AngeliA.BlockColorCyan.html": {
    "href": "api/AngeliA.BlockColorCyan.html",
    "title": "Class BlockColorCyan | AngeliA",
    "summary": "Class BlockColorCyan Namespace AngeliA Assembly AngeliA Framework.dll public sealed class BlockColorCyan : BlockColor, IMapItem Inheritance object BlockColor BlockColorCyan Implements IMapItem Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Fields TYPE_ID public static readonly int TYPE_ID Field Value int Properties Color public override Color32 Color { get; } Property Value Color32"
  },
  "api/AngeliA.BlockColorGreen.html": {
    "href": "api/AngeliA.BlockColorGreen.html",
    "title": "Class BlockColorGreen | AngeliA",
    "summary": "Class BlockColorGreen Namespace AngeliA Assembly AngeliA Framework.dll public sealed class BlockColorGreen : BlockColor, IMapItem Inheritance object BlockColor BlockColorGreen Implements IMapItem Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Fields TYPE_ID public static readonly int TYPE_ID Field Value int Properties Color public override Color32 Color { get; } Property Value Color32"
  },
  "api/AngeliA.BlockColorGrey.html": {
    "href": "api/AngeliA.BlockColorGrey.html",
    "title": "Class BlockColorGrey | AngeliA",
    "summary": "Class BlockColorGrey Namespace AngeliA Assembly AngeliA Framework.dll public sealed class BlockColorGrey : BlockColor, IMapItem Inheritance object BlockColor BlockColorGrey Implements IMapItem Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Fields TYPE_ID public static readonly int TYPE_ID Field Value int Properties Color public override Color32 Color { get; } Property Value Color32"
  },
  "api/AngeliA.BlockColorOrange.html": {
    "href": "api/AngeliA.BlockColorOrange.html",
    "title": "Class BlockColorOrange | AngeliA",
    "summary": "Class BlockColorOrange Namespace AngeliA Assembly AngeliA Framework.dll public sealed class BlockColorOrange : BlockColor, IMapItem Inheritance object BlockColor BlockColorOrange Implements IMapItem Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Fields TYPE_ID public static readonly int TYPE_ID Field Value int Properties Color public override Color32 Color { get; } Property Value Color32"
  },
  "api/AngeliA.BlockColorPink.html": {
    "href": "api/AngeliA.BlockColorPink.html",
    "title": "Class BlockColorPink | AngeliA",
    "summary": "Class BlockColorPink Namespace AngeliA Assembly AngeliA Framework.dll public sealed class BlockColorPink : BlockColor, IMapItem Inheritance object BlockColor BlockColorPink Implements IMapItem Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Fields TYPE_ID public static readonly int TYPE_ID Field Value int Properties Color public override Color32 Color { get; } Property Value Color32"
  },
  "api/AngeliA.BlockColorPurple.html": {
    "href": "api/AngeliA.BlockColorPurple.html",
    "title": "Class BlockColorPurple | AngeliA",
    "summary": "Class BlockColorPurple Namespace AngeliA Assembly AngeliA Framework.dll public sealed class BlockColorPurple : BlockColor, IMapItem Inheritance object BlockColor BlockColorPurple Implements IMapItem Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Fields TYPE_ID public static readonly int TYPE_ID Field Value int Properties Color public override Color32 Color { get; } Property Value Color32"
  },
  "api/AngeliA.BlockColorRed.html": {
    "href": "api/AngeliA.BlockColorRed.html",
    "title": "Class BlockColorRed | AngeliA",
    "summary": "Class BlockColorRed Namespace AngeliA Assembly AngeliA Framework.dll public sealed class BlockColorRed : BlockColor, IMapItem Inheritance object BlockColor BlockColorRed Implements IMapItem Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Fields TYPE_ID public static readonly int TYPE_ID Field Value int Properties Color public override Color32 Color { get; } Property Value Color32"
  },
  "api/AngeliA.BlockColorYellow.html": {
    "href": "api/AngeliA.BlockColorYellow.html",
    "title": "Class BlockColorYellow | AngeliA",
    "summary": "Class BlockColorYellow Namespace AngeliA Assembly AngeliA Framework.dll public sealed class BlockColorYellow : BlockColor, IMapItem Inheritance object BlockColor BlockColorYellow Implements IMapItem Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Fields TYPE_ID public static readonly int TYPE_ID Field Value int Properties Color public override Color32 Color { get; } Property Value Color32"
  },
  "api/AngeliA.BlockColoringSystem.html": {
    "href": "api/AngeliA.BlockColoringSystem.html",
    "title": "Class BlockColoringSystem | AngeliA",
    "summary": "Class BlockColoringSystem Namespace AngeliA Assembly AngeliA Framework.dll public static class BlockColoringSystem Inheritance object BlockColoringSystem Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields COLOR_POOL public static readonly Dictionary<int, Color32> COLOR_POOL Field Value Dictionary<int, Color32> Methods TryGetColor(int, out Color32) public static bool TryGetColor(int elementID, out Color32 color) Parameters elementID int color Color32 Returns bool"
  },
  "api/AngeliA.BlockRule.html": {
    "href": "api/AngeliA.BlockRule.html",
    "title": "Struct BlockRule | AngeliA",
    "summary": "Struct BlockRule Namespace AngeliA Assembly AngeliA Framework.dll public struct BlockRule Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Constructors BlockRule(Rule, Rule, Rule, Rule, Rule, Rule, Rule, Rule) public BlockRule(Rule ruleTL, Rule ruleT, Rule ruleTR, Rule ruleL, Rule ruleR, Rule ruleBL, Rule ruleB, Rule ruleBR) Parameters ruleTL Rule ruleT Rule ruleTR Rule ruleL Rule ruleR Rule ruleBL Rule ruleB Rule ruleBR Rule Fields EMPTY public static readonly BlockRule EMPTY Field Value BlockRule RuleB public Rule RuleB Field Value Rule RuleBL public Rule RuleBL Field Value Rule RuleBR public Rule RuleBR Field Value Rule RuleL public Rule RuleL Field Value Rule RuleR public Rule RuleR Field Value Rule RuleT public Rule RuleT Field Value Rule RuleTL public Rule RuleTL Field Value Rule RuleTR public Rule RuleTR Field Value Rule Properties IsEmpty public readonly bool IsEmpty { get; } Property Value bool this[int] public Rule this[int i] { readonly get; set; } Parameters i int Property Value Rule Methods IsSameWith(BlockRule) public readonly bool IsSameWith(BlockRule other) Parameters other BlockRule Returns bool"
  },
  "api/AngeliA.BlockType.html": {
    "href": "api/AngeliA.BlockType.html",
    "title": "Enum BlockType | AngeliA",
    "summary": "Enum BlockType Namespace AngeliA Assembly AngeliA Framework.dll public enum BlockType Extension Methods Extension.Next<E>(E) Extension.Prev<E>(E) Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Fields Background = 2 Element = 3 Entity = 0 Level = 1"
  },
  "api/AngeliA.BodyCloth.html": {
    "href": "api/AngeliA.BodyCloth.html",
    "title": "Class BodyCloth | AngeliA",
    "summary": "Class BodyCloth Namespace AngeliA Assembly AngeliA Framework.dll public abstract class BodyCloth : Cloth Inheritance object Cloth BodyCloth Derived ModularBodySuit Inherited Members Cloth.ClothSystemReady Cloth.ClothID Cloth.ClothName Cloth.SheetIndex Cloth.Pool Cloth.DefaultPool Cloth.HasCloth(int) Cloth.TryGetCloth(int, out Cloth) Cloth.GetDefaultClothID(int, ClothType) Cloth.ForAllCloth() Cloth.AttachClothOn(BodyPart, AngeSprite, int, int, int, int, int, int, int, int, bool) Cloth.CoverClothOn(BodyPart, AngeSprite) Cloth.CoverClothOn(BodyPart, AngeSprite, int) Cloth.CoverClothOn(BodyPart, AngeSprite, int, Color32, bool) Cloth.GetDisplayName(out int) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Properties ClothType public override sealed ClothType ClothType { get; } Property Value ClothType LocalZ protected virtual int LocalZ { get; } Property Value int SpriteLoaded public override bool SpriteLoaded { get; } Property Value bool TwistShiftTopAmount protected virtual int TwistShiftTopAmount { get; } Property Value int Methods DrawCape(PoseCharacterRenderer, OrientedSprite, int) public static void DrawCape(PoseCharacterRenderer renderer, OrientedSprite clothSprite, int motionAmount = 1000) Parameters renderer PoseCharacterRenderer clothSprite OrientedSprite motionAmount int DrawCloth(PoseCharacterRenderer) public override void DrawCloth(PoseCharacterRenderer renderer) Parameters renderer PoseCharacterRenderer DrawClothForBody(PoseCharacterRenderer, OrientedSprite, int, int) public static void DrawClothForBody(PoseCharacterRenderer renderer, OrientedSprite clothSprite, int localZ, int twistShiftTopAmount) Parameters renderer PoseCharacterRenderer clothSprite OrientedSprite localZ int twistShiftTopAmount int DrawClothForLowerArm(PoseCharacterRenderer, OrientedSprite, OrientedSprite, int) public static void DrawClothForLowerArm(PoseCharacterRenderer renderer, OrientedSprite spriteLeft, OrientedSprite spriteRight, int localZ = 1) Parameters renderer PoseCharacterRenderer spriteLeft OrientedSprite spriteRight OrientedSprite localZ int DrawClothForShoulder(PoseCharacterRenderer, OrientedSprite, OrientedSprite, int) public static void DrawClothForShoulder(PoseCharacterRenderer renderer, OrientedSprite spriteLeft, OrientedSprite spriteRight, int localZ = 1) Parameters renderer PoseCharacterRenderer spriteLeft OrientedSprite spriteRight OrientedSprite localZ int DrawClothForUpperArm(PoseCharacterRenderer, OrientedSprite, OrientedSprite, int) public static void DrawClothForUpperArm(PoseCharacterRenderer renderer, OrientedSprite spriteLeft, OrientedSprite spriteRight, int localZ = 1) Parameters renderer PoseCharacterRenderer spriteLeft OrientedSprite spriteRight OrientedSprite localZ int DrawClothFromPool(PoseCharacterRenderer) public static void DrawClothFromPool(PoseCharacterRenderer renderer) Parameters renderer PoseCharacterRenderer DrawClothGizmos(IRect, Color32, int) public override void DrawClothGizmos(IRect rect, Color32 tint, int z) Parameters rect IRect tint Color32 z int FillFromSheet(string) public override bool FillFromSheet(string name) Parameters name string Returns bool"
  },
  "api/AngeliA.BodyGadget.html": {
    "href": "api/AngeliA.BodyGadget.html",
    "title": "Class BodyGadget | AngeliA",
    "summary": "Class BodyGadget Namespace AngeliA Assembly AngeliA Framework.dll public abstract class BodyGadget Inheritance object BodyGadget Derived Ear Face Hair Horn Tail Wing Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Properties BodyGadgetSystemReady public static bool BodyGadgetSystemReady { get; } Property Value bool GadgetID public int GadgetID { get; } Property Value int GadgetName public string GadgetName { get; } Property Value string GadgetType public abstract BodyGadgetType GadgetType { get; } Property Value BodyGadgetType SheetIndex public int SheetIndex { get; } Property Value int SpriteLoaded public virtual bool SpriteLoaded { get; } Property Value bool Methods DrawGadget(PoseCharacterRenderer) public abstract void DrawGadget(PoseCharacterRenderer character) Parameters character PoseCharacterRenderer DrawGadgetGizmos(IRect, Color32, int) public virtual void DrawGadgetGizmos(IRect rect, Color32 tint, int z) Parameters rect IRect tint Color32 z int FillFromSheet(string) public virtual bool FillFromSheet(string basicName) Parameters basicName string Returns bool ForAllGadget() public static IEnumerable<KeyValuePair<int, BodyGadget>> ForAllGadget() Returns IEnumerable<KeyValuePair<int, BodyGadget>> GetDefaultGadgetID(int, BodyGadgetType) public static int GetDefaultGadgetID(int characterID, BodyGadgetType type) Parameters characterID int type BodyGadgetType Returns int GetDisplayName(string, out int) public string GetDisplayName(string typeName, out int languageID) Parameters typeName string languageID int Returns string TryGetGadget(int, out BodyGadget) public static bool TryGetGadget(int gadgetID, out BodyGadget gadget) Parameters gadgetID int gadget BodyGadget Returns bool"
  },
  "api/AngeliA.BodyGadgetItem.html": {
    "href": "api/AngeliA.BodyGadgetItem.html",
    "title": "Class BodyGadgetItem | AngeliA",
    "summary": "Class BodyGadgetItem Namespace AngeliA Assembly AngeliA Framework.dll public sealed class BodyGadgetItem : NonStackableItem, IMapItem Inheritance object Item NonStackableItem BodyGadgetItem Implements IMapItem Inherited Members NonStackableItem.MaxStackCount Item.AllowDuplicateUpdate Item.EmbedIntoLevel Item.TypeID Item.BeforeItemUpdate_FromInventory(Character, int, int) Item.OnItemUpdate_FromInventory(Character, int, int) Item.OnPoseAnimationUpdate_FromInventory(PoseCharacterRenderer, int, int) Item.OnTakeDamage_FromInventory(Character, int, int, ref Damage) Item.OnCharacterAttack_FromInventory(Character, Bullet, int, int) Item.BeforeItemUpdate_FromEquipment(Character) Item.OnItemUpdate_FromEquipment(Character) Item.BeforePoseAnimationUpdate_FromEquipment(PoseCharacterRenderer) Item.OnPoseAnimationUpdate_FromEquipment(PoseCharacterRenderer) Item.OnTakeDamage_FromEquipment(Character, ref Damage) Item.OnCharacterAttack_FromEquipment(Character, Bullet) Item.TryRepairEquipment(Character) Item.OnItemUpdate_FromItemHolder(ItemHolder, int) Item.OnCollect(Character) Item.ItemConditionCheck(Character) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Constructors BodyGadgetItem(int) public BodyGadgetItem(int id) Parameters id int Properties GadgetID public int GadgetID { get; init; } Property Value int Methods CanUse(Character) public override bool CanUse(Character holder) Parameters holder Character Returns bool DrawItem(Entity, IRect, Color32, int) public override void DrawItem(Entity holder, IRect rect, Color32 tint, int z) Parameters holder Entity rect IRect tint Color32 z int Use(Character, int, int, out bool) public override bool Use(Character holder, int inventoryID, int itemIndex, out bool consume) Parameters holder Character inventoryID int itemIndex int consume bool Returns bool"
  },
  "api/AngeliA.BodyGadgetType.html": {
    "href": "api/AngeliA.BodyGadgetType.html",
    "title": "Enum BodyGadgetType | AngeliA",
    "summary": "Enum BodyGadgetType Namespace AngeliA Assembly AngeliA Framework.dll public enum BodyGadgetType Extension Methods Extension.Next<E>(E) Extension.Prev<E>(E) Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Fields Ear = 2 Face = 0 Hair = 1 Horn = 3 Tail = 4 Wing = 5"
  },
  "api/AngeliA.BodyPart.CoverMode.html": {
    "href": "api/AngeliA.BodyPart.CoverMode.html",
    "title": "Enum BodyPart.CoverMode | AngeliA",
    "summary": "Enum BodyPart.CoverMode Namespace AngeliA Assembly AngeliA Framework.dll public enum BodyPart.CoverMode Extension Methods Extension.Next<E>(E) Extension.Prev<E>(E) Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Fields Covered = 1 FullCovered = 2 None = 0"
  },
  "api/AngeliA.BodyPart.html": {
    "href": "api/AngeliA.BodyPart.html",
    "title": "Class BodyPart | AngeliA",
    "summary": "Class BodyPart Namespace AngeliA Assembly AngeliA Framework.dll public class BodyPart Inheritance object BodyPart Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Constructors BodyPart(BodyPart, bool, bool) public BodyPart(BodyPart parent, bool useLimbFlip, bool rotateWithBody) Parameters parent BodyPart useLimbFlip bool rotateWithBody bool Fields Covered public BodyPart.CoverMode Covered Field Value BodyPart.CoverMode FrontSide public bool FrontSide Field Value bool GlobalX public int GlobalX Field Value int GlobalY public int GlobalY Field Value int Height public int Height Field Value int PivotX public int PivotX Field Value int PivotY public int PivotY Field Value int Rotation public int Rotation Field Value int Tint public Color32 Tint Field Value Color32 Width public int Width Field Value int X public int X Field Value int Y public int Y Field Value int Z public int Z Field Value int Properties Border public Int4 Border { get; } Property Value Int4 FacingRight public bool FacingRight { get; } Property Value bool FacingSign public int FacingSign { get; } Property Value int FlexableSizeY public int FlexableSizeY { get; set; } Property Value int ID public int ID { get; } Property Value int IsFullCovered public bool IsFullCovered { get; } Property Value bool LimbParent public BodyPart LimbParent { get; init; } Property Value BodyPart RotateWithBody public bool RotateWithBody { get; init; } Property Value bool SizeX public int SizeX { get; } Property Value int SizeY public int SizeY { get; } Property Value int SpritePivotX public int SpritePivotX { get; } Property Value int SpritePivotY public int SpritePivotY { get; } Property Value int UseLimbFlip public bool UseLimbFlip { get; init; } Property Value bool Methods FixApproximatelyRotation() public void FixApproximatelyRotation() GetGlobalCenter() public Int2 GetGlobalCenter() Returns Int2 GetGlobalRect() public IRect GetGlobalRect() Returns IRect GetLocalCenter() public Int2 GetLocalCenter() Returns Int2 GlobalLerp(float, float, bool) public Int2 GlobalLerp(float x01, float y01, bool natural = false) Parameters x01 float y01 float natural bool Returns Int2 Imitate(BodyPart) public void Imitate(BodyPart other) Parameters other BodyPart LimbRotate(int, int) public void LimbRotate(int rotation, int grow = 1000) Parameters rotation int grow int SetData(int) public void SetData(int id) Parameters id int TryGetSpriteIdFromSheet(Type, string, bool, out int) public static bool TryGetSpriteIdFromSheet(Type characterType, string bodyPartName, bool checkForGroup, out int id) Parameters characterType Type bodyPartName string checkForGroup bool id int Returns bool"
  },
  "api/AngeliA.BodySetAttribute.html": {
    "href": "api/AngeliA.BodySetAttribute.html",
    "title": "Class BodySetAttribute | AngeliA",
    "summary": "Class BodySetAttribute Namespace AngeliA Assembly AngeliA Framework.dll Treat specified sprites as bodyset for pose-characters [AttributeUsage(AttributeTargets.Assembly, AllowMultiple = true)] public class BodySetAttribute : Attribute Inheritance object Attribute BodySetAttribute Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Constructors BodySetAttribute(string) Treat specified sprites as bodyset for pose-characters public BodySetAttribute(string name) Parameters name string The name of the bodyset"
  },
  "api/AngeliA.BodySetItem.html": {
    "href": "api/AngeliA.BodySetItem.html",
    "title": "Class BodySetItem | AngeliA",
    "summary": "Class BodySetItem Namespace AngeliA Assembly AngeliA Framework.dll public sealed class BodySetItem : NonStackableItem, IMapItem Inheritance object Item NonStackableItem BodySetItem Implements IMapItem Inherited Members NonStackableItem.MaxStackCount Item.AllowDuplicateUpdate Item.EmbedIntoLevel Item.TypeID Item.BeforeItemUpdate_FromInventory(Character, int, int) Item.OnItemUpdate_FromInventory(Character, int, int) Item.OnPoseAnimationUpdate_FromInventory(PoseCharacterRenderer, int, int) Item.OnTakeDamage_FromInventory(Character, int, int, ref Damage) Item.OnCharacterAttack_FromInventory(Character, Bullet, int, int) Item.BeforeItemUpdate_FromEquipment(Character) Item.OnItemUpdate_FromEquipment(Character) Item.BeforePoseAnimationUpdate_FromEquipment(PoseCharacterRenderer) Item.OnPoseAnimationUpdate_FromEquipment(PoseCharacterRenderer) Item.OnTakeDamage_FromEquipment(Character, ref Damage) Item.OnCharacterAttack_FromEquipment(Character, Bullet) Item.TryRepairEquipment(Character) Item.OnItemUpdate_FromItemHolder(ItemHolder, int) Item.OnCollect(Character) Item.ItemConditionCheck(Character) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Constructors BodySetItem(string) public BodySetItem(string basicName) Parameters basicName string BodySetItem(Type) public BodySetItem(Type characterType) Parameters characterType Type Properties Data public CharacterRenderingConfig Data { get; init; } Property Value CharacterRenderingConfig TargetCharacterID public int TargetCharacterID { get; init; } Property Value int TargetCharacterName public string TargetCharacterName { get; init; } Property Value string Methods CanUse(Character) public override bool CanUse(Character holder) Parameters holder Character Returns bool DrawItem(Entity, IRect, Color32, int) public override void DrawItem(Entity holder, IRect rect, Color32 tint, int z) Parameters holder Entity rect IRect tint Color32 z int ForAllBodySetCharacterType() public static IEnumerable<KeyValuePair<int, (Type, string)>> ForAllBodySetCharacterType() Returns IEnumerable<KeyValuePair<int, (Type, string)>> GetDisplayName(string, out int) public string GetDisplayName(string typeName, out int languageID) Parameters typeName string languageID int Returns string Use(Character, int, int, out bool) public override bool Use(Character holder, int inventoryID, int itemIndex, out bool consume) Parameters holder Character inventoryID int itemIndex int consume bool Returns bool"
  },
  "api/AngeliA.Buff.html": {
    "href": "api/AngeliA.Buff.html",
    "title": "Class Buff | AngeliA",
    "summary": "Class Buff Namespace AngeliA Assembly AngeliA Framework.dll Represent a type of buff [Entity.MapEditorGroup(\"Buff\", 0)] public abstract class Buff : IMapItem Inheritance object Buff Implements IMapItem Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Constructors Buff() public Buff() Properties DefaultDuration How many frames should this buff apply by default public abstract int DefaultDuration { get; } Property Value int DescriptionID Unique angehash for language system to get the description of this buff public int DescriptionID { get; init; } Property Value int NameID Unique angehash for language system to get the display name of this buff public int NameID { get; init; } Property Value int TypeID Unique angehash of this buff class public int TypeID { get; init; } Property Value int TypeName AngeName of this type of buff public string TypeName { get; init; } Property Value string Methods BeforeUpdate(Character) public virtual void BeforeUpdate(Character target) Parameters target Character LateUpdate(Character) public virtual void LateUpdate(Character target) Parameters target Character OnCharacterAttack(Character, Bullet) public virtual void OnCharacterAttack(Character target, Bullet bullet) Parameters target Character bullet Bullet OnCharacterRenderered(CharacterRenderer) public virtual void OnCharacterRenderered(CharacterRenderer renderer) Parameters renderer CharacterRenderer"
  },
  "api/AngeliA.BuffItem-1.html": {
    "href": "api/AngeliA.BuffItem-1.html",
    "title": "Class BuffItem<B> | AngeliA",
    "summary": "Class BuffItem<B> Namespace AngeliA Assembly AngeliA Framework.dll public abstract class BuffItem<B> : BuffItem, IMapItem where B : Buff Type Parameters B Inheritance object Item BuffItem BuffItem<B> Implements IMapItem Derived AuraItem<B> Inherited Members BuffItem.AllowDuplicateUpdate BuffItem.MaxStackCount BuffItem.BuffID BuffItem.OnItemUpdate_FromInventory(Character, int, int) Item.EmbedIntoLevel Item.TypeID Item.BeforeItemUpdate_FromInventory(Character, int, int) Item.OnPoseAnimationUpdate_FromInventory(PoseCharacterRenderer, int, int) Item.OnTakeDamage_FromInventory(Character, int, int, ref Damage) Item.OnCharacterAttack_FromInventory(Character, Bullet, int, int) Item.BeforeItemUpdate_FromEquipment(Character) Item.OnItemUpdate_FromEquipment(Character) Item.BeforePoseAnimationUpdate_FromEquipment(PoseCharacterRenderer) Item.OnPoseAnimationUpdate_FromEquipment(PoseCharacterRenderer) Item.OnTakeDamage_FromEquipment(Character, ref Damage) Item.OnCharacterAttack_FromEquipment(Character, Bullet) Item.TryRepairEquipment(Character) Item.OnItemUpdate_FromItemHolder(ItemHolder, int) Item.OnCollect(Character) Item.CanUse(Character) Item.Use(Character, int, int, out bool) Item.ItemConditionCheck(Character) Item.DrawItem(Entity, IRect, Color32, int) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Constructors BuffItem() public BuffItem()"
  },
  "api/AngeliA.BuffItem.html": {
    "href": "api/AngeliA.BuffItem.html",
    "title": "Class BuffItem | AngeliA",
    "summary": "Class BuffItem Namespace AngeliA Assembly AngeliA Framework.dll public abstract class BuffItem : Item, IMapItem Inheritance object Item BuffItem Implements IMapItem Derived BuffItem<B> Inherited Members Item.EmbedIntoLevel Item.TypeID Item.BeforeItemUpdate_FromInventory(Character, int, int) Item.OnPoseAnimationUpdate_FromInventory(PoseCharacterRenderer, int, int) Item.OnTakeDamage_FromInventory(Character, int, int, ref Damage) Item.OnCharacterAttack_FromInventory(Character, Bullet, int, int) Item.BeforeItemUpdate_FromEquipment(Character) Item.OnItemUpdate_FromEquipment(Character) Item.BeforePoseAnimationUpdate_FromEquipment(PoseCharacterRenderer) Item.OnPoseAnimationUpdate_FromEquipment(PoseCharacterRenderer) Item.OnTakeDamage_FromEquipment(Character, ref Damage) Item.OnCharacterAttack_FromEquipment(Character, Bullet) Item.TryRepairEquipment(Character) Item.OnItemUpdate_FromItemHolder(ItemHolder, int) Item.OnCollect(Character) Item.CanUse(Character) Item.Use(Character, int, int, out bool) Item.ItemConditionCheck(Character) Item.DrawItem(Entity, IRect, Color32, int) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Properties AllowDuplicateUpdate public override bool AllowDuplicateUpdate { get; } Property Value bool BuffID public int BuffID { get; init; } Property Value int MaxStackCount public override int MaxStackCount { get; } Property Value int Methods OnItemUpdate_FromInventory(Character, int, int) public override void OnItemUpdate_FromInventory(Character holder, int inventoryID, int itemIndex) Parameters holder Character inventoryID int itemIndex int"
  },
  "api/AngeliA.BuiltInSprite.html": {
    "href": "api/AngeliA.BuiltInSprite.html",
    "title": "Class BuiltInSprite | AngeliA",
    "summary": "Class BuiltInSprite Namespace AngeliA Assembly AngeliA Framework.dll Utility class to get built-in sprites public static class BuiltInSprite Inheritance object BuiltInSprite Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields CHECKER_BOARD_16 public static readonly SpriteCode CHECKER_BOARD_16 Field Value SpriteCode CHECKER_BOARD_8 public static readonly SpriteCode CHECKER_BOARD_8 Field Value SpriteCode CHECK_MARK_16 public static readonly SpriteCode CHECK_MARK_16 Field Value SpriteCode CHECK_MARK_32 public static readonly SpriteCode CHECK_MARK_32 Field Value SpriteCode CIRCLE_16 public static readonly SpriteCode CIRCLE_16 Field Value SpriteCode CIRCLE_32 public static readonly SpriteCode CIRCLE_32 Field Value SpriteCode CIRCLE_OUTLINE public static readonly SpriteCode CIRCLE_OUTLINE Field Value SpriteCode COLOR_HUE public static readonly SpriteCode COLOR_HUE Field Value SpriteCode COLOR_HUE_ALT public static readonly SpriteCode COLOR_HUE_ALT Field Value SpriteCode COLOR_WHITE_BAR public static readonly SpriteCode COLOR_WHITE_BAR Field Value SpriteCode DOTTED_LINE_16 public static readonly SpriteCode DOTTED_LINE_16 Field Value SpriteCode DOTTED_LINE_16_SMOOTH public static readonly SpriteCode DOTTED_LINE_16_SMOOTH Field Value SpriteCode DOWN_ARROW public static readonly SpriteCode DOWN_ARROW Field Value SpriteCode EQUAL_16 public static readonly SpriteCode EQUAL_16 Field Value SpriteCode FILE_ICON_AUDIO public static readonly SpriteCode FILE_ICON_AUDIO Field Value SpriteCode FILE_ICON_DISK public static readonly SpriteCode FILE_ICON_DISK Field Value SpriteCode FILE_ICON_FILE public static readonly SpriteCode FILE_ICON_FILE Field Value SpriteCode FILE_ICON_FOLDER public static readonly SpriteCode FILE_ICON_FOLDER Field Value SpriteCode FILE_ICON_FOLDER_EMPTY public static readonly SpriteCode FILE_ICON_FOLDER_EMPTY Field Value SpriteCode FILE_ICON_FONT public static readonly SpriteCode FILE_ICON_FONT Field Value SpriteCode FILE_ICON_IMAGE public static readonly SpriteCode FILE_ICON_IMAGE Field Value SpriteCode FILE_ICON_TEXT public static readonly SpriteCode FILE_ICON_TEXT Field Value SpriteCode FRAME_16 public static readonly SpriteCode FRAME_16 Field Value SpriteCode FRAME_HOLLOW_16 public static readonly SpriteCode FRAME_HOLLOW_16 Field Value SpriteCode GAMEPAD_BODY public static readonly SpriteCode GAMEPAD_BODY Field Value SpriteCode GAMEPAD_DOWN public static readonly SpriteCode GAMEPAD_DOWN Field Value SpriteCode GAMEPAD_EAST public static readonly SpriteCode GAMEPAD_EAST Field Value SpriteCode GAMEPAD_HINT_A public static readonly SpriteCode GAMEPAD_HINT_A Field Value SpriteCode GAMEPAD_HINT_B public static readonly SpriteCode GAMEPAD_HINT_B Field Value SpriteCode GAMEPAD_HINT_DOWN public static readonly SpriteCode GAMEPAD_HINT_DOWN Field Value SpriteCode GAMEPAD_HINT_LEFT public static readonly SpriteCode GAMEPAD_HINT_LEFT Field Value SpriteCode GAMEPAD_HINT_RIGHT public static readonly SpriteCode GAMEPAD_HINT_RIGHT Field Value SpriteCode GAMEPAD_HINT_SELECT public static readonly SpriteCode GAMEPAD_HINT_SELECT Field Value SpriteCode GAMEPAD_HINT_START public static readonly SpriteCode GAMEPAD_HINT_START Field Value SpriteCode GAMEPAD_HINT_UP public static readonly SpriteCode GAMEPAD_HINT_UP Field Value SpriteCode GAMEPAD_LEFT public static readonly SpriteCode GAMEPAD_LEFT Field Value SpriteCode GAMEPAD_LEFT_SHOULDER public static readonly SpriteCode GAMEPAD_LEFT_SHOULDER Field Value SpriteCode GAMEPAD_LEFT_TRIGGER public static readonly SpriteCode GAMEPAD_LEFT_TRIGGER Field Value SpriteCode GAMEPAD_NORTH public static readonly SpriteCode GAMEPAD_NORTH Field Value SpriteCode GAMEPAD_RIGHT public static readonly SpriteCode GAMEPAD_RIGHT Field Value SpriteCode GAMEPAD_RIGHT_SHOULDER public static readonly SpriteCode GAMEPAD_RIGHT_SHOULDER Field Value SpriteCode GAMEPAD_RIGHT_TRIGGER public static readonly SpriteCode GAMEPAD_RIGHT_TRIGGER Field Value SpriteCode GAMEPAD_SELECT public static readonly SpriteCode GAMEPAD_SELECT Field Value SpriteCode GAMEPAD_SOUTH public static readonly SpriteCode GAMEPAD_SOUTH Field Value SpriteCode GAMEPAD_START public static readonly SpriteCode GAMEPAD_START Field Value SpriteCode GAMEPAD_UP public static readonly SpriteCode GAMEPAD_UP Field Value SpriteCode GAMEPAD_WEST public static readonly SpriteCode GAMEPAD_WEST Field Value SpriteCode HINT_BUTTON public static readonly SpriteCode HINT_BUTTON Field Value SpriteCode ICON_BACK public static readonly SpriteCode ICON_BACK Field Value SpriteCode ICON_BODYPART_HEIGHT public static readonly SpriteCode ICON_BODYPART_HEIGHT Field Value SpriteCode ICON_BODY_PART_ARM_HAND public static readonly SpriteCode ICON_BODY_PART_ARM_HAND Field Value SpriteCode ICON_BODY_PART_BODY public static readonly SpriteCode ICON_BODY_PART_BODY Field Value SpriteCode ICON_BODY_PART_EAR public static readonly SpriteCode ICON_BODY_PART_EAR Field Value SpriteCode ICON_BODY_PART_FACE public static readonly SpriteCode ICON_BODY_PART_FACE Field Value SpriteCode ICON_BODY_PART_HAIR public static readonly SpriteCode ICON_BODY_PART_HAIR Field Value SpriteCode ICON_BODY_PART_HAIR_COLOR public static readonly SpriteCode ICON_BODY_PART_HAIR_COLOR Field Value SpriteCode ICON_BODY_PART_HEAD public static readonly SpriteCode ICON_BODY_PART_HEAD Field Value SpriteCode ICON_BODY_PART_HORN public static readonly SpriteCode ICON_BODY_PART_HORN Field Value SpriteCode ICON_BODY_PART_LEG_FOOT public static readonly SpriteCode ICON_BODY_PART_LEG_FOOT Field Value SpriteCode ICON_BODY_PART_SKIN_COLOR public static readonly SpriteCode ICON_BODY_PART_SKIN_COLOR Field Value SpriteCode ICON_BODY_PART_TAIL public static readonly SpriteCode ICON_BODY_PART_TAIL Field Value SpriteCode ICON_BODY_PART_WING public static readonly SpriteCode ICON_BODY_PART_WING Field Value SpriteCode ICON_BRUSH public static readonly SpriteCode ICON_BRUSH Field Value SpriteCode ICON_BUFF public static readonly SpriteCode ICON_BUFF Field Value SpriteCode ICON_CHARACTER_AVATAR public static readonly SpriteCode ICON_CHARACTER_AVATAR Field Value SpriteCode ICON_CLEAR public static readonly SpriteCode ICON_CLEAR Field Value SpriteCode ICON_CROSS public static readonly SpriteCode ICON_CROSS Field Value SpriteCode ICON_DELETE public static readonly SpriteCode ICON_DELETE Field Value SpriteCode ICON_ENTITY public static readonly SpriteCode ICON_ENTITY Field Value SpriteCode ICON_ERROR public static readonly SpriteCode ICON_ERROR Field Value SpriteCode ICON_FILE public static readonly SpriteCode ICON_FILE Field Value SpriteCode ICON_GAMEPAD public static readonly SpriteCode ICON_GAMEPAD Field Value SpriteCode ICON_HOME public static readonly SpriteCode ICON_HOME Field Value SpriteCode ICON_INFO public static readonly SpriteCode ICON_INFO Field Value SpriteCode ICON_MAP public static readonly SpriteCode ICON_MAP Field Value SpriteCode ICON_MENU public static readonly SpriteCode ICON_MENU Field Value SpriteCode ICON_PALETTE public static readonly SpriteCode ICON_PALETTE Field Value SpriteCode ICON_PLUS public static readonly SpriteCode ICON_PLUS Field Value SpriteCode ICON_QUESTION_MARK public static readonly SpriteCode ICON_QUESTION_MARK Field Value SpriteCode ICON_REFRESH public static readonly SpriteCode ICON_REFRESH Field Value SpriteCode ICON_SEARCH public static readonly SpriteCode ICON_SEARCH Field Value SpriteCode ICON_STAR public static readonly SpriteCode ICON_STAR Field Value SpriteCode ICON_SUIT_BODYSUIT public static readonly SpriteCode ICON_SUIT_BODYSUIT Field Value SpriteCode ICON_SUIT_GLOVE public static readonly SpriteCode ICON_SUIT_GLOVE Field Value SpriteCode ICON_SUIT_HAT public static readonly SpriteCode ICON_SUIT_HAT Field Value SpriteCode ICON_SUIT_PANTS public static readonly SpriteCode ICON_SUIT_PANTS Field Value SpriteCode ICON_SUIT_SHOES public static readonly SpriteCode ICON_SUIT_SHOES Field Value SpriteCode ICON_TRIANGLE_DOWN public static readonly SpriteCode ICON_TRIANGLE_DOWN Field Value SpriteCode ICON_TRIANGLE_LEFT public static readonly SpriteCode ICON_TRIANGLE_LEFT Field Value SpriteCode ICON_TRIANGLE_RIGHT public static readonly SpriteCode ICON_TRIANGLE_RIGHT Field Value SpriteCode ICON_TRIANGLE_UP public static readonly SpriteCode ICON_TRIANGLE_UP Field Value SpriteCode ICON_WARNING public static readonly SpriteCode ICON_WARNING Field Value SpriteCode ITEM_ICON_ARMOR public static readonly SpriteCode ITEM_ICON_ARMOR Field Value SpriteCode ITEM_ICON_FOOD public static readonly SpriteCode ITEM_ICON_FOOD Field Value SpriteCode ITEM_ICON_GLOVES public static readonly SpriteCode ITEM_ICON_GLOVES Field Value SpriteCode ITEM_ICON_HAND_TOOL public static readonly SpriteCode ITEM_ICON_HAND_TOOL Field Value SpriteCode ITEM_ICON_HELMET public static readonly SpriteCode ITEM_ICON_HELMET Field Value SpriteCode ITEM_ICON_ITEM public static readonly SpriteCode ITEM_ICON_ITEM Field Value SpriteCode ITEM_ICON_JEWELRY public static readonly SpriteCode ITEM_ICON_JEWELRY Field Value SpriteCode ITEM_ICON_SHOES public static readonly SpriteCode ITEM_ICON_SHOES Field Value SpriteCode ITEM_ICON_WEAPON public static readonly SpriteCode ITEM_ICON_WEAPON Field Value SpriteCode LAMP_LIGHT public static readonly SpriteCode LAMP_LIGHT Field Value SpriteCode LEFT_ARROW public static readonly SpriteCode LEFT_ARROW Field Value SpriteCode MENU_ARROW_MARK public static readonly SpriteCode MENU_ARROW_MARK Field Value SpriteCode MENU_DIALOG_BG public static readonly SpriteCode MENU_DIALOG_BG Field Value SpriteCode MENU_GENERIC_DIALOG_BG public static readonly SpriteCode MENU_GENERIC_DIALOG_BG Field Value SpriteCode MENU_MORE_MARK public static readonly SpriteCode MENU_MORE_MARK Field Value SpriteCode MENU_SELECTION_MARK public static readonly SpriteCode MENU_SELECTION_MARK Field Value SpriteCode MENU_THREE_DOTS public static readonly SpriteCode MENU_THREE_DOTS Field Value SpriteCode PIXEL public static readonly SpriteCode PIXEL Field Value SpriteCode PLUS_16 public static readonly SpriteCode PLUS_16 Field Value SpriteCode RADIAL_DOTTED_RING_24 public static readonly SpriteCode RADIAL_DOTTED_RING_24 Field Value SpriteCode RADIAL_DOTTED_RING_32 public static readonly SpriteCode RADIAL_DOTTED_RING_32 Field Value SpriteCode RIGHT_ARROW public static readonly SpriteCode RIGHT_ARROW Field Value SpriteCode RING_24 public static readonly SpriteCode RING_24 Field Value SpriteCode RING_32 public static readonly SpriteCode RING_32 Field Value SpriteCode SHADOW_LINE_16 public static readonly SpriteCode SHADOW_LINE_16 Field Value SpriteCode SOFT_LINE_H public static readonly SpriteCode SOFT_LINE_H Field Value SpriteCode SOFT_LINE_V public static readonly SpriteCode SOFT_LINE_V Field Value SpriteCode TRIANGLE_13 public static readonly SpriteCode TRIANGLE_13 Field Value SpriteCode TRIANGLE_RIGHT_13 public static readonly SpriteCode TRIANGLE_RIGHT_13 Field Value SpriteCode UI_BUTTON public static readonly SpriteCode UI_BUTTON Field Value SpriteCode UI_BUTTON_DOWN public static readonly SpriteCode UI_BUTTON_DOWN Field Value SpriteCode UI_BUTTON_HOVER public static readonly SpriteCode UI_BUTTON_HOVER Field Value SpriteCode UI_DARK_BUTTON public static readonly SpriteCode UI_DARK_BUTTON Field Value SpriteCode UI_DARK_BUTTON_DOWN public static readonly SpriteCode UI_DARK_BUTTON_DOWN Field Value SpriteCode UI_DARK_BUTTON_HOVER public static readonly SpriteCode UI_DARK_BUTTON_HOVER Field Value SpriteCode UI_HOLO_BUTTON public static readonly SpriteCode UI_HOLO_BUTTON Field Value SpriteCode UI_INPUT_FIELD public static readonly SpriteCode UI_INPUT_FIELD Field Value SpriteCode UI_INPUT_FIELD_LARGE public static readonly SpriteCode UI_INPUT_FIELD_LARGE Field Value SpriteCode UI_INPUT_FIELD_SMALL public static readonly SpriteCode UI_INPUT_FIELD_SMALL Field Value SpriteCode UI_ITEM_FRAME public static readonly SpriteCode UI_ITEM_FRAME Field Value SpriteCode UI_LARGE_TOGGLE public static readonly SpriteCode UI_LARGE_TOGGLE Field Value SpriteCode UI_LARGE_TOGGLE_DOWN public static readonly SpriteCode UI_LARGE_TOGGLE_DOWN Field Value SpriteCode UI_LARGE_TOGGLE_HOVER public static readonly SpriteCode UI_LARGE_TOGGLE_HOVER Field Value SpriteCode UI_MINI_BUTTON_DARK public static readonly SpriteCode UI_MINI_BUTTON_DARK Field Value SpriteCode UI_MINI_BUTTON_DARK_DOWN public static readonly SpriteCode UI_MINI_BUTTON_DARK_DOWN Field Value SpriteCode UI_MINI_BUTTON_DARK_HOVER public static readonly SpriteCode UI_MINI_BUTTON_DARK_HOVER Field Value SpriteCode UI_SCROLL_BAR public static readonly SpriteCode UI_SCROLL_BAR Field Value SpriteCode UI_SLIDER_BODY public static readonly SpriteCode UI_SLIDER_BODY Field Value SpriteCode UI_SLIDER_FILL public static readonly SpriteCode UI_SLIDER_FILL Field Value SpriteCode UI_SLIDER_HANDLE public static readonly SpriteCode UI_SLIDER_HANDLE Field Value SpriteCode UI_SMALL_BUTTON public static readonly SpriteCode UI_SMALL_BUTTON Field Value SpriteCode UI_SMALL_BUTTON_DOWN public static readonly SpriteCode UI_SMALL_BUTTON_DOWN Field Value SpriteCode UI_SMALL_BUTTON_HOVER public static readonly SpriteCode UI_SMALL_BUTTON_HOVER Field Value SpriteCode UI_TAB public static readonly SpriteCode UI_TAB Field Value SpriteCode UI_TOGGLE public static readonly SpriteCode UI_TOGGLE Field Value SpriteCode UI_TOGGLE_DOWN public static readonly SpriteCode UI_TOGGLE_DOWN Field Value SpriteCode UI_TOGGLE_HOVER public static readonly SpriteCode UI_TOGGLE_HOVER Field Value SpriteCode UI_TOGGLE_MARK public static readonly SpriteCode UI_TOGGLE_MARK Field Value SpriteCode UP_ARROW public static readonly SpriteCode UP_ARROW Field Value SpriteCode"
  },
  "api/AngeliA.BuiltInText.html": {
    "href": "api/AngeliA.BuiltInText.html",
    "title": "Class BuiltInText | AngeliA",
    "summary": "Class BuiltInText Namespace AngeliA Assembly AngeliA Framework.dll Utility class to get built-in text though language system public static class BuiltInText Inheritance object BuiltInText Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields HINT_ADJUST public static readonly LanguageCode HINT_ADJUST Field Value LanguageCode HINT_ATTACK public static readonly LanguageCode HINT_ATTACK Field Value LanguageCode HINT_DRIVE public static readonly LanguageCode HINT_DRIVE Field Value LanguageCode HINT_JUMP public static readonly LanguageCode HINT_JUMP Field Value LanguageCode HINT_MOVE public static readonly LanguageCode HINT_MOVE Field Value LanguageCode HINT_SHOW_MENU public static readonly LanguageCode HINT_SHOW_MENU Field Value LanguageCode HINT_STOP_DRIVE public static readonly LanguageCode HINT_STOP_DRIVE Field Value LanguageCode HINT_SWITCH_PLAYER public static readonly LanguageCode HINT_SWITCH_PLAYER Field Value LanguageCode HINT_USE public static readonly LanguageCode HINT_USE Field Value LanguageCode LABEL_B public static readonly LanguageCode LABEL_B Field Value LanguageCode LABEL_BOTTOM public static readonly LanguageCode LABEL_BOTTOM Field Value LanguageCode LABEL_D public static readonly LanguageCode LABEL_D Field Value LanguageCode LABEL_DOWN public static readonly LanguageCode LABEL_DOWN Field Value LanguageCode LABEL_L public static readonly LanguageCode LABEL_L Field Value LanguageCode LABEL_LEFT public static readonly LanguageCode LABEL_LEFT Field Value LanguageCode LABEL_R public static readonly LanguageCode LABEL_R Field Value LanguageCode LABEL_RIGHT public static readonly LanguageCode LABEL_RIGHT Field Value LanguageCode LABEL_T public static readonly LanguageCode LABEL_T Field Value LanguageCode LABEL_TOP public static readonly LanguageCode LABEL_TOP Field Value LanguageCode LABEL_U public static readonly LanguageCode LABEL_U Field Value LanguageCode LABEL_UP public static readonly LanguageCode LABEL_UP Field Value LanguageCode UI_ADD public static readonly LanguageCode UI_ADD Field Value LanguageCode UI_APPLY public static readonly LanguageCode UI_APPLY Field Value LanguageCode UI_BACK public static readonly LanguageCode UI_BACK Field Value LanguageCode UI_CANCEL public static readonly LanguageCode UI_CANCEL Field Value LanguageCode UI_CONTINUE public static readonly LanguageCode UI_CONTINUE Field Value LanguageCode UI_DEBUG public static readonly LanguageCode UI_DEBUG Field Value LanguageCode UI_DELETE public static readonly LanguageCode UI_DELETE Field Value LanguageCode UI_DONT_SAVE public static readonly LanguageCode UI_DONT_SAVE Field Value LanguageCode UI_EMPTY public static readonly LanguageCode UI_EMPTY Field Value LanguageCode UI_EXPLORE public static readonly LanguageCode UI_EXPLORE Field Value LanguageCode UI_GAMEOVER public static readonly LanguageCode UI_GAMEOVER Field Value LanguageCode UI_IGNORE public static readonly LanguageCode UI_IGNORE Field Value LanguageCode UI_LOCK public static readonly LanguageCode UI_LOCK Field Value LanguageCode UI_MENU public static readonly LanguageCode UI_MENU Field Value LanguageCode UI_NO public static readonly LanguageCode UI_NO Field Value LanguageCode UI_NONE public static readonly LanguageCode UI_NONE Field Value LanguageCode UI_OFF public static readonly LanguageCode UI_OFF Field Value LanguageCode UI_OK public static readonly LanguageCode UI_OK Field Value LanguageCode UI_ON public static readonly LanguageCode UI_ON Field Value LanguageCode UI_OPEN public static readonly LanguageCode UI_OPEN Field Value LanguageCode UI_QUIT public static readonly LanguageCode UI_QUIT Field Value LanguageCode UI_QUIT_GAME public static readonly LanguageCode UI_QUIT_GAME Field Value LanguageCode UI_RENAME public static readonly LanguageCode UI_RENAME Field Value LanguageCode UI_RESET public static readonly LanguageCode UI_RESET Field Value LanguageCode UI_RESTART public static readonly LanguageCode UI_RESTART Field Value LanguageCode UI_SAVE public static readonly LanguageCode UI_SAVE Field Value LanguageCode UI_SETTING public static readonly LanguageCode UI_SETTING Field Value LanguageCode UI_UNLOCK public static readonly LanguageCode UI_UNLOCK Field Value LanguageCode UI_YES public static readonly LanguageCode UI_YES Field Value LanguageCode"
  },
  "api/AngeliA.Bullet.html": {
    "href": "api/AngeliA.Bullet.html",
    "title": "Class Bullet | AngeliA",
    "summary": "Class Bullet Namespace AngeliA Assembly AngeliA Framework.dll [Entity.Capacity(128, 0)] [Entity.Layer(5)] public abstract class Bullet : Entity, IMapItem Inheritance object Entity Bullet Implements IMapItem Derived HealBullet MeleeBullet MissileBullet MovableBullet Inherited Members Entity.Active Entity.X Entity.Y Entity.Width Entity.Height Entity.TypeID Entity.SpawnFrame Entity.FromWorld Entity.Rect Entity.InstanceOrder Entity.MapUnitPos Entity.InstanceID Entity.IgnoreReposition Entity.XY Entity.Size Entity.Center Entity.CenterX Entity.CenterY Entity.PivotUnitPosition Entity.OnInactivated() Entity.FirstUpdate() Entity.LateUpdate() Entity.AfterReposition(Int3, Int3) Entity.IgnoreDespawnFromMap(int) Entity.CancelIgnoreDespawnFromMap() Entity.Draw() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Fields Damage public readonly FrameBasedInt Damage Field Value FrameBasedInt Properties AttackCharged public bool AttackCharged { get; } Property Value bool AttackIndex public int AttackIndex { get; } Property Value int BasicDamage protected virtual int BasicDamage { get; } Property Value int DamageType public Tag DamageType { get; set; } Property Value Tag Duration public virtual int Duration { get; } Property Value int EnvironmentHitCount protected virtual int EnvironmentHitCount { get; } Property Value int EnvironmentMask protected virtual int EnvironmentMask { get; } Property Value int FailbackTargetTeam public int FailbackTargetTeam { get; set; } Property Value int ReceiverHitCount protected virtual int ReceiverHitCount { get; } Property Value int ReceiverMask protected virtual int ReceiverMask { get; } Property Value int RoundHitCheck protected virtual bool RoundHitCheck { get; } Property Value bool Sender public Entity Sender { get; set; } Property Value Entity TargetTeam public int TargetTeam { get; } Property Value int Methods BeforeDespawn(IDamageReceiver) protected virtual void BeforeDespawn(IDamageReceiver receiver) Parameters receiver IDamageReceiver BeforeUpdate() public override void BeforeUpdate() EnvironmentHitCheck(out bool) protected void EnvironmentHitCheck(out bool requireSelfDestroy) Parameters requireSelfDestroy bool GetDamage() public Damage GetDamage() Returns Damage GroundCheck(out Color32) public bool GroundCheck(out Color32 groundTint) Parameters groundTint Color32 Returns bool OnActivated() public override void OnActivated() PerformHitEnvironment(out bool) protected virtual void PerformHitEnvironment(out bool requireSelfDestroy) Parameters requireSelfDestroy bool PerformHitReceiver(IDamageReceiver, out bool) protected virtual void PerformHitReceiver(IDamageReceiver receiver, out bool requireSelfDestroy) Parameters receiver IDamageReceiver requireSelfDestroy bool ReceiverHitCheck(out bool) protected void ReceiverHitCheck(out bool requireSelfDestroy) Parameters requireSelfDestroy bool Update() public override void Update()"
  },
  "api/AngeliA.Cell.html": {
    "href": "api/AngeliA.Cell.html",
    "title": "Class Cell | AngeliA",
    "summary": "Class Cell Namespace AngeliA Assembly AngeliA Framework.dll Rendering cell public class Cell Inheritance object Cell Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Fields BorderSide Which side does this cell belongs to when it's rendered in 9-slice mode public Alignment BorderSide Field Value Alignment Color public Color32 Color Field Value Color32 EMPTY public static readonly Cell EMPTY Field Value Cell Height public int Height Field Value int PivotX Which place of the cell should be align with the X position. 0 means left edge, 1 means right edge. public float PivotX Field Value float PivotY Which place of the cell should be align with the Y position. 0 means bottom edge, 1 means top edge. public float PivotY Field Value float Rotation1000 Actual rotation data of the cell, 0 means up, 90000 means right public int Rotation1000 Field Value int SheetIndex Which sprite sheet does this cell use. -1 means main sheet. public int SheetIndex Field Value int Shift How many edge should be clip off. 0 means no clip off, set left into \"width\" means clip off all of them public Int4 Shift Field Value Int4 Sprite public AngeSprite Sprite Field Value AngeSprite Width public int Width Field Value int X public int X Field Value int Y public int Y Field Value int Z Z position for sorting public int Z Field Value int Properties Rotation Rotation of the cell, 0 means up, 90 means right public int Rotation { get; set; } Property Value int TextSprite Sprite for rendering text character public CharSprite TextSprite { get; set; } Property Value CharSprite Methods Clamp(IRect) Clamp the content inside the given rect range public void Clamp(IRect rect) Parameters rect IRect CopyFrom(Cell) public void CopyFrom(Cell other) Parameters other Cell GetGlobalBounds() Get the boundary occupied by the cell public IRect GetGlobalBounds() Returns IRect GlobalLerp(float, float) public Int2 GlobalLerp(float x01, float y01) Parameters x01 float y01 float Returns Int2 GlobalToLocal(int, int) public Int2 GlobalToLocal(int globalX, int globalY) Parameters globalX int globalY int Returns Int2 LocalToGlobal(int, int) public Int2 LocalToGlobal(int localX, int localY) Parameters localX int localY int Returns Int2 ReturnPivots() Set pivot of the cell into (0,0) and let position adapt, so the final position of the cell remain the same public void ReturnPivots() ReturnPivots(float, float) Set pivot of the cell and let position adapt, so the final position of the cell remain the same public void ReturnPivots(float newPivotX, float newPivotY) Parameters newPivotX float newPivotY float ReturnPosition(int, int) Set position of the cell and let pivot adapt, so the final position of the cell remain the same public void ReturnPosition(int globalX, int globalY) Parameters globalX int globalY int RotateAround(int, int, int) Rotate the cell around the given position public void RotateAround(int rotation, int pointX, int pointY) Parameters rotation int pointX int pointY int ScaleFrom(int, int, int) Scale the cell based on the given position public void ScaleFrom(int scale, int pointX, int pointY) Parameters scale int pointX int pointY int ScaleFrom(float, int, int) Scale the cell based on the given position public void ScaleFrom(float scale, int pointX, int pointY) Parameters scale float pointX int pointY int SetRect(IRect) Set X,Y,Width,Height with a rect public void SetRect(IRect rect) Parameters rect IRect"
  },
  "api/AngeliA.CellScreenshotSystem.Screenshot.html": {
    "href": "api/AngeliA.CellScreenshotSystem.Screenshot.html",
    "title": "Class CellScreenshotSystem.Screenshot | AngeliA",
    "summary": "Class CellScreenshotSystem.Screenshot Namespace AngeliA Assembly AngeliA Framework.dll public class CellScreenshotSystem.Screenshot Inheritance object CellScreenshotSystem.Screenshot Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Fields CreatedDate public long CreatedDate Field Value long FilePath public string FilePath Field Value string Locked public bool Locked Field Value bool Range public IRect Range Field Value IRect SkyBottom public Color32 SkyBottom Field Value Color32 SkyTop public Color32 SkyTop Field Value Color32 Methods Read(BinaryReader) public void Read(BinaryReader reader) Parameters reader BinaryReader Write(BinaryWriter) public void Write(BinaryWriter writer) Parameters writer BinaryWriter"
  },
  "api/AngeliA.CellScreenshotSystem.html": {
    "href": "api/AngeliA.CellScreenshotSystem.html",
    "title": "Class CellScreenshotSystem | AngeliA",
    "summary": "Class CellScreenshotSystem Namespace AngeliA Assembly AngeliA Framework.dll public static class CellScreenshotSystem Inheritance object CellScreenshotSystem Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Count public static int Count { get; } Property Value int Methods DeleteScreenshot(int, bool) public static void DeleteScreenshot(int index, bool dontDeleteLocked = true) Parameters index int dontDeleteLocked bool DrawScreenshot(Screenshot, IRect, Color32, int, int, bool) public static void DrawScreenshot(CellScreenshotSystem.Screenshot screenshot, IRect rect, Color32 tint, int z = 0, int layer = 7, bool fit = true) Parameters screenshot CellScreenshotSystem.Screenshot rect IRect tint Color32 z int layer int fit bool DrawScreenshot(Screenshot, IRect, FRect, Color32, int, int, bool) public static void DrawScreenshot(CellScreenshotSystem.Screenshot screenshot, IRect rect, FRect sourceRange, Color32 tint, int z = 0, int layer = 7, bool fit = true) Parameters screenshot CellScreenshotSystem.Screenshot rect IRect sourceRange FRect tint Color32 z int layer int fit bool DrawScreenshot(Screenshot, IRect, FRect, int, int, bool) public static void DrawScreenshot(CellScreenshotSystem.Screenshot screenshot, IRect rect, FRect sourceRange, int z = 0, int layer = 7, bool fit = true) Parameters screenshot CellScreenshotSystem.Screenshot rect IRect sourceRange FRect z int layer int fit bool DrawScreenshot(Screenshot, IRect, int, int, bool) public static void DrawScreenshot(CellScreenshotSystem.Screenshot screenshot, IRect rect, int z = 0, int layer = 7, bool fit = true) Parameters screenshot CellScreenshotSystem.Screenshot rect IRect z int layer int fit bool GetScreenshot(int) public static CellScreenshotSystem.Screenshot GetScreenshot(int index) Parameters index int Returns CellScreenshotSystem.Screenshot RequireTakeScreenshot(IRect, int) public static void RequireTakeScreenshot(IRect cameraRange, int delay = 0) Parameters cameraRange IRect delay int SetScreenshotLock(int, bool) public static void SetScreenshotLock(int index, bool locked) Parameters index int locked bool TakeScreenshotImmediately(IRect, bool) public static CellScreenshotSystem.Screenshot TakeScreenshotImmediately(IRect cameraRange, bool saveToSystem = true) Parameters cameraRange IRect saveToSystem bool Returns CellScreenshotSystem.Screenshot"
  },
  "api/AngeliA.CellZScope.html": {
    "href": "api/AngeliA.CellZScope.html",
    "title": "Struct CellZScope | AngeliA",
    "summary": "Struct CellZScope Namespace AngeliA Assembly AngeliA Framework.dll public readonly struct CellZScope : IDisposable Implements IDisposable Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Constructors CellZScope(int) public CellZScope(int z) Parameters z int Methods Dispose() Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources. public void Dispose()"
  },
  "api/AngeliA.ChangeSavingSlotTask.html": {
    "href": "api/AngeliA.ChangeSavingSlotTask.html",
    "title": "Class ChangeSavingSlotTask | AngeliA",
    "summary": "Class ChangeSavingSlotTask Namespace AngeliA Assembly AngeliA Framework.dll public class ChangeSavingSlotTask : Task Inheritance object Task ChangeSavingSlotTask Inherited Members Task.LocalFrame Task.UserData Task.OnStart() Task.OnEnd() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Fields TYPE_ID public static readonly int TYPE_ID Field Value int Methods FrameUpdate() public override TaskResult FrameUpdate() Returns TaskResult"
  },
  "api/AngeliA.CharSprite.html": {
    "href": "api/AngeliA.CharSprite.html",
    "title": "Class CharSprite | AngeliA",
    "summary": "Class CharSprite Namespace AngeliA Assembly AngeliA Framework.dll public class CharSprite Inheritance object CharSprite Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Fields Advance public float Advance Field Value float Char public char Char Field Value char FontIndex public int FontIndex Field Value int NONE public static readonly CharSprite NONE Field Value CharSprite Offset public FRect Offset Field Value FRect Texture public object Texture Field Value object"
  },
  "api/AngeliA.Character.html": {
    "href": "api/AngeliA.Character.html",
    "title": "Class Character | AngeliA",
    "summary": "Class Character Namespace AngeliA Assembly AngeliA Framework.dll [Entity.MapEditorGroup(\"Character\", 0)] [Entity.Layer(2)] public abstract class Character : Rigidbody, IMapItem, IDamageReceiver, ICarrier, IWithCharacterMovement, IWithCharacterAttackness, IWithCharacterHealth, IWithCharacterBuff, IWithCharacterRenderer Inheritance object Entity Rigidbody Character Implements IMapItem IDamageReceiver ICarrier IWithCharacterMovement IWithCharacterAttackness IWithCharacterHealth IWithCharacterBuff IWithCharacterRenderer Derived Enemy Summon PoseCharacter Inherited Members Rigidbody.Rect Rigidbody.IsGrounded Rigidbody.IsInsideGround Rigidbody.InWater Rigidbody.VelocityX Rigidbody.VelocityY Rigidbody.BounceSpeedRate Rigidbody.OffsetX Rigidbody.OffsetY Rigidbody.GroundedID Rigidbody.PrevX Rigidbody.PrevY Rigidbody.DeltaPositionX Rigidbody.DeltaPositionY Rigidbody.MomentumX Rigidbody.MomentumY Rigidbody.RequireDodgeOverlap Rigidbody.GlobalGravity Rigidbody.FallingGravityScale Rigidbody.RisingGravityScale Rigidbody.CollisionMask Rigidbody.IgnoreGroundCheck Rigidbody.IgnoreGravity Rigidbody.IgnorePhysics Rigidbody.IgnoreInsideGround Rigidbody.IgnoreOneway Rigidbody.IgnoreMomentum Rigidbody.MaxGravitySpeed Rigidbody.WaterFloatSpeed Rigidbody.WaterSpeedRate Rigidbody.DestroyWhenInsideGround Rigidbody.PerformMove(int, int, bool) Rigidbody.MakeGrounded(int, int) Rigidbody.CancelMakeGrounded() Rigidbody.Push(int) Rigidbody.PerformGroundCheck(IRect, out PhysicsCell) Rigidbody.FillAsTrigger(int, int) Rigidbody.FillAsOnewayUp(int, int) Rigidbody.OnInsideGroundDestroyed() Rigidbody.GroundedCheck() Rigidbody.RefreshPrevPosition() Entity.Active Entity.X Entity.Y Entity.Width Entity.Height Entity.TypeID Entity.SpawnFrame Entity.FromWorld Entity.InstanceOrder Entity.MapUnitPos Entity.InstanceID Entity.IgnoreReposition Entity.XY Entity.Size Entity.Center Entity.CenterX Entity.CenterY Entity.PivotUnitPosition Entity.IgnoreDespawnFromMap(int) Entity.CancelIgnoreDespawnFromMap() Entity.Draw() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Constructors Character() public Character() Fields Attackness public CharacterAttackness Attackness Field Value CharacterAttackness Buff public readonly CharacterBuff Buff Field Value CharacterBuff FullSleepDuration public readonly FrameBasedInt FullSleepDuration Field Value FrameBasedInt Health public CharacterHealth Health Field Value CharacterHealth INVENTORY_COLUMN public const int INVENTORY_COLUMN = 6 Field Value int INVENTORY_ROW public const int INVENTORY_ROW = 3 Field Value int Movement public CharacterMovement Movement Field Value CharacterMovement NativeAttackness public readonly CharacterAttackness NativeAttackness Field Value CharacterAttackness NativeHealth public readonly CharacterHealth NativeHealth Field Value CharacterHealth NativeMovement public readonly CharacterMovement NativeMovement Field Value CharacterMovement NativeRenderer public readonly CharacterRenderer NativeRenderer Field Value CharacterRenderer Rendering public CharacterRenderer Rendering Field Value CharacterRenderer TeleportDuration public readonly FrameBasedInt TeleportDuration Field Value FrameBasedInt Properties AirDragX public override int AirDragX { get; } Property Value int AirDragY public override int AirDragY { get; } Property Value int AllowBeingPush public override bool AllowBeingPush { get; } Property Value bool AnimationType public CharacterAnimationType AnimationType { get; set; } Property Value CharacterAnimationType AttackTargetTeam public virtual int AttackTargetTeam { get; } Property Value int BodySuitInteractable public bool BodySuitInteractable { get; set; } Property Value bool Bouncy public int Bouncy { get; set; } Property Value int CarryOtherOnTop public override bool CarryOtherOnTop { get; } Property Value bool CharacterState public CharacterState CharacterState { get; } Property Value CharacterState CurrentAttackSpeedRate public int CurrentAttackSpeedRate { get; } Property Value int DefaultCharacterHeight public virtual int DefaultCharacterHeight { get; } Property Value int DespawnAfterPassoutDelay public int DespawnAfterPassoutDelay { get; set; } Property Value int EjectWhenInsideGround public override bool EjectWhenInsideGround { get; } Property Value bool FacingRight public override bool FacingRight { get; } Property Value bool FinalCharacterHeight public virtual int FinalCharacterHeight { get; } Property Value int GlovesInteractable public bool GlovesInteractable { get; set; } Property Value bool HandToolInteractable public bool HandToolInteractable { get; set; } Property Value bool HelmetInteractable public bool HelmetInteractable { get; set; } Property Value bool IgnoreDamageType public virtual Tag IgnoreDamageType { get; } Property Value Tag InventoryID public int InventoryID { get; } Property Value int InventoryType public virtual CharacterInventoryType InventoryType { get; } Property Value CharacterInventoryType JewelryInteractable public bool JewelryInteractable { get; set; } Property Value bool LastRequireBounceFrame public int LastRequireBounceFrame { get; set; } Property Value int PassOutFrame public int PassOutFrame { get; } Property Value int PhysicalLayer public override sealed int PhysicalLayer { get; } Property Value int RenderingCellIndex public int RenderingCellIndex { get; } Property Value int SelfCollisionMask public override sealed int SelfCollisionMask { get; } Property Value int ShoesInteractable public bool ShoesInteractable { get; set; } Property Value bool SleepStartFrame public int SleepStartFrame { get; set; } Property Value int Team public virtual int Team { get; } Property Value int TeleportEndFrame public int TeleportEndFrame { get; } Property Value int TeleportToFrontSide public bool TeleportToFrontSide { get; } Property Value bool Teleporting public bool Teleporting { get; } Property Value bool TeleportingWithPortal public bool TeleportingWithPortal { get; } Property Value bool Methods AfterReposition(Int3, Int3) public override void AfterReposition(Int3 fromUnitPos, Int3 toUnitPos) Parameters fromUnitPos Int3 toUnitPos Int3 BeforeUpdate() public override void BeforeUpdate() Bounce() public void Bounce() CancelBounce() public void CancelBounce() CreateNativeAttackness() protected virtual CharacterAttackness CreateNativeAttackness() Returns CharacterAttackness CreateNativeHealth() protected virtual CharacterHealth CreateNativeHealth() Returns CharacterHealth CreateNativeMovement() protected virtual CharacterMovement CreateNativeMovement() Returns CharacterMovement CreateNativeRenderer() protected virtual CharacterRenderer CreateNativeRenderer() Returns CharacterRenderer EnterTeleportState(bool, bool, bool) public void EnterTeleportState(bool front, bool portal, bool lastHalfOnly = false) Parameters front bool portal bool lastHalfOnly bool EquipmentAvailable(EquipmentType) public bool EquipmentAvailable(EquipmentType equipmentType) Parameters equipmentType EquipmentType Returns bool FirstUpdate() public override void FirstUpdate() ForceFillTrigger(int) public void ForceFillTrigger(int duration = 1) Parameters duration int GetBonusFromFullSleep() public void GetBonusFromFullSleep() GetCurrentPoseAnimationType() public virtual CharacterAnimationType GetCurrentPoseAnimationType() Returns CharacterAnimationType GetDescription() public string GetDescription() Returns string GetDisplayName() public string GetDisplayName() Returns string IgnoreDamageFromLevel(int) public void IgnoreDamageFromLevel(int duration = 1) Parameters duration int InsideGroundCheck() protected override bool InsideGroundCheck() Returns bool IsAttackAllowedByEquipment() public virtual bool IsAttackAllowedByEquipment() Returns bool IsAttackAllowedByMovement() public virtual bool IsAttackAllowedByMovement() Returns bool LateUpdate() public override void LateUpdate() LockAnimationType(CharacterAnimationType, int) public void LockAnimationType(CharacterAnimationType type, int duration = 1) Parameters type CharacterAnimationType duration int OnActivated() public override void OnActivated() OnCharacterRendered() public virtual void OnCharacterRendered() OnDamaged(Damage) public virtual void OnDamaged(Damage damage) Parameters damage Damage OnInactivated() public override void OnInactivated() OverrideAttackness(CharacterAttackness, int) public void OverrideAttackness(CharacterAttackness attacknessOverride, int duration = 1) Parameters attacknessOverride CharacterAttackness duration int OverrideHealth(CharacterHealth, int) public void OverrideHealth(CharacterHealth healthOverride, int duration = 1) Parameters healthOverride CharacterHealth duration int OverrideMovement(CharacterMovement, int) public void OverrideMovement(CharacterMovement movementOverride, int duration = 1) Parameters movementOverride CharacterMovement duration int OverrideRenderer(CharacterRenderer, int) public void OverrideRenderer(CharacterRenderer rendererOverride, int duration = 1) Parameters rendererOverride CharacterRenderer duration int ResetInventoryUpdate(int) public void ResetInventoryUpdate(int invCapacity) Parameters invCapacity int SetCharacterState(CharacterState) public virtual void SetCharacterState(CharacterState state) Parameters state CharacterState TryRepairAllEquipments(bool) public int TryRepairAllEquipments(bool requireMultiple = false) Parameters requireMultiple bool Returns int Update() public override void Update()"
  },
  "api/AngeliA.CharacterAnimationType.html": {
    "href": "api/AngeliA.CharacterAnimationType.html",
    "title": "Enum CharacterAnimationType | AngeliA",
    "summary": "Enum CharacterAnimationType Namespace AngeliA Assembly AngeliA Framework.dll public enum CharacterAnimationType Extension Methods Extension.IsLyingDown(CharacterAnimationType) Extension.Next<E>(E) Extension.Prev<E>(E) Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Fields Brake = 13 Climb = 14 Crash = 11 Dash = 9 Fly = 15 GrabSide = 18 GrabTop = 17 Idle = 0 JumpDown = 4 JumpUp = 3 PassOut = 22 Pound = 12 Rolling = 23 Run = 2 Rush = 10 Sleep = 21 Slide = 16 Spin = 19 SquatIdle = 7 SquatMove = 8 SwimIdle = 5 SwimMove = 6 TakingDamage = 20 Walk = 1"
  },
  "api/AngeliA.CharacterAttackness.html": {
    "href": "api/AngeliA.CharacterAttackness.html",
    "title": "Class CharacterAttackness | AngeliA",
    "summary": "Class CharacterAttackness Namespace AngeliA Assembly AngeliA Framework.dll Behavour class that handle attack logic for character public class CharacterAttackness Inheritance object CharacterAttackness Derived SummonAttackness Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Constructors CharacterAttackness(Character) Behavour class that handle attack logic for character public CharacterAttackness(Character character) Parameters character Character Fields AirSpeedRateOnAttack Moving speed will be mutiply be this rate when character is attacking while not grounded (0 means 0%, 1000 means 100%) public readonly FrameBasedInt AirSpeedRateOnAttack Field Value FrameBasedInt AttackComboGap Attack happens between this many frames should be combo attacks public readonly FrameBasedInt AttackComboGap Field Value FrameBasedInt AttackInAir Allow character attack when not grounded public readonly FrameBasedBool AttackInAir Field Value FrameBasedBool AttackInWater Allow character attack when inside water public readonly FrameBasedBool AttackInWater Field Value FrameBasedBool AttackWhenClimbing Allow character attack when climbing public readonly FrameBasedBool AttackWhenClimbing Field Value FrameBasedBool AttackWhenDashing Allow character attack when dashing public readonly FrameBasedBool AttackWhenDashing Field Value FrameBasedBool AttackWhenFlying Allow character attack when flying public readonly FrameBasedBool AttackWhenFlying Field Value FrameBasedBool AttackWhenGrabbing Allow character attack when grabbing public readonly FrameBasedBool AttackWhenGrabbing Field Value FrameBasedBool AttackWhenPounding Allow character attack when pounding public readonly FrameBasedBool AttackWhenPounding Field Value FrameBasedBool AttackWhenRolling Allow character attack when rolling public readonly FrameBasedBool AttackWhenRolling Field Value FrameBasedBool AttackWhenRunning Allow character attack when running public readonly FrameBasedBool AttackWhenRunning Field Value FrameBasedBool AttackWhenRush Allow character attack when rushing public readonly FrameBasedBool AttackWhenRush Field Value FrameBasedBool AttackWhenSliding Allow character attack when sliding public readonly FrameBasedBool AttackWhenSliding Field Value FrameBasedBool AttackWhenSquatting Allow character attack when squatting public readonly FrameBasedBool AttackWhenSquatting Field Value FrameBasedBool AttackWhenWalking Allow character attack when walking public readonly FrameBasedBool AttackWhenWalking Field Value FrameBasedBool CancelAttackOnJump When character jumps, unfinished attack will be cancel public readonly FrameBasedBool CancelAttackOnJump Field Value FrameBasedBool DefaultSpeedRateOnAttack Moving speed will be mutiply be this rate when character is attacking (0 means 0%, 1000 means 100%) public readonly FrameBasedInt DefaultSpeedRateOnAttack Field Value FrameBasedInt HoldAttackPunishFrame If hold attack button to perform multiple attacks, the cooldown will be add this frames longer public readonly FrameBasedInt HoldAttackPunishFrame Field Value FrameBasedInt RunningSpeedRateOnAttack Moving speed will be mutiply be this rate when character is attacking while running (0 means 0%, 1000 means 100%) public readonly FrameBasedInt RunningSpeedRateOnAttack Field Value FrameBasedInt TargetCharacter Character hosting this attackness public readonly Character TargetCharacter Field Value Character WalkingSpeedRateOnAttack Moving speed will be mutiply be this rate when character is attacking while walking (0 means 0%, 1000 means 100%) public readonly FrameBasedInt WalkingSpeedRateOnAttack Field Value FrameBasedInt Properties AimingDirection Which direction does the character attacks public Direction8 AimingDirection { get; set; } Property Value Direction8 AttackChargeStartFrame The start frame of the last attack charging public int? AttackChargeStartFrame { get; } Property Value int? AttackCooldown How many frames should be wait from the prev attack end to the next attack start public int AttackCooldown { get; set; } Property Value int AttackDuration How many frames should be the current attack last public int AttackDuration { get; set; } Property Value int AttackStartFacingRight True if character facing right when the current attack start public bool AttackStartFacingRight { get; set; } Property Value bool AttackStyleIndex Attack style index of the current attack, indicate what kind of rendering style should be apply to the current attack public int AttackStyleIndex { get; set; } Property Value int HoldingAttack True if the character is holding attack button public bool HoldingAttack { get; } Property Value bool IsAttackIgnored True if the character is not allow to attack at the current frame public bool IsAttackIgnored { get; } Property Value bool IsAttacking True if the character is attacking at the current frame public bool IsAttacking { get; } Property Value bool IsChargingAttack True if the character is charging attack at the current frame public bool IsChargingAttack { get; set; } Property Value bool LastAttackCharged True if the last performed attack is charged public bool LastAttackCharged { get; } Property Value bool LastAttackFrame The start frame of the last attack public int LastAttackFrame { get; } Property Value int LockFacingOnAttack True if the character can not change it's facing direction when attacking public bool LockFacingOnAttack { get; set; } Property Value bool MinimalChargeAttackDuration Charge attack longer than this frame should be count as attack charged public int MinimalChargeAttackDuration { get; set; } Property Value int RepeatAttackWhenHolding True if the character can hold attack button to keep attacking multiple times public bool RepeatAttackWhenHolding { get; set; } Property Value bool Methods Attack(bool, bool) Perform an attack public virtual bool Attack(bool facingRight, bool charged = false) Parameters facingRight bool True if the attack is performed when character facing right charged bool True if the attack is charged Returns bool CancelAttack() Cancel current performing attack public void CancelAttack() CancelIgnoreAttack() Allowing attack which ignored by IgnoreAttack function public void CancelIgnoreAttack() IgnoreAimingDirection(Direction8, int) Do not allow aiming at given direction for specified frames public void IgnoreAimingDirection(Direction8 dir, int duration = 1) Parameters dir Direction8 duration int IgnoreAttack(int) Do not allow attack for specified frames public void IgnoreAttack(int duration = 1) Parameters duration int IsAimingDirectionIgnored(Direction8) True if the given aiming direction is currently ignored public bool IsAimingDirectionIgnored(Direction8 dir) Parameters dir Direction8 Returns bool OnActivated() Callback for character entity get activated public virtual void OnActivated() PhysicsUpdate_Attack() Callback for update the attackness public virtual void PhysicsUpdate_Attack()"
  },
  "api/AngeliA.CharacterAttribute.DefaultSelectedPlayerAttribute.html": {
    "href": "api/AngeliA.CharacterAttribute.DefaultSelectedPlayerAttribute.html",
    "title": "Class CharacterAttribute.DefaultSelectedPlayerAttribute | AngeliA",
    "summary": "Class CharacterAttribute.DefaultSelectedPlayerAttribute Namespace AngeliA Assembly AngeliA Framework.dll Make the character as default selected player [AttributeUsage(AttributeTargets.Class)] public class CharacterAttribute.DefaultSelectedPlayerAttribute : Attribute Inheritance object Attribute CharacterAttribute.DefaultSelectedPlayerAttribute Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Constructors DefaultSelectedPlayerAttribute(int) Make the character as default selected player public DefaultSelectedPlayerAttribute(int priority = 0) Parameters priority int"
  },
  "api/AngeliA.CharacterAttribute.html": {
    "href": "api/AngeliA.CharacterAttribute.html",
    "title": "Class CharacterAttribute | AngeliA",
    "summary": "Class CharacterAttribute Namespace AngeliA Assembly AngeliA Framework.dll Attribute for character class public static class CharacterAttribute Inheritance object CharacterAttribute Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString()"
  },
  "api/AngeliA.CharacterBuff.html": {
    "href": "api/AngeliA.CharacterBuff.html",
    "title": "Class CharacterBuff | AngeliA",
    "summary": "Class CharacterBuff Namespace AngeliA Assembly AngeliA Framework.dll Behavour class that handles buff logic for characters public sealed class CharacterBuff Inheritance object CharacterBuff Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Properties BuffCount Total count for all buff the character is having public int BuffCount { get; } Property Value int Methods ClearAllBuffs() Remove all buff from character public void ClearAllBuffs() ClearBuff(int) Remove the given buff from character public void ClearBuff(int id) Parameters id int ForAllBuffs() Iterate thought all buffs this character currently have public IEnumerable<Buff> ForAllBuffs() Returns IEnumerable<Buff> GetBuffData(int) Get the user data of the given buff from the character public object GetBuffData(int id) Parameters id int Returns object GetBuffDescription(int) Get description of the given buff from the language system public static string GetBuffDescription(int id) Parameters id int Returns string GetBuffDisplayName(int) Get display name of the given buff from the language system public static string GetBuffDisplayName(int id) Parameters id int Returns string GetBuffEndFrame(int) Get which frame does the given buff ends public int GetBuffEndFrame(int id) Parameters id int Returns int GiveBuff(int, int) Give the character given buff for specified frames long public void GiveBuff(int id, int duration = -1) Parameters id int duration int HasBuff(int) True if the character is having the given buff public bool HasBuff(int id) Parameters id int Returns bool IsBuffPrevented(int) True if the given buff is being prevented public bool IsBuffPrevented(int id) Parameters id int Returns bool PreventBuff(int, int) Do not allow the character have given buff for specified frames public void PreventBuff(int id, int duration = 1) Parameters id int duration int SetBuffData(int, object) Set user data of the given buff to the character public void SetBuffData(int id, object data) Parameters id int data object"
  },
  "api/AngeliA.CharacterFaceExpression.html": {
    "href": "api/AngeliA.CharacterFaceExpression.html",
    "title": "Enum CharacterFaceExpression | AngeliA",
    "summary": "Enum CharacterFaceExpression Namespace AngeliA Assembly AngeliA Framework.dll public enum CharacterFaceExpression Extension Methods Extension.Next<E>(E) Extension.Prev<E>(E) Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Fields Attack = 5 Blink = 1 Damage = 3 Happy = 7 Normal = 0 PassOut = 4 Sleep = 2 Suffer = 6"
  },
  "api/AngeliA.CharacterHealth.html": {
    "href": "api/AngeliA.CharacterHealth.html",
    "title": "Class CharacterHealth | AngeliA",
    "summary": "Class CharacterHealth Namespace AngeliA Assembly AngeliA Framework.dll Behavour class that handle health logic for character public class CharacterHealth Inheritance object CharacterHealth Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Fields DamageStunDuration How many frames does the character stun when they take damage public readonly FrameBasedInt DamageStunDuration Field Value FrameBasedInt InvincibleDuration How many frames does the character's Invincibility last public readonly FrameBasedInt InvincibleDuration Field Value FrameBasedInt InvincibleOnDash Should character be invincible when dashing public readonly FrameBasedBool InvincibleOnDash Field Value FrameBasedBool InvincibleOnRush Should character be invincible when rushing public readonly FrameBasedBool InvincibleOnRush Field Value FrameBasedBool KnockbackDeceleration Movement deceleration when the character is knocking back after take damage public readonly FrameBasedInt KnockbackDeceleration Field Value FrameBasedInt KnockbackSpeed How fast should the character get knock back when they take damage public readonly FrameBasedInt KnockbackSpeed Field Value FrameBasedInt MaxHP Upper limit of the HP public readonly FrameBasedInt MaxHP Field Value FrameBasedInt Properties HP Current health point of the character public int HP { get; set; } Property Value int InvincibleEndFrame The frame when character's invincibility ends public int InvincibleEndFrame { get; set; } Property Value int IsEmptyHealth True if the character have no health point public bool IsEmptyHealth { get; } Property Value bool IsFullHealth True if the character is full of health public bool IsFullHealth { get; } Property Value bool IsInvincible True if the character is currently invincible public bool IsInvincible { get; } Property Value bool LastDamageFrame The frame when character took damage last time public int LastDamageFrame { get; set; } Property Value int TakingDamage True if the character is currently taking damage public bool TakingDamage { get; } Property Value bool Methods Heal(int) Add given amount of HP for the character public bool Heal(int heal) Parameters heal int Returns bool True when character get healed MakeInvincible(int) Let the character become invincible for given frames public void MakeInvincible(int duration = 1) Parameters duration int OnActivated() Callback when character entity get activated public void OnActivated()"
  },
  "api/AngeliA.CharacterInventoryType.html": {
    "href": "api/AngeliA.CharacterInventoryType.html",
    "title": "Enum CharacterInventoryType | AngeliA",
    "summary": "Enum CharacterInventoryType Namespace AngeliA Assembly AngeliA Framework.dll public enum CharacterInventoryType Extension Methods Extension.Next<E>(E) Extension.Prev<E>(E) Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Fields Map = 2 None = 0 Unique = 1"
  },
  "api/AngeliA.CharacterMovement.html": {
    "href": "api/AngeliA.CharacterMovement.html",
    "title": "Class CharacterMovement | AngeliA",
    "summary": "Class CharacterMovement Namespace AngeliA Assembly AngeliA Framework.dll Behavour class that handle movement logic for character public class CharacterMovement Inheritance object CharacterMovement Derived VehicleMovement Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Constructors CharacterMovement(Rigidbody) Behavour class that handle movement logic for character public CharacterMovement(Rigidbody rig) Parameters rig Rigidbody Fields AllowJumpWhenClimbing Allow character jump when climbing [PropVisibility(\"ClimbAvailable\", CompareMode.Equal)] public readonly FrameBasedBool AllowJumpWhenClimbing Field Value FrameBasedBool AllowSquatJump Allow character jump when squatting, and keep squatting when jump in air [PropVisibility(\"JumpCount\", CompareMode.GreaterThan, 0)] public readonly FrameBasedBool AllowSquatJump Field Value FrameBasedBool ClimbAvailable Allow character to climb [PropGroup(\"Climb\")] public readonly FrameBasedBool ClimbAvailable Field Value FrameBasedBool ClimbSpeedX Horizontal speed when climbing [PropVisibility(\"ClimbAvailable\", CompareMode.Equal)] public readonly FrameBasedInt ClimbSpeedX Field Value FrameBasedInt ClimbSpeedY Vertical speed when climbing [PropVisibility(\"ClimbAvailable\", CompareMode.Equal)] public readonly FrameBasedInt ClimbSpeedY Field Value FrameBasedInt CrashAvailable Allow character crash [PropGroup(\"Crash\")] public readonly FrameBasedBool CrashAvailable Field Value FrameBasedBool CrashDeceleration Speed deceleration when character crashing [PropVisibility(\"CrashAvailable\", CompareMode.Equal)] public readonly FrameBasedInt CrashDeceleration Field Value FrameBasedInt CrashDuration How many frames does it takes for one crash [PropVisibility(\"CrashAvailable\", CompareMode.Equal)] public readonly FrameBasedInt CrashDuration Field Value FrameBasedInt CrashRunDurationRequire How many frames does it takes to make character crash [PropVisibility(\"CrashAvailable\", CompareMode.And, \"CrashWhenSlippy\")] public readonly FrameBasedInt CrashRunDurationRequire Field Value FrameBasedInt CrashWhenSlippy Make character crash when running too long on slippery ground or rush on slippery ground [PropVisibility(\"CrashAvailable\", CompareMode.Equal)] public readonly FrameBasedBool CrashWhenSlippy Field Value FrameBasedBool DashAcceleration Speed acceleration when dashing [PropVisibility(\"DashAvailable\", CompareMode.Equal)] public readonly FrameBasedInt DashAcceleration Field Value FrameBasedInt DashAvailable Allow character to dash (player hold down button and press jump button for once) [PropGroup(\"Dash\")] public readonly FrameBasedBool DashAvailable Field Value FrameBasedBool DashCancelLoseRate Speed multiply this rate when dash being cancel (0 means 0%, 1000 means 100%) [PropVisibility(\"DashAvailable\", CompareMode.Equal)] public readonly FrameBasedInt DashCancelLoseRate Field Value FrameBasedInt DashCooldown Frames length between prev dash end and next dash start [PropVisibility(\"DashAvailable\", CompareMode.Equal)] public readonly FrameBasedInt DashCooldown Field Value FrameBasedInt DashDuration How many frames does dash last [PropVisibility(\"DashAvailable\", CompareMode.Equal)] public readonly FrameBasedInt DashDuration Field Value FrameBasedInt DashHeightAmount Character hitbox height multiply this rate when dashing (0 means 0%, 1000 means 100%) [PropVisibility(\"DashAvailable\", CompareMode.Equal)] public readonly FrameBasedInt DashHeightAmount Field Value FrameBasedInt DashPutoutFire Allow character dash through fire to put it out [PropVisibility(\"DashAvailable\", CompareMode.Equal)] public readonly FrameBasedBool DashPutoutFire Field Value FrameBasedBool DashSpeed Movement speed for dashing [PropVisibility(\"DashAvailable\", CompareMode.Equal)] public readonly FrameBasedInt DashSpeed Field Value FrameBasedInt DashWithRoll Character roll when dashing [PropVisibility(\"DashAvailable\", CompareMode.Equal)] public readonly FrameBasedBool DashWithRoll Field Value FrameBasedBool FirstJumpWithRoll When character jump from ground, does it jump with rolling in air [PropVisibility(\"JumpCount\", CompareMode.GreaterThan, 0)] public readonly FrameBasedBool FirstJumpWithRoll Field Value FrameBasedBool FlyAcceleration Speed acceleration when flying [PropVisibility(\"FlyAvailable\", CompareMode.Equal)] public readonly FrameBasedInt FlyAcceleration Field Value FrameBasedInt FlyAvailable Allow character to fly (player press jump button when no jump count left) [PropGroup(\"Fly\")] public readonly FrameBasedBool FlyAvailable Field Value FrameBasedBool FlyCooldown Character has to wait this many frames to fly again [PropVisibility(\"FlyAvailable\", CompareMode.Equal)] public readonly FrameBasedInt FlyCooldown Field Value FrameBasedInt FlyDeceleration Speed deceleration when flying [PropVisibility(\"FlyAvailable\", CompareMode.Equal)] public readonly FrameBasedInt FlyDeceleration Field Value FrameBasedInt FlyFallSpeed Fall down speed shen flying [PropVisibility(\"FlyAvailable\", CompareMode.Equal)] public readonly FrameBasedInt FlyFallSpeed Field Value FrameBasedInt FlyGravityFallRate Gravity multiply this rate when flying and moving down (0 means 0%, 1000 means 100%) [PropVisibility(\"FlyAvailable\", CompareMode.Equal)] public readonly FrameBasedInt FlyGravityFallRate Field Value FrameBasedInt FlyGravityRiseRate Gravity multiply this rate when flying and moving up (0 means 0%, 1000 means 100%) [PropVisibility(\"FlyAvailable\", CompareMode.Equal)] public readonly FrameBasedInt FlyGravityRiseRate Field Value FrameBasedInt FlyHeightAmount Character hitbox height multiply this rate when flying (0 means 0%, 1000 means 100%) [PropVisibility(\"FlyAvailable\", CompareMode.Equal)] public readonly FrameBasedInt FlyHeightAmount Field Value FrameBasedInt FlyMoveSpeed Horizontal move speed when flying [PropVisibility(\"FlyAvailable\", CompareMode.Equal)] public readonly FrameBasedInt FlyMoveSpeed Field Value FrameBasedInt FlyRiseSpeed Initial speed when fly start [PropVisibility(\"FlyAvailable\", CompareMode.Equal)] public readonly FrameBasedInt FlyRiseSpeed Field Value FrameBasedInt GlideOnFlying When glide flying, character always move to the direction it facing [PropVisibility(\"FlyAvailable\", CompareMode.Equal)] public readonly FrameBasedBool GlideOnFlying Field Value FrameBasedBool GrabFlipThroughDownAvailable Allow character to flip through block downward (player press down when standing on top-grabable blocks) [PropVisibility(\"GrabTopAvailable\", CompareMode.Equal)] public readonly FrameBasedBool GrabFlipThroughDownAvailable Field Value FrameBasedBool GrabFlipThroughDuration How long does flip through takes in frames [PropVisibility(\"GrabTopAvailable\", CompareMode.Equal)] public readonly FrameBasedInt GrabFlipThroughDuration Field Value FrameBasedInt GrabFlipThroughUpAvailable Allow character to flip through block upward (player press up when top-grabbing) [PropVisibility(\"GrabTopAvailable\", CompareMode.Equal)] public readonly FrameBasedBool GrabFlipThroughUpAvailable Field Value FrameBasedBool GrabMoveSpeedX Horizontal move speed when top-grabbing [PropVisibility(\"GrabTopAvailable\", CompareMode.Equal)] public readonly FrameBasedInt GrabMoveSpeedX Field Value FrameBasedInt GrabMoveSpeedY Vertical move speed when side-grabbing [PropVisibility(\"GrabSideAvailable\", CompareMode.Equal)] public readonly FrameBasedInt GrabMoveSpeedY Field Value FrameBasedInt GrabSideAvailable Allow character grab on the side of blocks with Tag.GrabSide public readonly FrameBasedBool GrabSideAvailable Field Value FrameBasedBool GrabSideHeightAmount Character hitbox height multiply this rate when side-grabbing (0 means 0%, 1000 means 100%) [PropVisibility(\"GrabSideAvailable\", CompareMode.Equal)] public readonly FrameBasedInt GrabSideHeightAmount Field Value FrameBasedInt GrabSideJumpKickSpeed Horizontal initial speed when character jump when side-grabbing [PropVisibility(\"GrabSideAvailable\", CompareMode.Equal)] public readonly FrameBasedInt GrabSideJumpKickSpeed Field Value FrameBasedInt GrabTopAvailable Allow character grab on the bottom of blocks with Tag.GrabTop [PropGroup(\"Grab\")] public readonly FrameBasedBool GrabTopAvailable Field Value FrameBasedBool GrabTopHeightAmount Character hitbox height multiply this rate when top-grabbing (0 means 0%, 1000 means 100%) [PropVisibility(\"GrabTopAvailable\", CompareMode.Equal)] public readonly FrameBasedInt GrabTopHeightAmount Field Value FrameBasedInt InWaterSpeedRate When character inside water, the movement speed will multiply this rate (0 means 0%, 1000 means 100%) public readonly FrameBasedInt InWaterSpeedRate Field Value FrameBasedInt JumpBoostFromMoveRate When character start jump, if it's moving, the running speed will multiply this rate and add into the initial jump speed. (0 means 0%, 1000 means 100%) [PropVisibility(\"JumpCount\", CompareMode.GreaterThan, 0)] public readonly FrameBasedInt JumpBoostFromMoveRate Field Value FrameBasedInt JumpBreakDash Allow character jump when dashing and stop the dash [PropVisibility(\"JumpCount\", CompareMode.GreaterThan, 0)] public readonly FrameBasedBool JumpBreakDash Field Value FrameBasedBool JumpBreakRush Allow character jump when rushing and stop the rush [PropVisibility(\"JumpCount\", CompareMode.GreaterThan, 0)] public readonly FrameBasedBool JumpBreakRush Field Value FrameBasedBool JumpCount How many times can the character jump without touching ground [PropGroup(\"Jump\")] public readonly FrameBasedInt JumpCount Field Value FrameBasedInt JumpDownThroughOneway Allow character jump down and go through oneway gate (player holding down button and press jump button once) public readonly FrameBasedBool JumpDownThroughOneway Field Value FrameBasedBool JumpReleaseSpeedRate When character stop trying to jump (player release the jump button), and the character is still moving up, then the current speed will be multiply to this rate (0 means 0%, 1000 means 100%) [PropVisibility(\"JumpCount\", CompareMode.GreaterThan, 0)] public readonly FrameBasedInt JumpReleaseSpeedRate Field Value FrameBasedInt JumpRiseGravityRate Gravity applys on the character will multiply this rate when character moving up in air (0 means 0%, 1000 means 100%) [PropVisibility(\"JumpCount\", CompareMode.GreaterThan, 0)] public readonly FrameBasedInt JumpRiseGravityRate Field Value FrameBasedInt JumpSpeed Initial speed when character start to jump [PropVisibility(\"JumpCount\", CompareMode.GreaterThan, 0)] public readonly FrameBasedInt JumpSpeed Field Value FrameBasedInt MovementHeight Default height of the character public readonly FrameBasedInt MovementHeight Field Value FrameBasedInt MovementWidth Default with of the character [PropGroup(\"Size\")] public readonly FrameBasedInt MovementWidth Field Value FrameBasedInt PoundAvailable Allow character ground pound in air (player press down button in air) [PropGroup(\"Pound\")] public readonly FrameBasedBool PoundAvailable Field Value FrameBasedBool PoundPutoutFire Allow character pound on fire to put it out [PropVisibility(\"PoundAvailable\", CompareMode.Equal)] public readonly FrameBasedBool PoundPutoutFire Field Value FrameBasedBool PoundSpeed Movement speed when pounding [PropVisibility(\"PoundAvailable\", CompareMode.Equal)] public readonly FrameBasedInt PoundSpeed Field Value FrameBasedInt PushAvailable Allow character push other rigidbody [PropGroup(\"Push\")] public readonly FrameBasedBool PushAvailable Field Value FrameBasedBool PushSpeed Movement speed when character pushing [PropVisibility(\"PushAvailable\", CompareMode.Equal)] public readonly FrameBasedInt PushSpeed Field Value FrameBasedInt ResetJumpCountWhenGrab Set jump count to 0 when character grabbing [PropVisibility(\"GrabTopAvailable\", CompareMode.Or, \"GrabSideAvailable\")] public readonly FrameBasedBool ResetJumpCountWhenGrab Field Value FrameBasedBool ResetJumpCountWhenSlide Set jump count to 0 when slide [PropVisibility(\"SlideAvailable\", CompareMode.Equal)] public readonly FrameBasedBool ResetJumpCountWhenSlide Field Value FrameBasedBool RunAcceleration Speed acceleration when character is running [PropVisibility(\"RunAvailable\", CompareMode.Equal)] public readonly FrameBasedInt RunAcceleration Field Value FrameBasedInt RunAvailable Allow character to run [PropGroup(\"Run\")] public readonly FrameBasedBool RunAvailable Field Value FrameBasedBool RunBrakeAcceleration Speed acceleration when character is trying to run to the opposite direction [PropVisibility(\"RunAvailable\", CompareMode.Equal)] public readonly FrameBasedInt RunBrakeAcceleration Field Value FrameBasedInt RunDeceleration Speed deceleration when character is running [PropVisibility(\"RunAvailable\", CompareMode.Equal)] public readonly FrameBasedInt RunDeceleration Field Value FrameBasedInt RunSpeed How fast should the character run [PropVisibility(\"RunAvailable\", CompareMode.Equal)] public readonly FrameBasedInt RunSpeed Field Value FrameBasedInt RushAcceleration Speed acceleration when rushing [PropVisibility(\"RushAvailable\", CompareMode.Equal)] public readonly FrameBasedInt RushAcceleration Field Value FrameBasedInt RushAvailable Allow character to rush [PropGroup(\"Rush\")] public readonly FrameBasedBool RushAvailable Field Value FrameBasedBool RushCooldown How many frames does character has to wair after prev rush end to rush again [PropVisibility(\"RushAvailable\", CompareMode.Equal)] public readonly FrameBasedInt RushCooldown Field Value FrameBasedInt RushDeceleration Speed deceleration when rushing [PropVisibility(\"RushAvailable\", CompareMode.Equal)] public readonly FrameBasedInt RushDeceleration Field Value FrameBasedInt RushDuration How many frames does rush last [PropVisibility(\"RushAvailable\", CompareMode.Equal)] public readonly FrameBasedInt RushDuration Field Value FrameBasedInt RushHeightAmount Character hitbox height multiply this rate when rushing (0 means 0%, 1000 means 100%) [PropVisibility(\"RushAvailable\", CompareMode.Equal)] public readonly FrameBasedInt RushHeightAmount Field Value FrameBasedInt RushInAir Allow character rush when not grounded [PropVisibility(\"RushAvailable\", CompareMode.Equal)] public readonly FrameBasedBool RushInAir Field Value FrameBasedBool RushInWater Allow character rush when inside water [PropVisibility(\"RushAvailable\", CompareMode.Equal)] public readonly FrameBasedBool RushInWater Field Value FrameBasedBool RushPutoutFire Allow character rush through fire to put it out [PropVisibility(\"RushAvailable\", CompareMode.Equal)] public readonly FrameBasedBool RushPutoutFire Field Value FrameBasedBool RushSpeed Movement speed when rushing [PropVisibility(\"RushAvailable\", CompareMode.Equal)] public readonly FrameBasedInt RushSpeed Field Value FrameBasedInt RushStiff How many frames does character not allow to move after rush end [PropVisibility(\"RushAvailable\", CompareMode.Equal)] public readonly FrameBasedInt RushStiff Field Value FrameBasedInt RushStopSpeed Movement speed when rush end [PropVisibility(\"RushAvailable\", CompareMode.Equal)] public readonly FrameBasedInt RushStopSpeed Field Value FrameBasedInt RushWhenClimb character rush when climb [PropVisibility(\"RushAvailable\", CompareMode.Equal)] public readonly FrameBasedBool RushWhenClimb Field Value FrameBasedBool RushWhenSquat character rush when squat [PropVisibility(\"RushAvailable\", CompareMode.Equal)] public readonly FrameBasedBool RushWhenSquat Field Value FrameBasedBool SlideAvailable Allow character to slide on wall [PropGroup(\"Slide\")] public readonly FrameBasedBool SlideAvailable Field Value FrameBasedBool SlideDropSpeed Drop down speed when sliding [PropVisibility(\"SlideAvailable\", CompareMode.Equal)] public readonly FrameBasedInt SlideDropSpeed Field Value FrameBasedInt SlideJumpKickSpeed Horizontal initial speed when character jump when slide [PropVisibility(\"SlideAvailable\", CompareMode.Equal)] public readonly FrameBasedInt SlideJumpKickSpeed Field Value FrameBasedInt SlideOnAnyBlock Allow character to slide on all type of blocks [PropVisibility(\"SlideAvailable\", CompareMode.Equal)] public readonly FrameBasedBool SlideOnAnyBlock Field Value FrameBasedBool SlipAcceleration Speed acceleration when moving on slippery ground [PropVisibility(\"SlipAvailable\", CompareMode.Equal)] public readonly FrameBasedInt SlipAcceleration Field Value FrameBasedInt SlipAvailable Allow character slip when run on slippery ground [PropGroup(\"Slip\")] public readonly FrameBasedBool SlipAvailable Field Value FrameBasedBool SlipDeceleration Speed deceleration when moving on slippery ground [PropVisibility(\"SlipAvailable\", CompareMode.Equal)] public readonly FrameBasedInt SlipDeceleration Field Value FrameBasedInt SquatAcceleration Movement acceleration when squat moving [PropVisibility(\"SquatAvailable\", CompareMode.Equal)] public readonly FrameBasedInt SquatAcceleration Field Value FrameBasedInt SquatAvailable Allow character to squat [PropGroup(\"Squat\")] public readonly FrameBasedBool SquatAvailable Field Value FrameBasedBool SquatDeceleration Movement deceleration when squat moving [PropVisibility(\"SquatAvailable\", CompareMode.Equal)] public readonly FrameBasedInt SquatDeceleration Field Value FrameBasedInt SquatHeightAmount Character hitbox height multiply this rate when squatting (0 means 0%, 1000 means 100%) [PropVisibility(\"SquatAvailable\", CompareMode.Equal)] public readonly FrameBasedInt SquatHeightAmount Field Value FrameBasedInt SquatMoveSpeed Move speed when character squatting, set to 0 when not allow squat move [PropVisibility(\"SquatAvailable\", CompareMode.Equal)] public readonly FrameBasedInt SquatMoveSpeed Field Value FrameBasedInt SubsequentJumpWithRoll When character jump from air, does it jump with rolling in air [PropVisibility(\"JumpCount\", CompareMode.GreaterThan, 1)] public readonly FrameBasedBool SubsequentJumpWithRoll Field Value FrameBasedBool SwimAcceleration Speed acceleration when chracter inside water [PropVisibility(\"SwimAvailable\", CompareMode.Equal)] public readonly FrameBasedInt SwimAcceleration Field Value FrameBasedInt SwimAvailable Allow character swim in water [PropGroup(\"Swim\")] public readonly FrameBasedBool SwimAvailable Field Value FrameBasedBool SwimDeceleration Speed deceleration when chracter inside water [PropVisibility(\"SwimAvailable\", CompareMode.Equal)] public readonly FrameBasedInt SwimDeceleration Field Value FrameBasedInt SwimHeightAmount Character hitbox height multiply this rate when swimming (0 means 0%, 1000 means 100%) [PropVisibility(\"SwimAvailable\", CompareMode.Equal)] public readonly FrameBasedInt SwimHeightAmount Field Value FrameBasedInt SwimJumpSpeed Movement speed when character jump inside water [PropVisibility(\"SwimAvailable\", CompareMode.Equal)] public readonly FrameBasedInt SwimJumpSpeed Field Value FrameBasedInt SwimSpeed Movement speed when character swimming [PropVisibility(\"SwimAvailable\", CompareMode.Equal)] public readonly FrameBasedInt SwimSpeed Field Value FrameBasedInt SwimWidthAmount Character hitbox width multiply this rate when swimming (0 means 0%, 1000 means 100%) [PropVisibility(\"SwimAvailable\", CompareMode.Equal)] public readonly FrameBasedInt SwimWidthAmount Field Value FrameBasedInt Target public readonly Rigidbody Target Field Value Rigidbody TargetCharacter public readonly Character TargetCharacter Field Value Character WalkAcceleration Speed acceleration when character is walking [PropVisibility(\"WalkAvailable\", CompareMode.Equal)] public readonly FrameBasedInt WalkAcceleration Field Value FrameBasedInt WalkAvailable Allow character to walk [PropGroup(\"Walk\")] public readonly FrameBasedBool WalkAvailable Field Value FrameBasedBool WalkBrakeAcceleration Speed acceleration when character is trying to walk to the opposite direction [PropVisibility(\"WalkAvailable\", CompareMode.Equal)] public readonly FrameBasedInt WalkBrakeAcceleration Field Value FrameBasedInt WalkDeceleration Speed deceleration when character is walking [PropVisibility(\"WalkAvailable\", CompareMode.Equal)] public readonly FrameBasedInt WalkDeceleration Field Value FrameBasedInt WalkSpeed How fast should the character walk [PropVisibility(\"WalkAvailable\", CompareMode.Equal)] public readonly FrameBasedInt WalkSpeed Field Value FrameBasedInt Properties CollisionMask protected int CollisionMask { get; } Property Value int CurrentJumpCount How many times does character jumps after touching ground public int CurrentJumpCount { get; set; } Property Value int FacingFront True if character currently facing front public bool FacingFront { get; set; } Property Value bool FacingRight True if character currently facing right public bool FacingRight { get; set; } Property Value bool Height protected int Height { get; set; } Property Value int InWater protected bool InWater { get; } Property Value bool IntendedX 1 if character want to move right, -1 for left public int IntendedX { get; } Property Value int IntendedY 1 if character want to move up, -1 for down public int IntendedY { get; } Property Value int IsClimbing True if character is climbing public bool IsClimbing { get; } Property Value bool IsCrashing True if character is crashing public bool IsCrashing { get; } Property Value bool IsDashing True if character is dashing public bool IsDashing { get; } Property Value bool IsFlying True if character is flying public bool IsFlying { get; } Property Value bool IsGrabFlipping True if character flipping through blocks public bool IsGrabFlipping { get; } Property Value bool IsGrabFlippingDown True if character flipping through blocks downward public bool IsGrabFlippingDown { get; } Property Value bool IsGrabFlippingUp True if character flipping through blocks upward public bool IsGrabFlippingUp { get; } Property Value bool IsGrabbingSide True if character is side-grabbing public bool IsGrabbingSide { get; } Property Value bool IsGrabbingTop True if character is top-grabbing public bool IsGrabbingTop { get; } Property Value bool IsGrounded protected bool IsGrounded { get; } Property Value bool IsInsideGround protected bool IsInsideGround { get; } Property Value bool IsMoving True if character is moving public bool IsMoving { get; } Property Value bool IsPounding True if character is pounding public bool IsPounding { get; } Property Value bool IsRolling True if character is rolling public bool IsRolling { get; } Property Value bool IsRunning True if character is running public bool IsRunning { get; } Property Value bool IsRushing True if character is rushing public bool IsRushing { get; } Property Value bool IsSliding True if character is sliding on wall public bool IsSliding { get; } Property Value bool IsSquatting True if character is squatting public bool IsSquatting { get; } Property Value bool IsWalking True if character is walking public bool IsWalking { get; } Property Value bool LastClimbFrame Last frame when character climb public int LastClimbFrame { get; } Property Value int LastCrashFrame Last frame when character crash public int LastCrashFrame { get; } Property Value int LastDashFrame Last frame when character start to dash public int LastDashFrame { get; } Property Value int LastEndMoveFrame Last frame when character moving ends public int LastEndMoveFrame { get; } Property Value int LastFacingChangeFrame Last frame when character change horizontal facing public int LastFacingChangeFrame { get; } Property Value int LastFlyFrame Last frame when character start to fly public int LastFlyFrame { get; } Property Value int LastGrabCancelFrame Last frame when character stop grabbing public int LastGrabCancelFrame { get; } Property Value int LastGrabFlipDownFrame Last frame when character start to grab flip downward public int LastGrabFlipDownFrame { get; } Property Value int LastGrabFlipUpFrame Last frame when character start to grab flip upward public int LastGrabFlipUpFrame { get; } Property Value int LastGrabbingFrame Last frame when character is grabbing public int LastGrabbingFrame { get; } Property Value int LastGroundFrame Last frame when character start touching ground public int LastGroundFrame { get; } Property Value int LastGroundingFrame Last frame when character is touching ground public int LastGroundingFrame { get; } Property Value int LastJumpFrame Last frame when character start to jump public int LastJumpFrame { get; } Property Value int LastMoveDirection Direction for last movement public Int2 LastMoveDirection { get; } Property Value Int2 LastPoundingFrame Last frame when character is pounding public int LastPoundingFrame { get; } Property Value int LastRushStartFrame Last frame when character start to rush public int LastRushStartFrame { get; } Property Value int LastSlidingFrame Last frame when character is sliding on wall public int LastSlidingFrame { get; } Property Value int LastSlippyMoveStartFrame Last frame when character start to move on slippery ground public int LastSlippyMoveStartFrame { get; } Property Value int LastSquatStartFrame Last frame when character start to squat public int LastSquatStartFrame { get; } Property Value int LastSquattingFrame Last frame when character is squatting public int LastSquattingFrame { get; } Property Value int LastStartMoveFrame Last frame when character start to move public int LastStartMoveFrame { get; } Property Value int LastStartRunFrame Last frame when character start to run public int LastStartRunFrame { get; } Property Value int MovementState Current movement type public CharacterMovementState MovementState { get; set; } Property Value CharacterMovementState OffsetX protected int OffsetX { get; set; } Property Value int OffsetY protected int OffsetY { get; set; } Property Value int Rect protected IRect Rect { get; } Property Value IRect ShouldRun True if character want to run instead of walk when move public bool ShouldRun { get; } Property Value bool SyncFromConfigFile Does movement config sync with json file in game universe folder public virtual bool SyncFromConfigFile { get; } Property Value bool VelocityX protected int VelocityX { get; set; } Property Value int VelocityY protected int VelocityY { get; set; } Property Value int Width protected int Width { get; set; } Property Value int X protected int X { get; set; } Property Value int Y protected int Y { get; set; } Property Value int Methods CalculateMovementState(CharacterMovement) Get current movement type base on current cached data public static CharacterMovementState CalculateMovementState(CharacterMovement movement) Parameters movement CharacterMovement Returns CharacterMovementState Crash() Perform crash (call this once when crash start) public virtual void Crash() Dash() Perform dash (call this once when dash start) public virtual void Dash() GetMovementState() Get current movement type base on current cached data protected virtual CharacterMovementState GetMovementState() Returns CharacterMovementState HoldJump(bool) Is character holding jump (call this every frame no matter character is jumpping or not) public virtual void HoldJump(bool holding) Parameters holding bool Jump(bool) Perform jump (call this once when jump start) public virtual void Jump(bool isSquatJump = false) Parameters isSquatJump bool Is this jump a squat jump or not LockFacingRight(bool, int) Force character facing right or left for given frames public void LockFacingRight(bool facingRight, int duration = 1) Parameters facingRight bool duration int LockSquat(int) Force character to squat for given frames public void LockSquat(int duration = 1) Parameters duration int Move(Direction3, Direction3, bool) Move the character public virtual void Move(Direction3 x, Direction3 y, bool walk = false) Parameters x Direction3 y Direction3 walk bool True if character want to walk instead of run MoveLogic(int, int, bool) protected void MoveLogic(int x, int y, bool walk = false) Parameters x int y int walk bool OnActivated() public virtual void OnActivated() PhysicsUpdateGamePlay() public virtual void PhysicsUpdateGamePlay() Pound() Perform pound (call this once when pound start) public virtual void Pound() ReloadMovementConfigFromFile() Load movement data from json file inside game universe folder public void ReloadMovementConfigFromFile() Rush() Perform rush (call this once when rush start) public virtual void Rush() SetSpeedRate(int, int) Force movement speed rate for given frames public void SetSpeedRate(int newRate, int duration = 1) Parameters newRate int 0 means 0%, 1000 means 100% duration int Stop() Stop current movement public virtual void Stop() StopCrash() Stop current crash public void StopCrash() StopDash() Stop current dashing public void StopDash() StopRush() Stop current rush public void StopRush() UpdateLater() public virtual void UpdateLater()"
  },
  "api/AngeliA.CharacterMovementState.html": {
    "href": "api/AngeliA.CharacterMovementState.html",
    "title": "Enum CharacterMovementState | AngeliA",
    "summary": "Enum CharacterMovementState Namespace AngeliA Assembly AngeliA Framework.dll public enum CharacterMovementState Extension Methods Extension.Next<E>(E) Extension.Prev<E>(E) Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Fields Climb = 13 Crash = 11 Dash = 9 Fly = 14 GrabFlip = 18 GrabSide = 17 GrabTop = 16 Idle = 0 JumpDown = 4 JumpUp = 3 Pound = 12 Run = 2 Rush = 10 Slide = 15 SquatIdle = 7 SquatMove = 8 SwimIdle = 5 SwimMove = 6 Walk = 1"
  },
  "api/AngeliA.CharacterPose.html": {
    "href": "api/AngeliA.CharacterPose.html",
    "title": "Class CharacterPose | AngeliA",
    "summary": "Class CharacterPose Namespace AngeliA Assembly AngeliA Framework.dll public class CharacterPose Inheritance object CharacterPose Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Constructors CharacterPose() public CharacterPose() Fields BodyTwist public int BodyTwist Field Value int HandGrabAttackTwistL public int HandGrabAttackTwistL Field Value int HandGrabAttackTwistR public int HandGrabAttackTwistR Field Value int HandGrabRotationL public int HandGrabRotationL Field Value int HandGrabRotationR public int HandGrabRotationR Field Value int HandGrabScaleL public int HandGrabScaleL Field Value int HandGrabScaleR public int HandGrabScaleR Field Value int HeadTwist public int HeadTwist Field Value int PoseRootX public int PoseRootX Field Value int PoseRootY public int PoseRootY Field Value int Properties Body public BodyPart Body { get; init; } Property Value BodyPart FootL public BodyPart FootL { get; init; } Property Value BodyPart FootR public BodyPart FootR { get; init; } Property Value BodyPart HandL public BodyPart HandL { get; init; } Property Value BodyPart HandR public BodyPart HandR { get; init; } Property Value BodyPart Head public BodyPart Head { get; init; } Property Value BodyPart Hip public BodyPart Hip { get; init; } Property Value BodyPart LowerArmL public BodyPart LowerArmL { get; init; } Property Value BodyPart LowerArmR public BodyPart LowerArmR { get; init; } Property Value BodyPart LowerLegL public BodyPart LowerLegL { get; init; } Property Value BodyPart LowerLegR public BodyPart LowerLegR { get; init; } Property Value BodyPart ShoulderL public BodyPart ShoulderL { get; init; } Property Value BodyPart ShoulderR public BodyPart ShoulderR { get; init; } Property Value BodyPart UpperArmL public BodyPart UpperArmL { get; init; } Property Value BodyPart UpperArmR public BodyPart UpperArmR { get; init; } Property Value BodyPart UpperLegL public BodyPart UpperLegL { get; init; } Property Value BodyPart UpperLegR public BodyPart UpperLegR { get; init; } Property Value BodyPart Methods ApplyToCharacter(PoseCharacterRenderer) public void ApplyToCharacter(PoseCharacterRenderer rendering) Parameters rendering PoseCharacterRenderer BlendToCharacter(PoseCharacterRenderer, float) public void BlendToCharacter(PoseCharacterRenderer rendering, float blend01) Parameters rendering PoseCharacterRenderer blend01 float RecordFromCharacter(PoseCharacterRenderer) public void RecordFromCharacter(PoseCharacterRenderer rendering) Parameters rendering PoseCharacterRenderer"
  },
  "api/AngeliA.CharacterRenderer.html": {
    "href": "api/AngeliA.CharacterRenderer.html",
    "title": "Class CharacterRenderer | AngeliA",
    "summary": "Class CharacterRenderer Namespace AngeliA Assembly AngeliA Framework.dll Behaviour class handles rendering of character public abstract class CharacterRenderer Inheritance object CharacterRenderer Derived PoseCharacterRenderer SheetCharacterRenderer Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Constructors CharacterRenderer(Character) Behaviour class handles rendering of character protected CharacterRenderer(Character target) Parameters target Character Fields TargetCharacter public readonly Character TargetCharacter Field Value Character Properties CurrentAnimationFrame public int CurrentAnimationFrame { get; set; } Property Value int CurrentRenderingBounce public int CurrentRenderingBounce { get; } Property Value int Scale Final size scaling (0 means 0%, 1000 means 100%) public FrameBasedInt Scale { get; set; } Property Value FrameBasedInt SpinOnGroundPound Does character spin when ground pound public bool SpinOnGroundPound { get; set; } Property Value bool Tint Final color tint public FrameBasedColor Tint { get; set; } Property Value FrameBasedColor Methods BeforeUpdate() public virtual void BeforeUpdate() LateUpdate() public virtual void LateUpdate() OnActivated() Callback function for character entity get activated public virtual void OnActivated()"
  },
  "api/AngeliA.CharacterRenderingConfig.html": {
    "href": "api/AngeliA.CharacterRenderingConfig.html",
    "title": "Class CharacterRenderingConfig | AngeliA",
    "summary": "Class CharacterRenderingConfig Namespace AngeliA Assembly AngeliA Framework.dll public class CharacterRenderingConfig Inheritance object CharacterRenderingConfig Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Fields Body public int Body Field Value int CharacterHeight public int CharacterHeight Field Value int Ear public int Ear Field Value int Face public int Face Field Value int Foot public int Foot Field Value int Hair public int Hair Field Value int Hand public int Hand Field Value int Head public int Head Field Value int Hip public int Hip Field Value int Horn public int Horn Field Value int LowerArm public int LowerArm Field Value int LowerLeg public int LowerLeg Field Value int Shoulder public int Shoulder Field Value int SuitBody public int SuitBody Field Value int SuitFoot public int SuitFoot Field Value int SuitHand public int SuitHand Field Value int SuitHead public int SuitHead Field Value int SuitHip public int SuitHip Field Value int Tail public int Tail Field Value int UpperArm public int UpperArm Field Value int UpperLeg public int UpperLeg Field Value int Wing public int Wing Field Value int Methods AllBodyPartIsDefault() public bool AllBodyPartIsDefault() Returns bool GetBodyPartID(int) public int GetBodyPartID(int index) Parameters index int Returns int LoadFromSheet(Type, bool, bool, bool) public void LoadFromSheet(Type characterType, bool ignoreBodyPart = false, bool ignoreBodyGadget = false, bool ignoreCloth = false) Parameters characterType Type ignoreBodyPart bool ignoreBodyGadget bool ignoreCloth bool LoadToCharacter(PoseCharacterRenderer) public void LoadToCharacter(PoseCharacterRenderer renderer) Parameters renderer PoseCharacterRenderer"
  },
  "api/AngeliA.CharacterState.html": {
    "href": "api/AngeliA.CharacterState.html",
    "title": "Enum CharacterState | AngeliA",
    "summary": "Enum CharacterState Namespace AngeliA Assembly AngeliA Framework.dll public enum CharacterState Extension Methods Extension.Next<E>(E) Extension.Prev<E>(E) Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Fields GamePlay = 0 PassOut = 2 Sleep = 1"
  },
  "api/AngeliA.CheatCodeAttribute.html": {
    "href": "api/AngeliA.CheatCodeAttribute.html",
    "title": "Class CheatCodeAttribute | AngeliA",
    "summary": "Class CheatCodeAttribute Namespace AngeliA Assembly AngeliA Framework.dll The function will be called when user perform the given cheat code. Cheat code can be perform like those in NES games. public class CheatCodeAttribute : EventAttribute Inheritance object Attribute OrderedAttribute EventAttribute CheatCodeAttribute Inherited Members OrderedAttribute.InvokeAsAutoOrderingTask<A>() Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Examples internal static void ExampleFunction (string code) { } Constructors CheatCodeAttribute(string) The function will be called when user perform the given cheat code. Cheat code can be perform like those in NES games. public CheatCodeAttribute(string code) Parameters code string Examples internal static void ExampleFunction (string code) { }"
  },
  "api/AngeliA.CheatSystem.html": {
    "href": "api/AngeliA.CheatSystem.html",
    "title": "Class CheatSystem | AngeliA",
    "summary": "Class CheatSystem Namespace AngeliA Assembly AngeliA Framework.dll public static class CheatSystem Inheritance object CheatSystem Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties CheatCodeCount public static int CheatCodeCount { get; } Property Value int CurrentParam public static object CurrentParam { get; } Property Value object Methods ForAllCheatCodes() public static IEnumerable<string> ForAllCheatCodes() Returns IEnumerable<string> GetCodeAt(int) public static string GetCodeAt(int index) Parameters index int Returns string SetCheatCodeEnable(string, bool) public static void SetCheatCodeEnable(string code, bool enable) Parameters code string enable bool TryAddCheatAction(string, MethodInfo, object) public static bool TryAddCheatAction(string code, MethodInfo method, object param = null) Parameters code string method MethodInfo param object Returns bool"
  },
  "api/AngeliA.CircuitOperate_Int3UnitPos_IntStamp_Direction5From.html": {
    "href": "api/AngeliA.CircuitOperate_Int3UnitPos_IntStamp_Direction5From.html",
    "title": "Class CircuitOperate_Int3UnitPos_IntStamp_Direction5From | AngeliA",
    "summary": "Class CircuitOperate_Int3UnitPos_IntStamp_Direction5From Namespace AngeliA Assembly AngeliA Framework.dll The function will be called when CircuitSystem triggers the entity that holds this function [AttributeUsage(AttributeTargets.Method, AllowMultiple = false)] public class CircuitOperate_Int3UnitPos_IntStamp_Direction5From : Attribute Inheritance object Attribute CircuitOperate_Int3UnitPos_IntStamp_Direction5From Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Examples internal static void ExampleFunction (Int3 unitPos, int stamp, Direction5 from) { }"
  },
  "api/AngeliA.CircuitSystem.html": {
    "href": "api/AngeliA.CircuitSystem.html",
    "title": "Class CircuitSystem | AngeliA",
    "summary": "Class CircuitSystem Namespace AngeliA Assembly AngeliA Framework.dll public static class CircuitSystem Inheritance object CircuitSystem Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods BitInt_to_WireConnection(int, out bool, out bool, out bool, out bool) public static void BitInt_to_WireConnection(int bitInt, out bool connectL, out bool connectR, out bool connectD, out bool connectU) Parameters bitInt int connectL bool connectR bool connectD bool connectU bool GetStamp(Int3) public static int GetStamp(Int3 unitPos) Parameters unitPos Int3 Returns int IsCircuitOperator(int) public static bool IsCircuitOperator(int typeID) Parameters typeID int Returns bool IsWire(int) public static bool IsWire(int typeID) Parameters typeID int Returns bool OperateCircuit(Int3, int, Direction5) public static bool OperateCircuit(Int3 unitPos, int stamp = -2147483648, Direction5 circuitFrom = Direction5.Center) Parameters unitPos Int3 stamp int circuitFrom Direction5 Returns bool RegisterWire(int, bool, bool, bool, bool) public static void RegisterWire(int id, bool connectL, bool connectR, bool connectD, bool connectU) Parameters id int connectL bool connectR bool connectD bool connectU bool SaveAndClearAllBackgroundTrigger() [BeforeSavingSlotChanged(0)] [OnGameQuitting(0)] public static void SaveAndClearAllBackgroundTrigger() TriggerCircuit(int, int, int, int, Direction5) public static void TriggerCircuit(int unitX, int unitY, int unitZ, int stamp = -2147483648, Direction5 startDirection = Direction5.Center) Parameters unitX int unitY int unitZ int stamp int startDirection Direction5 TryAddBackgroundTrigger(int, Int3) public static bool TryAddBackgroundTrigger(int entityID, Int3 unitPos) Parameters entityID int unitPos Int3 Returns bool TryRemoveBackgroundTrigger(int, Int3) public static bool TryRemoveBackgroundTrigger(int entityID, Int3 unitPos) Parameters entityID int unitPos Int3 Returns bool WireConnection_to_BitInt(bool, bool, bool, bool) public static int WireConnection_to_BitInt(bool connectL, bool connectR, bool connectD, bool connectU) Parameters connectL bool connectR bool connectD bool connectU bool Returns int WireEntityID_to_WireConnection(int, out bool, out bool, out bool, out bool) public static bool WireEntityID_to_WireConnection(int id, out bool connectL, out bool connectR, out bool connectD, out bool connectU) Parameters id int connectL bool connectR bool connectD bool connectU bool Returns bool"
  },
  "api/AngeliA.ClampCellsScope.html": {
    "href": "api/AngeliA.ClampCellsScope.html",
    "title": "Struct ClampCellsScope | AngeliA",
    "summary": "Struct ClampCellsScope Namespace AngeliA Assembly AngeliA Framework.dll public readonly struct ClampCellsScope : IDisposable Implements IDisposable Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Constructors ClampCellsScope(IRect) public ClampCellsScope(IRect rect) Parameters rect IRect Methods Dispose() Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources. public void Dispose()"
  },
  "api/AngeliA.Cloth.html": {
    "href": "api/AngeliA.Cloth.html",
    "title": "Class Cloth | AngeliA",
    "summary": "Class Cloth Namespace AngeliA Assembly AngeliA Framework.dll public abstract class Cloth Inheritance object Cloth Derived BodyCloth FootCloth HandCloth HeadCloth HipCloth Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Fields DefaultPool protected static Dictionary<int, int>[] DefaultPool Field Value Dictionary<int, int>[] Pool protected static readonly Dictionary<int, Cloth> Pool Field Value Dictionary<int, Cloth> Properties ClothID public int ClothID { get; } Property Value int ClothName public string ClothName { get; } Property Value string ClothSystemReady public static bool ClothSystemReady { get; } Property Value bool ClothType public abstract ClothType ClothType { get; } Property Value ClothType SheetIndex public int SheetIndex { get; } Property Value int SpriteLoaded public virtual bool SpriteLoaded { get; } Property Value bool Methods AttachClothOn(BodyPart, AngeSprite, int, int, int, int, int, int, int, int, bool) public static Cell[] AttachClothOn(BodyPart bodyPart, AngeSprite sprite, int locationX, int locationY, int localZ, int widthAmount = 1000, int heightAmount = 1000, int localRotation = 0, int shiftPixelX = 0, int shiftPixelY = 0, bool defaultHideLimb = true) Parameters bodyPart BodyPart sprite AngeSprite locationX int locationY int localZ int widthAmount int heightAmount int localRotation int shiftPixelX int shiftPixelY int defaultHideLimb bool Returns Cell[] CoverClothOn(BodyPart, AngeSprite) public static Cell[] CoverClothOn(BodyPart bodyPart, AngeSprite sprite) Parameters bodyPart BodyPart sprite AngeSprite Returns Cell[] CoverClothOn(BodyPart, AngeSprite, int) public static Cell[] CoverClothOn(BodyPart bodyPart, AngeSprite sprite, int localZ) Parameters bodyPart BodyPart sprite AngeSprite localZ int Returns Cell[] CoverClothOn(BodyPart, AngeSprite, int, Color32, bool) public static Cell[] CoverClothOn(BodyPart bodyPart, AngeSprite sprite, int localZ, Color32 tint, bool defaultHideLimb = true) Parameters bodyPart BodyPart sprite AngeSprite localZ int tint Color32 defaultHideLimb bool Returns Cell[] DrawCloth(PoseCharacterRenderer) public abstract void DrawCloth(PoseCharacterRenderer renderer) Parameters renderer PoseCharacterRenderer DrawClothGizmos(IRect, Color32, int) public virtual void DrawClothGizmos(IRect rect, Color32 tint, int z) Parameters rect IRect tint Color32 z int FillFromSheet(string) public virtual bool FillFromSheet(string name) Parameters name string Returns bool ForAllCloth() public static IEnumerable<KeyValuePair<int, Cloth>> ForAllCloth() Returns IEnumerable<KeyValuePair<int, Cloth>> GetDefaultClothID(int, ClothType) public static int GetDefaultClothID(int characterID, ClothType suitType) Parameters characterID int suitType ClothType Returns int GetDisplayName(out int) public string GetDisplayName(out int languageID) Parameters languageID int Returns string HasCloth(int) public static bool HasCloth(int clothID) Parameters clothID int Returns bool TryGetCloth(int, out Cloth) public static bool TryGetCloth(int clothID, out Cloth cloth) Parameters clothID int cloth Cloth Returns bool"
  },
  "api/AngeliA.ClothItem.html": {
    "href": "api/AngeliA.ClothItem.html",
    "title": "Class ClothItem | AngeliA",
    "summary": "Class ClothItem Namespace AngeliA Assembly AngeliA Framework.dll public sealed class ClothItem : NonStackableItem, IMapItem Inheritance object Item NonStackableItem ClothItem Implements IMapItem Inherited Members NonStackableItem.MaxStackCount Item.AllowDuplicateUpdate Item.EmbedIntoLevel Item.TypeID Item.BeforeItemUpdate_FromInventory(Character, int, int) Item.OnItemUpdate_FromInventory(Character, int, int) Item.OnPoseAnimationUpdate_FromInventory(PoseCharacterRenderer, int, int) Item.OnTakeDamage_FromInventory(Character, int, int, ref Damage) Item.OnCharacterAttack_FromInventory(Character, Bullet, int, int) Item.BeforeItemUpdate_FromEquipment(Character) Item.OnItemUpdate_FromEquipment(Character) Item.BeforePoseAnimationUpdate_FromEquipment(PoseCharacterRenderer) Item.OnPoseAnimationUpdate_FromEquipment(PoseCharacterRenderer) Item.OnTakeDamage_FromEquipment(Character, ref Damage) Item.OnCharacterAttack_FromEquipment(Character, Bullet) Item.TryRepairEquipment(Character) Item.OnItemUpdate_FromItemHolder(ItemHolder, int) Item.OnCollect(Character) Item.ItemConditionCheck(Character) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Constructors ClothItem(int) public ClothItem(int id) Parameters id int Properties ClothID public int ClothID { get; init; } Property Value int Methods CanUse(Character) public override bool CanUse(Character holder) Parameters holder Character Returns bool DrawItem(Entity, IRect, Color32, int) public override void DrawItem(Entity holder, IRect rect, Color32 tint, int z) Parameters holder Entity rect IRect tint Color32 z int Use(Character, int, int, out bool) public override bool Use(Character holder, int inventoryID, int itemIndex, out bool consume) Parameters holder Character inventoryID int itemIndex int consume bool Returns bool"
  },
  "api/AngeliA.ClothType.html": {
    "href": "api/AngeliA.ClothType.html",
    "title": "Enum ClothType | AngeliA",
    "summary": "Enum ClothType Namespace AngeliA Assembly AngeliA Framework.dll public enum ClothType Extension Methods Extension.Next<E>(E) Extension.Prev<E>(E) Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Fields Body = 1 Foot = 4 Hand = 2 Head = 0 Hip = 3"
  },
  "api/AngeliA.Color32.html": {
    "href": "api/AngeliA.Color32.html",
    "title": "Struct Color32 | AngeliA",
    "summary": "Struct Color32 Namespace AngeliA Assembly AngeliA Framework.dll [Serializable] public struct Color32 : IFormattable, IComparable Implements IFormattable IComparable Inherited Members object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Extension Methods Extension.Adjust(Color32, float, float, float, float) Extension.IsSame(Color32, Color32, bool) Extension.LookDifferent(Color32, Color32) Extension.Mult(Color32, Color32) Extension.ToColorF(Color32) Extension.WithNewA(Color32, int) Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Constructors Color32(byte, byte, byte, byte) public Color32(byte r, byte g, byte b, byte a = 255) Parameters r byte g byte b byte a byte Fields BLACK public static readonly Color32 BLACK Field Value Color32 BLACK_12 public static readonly Color32 BLACK_12 Field Value Color32 BLACK_128 public static readonly Color32 BLACK_128 Field Value Color32 BLACK_196 public static readonly Color32 BLACK_196 Field Value Color32 BLACK_220 public static readonly Color32 BLACK_220 Field Value Color32 BLACK_32 public static readonly Color32 BLACK_32 Field Value Color32 BLACK_64 public static readonly Color32 BLACK_64 Field Value Color32 BLACK_96 public static readonly Color32 BLACK_96 Field Value Color32 BLUE public static readonly Color32 BLUE Field Value Color32 BLUE_BETTER public static readonly Color32 BLUE_BETTER Field Value Color32 CLEAR public static readonly Color32 CLEAR Field Value Color32 CYAN public static readonly Color32 CYAN Field Value Color32 CYAN_BETTER public static readonly Color32 CYAN_BETTER Field Value Color32 CYAN_DARK public static readonly Color32 CYAN_DARK Field Value Color32 GREEN public static readonly Color32 GREEN Field Value Color32 GREEN_BETTER public static readonly Color32 GREEN_BETTER Field Value Color32 GREEN_DARK public static readonly Color32 GREEN_DARK Field Value Color32 GREY_112 public static readonly Color32 GREY_112 Field Value Color32 GREY_12 public static readonly Color32 GREY_12 Field Value Color32 GREY_128 public static readonly Color32 GREY_128 Field Value Color32 GREY_160 public static readonly Color32 GREY_160 Field Value Color32 GREY_196 public static readonly Color32 GREY_196 Field Value Color32 GREY_20 public static readonly Color32 GREY_20 Field Value Color32 GREY_216 public static readonly Color32 GREY_216 Field Value Color32 GREY_230 public static readonly Color32 GREY_230 Field Value Color32 GREY_245 public static readonly Color32 GREY_245 Field Value Color32 GREY_32 public static readonly Color32 GREY_32 Field Value Color32 GREY_38 public static readonly Color32 GREY_38 Field Value Color32 GREY_42 public static readonly Color32 GREY_42 Field Value Color32 GREY_46 public static readonly Color32 GREY_46 Field Value Color32 GREY_56 public static readonly Color32 GREY_56 Field Value Color32 GREY_64 public static readonly Color32 GREY_64 Field Value Color32 GREY_96 public static readonly Color32 GREY_96 Field Value Color32 ORANGE public static readonly Color32 ORANGE Field Value Color32 ORANGE_BETTER public static readonly Color32 ORANGE_BETTER Field Value Color32 ORANGE_DARK public static readonly Color32 ORANGE_DARK Field Value Color32 PINK public static readonly Color32 PINK Field Value Color32 PURPLE public static readonly Color32 PURPLE Field Value Color32 PURPLE_BETTER public static readonly Color32 PURPLE_BETTER Field Value Color32 RED public static readonly Color32 RED Field Value Color32 RED_BETTER public static readonly Color32 RED_BETTER Field Value Color32 RED_DARK public static readonly Color32 RED_DARK Field Value Color32 SKIN_YELLOW public static readonly Color32 SKIN_YELLOW Field Value Color32 WHITE public static readonly Color32 WHITE Field Value Color32 WHITE_0 public static readonly Color32 WHITE_0 Field Value Color32 WHITE_12 public static readonly Color32 WHITE_12 Field Value Color32 WHITE_128 public static readonly Color32 WHITE_128 Field Value Color32 WHITE_196 public static readonly Color32 WHITE_196 Field Value Color32 WHITE_20 public static readonly Color32 WHITE_20 Field Value Color32 WHITE_32 public static readonly Color32 WHITE_32 Field Value Color32 WHITE_46 public static readonly Color32 WHITE_46 Field Value Color32 WHITE_6 public static readonly Color32 WHITE_6 Field Value Color32 WHITE_64 public static readonly Color32 WHITE_64 Field Value Color32 WHITE_96 public static readonly Color32 WHITE_96 Field Value Color32 YELLOW public static readonly Color32 YELLOW Field Value Color32 YELLOW_DARK public static readonly Color32 YELLOW_DARK Field Value Color32 a public byte a Field Value byte b public byte b Field Value byte g public byte g Field Value byte r public byte r Field Value byte Methods CompareTo(object) Compares the current instance with another object of the same type and returns an integer that indicates whether the current instance precedes, follows, or occurs in the same position in the sort order as the other object. public readonly int CompareTo(object obj) Parameters obj object An object to compare with this instance. Returns int A value that indicates the relative order of the objects being compared. The return value has these meanings: Value Meaning Less than zero This instance precedes obj in the sort order. Zero This instance occurs in the same position in the sort order as obj. Greater than zero This instance follows obj in the sort order. Exceptions ArgumentException obj is not the same type as this instance. Equals(object) Indicates whether this instance and a specified object are equal. public override readonly bool Equals(object obj) Parameters obj object The object to compare with the current instance. Returns bool true if obj and this instance are the same type and represent the same value; otherwise, false. GetHashCode() Returns the hash code for this instance. public override readonly int GetHashCode() Returns int A 32-bit signed integer that is the hash code for this instance. Lerp(Color32, Color32, float) public static Color32 Lerp(Color32 a, Color32 b, float t) Parameters a Color32 b Color32 t float Returns Color32 LerpUnclamped(Color32, Color32, float) public static Color32 LerpUnclamped(Color32 a, Color32 b, float t) Parameters a Color32 b Color32 t float Returns Color32 ToString() Returns the fully qualified type name of this instance. public override readonly string ToString() Returns string The fully qualified type name. ToString(string) public readonly string ToString(string format) Parameters format string Returns string ToString(string, IFormatProvider) Formats the value of the current instance using the specified format. public readonly string ToString(string format, IFormatProvider formatProvider) Parameters format string The format to use. -or- A null reference (Nothing in Visual Basic) to use the default format defined for the type of the IFormattable implementation. formatProvider IFormatProvider The provider to use to format the value. -or- A null reference (Nothing in Visual Basic) to obtain the numeric format information from the current locale setting of the operating system. Returns string The value of the current instance in the specified format. Operators operator ==(Color32, Color32) public static bool operator ==(Color32 a, Color32 b) Parameters a Color32 b Color32 Returns bool operator !=(Color32, Color32) public static bool operator !=(Color32 a, Color32 b) Parameters a Color32 b Color32 Returns bool operator *(Color32, Color32) public static Color32 operator *(Color32 a, Color32 b) Parameters a Color32 b Color32 Returns Color32"
  },
  "api/AngeliA.ColorF.html": {
    "href": "api/AngeliA.ColorF.html",
    "title": "Struct ColorF | AngeliA",
    "summary": "Struct ColorF Namespace AngeliA Assembly AngeliA Framework.dll public struct ColorF Inherited Members object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Extension Methods Extension.Almost(ColorF, ColorF) Extension.ToColor32(ColorF) Extension.WithNewA(ColorF, float) Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Constructors ColorF(float, float, float, float) public ColorF(float r, float g, float b, float a = 1) Parameters r float g float b float a float Fields a public float a Field Value float b public float b Field Value float g public float g Field Value float r public float r Field Value float Methods CompareTo(object) public readonly int CompareTo(object obj) Parameters obj object Returns int Equals(object) Indicates whether this instance and a specified object are equal. public override readonly bool Equals(object obj) Parameters obj object The object to compare with the current instance. Returns bool true if obj and this instance are the same type and represent the same value; otherwise, false. GetHashCode() Returns the hash code for this instance. public override readonly int GetHashCode() Returns int A 32-bit signed integer that is the hash code for this instance. Lerp(ColorF, ColorF, float) public static ColorF Lerp(ColorF a, ColorF b, float t) Parameters a ColorF b ColorF t float Returns ColorF ToString() Returns the fully qualified type name of this instance. public override readonly string ToString() Returns string The fully qualified type name. ToString(string) public readonly string ToString(string format) Parameters format string Returns string ToString(string, IFormatProvider) public readonly string ToString(string format, IFormatProvider formatProvider) Parameters format string formatProvider IFormatProvider Returns string Operators operator ==(ColorF, ColorF) public static bool operator ==(ColorF a, ColorF b) Parameters a ColorF b ColorF Returns bool operator !=(ColorF, ColorF) public static bool operator !=(ColorF a, ColorF b) Parameters a ColorF b ColorF Returns bool operator *(ColorF, ColorF) public static ColorF operator *(ColorF a, ColorF b) Parameters a ColorF b ColorF Returns ColorF"
  },
  "api/AngeliA.ColorGradient.Data.html": {
    "href": "api/AngeliA.ColorGradient.Data.html",
    "title": "Struct ColorGradient.Data | AngeliA",
    "summary": "Struct ColorGradient.Data Namespace AngeliA Assembly AngeliA Framework.dll [Serializable] public struct ColorGradient.Data Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Constructors Data(Color32, float) public Data(Color32 color, float time) Parameters color Color32 time float Fields color public Color32 color Field Value Color32 time public float time Field Value float"
  },
  "api/AngeliA.ColorGradient.html": {
    "href": "api/AngeliA.ColorGradient.html",
    "title": "Class ColorGradient | AngeliA",
    "summary": "Class ColorGradient Namespace AngeliA Assembly AngeliA Framework.dll [Serializable] public class ColorGradient Inheritance object ColorGradient Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Constructors ColorGradient(params Data[]) public ColorGradient(params ColorGradient.Data[] values) Parameters values Data[] Fields Values public ColorGradient.Data[] Values Field Value Data[] Methods Evaluate(float) public Color32 Evaluate(float time) Parameters time float Returns Color32"
  },
  "api/AngeliA.CompareMode.html": {
    "href": "api/AngeliA.CompareMode.html",
    "title": "Enum CompareMode | AngeliA",
    "summary": "Enum CompareMode Namespace AngeliA Assembly AngeliA Framework.dll public enum CompareMode Extension Methods Extension.Next<E>(E) Extension.Prev<E>(E) Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Fields And = 7 Equal = 4 GreaterOrEqual = 1 GreaterThan = 0 LessOrEqual = 3 LessThan = 2 NotEqual = 5 Or = 6"
  },
  "api/AngeliA.Const.html": {
    "href": "api/AngeliA.Const.html",
    "title": "Class Const | AngeliA",
    "summary": "Class Const Namespace AngeliA Assembly AngeliA Framework.dll Utility class for constant values public static class Const Inheritance object Const Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields ANTI_SPAWN_PADDING Entity anti-spawning rect expand distance from view-rect in global size public const int ANTI_SPAWN_PADDING = 512 Field Value int ANTI_SPAWN_PADDING_UNIT Entity anti-spawning rect expand distance from view-rect in unit (1 unit = 256 global size) public const int ANTI_SPAWN_PADDING_UNIT = 2 Field Value int ART_CEL Global size of a artwork pixel public const int ART_CEL = 16 Field Value int ART_SCALE Size ratio between global size and artwork pixel public const int ART_SCALE = 16 Field Value int CEL Global size of a block unit public const int CEL = 256 Field Value int CEL2 Global size of a block unit public static readonly Int2 CEL2 Field Value Int2 CONTROL_COPY public const char CONTROL_COPY = '\\u0003' Field Value char CONTROL_CUT public const char CONTROL_CUT = '\\u0018' Field Value char CONTROL_PASTE public const char CONTROL_PASTE = '\\u0016' Field Value char CONTROL_SELECT_ALL public const char CONTROL_SELECT_ALL = '\\u0006' Field Value char CURSOR_ARROW public const int CURSOR_ARROW = 1 Field Value int CURSOR_BEAM public const int CURSOR_BEAM = 2 Field Value int CURSOR_COUNT public const int CURSOR_COUNT = 11 Field Value int CURSOR_CROSSHAIR public const int CURSOR_CROSSHAIR = 3 Field Value int CURSOR_DEFAULT public const int CURSOR_DEFAULT = 0 Field Value int CURSOR_HAND public const int CURSOR_HAND = 4 Field Value int CURSOR_NONE public const int CURSOR_NONE = -2 Field Value int CURSOR_PROHIBIT public const int CURSOR_PROHIBIT = 10 Field Value int CURSOR_RESIZE_CROSS public const int CURSOR_RESIZE_CROSS = 9 Field Value int CURSOR_RESIZE_HORIZONTAL public const int CURSOR_RESIZE_HORIZONTAL = 5 Field Value int CURSOR_RESIZE_TOPLEFT public const int CURSOR_RESIZE_TOPLEFT = 7 Field Value int CURSOR_RESIZE_TOPRIGHT public const int CURSOR_RESIZE_TOPRIGHT = 8 Field Value int CURSOR_RESIZE_VERTICAL public const int CURSOR_RESIZE_VERTICAL = 6 Field Value int EQUIPMENT_TYPE_COUNT public static readonly int EQUIPMENT_TYPE_COUNT Field Value int HALF Global size of a half block unit public const int HALF = 128 Field Value int HALF2 Global size of a half block unit public static readonly Int2 HALF2 Field Value Int2 LEVEL_SPAWN_PADDING Level block expand distance from view-rect in global size public const int LEVEL_SPAWN_PADDING = 2048 Field Value int LEVEL_SPAWN_PADDING_UNIT Level block expand distance from view-rect in unit (1 unit = 256 global size) public const int LEVEL_SPAWN_PADDING_UNIT = 8 Field Value int MAP Unit size of a map file public const int MAP = 128 Field Value int MAX_CHARACTER_HEIGHT public const int MAX_CHARACTER_HEIGHT = 251 Field Value int MIN_CHARACTER_HEIGHT public const int MIN_CHARACTER_HEIGHT = 65 Field Value int ORIGINAL_PIVOT Use the original pivot of the sprite from artwork sheet public const int ORIGINAL_PIVOT = 2147483647 Field Value int ORIGINAL_SIZE Use the original size of the sprite from artwork sheet public const int ORIGINAL_SIZE = 2147483647 Field Value int ORIGINAL_SIZE_NEGATAVE Use the original size * -1 of the sprite from artwork sheet public const int ORIGINAL_SIZE_NEGATAVE = -2147483648 Field Value int PIXEL Sprite ID of the 1x1 white pixel public const int PIXEL = 11254534 Field Value int QUARTER Global size of a quarter block unit public const int QUARTER = 64 Field Value int QUARTER2 Global size of a quarter block unit public static readonly Int2 QUARTER2 Field Value Int2 RETURN_SIGN public const char RETURN_SIGN = '\\r' Field Value char RIG_BUFFER_SIZE public const int RIG_BUFFER_SIZE = 5000000 Field Value int SCREEN_EFFECT_COUNT Screen effect total count public const int SCREEN_EFFECT_COUNT = 6 Field Value int SCREEN_EFFECT_GREYSCALE Screen effect index for the grey-scale effect public const int SCREEN_EFFECT_GREYSCALE = 4 Field Value int SCREEN_EFFECT_INVERT Screen effect index for the invert effect public const int SCREEN_EFFECT_INVERT = 5 Field Value int SCREEN_EFFECT_NAMES public static readonly string[] SCREEN_EFFECT_NAMES Field Value string[] SCREEN_EFFECT_RETRO_DARKEN Screen effect index for the retro-darken effect public const int SCREEN_EFFECT_RETRO_DARKEN = 1 Field Value int SCREEN_EFFECT_RETRO_LIGHTEN Screen effect index for the retro-lighten effect public const int SCREEN_EFFECT_RETRO_LIGHTEN = 2 Field Value int SCREEN_EFFECT_TINT Screen effect index for the tint effect public const int SCREEN_EFFECT_TINT = 0 Field Value int SCREEN_EFFECT_VIGNETTE Screen effect index for the vignette effect public const int SCREEN_EFFECT_VIGNETTE = 3 Field Value int SOUND_CHANNEL_COUNT public const int SOUND_CHANNEL_COUNT = 6 Field Value int SPAWN_PADDING Entity spawning expand distance from view-rect in global size public const int SPAWN_PADDING = 4096 Field Value int SPAWN_PADDING_UNIT Entity spawning expand distance from view-rect in unit (1 unit = 256 global size) public const int SPAWN_PADDING_UNIT = 16 Field Value int SliceIgnoreCenter public static readonly bool[] SliceIgnoreCenter Field Value bool[] TEAM_ALL Attack target team for all public const int TEAM_ALL = 15 Field Value int TEAM_COUNT Attack target team total count public const int TEAM_COUNT = 4 Field Value int TEAM_ENEMY Attack target team for enemy public const int TEAM_ENEMY = 8 Field Value int TEAM_ENVIRONMENT Attack target team for environment public const int TEAM_ENVIRONMENT = 1 Field Value int TEAM_NEUTRAL Attack target team for neutral public const int TEAM_NEUTRAL = 2 Field Value int TEAM_PLAYER Attack target team for player public const int TEAM_PLAYER = 4 Field Value int Methods EmptyBoolMethod() public static bool EmptyBoolMethod() Returns bool EmptyMethod() public static void EmptyMethod()"
  },
  "api/AngeliA.ControlHintUI.html": {
    "href": "api/AngeliA.ControlHintUI.html",
    "title": "Class ControlHintUI | AngeliA",
    "summary": "Class ControlHintUI Namespace AngeliA Assembly AngeliA Framework.dll [Entity.StageOrder(2147483647)] [Entity.Capacity(1, 1)] public class ControlHintUI : EntityUI, IMapItem Inheritance object Entity EntityUI ControlHintUI Implements IMapItem Inherited Members EntityUI.BlockEvent EntityUI.FirstUpdate() EntityUI.Update() EntityUI.LateUpdate() EntityUI.UpdateUI() EntityUI.Unify(int) Entity.Active Entity.X Entity.Y Entity.Width Entity.Height Entity.TypeID Entity.SpawnFrame Entity.FromWorld Entity.Rect Entity.InstanceOrder Entity.MapUnitPos Entity.InstanceID Entity.IgnoreReposition Entity.XY Entity.Size Entity.Center Entity.CenterX Entity.CenterY Entity.PivotUnitPosition Entity.OnInactivated() Entity.BeforeUpdate() Entity.AfterReposition(Int3, Int3) Entity.IgnoreDespawnFromMap(int) Entity.CancelIgnoreDespawnFromMap() Entity.Draw() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Constructors ControlHintUI() public ControlHintUI() Properties Instance public static ControlHintUI Instance { get; } Property Value ControlHintUI OffsetX public int OffsetX { get; set; } Property Value int OffsetY public int OffsetY { get; set; } Property Value int UseControlHint public static bool UseControlHint { get; set; } Property Value bool UseGamePadHint public static bool UseGamePadHint { get; set; } Property Value bool Methods AddHint(Gamekey, Gamekey, string, int) public static void AddHint(Gamekey keyA, Gamekey keyB, string label, int priority = -2147483648) Parameters keyA Gamekey keyB Gamekey label string priority int AddHint(Gamekey, string, int) public static void AddHint(Gamekey key, string label, int priority = -2147483648) Parameters key Gamekey label string priority int AddHint(KeyboardKey, KeyboardKey, string) public static void AddHint(KeyboardKey keyA, KeyboardKey keyB, string label) Parameters keyA KeyboardKey keyB KeyboardKey label string AddHint(KeyboardKey, string) public static void AddHint(KeyboardKey key, string label) Parameters key KeyboardKey label string DrawGlobalHint(int, int, Gamekey, Gamekey, string, bool) public static void DrawGlobalHint(int globalX, int globalY, Gamekey keyA, Gamekey keyB, string label, bool background = false) Parameters globalX int globalY int keyA Gamekey keyB Gamekey label string background bool DrawGlobalHint(int, int, Gamekey, string, bool) public static void DrawGlobalHint(int globalX, int globalY, Gamekey key, string label, bool background = false) Parameters globalX int globalY int key Gamekey label string background bool ForceHideGamepad(int) public static void ForceHideGamepad(int duration = 1) Parameters duration int ForceHideGlobalHint(int) public static void ForceHideGlobalHint(int duration = 1) Parameters duration int ForceOffset(int, int, int) public static void ForceOffset(int x, int y, int duration = 1) Parameters x int y int duration int ForceShowHint(int) public static void ForceShowHint(int duration = 1) Parameters duration int OnActivated() public override void OnActivated() OnGameInitializeLater() [OnGameInitializeLater(64)] public static TaskResult OnGameInitializeLater() Returns TaskResult OnGameUpdateLater() [OnGameUpdatePauseless(0)] public static void OnGameUpdateLater()"
  },
  "api/AngeliA.Cursor.html": {
    "href": "api/AngeliA.Cursor.html",
    "title": "Class Cursor | AngeliA",
    "summary": "Class Cursor Namespace AngeliA Assembly AngeliA Framework.dll public static class Cursor Inheritance object Cursor Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties CurrentCursorIndex public static int CurrentCursorIndex { get; } Property Value int CursorPriority public static int CursorPriority { get; set; } Property Value int Methods GetResizeCursorIndex(Direction8) public static int GetResizeCursorIndex(Direction8 direction) Parameters direction Direction8 Returns int RequireCursor(int) public static void RequireCursor(int priority = -1) Parameters priority int SetCursor(int, IRect, int) public static void SetCursor(int cursorIndex, IRect mouseRange, int priority = 0) Parameters cursorIndex int mouseRange IRect priority int SetCursor(int, int) public static void SetCursor(int cursorIndex, int priority = 0) Parameters cursorIndex int priority int SetCursorAsBeam(IRect, int) public static void SetCursorAsBeam(IRect mouseRange, int priority = 0) Parameters mouseRange IRect priority int SetCursorAsBeam(int) public static void SetCursorAsBeam(int priority = 0) Parameters priority int SetCursorAsHand(IRect, int) public static void SetCursorAsHand(IRect mouseRange, int priority = 0) Parameters mouseRange IRect priority int SetCursorAsHand(int) public static void SetCursorAsHand(int priority = 0) Parameters priority int SetCursorAsMove(IRect, int) public static void SetCursorAsMove(IRect mouseRange, int priority = 0) Parameters mouseRange IRect priority int SetCursorAsMove(int) public static void SetCursorAsMove(int priority = 0) Parameters priority int SetCursorAsNone(int) public static void SetCursorAsNone(int priority = 0) Parameters priority int SetCursorAsNormal(int) public static void SetCursorAsNormal(int priority = 0) Parameters priority int"
  },
  "api/AngeliA.Damage.html": {
    "href": "api/AngeliA.Damage.html",
    "title": "Struct Damage | AngeliA",
    "summary": "Struct Damage Namespace AngeliA Assembly AngeliA Framework.dll Data structure for a single damage performed public struct Damage Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Constructors Damage(int, int, Entity, Tag) Data structure for a single damage performed public Damage(int amount, int targetTeam = 15, Entity bullet = null, Tag type = Tag.PhysicalDamage) Parameters amount int How many damage it deals targetTeam int What team does it attacks bullet Entity Which bullet does it came from type Tag What special type does it holds Fields Amount public int Amount Field Value int Bullet public Entity Bullet Field Value Entity IgnoreInvincible Do not make target become invincible after take this damage public bool IgnoreInvincible Field Value bool IgnoreStun Do not make target stun after take this damage public bool IgnoreStun Field Value bool TargetTeam public int TargetTeam Field Value int Type public Tag Type Field Value Tag Methods DamageUpdateFromLevel() [OnGameUpdateLater(0)] public static void DamageUpdateFromLevel()"
  },
  "api/AngeliA.Debug.html": {
    "href": "api/AngeliA.Debug.html",
    "title": "Class Debug | AngeliA",
    "summary": "Class Debug Namespace AngeliA Assembly AngeliA Framework.dll Log debug messages to the console or screen public static class Debug Inheritance object Debug Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Log(LanguageCode) public static void Log(LanguageCode message) Parameters message LanguageCode Log(object) public static void Log(object message) Parameters message object Log(params object[]) public static void Log(params object[] messages) Parameters messages object[] LogError(LanguageCode) public static void LogError(LanguageCode message) Parameters message LanguageCode LogError(object) public static void LogError(object message) Parameters message object LogError(params object[]) public static void LogError(params object[] messages) Parameters messages object[] LogException(Exception) public static void LogException(Exception ex) Parameters ex Exception LogLabel(object) Draw a label on top-right of the screen for the current frame public static void LogLabel(object obj) Parameters obj object LogLabel(params object[]) Draw a label on top-right of the screen for the current frame public static void LogLabel(params object[] objs) Parameters objs object[] LogLabel(string) Draw a label on top-right of the screen for the current frame public static void LogLabel(string content) Parameters content string LogWarning(LanguageCode) public static void LogWarning(LanguageCode message) Parameters message LanguageCode LogWarning(object) public static void LogWarning(object message) Parameters message object LogWarning(params object[]) public static void LogWarning(params object[] messages) Parameters messages object[] Events OnLog public static event Action<object> OnLog Event Type Action<object> OnLogError public static event Action<object> OnLogError Event Type Action<object> OnLogErrorInternal public static event Action<int, string> OnLogErrorInternal Event Type Action<int, string> OnLogException public static event Action<Exception> OnLogException Event Type Action<Exception> OnLogInternal public static event Action<int, string> OnLogInternal Event Type Action<int, string> OnLogWarning public static event Action<object> OnLogWarning Event Type Action<object>"
  },
  "api/AngeliA.DefaultDialogueUI.html": {
    "href": "api/AngeliA.DefaultDialogueUI.html",
    "title": "Class DefaultDialogueUI | AngeliA",
    "summary": "Class DefaultDialogueUI Namespace AngeliA Assembly AngeliA Framework.dll public sealed class DefaultDialogueUI : DialogueUI, IMapItem, IWindowEntityUI Inheritance object Entity EntityUI DialogueUI DefaultDialogueUI Implements IMapItem IWindowEntityUI Inherited Members DialogueUI.BackgroundRect DialogueUI.OnActivated() DialogueUI.UpdateUI() DialogueUI.UpdateDialogue() DialogueUI.SetData(string, int, string, Color32[]) DialogueUI.Roll() EntityUI.FirstUpdate() EntityUI.Update() EntityUI.LateUpdate() Entity.Active Entity.X Entity.Y Entity.Width Entity.Height Entity.TypeID Entity.SpawnFrame Entity.FromWorld Entity.Rect Entity.InstanceOrder Entity.MapUnitPos Entity.InstanceID Entity.IgnoreReposition Entity.XY Entity.Size Entity.Center Entity.CenterX Entity.CenterY Entity.PivotUnitPosition Entity.OnInactivated() Entity.BeforeUpdate() Entity.AfterReposition(Int3, Int3) Entity.IgnoreDespawnFromMap(int) Entity.CancelIgnoreDespawnFromMap() Entity.Draw() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Properties ContentRect protected override IRect ContentRect { get; } Property Value IRect IconRect protected override IRect IconRect { get; } Property Value IRect NameRect protected override IRect NameRect { get; } Property Value IRect PanelRect protected override IRect PanelRect { get; } Property Value IRect"
  },
  "api/AngeliA.DefaultGamepadGamekeyAttribute.html": {
    "href": "api/AngeliA.DefaultGamepadGamekeyAttribute.html",
    "title": "Class DefaultGamepadGamekeyAttribute | AngeliA",
    "summary": "Class DefaultGamepadGamekeyAttribute Namespace AngeliA Assembly AngeliA Framework.dll Default gamepad binding for the given gamekey [AttributeUsage(AttributeTargets.Assembly, AllowMultiple = true)] public class DefaultGamepadGamekeyAttribute : Attribute Inheritance object Attribute DefaultGamepadGamekeyAttribute Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Constructors DefaultGamepadGamekeyAttribute(Gamekey, GamepadKey) Default gamepad binding for the given gamekey public DefaultGamepadGamekeyAttribute(Gamekey gamekey, GamepadKey inputKey) Parameters gamekey Gamekey inputKey GamepadKey"
  },
  "api/AngeliA.DefaultKeyboardGamekeyAttribute.html": {
    "href": "api/AngeliA.DefaultKeyboardGamekeyAttribute.html",
    "title": "Class DefaultKeyboardGamekeyAttribute | AngeliA",
    "summary": "Class DefaultKeyboardGamekeyAttribute Namespace AngeliA Assembly AngeliA Framework.dll Default keyboard binding for the given gamekey [AttributeUsage(AttributeTargets.Assembly, AllowMultiple = true)] public class DefaultKeyboardGamekeyAttribute : Attribute Inheritance object Attribute DefaultKeyboardGamekeyAttribute Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Constructors DefaultKeyboardGamekeyAttribute(Gamekey, KeyboardKey) Default keyboard binding for the given gamekey public DefaultKeyboardGamekeyAttribute(Gamekey gamekey, KeyboardKey inputKey) Parameters gamekey Gamekey inputKey KeyboardKey"
  },
  "api/AngeliA.DefaultLayerScope.html": {
    "href": "api/AngeliA.DefaultLayerScope.html",
    "title": "Struct DefaultLayerScope | AngeliA",
    "summary": "Struct DefaultLayerScope Namespace AngeliA Assembly AngeliA Framework.dll public readonly struct DefaultLayerScope : IDisposable Implements IDisposable Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Constructors DefaultLayerScope() public DefaultLayerScope() Methods Dispose() Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources. public void Dispose()"
  },
  "api/AngeliA.DefaultPropellerWing.html": {
    "href": "api/AngeliA.DefaultPropellerWing.html",
    "title": "Class DefaultPropellerWing | AngeliA",
    "summary": "Class DefaultPropellerWing Namespace AngeliA Assembly AngeliA Framework.dll public sealed class DefaultPropellerWing : Wing Inheritance object BodyGadget Wing DefaultPropellerWing Inherited Members Wing.IsPropeller Wing.SpriteLoaded Wing.GadgetType Wing.SpriteWing Wing.DrawGadget(PoseCharacterRenderer) Wing.DrawGadgetGizmos(IRect, Color32, int) Wing.FillFromSheet(string) Wing.DrawGadgetFromPool(PoseCharacterRenderer) Wing.DrawSpriteAsWing(PoseCharacterRenderer, OrientedSprite, bool, int) Wing.IsPropellerWing(int) BodyGadget.BodyGadgetSystemReady BodyGadget.SheetIndex BodyGadget.GadgetID BodyGadget.GadgetName BodyGadget.ForAllGadget() BodyGadget.GetDefaultGadgetID(int, BodyGadgetType) BodyGadget.TryGetGadget(int, out BodyGadget) BodyGadget.GetDisplayName(string, out int) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Fields TYPE_ID public static readonly int TYPE_ID Field Value int"
  },
  "api/AngeliA.DefaultWing.html": {
    "href": "api/AngeliA.DefaultWing.html",
    "title": "Class DefaultWing | AngeliA",
    "summary": "Class DefaultWing Namespace AngeliA Assembly AngeliA Framework.dll public sealed class DefaultWing : Wing Inheritance object BodyGadget Wing DefaultWing Inherited Members Wing.IsPropeller Wing.SpriteLoaded Wing.GadgetType Wing.SpriteWing Wing.DrawGadget(PoseCharacterRenderer) Wing.DrawGadgetGizmos(IRect, Color32, int) Wing.FillFromSheet(string) Wing.DrawGadgetFromPool(PoseCharacterRenderer) Wing.DrawSpriteAsWing(PoseCharacterRenderer, OrientedSprite, bool, int) Wing.IsPropellerWing(int) BodyGadget.BodyGadgetSystemReady BodyGadget.SheetIndex BodyGadget.GadgetID BodyGadget.GadgetName BodyGadget.ForAllGadget() BodyGadget.GetDefaultGadgetID(int, BodyGadgetType) BodyGadget.TryGetGadget(int, out BodyGadget) BodyGadget.GetDisplayName(string, out int) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Fields TYPE_ID public static readonly int TYPE_ID Field Value int Properties Scale protected override int Scale { get; } Property Value int"
  },
  "api/AngeliA.DelayTask.html": {
    "href": "api/AngeliA.DelayTask.html",
    "title": "Class DelayTask | AngeliA",
    "summary": "Class DelayTask Namespace AngeliA Assembly AngeliA Framework.dll public class DelayTask : Task Inheritance object Task DelayTask Inherited Members Task.LocalFrame Task.UserData Task.OnStart() Task.OnEnd() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Fields TYPE_ID public static readonly int TYPE_ID Field Value int Methods FrameUpdate() public override TaskResult FrameUpdate() Returns TaskResult"
  },
  "api/AngeliA.DespawnEntityTask.html": {
    "href": "api/AngeliA.DespawnEntityTask.html",
    "title": "Class DespawnEntityTask | AngeliA",
    "summary": "Class DespawnEntityTask Namespace AngeliA Assembly AngeliA Framework.dll public class DespawnEntityTask : Task Inheritance object Task DespawnEntityTask Inherited Members Task.LocalFrame Task.UserData Task.OnStart() Task.OnEnd() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Fields TYPE_ID public static readonly int TYPE_ID Field Value int Methods FrameUpdate() public override TaskResult FrameUpdate() Returns TaskResult"
  },
  "api/AngeliA.DialogueTask.html": {
    "href": "api/AngeliA.DialogueTask.html",
    "title": "Class DialogueTask | AngeliA",
    "summary": "Class DialogueTask Namespace AngeliA Assembly AngeliA Framework.dll public class DialogueTask : Task Inheritance object Task DialogueTask Inherited Members Task.LocalFrame Task.UserData Task.OnStart() Task.OnEnd() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Constructors DialogueTask() public DialogueTask() Methods EndConversation() public static void EndConversation() FrameUpdate() public override TaskResult FrameUpdate() Returns TaskResult StartConversation<D>(string) public static void StartConversation<D>(string globalName) where D : DialogueUI Parameters globalName string Type Parameters D"
  },
  "api/AngeliA.DialogueUI.html": {
    "href": "api/AngeliA.DialogueUI.html",
    "title": "Class DialogueUI | AngeliA",
    "summary": "Class DialogueUI Namespace AngeliA Assembly AngeliA Framework.dll [Entity.Capacity(1, 1)] public abstract class DialogueUI : EntityUI, IMapItem, IWindowEntityUI Inheritance object Entity EntityUI DialogueUI Implements IMapItem IWindowEntityUI Derived DefaultDialogueUI Inherited Members EntityUI.BlockEvent EntityUI.FirstUpdate() EntityUI.Update() EntityUI.LateUpdate() EntityUI.Unify(int) Entity.Active Entity.X Entity.Y Entity.Width Entity.Height Entity.TypeID Entity.SpawnFrame Entity.FromWorld Entity.Rect Entity.InstanceOrder Entity.MapUnitPos Entity.InstanceID Entity.IgnoreReposition Entity.XY Entity.Size Entity.Center Entity.CenterX Entity.CenterY Entity.PivotUnitPosition Entity.OnInactivated() Entity.BeforeUpdate() Entity.AfterReposition(Int3, Int3) Entity.IgnoreDespawnFromMap(int) Entity.CancelIgnoreDespawnFromMap() Entity.Draw() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Properties BackgroundRect public IRect BackgroundRect { get; } Property Value IRect ContentRect protected abstract IRect ContentRect { get; } Property Value IRect IconRect protected abstract IRect IconRect { get; } Property Value IRect NameRect protected abstract IRect NameRect { get; } Property Value IRect PanelRect protected abstract IRect PanelRect { get; } Property Value IRect RollingSpeed protected virtual int RollingSpeed { get; } Property Value int Methods OnActivated() public override void OnActivated() Roll() public bool Roll() Returns bool SetData(string, int, string, Color32[]) public void SetData(string content, int identity, string name, Color32[] colors) Parameters content string identity int name string colors Color32[] UpdateDialogue() public void UpdateDialogue() UpdateUI() public override void UpdateUI()"
  },
  "api/AngeliA.Direction2.html": {
    "href": "api/AngeliA.Direction2.html",
    "title": "Enum Direction2 | AngeliA",
    "summary": "Enum Direction2 Namespace AngeliA Assembly AngeliA Framework.dll public enum Direction2 : sbyte Extension Methods Extension.Next<E>(E) Extension.Prev<E>(E) Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Fields Down = -1 Horizontal = -1 Left = -1 Negative = -1 Positive = 1 Right = 1 Up = 1 Vertical = 1"
  },
  "api/AngeliA.Direction3.html": {
    "href": "api/AngeliA.Direction3.html",
    "title": "Enum Direction3 | AngeliA",
    "summary": "Enum Direction3 Namespace AngeliA Assembly AngeliA Framework.dll public enum Direction3 : sbyte Extension Methods Extension.Next<E>(E) Extension.Opposite(Direction3) Extension.Prev<E>(E) Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Fields Down = -1 Horizontal = -1 Left = -1 Negative = -1 None = 0 Positive = 1 Right = 1 Up = 1 Vertical = 1"
  },
  "api/AngeliA.Direction4.html": {
    "href": "api/AngeliA.Direction4.html",
    "title": "Enum Direction4 | AngeliA",
    "summary": "Enum Direction4 Namespace AngeliA Assembly AngeliA Framework.dll public enum Direction4 : byte Extension Methods Extension.AntiClockwise(Direction4) Extension.Clockwise(Direction4) Extension.GetRotation(Direction4) Extension.IsHorizontal(Direction4) Extension.IsPositive(Direction4) Extension.IsVertical(Direction4) Extension.Next<E>(E) Extension.Normal(Direction4) Extension.Opposite(Direction4) Extension.Prev<E>(E) Extension.ToAlignment(Direction4) Extension.ToDirection5(Direction4) Extension.ToDirection8(Direction4) Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Fields Down = 1 Left = 2 Right = 3 Up = 0"
  },
  "api/AngeliA.Direction5.html": {
    "href": "api/AngeliA.Direction5.html",
    "title": "Enum Direction5 | AngeliA",
    "summary": "Enum Direction5 Namespace AngeliA Assembly AngeliA Framework.dll public enum Direction5 : byte Extension Methods Extension.AntiClockwise(Direction5) Extension.Clockwise(Direction5) Extension.GetHorizontalDirection(Direction5) Extension.GetVerticalDirection(Direction5) Extension.IsHorizontal(Direction5) Extension.IsPositive(Direction5) Extension.IsVertical(Direction5) Extension.Next<E>(E) Extension.Normal(Direction5) Extension.Opposite(Direction5) Extension.Prev<E>(E) Extension.ToAlignment(Direction5) Extension.ToDirection4(Direction5, Direction4) Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Fields Center = 0 Down = 2 Left = 3 Right = 4 Up = 1"
  },
  "api/AngeliA.Direction8.html": {
    "href": "api/AngeliA.Direction8.html",
    "title": "Enum Direction8 | AngeliA",
    "summary": "Enum Direction8 Namespace AngeliA Assembly AngeliA Framework.dll public enum Direction8 : byte Extension Methods Extension.AntiClockwise(Direction8, int) Extension.Clockwise(Direction8, int) Extension.GetRotation(Direction8) Extension.IsBottom(Direction8) Extension.IsHorizontal(Direction8) Extension.IsLeft(Direction8) Extension.IsPositive(Direction8) Extension.IsRight(Direction8) Extension.IsTilted(Direction8) Extension.IsTop(Direction8) Extension.IsVertical(Direction8) Extension.Next<E>(E) Extension.Normal(Direction8) Extension.Opposite(Direction8) Extension.Prev<E>(E) Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Fields Bottom = 4 BottomLeft = 5 BottomRight = 3 Left = 6 Right = 2 Top = 0 TopLeft = 7 TopRight = 1"
  },
  "api/AngeliA.DynamicClampCellScope.html": {
    "href": "api/AngeliA.DynamicClampCellScope.html",
    "title": "Struct DynamicClampCellScope | AngeliA",
    "summary": "Struct DynamicClampCellScope Namespace AngeliA Assembly AngeliA Framework.dll public readonly struct DynamicClampCellScope : IDisposable Implements IDisposable Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Constructors DynamicClampCellScope(IRect) public DynamicClampCellScope(IRect rect) Parameters rect IRect Methods Dispose() Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources. public void Dispose()"
  },
  "api/AngeliA.Ear.html": {
    "href": "api/AngeliA.Ear.html",
    "title": "Class Ear | AngeliA",
    "summary": "Class Ear Namespace AngeliA Assembly AngeliA Framework.dll public abstract class Ear : BodyGadget Inheritance object BodyGadget Ear Derived ModularEar Inherited Members BodyGadget.BodyGadgetSystemReady BodyGadget.SheetIndex BodyGadget.GadgetID BodyGadget.GadgetName BodyGadget.ForAllGadget() BodyGadget.GetDefaultGadgetID(int, BodyGadgetType) BodyGadget.TryGetGadget(int, out BodyGadget) BodyGadget.GetDisplayName(string, out int) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Properties GadgetType public override sealed BodyGadgetType GadgetType { get; } Property Value BodyGadgetType MotionAmount protected virtual int MotionAmount { get; } Property Value int SpriteEarLeft public OrientedSprite SpriteEarLeft { get; } Property Value OrientedSprite SpriteEarRight public OrientedSprite SpriteEarRight { get; } Property Value OrientedSprite SpriteLoaded public override bool SpriteLoaded { get; } Property Value bool Methods DrawGadget(PoseCharacterRenderer) public override void DrawGadget(PoseCharacterRenderer renderer) Parameters renderer PoseCharacterRenderer DrawGadgetFromPool(PoseCharacterRenderer) public static void DrawGadgetFromPool(PoseCharacterRenderer renderer) Parameters renderer PoseCharacterRenderer DrawGadgetGizmos(IRect, Color32, int) public override void DrawGadgetGizmos(IRect rect, Color32 tint, int z) Parameters rect IRect tint Color32 z int DrawSpriteAsEar(PoseCharacterRenderer, OrientedSprite, OrientedSprite, bool, bool, int, bool) public static void DrawSpriteAsEar(PoseCharacterRenderer renderer, OrientedSprite spriteLeft, OrientedSprite spriteRight, bool frontOfHeadL = true, bool frontOfHeadR = true, int motionAmount = 1000, bool selfMotion = true) Parameters renderer PoseCharacterRenderer spriteLeft OrientedSprite spriteRight OrientedSprite frontOfHeadL bool frontOfHeadR bool motionAmount int selfMotion bool FillFromSheet(string) public override bool FillFromSheet(string basicName) Parameters basicName string Returns bool FrontOfHeadL(PoseCharacterRenderer) protected virtual bool FrontOfHeadL(PoseCharacterRenderer renderer) Parameters renderer PoseCharacterRenderer Returns bool FrontOfHeadR(PoseCharacterRenderer) protected virtual bool FrontOfHeadR(PoseCharacterRenderer renderer) Parameters renderer PoseCharacterRenderer Returns bool"
  },
  "api/AngeliA.Ease.html": {
    "href": "api/AngeliA.Ease.html",
    "title": "Class Ease | AngeliA",
    "summary": "Class Ease Namespace AngeliA Assembly AngeliA Framework.dll public static class Ease Inheritance object Ease Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods InBack(float) public static float InBack(float x) Parameters x float Returns float InBounce(float) public static float InBounce(float x) Parameters x float Returns float InCirc(float) public static float InCirc(float x) Parameters x float Returns float InCubic(float) public static float InCubic(float x) Parameters x float Returns float InElastic(float) public static float InElastic(float x) Parameters x float Returns float InExpo(float) public static float InExpo(float x) Parameters x float Returns float InLiner(float) public static float InLiner(float x) Parameters x float Returns float InOutBack(float) public static float InOutBack(float x) Parameters x float Returns float InOutBounce(float) public static float InOutBounce(float x) Parameters x float Returns float InOutCirc(float) public static float InOutCirc(float x) Parameters x float Returns float InOutCubic(float) public static float InOutCubic(float x) Parameters x float Returns float InOutElastic(float) public static float InOutElastic(float x) Parameters x float Returns float InOutExpo(float) public static float InOutExpo(float x) Parameters x float Returns float InOutLiner(float) public static float InOutLiner(float x) Parameters x float Returns float InOutQuad(float) public static float InOutQuad(float x) Parameters x float Returns float InOutQuart(float) public static float InOutQuart(float x) Parameters x float Returns float InOutQuint(float) public static float InOutQuint(float x) Parameters x float Returns float InOutSine(float) public static float InOutSine(float x) Parameters x float Returns float InQuad(float) public static float InQuad(float x) Parameters x float Returns float InQuart(float) public static float InQuart(float x) Parameters x float Returns float InQuint(float) public static float InQuint(float x) Parameters x float Returns float InSine(float) public static float InSine(float x) Parameters x float Returns float OutBack(float) public static float OutBack(float x) Parameters x float Returns float OutBounce(float) public static float OutBounce(float x) Parameters x float Returns float OutCirc(float) public static float OutCirc(float x) Parameters x float Returns float OutCubic(float) public static float OutCubic(float x) Parameters x float Returns float OutElastic(float) public static float OutElastic(float x) Parameters x float Returns float OutExpo(float) public static float OutExpo(float x) Parameters x float Returns float OutLiner(float) public static float OutLiner(float x) Parameters x float Returns float OutQuad(float) public static float OutQuad(float x) Parameters x float Returns float OutQuart(float) public static float OutQuart(float x) Parameters x float Returns float OutQuint(float) public static float OutQuint(float x) Parameters x float Returns float OutSine(float) public static float OutSine(float x) Parameters x float Returns float"
  },
  "api/AngeliA.EchoDictionary-2.html": {
    "href": "api/AngeliA.EchoDictionary-2.html",
    "title": "Class EchoDictionary<TKey, TValue> | AngeliA",
    "summary": "Class EchoDictionary<TKey, TValue> Namespace AngeliA Assembly AngeliA Framework.dll public class EchoDictionary<TKey, TValue> : IEnumerable<KeyValuePair<TKey, TValue>>, IEnumerable Type Parameters TKey TValue Inheritance object EchoDictionary<TKey, TValue> Implements IEnumerable<KeyValuePair<TKey, TValue>> IEnumerable Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.JoinArray<T>(IEnumerable<T>, Func<T, string>, char) Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Properties Count public int Count { get; } Property Value int this[TKey] public TValue this[TKey key] { get; set; } Parameters key TKey Property Value TValue this[TValue] public TKey this[TValue tValue] { get; set; } Parameters tValue TValue Property Value TKey Methods Add(TKey, TValue) public void Add(TKey key, TValue value) Parameters key TKey value TValue Clear() public void Clear() ContainsAny(TKey, TValue) public bool ContainsAny(TKey key, TValue value) Parameters key TKey value TValue Returns bool ContainsKey(TKey) public bool ContainsKey(TKey key) Parameters key TKey Returns bool ContainsPair(TKey, TValue) public bool ContainsPair(TKey key, TValue value) Parameters key TKey value TValue Returns bool ContainsValue(TValue) public bool ContainsValue(TValue value) Parameters value TValue Returns bool GetEnumerator() Returns an enumerator that iterates through the collection. public IEnumerator<KeyValuePair<TKey, TValue>> GetEnumerator() Returns IEnumerator<KeyValuePair<TKey, TValue>> An enumerator that can be used to iterate through the collection. GetKey(TValue) public TKey GetKey(TValue value) Parameters value TValue Returns TKey GetValue(TKey) public TValue GetValue(TKey key) Parameters key TKey Returns TValue Remove(TKey) public bool Remove(TKey key) Parameters key TKey Returns bool Remove(TKey, out TValue) public bool Remove(TKey key, out TValue value) Parameters key TKey value TValue Returns bool Remove(TValue) public bool Remove(TValue value) Parameters value TValue Returns bool Remove(TValue, out TKey) public bool Remove(TValue value, out TKey key) Parameters value TValue key TKey Returns bool SetValue(TKey, TValue) public void SetValue(TKey key, TValue value) Parameters key TKey value TValue TryAdd(TKey, TValue) public bool TryAdd(TKey key, TValue value) Parameters key TKey value TValue Returns bool TryGetKey(TValue, out TKey) public bool TryGetKey(TValue value, out TKey key) Parameters value TValue key TKey Returns bool TryGetValue(TKey, out TValue) public bool TryGetValue(TKey key, out TValue value) Parameters key TKey value TValue Returns bool"
  },
  "api/AngeliA.EmptyScope.html": {
    "href": "api/AngeliA.EmptyScope.html",
    "title": "Struct EmptyScope | AngeliA",
    "summary": "Struct EmptyScope Namespace AngeliA Assembly AngeliA Framework.dll public readonly struct EmptyScope : IDisposable Implements IDisposable Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Methods Dispose() Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources. public void Dispose()"
  },
  "api/AngeliA.EnablePlayerSystemAttribute.html": {
    "href": "api/AngeliA.EnablePlayerSystemAttribute.html",
    "title": "Class EnablePlayerSystemAttribute | AngeliA",
    "summary": "Class EnablePlayerSystemAttribute Namespace AngeliA Assembly AngeliA Framework.dll The current application use player system or not [AttributeUsage(AttributeTargets.Assembly, AllowMultiple = true)] public class EnablePlayerSystemAttribute : Attribute Inheritance object Attribute EnablePlayerSystemAttribute Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.Entity.html": {
    "href": "api/AngeliA.Entity.html",
    "title": "Class Entity | AngeliA",
    "summary": "Class Entity Namespace AngeliA Assembly AngeliA Framework.dll [Entity.Capacity(4096, 0)] [Entity.MapEditorGroup(\"Entity\", 0)] [Entity.Layer(1)] public abstract class Entity : IMapItem Inheritance object Entity Implements IMapItem Derived Bullet EntityUI GroupAnimationHolder Particle BulletShooter Burner<F> CameraAutoScroll CameraGate CarryingPipe ChainCrusher CheckAltar CheckPoint Collectable Conveyor DonutBlock Door Explosion Fire FloatingCombatText FrozenZone Furniture Launcher Leaf Liquid MiniGame MomentumBooster Oneway Plant Platform Portal Slope Tornado Track TrapDoor Wallpaper Rigidbody Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Constructors Entity() public Entity() Properties Active public bool Active { get; set; } Property Value bool Center public Int2 Center { get; } Property Value Int2 CenterX public int CenterX { get; } Property Value int CenterY public int CenterY { get; } Property Value int FromWorld public bool FromWorld { get; } Property Value bool Height public int Height { get; set; } Property Value int IgnoreReposition public bool IgnoreReposition { get; set; } Property Value bool InstanceID public Int3 InstanceID { get; } Property Value Int3 InstanceOrder public int InstanceOrder { get; } Property Value int MapUnitPos public Int3? MapUnitPos { get; } Property Value Int3? PivotUnitPosition public Int3 PivotUnitPosition { get; } Property Value Int3 Rect public virtual IRect Rect { get; } Property Value IRect Size public Int2 Size { get; set; } Property Value Int2 SpawnFrame public int SpawnFrame { get; protected set; } Property Value int TypeID public int TypeID { get; init; } Property Value int Width public int Width { get; set; } Property Value int X public int X { get; set; } Property Value int XY public Int2 XY { get; set; } Property Value Int2 Y public int Y { get; set; } Property Value int Methods AfterReposition(Int3, Int3) public virtual void AfterReposition(Int3 fromUnitPos, Int3 toUnitPos) Parameters fromUnitPos Int3 toUnitPos Int3 BeforeUpdate() public virtual void BeforeUpdate() CancelIgnoreDespawnFromMap() public void CancelIgnoreDespawnFromMap() Draw() public Cell Draw() Returns Cell FirstUpdate() public virtual void FirstUpdate() IgnoreDespawnFromMap(int) public void IgnoreDespawnFromMap(int duration = 1) Parameters duration int LateUpdate() public virtual void LateUpdate() OnActivated() public virtual void OnActivated() OnInactivated() public virtual void OnInactivated() Update() public virtual void Update()"
  },
  "api/AngeliA.EntityAttribute.CapacityAttribute.html": {
    "href": "api/AngeliA.EntityAttribute.CapacityAttribute.html",
    "title": "Class EntityAttribute.CapacityAttribute | AngeliA",
    "summary": "Class EntityAttribute.CapacityAttribute Namespace AngeliA Assembly AngeliA Framework.dll Spawn limit count of this entity [AttributeUsage(AttributeTargets.Class)] public class EntityAttribute.CapacityAttribute : Attribute Inheritance object Attribute EntityAttribute.CapacityAttribute Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Constructors CapacityAttribute(int, int) Spawn limit count of this entity public CapacityAttribute(int capacity, int preSpawn = 0) Parameters capacity int preSpawn int Create this many instance of the entity when game initialize"
  },
  "api/AngeliA.EntityAttribute.DontDespawnOutOfRangeAttribute.html": {
    "href": "api/AngeliA.EntityAttribute.DontDespawnOutOfRangeAttribute.html",
    "title": "Class EntityAttribute.DontDespawnOutOfRangeAttribute | AngeliA",
    "summary": "Class EntityAttribute.DontDespawnOutOfRangeAttribute Namespace AngeliA Assembly AngeliA Framework.dll Do not despawn this entity when it's out of view rect [AttributeUsage(AttributeTargets.Class)] public class EntityAttribute.DontDespawnOutOfRangeAttribute : Attribute Inheritance object Attribute EntityAttribute.DontDespawnOutOfRangeAttribute Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.EntityAttribute.DontDestroyOnZChangedAttribute.html": {
    "href": "api/AngeliA.EntityAttribute.DontDestroyOnZChangedAttribute.html",
    "title": "Class EntityAttribute.DontDestroyOnZChangedAttribute | AngeliA",
    "summary": "Class EntityAttribute.DontDestroyOnZChangedAttribute Namespace AngeliA Assembly AngeliA Framework.dll This entity do not despawn when player enter another map layer [AttributeUsage(AttributeTargets.Class)] public class EntityAttribute.DontDestroyOnZChangedAttribute : Attribute Inheritance object Attribute EntityAttribute.DontDestroyOnZChangedAttribute Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.EntityAttribute.DontDrawBehindAttribute.html": {
    "href": "api/AngeliA.EntityAttribute.DontDrawBehindAttribute.html",
    "title": "Class EntityAttribute.DontDrawBehindAttribute | AngeliA",
    "summary": "Class EntityAttribute.DontDrawBehindAttribute Namespace AngeliA Assembly AngeliA Framework.dll This entity will not display on the behind layer [AttributeUsage(AttributeTargets.Class)] public class EntityAttribute.DontDrawBehindAttribute : Attribute Inheritance object Attribute EntityAttribute.DontDrawBehindAttribute Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.EntityAttribute.DontSpawnFromWorld.html": {
    "href": "api/AngeliA.EntityAttribute.DontSpawnFromWorld.html",
    "title": "Class EntityAttribute.DontSpawnFromWorld | AngeliA",
    "summary": "Class EntityAttribute.DontSpawnFromWorld Namespace AngeliA Assembly AngeliA Framework.dll Do not spawn this entity when it's painted into the map [AttributeUsage(AttributeTargets.Class)] public class EntityAttribute.DontSpawnFromWorld : Attribute Inheritance object Attribute EntityAttribute.DontSpawnFromWorld Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.EntityAttribute.ExcludeInMapEditorAttribute.html": {
    "href": "api/AngeliA.EntityAttribute.ExcludeInMapEditorAttribute.html",
    "title": "Class EntityAttribute.ExcludeInMapEditorAttribute | AngeliA",
    "summary": "Class EntityAttribute.ExcludeInMapEditorAttribute Namespace AngeliA Assembly AngeliA Framework.dll Do not show this entity inside the palette panel of map editor. [AttributeUsage(AttributeTargets.Class)] public class EntityAttribute.ExcludeInMapEditorAttribute : Attribute Inheritance object Attribute EntityAttribute.ExcludeInMapEditorAttribute Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.EntityAttribute.LayerAttribute.html": {
    "href": "api/AngeliA.EntityAttribute.LayerAttribute.html",
    "title": "Class EntityAttribute.LayerAttribute | AngeliA",
    "summary": "Class EntityAttribute.LayerAttribute Namespace AngeliA Assembly AngeliA Framework.dll Which layer should this entity spawn inside. [AttributeUsage(AttributeTargets.Class)] public class EntityAttribute.LayerAttribute : Attribute Inheritance object Attribute EntityAttribute.LayerAttribute Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Constructors LayerAttribute(int) Which layer should this entity spawn inside. public LayerAttribute(int layer) Parameters layer int"
  },
  "api/AngeliA.EntityAttribute.MapEditorGroupAttribute.html": {
    "href": "api/AngeliA.EntityAttribute.MapEditorGroupAttribute.html",
    "title": "Class EntityAttribute.MapEditorGroupAttribute | AngeliA",
    "summary": "Class EntityAttribute.MapEditorGroupAttribute Namespace AngeliA Assembly AngeliA Framework.dll Which map editor palette group should this entity in [AttributeUsage(AttributeTargets.Class, Inherited = true)] public class EntityAttribute.MapEditorGroupAttribute : Attribute Inheritance object Attribute EntityAttribute.MapEditorGroupAttribute Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Constructors MapEditorGroupAttribute(string, int) Which map editor palette group should this entity in public MapEditorGroupAttribute(string groupName, int order = 0) Parameters groupName string order int"
  },
  "api/AngeliA.EntityAttribute.RepositionWhenInactiveAttribute.html": {
    "href": "api/AngeliA.EntityAttribute.RepositionWhenInactiveAttribute.html",
    "title": "Class EntityAttribute.RepositionWhenInactiveAttribute | AngeliA",
    "summary": "Class EntityAttribute.RepositionWhenInactiveAttribute Namespace AngeliA Assembly AngeliA Framework.dll When the entity despawn, reset the position in map. So next time it will be load from the position where it last appeared [AttributeUsage(AttributeTargets.Class)] public class EntityAttribute.RepositionWhenInactiveAttribute : Attribute Inheritance object Attribute EntityAttribute.RepositionWhenInactiveAttribute Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Constructors RepositionWhenInactiveAttribute(bool) When the entity despawn, reset the position in map. So next time it will be load from the position where it last appeared public RepositionWhenInactiveAttribute(bool requireReposition = true) Parameters requireReposition bool Disable reposition by setting this to False"
  },
  "api/AngeliA.EntityAttribute.SpawnWithCheatCodeAttribute.html": {
    "href": "api/AngeliA.EntityAttribute.SpawnWithCheatCodeAttribute.html",
    "title": "Class EntityAttribute.SpawnWithCheatCodeAttribute | AngeliA",
    "summary": "Class EntityAttribute.SpawnWithCheatCodeAttribute Namespace AngeliA Assembly AngeliA Framework.dll Player can use \"Spawn---\" to spawn this entity to stage. [AttributeUsage(AttributeTargets.Class)] public class EntityAttribute.SpawnWithCheatCodeAttribute : Attribute Inheritance object Attribute EntityAttribute.SpawnWithCheatCodeAttribute Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.EntityAttribute.StageOrderAttribute.html": {
    "href": "api/AngeliA.EntityAttribute.StageOrderAttribute.html",
    "title": "Class EntityAttribute.StageOrderAttribute | AngeliA",
    "summary": "Class EntityAttribute.StageOrderAttribute Namespace AngeliA Assembly AngeliA Framework.dll The order in which this entity gets updated in it's layer [AttributeUsage(AttributeTargets.Class)] public class EntityAttribute.StageOrderAttribute : Attribute Inheritance object Attribute EntityAttribute.StageOrderAttribute Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Constructors StageOrderAttribute(int) The order in which this entity gets updated in it's layer public StageOrderAttribute(int order) Parameters order int"
  },
  "api/AngeliA.EntityAttribute.UpdateOutOfRangeAttribute.html": {
    "href": "api/AngeliA.EntityAttribute.UpdateOutOfRangeAttribute.html",
    "title": "Class EntityAttribute.UpdateOutOfRangeAttribute | AngeliA",
    "summary": "Class EntityAttribute.UpdateOutOfRangeAttribute Namespace AngeliA Assembly AngeliA Framework.dll This entity will update when it's outside view rect [AttributeUsage(AttributeTargets.Class)] public class EntityAttribute.UpdateOutOfRangeAttribute : Attribute Inheritance object Attribute EntityAttribute.UpdateOutOfRangeAttribute Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.EntityAttribute.html": {
    "href": "api/AngeliA.EntityAttribute.html",
    "title": "Class EntityAttribute | AngeliA",
    "summary": "Class EntityAttribute Namespace AngeliA Assembly AngeliA Framework.dll Attribute for entities public static class EntityAttribute Inheritance object EntityAttribute Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString()"
  },
  "api/AngeliA.EntityHookTask.html": {
    "href": "api/AngeliA.EntityHookTask.html",
    "title": "Class EntityHookTask | AngeliA",
    "summary": "Class EntityHookTask Namespace AngeliA Assembly AngeliA Framework.dll public class EntityHookTask : Task Inheritance object Task EntityHookTask Inherited Members Task.LocalFrame Task.UserData Task.OnStart() Task.OnEnd() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Fields TYPE_ID public static readonly int TYPE_ID Field Value int Methods FrameUpdate() public override TaskResult FrameUpdate() Returns TaskResult"
  },
  "api/AngeliA.EntityLayer.html": {
    "href": "api/AngeliA.EntityLayer.html",
    "title": "Class EntityLayer | AngeliA",
    "summary": "Class EntityLayer Namespace AngeliA Assembly AngeliA Framework.dll Layer for entity spawning public static class EntityLayer Inheritance object EntityLayer Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields BULLET public const int BULLET = 5 Field Value int CHARACTER public const int CHARACTER = 2 Field Value int COUNT public const int COUNT = 8 Field Value int DECORATE public const int DECORATE = 7 Field Value int ENVIRONMENT public const int ENVIRONMENT = 3 Field Value int GAME public const int GAME = 1 Field Value int ITEM public const int ITEM = 6 Field Value int LAYER_NAMES public static readonly string[] LAYER_NAMES Field Value string[] UI public const int UI = 0 Field Value int WATER public const int WATER = 4 Field Value int"
  },
  "api/AngeliA.EntityLayerCapacityAttribute.html": {
    "href": "api/AngeliA.EntityLayerCapacityAttribute.html",
    "title": "Class EntityLayerCapacityAttribute | AngeliA",
    "summary": "Class EntityLayerCapacityAttribute Namespace AngeliA Assembly AngeliA Framework.dll Max entity count for the layer [AttributeUsage(AttributeTargets.Assembly, AllowMultiple = true)] public class EntityLayerCapacityAttribute : Attribute Inheritance object Attribute EntityLayerCapacityAttribute Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Constructors EntityLayerCapacityAttribute(int, int) Max entity count for the layer public EntityLayerCapacityAttribute(int layer, int capacity) Parameters layer int capacity int"
  },
  "api/AngeliA.EntityUI.html": {
    "href": "api/AngeliA.EntityUI.html",
    "title": "Class EntityUI | AngeliA",
    "summary": "Class EntityUI Namespace AngeliA Assembly AngeliA Framework.dll [Entity.MapEditorGroup(\"UI\", 0)] [Entity.Capacity(1, 0)] [Entity.Layer(0)] public abstract class EntityUI : Entity, IMapItem Inheritance object Entity EntityUI Implements IMapItem Derived ControlHintUI DialogueUI FileBrowserUI GenericPopupUI MenuUI NotificationUI PlayerMenuUI PlayerQuickMenuUI WindowUI Inherited Members Entity.Active Entity.X Entity.Y Entity.Width Entity.Height Entity.TypeID Entity.SpawnFrame Entity.FromWorld Entity.Rect Entity.InstanceOrder Entity.MapUnitPos Entity.InstanceID Entity.IgnoreReposition Entity.XY Entity.Size Entity.Center Entity.CenterX Entity.CenterY Entity.PivotUnitPosition Entity.OnActivated() Entity.OnInactivated() Entity.BeforeUpdate() Entity.AfterReposition(Int3, Int3) Entity.IgnoreDespawnFromMap(int) Entity.CancelIgnoreDespawnFromMap() Entity.Draw() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Constructors EntityUI() public EntityUI() Properties BlockEvent protected virtual bool BlockEvent { get; } Property Value bool Methods FirstUpdate() public override void FirstUpdate() LateUpdate() public override void LateUpdate() Unify(int) protected static int Unify(int value) Parameters value int Returns int Update() public override void Update() UpdateUI() public virtual void UpdateUI()"
  },
  "api/AngeliA.EnvironmentShadowScope.html": {
    "href": "api/AngeliA.EnvironmentShadowScope.html",
    "title": "Struct EnvironmentShadowScope | AngeliA",
    "summary": "Struct EnvironmentShadowScope Namespace AngeliA Assembly AngeliA Framework.dll public readonly struct EnvironmentShadowScope : IDisposable Implements IDisposable Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Constructors EnvironmentShadowScope() public EnvironmentShadowScope() EnvironmentShadowScope(int, int, byte, int) public EnvironmentShadowScope(int offsetX = -64, int offsetY = 0, byte alpha = 64, int z = -65520) Parameters offsetX int offsetY int alpha byte z int Fields Alpha public readonly byte Alpha Field Value byte OffsetX public readonly int OffsetX Field Value int OffsetY public readonly int OffsetY Field Value int Z public readonly int Z Field Value int Methods Dispose() Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources. public void Dispose()"
  },
  "api/AngeliA.Equipment.html": {
    "href": "api/AngeliA.Equipment.html",
    "title": "Class Equipment | AngeliA",
    "summary": "Class Equipment Namespace AngeliA Assembly AngeliA Framework.dll [Entity.MapEditorGroup(\"ItemEquipment\", 0)] public abstract class Equipment : Item, IMapItem Inheritance object Item Equipment Implements IMapItem Derived HandTool Jewelry Armor<P, N> Inherited Members Item.AllowDuplicateUpdate Item.EmbedIntoLevel Item.TypeID Item.BeforeItemUpdate_FromInventory(Character, int, int) Item.OnItemUpdate_FromInventory(Character, int, int) Item.OnPoseAnimationUpdate_FromInventory(PoseCharacterRenderer, int, int) Item.OnTakeDamage_FromInventory(Character, int, int, ref Damage) Item.OnCharacterAttack_FromInventory(Character, Bullet, int, int) Item.BeforeItemUpdate_FromEquipment(Character) Item.OnItemUpdate_FromEquipment(Character) Item.BeforePoseAnimationUpdate_FromEquipment(PoseCharacterRenderer) Item.OnPoseAnimationUpdate_FromEquipment(PoseCharacterRenderer) Item.OnTakeDamage_FromEquipment(Character, ref Damage) Item.OnCharacterAttack_FromEquipment(Character, Bullet) Item.TryRepairEquipment(Character) Item.OnItemUpdate_FromItemHolder(ItemHolder, int) Item.OnCollect(Character) Item.CanUse(Character) Item.Use(Character, int, int, out bool) Item.ItemConditionCheck(Character) Item.DrawItem(Entity, IRect, Color32, int) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Properties EquipmentType public abstract EquipmentType EquipmentType { get; } Property Value EquipmentType MaxStackCount public override int MaxStackCount { get; } Property Value int"
  },
  "api/AngeliA.EquipmentType.html": {
    "href": "api/AngeliA.EquipmentType.html",
    "title": "Enum EquipmentType | AngeliA",
    "summary": "Enum EquipmentType Namespace AngeliA Assembly AngeliA Framework.dll public enum EquipmentType Extension Methods Extension.Next<E>(E) Extension.Prev<E>(E) Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Fields BodyArmor = 1 Gloves = 4 HandTool = 0 Helmet = 2 Jewelry = 5 Shoes = 3"
  },
  "api/AngeliA.EventAttribute.html": {
    "href": "api/AngeliA.EventAttribute.html",
    "title": "Class EventAttribute | AngeliA",
    "summary": "Class EventAttribute Namespace AngeliA Assembly AngeliA Framework.dll Attribute for link all static methods with a System.Action. When the action is invoked, all methods get called. [AttributeUsage(AttributeTargets.Method|AttributeTargets.Field, AllowMultiple = false)] public abstract class EventAttribute : OrderedAttribute Inheritance object Attribute OrderedAttribute EventAttribute Derived AfterLateUpdateAttribute AfterLayerFrameUpdate_IntLayerAttribute AfterLevelRenderedAttribute BeforeBeforeUpdateAttribute BeforeFirstUpdateAttribute BeforeLateUpdateAttribute BeforeLayerFrameUpdate_IntLayerAttribute BeforeLevelRenderedAttribute BeforeUpdateUpdateAttribute CheatCodeAttribute OnBlockPicked_IntSpriteID_IRectAttribute OnBulletHitEnvironment_Bullet OnCameOutOfWater_Rigidbody_EntityAttribute OnCharacterCrash_Entity OnCharacterFly_Entity OnCharacterFootStepped_Entity OnCharacterJump_Entity OnCharacterPassOut_Entity OnCharacterPound_Entity OnCharacterSleeping_Entity OnCharacterSlideStepped_Entity OnCharacterTeleport_Entity OnCheatPerformed_StringCodeAttribute OnCircuitWireActived_Int3UnitPosAttribute OnDealDamage_Damage_IDamageReceiver OnFallIntoWater_Rigidbody_EntityAttribute OnFileDropped_StringPathAttribute OnGameFocusedAttribute OnGameLostFocusAttribute OnGameQuittingAttribute OnGameRestartAttribute OnGameTryingToQuitAttribute OnGameUpdateAttribute OnGameUpdateLaterAttribute OnGameUpdatePauselessAttribute OnItemCollected_Entity_Int2Pos_IntItemID_IntItemCountAttribute OnItemDamage_Character_IntItemBefore_IntItemAfterAttribute OnItemError_Entity_Int2Pos_IntIconID OnItemLost_Character_IntItemIDAttribute OnItemUnlocked_IntItemIDAttribute OnLanguageChangedAttribute OnMainSheetReloadAttribute OnMapEditorModeChange_ModeAttribute OnObjectBreak_IntSpriteID_IRectAttribute OnObjectFreeFall_IntSpriteID_Int2Pos_IntRot_BoolFlip_Int2Velocity_IntRotSpeed_IntGravityAttribute OnRemoteSettingChanged_IntID_IntDataAttribute OnTransferArrivedAttribute_IntEntityID_Int3UnitPos_ObjectData OnTransferPassAttribute_Int3UnitPos_ObjectData OnViewZChangedAttribute OnWindowSizeChangedAttribute OnWorldCreatedBySquad_WorldAttribute OnWorldLoadedBySquad_WorldAttribute OnWorldSavedByMapEditor_WorldAttribute Inherited Members OrderedAttribute.InvokeAsAutoOrderingTask<A>() Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Constructors EventAttribute(int) Attribute for link all static methods with a System.Action. When the action is invoked, all methods get called. protected EventAttribute(int order = 0) Parameters order int"
  },
  "api/AngeliA.Extension.html": {
    "href": "api/AngeliA.Extension.html",
    "title": "Class Extension | AngeliA",
    "summary": "Class Extension Namespace AngeliA Assembly AngeliA Framework.dll public static class Extension Inheritance object Extension Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Abs(int) public static int Abs(this int value) Parameters value int Returns int Abs(float) public static float Abs(this float value) Parameters value float Returns float AddDistinct<T>(IList<T>, T) public static void AddDistinct<T>(this IList<T> list, T item) Parameters list IList<T> item T Type Parameters T Adjust(Color32, float, float, float, float) public static Color32 Adjust(this Color32 color, float hue, float saturation, float volume, float alpha) Parameters color Color32 hue float saturation float volume float alpha float Returns Color32 Almost(ColorF, ColorF) public static bool Almost(this ColorF a, ColorF b) Parameters a ColorF b ColorF Returns bool Almost(FRect, FRect) public static bool Almost(this FRect a, FRect b) Parameters a FRect b FRect Returns bool Almost(Float2, Float2) public static bool Almost(this Float2 a, Float2 b) Parameters a Float2 b Float2 Returns bool Almost(Float3, Float3) public static bool Almost(this Float3 a, Float3 b) Parameters a Float3 b Float3 Returns bool Almost(float, float) public static bool Almost(this float a, float b) Parameters a float b float Returns bool AlmostZero(Float4) public static bool AlmostZero(this Float4 value) Parameters value Float4 Returns bool AlmostZero(float) public static bool AlmostZero(this float a) Parameters a float Returns bool AngeHash(string) Hash code that used inside AngeliA public static int AngeHash(this string str) Parameters str string Returns int AngeHash(string, int, int) Hash code that used inside AngeliA public static int AngeHash(this string str, int start, int length) Parameters str string start int length int Returns int AngeHash(Type) Hash code that used inside AngeliA public static int AngeHash(this Type type) Parameters type Type Returns int AngeName(Type) Name of this type that used inside AngeliA public static string AngeName(this Type type) Parameters type Type Returns string AngeReverseHash(char[], int, int) Hash code that used inside AngeliA but generate with the reversed string data public static int AngeReverseHash(this char[] arr, int start, int length) Parameters arr char[] start int length int Returns int AntiClockwise(Direction4) public static Direction4 AntiClockwise(this Direction4 dir) Parameters dir Direction4 Returns Direction4 AntiClockwise(Direction5) public static Direction5 AntiClockwise(this Direction5 dir) Parameters dir Direction5 Returns Direction5 AntiClockwise(Direction8, int) public static Direction8 AntiClockwise(this Direction8 dir, int count = 1) Parameters dir Direction8 count int Returns Direction8 AppendWithDoubleQuotes(StringBuilder, string) public static void AppendWithDoubleQuotes(this StringBuilder builder, string content) Parameters builder StringBuilder content string BottomHalf(IRect) public static IRect BottomHalf(this IRect rect) Parameters rect IRect Returns IRect BottomLeft(FRect) public static Float2 BottomLeft(this FRect rect) Parameters rect FRect Returns Float2 BottomLeft(IRect) public static Int2 BottomLeft(this IRect rect) Parameters rect IRect Returns Int2 BottomMid(IRect) public static Int2 BottomMid(this IRect rect) Parameters rect IRect Returns Int2 BottomRight(FRect) public static Float2 BottomRight(this FRect rect) Parameters rect FRect Returns Float2 BottomRight(IRect) public static Int2 BottomRight(this IRect rect) Parameters rect IRect Returns Int2 Bytes_to_Pixels(byte[], int, int) public static Color32[] Bytes_to_Pixels(this byte[] bytes, int width, int height) Parameters bytes byte[] width int height int Returns Color32[] Ceil(float) public static float Ceil(this float a) Parameters a float Returns float CeilDivide(int, int) public static int CeilDivide(this int value, int target) Parameters value int target int Returns int CeilToInt(Float2) public static Int2 CeilToInt(this Float2 v) Parameters v Float2 Returns Int2 CeilToInt(float) public static int CeilToInt(this float a) Parameters a float Returns int CenterInt(IRect) public static Int2 CenterInt(this IRect rect) Parameters rect IRect Returns Int2 CenterX(IRect) public static int CenterX(this IRect rect) Parameters rect IRect Returns int CenterY(IRect) public static int CenterY(this IRect rect) Parameters rect IRect Returns int Clamp(ref FRect, FRect) public static void Clamp(this ref FRect rect, FRect range) Parameters rect FRect range FRect Clamp(ref Float2, float, float, float, float) public static void Clamp(this ref Float2 v, float minX, float minY, float maxX, float maxY) Parameters v Float2 minX float minY float maxX float maxY float Clamp(IRect, IRect) public static IRect Clamp(this IRect rect, IRect range) Parameters rect IRect range IRect Returns IRect Clamp(ref Int2, IRect) public static void Clamp(this ref Int2 v, IRect range) Parameters v Int2 range IRect Clamp(ref Int2, int, int, int, int) public static void Clamp(this ref Int2 v, int minX, int minY, int maxX, int maxY) Parameters v Int2 minX int minY int maxX int maxY int Clamp(int, int, int) public static int Clamp(this int a, int min, int max) Parameters a int min int max int Returns int Clamp(float, float, float) public static float Clamp(this float a, float min, float max) Parameters a float min float max float Returns float Clamp01(float) public static float Clamp01(this float value) Parameters value float Returns float ClampDisorder(int, int, int) public static int ClampDisorder(this int a, int rangeA, int rangeB) Parameters a int rangeA int rangeB int Returns int ClampPositionInside(ref IRect, IRect) public static void ClampPositionInside(this ref IRect rect, IRect bounds) Parameters rect IRect bounds IRect Clamped(Int2, IRect) public static Int2 Clamped(this Int2 v, IRect range) Parameters v Int2 range IRect Returns Int2 Clamped(Int2, int, int, int, int) public static Int2 Clamped(this Int2 v, int minX, int minY, int maxX, int maxY) Parameters v Int2 minX int minY int maxX int maxY int Returns Int2 Clockwise(Direction4) public static Direction4 Clockwise(this Direction4 dir) Parameters dir Direction4 Returns Direction4 Clockwise(Direction5) public static Direction5 Clockwise(this Direction5 dir) Parameters dir Direction5 Returns Direction5 Clockwise(Direction8, int) public static Direction8 Clockwise(this Direction8 dir, int count = 1) Parameters dir Direction8 count int Returns Direction8 CompleteInside(FRect, FRect) public static bool CompleteInside(this FRect rect, FRect range) Parameters rect FRect range FRect Returns bool CompleteInside(IRect, IRect) public static bool CompleteInside(this IRect rect, IRect range) Parameters rect IRect range IRect Returns bool Contains(IRect, int, int) public static bool Contains(this IRect rect, int x, int y) Parameters rect IRect x int y int Returns bool CornerInside(IRect, Alignment, int) public static IRect CornerInside(this IRect rect, Alignment corner, int size) Parameters rect IRect corner Alignment size int Returns IRect CornerInside(IRect, Alignment, int, int) public static IRect CornerInside(this IRect rect, Alignment corner, int width, int height) Parameters rect IRect corner Alignment width int height int Returns IRect CornerOutside(IRect, Alignment, int) public static IRect CornerOutside(this IRect rect, Alignment corner, int size) Parameters rect IRect corner Alignment size int Returns IRect CornerOutside(IRect, Alignment, int, int) public static IRect CornerOutside(this IRect rect, Alignment corner, int width, int height) Parameters rect IRect corner Alignment width int height int Returns IRect DigitCount(int) public static int DigitCount(this int n) Parameters n int Returns int Distance(int, int) public static int Distance(this int value, int target) Parameters value int target int Returns int Dodge(IRect, IRect, out IRect?, out IRect?, out IRect?, out IRect?) public static bool Dodge(this IRect rect, IRect dodge, out IRect? resultTop, out IRect? resultMidL, out IRect? resultMidR, out IRect? resultBottom) Parameters rect IRect dodge IRect resultTop IRect? resultMidL IRect? resultMidR IRect? resultBottom IRect? Returns bool Edge(FRect, Direction4, float) public static FRect Edge(this FRect rect, Direction4 edge, float thickness = 1) Parameters rect FRect edge Direction4 thickness float Returns FRect EdgeExact(IRect, Direction4, int) public static IRect EdgeExact(this IRect rect, Direction4 edge, int size = 1) Parameters rect IRect edge Direction4 size int Returns IRect EdgeInside(IRect, Direction4, int) public static IRect EdgeInside(this IRect rect, Direction4 edge, int size = 1) Parameters rect IRect edge Direction4 size int Returns IRect EdgeInsideDown(IRect, int) public static IRect EdgeInsideDown(this IRect rect, int size) Parameters rect IRect size int Returns IRect EdgeInsideLeft(IRect, int) public static IRect EdgeInsideLeft(this IRect rect, int size) Parameters rect IRect size int Returns IRect EdgeInsideRight(IRect, int) public static IRect EdgeInsideRight(this IRect rect, int size) Parameters rect IRect size int Returns IRect EdgeInsideSquareDown(IRect) public static IRect EdgeInsideSquareDown(this IRect rect) Parameters rect IRect Returns IRect EdgeInsideSquareLeft(IRect) public static IRect EdgeInsideSquareLeft(this IRect rect) Parameters rect IRect Returns IRect EdgeInsideSquareRight(IRect) public static IRect EdgeInsideSquareRight(this IRect rect) Parameters rect IRect Returns IRect EdgeInsideSquareUp(IRect) public static IRect EdgeInsideSquareUp(this IRect rect) Parameters rect IRect Returns IRect EdgeInsideUp(IRect, int) public static IRect EdgeInsideUp(this IRect rect, int size) Parameters rect IRect size int Returns IRect EdgeOutside(IRect, Direction4, int) public static IRect EdgeOutside(this IRect rect, Direction4 edge, int size = 1) Parameters rect IRect edge Direction4 size int Returns IRect EdgeOutsideDown(IRect, int) public static IRect EdgeOutsideDown(this IRect rect, int size) Parameters rect IRect size int Returns IRect EdgeOutsideLeft(IRect, int) public static IRect EdgeOutsideLeft(this IRect rect, int size) Parameters rect IRect size int Returns IRect EdgeOutsideRight(IRect, int) public static IRect EdgeOutsideRight(this IRect rect, int size) Parameters rect IRect size int Returns IRect EdgeOutsideUp(IRect, int) public static IRect EdgeOutsideUp(this IRect rect, int size) Parameters rect IRect size int Returns IRect EnumLength(Type) public static int EnumLength(this Type @enum) Parameters enum Type Returns int Envelope(FRect, float) public static FRect Envelope(this FRect rect, float targetAspect) Parameters rect FRect targetAspect float Returns FRect Envelope(IRect, int, int) public static IRect Envelope(this IRect innerRect, int aspWidth, int aspHeight) Parameters innerRect IRect aspWidth int aspHeight int Returns IRect Expand(FRect, float) public static FRect Expand(this FRect rect, float offset) Parameters rect FRect offset float Returns FRect Expand(FRect, float, float, float, float) public static FRect Expand(this FRect rect, float l, float r, float d, float u) Parameters rect FRect l float r float d float u float Returns FRect Expand(IRect, Int4) public static IRect Expand(this IRect rect, Int4 offset) Parameters rect IRect offset Int4 Returns IRect Expand(IRect, int) public static IRect Expand(this IRect rect, int offset) Parameters rect IRect offset int Returns IRect Expand(IRect, int, int, int, int) public static IRect Expand(this IRect rect, int l, int r, int d, int u) Parameters rect IRect l int r int d int u int Returns IRect ExpandHorizontal(IRect, int) public static IRect ExpandHorizontal(this IRect rect, int offset) Parameters rect IRect offset int Returns IRect ExpandToIRect(FRect) public static IRect ExpandToIRect(this FRect rect) Parameters rect FRect Returns IRect ExpandVertical(IRect, int) public static IRect ExpandVertical(this IRect rect, int offset) Parameters rect IRect offset int Returns IRect FillWithNewValue<A>(A[]) public static A[] FillWithNewValue<A>(this A[] arr) where A : new() Parameters arr A[] Returns A[] Type Parameters A FillWithValue<A>(A[], A) public static A[] FillWithValue<A>(this A[] arr, A value) Parameters arr A[] value A Returns A[] Type Parameters A Fit(FRect, float, float, float) public static FRect Fit(this FRect rect, float targetAspect, float pivotX = 0.5, float pivotY = 0.5) Parameters rect FRect targetAspect float pivotX float pivotY float Returns FRect Fit(IRect, AngeSprite, int, int) public static IRect Fit(this IRect rect, AngeSprite sprite, int pivotX = 500, int pivotY = 500) Parameters rect IRect sprite AngeSprite pivotX int pivotY int Returns IRect Fit(IRect, int, int, int, int) public static IRect Fit(this IRect rect, int outterWidth, int outterHeight, int pivotX = 500, int pivotY = 500) Parameters rect IRect outterWidth int outterHeight int pivotX int pivotY int Returns IRect FlipHorizontal(ref IRect) public static void FlipHorizontal(this ref IRect rect) Parameters rect IRect FlipNegative(ref IRect) public static void FlipNegative(this ref IRect rect) Parameters rect IRect FlipVertical(ref IRect) public static void FlipVertical(this ref IRect rect) Parameters rect IRect Floor(float) public static float Floor(this float a) Parameters a float Returns float FloorToInt(Float2) public static Int2 FloorToInt(this Float2 v) Parameters v Float2 Returns Int2 FloorToInt(float) public static int FloorToInt(this float a) Parameters a float Returns int ForAllFields<T>(object, BindingFlags, bool) public static IEnumerable<(FieldInfo field, T value)> ForAllFields<T>(this object target, BindingFlags binding = BindingFlags.Instance | BindingFlags.Static | BindingFlags.Public | BindingFlags.NonPublic, bool inherited = true) Parameters target object binding BindingFlags inherited bool Returns IEnumerable<(FieldInfo field, T value)> Type Parameters T ForAllFields<T>(Type, BindingFlags, bool) public static IEnumerable<FieldInfo> ForAllFields<T>(this Type type, BindingFlags binding = BindingFlags.Instance | BindingFlags.Static | BindingFlags.Public | BindingFlags.NonPublic, bool inherited = true) Parameters type Type binding BindingFlags inherited bool Returns IEnumerable<FieldInfo> Type Parameters T ForAllProperties<T>(object) public static IEnumerable<(string name, T value)> ForAllProperties<T>(this object target) Parameters target object Returns IEnumerable<(string name, T value)> Type Parameters T ForAllStaticFieldValue<T>(Type, BindingFlags, bool) public static IEnumerable<T> ForAllStaticFieldValue<T>(this Type type, BindingFlags binding = BindingFlags.Static | BindingFlags.Public | BindingFlags.NonPublic, bool inherited = true) Parameters type Type binding BindingFlags inherited bool Returns IEnumerable<T> Type Parameters T ForEach<T>(object[], Action<T, int>) public static void ForEach<T>(this object[] arr, Action<T, int> action) Parameters arr object[] action Action<T, int> Type Parameters T ForEach<T>(object[], Action<T>) public static void ForEach<T>(this object[] arr, Action<T> action) Parameters arr object[] action Action<T> Type Parameters T ForceSquare(IRect, bool, bool, bool) public static IRect ForceSquare(this IRect rect, bool toLeft, bool toBottom, bool grow = false) Parameters rect IRect toLeft bool toBottom bool grow bool Returns IRect GetBit(byte, int) public static bool GetBit(this byte value, int index) Parameters value byte index int Returns bool GetBit(int, int) public static bool GetBit(this int value, int index) Parameters value int index int Returns bool GetBit(ushort, int) public static bool GetBit(this ushort value, int index) Parameters value ushort index int Returns bool GetBit(uint, int) public static bool GetBit(this uint value, int index) Parameters value uint index int Returns bool GetBit(ulong, int) public static bool GetBit(this ulong value, int index) Parameters value ulong index int Returns bool GetClamp(FRect, FRect) public static FRect GetClamp(this FRect rect, FRect range) Parameters rect FRect range FRect Returns FRect GetDirection(Gamekey) public static Direction4? GetDirection(this Gamekey key) Parameters key Gamekey Returns Direction4? GetFlipHorizontal(IRect) public static IRect GetFlipHorizontal(this IRect rect) Parameters rect IRect Returns IRect GetFlipNegative(IRect) public static IRect GetFlipNegative(this IRect rect) Parameters rect IRect Returns IRect GetFlipVertical(IRect) public static IRect GetFlipVertical(this IRect rect) Parameters rect IRect Returns IRect GetHorizontalDirection(Direction5) public static Direction3 GetHorizontalDirection(this Direction5 dir) Parameters dir Direction5 Returns Direction3 GetReadOnlySpan<T>(T[]) public static ReadOnlySpan<T> GetReadOnlySpan<T>(this T[] arr) Parameters arr T[] Returns ReadOnlySpan<T> Type Parameters T GetRotation(Direction4) public static int GetRotation(this Direction4 dir) Parameters dir Direction4 Returns int GetRotation(Direction8) public static int GetRotation(this Direction8 dir) Parameters dir Direction8 Returns int GetRotation(Float2) public static int GetRotation(this Float2 vector) Parameters vector Float2 Returns int GetRotation(Int2) public static int GetRotation(this Int2 vector) Parameters vector Int2 Returns int GetSpan<T>(List<T>) public static Span<T> GetSpan<T>(this List<T> list) Parameters list List<T> Returns Span<T> Type Parameters T GetSpan<T>(T[]) public static Span<T> GetSpan<T>(this T[] arr) Parameters arr T[] Returns Span<T> Type Parameters T GetTypePath(Type, Type) public static string GetTypePath(this Type type, Type startFrom = null) Parameters type Type startFrom Type Returns string GetVerticalDirection(Direction5) public static Direction3 GetVerticalDirection(this Direction5 dir) Parameters dir Direction5 Returns Direction3 GreaterOrAlmost(float, float) public static bool GreaterOrAlmost(this float a, float b) Parameters a float b float Returns bool GreaterOrEquel(int, int) public static int GreaterOrEquel(this int value, int target) Parameters value int target int Returns int GreaterOrEquel(long, long) public static long GreaterOrEquel(this long value, long target) Parameters value long target long Returns long GreaterOrEquelThanZero(int) public static int GreaterOrEquelThanZero(this int value) Parameters value int Returns int HorizontalMidHalf(IRect) public static IRect HorizontalMidHalf(this IRect rect) Parameters rect IRect Returns IRect InLength(int, int) public static bool InLength(this int value, int length) Parameters value int length int Returns bool InRangeExclude(int, int, int) public static bool InRangeExclude(this int value, int min, int max) Parameters value int min int max int Returns bool InRangeInclude(int, int, int) public static bool InRangeInclude(this int value, int min, int max) Parameters value int min int max int Returns bool Inside(Float2, Float2, Float2) public static bool Inside(this Float2 v, Float2 min, Float2 max) Parameters v Float2 min Float2 max Float2 Returns bool Inside(Float2, float, float, float, float) public static bool Inside(this Float2 v, float left, float right, float down, float up) Parameters v Float2 left float right float down float up float Returns bool Inside01(Float2) public static bool Inside01(this Float2 v) Parameters v Float2 Returns bool Intersection(IRect, IRect) public static IRect? Intersection(this IRect rect, IRect other) Parameters rect IRect other IRect Returns IRect? InvokeSafe(Action) public static void InvokeSafe(this Action action) Parameters action Action InvokeSafe<T0>(Action<T0>, T0) public static void InvokeSafe<T0>(this Action<T0> action, T0 a) Parameters action Action<T0> a T0 Type Parameters T0 InvokeSafe<T0, T1>(Action<T0, T1>, T0, T1) public static void InvokeSafe<T0, T1>(this Action<T0, T1> action, T0 a, T1 b) Parameters action Action<T0, T1> a T0 b T1 Type Parameters T0 T1 InvokeSafe<T0, T1, T2>(Action<T0, T1, T2>, T0, T1, T2) public static void InvokeSafe<T0, T1, T2>(this Action<T0, T1, T2> action, T0 a, T1 b, T2 c) Parameters action Action<T0, T1, T2> a T0 b T1 c T2 Type Parameters T0 T1 T2 IsBottom(Alignment) public static bool IsBottom(this Alignment alignment) Parameters alignment Alignment Returns bool IsBottom(Direction8) public static bool IsBottom(this Direction8 dir) Parameters dir Direction8 Returns bool IsHorizontal(Direction4) public static bool IsHorizontal(this Direction4 dir) Parameters dir Direction4 Returns bool IsHorizontal(Direction5) public static bool IsHorizontal(this Direction5 dir) Parameters dir Direction5 Returns bool IsHorizontal(Direction8) public static bool IsHorizontal(this Direction8 dir) Parameters dir Direction8 Returns bool IsLeft(Alignment) public static bool IsLeft(this Alignment alignment) Parameters alignment Alignment Returns bool IsLeft(Direction8) public static bool IsLeft(this Direction8 dir) Parameters dir Direction8 Returns bool IsLyingDown(CharacterAnimationType) True if the character should be rendered lying down public static bool IsLyingDown(this CharacterAnimationType aniType) Parameters aniType CharacterAnimationType Returns bool IsMidX(Alignment) public static bool IsMidX(this Alignment alignment) Parameters alignment Alignment Returns bool IsMidY(Alignment) public static bool IsMidY(this Alignment alignment) Parameters alignment Alignment Returns bool IsNotSame(IRect, IRect) public static bool IsNotSame(this IRect a, IRect b) Parameters a IRect b IRect Returns bool IsPositive(Direction4) public static bool IsPositive(this Direction4 dir) Parameters dir Direction4 Returns bool IsPositive(Direction5) public static bool IsPositive(this Direction5 dir) Parameters dir Direction5 Returns bool IsPositive(Direction8) public static bool IsPositive(this Direction8 dir) Parameters dir Direction8 Returns bool IsRight(Alignment) public static bool IsRight(this Alignment alignment) Parameters alignment Alignment Returns bool IsRight(Direction8) public static bool IsRight(this Direction8 dir) Parameters dir Direction8 Returns bool IsSame(Color32, Color32, bool) public static bool IsSame(this Color32 a, Color32 b, bool ignoreAlpha = false) Parameters a Color32 b Color32 ignoreAlpha bool Returns bool IsSame(IRect, IRect) public static bool IsSame(this IRect a, IRect b) Parameters a IRect b IRect Returns bool IsTilted(Direction8) public static bool IsTilted(this Direction8 dir) Parameters dir Direction8 Returns bool IsTop(Alignment) public static bool IsTop(this Alignment alignment) Parameters alignment Alignment Returns bool IsTop(Direction8) public static bool IsTop(this Direction8 dir) Parameters dir Direction8 Returns bool IsVertical(Direction4) public static bool IsVertical(this Direction4 dir) Parameters dir Direction4 Returns bool IsVertical(Direction5) public static bool IsVertical(this Direction5 dir) Parameters dir Direction5 Returns bool IsVertical(Direction8) public static bool IsVertical(this Direction8 dir) Parameters dir Direction8 Returns bool JoinArray<T>(IEnumerable<T>, Func<T, string>, char) public static string JoinArray<T>(this IEnumerable<T> arr, Func<T, string> toString, char separator = '\\0') Parameters arr IEnumerable<T> toString Func<T, string> separator char Returns string Type Parameters T LeftHalf(IRect) public static IRect LeftHalf(this IRect rect) Parameters rect IRect Returns IRect LerpTo(IRect, IRect, int) public static IRect LerpTo(this IRect from, IRect to, int lerpRate) Parameters from IRect to IRect lerpRate int Returns IRect LerpTo(IRect, IRect, float) public static IRect LerpTo(this IRect from, IRect to, float lerp) Parameters from IRect to IRect lerp float Returns IRect LerpTo(int, int, int) public static int LerpTo(this int from, int to, int lerpRate) Parameters from int to int lerpRate int Returns int LerpTo(int, int, float) public static int LerpTo(this int from, int to, float lerp01) Parameters from int to int lerp01 float Returns int LerpWithGap(float, float, float, float) public static float LerpWithGap(this float from, float to, float lerp, float gap) Parameters from float to float lerp float gap float Returns float LessOrAlmost(float, float) public static bool LessOrAlmost(this float a, float b) Parameters a float b float Returns bool LessOrEquel(int, int) public static int LessOrEquel(this int value, int target) Parameters value int target int Returns int LessOrEquelThanZero(int) public static int LessOrEquelThanZero(this int value) Parameters value int Returns int LookDifferent(Color32, Color32) public static bool LookDifferent(this Color32 a, Color32 b) Parameters a Color32 b Color32 Returns bool MidLeft(IRect) public static Int2 MidLeft(this IRect rect) Parameters rect IRect Returns Int2 MidRight(IRect) public static Int2 MidRight(this IRect rect) Parameters rect IRect Returns Int2 MoveTowards(Int2, Int2, Int2) public static Int2 MoveTowards(this Int2 v, Int2 target, Int2 delta) Parameters v Int2 target Int2 delta Int2 Returns Int2 MoveTowards(Int2, Int2, int) public static Int2 MoveTowards(this Int2 v, Int2 target, int delta) Parameters v Int2 target Int2 delta int Returns Int2 MoveTowards(int, int, int) public static int MoveTowards(this int current, int target, int maxDelta) Parameters current int target int maxDelta int Returns int MoveTowards(int, int, int, int) public static int MoveTowards(this int current, int target, int positiveDelta, int negativeDelta) Parameters current int target int positiveDelta int negativeDelta int Returns int Mult(Color32, Color32) public static Color32 Mult(this Color32 a, Color32 b) Parameters a Color32 b Color32 Returns Color32 Next<E>(E) public static E Next<E>(this E @enum) where E : Enum Parameters enum E Returns E Type Parameters E Normal(Alignment) public static Int2 Normal(this Alignment alignment) Parameters alignment Alignment Returns Int2 Normal(Direction4) public static Int2 Normal(this Direction4 dir) Parameters dir Direction4 Returns Int2 Normal(Direction5) public static Int2 Normal(this Direction5 dir) Parameters dir Direction5 Returns Int2 Normal(Direction8) public static Int2 Normal(this Direction8 dir) Parameters dir Direction8 Returns Int2 NotAlmost(FRect, FRect) public static bool NotAlmost(this FRect a, FRect b) Parameters a FRect b FRect Returns bool NotAlmost(Float2, Float2) public static bool NotAlmost(this Float2 a, Float2 b) Parameters a Float2 b Float2 Returns bool NotAlmost(Float3, Float3) public static bool NotAlmost(this Float3 a, Float3 b) Parameters a Float3 b Float3 Returns bool NotAlmost(float, float) public static bool NotAlmost(this float a, float b) Parameters a float b float Returns bool NotAlmostZero(float) public static bool NotAlmostZero(this float a) Parameters a float Returns bool NotEnd(BinaryReader) public static bool NotEnd(this BinaryReader reader) Parameters reader BinaryReader Returns bool Opposite(Direction3) public static Direction3 Opposite(this Direction3 dir) Parameters dir Direction3 Returns Direction3 Opposite(Direction4) public static Direction4 Opposite(this Direction4 dir) Parameters dir Direction4 Returns Direction4 Opposite(Direction5) public static Direction5 Opposite(this Direction5 dir) Parameters dir Direction5 Returns Direction5 Opposite(Direction8) public static Direction8 Opposite(this Direction8 dir) Parameters dir Direction8 Returns Direction8 PartHorizontal(IRect, int, int) public static IRect PartHorizontal(this IRect rect, int index, int count) Parameters rect IRect index int count int Returns IRect PartVertical(IRect, int, int) public static IRect PartVertical(this IRect rect, int index, int count) Parameters rect IRect index int count int Returns IRect PingPong(int, int) public static int PingPong(this int value, int length) Parameters value int length int Returns int PingPong(int, int, int) public static int PingPong(this int value, int min, int max) Parameters value int min int max int Returns int Pixels_to_Bytes(Color32[]) public static byte[] Pixels_to_Bytes(this Color32[] pixels) Parameters pixels Color32[] Returns byte[] Prev<E>(E) public static E Prev<E>(this E @enum) where E : Enum Parameters enum E Returns E Type Parameters E ResizeFrom(FRect, float, float, float, float) public static FRect ResizeFrom(this FRect rect, float newWidth, float newHeight, float pointX, float pointY) Parameters rect FRect newWidth float newHeight float pointX float pointY float Returns FRect ResizeFrom(IRect, int, int, int, int) public static IRect ResizeFrom(this IRect rect, int newWidth, int newHeight, int pointX, int pointY) Parameters rect IRect newWidth int newHeight int pointX int pointY int Returns IRect ReverseClamp(int, int, int) public static int ReverseClamp(this int a, int min, int max) Parameters a int min int max int Returns int RightHalf(IRect) public static IRect RightHalf(this IRect rect) Parameters rect IRect Returns IRect Rotate(Float2, float) public static Float2 Rotate(this Float2 vector, float angle) Parameters vector Float2 angle float Returns Float2 Rotate(Float3, float) public static Float3 Rotate(this Float3 vector, float angle) Parameters vector Float3 angle float Returns Float3 Round(float) public static float Round(this float a) Parameters a float Returns float RoundToInt(Float2) public static Int2 RoundToInt(this Float2 v) Parameters v Float2 Returns Int2 RoundToInt(float) public static int RoundToInt(this float a) Parameters a float Returns int ScaleFrom(FRect, float, float, float) public static FRect ScaleFrom(this FRect rect, float scale, float pointX, float pointY) Parameters rect FRect scale float pointX float pointY float Returns FRect ScaleFrom(IRect, int, int, int) public static IRect ScaleFrom(this IRect rect, int scale, int pointX, int pointY) Parameters rect IRect scale int pointX int pointY int Returns IRect ScaleFrom(IRect, int, int, int, int) public static IRect ScaleFrom(this IRect rect, int scaleX, int scaleY, int pointX, int pointY) Parameters rect IRect scaleX int scaleY int pointX int pointY int Returns IRect ScaleFrom(IRect, float, int, int) public static IRect ScaleFrom(this IRect rect, float scale01, int pointX, int pointY) Parameters rect IRect scale01 float pointX int pointY int Returns IRect ScaleFrom(IRect, float, float, int, int) public static IRect ScaleFrom(this IRect rect, float scaleX01, float scaleY01, int pointX, int pointY) Parameters rect IRect scaleX01 float scaleY01 float pointX int pointY int Returns IRect SetBit(ref byte, int, bool) public static void SetBit(this ref byte value, int index, bool bitValue) Parameters value byte index int bitValue bool SetBit(ref int, int, bool) public static void SetBit(this ref int value, int index, bool bitValue) Parameters value int index int bitValue bool SetBit(ref uint, int, bool) public static void SetBit(this ref uint value, int index, bool bitValue) Parameters value uint index int bitValue bool SetBit(ref ulong, int, bool) public static void SetBit(this ref ulong value, int index, bool bitValue) Parameters value ulong index int bitValue bool SetMinMax(ref IRect, int, int, int, int) public static void SetMinMax(this ref IRect rect, int xMin, int xMax, int yMin, int yMax) Parameters rect IRect xMin int xMax int yMin int yMax int Shift(FRect, float, float) public static FRect Shift(this FRect rect, float x, float y) Parameters rect FRect x float y float Returns FRect Shift(IRect, Int2) public static IRect Shift(this IRect rect, Int2 offset) Parameters rect IRect offset Int2 Returns IRect Shift(IRect, int, int) public static IRect Shift(this IRect rect, int x, int y) Parameters rect IRect x int y int Returns IRect Shift(Int2, int, int) public static Int2 Shift(this Int2 v, int x, int y) Parameters v Int2 x int y int Returns Int2 ShiftX(Int2, int) public static Int2 ShiftX(this Int2 v, int x) Parameters v Int2 x int Returns Int2 ShiftY(Int2, int) public static Int2 ShiftY(this Int2 v, int y) Parameters v Int2 y int Returns Int2 Shrink(FRect, float) public static FRect Shrink(this FRect rect, float offset) Parameters rect FRect offset float Returns FRect Shrink(FRect, float, float, float, float) public static FRect Shrink(this FRect rect, float l, float r, float d, float u) Parameters rect FRect l float r float d float u float Returns FRect Shrink(IRect, Int4) public static IRect Shrink(this IRect rect, Int4 offset) Parameters rect IRect offset Int4 Returns IRect Shrink(IRect, int) public static IRect Shrink(this IRect rect, int offset) Parameters rect IRect offset int Returns IRect Shrink(IRect, int, int, int, int) public static IRect Shrink(this IRect rect, int l, int r, int d, int u) Parameters rect IRect l int r int d int u int Returns IRect ShrinkDown(IRect, int) public static IRect ShrinkDown(this IRect rect, int down) Parameters rect IRect down int Returns IRect ShrinkLeft(IRect, int) public static IRect ShrinkLeft(this IRect rect, int left) Parameters rect IRect left int Returns IRect ShrinkRight(IRect, int) public static IRect ShrinkRight(this IRect rect, int right) Parameters rect IRect right int Returns IRect ShrinkUp(IRect, int) public static IRect ShrinkUp(this IRect rect, int up) Parameters rect IRect up int Returns IRect Sign(bool) public static int Sign(this bool value) Parameters value bool Returns int Sign(int) public static int Sign(this int i) Parameters i int Returns int Sign3(int) public static int Sign3(this int i) Parameters i int Returns int SlideDown(ref IRect, int) public static void SlideDown(this ref IRect rect, int padding = 0) Parameters rect IRect padding int SlideLeft(ref IRect, int) public static void SlideLeft(this ref IRect rect, int padding = 0) Parameters rect IRect padding int SlideRight(ref IRect, int) public static void SlideRight(this ref IRect rect, int padding = 0) Parameters rect IRect padding int SlideUp(ref IRect, int) public static void SlideUp(this ref IRect rect, int padding = 0) Parameters rect IRect padding int StartsWith(string, char, char) public static bool StartsWith(this string str, char targetChar, char ignoreChar) Parameters str string targetChar char ignoreChar char Returns bool StartsWith_IgnoreWhiteSpace(string, char) public static bool StartsWith_IgnoreWhiteSpace(this string str, char targetChar) Parameters str string targetChar char Returns bool StartsWith_IgnoreWhiteSpace(string, char, out int) public static bool StartsWith_IgnoreWhiteSpace(this string str, char targetChar, out int index) Parameters str string targetChar char index int Returns bool ToAlignment(Direction4) public static Alignment ToAlignment(this Direction4 dir4) Parameters dir4 Direction4 Returns Alignment ToAlignment(Direction5) public static Alignment ToAlignment(this Direction5 dir5) Parameters dir5 Direction5 Returns Alignment ToColor32(ColorF) public static Color32 ToColor32(this ColorF value) Parameters value ColorF Returns Color32 ToColorF(Color32) public static ColorF ToColorF(this Color32 value) Parameters value Color32 Returns ColorF ToDirection4(Direction5, Direction4) public static Direction4 ToDirection4(this Direction5 dir5, Direction4 center = Direction4.Up) Parameters dir5 Direction5 center Direction4 Returns Direction4 ToDirection5(Direction4) public static Direction5 ToDirection5(this Direction4 dir4) Parameters dir4 Direction4 Returns Direction5 ToDirection8(Direction4) public static Direction8 ToDirection8(this Direction4 dir4) Parameters dir4 Direction4 Returns Direction8 ToFRect(IRect) public static FRect ToFRect(this IRect rect) Parameters rect IRect Returns FRect ToGlobal(IRect) public static IRect ToGlobal(this IRect unit) Parameters unit IRect Returns IRect ToGlobal(Int2) public static Int2 ToGlobal(this Int2 unitPos) Parameters unitPos Int2 Returns Int2 ToGlobal(Int3) public static Int3 ToGlobal(this Int3 unitPos) Parameters unitPos Int3 Returns Int3 ToGlobal(int) public static int ToGlobal(this int unitPos) Parameters unitPos int Returns int ToIRect(FRect) public static IRect ToIRect(this FRect rect) Parameters rect FRect Returns IRect ToStringWithDoubleQuotes(string) public static string ToStringWithDoubleQuotes(this string str) Parameters str string Returns string ToStringWithDoubleQuotes(StringBuilder) public static string ToStringWithDoubleQuotes(this StringBuilder builder) Parameters builder StringBuilder Returns string ToUnifyGlobal(Int2) public static Int2 ToUnifyGlobal(this Int2 globalPos) Parameters globalPos Int2 Returns Int2 ToUnifyGlobal(Int3) public static Int3 ToUnifyGlobal(this Int3 globalPos) Parameters globalPos Int3 Returns Int3 ToUnifyGlobal(int) public static int ToUnifyGlobal(this int globalPos) Parameters globalPos int Returns int ToUnit(IRect) public static IRect ToUnit(this IRect global) Parameters global IRect Returns IRect ToUnit(Int2) public static Int2 ToUnit(this Int2 globalPos) Parameters globalPos Int2 Returns Int2 ToUnit(Int3) public static Int3 ToUnit(this Int3 globalPos) Parameters globalPos Int3 Returns Int3 ToUnit(int) public static int ToUnit(this int globalPos) Parameters globalPos int Returns int ToUnit(int, out int) public static int ToUnit(this int globalPos, out int remainder) Parameters globalPos int remainder int Returns int ToVector3Int(Int2, int) public static Int3 ToVector3Int(this Int2 v, int z) Parameters v Int2 z int Returns Int3 TopHalf(IRect) public static IRect TopHalf(this IRect rect) Parameters rect IRect Returns IRect TopLeft(FRect) public static Float2 TopLeft(this FRect rect) Parameters rect FRect Returns Float2 TopLeft(IRect) public static Int2 TopLeft(this IRect rect) Parameters rect IRect Returns Int2 TopMid(IRect) public static Int2 TopMid(this IRect rect) Parameters rect IRect Returns Int2 TopRight(FRect) public static Float2 TopRight(this FRect rect) Parameters rect FRect Returns Float2 TopRight(IRect) public static Int2 TopRight(this IRect rect) Parameters rect IRect Returns Int2 TrimEnd_IfEndWith(string, string, params char[]) public static string TrimEnd_IfEndWith(this string str, string end, params char[] trimChars) Parameters str string end string trimChars char[] Returns string TrimEnd_Numbers(string) public static string TrimEnd_Numbers(this string str) Parameters str string Returns string TrimEnd_NumbersEmpty(string) public static string TrimEnd_NumbersEmpty(this string str) Parameters str string Returns string TrimEnd_NumbersEmpty_(string) public static string TrimEnd_NumbersEmpty_(this string str) Parameters str string Returns string TrimStart_Numbers(string) public static string TrimStart_Numbers(this string str) Parameters str string Returns string TrimWhiteForStartAndEnd(string) public static string TrimWhiteForStartAndEnd(this string str) Parameters str string Returns string TryGetDirection8(Int2, out Direction8) public static bool TryGetDirection8(this Int2 dir, out Direction8 result) Parameters dir Int2 result Direction8 Returns bool UCeil(int, int) public static int UCeil(this int value, int step) Parameters value int step int Returns int UCeil(float, float) public static float UCeil(this float value, float gap) Parameters value float gap float Returns float UDivide(IRect, int) public static IRect UDivide(this IRect rect, int divide) Parameters rect IRect divide int Returns IRect UDivide(Int2, int) public static Int2 UDivide(this Int2 v, int gap) Parameters v Int2 gap int Returns Int2 UDivide(int, int) public static int UDivide(this int value, int step) Parameters value int step int Returns int UFloor(int, int) public static int UFloor(this int value, int step) Parameters value int step int Returns int UFloor(float, float) public static float UFloor(this float value, float gap) Parameters value float gap float Returns float UMod(int, int) public static int UMod(this int value, int step) Parameters value int step int Returns int UMod(long, long) public static long UMod(this long value, long step) Parameters value long step long Returns long UMod(float, float) public static float UMod(this float value, float gap) Parameters value float gap float Returns float VerticalMidHalf(IRect) public static IRect VerticalMidHalf(this IRect rect) Parameters rect IRect Returns IRect WithNewA(Color32, int) public static Color32 WithNewA(this Color32 value, int a) Parameters value Color32 a int Returns Color32 WithNewA(ColorF, float) public static ColorF WithNewA(this ColorF value, float a) Parameters value ColorF a float Returns ColorF WithNewHeight(IRect, int) public static IRect WithNewHeight(this IRect rect, int height) Parameters rect IRect height int Returns IRect WithNewWidth(IRect, int) public static IRect WithNewWidth(this IRect rect, int width) Parameters rect IRect width int Returns IRect"
  },
  "api/AngeliA.FRect.html": {
    "href": "api/AngeliA.FRect.html",
    "title": "Struct FRect | AngeliA",
    "summary": "Struct FRect Namespace AngeliA Assembly AngeliA Framework.dll [Serializable] public struct FRect : IEquatable<FRect>, IFormattable Implements IEquatable<FRect> IFormattable Inherited Members object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Extension Methods Extension.Almost(FRect, FRect) Extension.BottomLeft(FRect) Extension.BottomRight(FRect) Extension.Clamp(ref FRect, FRect) Extension.CompleteInside(FRect, FRect) Extension.Edge(FRect, Direction4, float) Extension.Envelope(FRect, float) Extension.Expand(FRect, float) Extension.Expand(FRect, float, float, float, float) Extension.ExpandToIRect(FRect) Extension.Fit(FRect, float, float, float) Extension.GetClamp(FRect, FRect) Extension.NotAlmost(FRect, FRect) Extension.ResizeFrom(FRect, float, float, float, float) Extension.ScaleFrom(FRect, float, float, float) Extension.Shift(FRect, float, float) Extension.Shrink(FRect, float) Extension.Shrink(FRect, float, float, float, float) Extension.ToIRect(FRect) Extension.TopLeft(FRect) Extension.TopRight(FRect) Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Constructors FRect(FRect) public FRect(FRect source) Parameters source FRect FRect(Float2, Float2) public FRect(Float2 position, Float2 size) Parameters position Float2 size Float2 FRect(float, float, float, float) public FRect(float x, float y, float width, float height) Parameters x float y float width float height float Properties center public Float2 center { readonly get; set; } Property Value Float2 height public float height { readonly get; set; } Property Value float max public Float2 max { readonly get; set; } Property Value Float2 min public Float2 min { readonly get; set; } Property Value Float2 position public Float2 position { readonly get; set; } Property Value Float2 size public Float2 size { readonly get; set; } Property Value Float2 width public float width { readonly get; set; } Property Value float x public float x { readonly get; set; } Property Value float xMax public float xMax { readonly get; set; } Property Value float xMin public float xMin { readonly get; set; } Property Value float y public float y { readonly get; set; } Property Value float yMax public float yMax { readonly get; set; } Property Value float yMin public float yMin { readonly get; set; } Property Value float zero public static FRect zero { get; } Property Value FRect Methods Contains(Float2) public readonly bool Contains(Float2 point) Parameters point Float2 Returns bool Contains(Float3) public readonly bool Contains(Float3 point) Parameters point Float3 Returns bool Contains(Float3, bool) public readonly bool Contains(Float3 point, bool allowInverse) Parameters point Float3 allowInverse bool Returns bool Equals(FRect) Indicates whether the current object is equal to another object of the same type. public readonly bool Equals(FRect other) Parameters other FRect An object to compare with this object. Returns bool true if the current object is equal to the other parameter; otherwise, false. Equals(object) Indicates whether this instance and a specified object are equal. public override readonly bool Equals(object other) Parameters other object Returns bool true if obj and this instance are the same type and represent the same value; otherwise, false. GetHashCode() Returns the hash code for this instance. public override readonly int GetHashCode() Returns int A 32-bit signed integer that is the hash code for this instance. MinMaxRect(float, float, float, float) public static FRect MinMaxRect(float xmin, float ymin, float xmax, float ymax) Parameters xmin float ymin float xmax float ymax float Returns FRect NormalizedToPoint(FRect, Float2) public static Float2 NormalizedToPoint(FRect rectangle, Float2 normalizedRectCoordinates) Parameters rectangle FRect normalizedRectCoordinates Float2 Returns Float2 Overlaps(FRect) public readonly bool Overlaps(FRect other) Parameters other FRect Returns bool Overlaps(FRect, bool) public readonly bool Overlaps(FRect other, bool allowInverse) Parameters other FRect allowInverse bool Returns bool PointToNormalized(FRect, Float2) public static Float2 PointToNormalized(FRect rectangle, Float2 point) Parameters rectangle FRect point Float2 Returns Float2 Set(float, float, float, float) public void Set(float x, float y, float width, float height) Parameters x float y float width float height float ToString() Returns the fully qualified type name of this instance. public override readonly string ToString() Returns string The fully qualified type name. ToString(string) public readonly string ToString(string format) Parameters format string Returns string ToString(string, IFormatProvider) Formats the value of the current instance using the specified format. public readonly string ToString(string format, IFormatProvider formatProvider) Parameters format string The format to use. -or- A null reference (Nothing in Visual Basic) to use the default format defined for the type of the IFormattable implementation. formatProvider IFormatProvider The provider to use to format the value. -or- A null reference (Nothing in Visual Basic) to obtain the numeric format information from the current locale setting of the operating system. Returns string The value of the current instance in the specified format. Operators operator ==(FRect, FRect) public static bool operator ==(FRect lhs, FRect rhs) Parameters lhs FRect rhs FRect Returns bool operator !=(FRect, FRect) public static bool operator !=(FRect lhs, FRect rhs) Parameters lhs FRect rhs FRect Returns bool"
  },
  "api/AngeliA.Face.html": {
    "href": "api/AngeliA.Face.html",
    "title": "Class Face | AngeliA",
    "summary": "Class Face Namespace AngeliA Assembly AngeliA Framework.dll public abstract class Face : BodyGadget Inheritance object BodyGadget Face Derived ModularFace Inherited Members BodyGadget.BodyGadgetSystemReady BodyGadget.SheetIndex BodyGadget.GadgetID BodyGadget.GadgetName BodyGadget.ForAllGadget() BodyGadget.GetDefaultGadgetID(int, BodyGadgetType) BodyGadget.TryGetGadget(int, out BodyGadget) BodyGadget.GetDisplayName(string, out int) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Properties GadgetType public override sealed BodyGadgetType GadgetType { get; } Property Value BodyGadgetType SpriteLoaded public override bool SpriteLoaded { get; } Property Value bool Methods DrawEye(CharacterFaceExpression, IRect, bool, bool, int) protected virtual void DrawEye(CharacterFaceExpression expression, IRect faceRect, bool leftEye, bool facingRight, int animationFrame) Parameters expression CharacterFaceExpression faceRect IRect leftEye bool facingRight bool animationFrame int DrawGadget(PoseCharacterRenderer) public override void DrawGadget(PoseCharacterRenderer renderer) Parameters renderer PoseCharacterRenderer DrawGadgetFromPool(PoseCharacterRenderer) public static void DrawGadgetFromPool(PoseCharacterRenderer renderer) Parameters renderer PoseCharacterRenderer DrawGadgetGizmos(IRect, Color32, int) public override void DrawGadgetGizmos(IRect rect, Color32 tint, int z) Parameters rect IRect tint Color32 z int DrawMouth(CharacterFaceExpression, IRect, bool, int) protected virtual void DrawMouth(CharacterFaceExpression expression, IRect faceRect, bool facingRight, int animationFrame) Parameters expression CharacterFaceExpression faceRect IRect facingRight bool animationFrame int DrawSpriteAsHumanEar(PoseCharacterRenderer, OrientedSprite, OrientedSprite, int, int) public static void DrawSpriteAsHumanEar(PoseCharacterRenderer renderer, OrientedSprite spriteLeft, OrientedSprite spriteRight, int offsetXL = 0, int offsetXR = 0) Parameters renderer PoseCharacterRenderer spriteLeft OrientedSprite spriteRight OrientedSprite offsetXL int offsetXR int FillFromSheet(string) public override bool FillFromSheet(string keyword) Parameters keyword string Returns bool GetCurrentExpression(PoseCharacterRenderer) public static CharacterFaceExpression GetCurrentExpression(PoseCharacterRenderer renderer) Parameters renderer PoseCharacterRenderer Returns CharacterFaceExpression GetFaceRect(PoseCharacterRenderer, out IRect) public IRect GetFaceRect(PoseCharacterRenderer renderer, out IRect headRect) Parameters renderer PoseCharacterRenderer headRect IRect Returns IRect GetScleraRect(PoseCharacterRenderer, bool) public IRect GetScleraRect(PoseCharacterRenderer renderer, bool leftEye) Parameters renderer PoseCharacterRenderer leftEye bool Returns IRect"
  },
  "api/AngeliA.FadeInTask.html": {
    "href": "api/AngeliA.FadeInTask.html",
    "title": "Class FadeInTask | AngeliA",
    "summary": "Class FadeInTask Namespace AngeliA Assembly AngeliA Framework.dll public class FadeInTask : Task Inheritance object Task FadeInTask Inherited Members Task.LocalFrame Task.UserData Task.OnStart() Task.OnEnd() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Fields TYPE_ID public static readonly int TYPE_ID Field Value int Methods FrameUpdate() public override TaskResult FrameUpdate() Returns TaskResult"
  },
  "api/AngeliA.FadeOutTask.html": {
    "href": "api/AngeliA.FadeOutTask.html",
    "title": "Class FadeOutTask | AngeliA",
    "summary": "Class FadeOutTask Namespace AngeliA Assembly AngeliA Framework.dll public class FadeOutTask : Task Inheritance object Task FadeOutTask Inherited Members Task.LocalFrame Task.UserData Task.OnStart() Task.OnEnd() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Fields TYPE_ID public static readonly int TYPE_ID Field Value int Methods FrameUpdate() public override TaskResult FrameUpdate() Returns TaskResult"
  },
  "api/AngeliA.FastNoiseGroup.html": {
    "href": "api/AngeliA.FastNoiseGroup.html",
    "title": "Class FastNoiseGroup | AngeliA",
    "summary": "Class FastNoiseGroup Namespace AngeliA Assembly AngeliA Framework.dll public class FastNoiseGroup Inheritance object FastNoiseGroup Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Constructors FastNoiseGroup(int) public FastNoiseGroup(int length) Parameters length int Fields Length public readonly int Length Field Value int Properties this[int] public FastNoiseLite this[int index] { get; } Parameters index int Property Value FastNoiseLite SolidMax public float SolidMax { get; set; } Property Value float SolidMin public float SolidMin { get; set; } Property Value float Methods FillAltitude(int[,], float, float, float, float, float, out int) public void FillAltitude(int[,] altitude, float left, float down, float z, float deltaX, float deltaY, out int altitudeMax) Parameters altitude int[,] left float down float z float deltaX float deltaY float altitudeMax int GetCSharpCode(string) public string GetCSharpCode(string groupName) Parameters groupName string Returns string GetMatching(int) public NoiseMatching GetMatching(int index) Parameters index int Returns NoiseMatching GetNoise(float, float, float) public float GetNoise(float x, float y, float z) Parameters x float y float z float Returns float IsSolid(float) public bool IsSolid(float value) Parameters value float Returns bool SetMatching(int, NoiseMatching) public void SetMatching(int index, NoiseMatching matching) Parameters index int matching NoiseMatching"
  },
  "api/AngeliA.FileBrowserUI.html": {
    "href": "api/AngeliA.FileBrowserUI.html",
    "title": "Class FileBrowserUI | AngeliA",
    "summary": "Class FileBrowserUI Namespace AngeliA Assembly AngeliA Framework.dll [Entity.StageOrder(4095)] [Entity.Capacity(1, 1)] public sealed class FileBrowserUI : EntityUI, IMapItem, IWindowEntityUI Inheritance object Entity EntityUI FileBrowserUI Implements IMapItem IWindowEntityUI Inherited Members EntityUI.Update() EntityUI.LateUpdate() Entity.Active Entity.X Entity.Y Entity.Width Entity.Height Entity.TypeID Entity.SpawnFrame Entity.FromWorld Entity.Rect Entity.InstanceOrder Entity.MapUnitPos Entity.InstanceID Entity.IgnoreReposition Entity.XY Entity.Size Entity.Center Entity.CenterX Entity.CenterY Entity.PivotUnitPosition Entity.OnInactivated() Entity.AfterReposition(Int3, Int3) Entity.IgnoreDespawnFromMap(int) Entity.CancelIgnoreDespawnFromMap() Entity.Draw() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Constructors FileBrowserUI() public FileBrowserUI() Properties BackgroundRect public IRect BackgroundRect { get; } Property Value IRect BlockEvent protected override bool BlockEvent { get; } Property Value bool CurrentFolder public string CurrentFolder { get; set; } Property Value string CurrentName public string CurrentName { get; set; } Property Value string Instance public static FileBrowserUI Instance { get; } Property Value FileBrowserUI SearchPatterns public string[] SearchPatterns { get; } Property Value string[] ShowingBrowser public static bool ShowingBrowser { get; } Property Value bool Title public string Title { get; set; } Property Value string Methods BeforeUpdate() public override void BeforeUpdate() FirstUpdate() public override void FirstUpdate() OnActivated() public override void OnActivated() OnGameInitialize() [OnGameInitialize(0)] public static void OnGameInitialize() OpenFile(string, Action<string>, params string[]) public static void OpenFile(string title, Action<string> onFileOpen, params string[] searchPatterns) Parameters title string onFileOpen Action<string> searchPatterns string[] OpenFolder(string, Action<string>) public static void OpenFolder(string title, Action<string> onFolderOpen) Parameters title string onFolderOpen Action<string> SaveFile(string, string, Action<string>, params string[]) public static void SaveFile(string title, string defaultFileNameWithExt, Action<string> onFileSaved, params string[] searchPatterns) Parameters title string defaultFileNameWithExt string onFileSaved Action<string> searchPatterns string[] SaveFolder(string, string, Action<string>) public static void SaveFolder(string title, string defaultFolderName, Action<string> onFolderSaved) Parameters title string defaultFolderName string onFolderSaved Action<string> UpdateUI() public override void UpdateUI()"
  },
  "api/AngeliA.FittingPose.html": {
    "href": "api/AngeliA.FittingPose.html",
    "title": "Enum FittingPose | AngeliA",
    "summary": "Enum FittingPose Namespace AngeliA Assembly AngeliA Framework.dll public enum FittingPose Extension Methods Extension.Next<E>(E) Extension.Prev<E>(E) Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Fields Down = 1 Left = 1 Mid = 2 Right = 3 Single = 4 Unknown = 0 Up = 3"
  },
  "api/AngeliA.Float2.html": {
    "href": "api/AngeliA.Float2.html",
    "title": "Struct Float2 | AngeliA",
    "summary": "Struct Float2 Namespace AngeliA Assembly AngeliA Framework.dll [Serializable] public struct Float2 : IEquatable<Float2>, IFormattable Implements IEquatable<Float2> IFormattable Inherited Members object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Extension Methods Extension.Almost(Float2, Float2) Extension.CeilToInt(Float2) Extension.Clamp(ref Float2, float, float, float, float) Extension.FloorToInt(Float2) Extension.GetRotation(Float2) Extension.Inside(Float2, Float2, Float2) Extension.Inside(Float2, float, float, float, float) Extension.Inside01(Float2) Extension.NotAlmost(Float2, Float2) Extension.Rotate(Float2, float) Extension.RoundToInt(Float2) Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Constructors Float2(float, float) public Float2(float x, float y) Parameters x float y float Fields kEpsilon public const float kEpsilon = 1E-05 Field Value float kEpsilonNormalSqrt public const float kEpsilonNormalSqrt = 1E-15 Field Value float x public float x Field Value float y public float y Field Value float Properties this[int] public float this[int index] { readonly get; set; } Parameters index int Property Value float down public static Float2 down { get; } Property Value Float2 left public static Float2 left { get; } Property Value Float2 magnitude public readonly float magnitude { get; } Property Value float negativeInfinity public static Float2 negativeInfinity { get; } Property Value Float2 normalized public readonly Float2 normalized { get; } Property Value Float2 one public static Float2 one { get; } Property Value Float2 positiveInfinity public static Float2 positiveInfinity { get; } Property Value Float2 right public static Float2 right { get; } Property Value Float2 sqrMagnitude public readonly float sqrMagnitude { get; } Property Value float up public static Float2 up { get; } Property Value Float2 zero public static Float2 zero { get; } Property Value Float2 Methods ClampMagnitude(Float2, float) public static Float2 ClampMagnitude(Float2 vector, float maxLength) Parameters vector Float2 maxLength float Returns Float2 Distance(Float2, Float2) public static float Distance(Float2 a, Float2 b) Parameters a Float2 b Float2 Returns float Dot(Float2, Float2) public static float Dot(Float2 lhs, Float2 rhs) Parameters lhs Float2 rhs Float2 Returns float Equals(Float2) Indicates whether the current object is equal to another object of the same type. public readonly bool Equals(Float2 other) Parameters other Float2 An object to compare with this object. Returns bool true if the current object is equal to the other parameter; otherwise, false. Equals(object) Indicates whether this instance and a specified object are equal. public override readonly bool Equals(object other) Parameters other object Returns bool true if obj and this instance are the same type and represent the same value; otherwise, false. GetHashCode() Returns the hash code for this instance. public override readonly int GetHashCode() Returns int A 32-bit signed integer that is the hash code for this instance. Lerp(Float2, Float2, float) public static Float2 Lerp(Float2 a, Float2 b, float t) Parameters a Float2 b Float2 t float Returns Float2 LerpUnclamped(Float2, Float2, float) public static Float2 LerpUnclamped(Float2 a, Float2 b, float t) Parameters a Float2 b Float2 t float Returns Float2 MoveTowards(Float2, Float2, float) public static Float2 MoveTowards(Float2 current, Float2 target, float maxDistanceDelta) Parameters current Float2 target Float2 maxDistanceDelta float Returns Float2 Normalize() public void Normalize() Reflect(Float2, Float2) public static Float2 Reflect(Float2 inDirection, Float2 inNormal) Parameters inDirection Float2 inNormal Float2 Returns Float2 Scale(Float2) public void Scale(Float2 scale) Parameters scale Float2 Scale(Float2, Float2) public static Float2 Scale(Float2 a, Float2 b) Parameters a Float2 b Float2 Returns Float2 Set(float, float) public void Set(float newX, float newY) Parameters newX float newY float SignedAngle(Float2, Float2) public static float SignedAngle(Float2 from, Float2 to) Parameters from Float2 to Float2 Returns float SmoothDamp(Float2, Float2, ref Float2, float, float, float) public static Float2 SmoothDamp(Float2 current, Float2 target, ref Float2 currentVelocity, float smoothTime, float maxSpeed, float deltaTime) Parameters current Float2 target Float2 currentVelocity Float2 smoothTime float maxSpeed float deltaTime float Returns Float2 SqrMagnitude() public readonly float SqrMagnitude() Returns float SqrMagnitude(Float2) public static float SqrMagnitude(Float2 a) Parameters a Float2 Returns float ToString() Returns the fully qualified type name of this instance. public override readonly string ToString() Returns string The fully qualified type name. ToString(string) public readonly string ToString(string format) Parameters format string Returns string ToString(string, IFormatProvider) Formats the value of the current instance using the specified format. public readonly string ToString(string format, IFormatProvider formatProvider) Parameters format string The format to use. -or- A null reference (Nothing in Visual Basic) to use the default format defined for the type of the IFormattable implementation. formatProvider IFormatProvider The provider to use to format the value. -or- A null reference (Nothing in Visual Basic) to obtain the numeric format information from the current locale setting of the operating system. Returns string The value of the current instance in the specified format. Operators operator +(Float2, Float2) public static Float2 operator +(Float2 a, Float2 b) Parameters a Float2 b Float2 Returns Float2 operator /(Float2, Float2) public static Float2 operator /(Float2 a, Float2 b) Parameters a Float2 b Float2 Returns Float2 operator /(Float2, float) public static Float2 operator /(Float2 a, float d) Parameters a Float2 d float Returns Float2 operator ==(Float2, Float2) public static bool operator ==(Float2 lhs, Float2 rhs) Parameters lhs Float2 rhs Float2 Returns bool implicit operator Float3(Float2) public static implicit operator Float3(Float2 v) Parameters v Float2 Returns Float3 implicit operator Float2(Float3) public static implicit operator Float2(Float3 v) Parameters v Float3 Returns Float2 operator !=(Float2, Float2) public static bool operator !=(Float2 lhs, Float2 rhs) Parameters lhs Float2 rhs Float2 Returns bool operator *(Float2, Float2) public static Float2 operator *(Float2 a, Float2 b) Parameters a Float2 b Float2 Returns Float2 operator *(Float2, float) public static Float2 operator *(Float2 a, float d) Parameters a Float2 d float Returns Float2 operator *(float, Float2) public static Float2 operator *(float d, Float2 a) Parameters d float a Float2 Returns Float2 operator -(Float2, Float2) public static Float2 operator -(Float2 a, Float2 b) Parameters a Float2 b Float2 Returns Float2 operator -(Float2) public static Float2 operator -(Float2 a) Parameters a Float2 Returns Float2"
  },
  "api/AngeliA.Float3.html": {
    "href": "api/AngeliA.Float3.html",
    "title": "Struct Float3 | AngeliA",
    "summary": "Struct Float3 Namespace AngeliA Assembly AngeliA Framework.dll [Serializable] public struct Float3 : IEquatable<Float3>, IFormattable Implements IEquatable<Float3> IFormattable Inherited Members object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Extension Methods Extension.Almost(Float3, Float3) Extension.NotAlmost(Float3, Float3) Extension.Rotate(Float3, float) Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Constructors Float3(float, float) public Float3(float x, float y) Parameters x float y float Float3(float, float, float) public Float3(float x, float y, float z) Parameters x float y float z float Fields kEpsilon public const float kEpsilon = 1E-05 Field Value float kEpsilonNormalSqrt public const float kEpsilonNormalSqrt = 1E-15 Field Value float x public float x Field Value float y public float y Field Value float z public float z Field Value float Properties this[int] public float this[int index] { readonly get; set; } Parameters index int Property Value float back public static Float3 back { get; } Property Value Float3 down public static Float3 down { get; } Property Value Float3 forward public static Float3 forward { get; } Property Value Float3 left public static Float3 left { get; } Property Value Float3 magnitude public readonly float magnitude { get; } Property Value float negativeInfinity public static Float3 negativeInfinity { get; } Property Value Float3 normalized public readonly Float3 normalized { get; } Property Value Float3 one public static Float3 one { get; } Property Value Float3 positiveInfinity public static Float3 positiveInfinity { get; } Property Value Float3 right public static Float3 right { get; } Property Value Float3 sqrMagnitude public readonly float sqrMagnitude { get; } Property Value float up public static Float3 up { get; } Property Value Float3 zero public static Float3 zero { get; } Property Value Float3 Methods Angle(Float3, Float3) public static float Angle(Float3 from, Float3 to) Parameters from Float3 to Float3 Returns float ClampMagnitude(Float3, float) public static Float3 ClampMagnitude(Float3 vector, float maxLength) Parameters vector Float3 maxLength float Returns Float3 Cross(Float3, Float3) public static Float3 Cross(Float3 lhs, Float3 rhs) Parameters lhs Float3 rhs Float3 Returns Float3 Distance(Float3, Float3) public static float Distance(Float3 a, Float3 b) Parameters a Float3 b Float3 Returns float Dot(Float3, Float3) public static float Dot(Float3 lhs, Float3 rhs) Parameters lhs Float3 rhs Float3 Returns float Equals(Float3) Indicates whether the current object is equal to another object of the same type. public readonly bool Equals(Float3 other) Parameters other Float3 An object to compare with this object. Returns bool true if the current object is equal to the other parameter; otherwise, false. Equals(object) Indicates whether this instance and a specified object are equal. public override readonly bool Equals(object other) Parameters other object Returns bool true if obj and this instance are the same type and represent the same value; otherwise, false. GetHashCode() Returns the hash code for this instance. public override readonly int GetHashCode() Returns int A 32-bit signed integer that is the hash code for this instance. Lerp(Float3, Float3, float) public static Float3 Lerp(Float3 a, Float3 b, float t) Parameters a Float3 b Float3 t float Returns Float3 LerpUnclamped(Float3, Float3, float) public static Float3 LerpUnclamped(Float3 a, Float3 b, float t) Parameters a Float3 b Float3 t float Returns Float3 Magnitude(Float3) public static float Magnitude(Float3 vector) Parameters vector Float3 Returns float Max(Float3, Float3) public static Float3 Max(Float3 lhs, Float3 rhs) Parameters lhs Float3 rhs Float3 Returns Float3 Min(Float3, Float3) public static Float3 Min(Float3 lhs, Float3 rhs) Parameters lhs Float3 rhs Float3 Returns Float3 MoveTowards(Float3, Float3, float) public static Float3 MoveTowards(Float3 current, Float3 target, float maxDistanceDelta) Parameters current Float3 target Float3 maxDistanceDelta float Returns Float3 Normalize() public void Normalize() Normalize(Float3) public static Float3 Normalize(Float3 value) Parameters value Float3 Returns Float3 Project(Float3, Float3) public static Float3 Project(Float3 vector, Float3 onNormal) Parameters vector Float3 onNormal Float3 Returns Float3 ProjectOnPlane(Float3, Float3) public static Float3 ProjectOnPlane(Float3 vector, Float3 planeNormal) Parameters vector Float3 planeNormal Float3 Returns Float3 Reflect(Float3, Float3) public static Float3 Reflect(Float3 inDirection, Float3 inNormal) Parameters inDirection Float3 inNormal Float3 Returns Float3 Scale(Float3) public void Scale(Float3 scale) Parameters scale Float3 Scale(Float3, Float3) public static Float3 Scale(Float3 a, Float3 b) Parameters a Float3 b Float3 Returns Float3 Set(float, float, float) public void Set(float newX, float newY, float newZ) Parameters newX float newY float newZ float SignedAngle(Float3, Float3, Float3) public static float SignedAngle(Float3 from, Float3 to, Float3 axis) Parameters from Float3 to Float3 axis Float3 Returns float SmoothDamp(Float3, Float3, ref Float3, float, float, float) public static Float3 SmoothDamp(Float3 current, Float3 target, ref Float3 currentVelocity, float smoothTime, float maxSpeed, float deltaTime) Parameters current Float3 target Float3 currentVelocity Float3 smoothTime float maxSpeed float deltaTime float Returns Float3 SqrMagnitude(Float3) public static float SqrMagnitude(Float3 vector) Parameters vector Float3 Returns float ToString() Returns the fully qualified type name of this instance. public override readonly string ToString() Returns string The fully qualified type name. ToString(string) public readonly string ToString(string format) Parameters format string Returns string ToString(string, IFormatProvider) Formats the value of the current instance using the specified format. public readonly string ToString(string format, IFormatProvider formatProvider) Parameters format string The format to use. -or- A null reference (Nothing in Visual Basic) to use the default format defined for the type of the IFormattable implementation. formatProvider IFormatProvider The provider to use to format the value. -or- A null reference (Nothing in Visual Basic) to obtain the numeric format information from the current locale setting of the operating system. Returns string The value of the current instance in the specified format. Operators operator +(Float3, Float3) public static Float3 operator +(Float3 a, Float3 b) Parameters a Float3 b Float3 Returns Float3 operator /(Float3, float) public static Float3 operator /(Float3 a, float d) Parameters a Float3 d float Returns Float3 operator ==(Float3, Float3) public static bool operator ==(Float3 lhs, Float3 rhs) Parameters lhs Float3 rhs Float3 Returns bool operator !=(Float3, Float3) public static bool operator !=(Float3 lhs, Float3 rhs) Parameters lhs Float3 rhs Float3 Returns bool operator *(Float3, float) public static Float3 operator *(Float3 a, float d) Parameters a Float3 d float Returns Float3 operator *(float, Float3) public static Float3 operator *(float d, Float3 a) Parameters d float a Float3 Returns Float3 operator -(Float3, Float3) public static Float3 operator -(Float3 a, Float3 b) Parameters a Float3 b Float3 Returns Float3 operator -(Float3) public static Float3 operator -(Float3 a) Parameters a Float3 Returns Float3"
  },
  "api/AngeliA.Float4.html": {
    "href": "api/AngeliA.Float4.html",
    "title": "Struct Float4 | AngeliA",
    "summary": "Struct Float4 Namespace AngeliA Assembly AngeliA Framework.dll [Serializable] public struct Float4 : IEquatable<Float4>, IFormattable Implements IEquatable<Float4> IFormattable Inherited Members object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Extension Methods Extension.AlmostZero(Float4) Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Constructors Float4(float, float) public Float4(float x, float y) Parameters x float y float Float4(float, float, float) public Float4(float x, float y, float z) Parameters x float y float z float Float4(float, float, float, float) public Float4(float x, float y, float z, float w) Parameters x float y float z float w float Fields kEpsilon public const float kEpsilon = 1E-05 Field Value float w public float w Field Value float x public float x Field Value float y public float y Field Value float z public float z Field Value float Properties this[int] public float this[int index] { readonly get; set; } Parameters index int Property Value float magnitude public readonly float magnitude { get; } Property Value float negativeInfinity public static Float4 negativeInfinity { get; } Property Value Float4 normalized public readonly Float4 normalized { get; } Property Value Float4 one public static Float4 one { get; } Property Value Float4 positiveInfinity public static Float4 positiveInfinity { get; } Property Value Float4 sqrMagnitude public readonly float sqrMagnitude { get; } Property Value float zero public static Float4 zero { get; } Property Value Float4 Methods Distance(Float4, Float4) public static float Distance(Float4 a, Float4 b) Parameters a Float4 b Float4 Returns float Dot(Float4, Float4) public static float Dot(Float4 a, Float4 b) Parameters a Float4 b Float4 Returns float Equals(Float4) Indicates whether the current object is equal to another object of the same type. public readonly bool Equals(Float4 other) Parameters other Float4 An object to compare with this object. Returns bool true if the current object is equal to the other parameter; otherwise, false. Equals(object) Indicates whether this instance and a specified object are equal. public override readonly bool Equals(object other) Parameters other object Returns bool true if obj and this instance are the same type and represent the same value; otherwise, false. GetHashCode() Returns the hash code for this instance. public override readonly int GetHashCode() Returns int A 32-bit signed integer that is the hash code for this instance. Lerp(Float4, Float4, float) public static Float4 Lerp(Float4 a, Float4 b, float t) Parameters a Float4 b Float4 t float Returns Float4 LerpUnclamped(Float4, Float4, float) public static Float4 LerpUnclamped(Float4 a, Float4 b, float t) Parameters a Float4 b Float4 t float Returns Float4 Magnitude(Float4) public static float Magnitude(Float4 a) Parameters a Float4 Returns float Max(Float4, Float4) public static Float4 Max(Float4 lhs, Float4 rhs) Parameters lhs Float4 rhs Float4 Returns Float4 Min(Float4, Float4) public static Float4 Min(Float4 lhs, Float4 rhs) Parameters lhs Float4 rhs Float4 Returns Float4 MoveTowards(Float4, Float4, float) public static Float4 MoveTowards(Float4 current, Float4 target, float maxDistanceDelta) Parameters current Float4 target Float4 maxDistanceDelta float Returns Float4 Normalize() public void Normalize() Normalize(Float4) public static Float4 Normalize(Float4 a) Parameters a Float4 Returns Float4 Project(Float4, Float4) public static Float4 Project(Float4 a, Float4 b) Parameters a Float4 b Float4 Returns Float4 Scale(Float4) public void Scale(Float4 scale) Parameters scale Float4 Scale(Float4, Float4) public static Float4 Scale(Float4 a, Float4 b) Parameters a Float4 b Float4 Returns Float4 Set(float, float, float, float) public void Set(float newX, float newY, float newZ, float newW) Parameters newX float newY float newZ float newW float SqrMagnitude() public readonly float SqrMagnitude() Returns float SqrMagnitude(Float4) public static float SqrMagnitude(Float4 a) Parameters a Float4 Returns float ToString() Returns the fully qualified type name of this instance. public override readonly string ToString() Returns string The fully qualified type name. ToString(string) public readonly string ToString(string format) Parameters format string Returns string ToString(string, IFormatProvider) Formats the value of the current instance using the specified format. public readonly string ToString(string format, IFormatProvider formatProvider) Parameters format string The format to use. -or- A null reference (Nothing in Visual Basic) to use the default format defined for the type of the IFormattable implementation. formatProvider IFormatProvider The provider to use to format the value. -or- A null reference (Nothing in Visual Basic) to obtain the numeric format information from the current locale setting of the operating system. Returns string The value of the current instance in the specified format. Operators operator +(Float4, Float4) public static Float4 operator +(Float4 a, Float4 b) Parameters a Float4 b Float4 Returns Float4 operator /(Float4, float) public static Float4 operator /(Float4 a, float d) Parameters a Float4 d float Returns Float4 operator ==(Float4, Float4) public static bool operator ==(Float4 lhs, Float4 rhs) Parameters lhs Float4 rhs Float4 Returns bool implicit operator Float4(Float2) public static implicit operator Float4(Float2 v) Parameters v Float2 Returns Float4 implicit operator Float4(Float3) public static implicit operator Float4(Float3 v) Parameters v Float3 Returns Float4 implicit operator Float2(Float4) public static implicit operator Float2(Float4 v) Parameters v Float4 Returns Float2 implicit operator Float3(Float4) public static implicit operator Float3(Float4 v) Parameters v Float4 Returns Float3 operator !=(Float4, Float4) public static bool operator !=(Float4 lhs, Float4 rhs) Parameters lhs Float4 rhs Float4 Returns bool operator *(Float4, float) public static Float4 operator *(Float4 a, float d) Parameters a Float4 d float Returns Float4 operator *(float, Float4) public static Float4 operator *(float d, Float4 a) Parameters d float a Float4 Returns Float4 operator -(Float4, Float4) public static Float4 operator -(Float4 a, Float4 b) Parameters a Float4 b Float4 Returns Float4 operator -(Float4) public static Float4 operator -(Float4 a) Parameters a Float4 Returns Float4"
  },
  "api/AngeliA.FontData.html": {
    "href": "api/AngeliA.FontData.html",
    "title": "Class FontData | AngeliA",
    "summary": "Class FontData Namespace AngeliA Assembly AngeliA Framework.dll public abstract class FontData Inheritance object FontData Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Fields BuiltIn public bool BuiltIn Field Value bool FileModifyDate public long FileModifyDate Field Value long ID public int ID Field Value int Name public string Name Field Value string Path public string Path Field Value string Scale public float Scale Field Value float Size public int Size Field Value int Methods GetFontRealName(string) public static string GetFontRealName(string fontNameWithHashTag) Parameters fontNameWithHashTag string Returns string LoadData(string) public abstract void LoadData(string filePath) Parameters filePath string LoadFromFile(string, bool) public bool LoadFromFile(string fontPath, bool builtIn) Parameters fontPath string builtIn bool Returns bool TryGetCharSprite(char, out CharSprite) public abstract bool TryGetCharSprite(char c, out CharSprite result) Parameters c char result CharSprite Returns bool Unload() public abstract void Unload()"
  },
  "api/AngeliA.FontScope.html": {
    "href": "api/AngeliA.FontScope.html",
    "title": "Struct FontScope | AngeliA",
    "summary": "Struct FontScope Namespace AngeliA Assembly AngeliA Framework.dll public readonly struct FontScope : IDisposable Implements IDisposable Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Constructors FontScope(int) public FontScope(int fontID) Parameters fontID int Methods Dispose() Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources. public void Dispose()"
  },
  "api/AngeliA.Food.html": {
    "href": "api/AngeliA.Food.html",
    "title": "Class Food | AngeliA",
    "summary": "Class Food Namespace AngeliA Assembly AngeliA Framework.dll [Entity.MapEditorGroup(\"ItemFood\", 0)] public abstract class Food : Item, IMapItem Inheritance object Item Food Implements IMapItem Inherited Members Item.AllowDuplicateUpdate Item.EmbedIntoLevel Item.TypeID Item.BeforeItemUpdate_FromInventory(Character, int, int) Item.OnItemUpdate_FromInventory(Character, int, int) Item.OnPoseAnimationUpdate_FromInventory(PoseCharacterRenderer, int, int) Item.OnTakeDamage_FromInventory(Character, int, int, ref Damage) Item.OnCharacterAttack_FromInventory(Character, Bullet, int, int) Item.BeforeItemUpdate_FromEquipment(Character) Item.OnItemUpdate_FromEquipment(Character) Item.BeforePoseAnimationUpdate_FromEquipment(PoseCharacterRenderer) Item.OnPoseAnimationUpdate_FromEquipment(PoseCharacterRenderer) Item.OnTakeDamage_FromEquipment(Character, ref Damage) Item.OnCharacterAttack_FromEquipment(Character, Bullet) Item.TryRepairEquipment(Character) Item.OnItemUpdate_FromItemHolder(ItemHolder, int) Item.OnCollect(Character) Item.CanUse(Character) Item.Use(Character, int, int, out bool) Item.ItemConditionCheck(Character) Item.DrawItem(Entity, IRect, Color32, int) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Properties MaxStackCount public override int MaxStackCount { get; } Property Value int"
  },
  "api/AngeliA.FootCloth.html": {
    "href": "api/AngeliA.FootCloth.html",
    "title": "Class FootCloth | AngeliA",
    "summary": "Class FootCloth Namespace AngeliA Assembly AngeliA Framework.dll public abstract class FootCloth : Cloth Inheritance object Cloth FootCloth Derived ModularFootSuit Inherited Members Cloth.ClothSystemReady Cloth.ClothID Cloth.ClothName Cloth.SheetIndex Cloth.Pool Cloth.DefaultPool Cloth.HasCloth(int) Cloth.TryGetCloth(int, out Cloth) Cloth.GetDefaultClothID(int, ClothType) Cloth.ForAllCloth() Cloth.AttachClothOn(BodyPart, AngeSprite, int, int, int, int, int, int, int, int, bool) Cloth.CoverClothOn(BodyPart, AngeSprite) Cloth.CoverClothOn(BodyPart, AngeSprite, int) Cloth.CoverClothOn(BodyPart, AngeSprite, int, Color32, bool) Cloth.GetDisplayName(out int) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Properties ClothType public override sealed ClothType ClothType { get; } Property Value ClothType SpriteLoaded public override bool SpriteLoaded { get; } Property Value bool Methods DrawCloth(PoseCharacterRenderer) public override void DrawCloth(PoseCharacterRenderer renderer) Parameters renderer PoseCharacterRenderer DrawClothForFoot(PoseCharacterRenderer, OrientedSprite, OrientedSprite, int) public static void DrawClothForFoot(PoseCharacterRenderer renderer, OrientedSprite spriteLeft, OrientedSprite spriteRight, int localZ = 1) Parameters renderer PoseCharacterRenderer spriteLeft OrientedSprite spriteRight OrientedSprite localZ int DrawClothFromPool(PoseCharacterRenderer) public static void DrawClothFromPool(PoseCharacterRenderer renderer) Parameters renderer PoseCharacterRenderer DrawClothGizmos(IRect, Color32, int) public override void DrawClothGizmos(IRect rect, Color32 tint, int z) Parameters rect IRect tint Color32 z int FillFromSheet(string) public override bool FillFromSheet(string name) Parameters name string Returns bool"
  },
  "api/AngeliA.FrameBasedBool.html": {
    "href": "api/AngeliA.FrameBasedBool.html",
    "title": "Class FrameBasedBool | AngeliA",
    "summary": "Class FrameBasedBool Namespace AngeliA Assembly AngeliA Framework.dll public class FrameBasedBool : FrameBasedValue<bool> Inheritance object FrameBasedValue FrameBasedValue<bool> FrameBasedBool Inherited Members FrameBasedValue<bool>.FinalValue FrameBasedValue<bool>.BaseValue FrameBasedValue<bool>.OverrideValue FrameBasedValue<bool>.Override(bool, int, int) FrameBasedValue<bool>.ToString() FrameBasedValue.Overrided FrameBasedValue.OverrideFrame FrameBasedValue.OverridePriority FrameBasedValue.ClearOverride() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Constructors FrameBasedBool() public FrameBasedBool() FrameBasedBool(bool) public FrameBasedBool(bool value) Parameters value bool Methods And(bool, int, int) public void And(bool value, int duration = 0, int priority = 0) Parameters value bool duration int priority int False(int, int) public void False(int duration = 0, int priority = 0) Parameters duration int priority int Or(bool, int, int) public void Or(bool value, int duration = 0, int priority = 0) Parameters value bool duration int priority int True(int, int) public void True(int duration = 0, int priority = 0) Parameters duration int priority int Operators implicit operator bool(FrameBasedBool) public static implicit operator bool(FrameBasedBool bBool) Parameters bBool FrameBasedBool Returns bool"
  },
  "api/AngeliA.FrameBasedColor.html": {
    "href": "api/AngeliA.FrameBasedColor.html",
    "title": "Class FrameBasedColor | AngeliA",
    "summary": "Class FrameBasedColor Namespace AngeliA Assembly AngeliA Framework.dll public class FrameBasedColor : FrameBasedValue<Color32> Inheritance object FrameBasedValue FrameBasedValue<Color32> FrameBasedColor Inherited Members FrameBasedValue<Color32>.FinalValue FrameBasedValue<Color32>.BaseValue FrameBasedValue<Color32>.OverrideValue FrameBasedValue<Color32>.Override(Color32, int, int) FrameBasedValue<Color32>.ToString() FrameBasedValue.Overrided FrameBasedValue.OverrideFrame FrameBasedValue.OverridePriority FrameBasedValue.ClearOverride() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Constructors FrameBasedColor() public FrameBasedColor() FrameBasedColor(Color32) public FrameBasedColor(Color32 value) Parameters value Color32 Methods Tint(Color32, int, int) public void Tint(Color32 tint, int duration = 0, int priority = 0) Parameters tint Color32 duration int priority int Operators implicit operator Color32(FrameBasedColor) public static implicit operator Color32(FrameBasedColor bColor) Parameters bColor FrameBasedColor Returns Color32"
  },
  "api/AngeliA.FrameBasedInt.html": {
    "href": "api/AngeliA.FrameBasedInt.html",
    "title": "Class FrameBasedInt | AngeliA",
    "summary": "Class FrameBasedInt Namespace AngeliA Assembly AngeliA Framework.dll public class FrameBasedInt : FrameBasedValue<int> Inheritance object FrameBasedValue FrameBasedValue<int> FrameBasedInt Inherited Members FrameBasedValue<int>.FinalValue FrameBasedValue<int>.BaseValue FrameBasedValue<int>.OverrideValue FrameBasedValue<int>.Override(int, int, int) FrameBasedValue<int>.ToString() FrameBasedValue.Overrided FrameBasedValue.OverrideFrame FrameBasedValue.OverridePriority FrameBasedValue.ClearOverride() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Constructors FrameBasedInt() public FrameBasedInt() FrameBasedInt(int) public FrameBasedInt(int value) Parameters value int Methods Add(int, int, int) public void Add(int delta, int duration = 0, int priority = 0) Parameters delta int duration int priority int Max(int, int, int) public void Max(int value, int duration = 0, int priority = 0) Parameters value int duration int priority int Min(int, int, int) public void Min(int value, int duration = 0, int priority = 0) Parameters value int duration int priority int Multiply(int, int, int) public void Multiply(int scale, int duration = 0, int priority = 0) Parameters scale int duration int priority int Operators implicit operator int(FrameBasedInt) public static implicit operator int(FrameBasedInt bInt) Parameters bInt FrameBasedInt Returns int"
  },
  "api/AngeliA.FrameBasedValue-1.html": {
    "href": "api/AngeliA.FrameBasedValue-1.html",
    "title": "Class FrameBasedValue<T> | AngeliA",
    "summary": "Class FrameBasedValue<T> Namespace AngeliA Assembly AngeliA Framework.dll public abstract class FrameBasedValue<T> : FrameBasedValue Type Parameters T Inheritance object FrameBasedValue FrameBasedValue<T> Derived FrameBasedBool FrameBasedColor FrameBasedInt Inherited Members FrameBasedValue.Overrided FrameBasedValue.OverrideFrame FrameBasedValue.OverridePriority FrameBasedValue.ClearOverride() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Constructors FrameBasedValue() public FrameBasedValue() FrameBasedValue(T) public FrameBasedValue(T value) Parameters value T Fields BaseValue public T BaseValue Field Value T OverrideValue public T OverrideValue Field Value T Properties FinalValue public T FinalValue { get; } Property Value T Methods Override(T, int, int) public void Override(T value, int duration = 0, int priority = 0) Parameters value T duration int priority int ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object."
  },
  "api/AngeliA.FrameBasedValue.html": {
    "href": "api/AngeliA.FrameBasedValue.html",
    "title": "Class FrameBasedValue | AngeliA",
    "summary": "Class FrameBasedValue Namespace AngeliA Assembly AngeliA Framework.dll public abstract class FrameBasedValue Inheritance object FrameBasedValue Derived FrameBasedValue<T> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Fields OverrideFrame public int OverrideFrame Field Value int OverridePriority public int OverridePriority Field Value int Properties Overrided public bool Overrided { get; } Property Value bool Methods ClearOverride() public void ClearOverride()"
  },
  "api/AngeliA.FrameworkUtil.html": {
    "href": "api/AngeliA.FrameworkUtil.html",
    "title": "Class FrameworkUtil | AngeliA",
    "summary": "Class FrameworkUtil Namespace AngeliA Assembly AngeliA Framework.dll public static class FrameworkUtil Inheritance object FrameworkUtil Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields GAMEPAD_CODE public static readonly Dictionary<GamepadKey, int> GAMEPAD_CODE Field Value Dictionary<GamepadKey, int> RUN_CODE_ANALYSIS_SETTING_ID public const int RUN_CODE_ANALYSIS_SETTING_ID = 895245367 Field Value int RUN_CODE_ANALYSIS_SETTING_SILENTLY_ID public const int RUN_CODE_ANALYSIS_SETTING_SILENTLY_ID = 895245368 Field Value int Methods BlockRuleToDigit(BlockRule) public static int BlockRuleToDigit(BlockRule ruleStr) Parameters ruleStr BlockRule Returns int BreakEntityBlock(Entity) public static bool BreakEntityBlock(Entity target) Parameters target Entity Returns bool BroadcastBuff(IRect, int, int) public static void BroadcastBuff(IRect range, int buffID, int duration = 1) Parameters range IRect buffID int duration int BroadcastBuff(int, int, int, int, int) public static void BroadcastBuff(int x, int y, int radius, int buffID, int duration = 1) Parameters x int y int radius int buffID int duration int ClampCells(Cell[], IRect, int, int) public static void ClampCells(Cell[] cells, IRect rect, int startIndex, int endIndex) Parameters cells Cell[] rect IRect startIndex int endIndex int ClampCells(Span<Cell>, IRect, int, int) public static void ClampCells(Span<Cell> cells, IRect rect, int startIndex, int endIndex) Parameters cells Span<Cell> rect IRect startIndex int endIndex int DeleteAllEmptyMaps(string) public static void DeleteAllEmptyMaps(string mapRoot) Parameters mapRoot string DigitToBlockRule(int) public static BlockRule DigitToBlockRule(int digit) Parameters digit int Returns BlockRule DigitToRuleByte(int, byte[]) public static void DigitToRuleByte(int digit, byte[] bytes) Parameters digit int bytes byte[] DrawAfterimageEffect(Cell, int, int, Color32, Color32, int, int, int, int, int) public static void DrawAfterimageEffect(Cell source, int speedX, int speedY, Color32 tintStart, Color32 tintEnd, int rotateSpeed = 0, int count = 3, int frameStep = 2, int scaleStart = 1000, int scaleEnd = 1000) Parameters source Cell speedX int speedY int tintStart Color32 tintEnd Color32 rotateSpeed int count int frameStep int scaleStart int scaleEnd int DrawAllCollidersAsGizmos(int, Int2, float, bool, bool, bool, Color32[]) public static void DrawAllCollidersAsGizmos(int physicsMask = 31, Int2 offset = default, float brightness = 1, bool ignoreNonOnewayTrigger = false, bool ignoreOnewayTrigger = false, bool useTechEffect = false, Color32[] layerTints = null) Parameters physicsMask int offset Int2 brightness float ignoreNonOnewayTrigger bool ignoreOnewayTrigger bool useTechEffect bool layerTints Color32[] DrawBullet(Bullet, int, bool, int, int, int) public static void DrawBullet(Bullet bullet, int artworkID, bool facingRight, int rotation, int scale, int z = 2147483631) Parameters bullet Bullet artworkID int facingRight bool rotation int scale int z int DrawClockHands(IRect, int, int, int, Color32) public static void DrawClockHands(IRect rect, int handCode, int thickness, int thicknessSecond, Color32 tint) Parameters rect IRect handCode int thickness int thicknessSecond int tint Color32 DrawClockHands(int, int, int, int, int, int, Color32, int) public static void DrawClockHands(int centerX, int centerY, int radius, int handCode, int thickness, int thicknessSecond, Color32 tint, int z = -2147483648) Parameters centerX int centerY int radius int handCode int thickness int thicknessSecond int tint Color32 z int DrawClockPendulum(int, int, int, int, int, int, int, int, int) public static void DrawClockPendulum(int artCodeLeg, int artCodeHead, int x, int y, int length, int thickness, int headSize, int maxRot, int deltaX = 0) Parameters artCodeLeg int artCodeHead int x int y int length int thickness int headSize int maxRot int deltaX int DrawEnvironmentShadow(Cell, int, int, byte, int) public static Cell DrawEnvironmentShadow(Cell source, int offsetX = -64, int offsetY = 0, byte alpha = 64, int z = -65520) Parameters source Cell offsetX int offsetY int alpha byte z int Returns Cell DrawExplosionRing(int, int, int, int, int, int, Color32, int) public static void DrawExplosionRing(int spriteID, int centerX, int centerY, int radius, int localFrame, int duration, Color32 tint, int z = 2147483646) Parameters spriteID int centerX int centerY int radius int localFrame int duration int tint Color32 z int DrawFrozenEffect(IRect, byte, int, Int2, int, int, int) public static void DrawFrozenEffect(IRect rect, byte alpha, int count = 32, Int2 offset = default, int seed = 0, int size = 142, int z = 0) Parameters rect IRect alpha byte count int offset Int2 seed int size int z int DrawGlitchEffect(Cell, int, int, int, int) public static void DrawGlitchEffect(Cell cell, int frame, int speedAmount = 1000, int shiftAmount = 1000, int scaleAmount = 1000) Parameters cell Cell frame int speedAmount int shiftAmount int scaleAmount int DrawItemShortInfo(int, IRect, int, int, int, Color32) public static void DrawItemShortInfo(int itemID, IRect panelRect, int z, int armorIcon, int armorEmptyIcon, Color32 tint) Parameters itemID int panelRect IRect z int armorIcon int armorEmptyIcon int tint Color32 DrawItemUsageBar(IRect, int, int) public static void DrawItemUsageBar(IRect rect, int usage, int maxUsage) Parameters rect IRect usage int maxUsage int DrawLightenEffect(AngeSprite, IRect, int, int) public static void DrawLightenEffect(AngeSprite sprite, IRect rect, int count = 2, int size = 196) Parameters sprite AngeSprite rect IRect count int size int DrawLightenEffect(int, IRect, int, int) public static void DrawLightenEffect(int spriteID, IRect rect, int count = 2, int size = 196) Parameters spriteID int rect IRect count int size int DrawLoopingActivatedHighlight(IRect, Color32, int, int) public static void DrawLoopingActivatedHighlight(IRect targetRect, Color32 tint, int lineCount = 4, int duration = 22) Parameters targetRect IRect tint Color32 lineCount int duration int DrawLoopingTriangleMark(IRect, int, Color32, Direction4, int, int, int, int) public static void DrawLoopingTriangleMark(IRect range, int frame, Color32 tint, Direction4 direction, int count, int size, int z, int speed) Parameters range IRect frame int tint Color32 direction Direction4 count int size int z int speed int DrawMagicEncircleAurora(int, int, int, int, int, Color32, int, int, int, int, int, int) public static void DrawMagicEncircleAurora(int spriteID, int count, int centerX, int centerY, int localFrame, Color32 tint, int scale = 1000, int rotateSpeed = 16, int swingDuration = 20, int swingAmout = 240, int growDuration = 10, int z = -2147483648) Parameters spriteID int count int centerX int centerY int localFrame int tint Color32 scale int rotateSpeed int swingDuration int swingAmout int growDuration int z int DrawOnFireEffect(AngeSprite, IRect, int, int, int, int, int) public static void DrawOnFireEffect(AngeSprite sprite, IRect rect, int count = 2, int loop = 40, int size = 200, int seed = 0, int z = 2147483647) Parameters sprite AngeSprite rect IRect count int loop int size int seed int z int DrawOnFireEffect(int, IRect, int, int, int, int, int) public static void DrawOnFireEffect(int spriteID, IRect rect, int count = 2, int loop = 40, int size = 200, int seed = 0, int z = 2147483647) Parameters spriteID int rect IRect count int loop int size int seed int z int DrawPoisonEffect(AngeSprite, IRect, int, int, int, int, int) public static void DrawPoisonEffect(AngeSprite sprite, IRect rect, int loop = 120, int count = 4, int seed = 0, int size = 132, int z = 2147483647) Parameters sprite AngeSprite rect IRect loop int count int seed int size int z int DrawPoisonEffect(int, IRect, int, int, int, int, int) public static void DrawPoisonEffect(int spriteID, IRect rect, int loop = 120, int count = 4, int seed = 0, int size = 132, int z = 2147483647) Parameters spriteID int rect IRect loop int count int seed int size int z int DrawPoseCharacterAsUI(IRect, PoseCharacterRenderer, int) public static bool DrawPoseCharacterAsUI(IRect rect, PoseCharacterRenderer renderer, int animationFrame) Parameters rect IRect renderer PoseCharacterRenderer animationFrame int Returns bool DrawPoseCharacterAsUI(IRect, PoseCharacterRenderer, int, out IRect, out IRect) public static bool DrawPoseCharacterAsUI(IRect rect, PoseCharacterRenderer renderer, int animationFrame, out IRect globalRect, out IRect uiRect) Parameters rect IRect renderer PoseCharacterRenderer animationFrame int globalRect IRect uiRect IRect Returns bool DrawSegmentHealthBar(int, int, int, int, int, int, int, int, int, int) public static void DrawSegmentHealthBar(int x, int y, int heartLeftCode, int heartRightCode, int emptyHeartLeftCode, int emptyHeartRightCode, int dropParticleID, int hp, int maxHP, int prevHP = -2147483648) Parameters x int y int heartLeftCode int heartRightCode int emptyHeartLeftCode int emptyHeartRightCode int dropParticleID int hp int maxHP int prevHP int ForAllExistsWorldInRange(IBlockSquad, IRect, int, out int) public static Int3[] ForAllExistsWorldInRange(IBlockSquad squad, IRect overlapUnitRange, int z, out int count) Parameters squad IBlockSquad overlapUnitRange IRect z int count int Returns Int3[] ForAllWorldInRange(IRect, int, out int) public static Int3[] ForAllWorldInRange(IRect overlapUnitRange, int z, out int count) Parameters overlapUnitRange IRect z int count int Returns Int3[] FrameBasedFields_to_List(object, List<(string name, int value)>) public static void FrameBasedFields_to_List(object target, List<(string name, int value)> list) Parameters target object list List<(string name, int value)> GetAimingBuilderPositionFromKey(Character, BlockType, out int, out int, out bool, bool) public static bool GetAimingBuilderPositionFromKey(Character holder, BlockType blockType, out int targetUnitX, out int targetUnitY, out bool requireEmbedAsElement, bool ignoreValid = false) Parameters holder Character blockType BlockType targetUnitX int targetUnitY int requireEmbedAsElement bool ignoreValid bool Returns bool GetAimingBuilderPositionFromMouse(Character, BlockType, out int, out int, out bool) public static bool GetAimingBuilderPositionFromMouse(Character holder, BlockType blockType, out int targetUnitX, out int targetUnitY, out bool requireEmbedAsElement) Parameters holder Character blockType BlockType targetUnitX int targetUnitY int requireEmbedAsElement bool Returns bool GetAimingPickerPositionFromKey(Character, out int, out int, bool, bool, bool) public static bool GetAimingPickerPositionFromKey(Character pHolder, out int targetUnitX, out int targetUnitY, bool allowPickBlockEntity = true, bool allowPickLevelBlock = true, bool allowPickBackgroundBlock = true) Parameters pHolder Character targetUnitX int targetUnitY int allowPickBlockEntity bool allowPickLevelBlock bool allowPickBackgroundBlock bool Returns bool GetAimingPickerPositionFromMouse(Character, int, out int, out int, out bool, bool, bool, bool) public static bool GetAimingPickerPositionFromMouse(Character holder, int unitRange, out int targetUnitX, out int targetUnitY, out bool inRange, bool allowPickBlockEntity = true, bool allowPickLevelBlock = true, bool allowPickBackgroundBlock = true) Parameters holder Character unitRange int targetUnitX int targetUnitY int inRange bool allowPickBlockEntity bool allowPickLevelBlock bool allowPickBackgroundBlock bool Returns bool GetBlockRealName(string) public static string GetBlockRealName(string name) Parameters name string Returns string GetEntityPose(Entity, bool, int, out Entity, out Entity, OperationMode, Tag) public static FittingPose GetEntityPose(Entity entity, bool horizontal, int mask, out Entity left_down, out Entity right_up, OperationMode mode = OperationMode.ColliderOnly, Tag tag = Tag.None) Parameters entity Entity horizontal bool mask int left_down Entity right_up Entity mode OperationMode tag Tag Returns FittingPose GetEntityPose(int, int, int, bool) public static FittingPose GetEntityPose(int typeID, int unitX, int unitY, bool horizontal) Parameters typeID int unitX int unitY int horizontal bool Returns FittingPose GetFlyingFormation(Int2, int, int) public static Int2 GetFlyingFormation(Int2 pos, int column, int instanceIndex) Parameters pos Int2 column int instanceIndex int Returns Int2 GetGroupInfoFromSpriteRealName(string, out string, out int) public static bool GetGroupInfoFromSpriteRealName(string realName, out string groupName, out int groupIndex) Parameters realName string groupName string groupIndex int Returns bool GetItemTypeIcon(int) public static int GetItemTypeIcon(int itemID) Parameters itemID int Returns int GetOnewayTag(Direction4) public static Tag GetOnewayTag(Direction4 gateDirection) Parameters gateDirection Direction4 Returns Tag GetPlayerHoldingHandTool() public static HandTool GetPlayerHoldingHandTool() Returns HandTool GetRepositionElementCode(int, int) public static int GetRepositionElementCode(int deltaGlobalX, int deltaGlobalY) Parameters deltaGlobalX int deltaGlobalY int Returns int GetRuleIndex(IList<AngeSprite>, int, int, int, int, int, int, int, int, int) public static int GetRuleIndex(IList<AngeSprite> sprites, int ruleID, int tl, int tm, int tr, int ml, int mr, int bl, int bm, int br) Parameters sprites IList<AngeSprite> ruleID int tl int tm int tr int ml int mr int bl int bm int br int Returns int GetScaledAudioVolume(int, int) public static float GetScaledAudioVolume(int volume, int scale = 1000) Parameters volume int scale int Returns float GetSlicedUvBorder(AngeSprite, Alignment, out Float2, out Float2, out Float2, out Float2) public static void GetSlicedUvBorder(AngeSprite sprite, Alignment alignment, out Float2 bl, out Float2 br, out Float2 tl, out Float2 tr) Parameters sprite AngeSprite alignment Alignment bl Float2 br Float2 tl Float2 tr Float2 GetSpriteInfoFromName(string, out string, out bool, out Tag, out BlockRule, out bool, out int, out int, out int?, out int?) public static void GetSpriteInfoFromName(string name, out string realName, out bool isTrigger, out Tag tag, out BlockRule rule, out bool noCollider, out int offsetZ, out int aniDuration, out int? pivotX, out int? pivotY) Parameters name string realName string isTrigger bool tag Tag rule BlockRule noCollider bool offsetZ int aniDuration int pivotX int? pivotY int? GetSummaryTint(Color32[]) public static Color32 GetSummaryTint(Color32[] pixels) Parameters pixels Color32[] Returns Color32 HasOnewayTag(Tag) public static bool HasOnewayTag(Tag tag) Parameters tag Tag Returns bool HasPickableBlockAt(int, int, bool, bool, bool) public static bool HasPickableBlockAt(int unitX, int unitY, bool allowPickBlockEntity = true, bool allowPickLevelBlock = true, bool allowPickBackgroundBlock = true) Parameters unitX int unitY int allowPickBlockEntity bool allowPickLevelBlock bool allowPickBackgroundBlock bool Returns bool HasSystemNumber(IBlockSquad, int, int, int) public static bool HasSystemNumber(IBlockSquad squad, int unitX, int unitY, int z) Parameters squad IBlockSquad unitX int unitY int z int Returns bool HighlightBlink(Cell, float, float, bool, bool) public static void HighlightBlink(Cell cell, float pivotX = 0.5, float pivotY = 0, bool horizontal = true, bool vertical = true) Parameters cell Cell pivotX float pivotY float horizontal bool vertical bool InvokeBlockPicked(int, IRect) public static void InvokeBlockPicked(int spriteID, IRect rect) Parameters spriteID int rect IRect InvokeCameOutOfWater(Rigidbody, Entity) public static void InvokeCameOutOfWater(Rigidbody rig, Entity water) Parameters rig Rigidbody water Entity InvokeCheatPerformed(string) public static void InvokeCheatPerformed(string cheatCode) Parameters cheatCode string InvokeErrorHint(Entity, int) public static void InvokeErrorHint(Entity holder, int id) Parameters holder Entity id int InvokeErrorHint(int, int, int) public static void InvokeErrorHint(int x, int y, int id) Parameters x int y int id int InvokeFallIntoWater(Rigidbody, Entity) public static void InvokeFallIntoWater(Rigidbody rig, Entity water) Parameters rig Rigidbody water Entity InvokeItemCollected(Entity, int, int) public static void InvokeItemCollected(Entity collector, int id, int count) Parameters collector Entity id int count int InvokeItemCollected(int, int, int, int) public static void InvokeItemCollected(int id, int x, int y, int count) Parameters id int x int y int count int InvokeItemDamage(Character, int, int) public static void InvokeItemDamage(Character holder, int fromID, int toID) Parameters holder Character fromID int toID int InvokeItemLost(Character, int) public static void InvokeItemLost(Character holder, int id) Parameters holder Character id int InvokeItemUnlocked(int) public static void InvokeItemUnlocked(int itemID) Parameters itemID int InvokeObjectBreak(int, IRect) public static void InvokeObjectBreak(int spriteID, IRect rect) Parameters spriteID int rect IRect InvokeObjectFreeFall(int, int, int, int, int, int, int, int, bool) public static void InvokeObjectFreeFall(int spriteID, int x, int y, int speedX = 0, int speedY = 0, int rotation = -2147483648, int rotationSpeed = 0, int gravity = 5, bool flipX = false) Parameters spriteID int x int y int speedX int speedY int rotation int rotationSpeed int gravity int flipX bool InvokeOnCharacterCrash(Entity) public static void InvokeOnCharacterCrash(Entity target) Parameters target Entity InvokeOnCharacterFly(Entity) public static void InvokeOnCharacterFly(Entity target) Parameters target Entity InvokeOnCharacterJump(Entity) public static void InvokeOnCharacterJump(Entity target) Parameters target Entity InvokeOnCharacterPassOut(Entity) public static void InvokeOnCharacterPassOut(Entity target) Parameters target Entity InvokeOnCharacterPound(Entity) public static void InvokeOnCharacterPound(Entity target) Parameters target Entity InvokeOnCharacterSleeping(Entity) public static void InvokeOnCharacterSleeping(Entity target) Parameters target Entity InvokeOnCharacterSlideStepped(Entity) public static void InvokeOnCharacterSlideStepped(Entity target) Parameters target Entity InvokeOnCharacterTeleport(Entity) public static void InvokeOnCharacterTeleport(Entity target) Parameters target Entity InvokeOnFootStepped(Entity) public static void InvokeOnFootStepped(Entity target) Parameters target Entity IsRepositionElementCode(int) public static bool IsRepositionElementCode(int elementCode) Parameters elementCode int Returns bool LimbRotate(ref int, ref int, ref int, ref int, ref int, ref int, ref int, int, bool, int) public static void LimbRotate(ref int targetX, ref int targetY, ref int targetPivotX, ref int targetPivotY, ref int targetRotation, ref int targetWidth, ref int targetHeight, int rotation, bool useFlip, int grow) Parameters targetX int targetY int targetPivotX int targetPivotY int targetRotation int targetWidth int targetHeight int rotation int useFlip bool grow int LimbRotate(ref int, ref int, ref int, ref int, ref int, ref int, ref int, int, int, int, int, int, int, bool, int) public static void LimbRotate(ref int targetX, ref int targetY, ref int targetPivotX, ref int targetPivotY, ref int targetRotation, ref int targetWidth, ref int targetHeight, int parentX, int parentY, int parentRotation, int parentWidth, int parentHeight, int rotation, bool useFlip, int grow) Parameters targetX int targetY int targetPivotX int targetPivotY int targetRotation int targetWidth int targetHeight int parentX int parentY int parentRotation int parentWidth int parentHeight int rotation int useFlip bool grow int List_to_FrameBasedFields(List<(string name, int value)>, object) public static bool List_to_FrameBasedFields(List<(string name, int value)> list, object target) Parameters list List<(string name, int value)> target object Returns bool MouseInside(IRect) public static bool MouseInside(this IRect rect) Parameters rect IRect Returns bool NameAndIntFile_to_List(List<(string name, int value)>, string) public static bool NameAndIntFile_to_List(List<(string name, int value)> list, string path) Parameters list List<(string name, int value)> path string Returns bool Number_to_SystemNumberID(int) public static int Number_to_SystemNumberID(int number) Parameters number int Returns int PaintBlock(int, int, int, bool) public static void PaintBlock(int unitX, int unitY, int blockColorID, bool overlapExistingElement = false) Parameters unitX int unitY int blockColorID int overlapExistingElement bool Pairs_to_NameAndIntFile(IEnumerable<KeyValuePair<string, int>>, string) public static void Pairs_to_NameAndIntFile(IEnumerable<KeyValuePair<string, int>> list, string path) Parameters list IEnumerable<KeyValuePair<string, int>> path string PerformSpringBounce(Entity, Direction4, int, int) public static bool PerformSpringBounce(Entity springEntity, Direction4 side, int power, int powerSide = 0) Parameters springEntity Entity side Direction4 power int powerSide int Returns bool PerformSpringBounce(Rigidbody, Entity, Direction4, int, int) public static void PerformSpringBounce(Rigidbody target, Entity spring, Direction4 side, int power, int powerSide = 0) Parameters target Rigidbody spring Entity side Direction4 power int powerSide int PickBlockAt(int, int, bool, bool, bool, bool, bool) public static bool PickBlockAt(int unitX, int unitY, bool allowPickBlockEntity = true, bool allowPickLevelBlock = true, bool allowPickBackgroundBlock = true, bool dropItemAfterPicked = true, bool allowMultiplePick = false) Parameters unitX int unitY int allowPickBlockEntity bool allowPickLevelBlock bool allowPickBackgroundBlock bool dropItemAfterPicked bool allowMultiplePick bool Returns bool PutBlockTo(int, BlockType, int, int) public static bool PutBlockTo(int blockID, BlockType blockType, int targetUnitX, int targetUnitY) Parameters blockID int blockType BlockType targetUnitX int targetUnitY int Returns bool ReadSystemNumber(IBlockSquad, int, int, int, Direction4, out int) public static bool ReadSystemNumber(IBlockSquad squad, int unitX, int unitY, int z, Direction4 direction, out int number) Parameters squad IBlockSquad unitX int unitY int z int direction Direction4 number int Returns bool ReadSystemNumber(IBlockSquad, int, int, int, out int) public static bool ReadSystemNumber(IBlockSquad squad, int unitX, int unitY, int z, out int number) Parameters squad IBlockSquad unitX int unitY int z int number int Returns bool RedirectForRule(IBlockSquad, IRect, int) public static void RedirectForRule(IBlockSquad squad, IRect unitRange, int z) Parameters squad IBlockSquad unitRange IRect z int RedirectForRule(IBlockSquad, int, int, int, BlockType) public static void RedirectForRule(IBlockSquad squad, int i, int j, int z, BlockType type) Parameters squad IBlockSquad i int j int z int type BlockType RemapCells(Cell[], int, int, IRect, IRect, int, int, bool, bool) public static void RemapCells(Cell[] cells, int cellIndexStart, int cellIndexEnd, IRect from, IRect to, int fitPivotX = 500, int fitPivotY = 500, bool round = false, bool fit = true) Parameters cells Cell[] cellIndexStart int cellIndexEnd int from IRect to IRect fitPivotX int fitPivotY int round bool fit bool RemapCells(Cell[], int, int, IRect, IRect, out int, int, int, bool, bool) public static void RemapCells(Cell[] cells, int cellIndexStart, int cellIndexEnd, IRect from, IRect to, out int minZ, int fitPivotX = 500, int fitPivotY = 500, bool round = false, bool fit = true) Parameters cells Cell[] cellIndexStart int cellIndexEnd int from IRect to IRect minZ int fitPivotX int fitPivotY int round bool fit bool RemapCells(Span<Cell>, int, int, IRect, IRect, int, int, bool, bool) public static void RemapCells(Span<Cell> cells, int cellIndexStart, int cellIndexEnd, IRect from, IRect to, int fitPivotX = 500, int fitPivotY = 500, bool round = false, bool fit = true) Parameters cells Span<Cell> cellIndexStart int cellIndexEnd int from IRect to IRect fitPivotX int fitPivotY int round bool fit bool RemapCells(Span<Cell>, int, int, IRect, IRect, out int, int, int, bool, bool) public static void RemapCells(Span<Cell> cells, int cellIndexStart, int cellIndexEnd, IRect from, IRect to, out int minZ, int fitPivotX = 500, int fitPivotY = 500, bool round = false, bool fit = true) Parameters cells Span<Cell> cellIndexStart int cellIndexEnd int from IRect to IRect minZ int fitPivotX int fitPivotY int round bool fit bool RemoveFromWorldMemory(Entity) public static void RemoveFromWorldMemory(Entity entity) Parameters entity Entity ResetShoulderAndUpperArmPos(PoseCharacterRenderer, bool, bool) public static void ResetShoulderAndUpperArmPos(PoseCharacterRenderer rendering, bool resetLeft = true, bool resetRight = true) Parameters rendering PoseCharacterRenderer resetLeft bool resetRight bool RuleByteToDigit(byte[]) public static int RuleByteToDigit(byte[] singleRule) Parameters singleRule byte[] Returns int RunAngeliaCodeAnalysis(bool, bool, bool) public static void RunAngeliaCodeAnalysis(bool onlyLogWhenWarningFounded = false, bool fixScriptFileName = false, bool checkNoItemCombination = true) Parameters onlyLogWhenWarningFounded bool fixScriptFileName bool checkNoItemCombination bool RunBuiltInSpriteAnalysys(bool) public static void RunBuiltInSpriteAnalysys(bool onlyLogWhenWarningFounded = false) Parameters onlyLogWhenWarningFounded bool RunEmptyScriptFileAnalysis(string, bool) public static void RunEmptyScriptFileAnalysis(string rootPath, bool onlyLogWhenWarningFounded = false) Parameters rootPath string onlyLogWhenWarningFounded bool SearchlightBlockCheck(IBlockSquad, Int3, Direction8?, int, bool) public static bool SearchlightBlockCheck(IBlockSquad squad, Int3 startUnitPoint, Direction8? direction, int unitDistance = 128, bool reverse = false) Parameters squad IBlockSquad startUnitPoint Int3 direction Direction8? unitDistance int reverse bool Returns bool SpawnItemFromMap(IBlockSquad, int, int, int, int, int, int, bool) public static void SpawnItemFromMap(IBlockSquad squad, int unitX, int unitY, int z, int maxDeltaX = 1024, int maxDeltaY = 1024, int placeHolderID = 0, bool spawnEntity = true) Parameters squad IBlockSquad unitX int unitY int z int maxDeltaX int maxDeltaY int placeHolderID int spawnEntity bool SpiralSpinningCellEffect(int, int, int, int, int, bool) public static void SpiralSpinningCellEffect(int localFrame, int pointX, int pointY, int duration, int cellIndexStart, bool reverseSpin = false) Parameters localFrame int pointX int pointY int duration int cellIndexStart int reverseSpin bool SystemNumberID_to_Number(int) public static int SystemNumberID_to_Number(int id) Parameters id int Returns int Time01_to_TimeDigit(float, out int, out int, out int) public static void Time01_to_TimeDigit(float time01, out int hour, out int minute, out int second) Parameters time01 float hour int minute int second int TimeDigit_to_Time01(int, int, int) public static float TimeDigit_to_Time01(int hour, int minute, int second) Parameters hour int minute int second int Returns float TryEjectOutsideGround(Rigidbody, int, int, int) public static void TryEjectOutsideGround(Rigidbody rig, int collisionMask = 0, int unitRange = 2, int speed = 32) Parameters rig Rigidbody collisionMask int unitRange int speed int TryGetEmptyPlaceNearbyForEntity(int, int, int, out int, out int, int, bool) public static bool TryGetEmptyPlaceNearbyForEntity(int unitX, int unitY, int z, out int resultUnitX, out int resultUnitY, int maxRange = 8, bool preferNoSolidLevel = true) Parameters unitX int unitY int z int resultUnitX int resultUnitY int maxRange int preferNoSolidLevel bool Returns bool TryGetOnewayDirection(Tag, out Direction4) public static bool TryGetOnewayDirection(Tag tag, out Direction4 direction) Parameters tag Tag direction Direction4 Returns bool TryGetRepositionElementDelta(int, out int, out int) public static bool TryGetRepositionElementDelta(int elementCode, out int deltaGlobalX, out int deltaGlobalY) Parameters elementCode int deltaGlobalX int deltaGlobalY int Returns bool TryGetSingleSystemNumber(IBlockSquad, int, int, int, out int) public static bool TryGetSingleSystemNumber(IBlockSquad squad, int unitX, int unitY, int z, out int digitValue) Parameters squad IBlockSquad unitX int unitY int z int digitValue int Returns bool"
  },
  "api/AngeliA.GUI.html": {
    "href": "api/AngeliA.GUI.html",
    "title": "Class GUI | AngeliA",
    "summary": "Class GUI Namespace AngeliA Assembly AngeliA Framework.dll public static class GUI Inheritance object GUI Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties BodyColor public static Color32 BodyColor { get; set; } Property Value Color32 Color public static Color32 Color { get; set; } Property Value Color32 ContentColor public static Color32 ContentColor { get; set; } Property Value Color32 ContentVersion public static int ContentVersion { get; } Property Value int Enable public static bool Enable { get; set; } Property Value bool FieldHeight public static int FieldHeight { get; } Property Value int FieldPadding public static int FieldPadding { get; } Property Value int Interactable public static bool Interactable { get; set; } Property Value bool IsTyping public static bool IsTyping { get; } Property Value bool LabelWidth public static int LabelWidth { get; set; } Property Value int ScrollbarSize public static int ScrollbarSize { get; } Property Value int Skin public static GUISkin Skin { get; set; } Property Value GUISkin ToolbarSize public static int ToolbarSize { get; } Property Value int TypingTextFieldID public static int TypingTextFieldID { get; } Property Value int Methods BackgroundLabel(IRect, char[], Color32, out IRect, int, GUIStyle) public static void BackgroundLabel(IRect rect, char[] chars, Color32 backgroundColor, out IRect bounds, int backgroundPadding = 0, GUIStyle style = null) Parameters rect IRect chars char[] backgroundColor Color32 bounds IRect backgroundPadding int style GUIStyle BackgroundLabel(IRect, char[], Color32, int, GUIStyle) public static void BackgroundLabel(IRect rect, char[] chars, Color32 backgroundColor, int backgroundPadding = 0, GUIStyle style = null) Parameters rect IRect chars char[] backgroundColor Color32 backgroundPadding int style GUIStyle BackgroundLabel(IRect, string, Color32, out IRect, int, bool, GUIStyle) public static void BackgroundLabel(IRect rect, string text, Color32 backgroundColor, out IRect bounds, int backgroundPadding = 0, bool forceInside = false, GUIStyle style = null) Parameters rect IRect text string backgroundColor Color32 bounds IRect backgroundPadding int forceInside bool style GUIStyle BackgroundLabel(IRect, string, Color32, int, bool, GUIStyle) public static void BackgroundLabel(IRect rect, string text, Color32 backgroundColor, int backgroundPadding = 0, bool forceInside = false, GUIStyle style = null) Parameters rect IRect text string backgroundColor Color32 backgroundPadding int forceInside bool style GUIStyle BeginChangeCheck() public static void BeginChangeCheck() BlankButton(IRect, out GUIState) public static bool BlankButton(IRect rect, out GUIState state) Parameters rect IRect state GUIState Returns bool BlankSlider(int, IRect, int, int, int, out GUIState, bool, int) public static int BlankSlider(int controlID, IRect rect, int value, int min, int max, out GUIState state, bool vertical = false, int step = 0) Parameters controlID int rect IRect value int min int max int state GUIState vertical bool step int Returns int BlankToggle(IRect, bool, out GUIState) public static bool BlankToggle(IRect rect, bool isOn, out GUIState state) Parameters rect IRect isOn bool state GUIState Returns bool Button(IRect, int, out GUIState, GUIStyle) public static bool Button(IRect rect, int icon, out GUIState state, GUIStyle style = null) Parameters rect IRect icon int state GUIState style GUIStyle Returns bool Button(IRect, int, GUIStyle) public static bool Button(IRect rect, int icon, GUIStyle style = null) Parameters rect IRect icon int style GUIStyle Returns bool Button(IRect, string, out GUIState, GUIStyle, int) public static bool Button(IRect rect, string label, out GUIState state, GUIStyle style = null, int charSize = -2) Parameters rect IRect label string state GUIState style GUIStyle charSize int Returns bool Button(IRect, string, GUIStyle, int) public static bool Button(IRect rect, string label, GUIStyle style = null, int charSize = -2) Parameters rect IRect label string style GUIStyle charSize int Returns bool CancelTyping() public static void CancelTyping() DarkButton(IRect, int) public static bool DarkButton(IRect rect, int icon) Parameters rect IRect icon int Returns bool DarkButton(IRect, string, int) public static bool DarkButton(IRect rect, string label, int charSize = -2) Parameters rect IRect label string charSize int Returns bool DrawAxis(Int2, Int2, Int2, int, int, int, int, Color32, Color32, int, GUIStyle, IRect) public static void DrawAxis(Int2 position, Int2 length, Int2 stepCount, int stepNumberGap, int thickness, int stepThickness, int z, Color32 colorX, Color32 colorY, int labelHeight = 0, GUIStyle labelStyle = null, IRect clampRect = default) Parameters position Int2 length Int2 stepCount Int2 stepNumberGap int thickness int stepThickness int z int colorX Color32 colorY Color32 labelHeight int labelStyle GUIStyle clampRect IRect DrawSlice(AngeSprite, IRect) public static Cell[] DrawSlice(AngeSprite sprite, IRect rect) Parameters sprite AngeSprite rect IRect Returns Cell[] DrawSlice(int, IRect) public static Cell[] DrawSlice(int spriteID, IRect rect) Parameters spriteID int rect IRect Returns Cell[] DrawStyleBody(IRect, GUIStyle, GUIState) public static void DrawStyleBody(IRect rect, GUIStyle style, GUIState state) Parameters rect IRect style GUIStyle state GUIState DrawStyleBody(IRect, GUIStyle, GUIState, Color32) public static void DrawStyleBody(IRect rect, GUIStyle style, GUIState state, Color32 tint) Parameters rect IRect style GUIStyle state GUIState tint Color32 DrawStyleContent(IRect, int, GUIStyle, GUIState, bool, bool) public static void DrawStyleContent(IRect rect, int sprite, GUIStyle style, GUIState state, bool ignoreSlice = false, bool fit = false) Parameters rect IRect sprite int style GUIStyle state GUIState ignoreSlice bool fit bool EndChangeCheck() public static bool EndChangeCheck() Returns bool FilledSlider(int, IRect, int, int, int, bool, int) public static int FilledSlider(int controlID, IRect rect, int value, int min, int max, bool vertical = false, int step = 0) Parameters controlID int rect IRect value int min int max int vertical bool step int Returns int FrameBasedIntLabel(IRect, FrameBasedInt, Color32, Color32, GUIStyle) public static void FrameBasedIntLabel(IRect rect, FrameBasedInt number, Color32 greaterColor, Color32 lessColor, GUIStyle style = null) Parameters rect IRect number FrameBasedInt greaterColor Color32 lessColor Color32 style GUIStyle FrameBasedIntLabel(IRect, FrameBasedInt, Color32, Color32, out IRect, GUIStyle) public static void FrameBasedIntLabel(IRect rect, FrameBasedInt number, Color32 greaterColor, Color32 lessColor, out IRect bounds, GUIStyle style = null) Parameters rect IRect number FrameBasedInt greaterColor Color32 lessColor Color32 bounds IRect style GUIStyle GetContentRect(IRect, GUIStyle, GUIState) public static IRect GetContentRect(IRect rect, GUIStyle style, GUIState state) Parameters rect IRect style GUIStyle state GUIState Returns IRect HandleSlider(int, IRect, int, int, int, bool, int) public static int HandleSlider(int controlID, IRect rect, int value, int min, int max, bool vertical = false, int step = 0) Parameters controlID int rect IRect value int min int max int vertical bool step int Returns int HighlightCursor(int, IRect) public static void HighlightCursor(int spriteID, IRect rect) Parameters spriteID int rect IRect HighlightCursor(int, IRect, Color32) public static void HighlightCursor(int spriteID, IRect rect, Color32 color) Parameters spriteID int rect IRect color Color32 HorizontalColorField(ColorF, IRect, bool, bool, bool, bool, ColorF?) public static ColorF HorizontalColorField(ColorF color, IRect rect, bool hsv = true, bool alpha = false, bool stepped = true, bool folded = false, ColorF? defaultColor = null) Parameters color ColorF rect IRect hsv bool alpha bool stepped bool folded bool defaultColor ColorF? Returns ColorF HorizontalColorField(ColorF, IRect, string, GUIStyle, bool, bool, bool, bool, ColorF?) public static ColorF HorizontalColorField(ColorF color, IRect rect, string label, GUIStyle labelStyle = null, bool hsv = true, bool alpha = false, bool stepped = true, bool folded = false, ColorF? defaultColor = null) Parameters color ColorF rect IRect label string labelStyle GUIStyle hsv bool alpha bool stepped bool folded bool defaultColor ColorF? Returns ColorF Icon(IRect, int) public static void Icon(IRect rect, int sprite) Parameters rect IRect sprite int Icon(IRect, int, GUIStyle, GUIState) public static void Icon(IRect rect, int sprite, GUIStyle style, GUIState state) Parameters rect IRect sprite int style GUIStyle state GUIState IconToggle(IRect, bool, int, GUIStyle, GUIStyle) public static bool IconToggle(IRect rect, bool isOn, int icon, GUIStyle markStyle = null, GUIStyle iconStyle = null) Parameters rect IRect isOn bool icon int markStyle GUIStyle iconStyle GUIStyle Returns bool InputField(int, IRect, string, GUIStyle, Color32?) public static string InputField(int controlID, IRect rect, string text, GUIStyle bodyStyle = null, Color32? selectionColor = null) Parameters controlID int rect IRect text string bodyStyle GUIStyle selectionColor Color32? Returns string InputField(int, IRect, string, out bool, out bool, GUIStyle, Color32?) public static string InputField(int controlID, IRect rect, string text, out bool changed, out bool confirm, GUIStyle bodyStyle = null, Color32? selectionColor = null) Parameters controlID int rect IRect text string changed bool confirm bool bodyStyle GUIStyle selectionColor Color32? Returns string IntDial(IRect, int, out bool, string, GUIStyle, GUIStyle, GUIStyle, int, int, int) public static int IntDial(IRect rect, int value, out bool changed, string label = null, GUIStyle labelStyle = null, GUIStyle bodyStyle = null, GUIStyle dialButtonStyle = null, int delta = 1, int min = -2147483648, int max = 2147483647) Parameters rect IRect value int changed bool label string labelStyle GUIStyle bodyStyle GUIStyle dialButtonStyle GUIStyle delta int min int max int Returns int IntDial(IRect, int, string, GUIStyle, GUIStyle, GUIStyle, int, int, int) public static int IntDial(IRect rect, int value, string label = null, GUIStyle labelStyle = null, GUIStyle bodyStyle = null, GUIStyle dialButtonStyle = null, int delta = 1, int min = -2147483648, int max = 2147483647) Parameters rect IRect value int label string labelStyle GUIStyle bodyStyle GUIStyle dialButtonStyle GUIStyle delta int min int max int Returns int IntLabel(IRect, int, GUIStyle) public static void IntLabel(IRect rect, int number, GUIStyle style = null) Parameters rect IRect number int style GUIStyle IntLabel(IRect, int, out IRect, GUIStyle) public static void IntLabel(IRect rect, int number, out IRect bounds, GUIStyle style = null) Parameters rect IRect number int bounds IRect style GUIStyle Label(IRect, char[], GUIStyle, int) public static void Label(IRect rect, char[] text, GUIStyle style = null, int charSize = -2) Parameters rect IRect text char[] style GUIStyle charSize int Label(IRect, char[], out IRect, GUIStyle, int) public static void Label(IRect rect, char[] text, out IRect bounds, GUIStyle style = null, int charSize = -2) Parameters rect IRect text char[] bounds IRect style GUIStyle charSize int Label(IRect, string, GUIStyle, int) public static void Label(IRect rect, string text, GUIStyle style = null, int charSize = -2) Parameters rect IRect text string style GUIStyle charSize int Label(IRect, string, out IRect, GUIStyle, int) public static void Label(IRect rect, string text, out IRect bounds, GUIStyle style = null, int charSize = -2) Parameters rect IRect text string bounds IRect style GUIStyle charSize int Label(IRect, string, int, bool, out IRect, out int, GUIStyle, int) public static void Label(IRect rect, string text, int startIndex, bool drawInvisibleChar, out IRect bounds, out int endIndex, GUIStyle style = null, int charSize = -2) Parameters rect IRect text string startIndex int drawInvisibleChar bool bounds IRect endIndex int style GUIStyle charSize int Label(IRect, string, int, int, bool, out IRect, out IRect, out int, GUIStyle, int) public static void Label(IRect rect, string text, int beamIndex, int startIndex, bool drawInvisibleChar, out IRect bounds, out IRect beamRect, out int endIndex, GUIStyle style = null, int charSize = -2) Parameters rect IRect text string beamIndex int startIndex int drawInvisibleChar bool bounds IRect beamRect IRect endIndex int style GUIStyle charSize int LinkButton(IRect, string, GUIStyle, bool, int) public static bool LinkButton(IRect rect, string label, GUIStyle labelStyle = null, bool useUnderLine = true, int charSize = -2) Parameters rect IRect label string labelStyle GUIStyle useUnderLine bool charSize int Returns bool LinkButton(IRect, string, out IRect, GUIStyle, bool, int) public static bool LinkButton(IRect rect, string label, out IRect bounds, GUIStyle labelStyle = null, bool useUnderLine = true, int charSize = -2) Parameters rect IRect label string bounds IRect labelStyle GUIStyle useUnderLine bool charSize int Returns bool PopupTriangleIcon(IRect, int) public static void PopupTriangleIcon(IRect rect, int iconSprite = 0) Parameters rect IRect iconSprite int ReverseUnify(int) public static int ReverseUnify(int value) Parameters value int Returns int ReverseUnifyMonitor(int) public static int ReverseUnifyMonitor(int value) Parameters value int Returns int ScrollBar(int, IRect, int, int, int, GUIStyle, GUIStyle, bool) public static int ScrollBar(int controlID, IRect contentRect, int position, int totalSize, int pageSize, GUIStyle handleStyle = null, GUIStyle bgStyle = null, bool vertical = true) Parameters controlID int contentRect IRect position int totalSize int pageSize int handleStyle GUIStyle bgStyle GUIStyle vertical bool Returns int ScrollLabel(string, IRect, int, GUIStyle) public static int ScrollLabel(string text, IRect rect, int scrollPosition, GUIStyle style) Parameters text string rect IRect scrollPosition int style GUIStyle Returns int SetChange() public static void SetChange() ShadowLabel(IRect, char[], int, GUIStyle) public static void ShadowLabel(IRect rect, char[] chars, int shadowDistance = 3, GUIStyle style = null) Parameters rect IRect chars char[] shadowDistance int style GUIStyle ShadowLabel(IRect, string, int, GUIStyle) public static void ShadowLabel(IRect rect, string text, int shadowDistance = 3, GUIStyle style = null) Parameters rect IRect text string shadowDistance int style GUIStyle Slider(int, IRect, int, int, int, GUIStyle, GUIStyle, GUIStyle, bool, int) public static int Slider(int controlID, IRect rect, int value, int min, int max, GUIStyle bodyStyle, GUIStyle handleStyle, GUIStyle fillStyle, bool vertical = false, int step = 0) Parameters controlID int rect IRect value int min int max int bodyStyle GUIStyle handleStyle GUIStyle fillStyle GUIStyle vertical bool step int Returns int SmallInputField(int, IRect, string, out bool, out bool, Color32?) public static string SmallInputField(int controlID, IRect rect, string text, out bool changed, out bool confirm, Color32? selectionColor = null) Parameters controlID int rect IRect text string changed bool confirm bool selectionColor Color32? Returns string SmallInputField(int, IRect, string, Color32?) public static string SmallInputField(int controlID, IRect rect, string text, Color32? selectionColor = null) Parameters controlID int rect IRect text string selectionColor Color32? Returns string SmallIntDial(IRect, int, out bool, string, int, int, int) public static int SmallIntDial(IRect rect, int value, out bool changed, string label = null, int delta = 1, int min = -2147483648, int max = 2147483647) Parameters rect IRect value int changed bool label string delta int min int max int Returns int SmallIntDial(IRect, int, string, int, int, int) public static int SmallIntDial(IRect rect, int value, string label = null, int delta = 1, int min = -2147483648, int max = 2147483647) Parameters rect IRect value int label string delta int min int max int Returns int SmallLabel(IRect, char[]) public static void SmallLabel(IRect rect, char[] text) Parameters rect IRect text char[] SmallLabel(IRect, char[], out IRect) public static void SmallLabel(IRect rect, char[] text, out IRect bounds) Parameters rect IRect text char[] bounds IRect SmallLabel(IRect, string) public static void SmallLabel(IRect rect, string text) Parameters rect IRect text string SmallLabel(IRect, string, out IRect) public static void SmallLabel(IRect rect, string text, out IRect bounds) Parameters rect IRect text string bounds IRect SmallLabel(IRect, string, int, bool, out IRect, out int) public static void SmallLabel(IRect rect, string text, int startIndex, bool drawInvisibleChar, out IRect bounds, out int endIndex) Parameters rect IRect text string startIndex int drawInvisibleChar bool bounds IRect endIndex int SmallLabel(IRect, string, int, int, bool, out IRect, out IRect, out int) public static void SmallLabel(IRect rect, string text, int beamIndex, int startIndex, bool drawInvisibleChar, out IRect bounds, out IRect beamRect, out int endIndex) Parameters rect IRect text string beamIndex int startIndex int drawInvisibleChar bool bounds IRect beamRect IRect endIndex int SmallLinkButton(IRect, string, out IRect, bool, int) public static bool SmallLinkButton(IRect rect, string label, out IRect bounds, bool useUnderLine = true, int charSize = -2) Parameters rect IRect label string bounds IRect useUnderLine bool charSize int Returns bool SmallLinkButton(IRect, string, bool, int) public static bool SmallLinkButton(IRect rect, string label, bool useUnderLine = true, int charSize = -2) Parameters rect IRect label string useUnderLine bool charSize int Returns bool StartTyping(int) public static void StartTyping(int controlID) Parameters controlID int Toggle(IRect, bool, GUIStyle, GUIStyle) public static bool Toggle(IRect rect, bool isOn, GUIStyle bodyStyle = null, GUIStyle markStyle = null) Parameters rect IRect isOn bool bodyStyle GUIStyle markStyle GUIStyle Returns bool Toggle(IRect, bool, string, GUIStyle, GUIStyle, GUIStyle) public static bool Toggle(IRect rect, bool isOn, string label, GUIStyle bodyStyle = null, GUIStyle markStyle = null, GUIStyle labelStyle = null) Parameters rect IRect isOn bool label string bodyStyle GUIStyle markStyle GUIStyle labelStyle GUIStyle Returns bool ToggleButton(IRect, bool, int, GUIStyle) public static bool ToggleButton(IRect rect, bool isOn, int icon, GUIStyle style = null) Parameters rect IRect isOn bool icon int style GUIStyle Returns bool ToggleButton(IRect, bool, string, GUIStyle) public static bool ToggleButton(IRect rect, bool isOn, string label, GUIStyle bodyStyle = null) Parameters rect IRect isOn bool label string bodyStyle GUIStyle Returns bool ToggleFold(IRect, ref bool, int, string, int, int) public static bool ToggleFold(IRect rect, ref bool folding, int icon, string label, int paddingLeft = 0, int paddingRight = 0) Parameters rect IRect folding bool icon int label string paddingLeft int paddingRight int Returns bool ToggleLeft(IRect, bool, string, GUIStyle, GUIStyle, GUIStyle) public static bool ToggleLeft(IRect rect, bool isOn, string label, GUIStyle bodyStyle = null, GUIStyle labelStyle = null, GUIStyle markStyle = null) Parameters rect IRect isOn bool label string bodyStyle GUIStyle labelStyle GUIStyle markStyle GUIStyle Returns bool Unify(int) public static int Unify(int value) Parameters value int Returns int UnifyBorder(Int4) public static Int4 UnifyBorder(Int4 border) Parameters border Int4 Returns Int4 UnifyMonitor(int) public static int UnifyMonitor(int value) Parameters value int Returns int VerticalColorField(ColorF, IRect, bool, bool, bool, bool, ColorF?) public static ColorF VerticalColorField(ColorF color, IRect rect, bool hsv = true, bool alpha = false, bool stepped = true, bool folded = false, ColorF? defaultColor = null) Parameters color ColorF rect IRect hsv bool alpha bool stepped bool folded bool defaultColor ColorF? Returns ColorF VerticalColorField(ColorF, IRect, string, GUIStyle, bool, bool, bool, bool, ColorF?) public static ColorF VerticalColorField(ColorF color, IRect rect, string label, GUIStyle labelStyle = null, bool hsv = true, bool alpha = false, bool stepped = true, bool folded = false, ColorF? defaultColor = null) Parameters color ColorF rect IRect label string labelStyle GUIStyle hsv bool alpha bool stepped bool folded bool defaultColor ColorF? Returns ColorF"
  },
  "api/AngeliA.GUIBodyColorScope.html": {
    "href": "api/AngeliA.GUIBodyColorScope.html",
    "title": "Struct GUIBodyColorScope | AngeliA",
    "summary": "Struct GUIBodyColorScope Namespace AngeliA Assembly AngeliA Framework.dll public readonly struct GUIBodyColorScope : IDisposable Implements IDisposable Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Constructors GUIBodyColorScope() public GUIBodyColorScope() GUIBodyColorScope(Color32) public GUIBodyColorScope(Color32 color) Parameters color Color32 Methods Dispose() Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources. public void Dispose()"
  },
  "api/AngeliA.GUIColorScope.html": {
    "href": "api/AngeliA.GUIColorScope.html",
    "title": "Struct GUIColorScope | AngeliA",
    "summary": "Struct GUIColorScope Namespace AngeliA Assembly AngeliA Framework.dll public readonly struct GUIColorScope : IDisposable Implements IDisposable Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Constructors GUIColorScope(Color32) public GUIColorScope(Color32 color) Parameters color Color32 Methods Dispose() Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources. public void Dispose()"
  },
  "api/AngeliA.GUIContentColorScope.html": {
    "href": "api/AngeliA.GUIContentColorScope.html",
    "title": "Struct GUIContentColorScope | AngeliA",
    "summary": "Struct GUIContentColorScope Namespace AngeliA Assembly AngeliA Framework.dll public readonly struct GUIContentColorScope : IDisposable Implements IDisposable Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Constructors GUIContentColorScope(Color32) public GUIContentColorScope(Color32 color) Parameters color Color32 Methods Dispose() Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources. public void Dispose()"
  },
  "api/AngeliA.GUIEnableScope.html": {
    "href": "api/AngeliA.GUIEnableScope.html",
    "title": "Struct GUIEnableScope | AngeliA",
    "summary": "Struct GUIEnableScope Namespace AngeliA Assembly AngeliA Framework.dll public readonly struct GUIEnableScope : IDisposable Implements IDisposable Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Constructors GUIEnableScope(bool) public GUIEnableScope(bool enable) Parameters enable bool Methods Dispose() Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources. public void Dispose()"
  },
  "api/AngeliA.GUIHorizontalScrollScope.html": {
    "href": "api/AngeliA.GUIHorizontalScrollScope.html",
    "title": "Struct GUIHorizontalScrollScope | AngeliA",
    "summary": "Struct GUIHorizontalScrollScope Namespace AngeliA Assembly AngeliA Framework.dll public readonly struct GUIHorizontalScrollScope : IDisposable Implements IDisposable Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Constructors GUIHorizontalScrollScope(IRect, int, int, int, int) public GUIHorizontalScrollScope(IRect rect, int positionX, int min = -2147483648, int max = 2147483647, int layer = 7) Parameters rect IRect positionX int min int max int layer int Fields Scope public readonly GUIScrollScope Scope Field Value GUIScrollScope Properties PositionX public int PositionX { get; } Property Value int Methods Dispose() Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources. public void Dispose()"
  },
  "api/AngeliA.GUIInteractableScope.html": {
    "href": "api/AngeliA.GUIInteractableScope.html",
    "title": "Struct GUIInteractableScope | AngeliA",
    "summary": "Struct GUIInteractableScope Namespace AngeliA Assembly AngeliA Framework.dll public readonly struct GUIInteractableScope : IDisposable Implements IDisposable Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Constructors GUIInteractableScope(bool) public GUIInteractableScope(bool interactable) Parameters interactable bool Methods Dispose() Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources. public void Dispose()"
  },
  "api/AngeliA.GUILabelWidthScope.html": {
    "href": "api/AngeliA.GUILabelWidthScope.html",
    "title": "Struct GUILabelWidthScope | AngeliA",
    "summary": "Struct GUILabelWidthScope Namespace AngeliA Assembly AngeliA Framework.dll public readonly struct GUILabelWidthScope : IDisposable Implements IDisposable Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Constructors GUILabelWidthScope(int) public GUILabelWidthScope(int width) Parameters width int Methods Dispose() Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources. public void Dispose()"
  },
  "api/AngeliA.GUIScrollScope.html": {
    "href": "api/AngeliA.GUIScrollScope.html",
    "title": "Struct GUIScrollScope | AngeliA",
    "summary": "Struct GUIScrollScope Namespace AngeliA Assembly AngeliA Framework.dll public readonly struct GUIScrollScope : IDisposable Implements IDisposable Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Constructors GUIScrollScope(IRect, Int2, Int2, Int2, bool, bool, int) public GUIScrollScope(IRect rect, Int2 position, Int2 min, Int2 max, bool mouseWheelForVertical = true, bool reverseMouseWheel = false, int layer = 7) Parameters rect IRect position Int2 min Int2 max Int2 mouseWheelForVertical bool reverseMouseWheel bool layer int Fields CellCount public readonly int CellCount Field Value int Layer public readonly int Layer Field Value int MousePosShift public readonly Int2 MousePosShift Field Value Int2 Position public readonly Int2 Position Field Value Int2 PrevMouseInputIgnoring public readonly bool PrevMouseInputIgnoring Field Value bool Rect public readonly IRect Rect Field Value IRect Methods Dispose() Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources. public void Dispose()"
  },
  "api/AngeliA.GUISkin.LabelPattern.html": {
    "href": "api/AngeliA.GUISkin.LabelPattern.html",
    "title": "Enum GUISkin.LabelPattern | AngeliA",
    "summary": "Enum GUISkin.LabelPattern Namespace AngeliA Assembly AngeliA Framework.dll [Flags] public enum GUISkin.LabelPattern Extension Methods Extension.Next<E>(E) Extension.Prev<E>(E) Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Fields Auto = Small | Large Clip = 128 Dark = 8 Default = 0 Grey = 4 Large = 2 Light = 0 MidLeft = 0 MidMid = 16 Normal = 0 Small = 1 TopLeft = 32 TopMid = MidMid | TopLeft WordWrap = 64"
  },
  "api/AngeliA.GUISkin.html": {
    "href": "api/AngeliA.GUISkin.html",
    "title": "Class GUISkin | AngeliA",
    "summary": "Class GUISkin Namespace AngeliA Assembly AngeliA Framework.dll public class GUISkin Inheritance object GUISkin Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Fields AutoCenterGreyLabel public readonly GUIStyle AutoCenterGreyLabel Field Value GUIStyle AutoCenterLabel public readonly GUIStyle AutoCenterLabel Field Value GUIStyle AutoDarkLabel public readonly GUIStyle AutoDarkLabel Field Value GUIStyle AutoGreyLabel public readonly GUIStyle AutoGreyLabel Field Value GUIStyle AutoLabel public readonly GUIStyle AutoLabel Field Value GUIStyle AutoRightLabel public readonly GUIStyle AutoRightLabel Field Value GUIStyle Background public Color32 Background Field Value Color32 Button public readonly GUIStyle Button Field Value GUIStyle CenterGreyLabel public readonly GUIStyle CenterGreyLabel Field Value GUIStyle CenterLabel public readonly GUIStyle CenterLabel Field Value GUIStyle CenterLabelButton public readonly GUIStyle CenterLabelButton Field Value GUIStyle CenterMessage public readonly GUIStyle CenterMessage Field Value GUIStyle DarkButton public readonly GUIStyle DarkButton Field Value GUIStyle DarkLabel public readonly GUIStyle DarkLabel Field Value GUIStyle Default public static readonly GUISkin Default Field Value GUISkin DeleteTint public Color32 DeleteTint Field Value Color32 DialogBG public readonly GUIStyle DialogBG Field Value GUIStyle ErrorTint public Color32 ErrorTint Field Value Color32 Frame public readonly GUIStyle Frame Field Value GUIStyle GizmosCursor public Color32 GizmosCursor Field Value Color32 GizmosCursorAlt public Color32 GizmosCursorAlt Field Value Color32 GizmosDotted public Color32 GizmosDotted Field Value Color32 GizmosDottedAlt public Color32 GizmosDottedAlt Field Value Color32 GizmosDragging public Color32 GizmosDragging Field Value Color32 GizmosDraggingAlt public Color32 GizmosDraggingAlt Field Value Color32 GizmosNormal public Color32 GizmosNormal Field Value Color32 GizmosSelecting public Color32 GizmosSelecting Field Value Color32 GreenPixel public readonly GUIStyle GreenPixel Field Value GUIStyle GreyLabel public readonly GUIStyle GreyLabel Field Value GUIStyle HighlightColor public Color32 HighlightColor Field Value Color32 HighlightColorAlt public Color32 HighlightColorAlt Field Value Color32 HighlightPixel public readonly GUIStyle HighlightPixel Field Value GUIStyle IconButton public readonly GUIStyle IconButton Field Value GUIStyle InputField public readonly GUIStyle InputField Field Value GUIStyle ItemFrame public readonly GUIStyle ItemFrame Field Value GUIStyle Label public readonly GUIStyle Label Field Value GUIStyle LabelButton public readonly GUIStyle LabelButton Field Value GUIStyle LargeCenterGreyLabel public readonly GUIStyle LargeCenterGreyLabel Field Value GUIStyle LargeCenterLabel public readonly GUIStyle LargeCenterLabel Field Value GUIStyle LargeCenterLabelButton public readonly GUIStyle LargeCenterLabelButton Field Value GUIStyle LargeCenterMessage public readonly GUIStyle LargeCenterMessage Field Value GUIStyle LargeDarkLabel public readonly GUIStyle LargeDarkLabel Field Value GUIStyle LargeGreyLabel public readonly GUIStyle LargeGreyLabel Field Value GUIStyle LargeInputField public readonly GUIStyle LargeInputField Field Value GUIStyle LargeLabel public readonly GUIStyle LargeLabel Field Value GUIStyle LargeLabelButton public readonly GUIStyle LargeLabelButton Field Value GUIStyle LargeMessage public readonly GUIStyle LargeMessage Field Value GUIStyle LargeRightLabel public readonly GUIStyle LargeRightLabel Field Value GUIStyle LargeTextArea public readonly GUIStyle LargeTextArea Field Value GUIStyle LargeToggle public readonly GUIStyle LargeToggle Field Value GUIStyle LinkTint public Color32 LinkTint Field Value Color32 LinkTintHover public Color32 LinkTintHover Field Value Color32 Message public readonly GUIStyle Message Field Value GUIStyle Name public string Name Field Value string RightLabel public readonly GUIStyle RightLabel Field Value GUIStyle Scrollbar public readonly GUIStyle Scrollbar Field Value GUIStyle SliderBody public readonly GUIStyle SliderBody Field Value GUIStyle SliderFill public readonly GUIStyle SliderFill Field Value GUIStyle SliderHandle public readonly GUIStyle SliderHandle Field Value GUIStyle SmallButton public readonly GUIStyle SmallButton Field Value GUIStyle SmallCenterGreyLabel public readonly GUIStyle SmallCenterGreyLabel Field Value GUIStyle SmallCenterLabel public readonly GUIStyle SmallCenterLabel Field Value GUIStyle SmallCenterLabelButton public readonly GUIStyle SmallCenterLabelButton Field Value GUIStyle SmallCenterMessage public readonly GUIStyle SmallCenterMessage Field Value GUIStyle SmallDarkButton public readonly GUIStyle SmallDarkButton Field Value GUIStyle SmallDarkLabel public readonly GUIStyle SmallDarkLabel Field Value GUIStyle SmallGreyLabel public readonly GUIStyle SmallGreyLabel Field Value GUIStyle SmallIconButton public readonly GUIStyle SmallIconButton Field Value GUIStyle SmallInputField public readonly GUIStyle SmallInputField Field Value GUIStyle SmallLabel public readonly GUIStyle SmallLabel Field Value GUIStyle SmallLabelButton public readonly GUIStyle SmallLabelButton Field Value GUIStyle SmallMessage public readonly GUIStyle SmallMessage Field Value GUIStyle SmallRightLabel public readonly GUIStyle SmallRightLabel Field Value GUIStyle SmallTextArea public readonly GUIStyle SmallTextArea Field Value GUIStyle TextArea public readonly GUIStyle TextArea Field Value GUIStyle Toggle public readonly GUIStyle Toggle Field Value GUIStyle ToggleMark public readonly GUIStyle ToggleMark Field Value GUIStyle WeakHighlightPixel public readonly GUIStyle WeakHighlightPixel Field Value GUIStyle WeakPixel public readonly GUIStyle WeakPixel Field Value GUIStyle Methods LoadColorFromSheet(Sheet) public void LoadColorFromSheet(Sheet sheet) Parameters sheet Sheet LoadColorFromSkin(GUISkin) public void LoadColorFromSkin(GUISkin otherSkin) Parameters otherSkin GUISkin ProduceLabel(LabelPattern, int, int) public static GUIStyle ProduceLabel(GUISkin.LabelPattern pattern, int lineSpace = 5, int charSpace = 0) Parameters pattern GUISkin.LabelPattern lineSpace int charSpace int Returns GUIStyle"
  },
  "api/AngeliA.GUISkinScope.html": {
    "href": "api/AngeliA.GUISkinScope.html",
    "title": "Struct GUISkinScope | AngeliA",
    "summary": "Struct GUISkinScope Namespace AngeliA Assembly AngeliA Framework.dll public readonly struct GUISkinScope : IDisposable Implements IDisposable Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Constructors GUISkinScope(GUISkin) public GUISkinScope(GUISkin skin) Parameters skin GUISkin Methods Dispose() Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources. public void Dispose()"
  },
  "api/AngeliA.GUIState.html": {
    "href": "api/AngeliA.GUIState.html",
    "title": "Enum GUIState | AngeliA",
    "summary": "Enum GUIState Namespace AngeliA Assembly AngeliA Framework.dll public enum GUIState : byte Extension Methods Extension.Next<E>(E) Extension.Prev<E>(E) Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Fields Disable = 3 Hover = 1 Normal = 0 Press = 2"
  },
  "api/AngeliA.GUIStyle.html": {
    "href": "api/AngeliA.GUIStyle.html",
    "title": "Class GUIStyle | AngeliA",
    "summary": "Class GUIStyle Namespace AngeliA Assembly AngeliA Framework.dll public sealed class GUIStyle Inheritance object GUIStyle Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Constructors GUIStyle(GUIStyle) public GUIStyle(GUIStyle source = null) Parameters source GUIStyle Fields Alignment public Alignment Alignment Field Value Alignment BORDER_SCALE public const int BORDER_SCALE = 16 Field Value int BodyColor public Color32 BodyColor Field Value Color32 BodyColorDisable public Color32 BodyColorDisable Field Value Color32 BodyColorDown public Color32 BodyColorDown Field Value Color32 BodyColorHover public Color32 BodyColorHover Field Value Color32 BodySprite public int BodySprite Field Value int BodySpriteDisable public int BodySpriteDisable Field Value int BodySpriteDown public int BodySpriteDown Field Value int BodySpriteHover public int BodySpriteHover Field Value int CharSize public int CharSize Field Value int CharSpace public int CharSpace Field Value int Clip public bool Clip Field Value bool ContentColor public Color32 ContentColor Field Value Color32 ContentColorDisable public Color32 ContentColorDisable Field Value Color32 ContentColorDown public Color32 ContentColorDown Field Value Color32 ContentColorHover public Color32 ContentColorHover Field Value Color32 LineSpace public int LineSpace Field Value int None public static readonly GUIStyle None Field Value GUIStyle Wrap public WrapMode Wrap Field Value WrapMode Methods GetBodyBorder(GUIState) public Int4 GetBodyBorder(GUIState state) Parameters state GUIState Returns Int4 GetBodyColor(GUIState) public Color32 GetBodyColor(GUIState state) Parameters state GUIState Returns Color32 GetBodySprite(GUIState) public int GetBodySprite(GUIState state) Parameters state GUIState Returns int GetContentBorder(GUIState) public Int4 GetContentBorder(GUIState state) Parameters state GUIState Returns Int4 GetContentColor(GUIState) public Color32 GetContentColor(GUIState state) Parameters state GUIState Returns Color32"
  },
  "api/AngeliA.GUIVerticalScrollScope.html": {
    "href": "api/AngeliA.GUIVerticalScrollScope.html",
    "title": "Struct GUIVerticalScrollScope | AngeliA",
    "summary": "Struct GUIVerticalScrollScope Namespace AngeliA Assembly AngeliA Framework.dll public readonly struct GUIVerticalScrollScope : IDisposable Implements IDisposable Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Constructors GUIVerticalScrollScope(IRect, int, int, int, int) public GUIVerticalScrollScope(IRect panelRect, int positionY, int min = -2147483648, int max = 2147483647, int layer = 7) Parameters panelRect IRect positionY int min int max int layer int Fields Scope public readonly GUIScrollScope Scope Field Value GUIScrollScope Properties PositionY public int PositionY { get; } Property Value int Methods Dispose() Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources. public void Dispose()"
  },
  "api/AngeliA.Game.html": {
    "href": "api/AngeliA.Game.html",
    "title": "Class Game | AngeliA",
    "summary": "Class Game Namespace AngeliA Assembly AngeliA Framework.dll public abstract class Game Inheritance object Game Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Constructors Game(params string[]) public Game(params string[] args) Parameters args string[] Fields Fonts public static readonly List<FontData> Fonts Field Value List<FontData> MusicPool public static readonly Dictionary<int, MusicData> MusicPool Field Value Dictionary<int, MusicData> SoundPool public static readonly Dictionary<int, SoundData> SoundPool Field Value Dictionary<int, SoundData> Properties BuiltInFontCount public static int BuiltInFontCount { get; } Property Value int CurrentBGM public static object CurrentBGM { get; protected set; } Property Value object CurrentMonitor public static int CurrentMonitor { get; } Property Value int CurrentMusicID public static int CurrentMusicID { get; } Property Value int CursorInScreen public static bool CursorInScreen { get; } Property Value bool CursorVisible public static bool CursorVisible { get; } Property Value bool DoodleFrame protected int DoodleFrame { get; } Property Value int DoodleOnTopOfUiFrame protected int DoodleOnTopOfUiFrame { get; } Property Value int DoodleScreenPadding public static Int4 DoodleScreenPadding { get; set; } Property Value Int4 FontCount public static int FontCount { get; } Property Value int GamepadLeftStickDirection public static Float2 GamepadLeftStickDirection { get; } Property Value Float2 GamepadRightStickDirection public static Float2 GamepadRightStickDirection { get; } Property Value Float2 GizmosOnTopOfUiFrame protected int GizmosOnTopOfUiFrame { get; } Property Value int GlobalFrame public static int GlobalFrame { get; } Property Value int IgnoreArtworkPixels public static bool IgnoreArtworkPixels { get; } Property Value bool IsGamepadAvailable public static bool IsGamepadAvailable { get; } Property Value bool IsKeyboardAvailable public static bool IsKeyboardAvailable { get; } Property Value bool IsMouseAvailable public static bool IsMouseAvailable { get; } Property Value bool IsMouseLeftHolding public static bool IsMouseLeftHolding { get; } Property Value bool IsMouseMidHolding public static bool IsMouseMidHolding { get; } Property Value bool IsMouseRightHolding public static bool IsMouseRightHolding { get; } Property Value bool IsMusicPlaying public static bool IsMusicPlaying { get; } Property Value bool IsPausing public static bool IsPausing { get; } Property Value bool IsPlaying public static bool IsPlaying { get; } Property Value bool IsToolApplication public static bool IsToolApplication { get; } Property Value bool IsWindowDecorated public static bool IsWindowDecorated { get; set; } Property Value bool IsWindowFocused public static bool IsWindowFocused { get; } Property Value bool IsWindowMaximized public static bool IsWindowMaximized { get; set; } Property Value bool IsWindowMinimized public static bool IsWindowMinimized { get; set; } Property Value bool IsWindowResizable public static bool IsWindowResizable { get; set; } Property Value bool IsWindowTopmost public static bool IsWindowTopmost { get; set; } Property Value bool MonitorHeight public static int MonitorHeight { get; } Property Value int MonitorWidth public static int MonitorWidth { get; } Property Value int MouseScreenPosition public static Int2 MouseScreenPosition { get; } Property Value Int2 MouseScrollDelta public static int MouseScrollDelta { get; } Property Value int MusicVolume public static int MusicVolume { get; set; } Property Value int PauselessFrame public static int PauselessFrame { get; } Property Value int ProcedureAudioVolume public static int ProcedureAudioVolume { get; set; } Property Value int ScaledMusicVolume public static float ScaledMusicVolume { get; } Property Value float ScaledSoundVolume public static float ScaledSoundVolume { get; } Property Value float ScreenEffectPadding public static Int4 ScreenEffectPadding { get; set; } Property Value Int4 ScreenHeight public static int ScreenHeight { get; } Property Value int ScreenWidth public static int ScreenWidth { get; } Property Value int SettleFrame public static int SettleFrame { get; } Property Value int ShowingDoodle public static bool ShowingDoodle { get; } Property Value bool SoundVolume public static int SoundVolume { get; set; } Property Value int Methods CancelDoodleOnTopOfUI() public static void CancelDoodleOnTopOfUI() CancelForceTargetFramerate() public static void CancelForceTargetFramerate() CancelGizmosOnTopOfUI() public static void CancelGizmosOnTopOfUI() CenterCursor() public static void CenterCursor() ClearAndUnloadAudioPool() public static void ClearAndUnloadAudioPool() CreateNewFontData() protected abstract FontData CreateNewFontData() Returns FontData DoodleRect(FRect, Color32) public static void DoodleRect(FRect screenRect, Color32 color) Parameters screenRect FRect color Color32 DoodleRectSwap(FRect, Color32) public static void DoodleRectSwap(FRect screenRect, Color32 color) Parameters screenRect FRect color Color32 DoodleWorld(IBlockSquad, FRect, IRect, int, bool, bool, bool, bool) public static void DoodleWorld(IBlockSquad squad, FRect screenRect, IRect worldUnitRange, int z, bool ignoreLevel = false, bool ignoreBG = false, bool ignoreEntity = false, bool ignoreElement = true) Parameters squad IBlockSquad screenRect FRect worldUnitRange IRect z int ignoreLevel bool ignoreBG bool ignoreEntity bool ignoreElement bool DrawGizmosFrame(IRect, Color32, Int4, Int4) public static void DrawGizmosFrame(IRect rect, Color32 color, Int4 thickness, Int4 gap = default) Parameters rect IRect color Color32 thickness Int4 gap Int4 DrawGizmosFrame(IRect, Color32, int, int) public static void DrawGizmosFrame(IRect rect, Color32 color, int thickness, int gap = 0) Parameters rect IRect color Color32 thickness int gap int DrawGizmosLine(int, int, int, int, int, Color32) public static void DrawGizmosLine(int startX, int startY, int endX, int endY, int thickness, Color32 color) Parameters startX int startY int endX int endY int thickness int color Color32 DrawGizmosRect(IRect, Color32) public static void DrawGizmosRect(IRect rect, Color32 color) Parameters rect IRect color Color32 DrawGizmosRect(IRect, Color32, Color32) public static void DrawGizmosRect(IRect rect, Color32 colorT, Color32 colorB) Parameters rect IRect colorT Color32 colorB Color32 DrawGizmosRect(IRect, Color32, Color32, Color32, Color32) public static void DrawGizmosRect(IRect rect, Color32 colorTL, Color32 colorTR, Color32 colorBL, Color32 colorBR) Parameters rect IRect colorTL Color32 colorTR Color32 colorBL Color32 colorBR Color32 DrawGizmosTexture(IRect, FRect, object, Color32, bool) public static void DrawGizmosTexture(IRect rect, FRect uv, object texture, Color32 tint, bool inverse = false) Parameters rect IRect uv FRect texture object tint Color32 inverse bool DrawGizmosTexture(IRect, FRect, object, bool) public static void DrawGizmosTexture(IRect rect, FRect uv, object texture, bool inverse = false) Parameters rect IRect uv FRect texture object inverse bool DrawGizmosTexture(IRect, object, Color32, bool) public static void DrawGizmosTexture(IRect rect, object texture, Color32 tint, bool inverse = false) Parameters rect IRect texture object tint Color32 inverse bool DrawGizmosTexture(IRect, object, bool) public static void DrawGizmosTexture(IRect rect, object texture, bool inverse = false) Parameters rect IRect texture object inverse bool FillPixelsIntoTexture(Color32[], object) public static void FillPixelsIntoTexture(Color32[] pixels, object texture) Parameters pixels Color32[] texture object ForAllPressingCharsThisFrame() public static IEnumerable<char> ForAllPressingCharsThisFrame() Returns IEnumerable<char> ForAllPressingKeysThisFrame() public static IEnumerable<KeyboardKey> ForAllPressingKeysThisFrame() Returns IEnumerable<KeyboardKey> ForceDoodleOnTopOfUI(int) public static void ForceDoodleOnTopOfUI(int duration = 0) Parameters duration int ForceGizmosOnTopOfUI(int) public static void ForceGizmosOnTopOfUI(int duration = 0) Parameters duration int ForceTargetFramerate(int, int) public static void ForceTargetFramerate(int framerate, int duration = 1) Parameters framerate int duration int GetCameraRectFromViewRect(IRect) public static IRect GetCameraRectFromViewRect(IRect viewRect) Parameters viewRect IRect Returns IRect GetCharPressed() protected abstract char GetCharPressed() Returns char GetCharSprite(int, char, out CharSprite) public static bool GetCharSprite(int fontIndex, char c, out CharSprite result) Parameters fontIndex int c char result CharSprite Returns bool GetClipboardText() public static string GetClipboardText() Returns string GetEffectEnable(int) public static bool GetEffectEnable(int effectIndex) Parameters effectIndex int Returns bool GetKeyPressed() protected abstract KeyboardKey? GetKeyPressed() Returns KeyboardKey? GetMonitorHeight(int) public static int GetMonitorHeight(int monitor) Parameters monitor int Returns int GetMonitorWidth(int) public static int GetMonitorWidth(int monitor) Parameters monitor int Returns int GetPixelsFromTexture(object) public static Color32[] GetPixelsFromTexture(object texture) Parameters texture object Returns Color32[] GetResizedTexture(object, int, int) public static object GetResizedTexture(object texture, int newWidth, int newHeight) Parameters texture object newWidth int newHeight int Returns object GetTargetFramerate() public static int GetTargetFramerate() Returns int GetTextureFromPixels(Color32[], int, int) public static object GetTextureFromPixels(Color32[] pixels, int width, int height) Parameters pixels Color32[] width int height int Returns object GetTextureID(object) public static uint? GetTextureID(object texture) Parameters texture object Returns uint? GetTextureSize(object) public static Int2 GetTextureSize(object texture) Parameters texture object Returns Int2 GetViewWidthFromViewHeight(int) public static int GetViewWidthFromViewHeight(int viewHeight) Parameters viewHeight int Returns int GetWindowPosition() public static Int2 GetWindowPosition() Returns Int2 HideCursor() public static void HideCursor() HideDoodle() public static void HideDoodle() IgnoreGizmos(int) public static void IgnoreGizmos(int duration = 0) Parameters duration int Initialize() public void Initialize() InvokeFileDropped(string) protected void InvokeFileDropped(string path) Parameters path string InvokeGameQuitting() protected void InvokeGameQuitting() InvokeGameTryingToQuit() protected bool InvokeGameTryingToQuit() Returns bool InvokeWindowFocusChanged(bool) protected void InvokeWindowFocusChanged(bool focus) Parameters focus bool IsGamepadKeyHolding(GamepadKey) public static bool IsGamepadKeyHolding(GamepadKey key) Parameters key GamepadKey Returns bool IsGamepadLeftStickHolding(Direction4) public static bool IsGamepadLeftStickHolding(Direction4 direction) Parameters direction Direction4 Returns bool IsGamepadRightStickHolding(Direction4) public static bool IsGamepadRightStickHolding(Direction4 direction) Parameters direction Direction4 Returns bool IsKeyboardKeyHolding(KeyboardKey) public static bool IsKeyboardKeyHolding(KeyboardKey key) Parameters key KeyboardKey Returns bool IsTextureReady(object) public static bool IsTextureReady(object texture) Parameters texture object Returns bool LoadFontsIntoPool(string, bool) public static void LoadFontsIntoPool(string rootPath, bool builtIn) Parameters rootPath string builtIn bool LoadSound(string) public static object LoadSound(string filePath) Parameters filePath string Returns object LoadSoundAlias(object) protected static object LoadSoundAlias(object source) Parameters source object Returns object MakeWindowFocused() public static void MakeWindowFocused() OpenUrl(string) public static void OpenUrl(string url) Parameters url string PassEffect(int, int) public static void PassEffect(int effectIndex, int duration = 0) Parameters effectIndex int duration int PassEffect_Greyscale(int) public static void PassEffect_Greyscale(int duration = 0) Parameters duration int PassEffect_Invert(int) public static void PassEffect_Invert(int duration = 0) Parameters duration int PassEffect_RetroDarken(float, float, int) public static void PassEffect_RetroDarken(float amount, float step = 8, int duration = 0) Parameters amount float step float duration int PassEffect_RetroLighten(float, float, int) public static void PassEffect_RetroLighten(float amount, float step = 8, int duration = 0) Parameters amount float step float duration int PassEffect_Tint(Color32, int) public static void PassEffect_Tint(Color32 color, int duration = 0) Parameters color Color32 duration int PassEffect_Vignette(float, float, float, float, float, int) public static void PassEffect_Vignette(float radius, float feather, float offsetX, float offsetY, float round, int duration = 0) Parameters radius float feather float offsetX float offsetY float round float duration int PauseGame() public static void PauseGame() PauseMusic() public static void PauseMusic() PlayMusic(int, bool) public static void PlayMusic(int id, bool fromStart = false) Parameters id int fromStart bool PlaySound(int, float, float, float) public static void PlaySound(int id, float volume = 1, float pitch = 1, float pan = 0.5) Parameters id int volume float pitch float pan float PlaySoundAtPosition(int, Int2, float, float) public static void PlaySoundAtPosition(int id, Int2 globalPosition, float volume = 1, float pitch = 1) Parameters id int globalPosition Int2 volume float pitch float PngBytesToTexture(byte[]) public static object PngBytesToTexture(byte[] bytes) Parameters bytes byte[] Returns object QuitApplication() public static void QuitApplication() ResetDoodle() public static void ResetDoodle() RestartGame() public static void RestartGame() SetClipboardText(string) public static void SetClipboardText(string text) Parameters text string SetClipboardText(StringBuilder) public static void SetClipboardText(StringBuilder builder) Parameters builder StringBuilder SetCursor(int) public static void SetCursor(int index) Parameters index int SetCursorToNormal() public static void SetCursorToNormal() SetDoodleOffset(Float2) public static void SetDoodleOffset(Float2 screenOffset) Parameters screenOffset Float2 SetDoodleZoom(float) public static void SetDoodleZoom(float zoom) Parameters zoom float SetEffectEnable(int, bool) public static void SetEffectEnable(int effectIndex, bool enable) Parameters effectIndex int enable bool SetEventWaiting(bool) public static void SetEventWaiting(bool enable) Parameters enable bool SetMusicVolume(int) public static void SetMusicVolume(int volume) Parameters volume int SetSoundVolume(int) public static void SetSoundVolume(int volume) Parameters volume int SetWindowIcon(int) public static void SetWindowIcon(int spriteID) Parameters spriteID int SetWindowMinSize(int) public static void SetWindowMinSize(int size) Parameters size int SetWindowPosition(int, int) public static void SetWindowPosition(int x, int y) Parameters x int y int SetWindowSize(int, int) public static void SetWindowSize(int x, int y) Parameters x int y int SetWindowTitle(string) public static void SetWindowTitle(string title) Parameters title string ShowCursor() public static void ShowCursor() ShowDoodle(int) public static void ShowDoodle(int duration = 0) Parameters duration int StopAllSounds() public static void StopAllSounds() StopGame() public static void StopGame() StopMusic() public static void StopMusic() SyncAudioPool(params string[]) public static void SyncAudioPool(params string[] universeRoots) Parameters universeRoots string[] SyncFontsWithPool(string) public static bool SyncFontsWithPool(string rootPath) Parameters rootPath string Returns bool TextureToPngBytes(object) public static byte[] TextureToPngBytes(object texture) Parameters texture object Returns byte[] UnloadFontsFromPool(bool) public static void UnloadFontsFromPool(bool ignoreBuiltIn = true) Parameters ignoreBuiltIn bool UnloadMusic(object) public static void UnloadMusic(object music) Parameters music object UnloadSound(SoundData) public static void UnloadSound(SoundData sound) Parameters sound SoundData UnloadTexture(object) public static void UnloadTexture(object texture) Parameters texture object UnpauseGame() public static void UnpauseGame() UnpauseMusic() public static void UnpauseMusic() Update() public void Update() _AfterAllLayersUpdate() protected abstract void _AfterAllLayersUpdate() _BeforeAllLayersUpdate() protected abstract void _BeforeAllLayersUpdate() _CenterCursor() protected abstract void _CenterCursor() _CursorInScreen() protected abstract bool _CursorInScreen() Returns bool _CursorVisible() protected abstract bool _CursorVisible() Returns bool _DoodleRect(FRect, Color32) protected abstract void _DoodleRect(FRect screenRect, Color32 color) Parameters screenRect FRect color Color32 _DoodleWorld(IBlockSquad, FRect, IRect, int, bool, bool, bool, bool) protected abstract void _DoodleWorld(IBlockSquad squad, FRect screenRect, IRect worldUnitRange, int z, bool ignoreLevel = false, bool ignoreBG = false, bool ignoreEntity = false, bool ignoreElement = true) Parameters squad IBlockSquad screenRect FRect worldUnitRange IRect z int ignoreLevel bool ignoreBG bool ignoreEntity bool ignoreElement bool _DrawGizmosLine(int, int, int, int, int, Color32) protected abstract void _DrawGizmosLine(int startX, int startY, int endX, int endY, int thickness, Color32 color) Parameters startX int startY int endX int endY int thickness int color Color32 _DrawGizmosRect(IRect, Color32) protected abstract void _DrawGizmosRect(IRect rect, Color32 color) Parameters rect IRect color Color32 _DrawGizmosRect(IRect, Color32, Color32) protected abstract void _DrawGizmosRect(IRect rect, Color32 colorT, Color32 colorB) Parameters rect IRect colorT Color32 colorB Color32 _DrawGizmosRect(IRect, Color32, Color32, Color32, Color32) protected abstract void _DrawGizmosRect(IRect rect, Color32 colorTL, Color32 colorTR, Color32 colorBL, Color32 colorBR) Parameters rect IRect colorTL Color32 colorTR Color32 colorBL Color32 colorBR Color32 _DrawGizmosTexture(IRect, FRect, object, Color32, bool) protected abstract void _DrawGizmosTexture(IRect rect, FRect uv, object texture, Color32 tint, bool inverse) Parameters rect IRect uv FRect texture object tint Color32 inverse bool _Effect_SetDarkenParams(float, float) protected abstract void _Effect_SetDarkenParams(float amount, float step) Parameters amount float step float _Effect_SetLightenParams(float, float) protected abstract void _Effect_SetLightenParams(float amount, float step) Parameters amount float step float _Effect_SetTintParams(Color32) protected abstract void _Effect_SetTintParams(Color32 color) Parameters color Color32 _Effect_SetVignetteParams(float, float, float, float, float) protected abstract void _Effect_SetVignetteParams(float radius, float feather, float offsetX, float offsetY, float round) Parameters radius float feather float offsetX float offsetY float round float _FillPixelsIntoTexture(Color32[], object) protected abstract void _FillPixelsIntoTexture(Color32[] pixels, object texture) Parameters pixels Color32[] texture object _GetCharSprite(int, char, out CharSprite) protected abstract bool _GetCharSprite(int fontIndex, char c, out CharSprite result) Parameters fontIndex int c char result CharSprite Returns bool _GetClipboardText() protected abstract string _GetClipboardText() Returns string _GetCurrentMonitor() protected abstract int _GetCurrentMonitor() Returns int _GetCurrentMusicID() protected abstract int _GetCurrentMusicID() Returns int _GetEffectEnable(int) protected abstract bool _GetEffectEnable(int effectIndex) Parameters effectIndex int Returns bool _GetFontCount() protected abstract int _GetFontCount() Returns int _GetGamepadLeftStickDirection() protected abstract Float2 _GetGamepadLeftStickDirection() Returns Float2 _GetGamepadRightStickDirection() protected abstract Float2 _GetGamepadRightStickDirection() Returns Float2 _GetMonitorHeight(int) protected abstract int _GetMonitorHeight(int monitor) Parameters monitor int Returns int _GetMonitorWidth(int) protected abstract int _GetMonitorWidth(int monitor) Parameters monitor int Returns int _GetMouseScreenPosition() protected abstract Int2 _GetMouseScreenPosition() Returns Int2 _GetMouseScrollDelta() protected abstract int _GetMouseScrollDelta() Returns int _GetPixelsFromTexture(object) protected abstract Color32[] _GetPixelsFromTexture(object texture) Parameters texture object Returns Color32[] _GetResizedTexture(object, int, int) protected abstract object _GetResizedTexture(object texture, int newWidth, int newHeight) Parameters texture object newWidth int newHeight int Returns object _GetScreenHeight() protected abstract int _GetScreenHeight() Returns int _GetScreenWidth() protected abstract int _GetScreenWidth() Returns int _GetTextureFromPixels(Color32[], int, int) protected abstract object _GetTextureFromPixels(Color32[] pixels, int width, int height) Parameters pixels Color32[] width int height int Returns object _GetTextureID(object) protected abstract uint? _GetTextureID(object texture) Parameters texture object Returns uint? _GetTextureSize(object) protected abstract Int2 _GetTextureSize(object texture) Parameters texture object Returns Int2 _GetWindowDecorated() protected abstract bool _GetWindowDecorated() Returns bool _GetWindowMaximized() protected abstract bool _GetWindowMaximized() Returns bool _GetWindowMinimized() protected abstract bool _GetWindowMinimized() Returns bool _GetWindowPosition() protected abstract Int2 _GetWindowPosition() Returns Int2 _GetWindowResizable() protected abstract bool _GetWindowResizable() Returns bool _GetWindowTopmost() protected abstract bool _GetWindowTopmost() Returns bool _HideCursor() protected abstract void _HideCursor() _IgnoreGizmos(int) protected abstract void _IgnoreGizmos(int duration = 0) Parameters duration int _IsGamepadAvailable() protected abstract bool _IsGamepadAvailable() Returns bool _IsGamepadKeyHolding(GamepadKey) protected abstract bool _IsGamepadKeyHolding(GamepadKey key) Parameters key GamepadKey Returns bool _IsGamepadLeftStickHolding(Direction4) protected abstract bool _IsGamepadLeftStickHolding(Direction4 direction) Parameters direction Direction4 Returns bool _IsGamepadRightStickHolding(Direction4) protected abstract bool _IsGamepadRightStickHolding(Direction4 direction) Parameters direction Direction4 Returns bool _IsKeyboardAvailable() protected abstract bool _IsKeyboardAvailable() Returns bool _IsKeyboardKeyHolding(KeyboardKey) protected abstract bool _IsKeyboardKeyHolding(KeyboardKey key) Parameters key KeyboardKey Returns bool _IsMouseAvailable() protected abstract bool _IsMouseAvailable() Returns bool _IsMouseLeftHolding() protected abstract bool _IsMouseLeftHolding() Returns bool _IsMouseMidHolding() protected abstract bool _IsMouseMidHolding() Returns bool _IsMouseRightHolding() protected abstract bool _IsMouseRightHolding() Returns bool _IsMusicPlaying() protected abstract bool _IsMusicPlaying() Returns bool _IsTextureReady(object) protected abstract bool _IsTextureReady(object texture) Parameters texture object Returns bool _IsWindowFocused() protected abstract bool _IsWindowFocused() Returns bool _LoadSound(string) protected abstract object _LoadSound(string filePath) Parameters filePath string Returns object _LoadSoundAlias(object) protected abstract object _LoadSoundAlias(object source) Parameters source object Returns object _MakeWindowFocused() protected abstract void _MakeWindowFocused() _OnLayerUpdate(int, Cell[], int) protected abstract void _OnLayerUpdate(int layerIndex, Cell[] cells, int cellCount) Parameters layerIndex int cells Cell[] cellCount int _OpenUrl(string) protected abstract void _OpenUrl(string url) Parameters url string _PauseMusic() protected abstract void _PauseMusic() _PlayMusic(int, bool) protected abstract void _PlayMusic(int id, bool fromStart) Parameters id int fromStart bool _PlaySound(int, float, float, float) protected abstract void _PlaySound(int id, float volume, float pitch, float pan) Parameters id int volume float pitch float pan float _PngBytesToTexture(byte[]) protected abstract object _PngBytesToTexture(byte[] bytes) Parameters bytes byte[] Returns object _QuitApplication() protected abstract void _QuitApplication() _ResetDoodle() protected abstract void _ResetDoodle() _SetClipboardText(string) protected abstract void _SetClipboardText(string text) Parameters text string _SetCursor(int) protected abstract void _SetCursor(int index) Parameters index int _SetCursorToNormal() protected abstract void _SetCursorToNormal() _SetDoodleOffset(Float2) protected abstract void _SetDoodleOffset(Float2 screenOffset) Parameters screenOffset Float2 _SetDoodleZoom(float) protected abstract void _SetDoodleZoom(float zoom) Parameters zoom float _SetEffectEnable(int, bool) protected abstract void _SetEffectEnable(int effectIndex, bool enable) Parameters effectIndex int enable bool _SetEventWaiting(bool) protected abstract void _SetEventWaiting(bool enable) Parameters enable bool _SetFullscreen(bool) protected abstract void _SetFullscreen(bool fullScreen) Parameters fullScreen bool _SetMusicVolume(int) protected abstract void _SetMusicVolume(int volume) Parameters volume int _SetSoundVolume(int) protected abstract void _SetSoundVolume(int volume) Parameters volume int _SetWindowDecorated(bool) protected abstract void _SetWindowDecorated(bool decorated) Parameters decorated bool _SetWindowIcon(int) protected abstract void _SetWindowIcon(int spriteID) Parameters spriteID int _SetWindowMaximized(bool) protected abstract void _SetWindowMaximized(bool maximized) Parameters maximized bool _SetWindowMinSize(int) protected abstract void _SetWindowMinSize(int size) Parameters size int _SetWindowMinimized(bool) protected abstract void _SetWindowMinimized(bool minimized) Parameters minimized bool _SetWindowPosition(int, int) protected abstract void _SetWindowPosition(int x, int y) Parameters x int y int _SetWindowResizable(bool) protected abstract void _SetWindowResizable(bool resizable) Parameters resizable bool _SetWindowSize(int, int) protected abstract void _SetWindowSize(int x, int y) Parameters x int y int _SetWindowTitle(string) protected abstract void _SetWindowTitle(string title) Parameters title string _SetWindowTopmost(bool) protected abstract void _SetWindowTopmost(bool topmost) Parameters topmost bool _ShowCursor() protected abstract void _ShowCursor() _StopAllSounds() protected abstract void _StopAllSounds() _StopMusic() protected abstract void _StopMusic() _TextureToPngBytes(object) protected abstract byte[] _TextureToPngBytes(object texture) Parameters texture object Returns byte[] _UnPauseMusic() protected abstract void _UnPauseMusic() _UnloadMusic(object) protected abstract void _UnloadMusic(object music) Parameters music object _UnloadSound(SoundData) protected abstract void _UnloadSound(SoundData sound) Parameters sound SoundData _UnloadTexture(object) protected abstract void _UnloadTexture(object texture) Parameters texture object"
  },
  "api/AngeliA.Gamekey.html": {
    "href": "api/AngeliA.Gamekey.html",
    "title": "Enum Gamekey | AngeliA",
    "summary": "Enum Gamekey Namespace AngeliA Assembly AngeliA Framework.dll public enum Gamekey Extension Methods Extension.GetDirection(Gamekey) Extension.Next<E>(E) Extension.Prev<E>(E) Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Fields Action = 4 Down = 2 Jump = 5 Left = 0 Right = 1 Select = 7 Start = 6 Up = 3"
  },
  "api/AngeliA.GamepadKey.html": {
    "href": "api/AngeliA.GamepadKey.html",
    "title": "Enum GamepadKey | AngeliA",
    "summary": "Enum GamepadKey Namespace AngeliA Assembly AngeliA Framework.dll public enum GamepadKey Extension Methods Extension.Next<E>(E) Extension.Prev<E>(E) Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Fields DpadDown = 1 DpadLeft = 2 DpadRight = 3 DpadUp = 0 East = 5 LeftShoulder = 10 LeftStick = 8 LeftTrigger = 14 North = 4 RightShoulder = 11 RightStick = 9 RightTrigger = 15 Select = 13 South = 6 Start = 12 West = 7"
  },
  "api/AngeliA.GenericDialogUI.Option.html": {
    "href": "api/AngeliA.GenericDialogUI.Option.html",
    "title": "Class GenericDialogUI.Option | AngeliA",
    "summary": "Class GenericDialogUI.Option Namespace AngeliA Assembly AngeliA Framework.dll public class GenericDialogUI.Option Inheritance object GenericDialogUI.Option Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Fields Action public Action Action Field Value Action Label public string Label Field Value string"
  },
  "api/AngeliA.GenericDialogUI.html": {
    "href": "api/AngeliA.GenericDialogUI.html",
    "title": "Class GenericDialogUI | AngeliA",
    "summary": "Class GenericDialogUI Namespace AngeliA Assembly AngeliA Framework.dll [Entity.StageOrder(4097)] [Entity.Capacity(1, 1)] public class GenericDialogUI : MenuUI, IMapItem, IWindowEntityUI Inheritance object Entity EntityUI MenuUI GenericDialogUI Implements IMapItem IWindowEntityUI Inherited Members MenuUI.SelectionAdjustable MenuUI.SelectionIndex MenuUI.Message MenuUI.BackgroundRect MenuUI.OverrideWindowWidth MenuUI.AnimationDuration MenuUI.BackgroundStyle MenuUI.MessageStyle MenuUI.DefaultLabelStyle MenuUI.DefaultContentStyle MenuUI.BackgroundCode MenuUI.SelectionMarkCode MenuUI.MoreItemMarkCode MenuUI.ArrowMarkCode MenuUI.WindowWidth MenuUI.ItemHeight MenuUI.ItemGap MenuUI.MaxItemCount MenuUI.ContentPadding MenuUI.SelectionMarkSize MenuUI.SelectionArrowMarkSize MenuUI.MoreMarkSize MenuUI.ScreenTint MenuUI.BackgroundTint MenuUI.SelectionMarkTint MenuUI.MoreMarkTint MenuUI.MouseHighlightTint MenuUI.Interactable MenuUI.AllowMouseClick MenuUI.QuitOnPressStartOrEscKey MenuUI.AnimationAmount MenuUI.BeforeUpdate() MenuUI.UpdateUI() MenuUI.OnSelectionChanged() MenuUI.GetWindowRect() MenuUI.DrawItem(string, int, GUIStyle, GUIStyle, bool) MenuUI.DrawItem(string, string, int, GUIStyle, GUIStyle, bool) MenuUI.DrawArrowItem(string, string, bool, bool, out int, int, GUIStyle, GUIStyle, bool) MenuUI.DrawItem(string, char[], int, GUIStyle, GUIStyle, bool) MenuUI.DrawArrowItem(string, char[], bool, bool, out int, int, GUIStyle, GUIStyle, bool) MenuUI.SetSelection(int) MenuUI.RefreshAnimation() EntityUI.Update() EntityUI.Unify(int) Entity.Active Entity.X Entity.Y Entity.Width Entity.Height Entity.TypeID Entity.SpawnFrame Entity.FromWorld Entity.Rect Entity.InstanceOrder Entity.MapUnitPos Entity.InstanceID Entity.IgnoreReposition Entity.XY Entity.Size Entity.Center Entity.CenterX Entity.CenterY Entity.PivotUnitPosition Entity.AfterReposition(Int3, Int3) Entity.IgnoreDespawnFromMap(int) Entity.CancelIgnoreDespawnFromMap() Entity.Draw() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Constructors GenericDialogUI() public GenericDialogUI() Properties BlockEvent protected override bool BlockEvent { get; } Property Value bool Instance public static GenericDialogUI Instance { get; } Property Value GenericDialogUI InvokingData public static object InvokingData { get; } Property Value object ShowingDialog public static bool ShowingDialog { get; } Property Value bool Methods DrawMenu() protected override void DrawMenu() FirstUpdate() public override void FirstUpdate() LateUpdate() public override void LateUpdate() OnActivated() public override void OnActivated() OnInactivated() public override void OnInactivated() SetCustomData(object, object, object) public static void SetCustomData(object dataA = null, object dataB = null, object dataC = null) Parameters dataA object dataB object dataC object SetItemTint(Color32) public static void SetItemTint(Color32 tintA) Parameters tintA Color32 SetItemTint(Color32, Color32) public static void SetItemTint(Color32 tintA, Color32 tintB) Parameters tintA Color32 tintB Color32 SetItemTint(Color32, Color32, Color32) public static void SetItemTint(Color32 tintA, Color32 tintB, Color32 tintC) Parameters tintA Color32 tintB Color32 tintC Color32 SpawnDialog(string, string, Action) public static void SpawnDialog(string message, string label, Action action) Parameters message string label string action Action SpawnDialog(string, string, Action, string, Action) public static void SpawnDialog(string message, string labelA, Action actionA, string labelB, Action actionB) Parameters message string labelA string actionA Action labelB string actionB Action SpawnDialog(string, string, Action, string, Action, string, Action) public static void SpawnDialog(string message, string labelA, Action actionA, string labelB, Action actionB, string labelC, Action actionC) Parameters message string labelA string actionA Action labelB string actionB Action labelC string actionC Action SpawnDialog_Button(string, string, Action) public static void SpawnDialog_Button(string message, string label, Action action) Parameters message string label string action Action SpawnDialog_Button(string, string, Action, string, Action) public static void SpawnDialog_Button(string message, string labelA, Action actionA, string labelB, Action actionB) Parameters message string labelA string actionA Action labelB string actionB Action SpawnDialog_Button(string, string, Action, string, Action, string, Action) public static void SpawnDialog_Button(string message, string labelA, Action actionA, string labelB, Action actionB, string labelC, Action actionC) Parameters message string labelA string actionA Action labelB string actionB Action labelC string actionC Action"
  },
  "api/AngeliA.GenericPopupUI.html": {
    "href": "api/AngeliA.GenericPopupUI.html",
    "title": "Class GenericPopupUI | AngeliA",
    "summary": "Class GenericPopupUI Namespace AngeliA Assembly AngeliA Framework.dll [Entity.StageOrder(4096)] [Entity.Capacity(1, 1)] public class GenericPopupUI : EntityUI, IMapItem, IWindowEntityUI Inheritance object Entity EntityUI GenericPopupUI Implements IMapItem IWindowEntityUI Inherited Members EntityUI.Update() EntityUI.LateUpdate() EntityUI.Unify(int) Entity.Active Entity.X Entity.Y Entity.Width Entity.Height Entity.TypeID Entity.SpawnFrame Entity.FromWorld Entity.Rect Entity.InstanceOrder Entity.MapUnitPos Entity.InstanceID Entity.IgnoreReposition Entity.XY Entity.Size Entity.Center Entity.CenterX Entity.CenterY Entity.PivotUnitPosition Entity.BeforeUpdate() Entity.AfterReposition(Int3, Int3) Entity.IgnoreDespawnFromMap(int) Entity.CancelIgnoreDespawnFromMap() Entity.Draw() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Constructors GenericPopupUI() public GenericPopupUI() Properties BackgroundRect public IRect BackgroundRect { get; } Property Value IRect BlockEvent protected override bool BlockEvent { get; } Property Value bool CurrentItemCount public static int CurrentItemCount { get; } Property Value int CurrentSubLevel public int CurrentSubLevel { get; set; } Property Value int Instance public static GenericPopupUI Instance { get; } Property Value GenericPopupUI InvokingItemData public static object InvokingItemData { get; } Property Value object InvokingItemlabel public static string InvokingItemlabel { get; } Property Value string MenuID public int MenuID { get; } Property Value int OffsetX public int OffsetX { get; set; } Property Value int OffsetY public int OffsetY { get; set; } Property Value int ShowingPopup public static bool ShowingPopup { get; } Property Value bool Methods AddItem(string, Action, bool, bool, object, bool) public static void AddItem(string label, Action action, bool enabled = true, bool @checked = false, object data = null, bool editable = false) Parameters label string action Action enabled bool checked bool data object editable bool AddItem(string, int, Direction2, int, Action, bool, bool, object, bool) public static void AddItem(string label, int icon, Direction2 iconPosition, int checkMarkSprite, Action action, bool enabled = true, bool @checked = false, object data = null, bool editable = false) Parameters label string icon int iconPosition Direction2 checkMarkSprite int action Action enabled bool checked bool data object editable bool AddSeparator() public static void AddSeparator() BeginPopup(Int2, int) public static void BeginPopup(Int2 globalOffset, int menuID = 0) Parameters globalOffset Int2 menuID int BeginPopup(int) public static void BeginPopup(int menuID = 0) Parameters menuID int BeginSubItem() public static void BeginSubItem() ClearItems() public static void ClearItems() ClosePopup() public static void ClosePopup() EndSubItem() public static void EndSubItem() FirstUpdate() public override void FirstUpdate() OnActivated() public override void OnActivated() OnInactivated() public override void OnInactivated() SetTint(Color32, Color32) public static void SetTint(Color32 labelTint, Color32 iconTint) Parameters labelTint Color32 iconTint Color32 UpdateUI() public override void UpdateUI()"
  },
  "api/AngeliA.GlobalGravityAttribute.html": {
    "href": "api/AngeliA.GlobalGravityAttribute.html",
    "title": "Class GlobalGravityAttribute | AngeliA",
    "summary": "Class GlobalGravityAttribute Namespace AngeliA Assembly AngeliA Framework.dll The gravity value applys on all rigidbody [AttributeUsage(AttributeTargets.Assembly, AllowMultiple = true)] public class GlobalGravityAttribute : Attribute Inheritance object Attribute GlobalGravityAttribute Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Constructors GlobalGravityAttribute(int) The gravity value applys on all rigidbody public GlobalGravityAttribute(int gravity) Parameters gravity int"
  },
  "api/AngeliA.GlobalItemCombinationAttribute-1.html": {
    "href": "api/AngeliA.GlobalItemCombinationAttribute-1.html",
    "title": "Class GlobalItemCombinationAttribute<I0> | AngeliA",
    "summary": "Class GlobalItemCombinationAttribute<I0> Namespace AngeliA Assembly AngeliA Framework.dll Define a item combination to craft the item. [AttributeUsage(AttributeTargets.Assembly, AllowMultiple = true)] public class GlobalItemCombinationAttribute<I0> : BasicGlobalItemCombinationAttribute Type Parameters I0 Inheritance object Attribute BasicItemCombinationAttribute BasicGlobalItemCombinationAttribute GlobalItemCombinationAttribute<I0> Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Constructors GlobalItemCombinationAttribute(string, int, string, string, string, string, string, string, string) Define a item combination to craft the item. public GlobalItemCombinationAttribute(string result, int count = 1, string keepId0 = \"\", string keepId1 = \"\", string keepId2 = \"\", string keepId3 = \"\", string extraB = \"\", string extraC = \"\", string extraD = \"\") Parameters result string count int How many item does it craft at once keepId0 string Do not consume this item keepId1 string Do not consume this item keepId2 string Do not consume this item keepId3 string Do not consume this item extraB string Use this if the item is not based on class extraC string Use this if the item is not based on class extraD string Use this if the item is not based on class"
  },
  "api/AngeliA.GlobalItemCombinationAttribute-2.html": {
    "href": "api/AngeliA.GlobalItemCombinationAttribute-2.html",
    "title": "Class GlobalItemCombinationAttribute<I0, I1> | AngeliA",
    "summary": "Class GlobalItemCombinationAttribute<I0, I1> Namespace AngeliA Assembly AngeliA Framework.dll Define a item combination to craft the item. [AttributeUsage(AttributeTargets.Assembly, AllowMultiple = true)] public class GlobalItemCombinationAttribute<I0, I1> : BasicGlobalItemCombinationAttribute Type Parameters I0 I1 Inheritance object Attribute BasicItemCombinationAttribute BasicGlobalItemCombinationAttribute GlobalItemCombinationAttribute<I0, I1> Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Constructors GlobalItemCombinationAttribute(string, int, string, string, string, string, string, string) Define a item combination to craft the item. public GlobalItemCombinationAttribute(string result, int count = 1, string keepId0 = \"\", string keepId1 = \"\", string keepId2 = \"\", string keepId3 = \"\", string extraC = \"\", string extraD = \"\") Parameters result string count int How many item does it craft at once keepId0 string Do not consume this item keepId1 string Do not consume this item keepId2 string Do not consume this item keepId3 string Do not consume this item extraC string Use this if the item is not based on class extraD string Use this if the item is not based on class"
  },
  "api/AngeliA.GlobalItemCombinationAttribute-3.html": {
    "href": "api/AngeliA.GlobalItemCombinationAttribute-3.html",
    "title": "Class GlobalItemCombinationAttribute<I0, I1, I2> | AngeliA",
    "summary": "Class GlobalItemCombinationAttribute<I0, I1, I2> Namespace AngeliA Assembly AngeliA Framework.dll Define a item combination to craft the item. [AttributeUsage(AttributeTargets.Assembly, AllowMultiple = true)] public class GlobalItemCombinationAttribute<I0, I1, I2> : BasicGlobalItemCombinationAttribute Type Parameters I0 I1 I2 Inheritance object Attribute BasicItemCombinationAttribute BasicGlobalItemCombinationAttribute GlobalItemCombinationAttribute<I0, I1, I2> Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Constructors GlobalItemCombinationAttribute(string, int, string, string, string, string, string) Define a item combination to craft the item. public GlobalItemCombinationAttribute(string result, int count = 1, string keepId0 = \"\", string keepId1 = \"\", string keepId2 = \"\", string keepId3 = \"\", string extraD = \"\") Parameters result string count int How many item does it craft at once keepId0 string Do not consume this item keepId1 string Do not consume this item keepId2 string Do not consume this item keepId3 string Do not consume this item extraD string Use this if the item is not based on class"
  },
  "api/AngeliA.GlobalItemCombinationAttribute-4.html": {
    "href": "api/AngeliA.GlobalItemCombinationAttribute-4.html",
    "title": "Class GlobalItemCombinationAttribute<I0, I1, I2, I3> | AngeliA",
    "summary": "Class GlobalItemCombinationAttribute<I0, I1, I2, I3> Namespace AngeliA Assembly AngeliA Framework.dll Define a item combination to craft the item. [AttributeUsage(AttributeTargets.Assembly, AllowMultiple = true)] public class GlobalItemCombinationAttribute<I0, I1, I2, I3> : BasicGlobalItemCombinationAttribute Type Parameters I0 I1 I2 I3 Inheritance object Attribute BasicItemCombinationAttribute BasicGlobalItemCombinationAttribute GlobalItemCombinationAttribute<I0, I1, I2, I3> Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Constructors GlobalItemCombinationAttribute(string, int, string, string, string, string) Define a item combination to craft the item. public GlobalItemCombinationAttribute(string result, int count = 1, string keepId0 = \"\", string keepId1 = \"\", string keepId2 = \"\", string keepId3 = \"\") Parameters result string count int How many item does it craft at once keepId0 string Do not consume this item keepId1 string Do not consume this item keepId2 string Do not consume this item keepId3 string Do not consume this item"
  },
  "api/AngeliA.GlobalItemCombinationAttribute.html": {
    "href": "api/AngeliA.GlobalItemCombinationAttribute.html",
    "title": "Class GlobalItemCombinationAttribute | AngeliA",
    "summary": "Class GlobalItemCombinationAttribute Namespace AngeliA Assembly AngeliA Framework.dll Define a item combination to craft the item. [AttributeUsage(AttributeTargets.Assembly, AllowMultiple = true)] public class GlobalItemCombinationAttribute : BasicGlobalItemCombinationAttribute Inheritance object Attribute BasicItemCombinationAttribute BasicGlobalItemCombinationAttribute GlobalItemCombinationAttribute Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Constructors GlobalItemCombinationAttribute(string, int, string, string, string, string, string, string, string, string) Define a item combination to craft the item. public GlobalItemCombinationAttribute(string result, int count = 1, string keepId0 = \"\", string keepId1 = \"\", string keepId2 = \"\", string keepId3 = \"\", string extraA = \"\", string extraB = \"\", string extraC = \"\", string extraD = \"\") Parameters result string count int How many item does it craft at once keepId0 string Do not consume this item keepId1 string Do not consume this item keepId2 string Do not consume this item keepId3 string Do not consume this item extraA string Use this if the item is not based on class extraB string Use this if the item is not based on class extraC string Use this if the item is not based on class extraD string Use this if the item is not based on class"
  },
  "api/AngeliA.GroupAnimationHolder.html": {
    "href": "api/AngeliA.GroupAnimationHolder.html",
    "title": "Class GroupAnimationHolder | AngeliA",
    "summary": "Class GroupAnimationHolder Namespace AngeliA Assembly AngeliA Framework.dll public class GroupAnimationHolder : Entity, IMapItem Inheritance object Entity GroupAnimationHolder Implements IMapItem Inherited Members Entity.Active Entity.X Entity.Y Entity.Width Entity.Height Entity.TypeID Entity.SpawnFrame Entity.FromWorld Entity.Rect Entity.InstanceOrder Entity.MapUnitPos Entity.InstanceID Entity.IgnoreReposition Entity.XY Entity.Size Entity.Center Entity.CenterX Entity.CenterY Entity.PivotUnitPosition Entity.OnInactivated() Entity.FirstUpdate() Entity.Update() Entity.AfterReposition(Int3, Int3) Entity.IgnoreDespawnFromMap(int) Entity.CancelIgnoreDespawnFromMap() Entity.Draw() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Methods BeforeUpdate() public override sealed void BeforeUpdate() Follow(Entity) public void Follow(Entity target) Parameters target Entity LateUpdate() public override void LateUpdate() OnActivated() public override void OnActivated() Spawn(int, int, int, int, int, int, int) public static GroupAnimationHolder Spawn(int groupID, int x, int y, int renderLayer = 3, int rotation1000 = 0, int rotationSpeed = 0, int scale = 1000) Parameters groupID int x int y int renderLayer int rotation1000 int rotationSpeed int scale int Returns GroupAnimationHolder Spawn(int, int, int, int, int, int, int, bool, Color32, int, int) public static GroupAnimationHolder Spawn(int groupID, int x, int y, int rotation1000, int rotationSpeed, int duration, int framePerSprite, bool loop, Color32 tint, int z = 2147483646, int renderLayer = 3) Parameters groupID int x int y int rotation1000 int rotationSpeed int duration int framePerSprite int loop bool tint Color32 z int renderLayer int Returns GroupAnimationHolder Spawn(int, int, int, int, int, int, int, int, int, int, int, bool, Color32, int, int) public static GroupAnimationHolder Spawn(int groupID, int x, int y, int width, int height, int pivotX, int pivotY, int rotation1000, int rotationSpeed, int duration, int framePerSprite, bool loop, Color32 tint, int z = 2147483646, int renderLayer = 3) Parameters groupID int x int y int width int height int pivotX int pivotY int rotation1000 int rotationSpeed int duration int framePerSprite int loop bool tint Color32 z int renderLayer int Returns GroupAnimationHolder"
  },
  "api/AngeliA.Hair.html": {
    "href": "api/AngeliA.Hair.html",
    "title": "Class Hair | AngeliA",
    "summary": "Class Hair Namespace AngeliA Assembly AngeliA Framework.dll public abstract class Hair : BodyGadget Inheritance object BodyGadget Hair Derived ModularHair Inherited Members BodyGadget.BodyGadgetSystemReady BodyGadget.SheetIndex BodyGadget.GadgetID BodyGadget.GadgetName BodyGadget.ForAllGadget() BodyGadget.GetDefaultGadgetID(int, BodyGadgetType) BodyGadget.TryGetGadget(int, out BodyGadget) BodyGadget.GetDisplayName(string, out int) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Properties DropMotionAmount protected virtual int DropMotionAmount { get; } Property Value int FacingLeftOffsetX protected virtual int FacingLeftOffsetX { get; } Property Value int FlowAmountX protected virtual int FlowAmountX { get; } Property Value int FlowAmountY protected virtual int FlowAmountY { get; } Property Value int FlowMotionAmount protected virtual int FlowMotionAmount { get; } Property Value int ForceBackOnFlow protected virtual bool ForceBackOnFlow { get; } Property Value bool GadgetType public override sealed BodyGadgetType GadgetType { get; } Property Value BodyGadgetType MotionAmount protected virtual int MotionAmount { get; } Property Value int SpriteBraidLeft public OrientedSprite SpriteBraidLeft { get; } Property Value OrientedSprite SpriteBraidRight public OrientedSprite SpriteBraidRight { get; } Property Value OrientedSprite SpriteHairBackward public OrientedSprite SpriteHairBackward { get; } Property Value OrientedSprite SpriteHairForward public OrientedSprite SpriteHairForward { get; } Property Value OrientedSprite SpriteLoaded public override bool SpriteLoaded { get; } Property Value bool UseLimbRotate protected virtual bool UseLimbRotate { get; } Property Value bool Methods DrawBraid(PoseCharacterRenderer, bool, OrientedSprite, OrientedSprite, int, int, int, int, bool, int, int) public static void DrawBraid(PoseCharacterRenderer renderer, bool forceBackOnFlow, OrientedSprite spriteLeft, OrientedSprite spriteRight, int facingLeftOffsetX, int motionAmount, int flowMotionAmount, int dropMotionAmount, bool useLimbRotate, int offsetX, int offsetY) Parameters renderer PoseCharacterRenderer forceBackOnFlow bool spriteLeft OrientedSprite spriteRight OrientedSprite facingLeftOffsetX int motionAmount int flowMotionAmount int dropMotionAmount int useLimbRotate bool offsetX int offsetY int DrawGadget(PoseCharacterRenderer) public override void DrawGadget(PoseCharacterRenderer renderer) Parameters renderer PoseCharacterRenderer DrawGadgetFromPool(PoseCharacterRenderer) public static void DrawGadgetFromPool(PoseCharacterRenderer renderer) Parameters renderer PoseCharacterRenderer DrawGadgetGizmos(IRect, Color32, int) public override void DrawGadgetGizmos(IRect rect, Color32 tint, int z) Parameters rect IRect tint Color32 z int DrawSpriteAsHair(PoseCharacterRenderer, OrientedSprite, OrientedSprite, int, int) public static void DrawSpriteAsHair(PoseCharacterRenderer renderer, OrientedSprite spriteForward, OrientedSprite spriteBackward, int flowAmountX, int flowAmountY) Parameters renderer PoseCharacterRenderer spriteForward OrientedSprite spriteBackward OrientedSprite flowAmountX int flowAmountY int FillFromSheet(string) public override bool FillFromSheet(string name) Parameters name string Returns bool"
  },
  "api/AngeliA.HandCloth.html": {
    "href": "api/AngeliA.HandCloth.html",
    "title": "Class HandCloth | AngeliA",
    "summary": "Class HandCloth Namespace AngeliA Assembly AngeliA Framework.dll public abstract class HandCloth : Cloth Inheritance object Cloth HandCloth Derived ModularHandSuit Inherited Members Cloth.ClothSystemReady Cloth.ClothID Cloth.ClothName Cloth.SheetIndex Cloth.Pool Cloth.DefaultPool Cloth.HasCloth(int) Cloth.TryGetCloth(int, out Cloth) Cloth.GetDefaultClothID(int, ClothType) Cloth.ForAllCloth() Cloth.AttachClothOn(BodyPart, AngeSprite, int, int, int, int, int, int, int, int, bool) Cloth.CoverClothOn(BodyPart, AngeSprite) Cloth.CoverClothOn(BodyPart, AngeSprite, int) Cloth.CoverClothOn(BodyPart, AngeSprite, int, Color32, bool) Cloth.GetDisplayName(out int) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Properties ClothType public override sealed ClothType ClothType { get; } Property Value ClothType SpriteLoaded public override bool SpriteLoaded { get; } Property Value bool Methods DrawCloth(PoseCharacterRenderer) public override void DrawCloth(PoseCharacterRenderer renderer) Parameters renderer PoseCharacterRenderer DrawClothForHand(PoseCharacterRenderer, OrientedSprite, OrientedSprite, int) public static void DrawClothForHand(PoseCharacterRenderer renderer, OrientedSprite spriteLeft, OrientedSprite spriteRight, int localZ = 1) Parameters renderer PoseCharacterRenderer spriteLeft OrientedSprite spriteRight OrientedSprite localZ int DrawClothFromPool(PoseCharacterRenderer) public static void DrawClothFromPool(PoseCharacterRenderer renderer) Parameters renderer PoseCharacterRenderer DrawClothGizmos(IRect, Color32, int) public override void DrawClothGizmos(IRect rect, Color32 tint, int z) Parameters rect IRect tint Color32 z int FillFromSheet(string) public override bool FillFromSheet(string name) Parameters name string Returns bool"
  },
  "api/AngeliA.HandTool.html": {
    "href": "api/AngeliA.HandTool.html",
    "title": "Class HandTool | AngeliA",
    "summary": "Class HandTool Namespace AngeliA Assembly AngeliA Framework.dll [Entity.MapEditorGroup(\"ItemHandTool\", 0)] public abstract class HandTool : Equipment, IMapItem Inheritance object Item Equipment HandTool Implements IMapItem Derived BlockBuilder PickTool Weapon Inherited Members Equipment.MaxStackCount Item.AllowDuplicateUpdate Item.EmbedIntoLevel Item.TypeID Item.BeforeItemUpdate_FromInventory(Character, int, int) Item.OnItemUpdate_FromInventory(Character, int, int) Item.OnPoseAnimationUpdate_FromInventory(PoseCharacterRenderer, int, int) Item.OnTakeDamage_FromInventory(Character, int, int, ref Damage) Item.OnCharacterAttack_FromInventory(Character, Bullet, int, int) Item.BeforeItemUpdate_FromEquipment(Character) Item.OnItemUpdate_FromEquipment(Character) Item.BeforePoseAnimationUpdate_FromEquipment(PoseCharacterRenderer) Item.OnPoseAnimationUpdate_FromEquipment(PoseCharacterRenderer) Item.OnTakeDamage_FromEquipment(Character, ref Damage) Item.OnCharacterAttack_FromEquipment(Character, Bullet) Item.TryRepairEquipment(Character) Item.OnItemUpdate_FromItemHolder(ItemHolder, int) Item.OnCollect(Character) Item.CanUse(Character) Item.Use(Character, int, int, out bool) Item.ItemConditionCheck(Character) Item.DrawItem(Entity, IRect, Color32, int) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Constructors HandTool() public HandTool() HandTool(bool) public HandTool(bool loadArtwork) Parameters loadArtwork bool Properties AvailableInAir public virtual bool AvailableInAir { get; } Property Value bool AvailableInWater public virtual bool AvailableInWater { get; } Property Value bool AvailableWhenClimbing public virtual bool AvailableWhenClimbing { get; } Property Value bool AvailableWhenDashing public virtual bool AvailableWhenDashing { get; } Property Value bool AvailableWhenFlying public virtual bool AvailableWhenFlying { get; } Property Value bool AvailableWhenGrabbing public virtual bool AvailableWhenGrabbing { get; } Property Value bool AvailableWhenPounding public virtual bool AvailableWhenPounding { get; } Property Value bool AvailableWhenRolling public virtual bool AvailableWhenRolling { get; } Property Value bool AvailableWhenRunning public virtual bool AvailableWhenRunning { get; } Property Value bool AvailableWhenRushing public virtual bool AvailableWhenRushing { get; } Property Value bool AvailableWhenSliding public virtual bool AvailableWhenSliding { get; } Property Value bool AvailableWhenSquatting public virtual bool AvailableWhenSquatting { get; } Property Value bool AvailableWhenWalking public virtual bool AvailableWhenWalking { get; } Property Value bool CancelUseWhenRelease public virtual bool CancelUseWhenRelease { get; } Property Value bool ChargeDuration public virtual int ChargeDuration { get; } Property Value int Cooldown public virtual int Cooldown { get; } Property Value int DefaultMovementSpeedRateOnUse public virtual int? DefaultMovementSpeedRateOnUse { get; } Property Value int? Duration public virtual int Duration { get; } Property Value int EquipmentType public override sealed EquipmentType EquipmentType { get; } Property Value EquipmentType HoldPunish public virtual int HoldPunish { get; } Property Value int IgnoreGrabTwist public virtual bool IgnoreGrabTwist { get; } Property Value bool LockFacingOnUse public virtual bool LockFacingOnUse { get; } Property Value bool PerformDelayFrame public int PerformDelayFrame { get; } Property Value int PerformDelayRate public virtual int PerformDelayRate { get; } Property Value int RepeatWhenHolding public virtual bool RepeatWhenHolding { get; } Property Value bool RunningMovementSpeedRateOnUse public virtual int? RunningMovementSpeedRateOnUse { get; } Property Value int? SpriteID public int SpriteID { get; protected set; } Property Value int TypeName public string TypeName { get; init; } Property Value string UseStackAsUsage public virtual bool UseStackAsUsage { get; } Property Value bool WalkingMovementSpeedRateOnUse public virtual int? WalkingMovementSpeedRateOnUse { get; } Property Value int? Methods AllowingUse(Character) public virtual bool AllowingUse(Character character) Parameters character Character Returns bool GetHandheldPoseAnimationID(Character) public virtual int GetHandheldPoseAnimationID(Character character) Parameters character Character Returns int GetPerformPoseAnimationID(Character) public virtual int GetPerformPoseAnimationID(Character character) Parameters character Character Returns int LoadFromSheet() public void LoadFromSheet() OnToolPerform(Character) public virtual void OnToolPerform(Character user) Parameters user Character OnToolSpriteRendered(PoseCharacterRenderer, int, int, int, int, int, int, AngeSprite, int) public virtual Cell OnToolSpriteRendered(PoseCharacterRenderer renderer, int x, int y, int width, int height, int grabRotation, int grabScale, AngeSprite sprite, int z) Parameters renderer PoseCharacterRenderer x int y int width int height int grabRotation int grabScale int sprite AngeSprite z int Returns Cell"
  },
  "api/AngeliA.HandheldPoseAnimation.html": {
    "href": "api/AngeliA.HandheldPoseAnimation.html",
    "title": "Class HandheldPoseAnimation | AngeliA",
    "summary": "Class HandheldPoseAnimation Namespace AngeliA Assembly AngeliA Framework.dll public abstract class HandheldPoseAnimation : PoseAnimation Inheritance object PoseAnimation HandheldPoseAnimation Derived PoseHandheld_Bow PoseHandheld_DoubleHanded PoseHandheld_EachHand PoseHandheld_Float PoseHandheld_MagicPole PoseHandheld_Polearm PoseHandheld_Shooting PoseHandheld_SingleHanded PoseHandheld_Throwing PoseHandheld_Block PoseHandheld_Tool Inherited Members PoseAnimation.POSE_Z_HAND PoseAnimation.A2G PoseAnimation.ValidHeadPosition PoseAnimation.DontBlendToNext PoseAnimation.DontBlendToPrev PoseAnimation.Target PoseAnimation.Rendering PoseAnimation.Movement PoseAnimation.Attackness PoseAnimation.Head PoseAnimation.Body PoseAnimation.Hip PoseAnimation.ShoulderL PoseAnimation.ShoulderR PoseAnimation.UpperArmL PoseAnimation.UpperArmR PoseAnimation.LowerArmL PoseAnimation.LowerArmR PoseAnimation.HandL PoseAnimation.HandR PoseAnimation.UpperLegL PoseAnimation.UpperLegR PoseAnimation.LowerLegL PoseAnimation.LowerLegR PoseAnimation.FootL PoseAnimation.FootR PoseAnimation.FacingRight PoseAnimation.FacingFront PoseAnimation.IsChargingAttack PoseAnimation.FacingSign PoseAnimation.FrontSign PoseAnimation.CurrentAnimationFrame PoseAnimation.AnimationType PoseAnimation.AttackLerp PoseAnimation.AttackEase PoseAnimation.OnGameInitialize() PoseAnimation.PerformAnimationFromPool(int, PoseCharacterRenderer) PoseAnimation.PerformAnimation(PoseAnimation, PoseCharacterRenderer) PoseAnimation.PerformAnimationBlendFromPool(int, int, float, PoseCharacterRenderer) PoseAnimation.PerformAnimationBlend(PoseAnimation, PoseAnimation, float, PoseCharacterRenderer) PoseAnimation.TryGetAnimationFromPool(int, out PoseAnimation) PoseAnimation.Animate(PoseCharacterRenderer) PoseAnimation.SetAsAnimating(PoseCharacterRenderer) PoseAnimation.ResetShoulderAndUpperArmPos(bool, bool) PoseAnimation.AttackHeadDown(float, int, int, int) PoseAnimation.AttackLegShake(float) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Methods DrawTool(HandTool, PoseCharacterRenderer) public abstract void DrawTool(HandTool tool, PoseCharacterRenderer renderer) Parameters tool HandTool renderer PoseCharacterRenderer"
  },
  "api/AngeliA.HeadCloth.html": {
    "href": "api/AngeliA.HeadCloth.html",
    "title": "Class HeadCloth | AngeliA",
    "summary": "Class HeadCloth Namespace AngeliA Assembly AngeliA Framework.dll public abstract class HeadCloth : Cloth Inheritance object Cloth HeadCloth Derived ModularHeadSuit Inherited Members Cloth.ClothSystemReady Cloth.ClothID Cloth.ClothName Cloth.SheetIndex Cloth.Pool Cloth.DefaultPool Cloth.HasCloth(int) Cloth.TryGetCloth(int, out Cloth) Cloth.GetDefaultClothID(int, ClothType) Cloth.ForAllCloth() Cloth.AttachClothOn(BodyPart, AngeSprite, int, int, int, int, int, int, int, int, bool) Cloth.CoverClothOn(BodyPart, AngeSprite) Cloth.CoverClothOn(BodyPart, AngeSprite, int) Cloth.CoverClothOn(BodyPart, AngeSprite, int, Color32, bool) Cloth.GetDisplayName(out int) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Properties ClothType public override sealed ClothType ClothType { get; } Property Value ClothType SpriteLoaded public override bool SpriteLoaded { get; } Property Value bool Methods DrawCloth(PoseCharacterRenderer) public override void DrawCloth(PoseCharacterRenderer renderer) Parameters renderer PoseCharacterRenderer DrawClothForHead(PoseCharacterRenderer, OrientedSprite) public static void DrawClothForHead(PoseCharacterRenderer renderer, OrientedSprite clothSprite) Parameters renderer PoseCharacterRenderer clothSprite OrientedSprite DrawClothFromPool(PoseCharacterRenderer) public static void DrawClothFromPool(PoseCharacterRenderer renderer) Parameters renderer PoseCharacterRenderer DrawClothGizmos(IRect, Color32, int) public override void DrawClothGizmos(IRect rect, Color32 tint, int z) Parameters rect IRect tint Color32 z int FillFromSheet(string) public override bool FillFromSheet(string name) Parameters name string Returns bool"
  },
  "api/AngeliA.HipCloth.HipClothType.html": {
    "href": "api/AngeliA.HipCloth.HipClothType.html",
    "title": "Enum HipCloth.HipClothType | AngeliA",
    "summary": "Enum HipCloth.HipClothType Namespace AngeliA Assembly AngeliA Framework.dll public enum HipCloth.HipClothType Extension Methods Extension.Next<E>(E) Extension.Prev<E>(E) Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Fields None = 0 Pants = 1 Skirt = 2"
  },
  "api/AngeliA.HipCloth.html": {
    "href": "api/AngeliA.HipCloth.html",
    "title": "Class HipCloth | AngeliA",
    "summary": "Class HipCloth Namespace AngeliA Assembly AngeliA Framework.dll public abstract class HipCloth : Cloth Inheritance object Cloth HipCloth Derived ModularHipSuit Inherited Members Cloth.ClothSystemReady Cloth.ClothID Cloth.ClothName Cloth.SheetIndex Cloth.Pool Cloth.DefaultPool Cloth.HasCloth(int) Cloth.TryGetCloth(int, out Cloth) Cloth.GetDefaultClothID(int, ClothType) Cloth.ForAllCloth() Cloth.AttachClothOn(BodyPart, AngeSprite, int, int, int, int, int, int, int, int, bool) Cloth.CoverClothOn(BodyPart, AngeSprite) Cloth.CoverClothOn(BodyPart, AngeSprite, int) Cloth.CoverClothOn(BodyPart, AngeSprite, int, Color32, bool) Cloth.GetDisplayName(out int) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Properties ClothType public override sealed ClothType ClothType { get; } Property Value ClothType CoverLegs protected virtual bool CoverLegs { get; } Property Value bool SpriteLoaded public override bool SpriteLoaded { get; } Property Value bool Methods DrawCloth(PoseCharacterRenderer) public override void DrawCloth(PoseCharacterRenderer rendering) Parameters rendering PoseCharacterRenderer DrawClothAsPants(PoseCharacterRenderer, OrientedSprite, int) public static void DrawClothAsPants(PoseCharacterRenderer rendering, OrientedSprite clothSprite, int localZ = 1) Parameters rendering PoseCharacterRenderer clothSprite OrientedSprite localZ int DrawClothAsSkirt(PoseCharacterRenderer, OrientedSprite, int, int) public static void DrawClothAsSkirt(PoseCharacterRenderer rendering, OrientedSprite clothSprite, int localZ = 6, int motionAmount = 1000) Parameters rendering PoseCharacterRenderer clothSprite OrientedSprite localZ int motionAmount int DrawClothForLowerLeg(PoseCharacterRenderer, OrientedSprite, OrientedSprite, int) public static void DrawClothForLowerLeg(PoseCharacterRenderer rendering, OrientedSprite spriteLeft, OrientedSprite spriteRight, int localZ = 1) Parameters rendering PoseCharacterRenderer spriteLeft OrientedSprite spriteRight OrientedSprite localZ int DrawClothForUpperLeg(PoseCharacterRenderer, OrientedSprite, OrientedSprite, int) public static void DrawClothForUpperLeg(PoseCharacterRenderer rendering, OrientedSprite spriteLeft, OrientedSprite spriteRight, int localZ = 1) Parameters rendering PoseCharacterRenderer spriteLeft OrientedSprite spriteRight OrientedSprite localZ int DrawClothFromPool(PoseCharacterRenderer) public static void DrawClothFromPool(PoseCharacterRenderer rendering) Parameters rendering PoseCharacterRenderer DrawClothGizmos(IRect, Color32, int) public override void DrawClothGizmos(IRect rect, Color32 tint, int z) Parameters rect IRect tint Color32 z int DrawDoubleClothTailsOnHip(PoseCharacterRenderer, OrientedSprite, bool) public static void DrawDoubleClothTailsOnHip(PoseCharacterRenderer rendering, OrientedSprite clothSprite, bool drawOnAllPose = false) Parameters rendering PoseCharacterRenderer clothSprite OrientedSprite drawOnAllPose bool DrawSingleClothTail(PoseCharacterRenderer, AngeSprite, int, int, int, int, int, int, int) public static void DrawSingleClothTail(PoseCharacterRenderer rendering, AngeSprite sprite, int globalX, int globalY, int z, int rotation, int scaleX = 1000, int scaleY = 1000, int motionAmount = 1000) Parameters rendering PoseCharacterRenderer sprite AngeSprite globalX int globalY int z int rotation int scaleX int scaleY int motionAmount int FillFromSheet(string) public override bool FillFromSheet(string name) Parameters name string Returns bool"
  },
  "api/AngeliA.Horn.html": {
    "href": "api/AngeliA.Horn.html",
    "title": "Class Horn | AngeliA",
    "summary": "Class Horn Namespace AngeliA Assembly AngeliA Framework.dll public abstract class Horn : BodyGadget Inheritance object BodyGadget Horn Derived ModularHorn Inherited Members BodyGadget.BodyGadgetSystemReady BodyGadget.SheetIndex BodyGadget.GadgetID BodyGadget.GadgetName BodyGadget.ForAllGadget() BodyGadget.GetDefaultGadgetID(int, BodyGadgetType) BodyGadget.TryGetGadget(int, out BodyGadget) BodyGadget.GetDisplayName(string, out int) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Properties AnchorOnFace protected virtual bool AnchorOnFace { get; } Property Value bool GadgetType public override sealed BodyGadgetType GadgetType { get; } Property Value BodyGadgetType SpriteHornLeft public OrientedSprite SpriteHornLeft { get; } Property Value OrientedSprite SpriteHornRight public OrientedSprite SpriteHornRight { get; } Property Value OrientedSprite SpriteLoaded public override bool SpriteLoaded { get; } Property Value bool Methods DrawGadget(PoseCharacterRenderer) public override void DrawGadget(PoseCharacterRenderer renderer) Parameters renderer PoseCharacterRenderer DrawGadgetFromPool(PoseCharacterRenderer) public static void DrawGadgetFromPool(PoseCharacterRenderer renderer) Parameters renderer PoseCharacterRenderer DrawGadgetGizmos(IRect, Color32, int) public override void DrawGadgetGizmos(IRect rect, Color32 tint, int z) Parameters rect IRect tint Color32 z int DrawSpriteAsHorn(PoseCharacterRenderer, OrientedSprite, OrientedSprite, bool, bool, bool) public static void DrawSpriteAsHorn(PoseCharacterRenderer renderer, OrientedSprite spriteLeft, OrientedSprite spriteRight, bool frontOfHeadL = true, bool frontOfHeadR = true, bool onFace = false) Parameters renderer PoseCharacterRenderer spriteLeft OrientedSprite spriteRight OrientedSprite frontOfHeadL bool frontOfHeadR bool onFace bool FillFromSheet(string) public override bool FillFromSheet(string name) Parameters name string Returns bool FrontOfHeadL(PoseCharacterRenderer) protected virtual bool FrontOfHeadL(PoseCharacterRenderer renderer) Parameters renderer PoseCharacterRenderer Returns bool FrontOfHeadR(PoseCharacterRenderer) protected virtual bool FrontOfHeadR(PoseCharacterRenderer renderer) Parameters renderer PoseCharacterRenderer Returns bool"
  },
  "api/AngeliA.Hotkey.html": {
    "href": "api/AngeliA.Hotkey.html",
    "title": "Struct Hotkey | AngeliA",
    "summary": "Struct Hotkey Namespace AngeliA Assembly AngeliA Framework.dll public readonly struct Hotkey Inherited Members object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Constructors Hotkey(KeyboardKey, bool, bool, bool) public Hotkey(KeyboardKey key, bool ctrl = false, bool shift = false, bool alt = false) Parameters key KeyboardKey ctrl bool shift bool alt bool Hotkey(string) public Hotkey(string data) Parameters data string Fields Alt public readonly bool Alt Field Value bool Ctrl public readonly bool Ctrl Field Value bool Key public readonly KeyboardKey Key Field Value KeyboardKey Shift public readonly bool Shift Field Value bool Methods Down() public bool Down() Returns bool DownGUI() public bool DownGUI() Returns bool Equals(object) Indicates whether this instance and a specified object are equal. public override bool Equals(object obj) Parameters obj object The object to compare with the current instance. Returns bool true if obj and this instance are the same type and represent the same value; otherwise, false. GetHashCode() Returns the hash code for this instance. public override int GetHashCode() Returns int A 32-bit signed integer that is the hash code for this instance. GetStringData() public string GetStringData() Returns string Holding() public bool Holding() Returns bool ToString() Returns the fully qualified type name of this instance. public override string ToString() Returns string The fully qualified type name."
  },
  "api/AngeliA.IActionTarget.html": {
    "href": "api/AngeliA.IActionTarget.html",
    "title": "Interface IActionTarget | AngeliA",
    "summary": "Interface IActionTarget Namespace AngeliA Assembly AngeliA Framework.dll public interface IActionTarget Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Properties AllowInvokeOnSquat bool AllowInvokeOnSquat { get; } Property Value bool AllowInvokeOnStand bool AllowInvokeOnStand { get; } Property Value bool InvokeOnTouch bool InvokeOnTouch { get; } Property Value bool IsHighlighted bool IsHighlighted { get; } Property Value bool LockInput bool LockInput { get; } Property Value bool Methods AllowInvoke() bool AllowInvoke() Returns bool DrawActionTarget(IActionTarget, AngeSprite, IRect, float, float, bool, bool) public static void DrawActionTarget(IActionTarget target, AngeSprite sprite, IRect rect, float pivotX = 0.5, float pivotY = 0, bool blinkHorizontal = true, bool blinkVertical = true) Parameters target IActionTarget sprite AngeSprite rect IRect pivotX float pivotY float blinkHorizontal bool blinkVertical bool Invoke() bool Invoke() Returns bool MakeCellAsActionTarget(IActionTarget, Cell, float, float, bool, bool) public static void MakeCellAsActionTarget(IActionTarget target, Cell cell, float pivotX = 0.5, float pivotY = 0, bool blinkHorizontal = true, bool blinkVertical = true) Parameters target IActionTarget cell Cell pivotX float pivotY float blinkHorizontal bool blinkVertical bool"
  },
  "api/AngeliA.IBlockEntity.html": {
    "href": "api/AngeliA.IBlockEntity.html",
    "title": "Interface IBlockEntity | AngeliA",
    "summary": "Interface IBlockEntity Namespace AngeliA Assembly AngeliA Framework.dll public interface IBlockEntity Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Properties AllowBeingEmbedAsElement bool AllowBeingEmbedAsElement { get; } Property Value bool EmbedEntityAsElement bool EmbedEntityAsElement { get; } Property Value bool MaxStackCount int MaxStackCount { get; } Property Value int Methods IsIgnoreEmbedAsElement(int) public static bool IsIgnoreEmbedAsElement(int blockEntityID) Parameters blockEntityID int Returns bool OnEntityPicked() void OnEntityPicked() OnEntityPut() void OnEntityPut() OnEntityRefresh() void OnEntityRefresh() RefreshBlockEntitiesNearby(Int2, Entity) public static void RefreshBlockEntitiesNearby(Int2 centerUnitPos, Entity ignore = null) Parameters centerUnitPos Int2 ignore Entity"
  },
  "api/AngeliA.IBlockSquad.html": {
    "href": "api/AngeliA.IBlockSquad.html",
    "title": "Interface IBlockSquad | AngeliA",
    "summary": "Interface IBlockSquad Namespace AngeliA Assembly AngeliA Framework.dll public interface IBlockSquad Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Methods FindBlock(int, int, int, int, Direction4, BlockType, out int, out int, int) bool FindBlock(int id, int unitX, int unitY, int unitZ, Direction4 direction, BlockType type, out int resultX, out int resultY, int maxDistance = 128) Parameters id int unitX int unitY int unitZ int direction Direction4 type BlockType resultX int resultY int maxDistance int Returns bool GetAllBlocksAt(int, int, int) (int level, int bg, int entity, int element) GetAllBlocksAt(int unitX, int unitY, int z) Parameters unitX int unitY int z int Returns (int level, int bg, int entity, int element) GetBlockAt(int, int, int, BlockType) int GetBlockAt(int unitX, int unitY, int z, BlockType type) Parameters unitX int unitY int z int type BlockType Returns int SetBlockAt(int, int, int, BlockType, int) void SetBlockAt(int unitX, int unitY, int z, BlockType type, int newID) Parameters unitX int unitY int z int type BlockType newID int WorldExists(Int3) bool WorldExists(Int3 worldPos) Parameters worldPos Int3 Returns bool"
  },
  "api/AngeliA.IBumpable.html": {
    "href": "api/AngeliA.IBumpable.html",
    "title": "Interface IBumpable | AngeliA",
    "summary": "Interface IBumpable Namespace AngeliA Assembly AngeliA Framework.dll public interface IBumpable Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Properties BumpCooldown int BumpCooldown { get; } Property Value int BumpTransferPower int BumpTransferPower { get; } Property Value int FromAbove bool FromAbove { get; } Property Value bool FromBelow bool FromBelow { get; } Property Value bool FromLeft bool FromLeft { get; } Property Value bool FromRight bool FromRight { get; } Property Value bool LastBumpFrom Direction4 LastBumpFrom { get; set; } Property Value Direction4 LastBumpedFrame int LastBumpedFrame { get; set; } Property Value int TransferBumpFromOther bool TransferBumpFromOther { get; } Property Value bool TransferBumpToOther bool TransferBumpToOther { get; } Property Value bool TransferWithAttack bool TransferWithAttack { get; } Property Value bool Methods AllowBump(Entity, Direction4) bool AllowBump(Entity rig, Direction4 from) Parameters rig Entity from Direction4 Returns bool AnimateForBump(IBumpable, Cell, int, int, int) public static void AnimateForBump(IBumpable bumpable, Cell cell, int duration = 12, int distance = 32, int size = 32) Parameters bumpable IBumpable cell Cell duration int distance int size int BumpAllOverlap(Entity, Direction4, bool, Damage, int) public static void BumpAllOverlap(Entity sender, Direction4 directionTo, bool forceBump = false, Damage damageToBumpedObject = default, int collisionMask = 3) Parameters sender Entity directionTo Direction4 forceBump bool damageToBumpedObject Damage collisionMask int GetBumpTransferDamage() Damage GetBumpTransferDamage() Returns Damage IsValidBumpDirection(IBumpable, Direction4) public static bool IsValidBumpDirection(IBumpable bump, Direction4 from) Parameters bump IBumpable from Direction4 Returns bool OnBumped(Entity, Damage) void OnBumped(Entity rig, Damage damage) Parameters rig Entity damage Damage"
  },
  "api/AngeliA.ICarrier.html": {
    "href": "api/AngeliA.ICarrier.html",
    "title": "Interface ICarrier | AngeliA",
    "summary": "Interface ICarrier Namespace AngeliA Assembly AngeliA Framework.dll public interface ICarrier Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Properties AllowBeingCarry bool AllowBeingCarry { get; } Property Value bool CarryHorizontalFrame int CarryHorizontalFrame { get; set; } Property Value int CarryLeft int CarryLeft { get; set; } Property Value int CarryRight int CarryRight { get; set; } Property Value int Methods CarryTargetsOnTopHorizontally(Entity, int, OperationMode) public static void CarryTargetsOnTopHorizontally(Entity self, int _deltaX, OperationMode colMode = OperationMode.ColliderOnly) Parameters self Entity _deltaX int colMode OperationMode CarryTargetsOnTopVertically(Entity, int, OperationMode) public static void CarryTargetsOnTopVertically(Entity self, int _deltaY, OperationMode colMode = OperationMode.ColliderOnly) Parameters self Entity _deltaY int colMode OperationMode OnBeingCarry(int, int) void OnBeingCarry(int deltaX, int deltaY) Parameters deltaX int deltaY int PerformCarry(int, int) void PerformCarry(int x, int y) Parameters x int y int"
  },
  "api/AngeliA.ICircuitOperator.html": {
    "href": "api/AngeliA.ICircuitOperator.html",
    "title": "Interface ICircuitOperator | AngeliA",
    "summary": "Interface ICircuitOperator Namespace AngeliA Assembly AngeliA Framework.dll public interface ICircuitOperator Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Methods IsOperator(int) public static bool IsOperator(int typeID) Parameters typeID int Returns bool OnTriggeredByCircuit() void OnTriggeredByCircuit()"
  },
  "api/AngeliA.ICombustible.html": {
    "href": "api/AngeliA.ICombustible.html",
    "title": "Interface ICombustible | AngeliA",
    "summary": "Interface ICombustible Namespace AngeliA Assembly AngeliA Framework.dll public interface ICombustible Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Properties BurnStartFrame int BurnStartFrame { get; set; } Property Value int BurnedDuration int BurnedDuration { get; } Property Value int IsBurning bool IsBurning { get; } Property Value bool Methods OnBurned() void OnBurned()"
  },
  "api/AngeliA.IDamageReceiver.html": {
    "href": "api/AngeliA.IDamageReceiver.html",
    "title": "Interface IDamageReceiver | AngeliA",
    "summary": "Interface IDamageReceiver Namespace AngeliA Assembly AngeliA Framework.dll public interface IDamageReceiver Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Properties IgnoreDamageType Tag IgnoreDamageType { get; } Property Value Tag IsInvincible bool IsInvincible { get; } Property Value bool TakeDamageFromLevel bool TakeDamageFromLevel { get; } Property Value bool Team int Team { get; } Property Value int Methods DamageAllOverlap(IRect, Damage, int, Entity, OperationMode, bool) public static void DamageAllOverlap(IRect rect, Damage damage, int physicsMask = 10, Entity host = null, OperationMode mode = OperationMode.ColliderAndTrigger, bool allowMultipleDamage = true) Parameters rect IRect damage Damage physicsMask int host Entity mode OperationMode allowMultipleDamage bool OnDamaged(Damage) void OnDamaged(Damage damage) Parameters damage Damage TakeDamage(Damage) bool TakeDamage(Damage damage) Parameters damage Damage Returns bool ValidDamage(Damage) bool ValidDamage(Damage damage) Parameters damage Damage Returns bool"
  },
  "api/AngeliA.IFire.html": {
    "href": "api/AngeliA.IFire.html",
    "title": "Interface IFire | AngeliA",
    "summary": "Interface IFire Namespace AngeliA Assembly AngeliA Framework.dll public interface IFire Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Methods Putout(bool) void Putout(bool manually) Parameters manually bool PutoutFire(IRect) public static void PutoutFire(IRect rect) Parameters rect IRect Setup(ICombustible) void Setup(ICombustible com) Parameters com ICombustible SpreadFire(int, IRect, Entity) public static void SpreadFire(int fireID, IRect rect, Entity ignore = null) Parameters fireID int rect IRect ignore Entity"
  },
  "api/AngeliA.IItemTransfer.html": {
    "href": "api/AngeliA.IItemTransfer.html",
    "title": "Interface IItemTransfer | AngeliA",
    "summary": "Interface IItemTransfer Namespace AngeliA Assembly AngeliA Framework.dll public interface IItemTransfer Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Properties Direction Direction4 Direction { get; } Property Value Direction4"
  },
  "api/AngeliA.IJsonSerializationCallback.html": {
    "href": "api/AngeliA.IJsonSerializationCallback.html",
    "title": "Interface IJsonSerializationCallback | AngeliA",
    "summary": "Interface IJsonSerializationCallback Namespace AngeliA Assembly AngeliA Framework.dll public interface IJsonSerializationCallback Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Methods OnAfterLoadedFromDisk() void OnAfterLoadedFromDisk() OnBeforeSaveToDisk() void OnBeforeSaveToDisk()"
  },
  "api/AngeliA.IMapItem.html": {
    "href": "api/AngeliA.IMapItem.html",
    "title": "Interface IMapItem | AngeliA",
    "summary": "Interface IMapItem Namespace AngeliA Assembly AngeliA Framework.dll public interface IMapItem Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.IPlayable.html": {
    "href": "api/AngeliA.IPlayable.html",
    "title": "Interface IPlayable | AngeliA",
    "summary": "Interface IPlayable Namespace AngeliA Assembly AngeliA Framework.dll public interface IPlayable Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.IProgressiveItem.html": {
    "href": "api/AngeliA.IProgressiveItem.html",
    "title": "Interface IProgressiveItem | AngeliA",
    "summary": "Interface IProgressiveItem Namespace AngeliA Assembly AngeliA Framework.dll public interface IProgressiveItem Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Properties NextItemID int NextItemID { get; set; } Property Value int PrevItemID int PrevItemID { get; set; } Property Value int Progress int Progress { get; set; } Property Value int TotalProgress int TotalProgress { get; set; } Property Value int"
  },
  "api/AngeliA.IRect.html": {
    "href": "api/AngeliA.IRect.html",
    "title": "Struct IRect | AngeliA",
    "summary": "Struct IRect Namespace AngeliA Assembly AngeliA Framework.dll [Serializable] public struct IRect : IEquatable<IRect>, IFormattable Implements IEquatable<IRect> IFormattable Inherited Members object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Extension Methods Extension.BottomHalf(IRect) Extension.BottomLeft(IRect) Extension.BottomMid(IRect) Extension.BottomRight(IRect) Extension.CenterInt(IRect) Extension.CenterX(IRect) Extension.CenterY(IRect) Extension.Clamp(IRect, IRect) Extension.ClampPositionInside(ref IRect, IRect) Extension.CompleteInside(IRect, IRect) Extension.Contains(IRect, int, int) Extension.CornerInside(IRect, Alignment, int) Extension.CornerInside(IRect, Alignment, int, int) Extension.CornerOutside(IRect, Alignment, int) Extension.CornerOutside(IRect, Alignment, int, int) Extension.Dodge(IRect, IRect, out IRect?, out IRect?, out IRect?, out IRect?) Extension.EdgeExact(IRect, Direction4, int) Extension.EdgeInside(IRect, Direction4, int) Extension.EdgeInsideDown(IRect, int) Extension.EdgeInsideLeft(IRect, int) Extension.EdgeInsideRight(IRect, int) Extension.EdgeInsideSquareDown(IRect) Extension.EdgeInsideSquareLeft(IRect) Extension.EdgeInsideSquareRight(IRect) Extension.EdgeInsideSquareUp(IRect) Extension.EdgeInsideUp(IRect, int) Extension.EdgeOutside(IRect, Direction4, int) Extension.EdgeOutsideDown(IRect, int) Extension.EdgeOutsideLeft(IRect, int) Extension.EdgeOutsideRight(IRect, int) Extension.EdgeOutsideUp(IRect, int) Extension.Envelope(IRect, int, int) Extension.Expand(IRect, Int4) Extension.Expand(IRect, int) Extension.Expand(IRect, int, int, int, int) Extension.ExpandHorizontal(IRect, int) Extension.ExpandVertical(IRect, int) Extension.Fit(IRect, AngeSprite, int, int) Extension.Fit(IRect, int, int, int, int) Extension.FlipHorizontal(ref IRect) Extension.FlipNegative(ref IRect) Extension.FlipVertical(ref IRect) Extension.ForceSquare(IRect, bool, bool, bool) Extension.GetFlipHorizontal(IRect) Extension.GetFlipNegative(IRect) Extension.GetFlipVertical(IRect) Extension.HorizontalMidHalf(IRect) Extension.Intersection(IRect, IRect) Extension.IsNotSame(IRect, IRect) Extension.IsSame(IRect, IRect) Extension.LeftHalf(IRect) Extension.LerpTo(IRect, IRect, int) Extension.LerpTo(IRect, IRect, float) Extension.MidLeft(IRect) Extension.MidRight(IRect) Extension.PartHorizontal(IRect, int, int) Extension.PartVertical(IRect, int, int) Extension.ResizeFrom(IRect, int, int, int, int) Extension.RightHalf(IRect) Extension.ScaleFrom(IRect, int, int, int) Extension.ScaleFrom(IRect, int, int, int, int) Extension.ScaleFrom(IRect, float, int, int) Extension.ScaleFrom(IRect, float, float, int, int) Extension.SetMinMax(ref IRect, int, int, int, int) Extension.Shift(IRect, Int2) Extension.Shift(IRect, int, int) Extension.Shrink(IRect, Int4) Extension.Shrink(IRect, int) Extension.Shrink(IRect, int, int, int, int) Extension.ShrinkDown(IRect, int) Extension.ShrinkLeft(IRect, int) Extension.ShrinkRight(IRect, int) Extension.ShrinkUp(IRect, int) Extension.SlideDown(ref IRect, int) Extension.SlideLeft(ref IRect, int) Extension.SlideRight(ref IRect, int) Extension.SlideUp(ref IRect, int) Extension.ToFRect(IRect) Extension.ToGlobal(IRect) Extension.ToUnit(IRect) Extension.TopHalf(IRect) Extension.TopLeft(IRect) Extension.TopMid(IRect) Extension.TopRight(IRect) Extension.UDivide(IRect, int) Extension.VerticalMidHalf(IRect) Extension.WithNewHeight(IRect, int) Extension.WithNewWidth(IRect, int) FrameworkUtil.MouseInside(IRect) Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Constructors IRect(IRect) public IRect(IRect source) Parameters source IRect IRect(Int2, Int2) public IRect(Int2 position, Int2 size) Parameters position Int2 size Int2 IRect(int, int, int, int) public IRect(int xMin, int yMin, int width, int height) Parameters xMin int yMin int width int height int Properties center public readonly Float2 center { get; } Property Value Float2 height public int height { readonly get; set; } Property Value int max public Int2 max { readonly get; set; } Property Value Int2 min public Int2 min { readonly get; set; } Property Value Int2 position public Int2 position { readonly get; set; } Property Value Int2 size public Int2 size { readonly get; set; } Property Value Int2 width public int width { readonly get; set; } Property Value int x public int x { readonly get; set; } Property Value int xMax public int xMax { readonly get; set; } Property Value int xMin public int xMin { readonly get; set; } Property Value int y public int y { readonly get; set; } Property Value int yMax public int yMax { readonly get; set; } Property Value int yMin public int yMin { readonly get; set; } Property Value int zero public static IRect zero { get; } Property Value IRect Methods Contains(Int2) public readonly bool Contains(Int2 position) Parameters position Int2 Returns bool Equals(IRect) Indicates whether the current object is equal to another object of the same type. public readonly bool Equals(IRect other) Parameters other IRect An object to compare with this object. Returns bool true if the current object is equal to the other parameter; otherwise, false. Equals(object) Indicates whether this instance and a specified object are equal. public override readonly bool Equals(object other) Parameters other object Returns bool true if obj and this instance are the same type and represent the same value; otherwise, false. GetHashCode() Returns the hash code for this instance. public override readonly int GetHashCode() Returns int A 32-bit signed integer that is the hash code for this instance. MinMaxRect(Int2, Int2) public static IRect MinMaxRect(Int2 min, Int2 max) Parameters min Int2 max Int2 Returns IRect MinMaxRect(int, int, int, int) public static IRect MinMaxRect(int minX, int minY, int maxX, int maxY) Parameters minX int minY int maxX int maxY int Returns IRect Overlaps(IRect) public readonly bool Overlaps(IRect other) Parameters other IRect Returns bool Point(Int2) public static IRect Point(Int2 pos) Parameters pos Int2 Returns IRect Point(int, int) public static IRect Point(int x, int y) Parameters x int y int Returns IRect SetMinMax(Int2, Int2) public void SetMinMax(Int2 minPosition, Int2 maxPosition) Parameters minPosition Int2 maxPosition Int2 ToString() Returns the fully qualified type name of this instance. public override readonly string ToString() Returns string The fully qualified type name. ToString(string) public readonly string ToString(string format) Parameters format string Returns string ToString(string, IFormatProvider) Formats the value of the current instance using the specified format. public readonly string ToString(string format, IFormatProvider formatProvider) Parameters format string The format to use. -or- A null reference (Nothing in Visual Basic) to use the default format defined for the type of the IFormattable implementation. formatProvider IFormatProvider The provider to use to format the value. -or- A null reference (Nothing in Visual Basic) to obtain the numeric format information from the current locale setting of the operating system. Returns string The value of the current instance in the specified format. Operators operator ==(IRect, IRect) public static bool operator ==(IRect lhs, IRect rhs) Parameters lhs IRect rhs IRect Returns bool operator !=(IRect, IRect) public static bool operator !=(IRect lhs, IRect rhs) Parameters lhs IRect rhs IRect Returns bool"
  },
  "api/AngeliA.IRouteWalker.html": {
    "href": "api/AngeliA.IRouteWalker.html",
    "title": "Interface IRouteWalker | AngeliA",
    "summary": "Interface IRouteWalker Namespace AngeliA Assembly AngeliA Framework.dll public interface IRouteWalker Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Properties CurrentDirection Direction8 CurrentDirection { get; set; } Property Value Direction8 TargetPosition Int2 TargetPosition { get; set; } Property Value Int2 Methods GetNextRoutePosition(Entity, ref Direction8, ref Int2, int, int, bool, BlockType, bool, HashSet<int>) public static Int2 GetNextRoutePosition(Entity entity, ref Direction8 currentDirection, ref Int2 targetPosition, int pathID, int speed, bool allowTurnBack = false, BlockType pathType = BlockType.Element, bool allowTilt = true, HashSet<int> pathSet = null) Parameters entity Entity currentDirection Direction8 targetPosition Int2 pathID int speed int allowTurnBack bool pathType BlockType allowTilt bool pathSet HashSet<int> Returns Int2 GetNextRoutePosition(IRouteWalker, int, int, bool, BlockType, bool, HashSet<int>) public static Int2 GetNextRoutePosition(IRouteWalker walker, int pathID, int speed, bool allowTurnBack = false, BlockType pathType = BlockType.Element, bool allowTilt = true, HashSet<int> pathSet = null) Parameters walker IRouteWalker pathID int speed int allowTurnBack bool pathType BlockType allowTilt bool pathSet HashSet<int> Returns Int2 TryGetRouteFromMap(HashSet<int>, int, int, Direction8, out Direction8, BlockType, bool) public static bool TryGetRouteFromMap(HashSet<int> pathSet, int unitX, int unitY, Direction8 currentDirection, out Direction8 result, BlockType pathType = BlockType.Element, bool allowTilt = true) Parameters pathSet HashSet<int> unitX int unitY int currentDirection Direction8 result Direction8 pathType BlockType allowTilt bool Returns bool TryGetRouteFromMap(int, int, int, Direction8, out Direction8, BlockType, bool) public static bool TryGetRouteFromMap(int pathID, int unitX, int unitY, Direction8 currentDirection, out Direction8 result, BlockType pathType = BlockType.Element, bool allowTilt = true) Parameters pathID int unitX int unitY int currentDirection Direction8 result Direction8 pathType BlockType allowTilt bool Returns bool"
  },
  "api/AngeliA.IUndoItem.html": {
    "href": "api/AngeliA.IUndoItem.html",
    "title": "Interface IUndoItem | AngeliA",
    "summary": "Interface IUndoItem Namespace AngeliA Assembly AngeliA Framework.dll public interface IUndoItem Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Properties Step int Step { get; set; } Property Value int"
  },
  "api/AngeliA.IWindowEntityUI.html": {
    "href": "api/AngeliA.IWindowEntityUI.html",
    "title": "Interface IWindowEntityUI | AngeliA",
    "summary": "Interface IWindowEntityUI Namespace AngeliA Assembly AngeliA Framework.dll public interface IWindowEntityUI Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Properties BackgroundRect IRect BackgroundRect { get; } Property Value IRect"
  },
  "api/AngeliA.IWithCharacterAttackness.html": {
    "href": "api/AngeliA.IWithCharacterAttackness.html",
    "title": "Interface IWithCharacterAttackness | AngeliA",
    "summary": "Interface IWithCharacterAttackness Namespace AngeliA Assembly AngeliA Framework.dll public interface IWithCharacterAttackness Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Properties CurrentAttackness CharacterAttackness CurrentAttackness { get; } Property Value CharacterAttackness"
  },
  "api/AngeliA.IWithCharacterBuff.html": {
    "href": "api/AngeliA.IWithCharacterBuff.html",
    "title": "Interface IWithCharacterBuff | AngeliA",
    "summary": "Interface IWithCharacterBuff Namespace AngeliA Assembly AngeliA Framework.dll public interface IWithCharacterBuff Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Properties CurrentBuff CharacterBuff CurrentBuff { get; } Property Value CharacterBuff Methods GiveBuffFromMap(IWithCharacterBuff, int, int, int, int) public static void GiveBuffFromMap(IWithCharacterBuff wBuff, int unitX = -2147483648, int unitY = -2147483648, int unitZ = -2147483648, int duration = -1) Parameters wBuff IWithCharacterBuff unitX int unitY int unitZ int duration int"
  },
  "api/AngeliA.IWithCharacterHealth.html": {
    "href": "api/AngeliA.IWithCharacterHealth.html",
    "title": "Interface IWithCharacterHealth | AngeliA",
    "summary": "Interface IWithCharacterHealth Namespace AngeliA Assembly AngeliA Framework.dll public interface IWithCharacterHealth Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Properties CurrentHealth CharacterHealth CurrentHealth { get; } Property Value CharacterHealth"
  },
  "api/AngeliA.IWithCharacterMovement.html": {
    "href": "api/AngeliA.IWithCharacterMovement.html",
    "title": "Interface IWithCharacterMovement | AngeliA",
    "summary": "Interface IWithCharacterMovement Namespace AngeliA Assembly AngeliA Framework.dll public interface IWithCharacterMovement Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Properties CurrentMovement CharacterMovement CurrentMovement { get; } Property Value CharacterMovement"
  },
  "api/AngeliA.IWithCharacterRenderer.html": {
    "href": "api/AngeliA.IWithCharacterRenderer.html",
    "title": "Interface IWithCharacterRenderer | AngeliA",
    "summary": "Interface IWithCharacterRenderer Namespace AngeliA Assembly AngeliA Framework.dll public interface IWithCharacterRenderer Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Properties CurrentRenderer CharacterRenderer CurrentRenderer { get; } Property Value CharacterRenderer"
  },
  "api/AngeliA.IgnoreArtworkPixelsAttribute.html": {
    "href": "api/AngeliA.IgnoreArtworkPixelsAttribute.html",
    "title": "Class IgnoreArtworkPixelsAttribute | AngeliA",
    "summary": "Class IgnoreArtworkPixelsAttribute Namespace AngeliA Assembly AngeliA Framework.dll Current application do not load pixel data from sheet [AttributeUsage(AttributeTargets.Assembly, AllowMultiple = true)] public class IgnoreArtworkPixelsAttribute : Attribute Inheritance object Attribute IgnoreArtworkPixelsAttribute Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.IgnoreInputScope.html": {
    "href": "api/AngeliA.IgnoreInputScope.html",
    "title": "Struct IgnoreInputScope | AngeliA",
    "summary": "Struct IgnoreInputScope Namespace AngeliA Assembly AngeliA Framework.dll public readonly struct IgnoreInputScope : IDisposable Implements IDisposable Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Constructors IgnoreInputScope(bool, bool) public IgnoreInputScope(bool ignoreKey = true, bool ignoreMouse = true) Parameters ignoreKey bool ignoreMouse bool Methods Dispose() Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources. public void Dispose()"
  },
  "api/AngeliA.Input.html": {
    "href": "api/AngeliA.Input.html",
    "title": "Class Input | AngeliA",
    "summary": "Class Input Namespace AngeliA Assembly AngeliA Framework.dll public static class Input Inheritance object Input Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties AllowGamepad public static bool AllowGamepad { get; set; } Property Value bool AnyGamekeyDown public static bool AnyGamekeyDown { get; } Property Value bool AnyGamekeyHolding public static bool AnyGamekeyHolding { get; } Property Value bool AnyGamepadButtonDown public static bool AnyGamepadButtonDown { get; } Property Value bool AnyGamepadButtonHolding public static bool AnyGamepadButtonHolding { get; } Property Value bool AnyKeyDown public static bool AnyKeyDown { get; } Property Value bool AnyKeyHolding public static bool AnyKeyHolding { get; } Property Value bool AnyKeyboardKeyDown public static bool AnyKeyboardKeyDown { get; } Property Value bool AnyKeyboardKeyHolding public static bool AnyKeyboardKeyHolding { get; } Property Value bool AnyMouseButtonDown public static bool AnyMouseButtonDown { get; } Property Value bool AnyMouseButtonHolding public static bool AnyMouseButtonHolding { get; } Property Value bool Direction public static Int2 Direction { get; } Property Value Int2 DirectionX public static Direction3 DirectionX { get; } Property Value Direction3 DirectionY public static Direction3 DirectionY { get; } Property Value Direction3 HoldingAlt public static bool HoldingAlt { get; } Property Value bool HoldingCtrl public static bool HoldingCtrl { get; } Property Value bool HoldingShift public static bool HoldingShift { get; } Property Value bool IgnoreMouseToActionFrame public static int IgnoreMouseToActionFrame { get; } Property Value int IgnoreMouseToJumpFrame public static int IgnoreMouseToJumpFrame { get; } Property Value int IgnoreRightStickToMouseWheelFrame public static int IgnoreRightStickToMouseWheelFrame { get; } Property Value int IgnoringKeyInput public static bool IgnoringKeyInput { get; } Property Value bool IgnoringMouseInput public static bool IgnoringMouseInput { get; } Property Value bool LastActionFromMouse public static bool LastActionFromMouse { get; } Property Value bool LastMouseLeftButtonDownFrame public static (int prev, int current) LastMouseLeftButtonDownFrame { get; } Property Value (int prev, int current) LastMouseMidButtonDownFrame public static (int prev, int current) LastMouseMidButtonDownFrame { get; } Property Value (int prev, int current) LastMouseRightButtonDownFrame public static (int prev, int current) LastMouseRightButtonDownFrame { get; } Property Value (int prev, int current) MidMouseToActionFrame public static int MidMouseToActionFrame { get; } Property Value int MouseGlobalPosition public static Int2 MouseGlobalPosition { get; } Property Value Int2 MouseGlobalPositionDelta public static Int2 MouseGlobalPositionDelta { get; } Property Value Int2 MouseLeftButtonDown public static bool MouseLeftButtonDown { get; } Property Value bool MouseLeftButtonHolding public static bool MouseLeftButtonHolding { get; } Property Value bool MouseLeftDownGlobalPosition public static Int2 MouseLeftDownGlobalPosition { get; } Property Value Int2 MouseMidButtonDown public static bool MouseMidButtonDown { get; } Property Value bool MouseMidButtonHolding public static bool MouseMidButtonHolding { get; } Property Value bool MouseMidDownGlobalPosition public static Int2 MouseMidDownGlobalPosition { get; } Property Value Int2 MouseMove public static bool MouseMove { get; } Property Value bool MousePositionShift public static Int2 MousePositionShift { get; } Property Value Int2 MouseRightButtonDown public static bool MouseRightButtonDown { get; } Property Value bool MouseRightButtonHolding public static bool MouseRightButtonHolding { get; } Property Value bool MouseRightDownGlobalPosition public static Int2 MouseRightDownGlobalPosition { get; } Property Value Int2 MouseScreenPosition public static Int2 MouseScreenPosition { get; } Property Value Int2 MouseScreenPositionDelta public static Int2 MouseScreenPositionDelta { get; } Property Value Int2 MouseWheelDelta public static int MouseWheelDelta { get; } Property Value int UnshiftedMouseGlobalPosition public static Int2 UnshiftedMouseGlobalPosition { get; } Property Value Int2 UsingGamepad public static bool UsingGamepad { get; } Property Value bool UsingLeftStick public static bool UsingLeftStick { get; } Property Value bool Methods CancelIgnoreKeyInput() public static void CancelIgnoreKeyInput() CancelIgnoreMouseInput() public static void CancelIgnoreMouseInput() GameKeyDown(Gamekey) public static bool GameKeyDown(Gamekey key) Parameters key Gamekey Returns bool GameKeyDownGUI(Gamekey) public static bool GameKeyDownGUI(Gamekey key) Parameters key Gamekey Returns bool GameKeyHolding(Gamekey) public static bool GameKeyHolding(Gamekey key) Parameters key Gamekey Returns bool GameKeyUp(Gamekey) public static bool GameKeyUp(Gamekey key) Parameters key Gamekey Returns bool GetDefaultGamepadMap(Gamekey) public static GamepadKey GetDefaultGamepadMap(Gamekey key) Parameters key Gamekey Returns GamepadKey GetDefaultKeyboardMap(Gamekey) public static KeyboardKey GetDefaultKeyboardMap(Gamekey key) Parameters key Gamekey Returns KeyboardKey GetGamepadMap(Gamekey) public static GamepadKey GetGamepadMap(Gamekey key) Parameters key Gamekey Returns GamepadKey GetHoldingMouseButton() public static int GetHoldingMouseButton() Returns int GetKeyboardMap(Gamekey) public static KeyboardKey GetKeyboardMap(Gamekey key) Parameters key Gamekey Returns KeyboardKey IgnoreAllInput(int) public static void IgnoreAllInput(int duration = 0) Parameters duration int IgnoreKeyInput(int) public static void IgnoreKeyInput(int duration = 0) Parameters duration int IgnoreMouseInput(int) public static void IgnoreMouseInput(int duration = 0) Parameters duration int IgnoreMouseToActionJump(bool, bool, bool, int) public static void IgnoreMouseToActionJump(bool ignoreAction = true, bool ignoreJump = true, bool useMidButtonAsAction = false, int duration = 1) Parameters ignoreAction bool ignoreJump bool useMidButtonAsAction bool duration int IgnoreRightStickToMouseWheel(int) public static void IgnoreRightStickToMouseWheel(int duration = 1) Parameters duration int KeyboardDown(KeyboardKey) public static bool KeyboardDown(KeyboardKey key) Parameters key KeyboardKey Returns bool KeyboardDownGUI(KeyboardKey) public static bool KeyboardDownGUI(KeyboardKey key) Parameters key KeyboardKey Returns bool KeyboardHolding(KeyboardKey) public static bool KeyboardHolding(KeyboardKey key) Parameters key KeyboardKey Returns bool KeyboardKeyUsed(KeyboardKey) public static bool KeyboardKeyUsed(KeyboardKey key) Parameters key KeyboardKey Returns bool KeyboardUp(KeyboardKey) public static bool KeyboardUp(KeyboardKey key) Parameters key KeyboardKey Returns bool MouseButtonHolding(int) public static bool MouseButtonHolding(int button) Parameters button int Returns bool MouseKeyUsed(int) public static bool MouseKeyUsed(int key) Parameters key int Returns bool OnGameInitialize() [OnGameInitialize(-128)] public static void OnGameInitialize() OnGameInitializeLater() [OnGameInitializeLater(0)] public static TaskResult OnGameInitializeLater() Returns TaskResult SetGamepadMap(Gamekey, GamepadKey) public static void SetGamepadMap(Gamekey gameKey, GamepadKey gamepadKey) Parameters gameKey Gamekey gamepadKey GamepadKey SetKeyboardMap(Gamekey, KeyboardKey) public static void SetKeyboardMap(Gamekey gameKey, KeyboardKey keyboardKey) Parameters gameKey Gamekey keyboardKey KeyboardKey SetMousePositionShift(int, int) public static void SetMousePositionShift(int x, int y) Parameters x int y int TryGetHoldingGamepadButton(out GamepadKey) public static bool TryGetHoldingGamepadButton(out GamepadKey button) Parameters button GamepadKey Returns bool TryGetHoldingKeyboardKey(out KeyboardKey) public static bool TryGetHoldingKeyboardKey(out KeyboardKey key) Parameters key KeyboardKey Returns bool UnuseAllMouseKey() public static void UnuseAllMouseKey() UnuseGameKey(Gamekey) public static void UnuseGameKey(Gamekey key) Parameters key Gamekey UnuseKeyboardKey(KeyboardKey) public static void UnuseKeyboardKey(KeyboardKey key) Parameters key KeyboardKey UnuseMouseKey(int) public static void UnuseMouseKey(int key) Parameters key int UseAllHoldingKeys(bool) public static void UseAllHoldingKeys(bool ignoreMouse = false) Parameters ignoreMouse bool UseAllMouseKey() public static void UseAllMouseKey() UseGameKey(Gamekey) public static void UseGameKey(Gamekey key) Parameters key Gamekey UseKeyboardKey(KeyboardKey) public static void UseKeyboardKey(KeyboardKey key) Parameters key KeyboardKey UseMouseKey(int) public static void UseMouseKey(int index) Parameters index int"
  },
  "api/AngeliA.Int2.html": {
    "href": "api/AngeliA.Int2.html",
    "title": "Struct Int2 | AngeliA",
    "summary": "Struct Int2 Namespace AngeliA Assembly AngeliA Framework.dll [Serializable] public struct Int2 : IEquatable<Int2>, IFormattable Implements IEquatable<Int2> IFormattable Inherited Members object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Extension Methods Extension.Clamp(ref Int2, IRect) Extension.Clamp(ref Int2, int, int, int, int) Extension.Clamped(Int2, IRect) Extension.Clamped(Int2, int, int, int, int) Extension.GetRotation(Int2) Extension.MoveTowards(Int2, Int2, Int2) Extension.MoveTowards(Int2, Int2, int) Extension.Shift(Int2, int, int) Extension.ShiftX(Int2, int) Extension.ShiftY(Int2, int) Extension.ToGlobal(Int2) Extension.ToUnifyGlobal(Int2) Extension.ToUnit(Int2) Extension.ToVector3Int(Int2, int) Extension.TryGetDirection8(Int2, out Direction8) Extension.UDivide(Int2, int) Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Constructors Int2(int, int) public Int2(int x, int y) Parameters x int y int Properties Area public readonly int Area { get; } Property Value int this[int] public int this[int index] { readonly get; set; } Parameters index int Property Value int down public static Int2 down { get; } Property Value Int2 left public static Int2 left { get; } Property Value Int2 magnitude public readonly float magnitude { get; } Property Value float one public static Int2 one { get; } Property Value Int2 right public static Int2 right { get; } Property Value Int2 sqrMagnitude public readonly int sqrMagnitude { get; } Property Value int up public static Int2 up { get; } Property Value Int2 x public int x { readonly get; set; } Property Value int y public int y { readonly get; set; } Property Value int zero public static Int2 zero { get; } Property Value Int2 Methods CeilToInt(Float2) public static Int2 CeilToInt(Float2 v) Parameters v Float2 Returns Int2 Clamp(IRect) public void Clamp(IRect range) Parameters range IRect Clamp(Int2, Int2) public void Clamp(Int2 min, Int2 max) Parameters min Int2 max Int2 Deconstruct(out int, out int) public readonly void Deconstruct(out int x, out int y) Parameters x int y int Distance(Int2, Int2) public static float Distance(Int2 a, Int2 b) Parameters a Int2 b Int2 Returns float Equals(Int2) Indicates whether the current object is equal to another object of the same type. public readonly bool Equals(Int2 other) Parameters other Int2 An object to compare with this object. Returns bool true if the current object is equal to the other parameter; otherwise, false. Equals(object) Indicates whether this instance and a specified object are equal. public override readonly bool Equals(object other) Parameters other object Returns bool true if obj and this instance are the same type and represent the same value; otherwise, false. FloorToInt(Float2) public static Int2 FloorToInt(Float2 v) Parameters v Float2 Returns Int2 GetHashCode() Returns the hash code for this instance. public override readonly int GetHashCode() Returns int A 32-bit signed integer that is the hash code for this instance. Max(Int2, Int2) public static Int2 Max(Int2 lhs, Int2 rhs) Parameters lhs Int2 rhs Int2 Returns Int2 Min(Int2, Int2) public static Int2 Min(Int2 lhs, Int2 rhs) Parameters lhs Int2 rhs Int2 Returns Int2 RoundToInt(Float2) public static Int2 RoundToInt(Float2 v) Parameters v Float2 Returns Int2 Scale(Int2) public void Scale(Int2 scale) Parameters scale Int2 Scale(Int2, Int2) public static Int2 Scale(Int2 a, Int2 b) Parameters a Int2 b Int2 Returns Int2 Set(int, int) public void Set(int x, int y) Parameters x int y int Shift(int, int) public readonly Int2 Shift(int x, int y) Parameters x int y int Returns Int2 ToString() Returns the fully qualified type name of this instance. public override readonly string ToString() Returns string The fully qualified type name. ToString(string) public readonly string ToString(string format) Parameters format string Returns string ToString(string, IFormatProvider) Formats the value of the current instance using the specified format. public readonly string ToString(string format, IFormatProvider formatProvider) Parameters format string The format to use. -or- A null reference (Nothing in Visual Basic) to use the default format defined for the type of the IFormattable implementation. formatProvider IFormatProvider The provider to use to format the value. -or- A null reference (Nothing in Visual Basic) to obtain the numeric format information from the current locale setting of the operating system. Returns string The value of the current instance in the specified format. Operators operator +(Int2, Int2) public static Int2 operator +(Int2 a, Int2 b) Parameters a Int2 b Int2 Returns Int2 operator /(Int2, int) public static Int2 operator /(Int2 a, int b) Parameters a Int2 b int Returns Int2 operator ==(Int2, Int2) public static bool operator ==(Int2 lhs, Int2 rhs) Parameters lhs Int2 rhs Int2 Returns bool explicit operator Int3(Int2) public static explicit operator Int3(Int2 v) Parameters v Int2 Returns Int3 implicit operator Float2(Int2) public static implicit operator Float2(Int2 v) Parameters v Int2 Returns Float2 operator !=(Int2, Int2) public static bool operator !=(Int2 lhs, Int2 rhs) Parameters lhs Int2 rhs Int2 Returns bool operator *(Int2, Int2) public static Int2 operator *(Int2 a, Int2 b) Parameters a Int2 b Int2 Returns Int2 operator *(Int2, int) public static Int2 operator *(Int2 a, int b) Parameters a Int2 b int Returns Int2 operator *(int, Int2) public static Int2 operator *(int a, Int2 b) Parameters a int b Int2 Returns Int2 operator -(Int2, Int2) public static Int2 operator -(Int2 a, Int2 b) Parameters a Int2 b Int2 Returns Int2 operator -(Int2) public static Int2 operator -(Int2 v) Parameters v Int2 Returns Int2"
  },
  "api/AngeliA.Int3.html": {
    "href": "api/AngeliA.Int3.html",
    "title": "Struct Int3 | AngeliA",
    "summary": "Struct Int3 Namespace AngeliA Assembly AngeliA Framework.dll [Serializable] public struct Int3 : IEquatable<Int3>, IFormattable Implements IEquatable<Int3> IFormattable Inherited Members object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Extension Methods Extension.ToGlobal(Int3) Extension.ToUnifyGlobal(Int3) Extension.ToUnit(Int3) Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Constructors Int3(int, int) public Int3(int x, int y) Parameters x int y int Int3(int, int, int) public Int3(int x, int y, int z) Parameters x int y int z int Properties this[int] public int this[int index] { readonly get; set; } Parameters index int Property Value int back public static Int3 back { get; } Property Value Int3 down public static Int3 down { get; } Property Value Int3 forward public static Int3 forward { get; } Property Value Int3 left public static Int3 left { get; } Property Value Int3 magnitude public readonly float magnitude { get; } Property Value float one public static Int3 one { get; } Property Value Int3 right public static Int3 right { get; } Property Value Int3 sqrMagnitude public readonly int sqrMagnitude { get; } Property Value int up public static Int3 up { get; } Property Value Int3 x public int x { readonly get; set; } Property Value int y public int y { readonly get; set; } Property Value int z public int z { readonly get; set; } Property Value int zero public static Int3 zero { get; } Property Value Int3 Methods CeilToInt(Float3) public static Int3 CeilToInt(Float3 v) Parameters v Float3 Returns Int3 Clamp(Int3, Int3) public void Clamp(Int3 min, Int3 max) Parameters min Int3 max Int3 Distance(Int3, Int3) public static float Distance(Int3 a, Int3 b) Parameters a Int3 b Int3 Returns float Equals(Int3) Indicates whether the current object is equal to another object of the same type. public readonly bool Equals(Int3 other) Parameters other Int3 An object to compare with this object. Returns bool true if the current object is equal to the other parameter; otherwise, false. Equals(object) Indicates whether this instance and a specified object are equal. public override readonly bool Equals(object other) Parameters other object Returns bool true if obj and this instance are the same type and represent the same value; otherwise, false. FloorToInt(Float3) public static Int3 FloorToInt(Float3 v) Parameters v Float3 Returns Int3 GetHashCode() Returns the hash code for this instance. public override readonly int GetHashCode() Returns int A 32-bit signed integer that is the hash code for this instance. Max(Int3, Int3) public static Int3 Max(Int3 lhs, Int3 rhs) Parameters lhs Int3 rhs Int3 Returns Int3 Min(Int3, Int3) public static Int3 Min(Int3 lhs, Int3 rhs) Parameters lhs Int3 rhs Int3 Returns Int3 RoundToInt(Float3) public static Int3 RoundToInt(Float3 v) Parameters v Float3 Returns Int3 Scale(Int3) public void Scale(Int3 scale) Parameters scale Int3 Scale(Int3, Int3) public static Int3 Scale(Int3 a, Int3 b) Parameters a Int3 b Int3 Returns Int3 Set(int, int, int) public void Set(int x, int y, int z) Parameters x int y int z int Shift(int, int, int) public readonly Int3 Shift(int x, int y, int z = 0) Parameters x int y int z int Returns Int3 ToString() Returns the fully qualified type name of this instance. public override readonly string ToString() Returns string The fully qualified type name. ToString(string) public readonly string ToString(string format) Parameters format string Returns string ToString(string, IFormatProvider) Formats the value of the current instance using the specified format. public readonly string ToString(string format, IFormatProvider formatProvider) Parameters format string The format to use. -or- A null reference (Nothing in Visual Basic) to use the default format defined for the type of the IFormattable implementation. formatProvider IFormatProvider The provider to use to format the value. -or- A null reference (Nothing in Visual Basic) to obtain the numeric format information from the current locale setting of the operating system. Returns string The value of the current instance in the specified format. Operators operator +(Int3, Int3) public static Int3 operator +(Int3 a, Int3 b) Parameters a Int3 b Int3 Returns Int3 operator /(Int3, int) public static Int3 operator /(Int3 a, int b) Parameters a Int3 b int Returns Int3 operator ==(Int3, Int3) public static bool operator ==(Int3 lhs, Int3 rhs) Parameters lhs Int3 rhs Int3 Returns bool explicit operator Int2(Int3) public static explicit operator Int2(Int3 v) Parameters v Int3 Returns Int2 implicit operator Float3(Int3) public static implicit operator Float3(Int3 v) Parameters v Int3 Returns Float3 operator !=(Int3, Int3) public static bool operator !=(Int3 lhs, Int3 rhs) Parameters lhs Int3 rhs Int3 Returns bool operator *(Int3, Int3) public static Int3 operator *(Int3 a, Int3 b) Parameters a Int3 b Int3 Returns Int3 operator *(Int3, int) public static Int3 operator *(Int3 a, int b) Parameters a Int3 b int Returns Int3 operator *(int, Int3) public static Int3 operator *(int a, Int3 b) Parameters a int b Int3 Returns Int3 operator -(Int3, Int3) public static Int3 operator -(Int3 a, Int3 b) Parameters a Int3 b Int3 Returns Int3 operator -(Int3) public static Int3 operator -(Int3 a) Parameters a Int3 Returns Int3"
  },
  "api/AngeliA.Int4.html": {
    "href": "api/AngeliA.Int4.html",
    "title": "Struct Int4 | AngeliA",
    "summary": "Struct Int4 Namespace AngeliA Assembly AngeliA Framework.dll [Serializable] public struct Int4 : IEquatable<Int4>, IFormattable Implements IEquatable<Int4> IFormattable Inherited Members object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Constructors Int4(int, int, int, int) public Int4(int x, int y, int z, int w) Parameters x int y int z int w int Fields one public static readonly Int4 one Field Value Int4 three public static readonly Int4 three Field Value Int4 two public static readonly Int4 two Field Value Int4 w public int w Field Value int x public int x Field Value int y public int y Field Value int z public int z Field Value int zero public static readonly Int4 zero Field Value Int4 Properties IsZero public readonly bool IsZero { get; } Property Value bool this[int] public int this[int index] { readonly get; set; } Parameters index int Property Value int down public int down { readonly get; set; } Property Value int horizontal public readonly int horizontal { get; } Property Value int left public int left { readonly get; set; } Property Value int right public int right { readonly get; set; } Property Value int up public int up { readonly get; set; } Property Value int vertical public readonly int vertical { get; } Property Value int Methods Contains(int) public readonly bool Contains(int value) Parameters value int Returns bool Count(int) public readonly int Count(int value) Parameters value int Returns int Direction(int, int, int, int) public static Int4 Direction(int left, int right, int down, int up) Parameters left int right int down int up int Returns Int4 Equals(Int4) Indicates whether the current object is equal to another object of the same type. public readonly bool Equals(Int4 other) Parameters other Int4 An object to compare with this object. Returns bool true if the current object is equal to the other parameter; otherwise, false. Equals(object) Indicates whether this instance and a specified object are equal. public override readonly bool Equals(object other) Parameters other object Returns bool true if obj and this instance are the same type and represent the same value; otherwise, false. FindIndex(int) public readonly int FindIndex(int value) Parameters value int Returns int GetHashCode() Returns the hash code for this instance. public override readonly int GetHashCode() Returns int A 32-bit signed integer that is the hash code for this instance. ToString() Returns the fully qualified type name of this instance. public override readonly string ToString() Returns string The fully qualified type name. ToString(string) public readonly string ToString(string format) Parameters format string Returns string ToString(string, IFormatProvider) Formats the value of the current instance using the specified format. public readonly string ToString(string format, IFormatProvider formatProvider) Parameters format string The format to use. -or- A null reference (Nothing in Visual Basic) to use the default format defined for the type of the IFormattable implementation. formatProvider IFormatProvider The provider to use to format the value. -or- A null reference (Nothing in Visual Basic) to obtain the numeric format information from the current locale setting of the operating system. Returns string The value of the current instance in the specified format. Operators operator +(Int4, Int4) public static Int4 operator +(Int4 a, Int4 b) Parameters a Int4 b Int4 Returns Int4 operator /(Int4, int) public static Int4 operator /(Int4 a, int b) Parameters a Int4 b int Returns Int4 operator ==(Int4, Int4) public static bool operator ==(Int4 a, Int4 b) Parameters a Int4 b Int4 Returns bool explicit operator Int2(Int4) public static explicit operator Int2(Int4 i) Parameters i Int4 Returns Int2 explicit operator Int3(Int4) public static explicit operator Int3(Int4 i) Parameters i Int4 Returns Int3 operator !=(Int4, Int4) public static bool operator !=(Int4 a, Int4 b) Parameters a Int4 b Int4 Returns bool operator *(Int4, int) public static Int4 operator *(Int4 a, int b) Parameters a Int4 b int Returns Int4 operator *(int, Int4) public static Int4 operator *(int b, Int4 a) Parameters b int a Int4 Returns Int4"
  },
  "api/AngeliA.IntToChars.html": {
    "href": "api/AngeliA.IntToChars.html",
    "title": "Class IntToChars | AngeliA",
    "summary": "Class IntToChars Namespace AngeliA Assembly AngeliA Framework.dll public class IntToChars Inheritance object IntToChars Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Constructors IntToChars(string, string) public IntToChars(string prefix = \"\", string suffix = \"\") Parameters prefix string suffix string Fields CharsValue public readonly char[] CharsValue Field Value char[] Prefix public readonly string Prefix Field Value string Suffix public readonly string Suffix Field Value string Methods Chars_to_Int(char[], int) public static int Chars_to_Int(char[] charsValue, int startIndex = 0) Parameters charsValue char[] startIndex int Returns int GetChars(int) public char[] GetChars(int value) Parameters value int Returns char[] Int_to_Chars(int, char[], ref int) public static void Int_to_Chars(int intValue, char[] charsValue, ref int startIndex) Parameters intValue int charsValue char[] startIndex int"
  },
  "api/AngeliA.Inventory.html": {
    "href": "api/AngeliA.Inventory.html",
    "title": "Class Inventory | AngeliA",
    "summary": "Class Inventory Namespace AngeliA Assembly AngeliA Framework.dll public static class Inventory Inheritance object Inventory Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties PoolReady public static bool PoolReady { get; } Property Value bool Methods AddItemAt(int, int, int) public static int AddItemAt(int inventoryID, int itemIndex, int count = 1) Parameters inventoryID int itemIndex int count int Returns int How many items has been added. Return 0 means no item added. Return \"count\" means all items added. CollectItem(int, int, int, bool, bool, bool) public static int CollectItem(int inventoryID, int item, int count = 1, bool ignoreEquipment = true, bool ignoreInventory = false, bool dontCollectIntoEmptyEquipmentSlot = false) Parameters inventoryID int item int count int ignoreEquipment bool ignoreInventory bool dontCollectIntoEmptyEquipmentSlot bool Returns int How many items has been collected. Return 0 means no item collected. Return \"count\" means all items collected. CollectItem(int, int, out int, int, bool, bool, bool) public static int CollectItem(int inventoryID, int item, out int collectIndex, int count = 1, bool ignoreEquipment = true, bool ignoreInventory = false, bool dontCollectIntoEmptyEquipmentSlot = false) Parameters inventoryID int item int collectIndex int count int ignoreEquipment bool ignoreInventory bool dontCollectIntoEmptyEquipmentSlot bool Returns int FillEquipmentFromInventory(int, EquipmentType) public static void FillEquipmentFromInventory(int inventoryID, EquipmentType type) Parameters inventoryID int type EquipmentType FindAndAddItem(int, int, int, bool) public static int FindAndAddItem(int inventoryID, int targetItemID, int count = 1, bool ignoreEquipment = true) Parameters inventoryID int targetItemID int count int ignoreEquipment bool Returns int How many items has been added. Return 0 means no item added. Return \"count\" means all items added. FindAndTakeItem(int, int, int) public static int FindAndTakeItem(int inventoryID, int targetItemID, int count = 1) Parameters inventoryID int targetItemID int count int Returns int How many items has been taken. Return 0 means no item taken. Return \"count\" means all items taken. GetEquipment(int, EquipmentType, out int) public static int GetEquipment(int inventoryID, EquipmentType type, out int equipmentCount) Parameters inventoryID int type EquipmentType equipmentCount int Returns int GetInventoryCapacity(int) public static int GetInventoryCapacity(int inventoryID) Parameters inventoryID int Returns int GetInventoryIdFromBasicIdAndPos(int, string, Int3) public static int GetInventoryIdFromBasicIdAndPos(int basicID, string baseName, Int3 mapPos) Parameters basicID int baseName string mapPos Int3 Returns int GetInventoryMapPosFromName(string, out string) public static Int3 GetInventoryMapPosFromName(string invNameWithoutExt, out string basicName) Parameters invNameWithoutExt string basicName string Returns Int3 GetItemAt(int, int) public static int GetItemAt(int inventoryID, int itemIndex) Parameters inventoryID int itemIndex int Returns int GetItemAt(int, int, out int) public static int GetItemAt(int inventoryID, int itemIndex, out int count) Parameters inventoryID int itemIndex int count int Returns int GetItemCount(int, int) public static int GetItemCount(int inventoryID, int itemIndex) Parameters inventoryID int itemIndex int Returns int GiveItemToTarget(Entity, int, int, bool) public static bool GiveItemToTarget(Entity target, int itemID, int count = 1, bool spawnWhenInventoryFull = true) Parameters target Entity itemID int count int spawnWhenInventoryFull bool Returns bool HasEnoughRoomToCollect(int, int, int) public static bool HasEnoughRoomToCollect(int inventoryID, int item, int count) Parameters inventoryID int item int count int Returns bool HasInventory(int) public static bool HasInventory(int inventoryID) Parameters inventoryID int Returns bool HasItem(int, int, bool) public static bool HasItem(int inventoryID, int itemID, bool includeEquipment = true) Parameters inventoryID int itemID int includeEquipment bool Returns bool IndexOfItem(int, int) public static int IndexOfItem(int inventoryID, int itemID) Parameters inventoryID int itemID int Returns int InitializeInventoryData(int, string, int, Int3, bool) public static int InitializeInventoryData(int basicID, string basicName, int capacity, Int3 mapUnitPos, bool hasEquipment = false) Parameters basicID int basicName string capacity int mapUnitPos Int3 hasEquipment bool Returns int InitializeInventoryData(int, string, int, bool) public static int InitializeInventoryData(int basicID, string basicName, int capacity, bool hasEquipment = false) Parameters basicID int basicName string capacity int hasEquipment bool Returns int InitializeInventoryData(string, int, Int3, bool) public static int InitializeInventoryData(string basicName, int capacity, Int3 mapUnitPos, bool hasEquipment = false) Parameters basicName string capacity int mapUnitPos Int3 hasEquipment bool Returns int InitializeInventoryData(string, int, bool) public static int InitializeInventoryData(string basicName, int capacity, bool hasEquipment = false) Parameters basicName string capacity int hasEquipment bool Returns int ItemTotalCount(int, int, bool) public static int ItemTotalCount(int inventoryID, int itemID, bool ignoreStack = false) Parameters inventoryID int itemID int ignoreStack bool Returns int ItemTotalCount(int, int, int, out int, bool) public static int ItemTotalCount(int inventoryID, int itemID, int targetIndex, out int targetOrder, bool ignoreStack = false) Parameters inventoryID int itemID int targetIndex int targetOrder int ignoreStack bool Returns int ItemTotalCount<I>(int, bool) public static int ItemTotalCount<I>(int inventoryID, bool ignoreStack = false) where I : Item Parameters inventoryID int ignoreStack bool Returns int Type Parameters I ItemTotalCount<I>(int, int, out int, bool) public static int ItemTotalCount<I>(int inventoryID, int targetIndex, out int targetOrder, bool ignoreStack = false) where I : Item Parameters inventoryID int targetIndex int targetOrder int ignoreStack bool Returns int Type Parameters I ReduceEquipmentCount(int, int, EquipmentType) public static void ReduceEquipmentCount(int inventoryID, int delta, EquipmentType type) Parameters inventoryID int delta int type EquipmentType RepositionInventory(int, Int3) public static void RepositionInventory(int inventoryID, Int3 newMapUnitPosition) Parameters inventoryID int newMapUnitPosition Int3 ResizeInventory(int, int) public static void ResizeInventory(int inventoryID, int newSize) Parameters inventoryID int newSize int SetEquipment(int, EquipmentType, int, int) public static bool SetEquipment(int inventoryID, EquipmentType type, int equipmentID, int equipmentCount) Parameters inventoryID int type EquipmentType equipmentID int equipmentCount int Returns bool SetItemAt(int, int, int, int) public static void SetItemAt(int inventoryID, int itemIndex, int newItem, int newCount) Parameters inventoryID int itemIndex int newItem int newCount int TakeItemAt(int, int, int) public static int TakeItemAt(int inventoryID, int itemIndex, int count = 1) Parameters inventoryID int itemIndex int count int Returns int How many items has been taken. Return 0 means no item taken. Return \"count\" means all items taken. UnlockAllItemsInside(int) public static void UnlockAllItemsInside(int inventoryID) Parameters inventoryID int"
  },
  "api/AngeliA.InventoryPartnerUI.html": {
    "href": "api/AngeliA.InventoryPartnerUI.html",
    "title": "Class InventoryPartnerUI | AngeliA",
    "summary": "Class InventoryPartnerUI Namespace AngeliA Assembly AngeliA Framework.dll public class InventoryPartnerUI : PlayerMenuPartnerUI, IWindowEntityUI Inheritance object PlayerMenuPartnerUI InventoryPartnerUI Implements IWindowEntityUI Derived CraftingUI Inherited Members PlayerMenuPartnerUI.InventoryID PlayerMenuPartnerUI.ItemFieldSize PlayerMenuPartnerUI.MouseInPanel PlayerMenuPartnerUI.BackgroundRect PlayerMenuPartnerUI.EnablePanel() PlayerMenuPartnerUI.Unify(int) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Fields Instance public static readonly InventoryPartnerUI Instance Field Value InventoryPartnerUI TYPE_ID public static readonly int TYPE_ID Field Value int Properties AvatarID public int AvatarID { get; set; } Property Value int Column public override int Column { get; } Property Value int Row public override int Row { get; } Property Value int _Column public int _Column { get; set; } Property Value int _Row public int _Row { get; set; } Property Value int Methods DrawPanel(IRect) public override void DrawPanel(IRect panelRect) Parameters panelRect IRect"
  },
  "api/AngeliA.Item.html": {
    "href": "api/AngeliA.Item.html",
    "title": "Class Item | AngeliA",
    "summary": "Class Item Namespace AngeliA Assembly AngeliA Framework.dll [Entity.MapEditorGroup(\"Item\", 0)] public abstract class Item : IMapItem Inheritance object Item Implements IMapItem Derived AntiBuffItem<B> BuffItem Equipment Food NonStackableItem DollItem SummonItem<T> PlayerMenuItem<UI> SwitchItem<TargetItem> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Constructors Item() public Item() Properties AllowDuplicateUpdate public virtual bool AllowDuplicateUpdate { get; } Property Value bool EmbedIntoLevel public virtual bool EmbedIntoLevel { get; } Property Value bool MaxStackCount public abstract int MaxStackCount { get; } Property Value int TypeID public int TypeID { get; init; } Property Value int Methods BeforeItemUpdate_FromEquipment(Character) public virtual void BeforeItemUpdate_FromEquipment(Character holder) Parameters holder Character BeforeItemUpdate_FromInventory(Character, int, int) public virtual void BeforeItemUpdate_FromInventory(Character holder, int inventoryID, int itemIndex) Parameters holder Character inventoryID int itemIndex int BeforePoseAnimationUpdate_FromEquipment(PoseCharacterRenderer) public virtual void BeforePoseAnimationUpdate_FromEquipment(PoseCharacterRenderer rendering) Parameters rendering PoseCharacterRenderer CanUse(Character) public virtual bool CanUse(Character holder) Parameters holder Character Returns bool DrawItem(Entity, IRect, Color32, int) public virtual void DrawItem(Entity holder, IRect rect, Color32 tint, int z) Parameters holder Entity rect IRect tint Color32 z int ItemConditionCheck(Character) public virtual bool ItemConditionCheck(Character holder) Parameters holder Character Returns bool OnCharacterAttack_FromEquipment(Character, Bullet) public virtual void OnCharacterAttack_FromEquipment(Character character, Bullet bullet) Parameters character Character bullet Bullet OnCharacterAttack_FromInventory(Character, Bullet, int, int) public virtual void OnCharacterAttack_FromInventory(Character character, Bullet bullet, int inventoryID, int itemIndex) Parameters character Character bullet Bullet inventoryID int itemIndex int OnCollect(Character) public virtual void OnCollect(Character holder) Parameters holder Character OnItemUpdate_FromEquipment(Character) public virtual void OnItemUpdate_FromEquipment(Character holder) Parameters holder Character OnItemUpdate_FromInventory(Character, int, int) public virtual void OnItemUpdate_FromInventory(Character holder, int inventoryID, int itemIndex) Parameters holder Character inventoryID int itemIndex int OnItemUpdate_FromItemHolder(ItemHolder, int) public virtual void OnItemUpdate_FromItemHolder(ItemHolder holder, int count) Parameters holder ItemHolder count int OnPoseAnimationUpdate_FromEquipment(PoseCharacterRenderer) public virtual void OnPoseAnimationUpdate_FromEquipment(PoseCharacterRenderer rendering) Parameters rendering PoseCharacterRenderer OnPoseAnimationUpdate_FromInventory(PoseCharacterRenderer, int, int) public virtual void OnPoseAnimationUpdate_FromInventory(PoseCharacterRenderer rendering, int inventoryID, int itemIndex) Parameters rendering PoseCharacterRenderer inventoryID int itemIndex int OnTakeDamage_FromEquipment(Character, ref Damage) public virtual void OnTakeDamage_FromEquipment(Character holder, ref Damage damage) Parameters holder Character damage Damage OnTakeDamage_FromInventory(Character, int, int, ref Damage) public virtual void OnTakeDamage_FromInventory(Character holder, int inventoryID, int itemIndex, ref Damage damage) Parameters holder Character inventoryID int itemIndex int damage Damage TryRepairEquipment(Character) public virtual bool TryRepairEquipment(Character holder) Parameters holder Character Returns bool Use(Character, int, int, out bool) public virtual bool Use(Character holder, int inventoryID, int itemIndex, out bool consume) Parameters holder Character inventoryID int itemIndex int consume bool Returns bool"
  },
  "api/AngeliA.ItemCombinationAttribute-1.html": {
    "href": "api/AngeliA.ItemCombinationAttribute-1.html",
    "title": "Class ItemCombinationAttribute<I0> | AngeliA",
    "summary": "Class ItemCombinationAttribute<I0> Namespace AngeliA Assembly AngeliA Framework.dll Define a item combination to craft the item. [AttributeUsage(AttributeTargets.Class, AllowMultiple = true)] public class ItemCombinationAttribute<I0> : BasicItemCombinationAttribute Type Parameters I0 Inheritance object Attribute BasicItemCombinationAttribute ItemCombinationAttribute<I0> Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Constructors ItemCombinationAttribute(int, string, string, string, string, string, string, string) Define a item combination to craft the item. public ItemCombinationAttribute(int count = 1, string keepId0 = \"\", string keepId1 = \"\", string keepId2 = \"\", string keepId3 = \"\", string extraB = \"\", string extraC = \"\", string extraD = \"\") Parameters count int How many item does it craft at once keepId0 string Do not consume this item keepId1 string Do not consume this item keepId2 string Do not consume this item keepId3 string Do not consume this item extraB string Use this if the item is not based on class extraC string Use this if the item is not based on class extraD string Use this if the item is not based on class"
  },
  "api/AngeliA.ItemCombinationAttribute-2.html": {
    "href": "api/AngeliA.ItemCombinationAttribute-2.html",
    "title": "Class ItemCombinationAttribute<I0, I1> | AngeliA",
    "summary": "Class ItemCombinationAttribute<I0, I1> Namespace AngeliA Assembly AngeliA Framework.dll Define a item combination to craft the item. [AttributeUsage(AttributeTargets.Class, AllowMultiple = true)] public class ItemCombinationAttribute<I0, I1> : BasicItemCombinationAttribute Type Parameters I0 I1 Inheritance object Attribute BasicItemCombinationAttribute ItemCombinationAttribute<I0, I1> Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Constructors ItemCombinationAttribute(int, string, string, string, string, string, string) Define a item combination to craft the item. public ItemCombinationAttribute(int count = 1, string keepId0 = \"\", string keepId1 = \"\", string keepId2 = \"\", string keepId3 = \"\", string extraC = \"\", string extraD = \"\") Parameters count int How many item does it craft at once keepId0 string Do not consume this item keepId1 string Do not consume this item keepId2 string Do not consume this item keepId3 string Do not consume this item extraC string Use this if the item is not based on class extraD string Use this if the item is not based on class"
  },
  "api/AngeliA.ItemCombinationAttribute-3.html": {
    "href": "api/AngeliA.ItemCombinationAttribute-3.html",
    "title": "Class ItemCombinationAttribute<I0, I1, I2> | AngeliA",
    "summary": "Class ItemCombinationAttribute<I0, I1, I2> Namespace AngeliA Assembly AngeliA Framework.dll Define a item combination to craft the item. [AttributeUsage(AttributeTargets.Class, AllowMultiple = true)] public class ItemCombinationAttribute<I0, I1, I2> : BasicItemCombinationAttribute Type Parameters I0 I1 I2 Inheritance object Attribute BasicItemCombinationAttribute ItemCombinationAttribute<I0, I1, I2> Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Constructors ItemCombinationAttribute(int, string, string, string, string, string) Define a item combination to craft the item. public ItemCombinationAttribute(int count = 1, string keepId0 = \"\", string keepId1 = \"\", string keepId2 = \"\", string keepId3 = \"\", string extraD = \"\") Parameters count int How many item does it craft at once keepId0 string Do not consume this item keepId1 string Do not consume this item keepId2 string Do not consume this item keepId3 string Do not consume this item extraD string Use this if the item is not based on class"
  },
  "api/AngeliA.ItemCombinationAttribute-4.html": {
    "href": "api/AngeliA.ItemCombinationAttribute-4.html",
    "title": "Class ItemCombinationAttribute<I0, I1, I2, I3> | AngeliA",
    "summary": "Class ItemCombinationAttribute<I0, I1, I2, I3> Namespace AngeliA Assembly AngeliA Framework.dll Define a item combination to craft the item. [AttributeUsage(AttributeTargets.Class, AllowMultiple = true)] public class ItemCombinationAttribute<I0, I1, I2, I3> : BasicItemCombinationAttribute Type Parameters I0 I1 I2 I3 Inheritance object Attribute BasicItemCombinationAttribute ItemCombinationAttribute<I0, I1, I2, I3> Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Constructors ItemCombinationAttribute(int, string, string, string, string) Define a item combination to craft the item. public ItemCombinationAttribute(int count = 1, string keepId0 = \"\", string keepId1 = \"\", string keepId2 = \"\", string keepId3 = \"\") Parameters count int How many item does it craft at once keepId0 string Do not consume this item keepId1 string Do not consume this item keepId2 string Do not consume this item keepId3 string Do not consume this item"
  },
  "api/AngeliA.ItemCombinationAttribute.html": {
    "href": "api/AngeliA.ItemCombinationAttribute.html",
    "title": "Class ItemCombinationAttribute | AngeliA",
    "summary": "Class ItemCombinationAttribute Namespace AngeliA Assembly AngeliA Framework.dll Define a item combination to craft the item. [AttributeUsage(AttributeTargets.Class, AllowMultiple = true)] public class ItemCombinationAttribute : BasicItemCombinationAttribute Inheritance object Attribute BasicItemCombinationAttribute ItemCombinationAttribute Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Constructors ItemCombinationAttribute(int, string, string, string, string, string, string, string, string) Define a item combination to craft the item. public ItemCombinationAttribute(int count = 1, string keepId0 = \"\", string keepId1 = \"\", string keepId2 = \"\", string keepId3 = \"\", string extraA = \"\", string extraB = \"\", string extraC = \"\", string extraD = \"\") Parameters count int How many item does it craft at once keepId0 string Do not consume this item keepId1 string Do not consume this item keepId2 string Do not consume this item keepId3 string Do not consume this item extraA string Use this if the item is not based on class extraB string Use this if the item is not based on class extraC string Use this if the item is not based on class extraD string Use this if the item is not based on class"
  },
  "api/AngeliA.ItemCombinationParam.html": {
    "href": "api/AngeliA.ItemCombinationParam.html",
    "title": "Class ItemCombinationParam | AngeliA",
    "summary": "Class ItemCombinationParam Namespace AngeliA Assembly AngeliA Framework.dll public sealed class ItemCombinationParam Inheritance object ItemCombinationParam Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Operators implicit operator int(ItemCombinationParam) public static implicit operator int(ItemCombinationParam param) Parameters param ItemCombinationParam Returns int implicit operator string(ItemCombinationParam) public static implicit operator string(ItemCombinationParam param) Parameters param ItemCombinationParam Returns string implicit operator ItemCombinationParam(string) public static implicit operator ItemCombinationParam(string name) Parameters name string Returns ItemCombinationParam implicit operator ItemCombinationParam(Type) public static implicit operator ItemCombinationParam(Type type) Parameters type Type Returns ItemCombinationParam"
  },
  "api/AngeliA.ItemDropAttribute-1.html": {
    "href": "api/AngeliA.ItemDropAttribute-1.html",
    "title": "Class ItemDropAttribute<I> | AngeliA",
    "summary": "Class ItemDropAttribute<I> Namespace AngeliA Assembly AngeliA Framework.dll Register item drop for the entity, use ItemSystem.DropItemFor(Entity) to perform the item drop. [AttributeUsage(AttributeTargets.Class, AllowMultiple = true)] public class ItemDropAttribute<I> : ItemDropAttribute Type Parameters I Which item does it drops Inheritance object Attribute ItemDropAttribute ItemDropAttribute<I> Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Constructors ItemDropAttribute(int, int) Register item drop for the entity, use ItemSystem.DropItemFor(Entity) to perform the item drop. public ItemDropAttribute(int dropChance, int dropCount = 1) Parameters dropChance int Probability of dropping this item. 0 means 0%, 1000 means 100% dropCount int How many items does it drop at once"
  },
  "api/AngeliA.ItemDropAttribute.html": {
    "href": "api/AngeliA.ItemDropAttribute.html",
    "title": "Class ItemDropAttribute | AngeliA",
    "summary": "Class ItemDropAttribute Namespace AngeliA Assembly AngeliA Framework.dll Register item drop for the entity, use ItemSystem.DropItemFor(Entity) to perform the item drop. public abstract class ItemDropAttribute : Attribute Inheritance object Attribute ItemDropAttribute Derived ItemDropAttribute<I> Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Constructors ItemDropAttribute(int, int, int) Register item drop for the entity, use ItemSystem.DropItemFor(Entity) to perform the item drop. protected ItemDropAttribute(int typeID, int dropChance, int dropCount = 1) Parameters typeID int dropChance int Probability of dropping this item. 0 means 0%, 1000 means 100% dropCount int How many items does it drop at once"
  },
  "api/AngeliA.ItemHolder.html": {
    "href": "api/AngeliA.ItemHolder.html",
    "title": "Class ItemHolder | AngeliA",
    "summary": "Class ItemHolder Namespace AngeliA Assembly AngeliA Framework.dll [Entity.Capacity(2048, 0)] [Entity.Layer(6)] public class ItemHolder : Rigidbody, IMapItem, ICarrier Inheritance object Entity Rigidbody ItemHolder Implements IMapItem ICarrier Inherited Members Rigidbody.Rect Rigidbody.IsGrounded Rigidbody.IsInsideGround Rigidbody.InWater Rigidbody.VelocityX Rigidbody.VelocityY Rigidbody.BounceSpeedRate Rigidbody.OffsetX Rigidbody.OffsetY Rigidbody.GroundedID Rigidbody.PrevX Rigidbody.PrevY Rigidbody.DeltaPositionX Rigidbody.DeltaPositionY Rigidbody.MomentumX Rigidbody.MomentumY Rigidbody.RequireDodgeOverlap Rigidbody.FacingRight Rigidbody.EjectWhenInsideGround Rigidbody.GlobalGravity Rigidbody.FallingGravityScale Rigidbody.RisingGravityScale Rigidbody.CollisionMask Rigidbody.IgnoreGroundCheck Rigidbody.IgnoreGravity Rigidbody.IgnorePhysics Rigidbody.IgnoreInsideGround Rigidbody.IgnoreOneway Rigidbody.IgnoreMomentum Rigidbody.MaxGravitySpeed Rigidbody.AirDragX Rigidbody.AirDragY Rigidbody.WaterFloatSpeed Rigidbody.WaterSpeedRate Rigidbody.AllowBeingPush Rigidbody.DestroyWhenInsideGround Rigidbody.PerformMove(int, int, bool) Rigidbody.MakeGrounded(int, int) Rigidbody.CancelMakeGrounded() Rigidbody.Push(int) Rigidbody.PerformGroundCheck(IRect, out PhysicsCell) Rigidbody.FillAsTrigger(int, int) Rigidbody.FillAsOnewayUp(int, int) Rigidbody.OnInsideGroundDestroyed() Rigidbody.GroundedCheck() Rigidbody.RefreshPrevPosition() Entity.Active Entity.X Entity.Y Entity.Width Entity.Height Entity.TypeID Entity.SpawnFrame Entity.FromWorld Entity.InstanceOrder Entity.MapUnitPos Entity.InstanceID Entity.IgnoreReposition Entity.XY Entity.Size Entity.Center Entity.CenterX Entity.CenterY Entity.PivotUnitPosition Entity.AfterReposition(Int3, Int3) Entity.IgnoreDespawnFromMap(int) Entity.CancelIgnoreDespawnFromMap() Entity.Draw() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Fields TYPE_ID public static readonly int TYPE_ID Field Value int Properties CarryOtherOnTop public override bool CarryOtherOnTop { get; } Property Value bool ItemCount public int ItemCount { get; set; } Property Value int ItemID public int ItemID { get; set; } Property Value int PhysicalLayer public override int PhysicalLayer { get; } Property Value int SelfCollisionMask public override int SelfCollisionMask { get; } Property Value int Methods BeforeUpdate() public override void BeforeUpdate() ClearHoldingPool() public static void ClearHoldingPool() Collect(Character) public bool Collect(Character character) Parameters character Character Returns bool FirstUpdate() public override void FirstUpdate() InsideGroundCheck() protected override bool InsideGroundCheck() Returns bool Jump(int) public void Jump(int velocity = 42) Parameters velocity int LateUpdate() public override void LateUpdate() OnActivated() public override void OnActivated() OnInactivated() public override void OnInactivated() Update() public override void Update()"
  },
  "api/AngeliA.ItemSystem.ItemData.html": {
    "href": "api/AngeliA.ItemSystem.ItemData.html",
    "title": "Class ItemSystem.ItemData | AngeliA",
    "summary": "Class ItemSystem.ItemData Namespace AngeliA Assembly AngeliA Framework.dll public class ItemSystem.ItemData Inheritance object ItemSystem.ItemData Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Constructors ItemData(Item, int, int, string, int) public ItemData(Item item, int nameID, int descriptionID, string typeName, int maxStackCount) Parameters item Item nameID int descriptionID int typeName string maxStackCount int Fields DescriptionID public int DescriptionID Field Value int Item public Item Item Field Value Item MaxStackCount public int MaxStackCount Field Value int NameID public int NameID Field Value int TypeName public string TypeName Field Value string Unlocked public bool Unlocked Field Value bool"
  },
  "api/AngeliA.ItemSystem.html": {
    "href": "api/AngeliA.ItemSystem.html",
    "title": "Class ItemSystem | AngeliA",
    "summary": "Class ItemSystem Namespace AngeliA Assembly AngeliA Framework.dll public static class ItemSystem Inheritance object ItemSystem Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties ItemPoolReady public static bool ItemPoolReady { get; } Property Value bool ItemUnlockReady public static bool ItemUnlockReady { get; } Property Value bool Methods CanUseItem(int, Character) public static bool CanUseItem(int id, Character target) Parameters id int target Character Returns bool ClearCombination() public static void ClearCombination() DropItemFor(Entity) public static bool DropItemFor(Entity entity) Parameters entity Entity Returns bool DropItemFor(int, int, int) public static bool DropItemFor(int sourceID, int x, int y) Parameters sourceID int x int y int Returns bool ForAllCombinations() public static IEnumerable<KeyValuePair<Int4, int>> ForAllCombinations() Returns IEnumerable<KeyValuePair<Int4, int>> GetItem(int) public static Item GetItem(int id) Parameters id int Returns Item GetItem(object) public static Item GetItem(object resultID) Parameters resultID object Returns Item GetItemDescription(int) public static string GetItemDescription(int id) Parameters id int Returns string GetItemDisplayName(int) public static string GetItemDisplayName(int id) Parameters id int Returns string GetItemMaxStackCount(int) public static int GetItemMaxStackCount(int id) Parameters id int Returns int GetRelatedCombinations(Int4, List<Int4>, int) public static void GetRelatedCombinations(Int4 combination, List<Int4> output, int materialCountLimit) Parameters combination Int4 output List<Int4> materialCountLimit int GetSortedCombination(int, int, int, int) public static Int4 GetSortedCombination(int a, int b, int c, int d) Parameters a int b int c int d int Returns Int4 HasItem(int) public static bool HasItem(int id) Parameters id int Returns bool IsEquipment(int) public static bool IsEquipment(int itemID) Parameters itemID int Returns bool IsEquipment(int, out EquipmentType) public static bool IsEquipment(int itemID, out EquipmentType type) Parameters itemID int type EquipmentType Returns bool IsItemUnlocked(int) public static bool IsItemUnlocked(int itemID) Parameters itemID int Returns bool SetItemUnlocked(int, bool) public static void SetItemUnlocked(int itemID, bool unlocked) Parameters itemID int unlocked bool SpawnItem(int, int, int, int, bool) public static ItemHolder SpawnItem(int itemID, int x, int y, int count = 1, bool jump = true) Parameters itemID int x int y int count int jump bool Returns ItemHolder TryGetCombination(int, int, int, int, out int, out int, out int, out int, out int, out int) public static bool TryGetCombination(int item0, int item1, int item2, int item3, out int result, out int resultCount, out int keep0, out int keep1, out int keep2, out int keep3) Parameters item0 int item1 int item2 int item3 int result int resultCount int keep0 int keep1 int keep2 int keep3 int Returns bool"
  },
  "api/AngeliA.Jewelry.html": {
    "href": "api/AngeliA.Jewelry.html",
    "title": "Class Jewelry | AngeliA",
    "summary": "Class Jewelry Namespace AngeliA Assembly AngeliA Framework.dll public abstract class Jewelry : Equipment, IMapItem Inheritance object Item Equipment Jewelry Implements IMapItem Inherited Members Equipment.MaxStackCount Item.AllowDuplicateUpdate Item.EmbedIntoLevel Item.TypeID Item.BeforeItemUpdate_FromInventory(Character, int, int) Item.OnItemUpdate_FromInventory(Character, int, int) Item.OnPoseAnimationUpdate_FromInventory(PoseCharacterRenderer, int, int) Item.OnTakeDamage_FromInventory(Character, int, int, ref Damage) Item.OnCharacterAttack_FromInventory(Character, Bullet, int, int) Item.BeforeItemUpdate_FromEquipment(Character) Item.OnItemUpdate_FromEquipment(Character) Item.BeforePoseAnimationUpdate_FromEquipment(PoseCharacterRenderer) Item.OnPoseAnimationUpdate_FromEquipment(PoseCharacterRenderer) Item.OnTakeDamage_FromEquipment(Character, ref Damage) Item.OnCharacterAttack_FromEquipment(Character, Bullet) Item.TryRepairEquipment(Character) Item.OnItemUpdate_FromItemHolder(ItemHolder, int) Item.OnCollect(Character) Item.CanUse(Character) Item.Use(Character, int, int, out bool) Item.ItemConditionCheck(Character) Item.DrawItem(Entity, IRect, Color32, int) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Properties EquipmentType public override sealed EquipmentType EquipmentType { get; } Property Value EquipmentType"
  },
  "api/AngeliA.JsonUtil.html": {
    "href": "api/AngeliA.JsonUtil.html",
    "title": "Class JsonUtil | AngeliA",
    "summary": "Class JsonUtil Namespace AngeliA Assembly AngeliA Framework.dll public static class JsonUtil Inheritance object JsonUtil Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods GetJsonPath<T>(string, string, string) public static string GetJsonPath<T>(string rootPath, string name = \"\", string ext = \"json\") Parameters rootPath string name string ext string Returns string Type Parameters T LoadJsonFromPath<T>(string) public static T LoadJsonFromPath<T>(string jsonPath) Parameters jsonPath string Returns T Type Parameters T LoadJson<T>(string, string, string) public static T LoadJson<T>(string rootPath, string name = \"\", string ext = \"json\") Parameters rootPath string name string ext string Returns T Type Parameters T LoadOrCreateJsonFromPath<T>(string) public static T LoadOrCreateJsonFromPath<T>(string jsonPath) where T : new() Parameters jsonPath string Returns T Type Parameters T LoadOrCreateJson<T>(string, string, string) public static T LoadOrCreateJson<T>(string rootPath, string name = \"\", string ext = \"json\") where T : new() Parameters rootPath string name string ext string Returns T Type Parameters T SaveJsonToPath(object, string, bool) public static void SaveJsonToPath(object data, string jsonPath, bool prettyPrint = false) Parameters data object jsonPath string prettyPrint bool SaveJson<T>(T, string, string, string, bool) public static void SaveJson<T>(T data, string rootPath, string name = \"\", string ext = \"json\", bool prettyPrint = false) Parameters data T rootPath string name string ext string prettyPrint bool Type Parameters T"
  },
  "api/AngeliA.KeyboardKey.html": {
    "href": "api/AngeliA.KeyboardKey.html",
    "title": "Enum KeyboardKey | AngeliA",
    "summary": "Enum KeyboardKey Namespace AngeliA Assembly AngeliA Framework.dll public enum KeyboardKey Extension Methods Extension.Next<E>(E) Extension.Prev<E>(E) Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Fields A = 15 B = 16 Backquote = 4 Backslash = 10 Backspace = 64 C = 17 CapsLock = 71 Comma = 7 D = 18 Delete = 70 Digit0 = 50 Digit1 = 41 Digit2 = 42 Digit3 = 43 Digit4 = 44 Digit5 = 45 Digit6 = 46 Digit7 = 47 Digit8 = 48 Digit9 = 49 DownArrow = 63 E = 19 End = 68 Enter = 2 Equals = 14 Escape = 59 F = 20 F1 = 93 F10 = 102 F11 = 103 F12 = 104 F2 = 94 F3 = 95 F4 = 96 F5 = 97 F6 = 98 F7 = 99 F8 = 100 F9 = 101 G = 21 H = 22 Home = 67 I = 23 IMESelected = 110 Insert = 69 J = 24 K = 25 L = 26 LeftAlt = 53 LeftArrow = 60 LeftBracket = 11 LeftCtrl = 55 LeftMeta = 57 LeftShift = 51 M = 27 Minus = 13 N = 28 None = 0 NumLock = 72 Numpad0 = 83 Numpad1 = 84 Numpad2 = 85 Numpad3 = 86 Numpad4 = 87 Numpad5 = 88 Numpad6 = 89 Numpad7 = 90 Numpad8 = 91 Numpad9 = 92 NumpadDivide = 77 NumpadEnter = 76 NumpadEquals = 82 NumpadMinus = 80 NumpadMultiply = 78 NumpadPeriod = 81 NumpadPlus = 79 O = 29 OEM1 = 105 OEM2 = 106 OEM3 = 107 OEM4 = 108 OEM5 = 109 P = 30 PageDown = 65 PageUp = 66 Pause = 75 Period = 8 PrintScreen = 73 Q = 31 Quote = 5 R = 32 RightAlt = 54 RightArrow = 61 RightBracket = 12 RightCtrl = 56 RightMeta = 58 RightShift = 52 S = 33 ScrollLock = 74 Semicolon = 6 Slash = 9 Space = 1 T = 34 Tab = 3 U = 35 UpArrow = 62 V = 36 W = 37 X = 38 Y = 39 Z = 40"
  },
  "api/AngeliA.Language.html": {
    "href": "api/AngeliA.Language.html",
    "title": "Class Language | AngeliA",
    "summary": "Class Language Namespace AngeliA Assembly AngeliA Framework.dll public static class Language Inheritance object Language Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties CurrentLanguage public static string CurrentLanguage { get; } Property Value string LanguageCount public static int LanguageCount { get; } Property Value int PoolReady public static bool PoolReady { get; } Property Value bool Methods Get(int, string) public static string Get(int id, string failback = \"\") Parameters id int failback string Returns string GetLanguageAt(int) public static string GetLanguageAt(int index) Parameters index int Returns string SetLanguage(string) public static bool SetLanguage(string language) Parameters language string Returns bool"
  },
  "api/AngeliA.LanguageCode.html": {
    "href": "api/AngeliA.LanguageCode.html",
    "title": "Class LanguageCode | AngeliA",
    "summary": "Class LanguageCode Namespace AngeliA Assembly AngeliA Framework.dll public class LanguageCode Inheritance object LanguageCode Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Constructors LanguageCode(string, string) public LanguageCode(string name, string defaultValue) Parameters name string defaultValue string Fields ID public readonly int ID Field Value int Properties DefaultValue public string DefaultValue { get; } Property Value string Name public string Name { get; } Property Value string Methods ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object. Operators implicit operator string(LanguageCode) public static implicit operator string(LanguageCode code) Parameters code LanguageCode Returns string implicit operator LanguageCode((string name, string defaultValue)) public static implicit operator LanguageCode((string name, string defaultValue) value) Parameters value (string name, string defaultValue) Returns LanguageCode"
  },
  "api/AngeliA.LanguageUtil.html": {
    "href": "api/AngeliA.LanguageUtil.html",
    "title": "Class LanguageUtil | AngeliA",
    "summary": "Class LanguageUtil Namespace AngeliA Assembly AngeliA Framework.dll public static class LanguageUtil Inheritance object LanguageUtil Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields ADD_KEYS_FOR_ALL_LANGUAGE_CODE_SETTING_ID public const int ADD_KEYS_FOR_ALL_LANGUAGE_CODE_SETTING_ID = 914528783 Field Value int Methods AddKeysForAllLanguageCode(string) public static void AddKeysForAllLanguageCode(string languageRoot) Parameters languageRoot string GetLanguageFolderPath(string, string) public static string GetLanguageFolderPath(string languageRoot, string language) Parameters languageRoot string language string Returns string GetSystemLanguageISO() public static string GetSystemLanguageISO() Returns string LoadAllPairsFromDiskAtPath(string, bool) public static IEnumerable<KeyValuePair<string, string>> LoadAllPairsFromDiskAtPath(string path, bool keepEscapeCharacters = false) Parameters path string keepEscapeCharacters bool Returns IEnumerable<KeyValuePair<string, string>> LoadAllPairsFromFolder(string, string, bool) public static IEnumerable<KeyValuePair<string, string>> LoadAllPairsFromFolder(string languageRoot, string language, bool keepEscapeCharacters = false) Parameters languageRoot string language string keepEscapeCharacters bool Returns IEnumerable<KeyValuePair<string, string>> SaveAllPairsToDisk(string, IEnumerable<KeyValuePair<string, string>>) public static void SaveAllPairsToDisk(string filePath, IEnumerable<KeyValuePair<string, string>> pairs) Parameters filePath string pairs IEnumerable<KeyValuePair<string, string>>"
  },
  "api/AngeliA.LayerScope.html": {
    "href": "api/AngeliA.LayerScope.html",
    "title": "Struct LayerScope | AngeliA",
    "summary": "Struct LayerScope Namespace AngeliA Assembly AngeliA Framework.dll public readonly struct LayerScope : IDisposable Implements IDisposable Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Constructors LayerScope(int) public LayerScope(int layer) Parameters layer int Methods Dispose() Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources. public void Dispose()"
  },
  "api/AngeliA.LightingSystem.html": {
    "href": "api/AngeliA.LightingSystem.html",
    "title": "Class LightingSystem | AngeliA",
    "summary": "Class LightingSystem Namespace AngeliA Assembly AngeliA Framework.dll public static class LightingSystem Inheritance object LightingSystem Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields SETTING_AIR_ILLUMINANCE_DAY public const int SETTING_AIR_ILLUMINANCE_DAY = 948523 Field Value int SETTING_AIR_ILLUMINANCE_NIGHT public const int SETTING_AIR_ILLUMINANCE_NIGHT = 948524 Field Value int SETTING_BACKGROUND_TINT public const int SETTING_BACKGROUND_TINT = 948525 Field Value int SETTING_FREE_IN_GAME_DAYTIME public const int SETTING_FREE_IN_GAME_DAYTIME = 948528 Field Value int SETTING_IN_GAME_DAYTIME public const int SETTING_IN_GAME_DAYTIME = 948527 Field Value int SETTING_LEVEL_ILLUMINATE_REMAIN public const int SETTING_LEVEL_ILLUMINATE_REMAIN = 948526 Field Value int SETTING_PIXEL_STYLE public const int SETTING_PIXEL_STYLE = 948520 Field Value int SETTING_SELF_LERP public const int SETTING_SELF_LERP = 948521 Field Value int SETTING_SOLID_ILLUMINANCE public const int SETTING_SOLID_ILLUMINANCE = 948522 Field Value int Properties Enable public static bool Enable { get; } Property Value bool Methods CancelIgnoreLighting() public static void CancelIgnoreLighting() ForceAirLerp(float, int) public static void ForceAirLerp(float lerp, int duration = 1) Parameters lerp float duration int ForceCameraScale(float, int) public static void ForceCameraScale(float scale, int duration = 1) Parameters scale float duration int IgnoreLighting(int) public static void IgnoreLighting(int duration = 1) Parameters duration int Illuminate(int, int, int, int) public static void Illuminate(int x, int y, int radius, int amount = 1000) Parameters x int y int radius int amount int"
  },
  "api/AngeliA.Long4.html": {
    "href": "api/AngeliA.Long4.html",
    "title": "Struct Long4 | AngeliA",
    "summary": "Struct Long4 Namespace AngeliA Assembly AngeliA Framework.dll [Serializable] public struct Long4 : IEquatable<Long4>, IFormattable Implements IEquatable<Long4> IFormattable Inherited Members object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Constructors Long4(long, long, long, long) public Long4(long x, long y, long z, long w) Parameters x long y long z long w long Fields one public static readonly Long4 one Field Value Long4 three public static readonly Long4 three Field Value Long4 two public static readonly Long4 two Field Value Long4 w public long w Field Value long x public long x Field Value long y public long y Field Value long z public long z Field Value long zero public static readonly Long4 zero Field Value Long4 Properties IsZero public readonly bool IsZero { get; } Property Value bool this[int] public long this[int index] { readonly get; set; } Parameters index int Property Value long down public long down { readonly get; set; } Property Value long horizontal public readonly long horizontal { get; } Property Value long left public long left { readonly get; set; } Property Value long right public long right { readonly get; set; } Property Value long up public long up { readonly get; set; } Property Value long vertical public readonly long vertical { get; } Property Value long Methods Contains(long) public readonly bool Contains(long value) Parameters value long Returns bool Direction(long, long, long, long) public static Long4 Direction(long left, long right, long down, long up) Parameters left long right long down long up long Returns Long4 Equals(Long4) Indicates whether the current object is equal to another object of the same type. public readonly bool Equals(Long4 other) Parameters other Long4 An object to compare with this object. Returns bool true if the current object is equal to the other parameter; otherwise, false. Equals(object) Indicates whether this instance and a specified object are equal. public override readonly bool Equals(object other) Parameters other object Returns bool true if obj and this instance are the same type and represent the same value; otherwise, false. GetHashCode() Returns the hash code for this instance. public override readonly int GetHashCode() Returns int A 32-bit signed integer that is the hash code for this instance. Swap(long, long) public bool Swap(long value, long newValue) Parameters value long newValue long Returns bool ToString() Returns the fully qualified type name of this instance. public override readonly string ToString() Returns string The fully qualified type name. ToString(string) public readonly string ToString(string format) Parameters format string Returns string ToString(string, IFormatProvider) Formats the value of the current instance using the specified format. public readonly string ToString(string format, IFormatProvider formatProvider) Parameters format string The format to use. -or- A null reference (Nothing in Visual Basic) to use the default format defined for the type of the IFormattable implementation. formatProvider IFormatProvider The provider to use to format the value. -or- A null reference (Nothing in Visual Basic) to obtain the numeric format information from the current locale setting of the operating system. Returns string The value of the current instance in the specified format. Operators operator +(Long4, Long4) public static Long4 operator +(Long4 a, Long4 b) Parameters a Long4 b Long4 Returns Long4 operator ==(Long4, Long4) public static bool operator ==(Long4 a, Long4 b) Parameters a Long4 b Long4 Returns bool operator !=(Long4, Long4) public static bool operator !=(Long4 a, Long4 b) Parameters a Long4 b Long4 Returns bool operator *(Long4, long) public static Long4 operator *(Long4 a, long b) Parameters a Long4 b long Returns Long4 operator *(long, Long4) public static Long4 operator *(long b, Long4 a) Parameters b long a Long4 Returns Long4"
  },
  "api/AngeliA.MapEditor.html": {
    "href": "api/AngeliA.MapEditor.html",
    "title": "Class MapEditor | AngeliA",
    "summary": "Class MapEditor Namespace AngeliA Assembly AngeliA Framework.dll [Entity.StageOrder(-4096)] public sealed class MapEditor : WindowUI, IMapItem, IWindowEntityUI Inheritance object Entity EntityUI WindowUI MapEditor Implements IMapItem IWindowEntityUI Inherited Members WindowUI.DefaultWindowName WindowUI.WindowRect WindowUI.IsDirty WindowUI.RequiringTooltipRect WindowUI.RequiringTooltipContent WindowUI.NotificationContent WindowUI.NotificationSubContent WindowUI.OnGameQuitting() WindowUI.UpdateUI() WindowUI.OpenWindow(int) WindowUI.CloseWindow(int) WindowUI.ForceWindowRect(IRect) WindowUI.SetDirty() WindowUI.CleanDirty() EntityUI.FirstUpdate() EntityUI.Update() EntityUI.LateUpdate() Entity.Active Entity.X Entity.Y Entity.Width Entity.Height Entity.TypeID Entity.SpawnFrame Entity.FromWorld Entity.Rect Entity.InstanceOrder Entity.MapUnitPos Entity.InstanceID Entity.IgnoreReposition Entity.XY Entity.Size Entity.Center Entity.CenterX Entity.CenterY Entity.PivotUnitPosition Entity.OnInactivated() Entity.BeforeUpdate() Entity.AfterReposition(Int3, Int3) Entity.IgnoreDespawnFromMap(int) Entity.CancelIgnoreDespawnFromMap() Entity.Draw() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Constructors MapEditor() public MapEditor() Fields LastEdittingViewH public static readonly SavingInt LastEdittingViewH Field Value SavingInt LastEdittingViewX public static readonly SavingInt LastEdittingViewX Field Value SavingInt LastEdittingViewY public static readonly SavingInt LastEdittingViewY Field Value SavingInt LastEdittingViewZ public static readonly SavingInt LastEdittingViewZ Field Value SavingInt SETTING_QUICK_PLAYER_DROP public const int SETTING_QUICK_PLAYER_DROP = 921761 Field Value int SETTING_SHOW_BEHIND public const int SETTING_SHOW_BEHIND = 921762 Field Value int SETTING_SHOW_GRID_GIZMOS public const int SETTING_SHOW_GRID_GIZMOS = 921764 Field Value int SETTING_SHOW_STATE public const int SETTING_SHOW_STATE = 921763 Field Value int TYPE_ID public static readonly int TYPE_ID Field Value int Properties BackgroundRect public override IRect BackgroundRect { get; } Property Value IRect CurrentZ public int CurrentZ { get; } Property Value int Instance public static MapEditor Instance { get; } Property Value MapEditor IsActived public static bool IsActived { get; } Property Value bool IsEditing public static bool IsEditing { get; } Property Value bool IsEditorNavigating public static bool IsEditorNavigating { get; } Property Value bool IsPlaying public static bool IsPlaying { get; } Property Value bool MapRoot public static string MapRoot { get; } Property Value string QuickPlayerDrop public static bool QuickPlayerDrop { get; set; } Property Value bool ShowBehind public static bool ShowBehind { get; set; } Property Value bool ShowGridGizmos public static bool ShowGridGizmos { get; set; } Property Value bool ShowState public static bool ShowState { get; set; } Property Value bool Methods GotoEditMode() public void GotoEditMode() GotoPlayMode() public void GotoPlayMode() OnActivated() public override void OnActivated() Save(bool) public override void Save(bool forceSave = false) Parameters forceSave bool SetView(IRect, int, bool) public void SetView(IRect view, int z, bool remapAllRenderingCells = false) Parameters view IRect z int remapAllRenderingCells bool SetViewZ(int) public void SetViewZ(int newZ) Parameters newZ int UpdateWindowUI() public override void UpdateWindowUI()"
  },
  "api/AngeliA.MapEditorBlinkParticle.html": {
    "href": "api/AngeliA.MapEditorBlinkParticle.html",
    "title": "Class MapEditorBlinkParticle | AngeliA",
    "summary": "Class MapEditorBlinkParticle Namespace AngeliA Assembly AngeliA Framework.dll [Entity.Capacity(4, 0)] public class MapEditorBlinkParticle : Particle, IMapItem Inheritance object Entity Particle MapEditorBlinkParticle Implements IMapItem Inherited Members Particle.Scale Particle.RenderingZ Particle.AutoArtworkID Particle.RenderingLayer Particle.Tint Particle.LocalFrame Particle.Rotation Particle.UserData Particle.OnActivated() Particle.BeforeUpdate() Entity.Active Entity.X Entity.Y Entity.Width Entity.Height Entity.TypeID Entity.SpawnFrame Entity.FromWorld Entity.Rect Entity.InstanceOrder Entity.MapUnitPos Entity.InstanceID Entity.IgnoreReposition Entity.XY Entity.Size Entity.Center Entity.CenterX Entity.CenterY Entity.PivotUnitPosition Entity.OnInactivated() Entity.FirstUpdate() Entity.Update() Entity.AfterReposition(Int3, Int3) Entity.IgnoreDespawnFromMap(int) Entity.CancelIgnoreDespawnFromMap() Entity.Draw() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Fields TYPE_ID public static readonly int TYPE_ID Field Value int Properties Duration public override int Duration { get; } Property Value int Loop public override bool Loop { get; } Property Value bool SpriteID public int SpriteID { get; set; } Property Value int Methods LateUpdate() public override void LateUpdate()"
  },
  "api/AngeliA.MapEditorToolbarButton.html": {
    "href": "api/AngeliA.MapEditorToolbarButton.html",
    "title": "Class MapEditorToolbarButton | AngeliA",
    "summary": "Class MapEditorToolbarButton Namespace AngeliA Assembly AngeliA Framework.dll public abstract class MapEditorToolbarButton Inheritance object MapEditorToolbarButton Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Properties Active public virtual Func<bool> Active { get; } Property Value Func<bool> Enable public virtual Func<bool> Enable { get; } Property Value Func<bool> Func public abstract Action Func { get; } Property Value Action Icon public abstract SpriteCode Icon { get; } Property Value SpriteCode Order public virtual int Order { get; } Property Value int Tip public abstract LanguageCode Tip { get; } Property Value LanguageCode Methods ButtonGUI(IRect) public virtual void ButtonGUI(IRect rect) Parameters rect IRect"
  },
  "api/AngeliA.MenuUI.html": {
    "href": "api/AngeliA.MenuUI.html",
    "title": "Class MenuUI | AngeliA",
    "summary": "Class MenuUI Namespace AngeliA Assembly AngeliA Framework.dll public abstract class MenuUI : EntityUI, IMapItem, IWindowEntityUI Inheritance object Entity EntityUI MenuUI Implements IMapItem IWindowEntityUI Derived GenericDialogUI PauseMenuUI Inherited Members EntityUI.FirstUpdate() EntityUI.Update() EntityUI.LateUpdate() EntityUI.Unify(int) Entity.Active Entity.X Entity.Y Entity.Width Entity.Height Entity.TypeID Entity.SpawnFrame Entity.FromWorld Entity.Rect Entity.InstanceOrder Entity.MapUnitPos Entity.InstanceID Entity.IgnoreReposition Entity.XY Entity.Size Entity.Center Entity.CenterX Entity.CenterY Entity.PivotUnitPosition Entity.OnInactivated() Entity.AfterReposition(Int3, Int3) Entity.IgnoreDespawnFromMap(int) Entity.CancelIgnoreDespawnFromMap() Entity.Draw() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Fields AllowMouseClick protected bool AllowMouseClick Field Value bool AnimationAmount protected int AnimationAmount Field Value int ArrowMarkCode protected SpriteCode ArrowMarkCode Field Value SpriteCode BackgroundCode protected SpriteCode BackgroundCode Field Value SpriteCode BackgroundTint protected Color32 BackgroundTint Field Value Color32 ContentPadding protected Int4 ContentPadding Field Value Int4 Interactable protected bool Interactable Field Value bool ItemGap protected int ItemGap Field Value int ItemHeight protected int ItemHeight Field Value int MaxItemCount protected int MaxItemCount Field Value int MoreItemMarkCode protected SpriteCode MoreItemMarkCode Field Value SpriteCode MoreMarkSize protected Int2 MoreMarkSize Field Value Int2 MoreMarkTint protected Color32 MoreMarkTint Field Value Color32 MouseHighlightTint protected Color32 MouseHighlightTint Field Value Color32 QuitOnPressStartOrEscKey protected bool QuitOnPressStartOrEscKey Field Value bool ScreenTint protected Color32 ScreenTint Field Value Color32 SelectionArrowMarkSize protected Int2 SelectionArrowMarkSize Field Value Int2 SelectionMarkCode protected SpriteCode SelectionMarkCode Field Value SpriteCode SelectionMarkSize protected Int2 SelectionMarkSize Field Value Int2 SelectionMarkTint protected Color32 SelectionMarkTint Field Value Color32 WindowWidth protected int WindowWidth Field Value int Properties AnimationDuration public int AnimationDuration { get; set; } Property Value int BackgroundRect public IRect BackgroundRect { get; } Property Value IRect BackgroundStyle protected GUIStyle BackgroundStyle { get; set; } Property Value GUIStyle BlockEvent protected override bool BlockEvent { get; } Property Value bool DefaultContentStyle protected GUIStyle DefaultContentStyle { get; init; } Property Value GUIStyle DefaultLabelStyle protected GUIStyle DefaultLabelStyle { get; init; } Property Value GUIStyle Message public string Message { get; set; } Property Value string MessageStyle protected GUIStyle MessageStyle { get; set; } Property Value GUIStyle OverrideWindowWidth public int OverrideWindowWidth { get; set; } Property Value int SelectionAdjustable public bool SelectionAdjustable { get; } Property Value bool SelectionIndex public int SelectionIndex { get; } Property Value int Methods BeforeUpdate() public override void BeforeUpdate() DrawArrowItem(string, char[], bool, bool, out int, int, GUIStyle, GUIStyle, bool) protected bool DrawArrowItem(string label, char[] chars, bool leftArrow, bool rightArrow, out int delta, int icon = 0, GUIStyle labelStyle = null, GUIStyle contentStyle = null, bool drawStyleBody = false) Parameters label string chars char[] leftArrow bool rightArrow bool delta int icon int labelStyle GUIStyle contentStyle GUIStyle drawStyleBody bool Returns bool DrawArrowItem(string, string, bool, bool, out int, int, GUIStyle, GUIStyle, bool) protected bool DrawArrowItem(string label, string content, bool leftArrow, bool rightArrow, out int delta, int icon = 0, GUIStyle labelStyle = null, GUIStyle contentStyle = null, bool drawStyleBody = false) Parameters label string content string leftArrow bool rightArrow bool delta int icon int labelStyle GUIStyle contentStyle GUIStyle drawStyleBody bool Returns bool DrawItem(string, char[], int, GUIStyle, GUIStyle, bool) protected bool DrawItem(string label, char[] chars, int icon = 0, GUIStyle labelStyle = null, GUIStyle contentStyle = null, bool drawStyleBody = false) Parameters label string chars char[] icon int labelStyle GUIStyle contentStyle GUIStyle drawStyleBody bool Returns bool DrawItem(string, int, GUIStyle, GUIStyle, bool) protected bool DrawItem(string label, int icon = 0, GUIStyle labelStyle = null, GUIStyle contentStyle = null, bool drawStyleBody = false) Parameters label string icon int labelStyle GUIStyle contentStyle GUIStyle drawStyleBody bool Returns bool DrawItem(string, string, int, GUIStyle, GUIStyle, bool) protected bool DrawItem(string label, string content, int icon = 0, GUIStyle labelStyle = null, GUIStyle contentStyle = null, bool drawStyleBody = false) Parameters label string content string icon int labelStyle GUIStyle contentStyle GUIStyle drawStyleBody bool Returns bool DrawMenu() protected abstract void DrawMenu() GetWindowRect() protected virtual IRect GetWindowRect() Returns IRect OnActivated() public override void OnActivated() OnSelectionChanged() protected virtual void OnSelectionChanged() RefreshAnimation() protected void RefreshAnimation() SetSelection(int) protected void SetSelection(int index) Parameters index int UpdateUI() public override void UpdateUI()"
  },
  "api/AngeliA.MethodTask.html": {
    "href": "api/AngeliA.MethodTask.html",
    "title": "Class MethodTask | AngeliA",
    "summary": "Class MethodTask Namespace AngeliA Assembly AngeliA Framework.dll public class MethodTask : Task Inheritance object Task MethodTask Inherited Members Task.LocalFrame Task.UserData Task.OnStart() Task.OnEnd() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Fields TYPE_ID public static readonly int TYPE_ID Field Value int Methods FrameUpdate() public override TaskResult FrameUpdate() Returns TaskResult"
  },
  "api/AngeliA.ModularBodySuit.html": {
    "href": "api/AngeliA.ModularBodySuit.html",
    "title": "Class ModularBodySuit | AngeliA",
    "summary": "Class ModularBodySuit Namespace AngeliA Assembly AngeliA Framework.dll public sealed class ModularBodySuit : BodyCloth Inheritance object Cloth BodyCloth ModularBodySuit Inherited Members BodyCloth.ClothType BodyCloth.SpriteLoaded BodyCloth.FillFromSheet(string) BodyCloth.DrawCloth(PoseCharacterRenderer) BodyCloth.DrawClothGizmos(IRect, Color32, int) BodyCloth.DrawClothFromPool(PoseCharacterRenderer) BodyCloth.DrawClothForBody(PoseCharacterRenderer, OrientedSprite, int, int) BodyCloth.DrawClothForShoulder(PoseCharacterRenderer, OrientedSprite, OrientedSprite, int) BodyCloth.DrawClothForUpperArm(PoseCharacterRenderer, OrientedSprite, OrientedSprite, int) BodyCloth.DrawClothForLowerArm(PoseCharacterRenderer, OrientedSprite, OrientedSprite, int) BodyCloth.DrawCape(PoseCharacterRenderer, OrientedSprite, int) Cloth.ClothSystemReady Cloth.ClothID Cloth.ClothName Cloth.SheetIndex Cloth.HasCloth(int) Cloth.TryGetCloth(int, out Cloth) Cloth.GetDefaultClothID(int, ClothType) Cloth.ForAllCloth() Cloth.AttachClothOn(BodyPart, AngeSprite, int, int, int, int, int, int, int, int, bool) Cloth.CoverClothOn(BodyPart, AngeSprite) Cloth.CoverClothOn(BodyPart, AngeSprite, int) Cloth.CoverClothOn(BodyPart, AngeSprite, int, Color32, bool) Cloth.GetDisplayName(out int) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Properties ModularName public string ModularName { get; } Property Value string"
  },
  "api/AngeliA.ModularEar.html": {
    "href": "api/AngeliA.ModularEar.html",
    "title": "Class ModularEar | AngeliA",
    "summary": "Class ModularEar Namespace AngeliA Assembly AngeliA Framework.dll public sealed class ModularEar : Ear Inheritance object BodyGadget Ear ModularEar Inherited Members Ear.GadgetType Ear.SpriteLoaded Ear.SpriteEarLeft Ear.SpriteEarRight Ear.DrawGadget(PoseCharacterRenderer) Ear.DrawGadgetGizmos(IRect, Color32, int) Ear.FillFromSheet(string) Ear.DrawGadgetFromPool(PoseCharacterRenderer) Ear.DrawSpriteAsEar(PoseCharacterRenderer, OrientedSprite, OrientedSprite, bool, bool, int, bool) BodyGadget.BodyGadgetSystemReady BodyGadget.SheetIndex BodyGadget.GadgetID BodyGadget.GadgetName BodyGadget.ForAllGadget() BodyGadget.GetDefaultGadgetID(int, BodyGadgetType) BodyGadget.TryGetGadget(int, out BodyGadget) BodyGadget.GetDisplayName(string, out int) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.ModularFace.html": {
    "href": "api/AngeliA.ModularFace.html",
    "title": "Class ModularFace | AngeliA",
    "summary": "Class ModularFace Namespace AngeliA Assembly AngeliA Framework.dll public sealed class ModularFace : Face Inheritance object BodyGadget Face ModularFace Inherited Members Face.GadgetType Face.SpriteLoaded Face.DrawGadget(PoseCharacterRenderer) Face.DrawGadgetGizmos(IRect, Color32, int) Face.FillFromSheet(string) Face.GetFaceRect(PoseCharacterRenderer, out IRect) Face.GetScleraRect(PoseCharacterRenderer, bool) Face.DrawGadgetFromPool(PoseCharacterRenderer) Face.DrawSpriteAsHumanEar(PoseCharacterRenderer, OrientedSprite, OrientedSprite, int, int) Face.GetCurrentExpression(PoseCharacterRenderer) BodyGadget.BodyGadgetSystemReady BodyGadget.SheetIndex BodyGadget.GadgetID BodyGadget.GadgetName BodyGadget.ForAllGadget() BodyGadget.GetDefaultGadgetID(int, BodyGadgetType) BodyGadget.TryGetGadget(int, out BodyGadget) BodyGadget.GetDisplayName(string, out int) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.ModularFootSuit.html": {
    "href": "api/AngeliA.ModularFootSuit.html",
    "title": "Class ModularFootSuit | AngeliA",
    "summary": "Class ModularFootSuit Namespace AngeliA Assembly AngeliA Framework.dll public sealed class ModularFootSuit : FootCloth Inheritance object Cloth FootCloth ModularFootSuit Inherited Members FootCloth.ClothType FootCloth.SpriteLoaded FootCloth.FillFromSheet(string) FootCloth.DrawClothFromPool(PoseCharacterRenderer) FootCloth.DrawCloth(PoseCharacterRenderer) FootCloth.DrawClothGizmos(IRect, Color32, int) FootCloth.DrawClothForFoot(PoseCharacterRenderer, OrientedSprite, OrientedSprite, int) Cloth.ClothSystemReady Cloth.ClothID Cloth.ClothName Cloth.SheetIndex Cloth.HasCloth(int) Cloth.TryGetCloth(int, out Cloth) Cloth.GetDefaultClothID(int, ClothType) Cloth.ForAllCloth() Cloth.AttachClothOn(BodyPart, AngeSprite, int, int, int, int, int, int, int, int, bool) Cloth.CoverClothOn(BodyPart, AngeSprite) Cloth.CoverClothOn(BodyPart, AngeSprite, int) Cloth.CoverClothOn(BodyPart, AngeSprite, int, Color32, bool) Cloth.GetDisplayName(out int) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Properties ModularName public string ModularName { get; } Property Value string"
  },
  "api/AngeliA.ModularHair.html": {
    "href": "api/AngeliA.ModularHair.html",
    "title": "Class ModularHair | AngeliA",
    "summary": "Class ModularHair Namespace AngeliA Assembly AngeliA Framework.dll public sealed class ModularHair : Hair Inheritance object BodyGadget Hair ModularHair Inherited Members Hair.GadgetType Hair.SpriteLoaded Hair.SpriteHairForward Hair.SpriteHairBackward Hair.SpriteBraidLeft Hair.SpriteBraidRight Hair.DrawGadget(PoseCharacterRenderer) Hair.DrawGadgetGizmos(IRect, Color32, int) Hair.FillFromSheet(string) Hair.DrawGadgetFromPool(PoseCharacterRenderer) Hair.DrawSpriteAsHair(PoseCharacterRenderer, OrientedSprite, OrientedSprite, int, int) Hair.DrawBraid(PoseCharacterRenderer, bool, OrientedSprite, OrientedSprite, int, int, int, int, bool, int, int) BodyGadget.BodyGadgetSystemReady BodyGadget.SheetIndex BodyGadget.GadgetID BodyGadget.GadgetName BodyGadget.ForAllGadget() BodyGadget.GetDefaultGadgetID(int, BodyGadgetType) BodyGadget.TryGetGadget(int, out BodyGadget) BodyGadget.GetDisplayName(string, out int) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.ModularHandSuit.html": {
    "href": "api/AngeliA.ModularHandSuit.html",
    "title": "Class ModularHandSuit | AngeliA",
    "summary": "Class ModularHandSuit Namespace AngeliA Assembly AngeliA Framework.dll public sealed class ModularHandSuit : HandCloth Inheritance object Cloth HandCloth ModularHandSuit Inherited Members HandCloth.ClothType HandCloth.SpriteLoaded HandCloth.FillFromSheet(string) HandCloth.DrawClothFromPool(PoseCharacterRenderer) HandCloth.DrawCloth(PoseCharacterRenderer) HandCloth.DrawClothGizmos(IRect, Color32, int) HandCloth.DrawClothForHand(PoseCharacterRenderer, OrientedSprite, OrientedSprite, int) Cloth.ClothSystemReady Cloth.ClothID Cloth.ClothName Cloth.SheetIndex Cloth.HasCloth(int) Cloth.TryGetCloth(int, out Cloth) Cloth.GetDefaultClothID(int, ClothType) Cloth.ForAllCloth() Cloth.AttachClothOn(BodyPart, AngeSprite, int, int, int, int, int, int, int, int, bool) Cloth.CoverClothOn(BodyPart, AngeSprite) Cloth.CoverClothOn(BodyPart, AngeSprite, int) Cloth.CoverClothOn(BodyPart, AngeSprite, int, Color32, bool) Cloth.GetDisplayName(out int) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Properties ModularName public string ModularName { get; } Property Value string"
  },
  "api/AngeliA.ModularHeadSuit.html": {
    "href": "api/AngeliA.ModularHeadSuit.html",
    "title": "Class ModularHeadSuit | AngeliA",
    "summary": "Class ModularHeadSuit Namespace AngeliA Assembly AngeliA Framework.dll public sealed class ModularHeadSuit : HeadCloth Inheritance object Cloth HeadCloth ModularHeadSuit Inherited Members HeadCloth.ClothType HeadCloth.SpriteLoaded HeadCloth.FillFromSheet(string) HeadCloth.DrawClothFromPool(PoseCharacterRenderer) HeadCloth.DrawCloth(PoseCharacterRenderer) HeadCloth.DrawClothGizmos(IRect, Color32, int) HeadCloth.DrawClothForHead(PoseCharacterRenderer, OrientedSprite) Cloth.ClothSystemReady Cloth.ClothID Cloth.ClothName Cloth.SheetIndex Cloth.HasCloth(int) Cloth.TryGetCloth(int, out Cloth) Cloth.GetDefaultClothID(int, ClothType) Cloth.ForAllCloth() Cloth.AttachClothOn(BodyPart, AngeSprite, int, int, int, int, int, int, int, int, bool) Cloth.CoverClothOn(BodyPart, AngeSprite) Cloth.CoverClothOn(BodyPart, AngeSprite, int) Cloth.CoverClothOn(BodyPart, AngeSprite, int, Color32, bool) Cloth.GetDisplayName(out int) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Properties ModularName public string ModularName { get; } Property Value string"
  },
  "api/AngeliA.ModularHipSuit.html": {
    "href": "api/AngeliA.ModularHipSuit.html",
    "title": "Class ModularHipSuit | AngeliA",
    "summary": "Class ModularHipSuit Namespace AngeliA Assembly AngeliA Framework.dll public sealed class ModularHipSuit : HipCloth Inheritance object Cloth HipCloth ModularHipSuit Inherited Members HipCloth.ClothType HipCloth.SpriteLoaded HipCloth.FillFromSheet(string) HipCloth.DrawClothFromPool(PoseCharacterRenderer) HipCloth.DrawCloth(PoseCharacterRenderer) HipCloth.DrawClothGizmos(IRect, Color32, int) HipCloth.DrawClothAsPants(PoseCharacterRenderer, OrientedSprite, int) HipCloth.DrawClothAsSkirt(PoseCharacterRenderer, OrientedSprite, int, int) HipCloth.DrawClothForUpperLeg(PoseCharacterRenderer, OrientedSprite, OrientedSprite, int) HipCloth.DrawClothForLowerLeg(PoseCharacterRenderer, OrientedSprite, OrientedSprite, int) HipCloth.DrawDoubleClothTailsOnHip(PoseCharacterRenderer, OrientedSprite, bool) HipCloth.DrawSingleClothTail(PoseCharacterRenderer, AngeSprite, int, int, int, int, int, int, int) Cloth.ClothSystemReady Cloth.ClothID Cloth.ClothName Cloth.SheetIndex Cloth.HasCloth(int) Cloth.TryGetCloth(int, out Cloth) Cloth.GetDefaultClothID(int, ClothType) Cloth.ForAllCloth() Cloth.AttachClothOn(BodyPart, AngeSprite, int, int, int, int, int, int, int, int, bool) Cloth.CoverClothOn(BodyPart, AngeSprite) Cloth.CoverClothOn(BodyPart, AngeSprite, int) Cloth.CoverClothOn(BodyPart, AngeSprite, int, Color32, bool) Cloth.GetDisplayName(out int) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Properties ModularName public string ModularName { get; } Property Value string"
  },
  "api/AngeliA.ModularHorn.html": {
    "href": "api/AngeliA.ModularHorn.html",
    "title": "Class ModularHorn | AngeliA",
    "summary": "Class ModularHorn Namespace AngeliA Assembly AngeliA Framework.dll public sealed class ModularHorn : Horn Inheritance object BodyGadget Horn ModularHorn Inherited Members Horn.GadgetType Horn.SpriteLoaded Horn.SpriteHornLeft Horn.SpriteHornRight Horn.DrawGadget(PoseCharacterRenderer) Horn.DrawGadgetGizmos(IRect, Color32, int) Horn.FillFromSheet(string) Horn.DrawGadgetFromPool(PoseCharacterRenderer) Horn.DrawSpriteAsHorn(PoseCharacterRenderer, OrientedSprite, OrientedSprite, bool, bool, bool) BodyGadget.BodyGadgetSystemReady BodyGadget.SheetIndex BodyGadget.GadgetID BodyGadget.GadgetName BodyGadget.ForAllGadget() BodyGadget.GetDefaultGadgetID(int, BodyGadgetType) BodyGadget.TryGetGadget(int, out BodyGadget) BodyGadget.GetDisplayName(string, out int) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.ModularTail.html": {
    "href": "api/AngeliA.ModularTail.html",
    "title": "Class ModularTail | AngeliA",
    "summary": "Class ModularTail Namespace AngeliA Assembly AngeliA Framework.dll public sealed class ModularTail : Tail Inheritance object BodyGadget Tail ModularTail Inherited Members Tail.GadgetType Tail.SpriteLoaded Tail.SpriteTail Tail.DrawGadget(PoseCharacterRenderer) Tail.DrawGadgetGizmos(IRect, Color32, int) Tail.FillFromSheet(string) Tail.DrawGadgetFromPool(PoseCharacterRenderer) Tail.DrawSpriteAsWhipTail(OrientedSprite, int, int, bool, bool, bool, int, int, int, int, int, int, int, int, int, int, bool, int, int) Tail.DrawSpriteAsSimpleTail(OrientedSprite, int, int, bool, bool, bool, int) BodyGadget.BodyGadgetSystemReady BodyGadget.SheetIndex BodyGadget.GadgetID BodyGadget.GadgetName BodyGadget.ForAllGadget() BodyGadget.GetDefaultGadgetID(int, BodyGadgetType) BodyGadget.TryGetGadget(int, out BodyGadget) BodyGadget.GetDisplayName(string, out int) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.ModularWing.html": {
    "href": "api/AngeliA.ModularWing.html",
    "title": "Class ModularWing | AngeliA",
    "summary": "Class ModularWing Namespace AngeliA Assembly AngeliA Framework.dll public sealed class ModularWing : Wing Inheritance object BodyGadget Wing ModularWing Inherited Members Wing.IsPropeller Wing.SpriteLoaded Wing.GadgetType Wing.SpriteWing Wing.DrawGadget(PoseCharacterRenderer) Wing.DrawGadgetGizmos(IRect, Color32, int) Wing.FillFromSheet(string) Wing.DrawGadgetFromPool(PoseCharacterRenderer) Wing.DrawSpriteAsWing(PoseCharacterRenderer, OrientedSprite, bool, int) Wing.IsPropellerWing(int) BodyGadget.BodyGadgetSystemReady BodyGadget.SheetIndex BodyGadget.GadgetID BodyGadget.GadgetName BodyGadget.ForAllGadget() BodyGadget.GetDefaultGadgetID(int, BodyGadgetType) BodyGadget.TryGetGadget(int, out BodyGadget) BodyGadget.GetDisplayName(string, out int) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.MovementEditor.html": {
    "href": "api/AngeliA.MovementEditor.html",
    "title": "Class MovementEditor | AngeliA",
    "summary": "Class MovementEditor Namespace AngeliA Assembly AngeliA Framework.dll public class MovementEditor Inheritance object MovementEditor Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Fields SETTING_PANEL public const int SETTING_PANEL = 3632167 Field Value int"
  },
  "api/AngeliA.MusicData.html": {
    "href": "api/AngeliA.MusicData.html",
    "title": "Class MusicData | AngeliA",
    "summary": "Class MusicData Namespace AngeliA Assembly AngeliA Framework.dll public class MusicData : AudioData Inheritance object AudioData MusicData Inherited Members AudioData.ID AudioData.Name AudioData.Path object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.NoItemCombinationAttribute.html": {
    "href": "api/AngeliA.NoItemCombinationAttribute.html",
    "title": "Class NoItemCombinationAttribute | AngeliA",
    "summary": "Class NoItemCombinationAttribute Namespace AngeliA Assembly AngeliA Framework.dll Indicates to the system that this item does not require crafting combination [AttributeUsage(AttributeTargets.Class, AllowMultiple = true)] public class NoItemCombinationAttribute : Attribute Inheritance object Attribute NoItemCombinationAttribute Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.NoiseMatching.html": {
    "href": "api/AngeliA.NoiseMatching.html",
    "title": "Enum NoiseMatching | AngeliA",
    "summary": "Enum NoiseMatching Namespace AngeliA Assembly AngeliA Framework.dll public enum NoiseMatching Extension Methods Extension.Next<E>(E) Extension.Prev<E>(E) Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Fields Disable = 4 Divide = 3 Minus = 1 Multiply = 2 Plus = 0"
  },
  "api/AngeliA.NonStackableItem.html": {
    "href": "api/AngeliA.NonStackableItem.html",
    "title": "Class NonStackableItem | AngeliA",
    "summary": "Class NonStackableItem Namespace AngeliA Assembly AngeliA Framework.dll public abstract class NonStackableItem : Item, IMapItem Inheritance object Item NonStackableItem Implements IMapItem Derived BodyGadgetItem BodySetItem ClothItem Inherited Members Item.AllowDuplicateUpdate Item.EmbedIntoLevel Item.TypeID Item.BeforeItemUpdate_FromInventory(Character, int, int) Item.OnItemUpdate_FromInventory(Character, int, int) Item.OnPoseAnimationUpdate_FromInventory(PoseCharacterRenderer, int, int) Item.OnTakeDamage_FromInventory(Character, int, int, ref Damage) Item.OnCharacterAttack_FromInventory(Character, Bullet, int, int) Item.BeforeItemUpdate_FromEquipment(Character) Item.OnItemUpdate_FromEquipment(Character) Item.BeforePoseAnimationUpdate_FromEquipment(PoseCharacterRenderer) Item.OnPoseAnimationUpdate_FromEquipment(PoseCharacterRenderer) Item.OnTakeDamage_FromEquipment(Character, ref Damage) Item.OnCharacterAttack_FromEquipment(Character, Bullet) Item.TryRepairEquipment(Character) Item.OnItemUpdate_FromItemHolder(ItemHolder, int) Item.OnCollect(Character) Item.CanUse(Character) Item.Use(Character, int, int, out bool) Item.ItemConditionCheck(Character) Item.DrawItem(Entity, IRect, Color32, int) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Properties MaxStackCount public override sealed int MaxStackCount { get; } Property Value int"
  },
  "api/AngeliA.NotificationUI.html": {
    "href": "api/AngeliA.NotificationUI.html",
    "title": "Class NotificationUI | AngeliA",
    "summary": "Class NotificationUI Namespace AngeliA Assembly AngeliA Framework.dll [Entity.Capacity(6, 0)] public class NotificationUI : EntityUI, IMapItem Inheritance object Entity EntityUI NotificationUI Implements IMapItem Inherited Members EntityUI.BlockEvent EntityUI.FirstUpdate() EntityUI.LateUpdate() EntityUI.Unify(int) Entity.Active Entity.X Entity.Y Entity.Width Entity.Height Entity.TypeID Entity.SpawnFrame Entity.FromWorld Entity.Rect Entity.InstanceOrder Entity.MapUnitPos Entity.InstanceID Entity.IgnoreReposition Entity.XY Entity.Size Entity.Center Entity.CenterX Entity.CenterY Entity.PivotUnitPosition Entity.OnInactivated() Entity.AfterReposition(Int3, Int3) Entity.IgnoreDespawnFromMap(int) Entity.CancelIgnoreDespawnFromMap() Entity.Draw() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Methods BeforeUpdate() public override void BeforeUpdate() OnActivated() public override void OnActivated() SpawnNotification(string, int) public static void SpawnNotification(string content, int icon = -2147483648) Parameters content string icon int Update() public override void Update() UpdateUI() public override void UpdateUI()"
  },
  "api/AngeliA.NumberEight.html": {
    "href": "api/AngeliA.NumberEight.html",
    "title": "Class NumberEight | AngeliA",
    "summary": "Class NumberEight Namespace AngeliA Assembly AngeliA Framework.dll [Entity.MapEditorGroup(\"System\", -512)] public sealed class NumberEight : IMapItem Inheritance object NumberEight Implements IMapItem Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Fields TYPE_ID public static readonly int TYPE_ID Field Value int"
  },
  "api/AngeliA.NumberFive.html": {
    "href": "api/AngeliA.NumberFive.html",
    "title": "Class NumberFive | AngeliA",
    "summary": "Class NumberFive Namespace AngeliA Assembly AngeliA Framework.dll [Entity.MapEditorGroup(\"System\", -512)] public sealed class NumberFive : IMapItem Inheritance object NumberFive Implements IMapItem Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Fields TYPE_ID public static readonly int TYPE_ID Field Value int"
  },
  "api/AngeliA.NumberFour.html": {
    "href": "api/AngeliA.NumberFour.html",
    "title": "Class NumberFour | AngeliA",
    "summary": "Class NumberFour Namespace AngeliA Assembly AngeliA Framework.dll [Entity.MapEditorGroup(\"System\", -512)] public sealed class NumberFour : IMapItem Inheritance object NumberFour Implements IMapItem Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Fields TYPE_ID public static readonly int TYPE_ID Field Value int"
  },
  "api/AngeliA.NumberNine.html": {
    "href": "api/AngeliA.NumberNine.html",
    "title": "Class NumberNine | AngeliA",
    "summary": "Class NumberNine Namespace AngeliA Assembly AngeliA Framework.dll [Entity.MapEditorGroup(\"System\", -512)] public sealed class NumberNine : IMapItem Inheritance object NumberNine Implements IMapItem Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Fields TYPE_ID public static readonly int TYPE_ID Field Value int"
  },
  "api/AngeliA.NumberOne.html": {
    "href": "api/AngeliA.NumberOne.html",
    "title": "Class NumberOne | AngeliA",
    "summary": "Class NumberOne Namespace AngeliA Assembly AngeliA Framework.dll [Entity.MapEditorGroup(\"System\", -512)] public sealed class NumberOne : IMapItem Inheritance object NumberOne Implements IMapItem Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Fields TYPE_ID public static readonly int TYPE_ID Field Value int"
  },
  "api/AngeliA.NumberSeven.html": {
    "href": "api/AngeliA.NumberSeven.html",
    "title": "Class NumberSeven | AngeliA",
    "summary": "Class NumberSeven Namespace AngeliA Assembly AngeliA Framework.dll [Entity.MapEditorGroup(\"System\", -512)] public sealed class NumberSeven : IMapItem Inheritance object NumberSeven Implements IMapItem Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Fields TYPE_ID public static readonly int TYPE_ID Field Value int"
  },
  "api/AngeliA.NumberSix.html": {
    "href": "api/AngeliA.NumberSix.html",
    "title": "Class NumberSix | AngeliA",
    "summary": "Class NumberSix Namespace AngeliA Assembly AngeliA Framework.dll [Entity.MapEditorGroup(\"System\", -512)] public sealed class NumberSix : IMapItem Inheritance object NumberSix Implements IMapItem Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Fields TYPE_ID public static readonly int TYPE_ID Field Value int"
  },
  "api/AngeliA.NumberThree.html": {
    "href": "api/AngeliA.NumberThree.html",
    "title": "Class NumberThree | AngeliA",
    "summary": "Class NumberThree Namespace AngeliA Assembly AngeliA Framework.dll [Entity.MapEditorGroup(\"System\", -512)] public sealed class NumberThree : IMapItem Inheritance object NumberThree Implements IMapItem Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Fields TYPE_ID public static readonly int TYPE_ID Field Value int"
  },
  "api/AngeliA.NumberTwo.html": {
    "href": "api/AngeliA.NumberTwo.html",
    "title": "Class NumberTwo | AngeliA",
    "summary": "Class NumberTwo Namespace AngeliA Assembly AngeliA Framework.dll [Entity.MapEditorGroup(\"System\", -512)] public sealed class NumberTwo : IMapItem Inheritance object NumberTwo Implements IMapItem Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Fields TYPE_ID public static readonly int TYPE_ID Field Value int"
  },
  "api/AngeliA.NumberZero.html": {
    "href": "api/AngeliA.NumberZero.html",
    "title": "Class NumberZero | AngeliA",
    "summary": "Class NumberZero Namespace AngeliA Assembly AngeliA Framework.dll [Entity.MapEditorGroup(\"System\", -512)] public sealed class NumberZero : IMapItem Inheritance object NumberZero Implements IMapItem Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Fields TYPE_ID public static readonly int TYPE_ID Field Value int"
  },
  "api/AngeliA.OnBlockPicked_IntSpriteID_IRectAttribute.html": {
    "href": "api/AngeliA.OnBlockPicked_IntSpriteID_IRectAttribute.html",
    "title": "Class OnBlockPicked_IntSpriteID_IRectAttribute | AngeliA",
    "summary": "Class OnBlockPicked_IntSpriteID_IRectAttribute Namespace AngeliA Assembly AngeliA Framework.dll The function will be called when a map block has been picked public class OnBlockPicked_IntSpriteID_IRectAttribute : EventAttribute Inheritance object Attribute OrderedAttribute EventAttribute OnBlockPicked_IntSpriteID_IRectAttribute Inherited Members OrderedAttribute.InvokeAsAutoOrderingTask<A>() Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Examples internal static void ExampleFunction (int spriteID, IRect rectPosition) { }"
  },
  "api/AngeliA.OnBulletHitEnvironment_Bullet.html": {
    "href": "api/AngeliA.OnBulletHitEnvironment_Bullet.html",
    "title": "Class OnBulletHitEnvironment_Bullet | AngeliA",
    "summary": "Class OnBulletHitEnvironment_Bullet Namespace AngeliA Assembly AngeliA Framework.dll The function will be called when a bullet hit environment (something not an IDamageReceiver) public class OnBulletHitEnvironment_Bullet : EventAttribute Inheritance object Attribute OrderedAttribute EventAttribute OnBulletHitEnvironment_Bullet Inherited Members OrderedAttribute.InvokeAsAutoOrderingTask<A>() Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Examples internal static void ExampleFunction (Bullet bullet) { }"
  },
  "api/AngeliA.OnCameOutOfWater_Rigidbody_EntityAttribute.html": {
    "href": "api/AngeliA.OnCameOutOfWater_Rigidbody_EntityAttribute.html",
    "title": "Class OnCameOutOfWater_Rigidbody_EntityAttribute | AngeliA",
    "summary": "Class OnCameOutOfWater_Rigidbody_EntityAttribute Namespace AngeliA Assembly AngeliA Framework.dll The function will be called when a rigidbody came out of water public class OnCameOutOfWater_Rigidbody_EntityAttribute : EventAttribute Inheritance object Attribute OrderedAttribute EventAttribute OnCameOutOfWater_Rigidbody_EntityAttribute Inherited Members OrderedAttribute.InvokeAsAutoOrderingTask<A>() Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Examples internal static void ExampleFunction (Rigidbody rig, Entity water) { }"
  },
  "api/AngeliA.OnCharacterCrash_Entity.html": {
    "href": "api/AngeliA.OnCharacterCrash_Entity.html",
    "title": "Class OnCharacterCrash_Entity | AngeliA",
    "summary": "Class OnCharacterCrash_Entity Namespace AngeliA Assembly AngeliA Framework.dll The function will be called when a character crash public class OnCharacterCrash_Entity : EventAttribute Inheritance object Attribute OrderedAttribute EventAttribute OnCharacterCrash_Entity Inherited Members OrderedAttribute.InvokeAsAutoOrderingTask<A>() Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Examples internal static void ExampleFunction (Entity character) { }"
  },
  "api/AngeliA.OnCharacterFly_Entity.html": {
    "href": "api/AngeliA.OnCharacterFly_Entity.html",
    "title": "Class OnCharacterFly_Entity | AngeliA",
    "summary": "Class OnCharacterFly_Entity Namespace AngeliA Assembly AngeliA Framework.dll The function will be called when a character fly public class OnCharacterFly_Entity : EventAttribute Inheritance object Attribute OrderedAttribute EventAttribute OnCharacterFly_Entity Inherited Members OrderedAttribute.InvokeAsAutoOrderingTask<A>() Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Examples internal static void ExampleFunction (Entity character) { }"
  },
  "api/AngeliA.OnCharacterFootStepped_Entity.html": {
    "href": "api/AngeliA.OnCharacterFootStepped_Entity.html",
    "title": "Class OnCharacterFootStepped_Entity | AngeliA",
    "summary": "Class OnCharacterFootStepped_Entity Namespace AngeliA Assembly AngeliA Framework.dll The function will be called when a character makes a foot step on running public class OnCharacterFootStepped_Entity : EventAttribute Inheritance object Attribute OrderedAttribute EventAttribute OnCharacterFootStepped_Entity Inherited Members OrderedAttribute.InvokeAsAutoOrderingTask<A>() Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Examples internal static void ExampleFunction (Entity character) { }"
  },
  "api/AngeliA.OnCharacterJump_Entity.html": {
    "href": "api/AngeliA.OnCharacterJump_Entity.html",
    "title": "Class OnCharacterJump_Entity | AngeliA",
    "summary": "Class OnCharacterJump_Entity Namespace AngeliA Assembly AngeliA Framework.dll The function will be called when a character jumps public class OnCharacterJump_Entity : EventAttribute Inheritance object Attribute OrderedAttribute EventAttribute OnCharacterJump_Entity Inherited Members OrderedAttribute.InvokeAsAutoOrderingTask<A>() Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Examples internal static void ExampleFunction (Entity character) { }"
  },
  "api/AngeliA.OnCharacterPassOut_Entity.html": {
    "href": "api/AngeliA.OnCharacterPassOut_Entity.html",
    "title": "Class OnCharacterPassOut_Entity | AngeliA",
    "summary": "Class OnCharacterPassOut_Entity Namespace AngeliA Assembly AngeliA Framework.dll The function will be called when a character pass out public class OnCharacterPassOut_Entity : EventAttribute Inheritance object Attribute OrderedAttribute EventAttribute OnCharacterPassOut_Entity Inherited Members OrderedAttribute.InvokeAsAutoOrderingTask<A>() Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Examples internal static void ExampleFunction (Entity character) { }"
  },
  "api/AngeliA.OnCharacterPound_Entity.html": {
    "href": "api/AngeliA.OnCharacterPound_Entity.html",
    "title": "Class OnCharacterPound_Entity | AngeliA",
    "summary": "Class OnCharacterPound_Entity Namespace AngeliA Assembly AngeliA Framework.dll The function will be called when a character ground pound public class OnCharacterPound_Entity : EventAttribute Inheritance object Attribute OrderedAttribute EventAttribute OnCharacterPound_Entity Inherited Members OrderedAttribute.InvokeAsAutoOrderingTask<A>() Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Examples internal static void ExampleFunction (Entity character) { }"
  },
  "api/AngeliA.OnCharacterSleeping_Entity.html": {
    "href": "api/AngeliA.OnCharacterSleeping_Entity.html",
    "title": "Class OnCharacterSleeping_Entity | AngeliA",
    "summary": "Class OnCharacterSleeping_Entity Namespace AngeliA Assembly AngeliA Framework.dll The function will be called when a character is sleeping public class OnCharacterSleeping_Entity : EventAttribute Inheritance object Attribute OrderedAttribute EventAttribute OnCharacterSleeping_Entity Inherited Members OrderedAttribute.InvokeAsAutoOrderingTask<A>() Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Examples internal static void ExampleFunction (Entity character) { }"
  },
  "api/AngeliA.OnCharacterSlideStepped_Entity.html": {
    "href": "api/AngeliA.OnCharacterSlideStepped_Entity.html",
    "title": "Class OnCharacterSlideStepped_Entity | AngeliA",
    "summary": "Class OnCharacterSlideStepped_Entity Namespace AngeliA Assembly AngeliA Framework.dll The function will be called when a character makes a step when sliding public class OnCharacterSlideStepped_Entity : EventAttribute Inheritance object Attribute OrderedAttribute EventAttribute OnCharacterSlideStepped_Entity Inherited Members OrderedAttribute.InvokeAsAutoOrderingTask<A>() Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Examples internal static void ExampleFunction (Entity character) { }"
  },
  "api/AngeliA.OnCharacterTeleport_Entity.html": {
    "href": "api/AngeliA.OnCharacterTeleport_Entity.html",
    "title": "Class OnCharacterTeleport_Entity | AngeliA",
    "summary": "Class OnCharacterTeleport_Entity Namespace AngeliA Assembly AngeliA Framework.dll The function will be called when a character teleport public class OnCharacterTeleport_Entity : EventAttribute Inheritance object Attribute OrderedAttribute EventAttribute OnCharacterTeleport_Entity Inherited Members OrderedAttribute.InvokeAsAutoOrderingTask<A>() Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Examples internal static void ExampleFunction (Entity character) { }"
  },
  "api/AngeliA.OnCheatPerformed_StringCodeAttribute.html": {
    "href": "api/AngeliA.OnCheatPerformed_StringCodeAttribute.html",
    "title": "Class OnCheatPerformed_StringCodeAttribute | AngeliA",
    "summary": "Class OnCheatPerformed_StringCodeAttribute Namespace AngeliA Assembly AngeliA Framework.dll The function will be called when user performed any cheat code. Cheat code can be perform like those in NES games. public class OnCheatPerformed_StringCodeAttribute : EventAttribute Inheritance object Attribute OrderedAttribute EventAttribute OnCheatPerformed_StringCodeAttribute Inherited Members OrderedAttribute.InvokeAsAutoOrderingTask<A>() Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Examples internal static void ExampleFunction (string code) { }"
  },
  "api/AngeliA.OnCircuitWireActived_Int3UnitPosAttribute.html": {
    "href": "api/AngeliA.OnCircuitWireActived_Int3UnitPosAttribute.html",
    "title": "Class OnCircuitWireActived_Int3UnitPosAttribute | AngeliA",
    "summary": "Class OnCircuitWireActived_Int3UnitPosAttribute Namespace AngeliA Assembly AngeliA Framework.dll The function will be called when CircuitSystem's electric current pass through public class OnCircuitWireActived_Int3UnitPosAttribute : EventAttribute Inheritance object Attribute OrderedAttribute EventAttribute OnCircuitWireActived_Int3UnitPosAttribute Inherited Members OrderedAttribute.InvokeAsAutoOrderingTask<A>() Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Examples internal static void ExampleFunction (Int3 unitPos) { }"
  },
  "api/AngeliA.OnDealDamage_Damage_IDamageReceiver.html": {
    "href": "api/AngeliA.OnDealDamage_Damage_IDamageReceiver.html",
    "title": "Class OnDealDamage_Damage_IDamageReceiver | AngeliA",
    "summary": "Class OnDealDamage_Damage_IDamageReceiver Namespace AngeliA Assembly AngeliA Framework.dll The function will be called when something deal damage to a damage-receiver public class OnDealDamage_Damage_IDamageReceiver : EventAttribute Inheritance object Attribute OrderedAttribute EventAttribute OnDealDamage_Damage_IDamageReceiver Inherited Members OrderedAttribute.InvokeAsAutoOrderingTask<A>() Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Examples internal static void ExampleFunction (Damage damage, IDamageReceiver receiver) { }"
  },
  "api/AngeliA.OnFallIntoWater_Rigidbody_EntityAttribute.html": {
    "href": "api/AngeliA.OnFallIntoWater_Rigidbody_EntityAttribute.html",
    "title": "Class OnFallIntoWater_Rigidbody_EntityAttribute | AngeliA",
    "summary": "Class OnFallIntoWater_Rigidbody_EntityAttribute Namespace AngeliA Assembly AngeliA Framework.dll The function will be called when a rigidbody fall into water public class OnFallIntoWater_Rigidbody_EntityAttribute : EventAttribute Inheritance object Attribute OrderedAttribute EventAttribute OnFallIntoWater_Rigidbody_EntityAttribute Inherited Members OrderedAttribute.InvokeAsAutoOrderingTask<A>() Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Examples internal static void ExampleFunction (Rigidbody rig, Entity water) { }"
  },
  "api/AngeliA.OnFileDropped_StringPathAttribute.html": {
    "href": "api/AngeliA.OnFileDropped_StringPathAttribute.html",
    "title": "Class OnFileDropped_StringPathAttribute | AngeliA",
    "summary": "Class OnFileDropped_StringPathAttribute Namespace AngeliA Assembly AngeliA Framework.dll The function will be called when user drag and drop a file into the application window public class OnFileDropped_StringPathAttribute : EventAttribute Inheritance object Attribute OrderedAttribute EventAttribute OnFileDropped_StringPathAttribute Inherited Members OrderedAttribute.InvokeAsAutoOrderingTask<A>() Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Examples internal static void ExampleFunction (string filePath) { }"
  },
  "api/AngeliA.OnGameFocusedAttribute.html": {
    "href": "api/AngeliA.OnGameFocusedAttribute.html",
    "title": "Class OnGameFocusedAttribute | AngeliA",
    "summary": "Class OnGameFocusedAttribute Namespace AngeliA Assembly AngeliA Framework.dll The function will be called when the application window regain focus. public class OnGameFocusedAttribute : EventAttribute Inheritance object Attribute OrderedAttribute EventAttribute OnGameFocusedAttribute Inherited Members OrderedAttribute.InvokeAsAutoOrderingTask<A>() Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Examples internal static void ExampleFunction () { }"
  },
  "api/AngeliA.OnGameInitializeAttribute.html": {
    "href": "api/AngeliA.OnGameInitializeAttribute.html",
    "title": "Class OnGameInitializeAttribute | AngeliA",
    "summary": "Class OnGameInitializeAttribute Namespace AngeliA Assembly AngeliA Framework.dll The function will be called when game initialize. public class OnGameInitializeAttribute : OrderedAttribute Inheritance object Attribute OrderedAttribute OnGameInitializeAttribute Inherited Members OrderedAttribute.InvokeAsAutoOrderingTask<A>() Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Examples internal static void ExampleFunction () { } Constructors OnGameInitializeAttribute(int) The function will be called when game initialize. public OnGameInitializeAttribute(int order = 0) Parameters order int Function with smaller order will be called earlier Examples internal static void ExampleFunction () { }"
  },
  "api/AngeliA.OnGameInitializeLaterAttribute.html": {
    "href": "api/AngeliA.OnGameInitializeLaterAttribute.html",
    "title": "Class OnGameInitializeLaterAttribute | AngeliA",
    "summary": "Class OnGameInitializeLaterAttribute Namespace AngeliA Assembly AngeliA Framework.dll The function will be called when game initialize but after all [OnGameInitialize] functions already called public class OnGameInitializeLaterAttribute : OrderedAttribute Inheritance object Attribute OrderedAttribute OnGameInitializeLaterAttribute Inherited Members OrderedAttribute.InvokeAsAutoOrderingTask<A>() Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Examples internal static void ExampleFunction () { } Constructors OnGameInitializeLaterAttribute(int) The function will be called when game initialize but after all [OnGameInitialize] functions already called public OnGameInitializeLaterAttribute(int order = 0) Parameters order int Function with smaller order will be called earlier Examples internal static void ExampleFunction () { }"
  },
  "api/AngeliA.OnGameLostFocusAttribute.html": {
    "href": "api/AngeliA.OnGameLostFocusAttribute.html",
    "title": "Class OnGameLostFocusAttribute | AngeliA",
    "summary": "Class OnGameLostFocusAttribute Namespace AngeliA Assembly AngeliA Framework.dll The function will be called when the application window lost focus. public class OnGameLostFocusAttribute : EventAttribute Inheritance object Attribute OrderedAttribute EventAttribute OnGameLostFocusAttribute Inherited Members OrderedAttribute.InvokeAsAutoOrderingTask<A>() Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Examples internal static void ExampleFunction () { }"
  },
  "api/AngeliA.OnGameQuittingAttribute.html": {
    "href": "api/AngeliA.OnGameQuittingAttribute.html",
    "title": "Class OnGameQuittingAttribute | AngeliA",
    "summary": "Class OnGameQuittingAttribute Namespace AngeliA Assembly AngeliA Framework.dll The function will be called before the application actually quit. public class OnGameQuittingAttribute : EventAttribute Inheritance object Attribute OrderedAttribute EventAttribute OnGameQuittingAttribute Inherited Members OrderedAttribute.InvokeAsAutoOrderingTask<A>() Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Examples internal static void ExampleFunction () { } Constructors OnGameQuittingAttribute(int) The function will be called before the application actually quit. public OnGameQuittingAttribute(int order = 0) Parameters order int Function with smaller order will be called earlier Examples internal static void ExampleFunction () { }"
  },
  "api/AngeliA.OnGameRestartAttribute.html": {
    "href": "api/AngeliA.OnGameRestartAttribute.html",
    "title": "Class OnGameRestartAttribute | AngeliA",
    "summary": "Class OnGameRestartAttribute Namespace AngeliA Assembly AngeliA Framework.dll The function will be called when game restart. public class OnGameRestartAttribute : EventAttribute Inheritance object Attribute OrderedAttribute EventAttribute OnGameRestartAttribute Inherited Members OrderedAttribute.InvokeAsAutoOrderingTask<A>() Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Examples internal static void ExampleFunction () { } Constructors OnGameRestartAttribute(int) The function will be called when game restart. public OnGameRestartAttribute(int order = 0) Parameters order int Function with smaller order will be called earlier Examples internal static void ExampleFunction () { }"
  },
  "api/AngeliA.OnGameTryingToQuitAttribute.html": {
    "href": "api/AngeliA.OnGameTryingToQuitAttribute.html",
    "title": "Class OnGameTryingToQuitAttribute | AngeliA",
    "summary": "Class OnGameTryingToQuitAttribute Namespace AngeliA Assembly AngeliA Framework.dll The function will be called when player try to quit the game. Return false will stop the application from quiting. public class OnGameTryingToQuitAttribute : EventAttribute Inheritance object Attribute OrderedAttribute EventAttribute OnGameTryingToQuitAttribute Inherited Members OrderedAttribute.InvokeAsAutoOrderingTask<A>() Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Examples internal static bool ExampleFunction () => true; Constructors OnGameTryingToQuitAttribute(int) The function will be called when player try to quit the game. Return false will stop the application from quiting. public OnGameTryingToQuitAttribute(int order = 0) Parameters order int Function with smaller order will be called earlier Examples internal static bool ExampleFunction () => true;"
  },
  "api/AngeliA.OnGameUpdateAttribute.html": {
    "href": "api/AngeliA.OnGameUpdateAttribute.html",
    "title": "Class OnGameUpdateAttribute | AngeliA",
    "summary": "Class OnGameUpdateAttribute Namespace AngeliA Assembly AngeliA Framework.dll The function will be called every time game update (60 times per second) public class OnGameUpdateAttribute : EventAttribute Inheritance object Attribute OrderedAttribute EventAttribute OnGameUpdateAttribute Inherited Members OrderedAttribute.InvokeAsAutoOrderingTask<A>() Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Examples internal static void ExampleFunction () { } Constructors OnGameUpdateAttribute(int) The function will be called every time game update (60 times per second) public OnGameUpdateAttribute(int order = 0) Parameters order int Function with smaller order will be called earlier Examples internal static void ExampleFunction () { }"
  },
  "api/AngeliA.OnGameUpdateLaterAttribute.html": {
    "href": "api/AngeliA.OnGameUpdateLaterAttribute.html",
    "title": "Class OnGameUpdateLaterAttribute | AngeliA",
    "summary": "Class OnGameUpdateLaterAttribute Namespace AngeliA Assembly AngeliA Framework.dll The function will be called every time game update (60 times per second), but after all [OnGameUpdate] functions already called. public class OnGameUpdateLaterAttribute : EventAttribute Inheritance object Attribute OrderedAttribute EventAttribute OnGameUpdateLaterAttribute Inherited Members OrderedAttribute.InvokeAsAutoOrderingTask<A>() Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Examples internal static void ExampleFunction () { } Constructors OnGameUpdateLaterAttribute(int) The function will be called every time game update (60 times per second), but after all [OnGameUpdate] functions already called. public OnGameUpdateLaterAttribute(int order = 0) Parameters order int Function with smaller order will be called earlier Examples internal static void ExampleFunction () { }"
  },
  "api/AngeliA.OnGameUpdatePauselessAttribute.html": {
    "href": "api/AngeliA.OnGameUpdatePauselessAttribute.html",
    "title": "Class OnGameUpdatePauselessAttribute | AngeliA",
    "summary": "Class OnGameUpdatePauselessAttribute Namespace AngeliA Assembly AngeliA Framework.dll The function will be called every time game update (60 times per second), even when the game is paused. public class OnGameUpdatePauselessAttribute : EventAttribute Inheritance object Attribute OrderedAttribute EventAttribute OnGameUpdatePauselessAttribute Inherited Members OrderedAttribute.InvokeAsAutoOrderingTask<A>() Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Examples internal static void ExampleFunction () { } Constructors OnGameUpdatePauselessAttribute(int) The function will be called every time game update (60 times per second), even when the game is paused. public OnGameUpdatePauselessAttribute(int order = 0) Parameters order int Function with smaller order will be called earlier Examples internal static void ExampleFunction () { }"
  },
  "api/AngeliA.OnItemCollected_Entity_Int2Pos_IntItemID_IntItemCountAttribute.html": {
    "href": "api/AngeliA.OnItemCollected_Entity_Int2Pos_IntItemID_IntItemCountAttribute.html",
    "title": "Class OnItemCollected_Entity_Int2Pos_IntItemID_IntItemCountAttribute | AngeliA",
    "summary": "Class OnItemCollected_Entity_Int2Pos_IntItemID_IntItemCountAttribute Namespace AngeliA Assembly AngeliA Framework.dll The function will be called when a character collect an item public class OnItemCollected_Entity_Int2Pos_IntItemID_IntItemCountAttribute : EventAttribute Inheritance object Attribute OrderedAttribute EventAttribute OnItemCollected_Entity_Int2Pos_IntItemID_IntItemCountAttribute Inherited Members OrderedAttribute.InvokeAsAutoOrderingTask<A>() Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Examples internal static void ExampleFunction (Entity holder, Int2 pos, int itemID, int itemCount) { }"
  },
  "api/AngeliA.OnItemDamage_Character_IntItemBefore_IntItemAfterAttribute.html": {
    "href": "api/AngeliA.OnItemDamage_Character_IntItemBefore_IntItemAfterAttribute.html",
    "title": "Class OnItemDamage_Character_IntItemBefore_IntItemAfterAttribute | AngeliA",
    "summary": "Class OnItemDamage_Character_IntItemBefore_IntItemAfterAttribute Namespace AngeliA Assembly AngeliA Framework.dll The function will be called when an item is damaged into another item public class OnItemDamage_Character_IntItemBefore_IntItemAfterAttribute : EventAttribute Inheritance object Attribute OrderedAttribute EventAttribute OnItemDamage_Character_IntItemBefore_IntItemAfterAttribute Inherited Members OrderedAttribute.InvokeAsAutoOrderingTask<A>() Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Examples internal static void ExampleFunction (Character holder, int itemIdBefore, int itemIdAfter) { }"
  },
  "api/AngeliA.OnItemError_Entity_Int2Pos_IntIconID.html": {
    "href": "api/AngeliA.OnItemError_Entity_Int2Pos_IntIconID.html",
    "title": "Class OnItemError_Entity_Int2Pos_IntIconID | AngeliA",
    "summary": "Class OnItemError_Entity_Int2Pos_IntIconID Namespace AngeliA Assembly AngeliA Framework.dll The function will be called when something wrong about an item (like when guns out of ammo) public class OnItemError_Entity_Int2Pos_IntIconID : EventAttribute Inheritance object Attribute OrderedAttribute EventAttribute OnItemError_Entity_Int2Pos_IntIconID Inherited Members OrderedAttribute.InvokeAsAutoOrderingTask<A>() Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Examples internal static void ExampleFunction (Entity holder, Int2 pos, int iconID) { }"
  },
  "api/AngeliA.OnItemLost_Character_IntItemIDAttribute.html": {
    "href": "api/AngeliA.OnItemLost_Character_IntItemIDAttribute.html",
    "title": "Class OnItemLost_Character_IntItemIDAttribute | AngeliA",
    "summary": "Class OnItemLost_Character_IntItemIDAttribute Namespace AngeliA Assembly AngeliA Framework.dll The function will be called when a character lost an item public class OnItemLost_Character_IntItemIDAttribute : EventAttribute Inheritance object Attribute OrderedAttribute EventAttribute OnItemLost_Character_IntItemIDAttribute Inherited Members OrderedAttribute.InvokeAsAutoOrderingTask<A>() Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Examples internal static void ExampleFunction (Character holder, int itemID) { }"
  },
  "api/AngeliA.OnItemUnlocked_IntItemIDAttribute.html": {
    "href": "api/AngeliA.OnItemUnlocked_IntItemIDAttribute.html",
    "title": "Class OnItemUnlocked_IntItemIDAttribute | AngeliA",
    "summary": "Class OnItemUnlocked_IntItemIDAttribute Namespace AngeliA Assembly AngeliA Framework.dll The function will be called when an item is unlocked by player public class OnItemUnlocked_IntItemIDAttribute : EventAttribute Inheritance object Attribute OrderedAttribute EventAttribute OnItemUnlocked_IntItemIDAttribute Inherited Members OrderedAttribute.InvokeAsAutoOrderingTask<A>() Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Examples internal static void ExampleFunction (int itemID) { }"
  },
  "api/AngeliA.OnLanguageChangedAttribute.html": {
    "href": "api/AngeliA.OnLanguageChangedAttribute.html",
    "title": "Class OnLanguageChangedAttribute | AngeliA",
    "summary": "Class OnLanguageChangedAttribute Namespace AngeliA Assembly AngeliA Framework.dll The function will be called when user change game display language. Language.CurrentLanguage is already set to new value when this function is called. public class OnLanguageChangedAttribute : EventAttribute Inheritance object Attribute OrderedAttribute EventAttribute OnLanguageChangedAttribute Inherited Members OrderedAttribute.InvokeAsAutoOrderingTask<A>() Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Examples internal static void ExampleFunction () { }"
  },
  "api/AngeliA.OnMainSheetReloadAttribute.html": {
    "href": "api/AngeliA.OnMainSheetReloadAttribute.html",
    "title": "Class OnMainSheetReloadAttribute | AngeliA",
    "summary": "Class OnMainSheetReloadAttribute Namespace AngeliA Assembly AngeliA Framework.dll The function will be called when artwork sheet for rendering loaded from file public class OnMainSheetReloadAttribute : EventAttribute Inheritance object Attribute OrderedAttribute EventAttribute OnMainSheetReloadAttribute Inherited Members OrderedAttribute.InvokeAsAutoOrderingTask<A>() Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Examples internal static void ExampleFunction () { }"
  },
  "api/AngeliA.OnMapEditorModeChange_ModeAttribute.Mode.html": {
    "href": "api/AngeliA.OnMapEditorModeChange_ModeAttribute.Mode.html",
    "title": "Enum OnMapEditorModeChange_ModeAttribute.Mode | AngeliA",
    "summary": "Enum OnMapEditorModeChange_ModeAttribute.Mode Namespace AngeliA Assembly AngeliA Framework.dll public enum OnMapEditorModeChange_ModeAttribute.Mode Extension Methods Extension.Next<E>(E) Extension.Prev<E>(E) Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Fields EnterEditMode = 2 Play mode to edit mode. After map editor internal logic is done EnterPlayMode = 0 Edit mode to play mode. After map editor internal logic is done ExitEditMode = 3 Edit mode to play mode. Before map editor internal logic is done ExitPlayMode = 1 Play mode to edit mode. Before map editor internal logic is done"
  },
  "api/AngeliA.OnMapEditorModeChange_ModeAttribute.html": {
    "href": "api/AngeliA.OnMapEditorModeChange_ModeAttribute.html",
    "title": "Class OnMapEditorModeChange_ModeAttribute | AngeliA",
    "summary": "Class OnMapEditorModeChange_ModeAttribute Namespace AngeliA Assembly AngeliA Framework.dll The function will be called when user change map editor editing mode public class OnMapEditorModeChange_ModeAttribute : EventAttribute Inheritance object Attribute OrderedAttribute EventAttribute OnMapEditorModeChange_ModeAttribute Inherited Members OrderedAttribute.InvokeAsAutoOrderingTask<A>() Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Examples internal static void ExampleFunction (OnMapEditorModeChange_ModeAttribute.Mode mode) { }"
  },
  "api/AngeliA.OnObjectBreak_IntSpriteID_IRectAttribute.html": {
    "href": "api/AngeliA.OnObjectBreak_IntSpriteID_IRectAttribute.html",
    "title": "Class OnObjectBreak_IntSpriteID_IRectAttribute | AngeliA",
    "summary": "Class OnObjectBreak_IntSpriteID_IRectAttribute Namespace AngeliA Assembly AngeliA Framework.dll The function will be called when an object break public class OnObjectBreak_IntSpriteID_IRectAttribute : EventAttribute Inheritance object Attribute OrderedAttribute EventAttribute OnObjectBreak_IntSpriteID_IRectAttribute Inherited Members OrderedAttribute.InvokeAsAutoOrderingTask<A>() Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Examples internal static void ExampleFunction (int spriteID, IRect rectPosition) { }"
  },
  "api/AngeliA.OnObjectFreeFall_IntSpriteID_Int2Pos_IntRot_BoolFlip_Int2Velocity_IntRotSpeed_IntGravityAttribute.html": {
    "href": "api/AngeliA.OnObjectFreeFall_IntSpriteID_Int2Pos_IntRot_BoolFlip_Int2Velocity_IntRotSpeed_IntGravityAttribute.html",
    "title": "Class OnObjectFreeFall_IntSpriteID_Int2Pos_IntRot_BoolFlip_Int2Velocity_IntRotSpeed_IntGravityAttribute | AngeliA",
    "summary": "Class OnObjectFreeFall_IntSpriteID_Int2Pos_IntRot_BoolFlip_Int2Velocity_IntRotSpeed_IntGravityAttribute Namespace AngeliA Assembly AngeliA Framework.dll The function will be called when an object start to free fall public class OnObjectFreeFall_IntSpriteID_Int2Pos_IntRot_BoolFlip_Int2Velocity_IntRotSpeed_IntGravityAttribute : EventAttribute Inheritance object Attribute OrderedAttribute EventAttribute OnObjectFreeFall_IntSpriteID_Int2Pos_IntRot_BoolFlip_Int2Velocity_IntRotSpeed_IntGravityAttribute Inherited Members OrderedAttribute.InvokeAsAutoOrderingTask<A>() Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Examples internal static void ExampleFunction (int spriteID, Int2 pos, int startRotation, bool flip, Int2 velocity, int rotationSpeed, int gravity) { }"
  },
  "api/AngeliA.OnRemoteSettingChanged_IntID_IntDataAttribute.html": {
    "href": "api/AngeliA.OnRemoteSettingChanged_IntID_IntDataAttribute.html",
    "title": "Class OnRemoteSettingChanged_IntID_IntDataAttribute | AngeliA",
    "summary": "Class OnRemoteSettingChanged_IntID_IntDataAttribute Namespace AngeliA Assembly AngeliA Framework.dll The function will be called when engine send remote message to rigged game public class OnRemoteSettingChanged_IntID_IntDataAttribute : EventAttribute Inheritance object Attribute OrderedAttribute EventAttribute OnRemoteSettingChanged_IntID_IntDataAttribute Inherited Members OrderedAttribute.InvokeAsAutoOrderingTask<A>() Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Examples internal static void ExampleFunction (int id, int data) { } Constructors OnRemoteSettingChanged_IntID_IntDataAttribute(int) The function will be called when engine send remote message to rigged game public OnRemoteSettingChanged_IntID_IntDataAttribute(int order = 0) Parameters order int Examples internal static void ExampleFunction (int id, int data) { }"
  },
  "api/AngeliA.OnSavingSlotChanged.html": {
    "href": "api/AngeliA.OnSavingSlotChanged.html",
    "title": "Class OnSavingSlotChanged | AngeliA",
    "summary": "Class OnSavingSlotChanged Namespace AngeliA Assembly AngeliA Framework.dll The function will be called after user change the saving slot. Universe.BuiltIn.CurrentSavingSlot is the new value when this function is called. public class OnSavingSlotChanged : OrderedAttribute Inheritance object Attribute OrderedAttribute OnSavingSlotChanged Inherited Members OrderedAttribute.InvokeAsAutoOrderingTask<A>() Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Examples internal static void ExampleFunction () { } Constructors OnSavingSlotChanged(int) The function will be called after user change the saving slot. Universe.BuiltIn.CurrentSavingSlot is the new value when this function is called. public OnSavingSlotChanged(int order = 0) Parameters order int Function with smaller order will be called earlier Examples internal static void ExampleFunction () { }"
  },
  "api/AngeliA.OnTransferArrivedAttribute_IntEntityID_Int3UnitPos_ObjectData.html": {
    "href": "api/AngeliA.OnTransferArrivedAttribute_IntEntityID_Int3UnitPos_ObjectData.html",
    "title": "Class OnTransferArrivedAttribute_IntEntityID_Int3UnitPos_ObjectData | AngeliA",
    "summary": "Class OnTransferArrivedAttribute_IntEntityID_Int3UnitPos_ObjectData Namespace AngeliA Assembly AngeliA Framework.dll The function will be called when message from TransferSystem.StartTransfer() arrived public class OnTransferArrivedAttribute_IntEntityID_Int3UnitPos_ObjectData : EventAttribute Inheritance object Attribute OrderedAttribute EventAttribute OnTransferArrivedAttribute_IntEntityID_Int3UnitPos_ObjectData Inherited Members OrderedAttribute.InvokeAsAutoOrderingTask<A>() Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Examples internal static void ExampleFunction (int receiverID, Int3 unitPosition, object userData) { }"
  },
  "api/AngeliA.OnTransferPassAttribute_Int3UnitPos_ObjectData.html": {
    "href": "api/AngeliA.OnTransferPassAttribute_Int3UnitPos_ObjectData.html",
    "title": "Class OnTransferPassAttribute_Int3UnitPos_ObjectData | AngeliA",
    "summary": "Class OnTransferPassAttribute_Int3UnitPos_ObjectData Namespace AngeliA Assembly AngeliA Framework.dll The function will be called when message from TransferSystem.StartTransfer() pass through public class OnTransferPassAttribute_Int3UnitPos_ObjectData : EventAttribute Inheritance object Attribute OrderedAttribute EventAttribute OnTransferPassAttribute_Int3UnitPos_ObjectData Inherited Members OrderedAttribute.InvokeAsAutoOrderingTask<A>() Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Examples internal static void ExampleFunction (Int3 unitPos, object userData) { }"
  },
  "api/AngeliA.OnViewZChangedAttribute.html": {
    "href": "api/AngeliA.OnViewZChangedAttribute.html",
    "title": "Class OnViewZChangedAttribute | AngeliA",
    "summary": "Class OnViewZChangedAttribute Namespace AngeliA Assembly AngeliA Framework.dll The function will be called when player change the map layer public class OnViewZChangedAttribute : EventAttribute Inheritance object Attribute OrderedAttribute EventAttribute OnViewZChangedAttribute Inherited Members OrderedAttribute.InvokeAsAutoOrderingTask<A>() Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Examples internal static void ExampleFunction () { }"
  },
  "api/AngeliA.OnWindowSizeChangedAttribute.html": {
    "href": "api/AngeliA.OnWindowSizeChangedAttribute.html",
    "title": "Class OnWindowSizeChangedAttribute | AngeliA",
    "summary": "Class OnWindowSizeChangedAttribute Namespace AngeliA Assembly AngeliA Framework.dll The function will be called when user change the size of the application window public class OnWindowSizeChangedAttribute : EventAttribute Inheritance object Attribute OrderedAttribute EventAttribute OnWindowSizeChangedAttribute Inherited Members OrderedAttribute.InvokeAsAutoOrderingTask<A>() Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Examples internal static void ExampleFunction () { }"
  },
  "api/AngeliA.OnWorldCreatedBySquad_WorldAttribute.html": {
    "href": "api/AngeliA.OnWorldCreatedBySquad_WorldAttribute.html",
    "title": "Class OnWorldCreatedBySquad_WorldAttribute | AngeliA",
    "summary": "Class OnWorldCreatedBySquad_WorldAttribute Namespace AngeliA Assembly AngeliA Framework.dll The function will be called when a world instance is created by world squad public class OnWorldCreatedBySquad_WorldAttribute : EventAttribute Inheritance object Attribute OrderedAttribute EventAttribute OnWorldCreatedBySquad_WorldAttribute Inherited Members OrderedAttribute.InvokeAsAutoOrderingTask<A>() Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Examples internal static void ExampleFunction () { } Constructors OnWorldCreatedBySquad_WorldAttribute(int) The function will be called when a world instance is created by world squad public OnWorldCreatedBySquad_WorldAttribute(int order = 0) Parameters order int Examples internal static void ExampleFunction () { }"
  },
  "api/AngeliA.OnWorldLoadedBySquad_WorldAttribute.html": {
    "href": "api/AngeliA.OnWorldLoadedBySquad_WorldAttribute.html",
    "title": "Class OnWorldLoadedBySquad_WorldAttribute | AngeliA",
    "summary": "Class OnWorldLoadedBySquad_WorldAttribute Namespace AngeliA Assembly AngeliA Framework.dll The function will be called when a world instance is loaded by world squad public class OnWorldLoadedBySquad_WorldAttribute : EventAttribute Inheritance object Attribute OrderedAttribute EventAttribute OnWorldLoadedBySquad_WorldAttribute Inherited Members OrderedAttribute.InvokeAsAutoOrderingTask<A>() Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Examples internal static void ExampleFunction () { } Constructors OnWorldLoadedBySquad_WorldAttribute(int) The function will be called when a world instance is loaded by world squad public OnWorldLoadedBySquad_WorldAttribute(int order = 0) Parameters order int Examples internal static void ExampleFunction () { }"
  },
  "api/AngeliA.OnWorldSavedByMapEditor_WorldAttribute.html": {
    "href": "api/AngeliA.OnWorldSavedByMapEditor_WorldAttribute.html",
    "title": "Class OnWorldSavedByMapEditor_WorldAttribute | AngeliA",
    "summary": "Class OnWorldSavedByMapEditor_WorldAttribute Namespace AngeliA Assembly AngeliA Framework.dll The function will be called when a world instance is saved to file by the world squad public class OnWorldSavedByMapEditor_WorldAttribute : EventAttribute Inheritance object Attribute OrderedAttribute EventAttribute OnWorldSavedByMapEditor_WorldAttribute Inherited Members OrderedAttribute.InvokeAsAutoOrderingTask<A>() Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Examples internal static void ExampleFunction () { }"
  },
  "api/AngeliA.OperationMode.html": {
    "href": "api/AngeliA.OperationMode.html",
    "title": "Enum OperationMode | AngeliA",
    "summary": "Enum OperationMode Namespace AngeliA Assembly AngeliA Framework.dll public enum OperationMode Extension Methods Extension.Next<E>(E) Extension.Prev<E>(E) Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Fields ColliderAndTrigger = 2 ColliderOnly = 0 TriggerOnly = 1"
  },
  "api/AngeliA.OrderedAttribute.html": {
    "href": "api/AngeliA.OrderedAttribute.html",
    "title": "Class OrderedAttribute | AngeliA",
    "summary": "Class OrderedAttribute Namespace AngeliA Assembly AngeliA Framework.dll Attribute apply to method and call all of them in given order [AttributeUsage(AttributeTargets.Method, AllowMultiple = false)] public abstract class OrderedAttribute : Attribute Inheritance object Attribute OrderedAttribute Derived BeforeSavingSlotChanged EventAttribute OnGameInitializeAttribute OnGameInitializeLaterAttribute OnSavingSlotChanged Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Constructors OrderedAttribute(int) Attribute apply to method and call all of them in given order protected OrderedAttribute(int order) Parameters order int Methods InvokeAsAutoOrderingTask<A>() Call all static methods in order with given type of attribute public static void InvokeAsAutoOrderingTask<A>() where A : Attribute Type Parameters A"
  },
  "api/AngeliA.OrientedSprite.html": {
    "href": "api/AngeliA.OrientedSprite.html",
    "title": "Struct OrientedSprite | AngeliA",
    "summary": "Struct OrientedSprite Namespace AngeliA Assembly AngeliA Framework.dll public struct OrientedSprite Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Constructors OrientedSprite() public OrientedSprite() OrientedSprite(string, string) public OrientedSprite(string hostName, string attachmentName) Parameters hostName string attachmentName string OrientedSprite(string, string, string) public OrientedSprite(string hostName, string attachmentName, string attachmentNameAlt) Parameters hostName string attachmentName string attachmentNameAlt string OrientedSprite(string, string, string, string) public OrientedSprite(string hostName, string attachmentName, string attachmentNameAltA, string attachmentNameAltB) Parameters hostName string attachmentName string attachmentNameAltA string attachmentNameAltB string OrientedSprite(string, params string[]) public OrientedSprite(string hostName, params string[] attachmentNames) Parameters hostName string attachmentNames string[] Fields AttachmentName public string AttachmentName Field Value string SpriteID_BL public int SpriteID_BL Field Value int SpriteID_BR public int SpriteID_BR Field Value int SpriteID_FL public int SpriteID_FL Field Value int SpriteID_FR public int SpriteID_FR Field Value int Properties IsValid public readonly bool IsValid { get; } Property Value bool Methods GetID(bool, bool) public readonly int GetID(bool front, bool right) Parameters front bool right bool Returns int LoadFromSheet(string, string) public bool LoadFromSheet(string hostName, string attachmentName) Parameters hostName string attachmentName string Returns bool TryGetSprite(bool, bool, int, out AngeSprite) public readonly bool TryGetSprite(bool front, bool right, int animationFrame, out AngeSprite sprite) Parameters front bool right bool animationFrame int sprite AngeSprite Returns bool TryGetSpriteForGizmos(out AngeSprite) public readonly bool TryGetSpriteForGizmos(out AngeSprite sprite) Parameters sprite AngeSprite Returns bool TryGetSpriteGroup(bool, bool, out SpriteGroup) public readonly bool TryGetSpriteGroup(bool front, bool right, out SpriteGroup group) Parameters front bool right bool group SpriteGroup Returns bool TryGetSpriteWithoutAnimation(bool, bool, out AngeSprite) public readonly bool TryGetSpriteWithoutAnimation(bool front, bool right, out AngeSprite sprite) Parameters front bool right bool sprite AngeSprite Returns bool"
  },
  "api/AngeliA.Particle.html": {
    "href": "api/AngeliA.Particle.html",
    "title": "Class Particle | AngeliA",
    "summary": "Class Particle Namespace AngeliA Assembly AngeliA Framework.dll [Entity.Capacity(512, 0)] [Entity.Layer(7)] public abstract class Particle : Entity, IMapItem Inheritance object Entity Particle Implements IMapItem Derived MapEditorBlinkParticle Inherited Members Entity.Active Entity.X Entity.Y Entity.Width Entity.Height Entity.TypeID Entity.SpawnFrame Entity.FromWorld Entity.Rect Entity.InstanceOrder Entity.MapUnitPos Entity.InstanceID Entity.IgnoreReposition Entity.XY Entity.Size Entity.Center Entity.CenterX Entity.CenterY Entity.PivotUnitPosition Entity.OnInactivated() Entity.FirstUpdate() Entity.Update() Entity.AfterReposition(Int3, Int3) Entity.IgnoreDespawnFromMap(int) Entity.CancelIgnoreDespawnFromMap() Entity.Draw() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Properties AutoArtworkID public virtual int AutoArtworkID { get; } Property Value int Duration public abstract int Duration { get; } Property Value int LocalFrame public int LocalFrame { get; } Property Value int Loop public abstract bool Loop { get; } Property Value bool RenderingLayer public virtual int RenderingLayer { get; } Property Value int RenderingZ public virtual int RenderingZ { get; } Property Value int Rotation public int Rotation { get; set; } Property Value int Scale public int Scale { get; set; } Property Value int Tint public Color32 Tint { get; set; } Property Value Color32 UserData public object UserData { get; set; } Property Value object Methods BeforeUpdate() public override sealed void BeforeUpdate() LateUpdate() public override void LateUpdate() OnActivated() public override void OnActivated()"
  },
  "api/AngeliA.PauseMenuUI.html": {
    "href": "api/AngeliA.PauseMenuUI.html",
    "title": "Class PauseMenuUI | AngeliA",
    "summary": "Class PauseMenuUI Namespace AngeliA Assembly AngeliA Framework.dll [Entity.Capacity(1, 1)] [Entity.StageOrder(4096)] public class PauseMenuUI : MenuUI, IMapItem, IWindowEntityUI Inheritance object Entity EntityUI MenuUI PauseMenuUI Implements IMapItem IWindowEntityUI Inherited Members MenuUI.SelectionAdjustable MenuUI.SelectionIndex MenuUI.Message MenuUI.BackgroundRect MenuUI.OverrideWindowWidth MenuUI.AnimationDuration MenuUI.BackgroundStyle MenuUI.MessageStyle MenuUI.DefaultLabelStyle MenuUI.DefaultContentStyle MenuUI.BlockEvent MenuUI.BackgroundCode MenuUI.SelectionMarkCode MenuUI.MoreItemMarkCode MenuUI.ArrowMarkCode MenuUI.WindowWidth MenuUI.ItemHeight MenuUI.ItemGap MenuUI.MaxItemCount MenuUI.ContentPadding MenuUI.SelectionMarkSize MenuUI.SelectionArrowMarkSize MenuUI.MoreMarkSize MenuUI.ScreenTint MenuUI.BackgroundTint MenuUI.SelectionMarkTint MenuUI.MoreMarkTint MenuUI.MouseHighlightTint MenuUI.Interactable MenuUI.AllowMouseClick MenuUI.QuitOnPressStartOrEscKey MenuUI.AnimationAmount MenuUI.BeforeUpdate() MenuUI.UpdateUI() MenuUI.OnSelectionChanged() MenuUI.GetWindowRect() MenuUI.DrawItem(string, int, GUIStyle, GUIStyle, bool) MenuUI.DrawItem(string, string, int, GUIStyle, GUIStyle, bool) MenuUI.DrawArrowItem(string, string, bool, bool, out int, int, GUIStyle, GUIStyle, bool) MenuUI.DrawItem(string, char[], int, GUIStyle, GUIStyle, bool) MenuUI.DrawArrowItem(string, char[], bool, bool, out int, int, GUIStyle, GUIStyle, bool) MenuUI.SetSelection(int) MenuUI.RefreshAnimation() EntityUI.FirstUpdate() EntityUI.Update() EntityUI.Unify(int) Entity.Active Entity.X Entity.Y Entity.Width Entity.Height Entity.TypeID Entity.SpawnFrame Entity.FromWorld Entity.Rect Entity.InstanceOrder Entity.MapUnitPos Entity.InstanceID Entity.IgnoreReposition Entity.XY Entity.Size Entity.Center Entity.CenterX Entity.CenterY Entity.PivotUnitPosition Entity.AfterReposition(Int3, Int3) Entity.IgnoreDespawnFromMap(int) Entity.CancelIgnoreDespawnFromMap() Entity.Draw() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Constructors PauseMenuUI() public PauseMenuUI() Methods DrawMenu() protected override void DrawMenu() LateUpdate() public override void LateUpdate() OnActivated() public override void OnActivated() OnGameTryingToQuit() [OnGameTryingToQuit(0)] public static bool OnGameTryingToQuit() Returns bool OnGameUpdatePauseless() [OnGameUpdatePauseless(0)] public static void OnGameUpdatePauseless() OnInactivated() public override void OnInactivated()"
  },
  "api/AngeliA.Physics.html": {
    "href": "api/AngeliA.Physics.html",
    "title": "Class Physics | AngeliA",
    "summary": "Class Physics Namespace AngeliA Assembly AngeliA Framework.dll public static class Physics Inheritance object Physics Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields CellsName public const string CellsName = \"Cells\" Field Value string LayersName public const string LayersName = \"Layers\" Field Value string Properties CellHeight public static int CellHeight { get; } Property Value int CellWidth public static int CellWidth { get; } Property Value int CurrentFrame public static uint CurrentFrame { get; } Property Value uint IsReady public static bool IsReady { get; } Property Value bool PositionX public static int PositionX { get; } Property Value int PositionY public static int PositionY { get; } Property Value int Methods FillBlock(int, int, IRect, bool, Tag) public static void FillBlock(int layer, int blockID, IRect globalRect, bool isTrigger = false, Tag tag = Tag.None) Parameters layer int blockID int globalRect IRect isTrigger bool tag Tag FillEntity(int, Entity, bool, Tag) public static void FillEntity(int layer, Entity entity, bool isTrigger = false, Tag tag = Tag.None) Parameters layer int entity Entity isTrigger bool tag Tag ForcePush(Rigidbody, Direction4, int) public static void ForcePush(Rigidbody host, Direction4 direction, int distance) Parameters host Rigidbody direction Direction4 distance int GetEntity(int, IRect, int, Entity, OperationMode, Tag) public static Entity GetEntity(int typeID, IRect globalRect, int mask, Entity ignore = null, OperationMode mode = OperationMode.ColliderOnly, Tag tag = Tag.None) Parameters typeID int globalRect IRect mask int ignore Entity mode OperationMode tag Tag Returns Entity GetEntity<T>(IRect, int, Entity, OperationMode, Tag) public static T GetEntity<T>(IRect globalRect, int mask, Entity ignore = null, OperationMode mode = OperationMode.ColliderOnly, Tag tag = Tag.None) Parameters globalRect IRect mask int ignore Entity mode OperationMode tag Tag Returns T Type Parameters T HasEntity<T>(IRect, int, Entity, OperationMode, Tag) public static bool HasEntity<T>(IRect globalRect, int mask, Entity ignore = null, OperationMode mode = OperationMode.ColliderOnly, Tag tag = Tag.None) where T : Entity Parameters globalRect IRect mask int ignore Entity mode OperationMode tag Tag Returns bool Type Parameters T IgnoreOverlap(int, IRect, OperationMode) public static void IgnoreOverlap(int mask, IRect globalRect, OperationMode mode = OperationMode.ColliderAndTrigger) Parameters mask int globalRect IRect mode OperationMode Initialize() [OnGameInitializeLater(64)] public static void Initialize() Move(int, Int2, int, int, Int2, Entity) public static Int2 Move(int mask, Int2 from, int speedX, int speedY, Int2 size, Entity entity) Parameters mask int from Int2 speedX int speedY int size Int2 entity Entity Returns Int2 MoveIgnoreOneway(int, Int2, int, int, Int2, Entity) public static Int2 MoveIgnoreOneway(int mask, Int2 from, int speedX, int speedY, Int2 size, Entity entity) Parameters mask int from Int2 speedX int speedY int size Int2 entity Entity Returns Int2 MoveImmediately(int, Int2, Direction4, int, Int2, Entity, bool) public static Int2 MoveImmediately(int mask, Int2 from, Direction4 direction, int speed, Int2 size, Entity entity, bool ignoreOneway = false) Parameters mask int from Int2 direction Direction4 speed int size Int2 entity Entity ignoreOneway bool Returns Int2 Overlap(int, IRect, Entity, OperationMode, Tag) public static bool Overlap(int mask, IRect globalRect, Entity ignore = null, OperationMode mode = OperationMode.ColliderOnly, Tag tag = Tag.None) Parameters mask int globalRect IRect ignore Entity mode OperationMode tag Tag Returns bool Overlap(int, IRect, out PhysicsCell, Entity, OperationMode, Tag) public static bool Overlap(int mask, IRect globalRect, out PhysicsCell info, Entity ignore = null, OperationMode mode = OperationMode.ColliderOnly, Tag tag = Tag.None) Parameters mask int globalRect IRect info PhysicsCell ignore Entity mode OperationMode tag Tag Returns bool OverlapAll(PhysicsCell[], int, IRect, Entity, OperationMode, Tag) public static int OverlapAll(PhysicsCell[] hits, int mask, IRect globalRect, Entity ignore = null, OperationMode mode = OperationMode.ColliderOnly, Tag tag = Tag.None) Parameters hits PhysicsCell[] mask int globalRect IRect ignore Entity mode OperationMode tag Tag Returns int OverlapAll(int, IRect, out int, Entity, OperationMode, Tag) public static PhysicsCell[] OverlapAll(int mask, IRect globalRect, out int count, Entity ignore = null, OperationMode mode = OperationMode.ColliderOnly, Tag tag = Tag.None) Parameters mask int globalRect IRect count int ignore Entity mode OperationMode tag Tag Returns PhysicsCell[] RoomCheck(int, IRect, Entity, Direction4, OperationMode, Tag) public static bool RoomCheck(int mask, IRect rect, Entity entity, Direction4 direction, OperationMode mode = OperationMode.ColliderOnly, Tag tag = Tag.None) Parameters mask int rect IRect entity Entity direction Direction4 mode OperationMode tag Tag Returns bool RoomCheck(int, IRect, Entity, Direction4, out PhysicsCell, OperationMode, Tag) public static bool RoomCheck(int mask, IRect rect, Entity entity, Direction4 direction, out PhysicsCell hit, OperationMode mode = OperationMode.ColliderOnly, Tag tag = Tag.None) Parameters mask int rect IRect entity Entity direction Direction4 hit PhysicsCell mode OperationMode tag Tag Returns bool RoomCheckOneway(int, IRect, Entity, Direction4, out PhysicsCell, bool, bool) public static bool RoomCheckOneway(int mask, IRect rect, Entity entity, Direction4 direction, out PhysicsCell hit, bool overlapCheck = false, bool blockOnly = false) Parameters mask int rect IRect entity Entity direction Direction4 hit PhysicsCell overlapCheck bool blockOnly bool Returns bool RoomCheckOneway(int, IRect, Entity, Direction4, bool, bool) public static bool RoomCheckOneway(int mask, IRect rect, Entity entity, Direction4 direction, bool overlapCheck = false, bool blockOnly = false) Parameters mask int rect IRect entity Entity direction Direction4 overlapCheck bool blockOnly bool Returns bool"
  },
  "api/AngeliA.PhysicsCell.html": {
    "href": "api/AngeliA.PhysicsCell.html",
    "title": "Struct PhysicsCell | AngeliA",
    "summary": "Struct PhysicsCell Namespace AngeliA Assembly AngeliA Framework.dll public struct PhysicsCell Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Fields EMPTY public static readonly PhysicsCell EMPTY Field Value PhysicsCell Entity public Entity Entity Field Value Entity Frame public uint Frame Field Value uint IsTrigger public bool IsTrigger Field Value bool Rect public IRect Rect Field Value IRect SourceID public int SourceID Field Value int Tag public Tag Tag Field Value Tag"
  },
  "api/AngeliA.PhysicsLayer.html": {
    "href": "api/AngeliA.PhysicsLayer.html",
    "title": "Class PhysicsLayer | AngeliA",
    "summary": "Class PhysicsLayer Namespace AngeliA Assembly AngeliA Framework.dll public static class PhysicsLayer Inheritance object PhysicsLayer Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields CHARACTER public const int CHARACTER = 3 Field Value int COUNT public const int COUNT = 5 Field Value int DAMAGE public const int DAMAGE = 4 Field Value int ENVIRONMENT public const int ENVIRONMENT = 1 Field Value int ITEM public const int ITEM = 2 Field Value int LEVEL public const int LEVEL = 0 Field Value int"
  },
  "api/AngeliA.PhysicsMask.html": {
    "href": "api/AngeliA.PhysicsMask.html",
    "title": "Class PhysicsMask | AngeliA",
    "summary": "Class PhysicsMask Namespace AngeliA Assembly AngeliA Framework.dll public static class PhysicsMask Inheritance object PhysicsMask Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields ALL public const int ALL = 31 Field Value int CHARACTER public const int CHARACTER = 8 Field Value int DAMAGE public const int DAMAGE = 16 Field Value int DYNAMIC ENVIRONMENT | ITEM | CHARACTER public const int DYNAMIC = 14 Field Value int ENTITY ENVIRONMENT | CHARACTER public const int ENTITY = 10 Field Value int ENVIRONMENT public const int ENVIRONMENT = 2 Field Value int ITEM public const int ITEM = 4 Field Value int LEVEL public const int LEVEL = 1 Field Value int MAP LEVEL | ENVIRONMENT public const int MAP = 3 Field Value int NONE public const int NONE = 0 Field Value int SOLID LEVEL | ENVIRONMENT | CHARACTER public const int SOLID = 11 Field Value int"
  },
  "api/AngeliA.Pipe-1.html": {
    "href": "api/AngeliA.Pipe-1.html",
    "title": "Class Pipe<T> | AngeliA",
    "summary": "Class Pipe<T> Namespace AngeliA Assembly AngeliA Framework.dll public class Pipe<T> Type Parameters T Inheritance object Pipe<T> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Constructors Pipe(int) public Pipe(int capacity = 1024) Parameters capacity int Properties Capacity public int Capacity { get; init; } Property Value int Data public T[] Data { get; init; } Property Value T[] IsFull public bool IsFull { get; } Property Value bool this[int] public T this[int index] { get; set; } Parameters index int Property Value T Length public int Length { get; } Property Value int Start public int Start { get; } Property Value int Methods DetchHead(int) public void DetchHead(int newLength) Parameters newLength int DetchTail(int) public void DetchTail(int newLength) Parameters newLength int LinkToHead(T) public bool LinkToHead(T data) Parameters data T Returns bool LinkToTail(T) public bool LinkToTail(T data) Parameters data T Returns bool Reorganize() public void Reorganize() Reset() public void Reset() Sort(IComparer<T>) public void Sort(IComparer<T> comparer) Parameters comparer IComparer<T> TryPeekHead(out T) public bool TryPeekHead(out T data) Parameters data T Returns bool TryPeekTail(out T) public bool TryPeekTail(out T data) Parameters data T Returns bool TryPopHead(out T) public bool TryPopHead(out T data) Parameters data T Returns bool TryPopTail(out T) public bool TryPopTail(out T data) Parameters data T Returns bool"
  },
  "api/AngeliA.Platformer.ActionFurniture.html": {
    "href": "api/AngeliA.Platformer.ActionFurniture.html",
    "title": "Class ActionFurniture | AngeliA",
    "summary": "Class ActionFurniture Namespace AngeliA.Platformer Assembly com.angelia.platformer.dll public abstract class ActionFurniture : Furniture, IMapItem, IBlockEntity, IActionTarget Inheritance object Entity Furniture ActionFurniture Implements IMapItem IBlockEntity IActionTarget Derived Bed Chair OpenableFurniture Inherited Members Furniture.ModuleType Furniture.FurnitureLeftOrDown Furniture.FurnitureRightOrUp Furniture.Pose Furniture.ColliderBorder Furniture.OnActivated() Furniture.FirstUpdate() Furniture.BeforeUpdate() Furniture.GetIsHighlighted() Furniture.GetSpriteFromPose() Entity.Active Entity.X Entity.Y Entity.Width Entity.Height Entity.TypeID Entity.SpawnFrame Entity.FromWorld Entity.Rect Entity.InstanceOrder Entity.MapUnitPos Entity.InstanceID Entity.IgnoreReposition Entity.XY Entity.Size Entity.Center Entity.CenterX Entity.CenterY Entity.PivotUnitPosition Entity.OnInactivated() Entity.Update() Entity.AfterReposition(Int3, Int3) Entity.IgnoreDespawnFromMap(int) Entity.CancelIgnoreDespawnFromMap() Entity.Draw() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Methods AllowInvoke() public virtual bool AllowInvoke() Returns bool Invoke() public abstract bool Invoke() Returns bool LateUpdate() public override void LateUpdate()"
  },
  "api/AngeliA.Platformer.Armor-2.html": {
    "href": "api/AngeliA.Platformer.Armor-2.html",
    "title": "Class Armor<P, N> | AngeliA",
    "summary": "Class Armor<P, N> Namespace AngeliA.Platformer Assembly com.angelia.platformer.dll public abstract class Armor<P, N> : Equipment, IMapItem, IProgressiveItem where P : Equipment where N : Equipment Type Parameters P N Inheritance object Item Equipment Armor<P, N> Implements IMapItem IProgressiveItem Derived BodyArmor<P, N> Gloves<P, N> Helmet<P, N> Shoes<P, N> Inherited Members Equipment.EquipmentType Equipment.MaxStackCount Item.AllowDuplicateUpdate Item.EmbedIntoLevel Item.TypeID Item.BeforeItemUpdate_FromInventory(Character, int, int) Item.OnItemUpdate_FromInventory(Character, int, int) Item.OnPoseAnimationUpdate_FromInventory(PoseCharacterRenderer, int, int) Item.OnTakeDamage_FromInventory(Character, int, int, ref Damage) Item.OnCharacterAttack_FromInventory(Character, Bullet, int, int) Item.BeforeItemUpdate_FromEquipment(Character) Item.OnItemUpdate_FromEquipment(Character) Item.BeforePoseAnimationUpdate_FromEquipment(PoseCharacterRenderer) Item.OnCharacterAttack_FromEquipment(Character, Bullet) Item.OnItemUpdate_FromItemHolder(ItemHolder, int) Item.OnCollect(Character) Item.CanUse(Character) Item.Use(Character, int, int, out bool) Item.ItemConditionCheck(Character) Item.DrawItem(Entity, IRect, Color32, int) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Constructors Armor() public Armor() Properties HideEar protected virtual bool HideEar { get; } Property Value bool HideFace protected virtual bool HideFace { get; } Property Value bool HideHair protected virtual bool HideHair { get; } Property Value bool HideHorn protected virtual bool HideHorn { get; } Property Value bool HideTail protected virtual bool HideTail { get; } Property Value bool HideWing protected virtual bool HideWing { get; } Property Value bool RepairMaterials protected virtual Type[] RepairMaterials { get; } Property Value Type[] Scale protected virtual int Scale { get; } Property Value int Methods DrawArmor(PoseCharacterRenderer) protected abstract void DrawArmor(PoseCharacterRenderer renderer) Parameters renderer PoseCharacterRenderer OnPoseAnimationUpdate_FromEquipment(PoseCharacterRenderer) public override void OnPoseAnimationUpdate_FromEquipment(PoseCharacterRenderer rendering) Parameters rendering PoseCharacterRenderer OnTakeDamage_FromEquipment(Character, ref Damage) public override void OnTakeDamage_FromEquipment(Character character, ref Damage damage) Parameters character Character damage Damage RepairArmor(Character, int) public virtual bool RepairArmor(Character character, int materialID) Parameters character Character materialID int Returns bool TryRepairEquipment(Character) public override bool TryRepairEquipment(Character character) Parameters character Character Returns bool"
  },
  "api/AngeliA.Platformer.ArrowBullet-1.html": {
    "href": "api/AngeliA.Platformer.ArrowBullet-1.html",
    "title": "Class ArrowBullet<I> | AngeliA",
    "summary": "Class ArrowBullet<I> Namespace AngeliA.Platformer Assembly com.angelia.platformer.dll public class ArrowBullet<I> : ArrowBullet, IMapItem Type Parameters I Inheritance object Entity Bullet MovableBullet ArrowBullet ArrowBullet<I> Implements IMapItem Inherited Members ArrowBullet.ArrowItemID ArrowBullet.ArrowArtworkID ArrowBullet.ArtworkID ArrowBullet.SpawnItemWhenBulletDestroy ArrowBullet.OnActivated() ArrowBullet.BeforeDespawn(IDamageReceiver) MovableBullet.SpeedForward MovableBullet.SpeedSide MovableBullet.AriDrag MovableBullet.Gravity MovableBullet.StartRotation MovableBullet.RotateSpeed MovableBullet.EndRotation MovableBullet.EndRotationRandomRange MovableBullet.ResidueID MovableBullet.Scale MovableBullet.WaterSpeedRate MovableBullet.MaxRange MovableBullet.Duration MovableBullet.EnvironmentHitCount MovableBullet.ReceiverHitCount MovableBullet.CurrentRotation MovableBullet.Velocity MovableBullet.InWater MovableBullet.HitReceiver MovableBullet.BeforeUpdate() MovableBullet.LateUpdate() MovableBullet.StartMove(Direction8, int, int) MovableBullet.GetLastUpdatedTramsform() Bullet.AttackIndex Bullet.AttackCharged Bullet.DamageType Bullet.Sender Bullet.FailbackTargetTeam Bullet.TargetTeam Bullet.BasicDamage Bullet.EnvironmentMask Bullet.ReceiverMask Bullet.RoundHitCheck Bullet.Damage Bullet.Update() Bullet.ReceiverHitCheck(out bool) Bullet.EnvironmentHitCheck(out bool) Bullet.PerformHitEnvironment(out bool) Bullet.PerformHitReceiver(IDamageReceiver, out bool) Bullet.GroundCheck(out Color32) Bullet.GetDamage() Entity.Active Entity.X Entity.Y Entity.Width Entity.Height Entity.TypeID Entity.SpawnFrame Entity.FromWorld Entity.Rect Entity.InstanceOrder Entity.MapUnitPos Entity.InstanceID Entity.IgnoreReposition Entity.XY Entity.Size Entity.Center Entity.CenterX Entity.CenterY Entity.PivotUnitPosition Entity.OnInactivated() Entity.FirstUpdate() Entity.AfterReposition(Int3, Int3) Entity.IgnoreDespawnFromMap(int) Entity.CancelIgnoreDespawnFromMap() Entity.Draw() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Constructors ArrowBullet() public ArrowBullet()"
  },
  "api/AngeliA.Platformer.ArrowBullet.html": {
    "href": "api/AngeliA.Platformer.ArrowBullet.html",
    "title": "Class ArrowBullet | AngeliA",
    "summary": "Class ArrowBullet Namespace AngeliA.Platformer Assembly com.angelia.platformer.dll public class ArrowBullet : MovableBullet, IMapItem Inheritance object Entity Bullet MovableBullet ArrowBullet Implements IMapItem Derived ArrowBullet<I> Inherited Members MovableBullet.SpeedForward MovableBullet.SpeedSide MovableBullet.AriDrag MovableBullet.Gravity MovableBullet.StartRotation MovableBullet.RotateSpeed MovableBullet.EndRotation MovableBullet.EndRotationRandomRange MovableBullet.ResidueID MovableBullet.Scale MovableBullet.WaterSpeedRate MovableBullet.MaxRange MovableBullet.Duration MovableBullet.EnvironmentHitCount MovableBullet.ReceiverHitCount MovableBullet.CurrentRotation MovableBullet.Velocity MovableBullet.InWater MovableBullet.HitReceiver MovableBullet.BeforeUpdate() MovableBullet.LateUpdate() MovableBullet.StartMove(Direction8, int, int) MovableBullet.GetLastUpdatedTramsform() Bullet.AttackIndex Bullet.AttackCharged Bullet.DamageType Bullet.Sender Bullet.FailbackTargetTeam Bullet.TargetTeam Bullet.BasicDamage Bullet.EnvironmentMask Bullet.ReceiverMask Bullet.RoundHitCheck Bullet.Damage Bullet.Update() Bullet.ReceiverHitCheck(out bool) Bullet.EnvironmentHitCheck(out bool) Bullet.PerformHitEnvironment(out bool) Bullet.PerformHitReceiver(IDamageReceiver, out bool) Bullet.GroundCheck(out Color32) Bullet.GetDamage() Entity.Active Entity.X Entity.Y Entity.Width Entity.Height Entity.TypeID Entity.SpawnFrame Entity.FromWorld Entity.Rect Entity.InstanceOrder Entity.MapUnitPos Entity.InstanceID Entity.IgnoreReposition Entity.XY Entity.Size Entity.Center Entity.CenterX Entity.CenterY Entity.PivotUnitPosition Entity.OnInactivated() Entity.FirstUpdate() Entity.AfterReposition(Int3, Int3) Entity.IgnoreDespawnFromMap(int) Entity.CancelIgnoreDespawnFromMap() Entity.Draw() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Constructors ArrowBullet() public ArrowBullet() Properties ArrowArtworkID public int ArrowArtworkID { get; init; } Property Value int ArrowItemID public int ArrowItemID { get; init; } Property Value int ArtworkID public override int ArtworkID { get; } Property Value int SpawnItemWhenBulletDestroy protected virtual bool SpawnItemWhenBulletDestroy { get; } Property Value bool Methods BeforeDespawn(IDamageReceiver) protected override void BeforeDespawn(IDamageReceiver receiver) Parameters receiver IDamageReceiver OnActivated() public override void OnActivated()"
  },
  "api/AngeliA.Platformer.AuraItem-1.html": {
    "href": "api/AngeliA.Platformer.AuraItem-1.html",
    "title": "Class AuraItem<B> | AngeliA",
    "summary": "Class AuraItem<B> Namespace AngeliA.Platformer Assembly com.angelia.platformer.dll public abstract class AuraItem<B> : BuffItem<B>, IMapItem where B : Buff Type Parameters B Inheritance object Item BuffItem BuffItem<B> AuraItem<B> Implements IMapItem Inherited Members BuffItem.AllowDuplicateUpdate BuffItem.MaxStackCount BuffItem.BuffID Item.EmbedIntoLevel Item.TypeID Item.BeforeItemUpdate_FromInventory(Character, int, int) Item.OnPoseAnimationUpdate_FromInventory(PoseCharacterRenderer, int, int) Item.OnTakeDamage_FromInventory(Character, int, int, ref Damage) Item.OnCharacterAttack_FromInventory(Character, Bullet, int, int) Item.BeforeItemUpdate_FromEquipment(Character) Item.OnItemUpdate_FromEquipment(Character) Item.BeforePoseAnimationUpdate_FromEquipment(PoseCharacterRenderer) Item.OnPoseAnimationUpdate_FromEquipment(PoseCharacterRenderer) Item.OnTakeDamage_FromEquipment(Character, ref Damage) Item.OnCharacterAttack_FromEquipment(Character, Bullet) Item.TryRepairEquipment(Character) Item.OnItemUpdate_FromItemHolder(ItemHolder, int) Item.OnCollect(Character) Item.CanUse(Character) Item.Use(Character, int, int, out bool) Item.ItemConditionCheck(Character) Item.DrawItem(Entity, IRect, Color32, int) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Properties Radius protected virtual int Radius { get; } Property Value int Methods OnItemUpdate_FromInventory(Character, int, int) public override void OnItemUpdate_FromInventory(Character holder, int inventoryID, int itemIndex) Parameters holder Character inventoryID int itemIndex int"
  },
  "api/AngeliA.Platformer.BarrelMovement.html": {
    "href": "api/AngeliA.Platformer.BarrelMovement.html",
    "title": "Class BarrelMovement | AngeliA",
    "summary": "Class BarrelMovement Namespace AngeliA.Platformer Assembly com.angelia.platformer.dll public class BarrelMovement : VehicleMovement Inheritance object CharacterMovement VehicleMovement BarrelMovement Inherited Members VehicleMovement.SyncFromConfigFile VehicleMovement.Driver VehicleMovement.Move(Direction3, Direction3, bool) VehicleMovement.Stop() VehicleMovement.Jump(bool) VehicleMovement.HoldJump(bool) VehicleMovement.Crash() VehicleMovement.Dash() VehicleMovement.Pound() VehicleMovement.Rush() CharacterMovement.MovementWidth CharacterMovement.MovementHeight CharacterMovement.WalkAvailable CharacterMovement.WalkSpeed CharacterMovement.WalkAcceleration CharacterMovement.WalkBrakeAcceleration CharacterMovement.WalkDeceleration CharacterMovement.RunAvailable CharacterMovement.RunSpeed CharacterMovement.RunAcceleration CharacterMovement.RunBrakeAcceleration CharacterMovement.RunDeceleration CharacterMovement.JumpCount CharacterMovement.JumpSpeed CharacterMovement.JumpReleaseSpeedRate CharacterMovement.JumpRiseGravityRate CharacterMovement.JumpBoostFromMoveRate CharacterMovement.FirstJumpWithRoll CharacterMovement.SubsequentJumpWithRoll CharacterMovement.JumpBreakRush CharacterMovement.JumpBreakDash CharacterMovement.AllowSquatJump CharacterMovement.JumpDownThroughOneway CharacterMovement.SquatAvailable CharacterMovement.SquatHeightAmount CharacterMovement.SquatMoveSpeed CharacterMovement.SquatAcceleration CharacterMovement.SquatDeceleration CharacterMovement.DashAvailable CharacterMovement.DashHeightAmount CharacterMovement.DashWithRoll CharacterMovement.DashPutoutFire CharacterMovement.DashSpeed CharacterMovement.DashDuration CharacterMovement.DashCooldown CharacterMovement.DashAcceleration CharacterMovement.DashCancelLoseRate CharacterMovement.RushAvailable CharacterMovement.RushHeightAmount CharacterMovement.RushInAir CharacterMovement.RushInWater CharacterMovement.RushWhenClimb CharacterMovement.RushWhenSquat CharacterMovement.RushPutoutFire CharacterMovement.RushSpeed CharacterMovement.RushStopSpeed CharacterMovement.RushDuration CharacterMovement.RushStiff CharacterMovement.RushCooldown CharacterMovement.RushAcceleration CharacterMovement.RushDeceleration CharacterMovement.SlipAvailable CharacterMovement.SlipAcceleration CharacterMovement.SlipDeceleration CharacterMovement.PoundAvailable CharacterMovement.PoundPutoutFire CharacterMovement.PoundSpeed CharacterMovement.SwimAvailable CharacterMovement.InWaterSpeedRate CharacterMovement.SwimWidthAmount CharacterMovement.SwimHeightAmount CharacterMovement.SwimSpeed CharacterMovement.SwimJumpSpeed CharacterMovement.SwimAcceleration CharacterMovement.SwimDeceleration CharacterMovement.ClimbAvailable CharacterMovement.AllowJumpWhenClimbing CharacterMovement.ClimbSpeedX CharacterMovement.ClimbSpeedY CharacterMovement.FlyAvailable CharacterMovement.FlyHeightAmount CharacterMovement.GlideOnFlying CharacterMovement.FlyCooldown CharacterMovement.FlyRiseSpeed CharacterMovement.FlyGravityRiseRate CharacterMovement.FlyGravityFallRate CharacterMovement.FlyFallSpeed CharacterMovement.FlyMoveSpeed CharacterMovement.FlyAcceleration CharacterMovement.FlyDeceleration CharacterMovement.SlideAvailable CharacterMovement.SlideOnAnyBlock CharacterMovement.ResetJumpCountWhenSlide CharacterMovement.SlideJumpKickSpeed CharacterMovement.SlideDropSpeed CharacterMovement.GrabTopAvailable CharacterMovement.GrabSideAvailable CharacterMovement.GrabTopHeightAmount CharacterMovement.GrabSideHeightAmount CharacterMovement.ResetJumpCountWhenGrab CharacterMovement.GrabFlipThroughDownAvailable CharacterMovement.GrabFlipThroughUpAvailable CharacterMovement.GrabFlipThroughDuration CharacterMovement.GrabMoveSpeedX CharacterMovement.GrabMoveSpeedY CharacterMovement.GrabSideJumpKickSpeed CharacterMovement.CrashAvailable CharacterMovement.CrashWhenSlippy CharacterMovement.CrashDuration CharacterMovement.CrashRunDurationRequire CharacterMovement.CrashDeceleration CharacterMovement.PushAvailable CharacterMovement.PushSpeed CharacterMovement.Target CharacterMovement.TargetCharacter CharacterMovement.LastMoveDirection CharacterMovement.IntendedX CharacterMovement.IntendedY CharacterMovement.CurrentJumpCount CharacterMovement.FacingRight CharacterMovement.FacingFront CharacterMovement.ShouldRun CharacterMovement.LastGroundFrame CharacterMovement.LastGroundingFrame CharacterMovement.LastStartMoveFrame CharacterMovement.LastEndMoveFrame CharacterMovement.LastJumpFrame CharacterMovement.LastClimbFrame CharacterMovement.LastDashFrame CharacterMovement.LastRushStartFrame CharacterMovement.LastCrashFrame CharacterMovement.LastSlippyMoveStartFrame CharacterMovement.LastSquatStartFrame CharacterMovement.LastSquattingFrame CharacterMovement.LastPoundingFrame CharacterMovement.LastSlidingFrame CharacterMovement.LastGrabbingFrame CharacterMovement.LastFlyFrame CharacterMovement.LastGrabFlipUpFrame CharacterMovement.LastGrabFlipDownFrame CharacterMovement.LastGrabCancelFrame CharacterMovement.LastStartRunFrame CharacterMovement.LastFacingChangeFrame CharacterMovement.MovementState CharacterMovement.IsGrabFlipping CharacterMovement.IsGrabFlippingUp CharacterMovement.IsGrabFlippingDown CharacterMovement.IsMoving CharacterMovement.IsWalking CharacterMovement.IsRunning CharacterMovement.IsRolling CharacterMovement.IsDashing CharacterMovement.IsRushing CharacterMovement.IsCrashing CharacterMovement.IsSquatting CharacterMovement.IsPounding CharacterMovement.IsClimbing CharacterMovement.IsFlying CharacterMovement.IsSliding CharacterMovement.IsGrabbingTop CharacterMovement.IsGrabbingSide CharacterMovement.Rect CharacterMovement.X CharacterMovement.Y CharacterMovement.Width CharacterMovement.Height CharacterMovement.OffsetX CharacterMovement.OffsetY CharacterMovement.VelocityX CharacterMovement.VelocityY CharacterMovement.IsInsideGround CharacterMovement.InWater CharacterMovement.IsGrounded CharacterMovement.CollisionMask CharacterMovement.OnActivated() CharacterMovement.PhysicsUpdateGamePlay() CharacterMovement.UpdateLater() CharacterMovement.ReloadMovementConfigFromFile() CharacterMovement.StopDash() CharacterMovement.StopRush() CharacterMovement.StopCrash() CharacterMovement.LockFacingRight(bool, int) CharacterMovement.LockSquat(int) CharacterMovement.SetSpeedRate(int, int) CharacterMovement.CalculateMovementState(CharacterMovement) CharacterMovement.MoveLogic(int, int, bool) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Constructors BarrelMovement(Rigidbody) public BarrelMovement(Rigidbody rig) Parameters rig Rigidbody Methods GetMovementState() Get current movement type base on current cached data protected override CharacterMovementState GetMovementState() Returns CharacterMovementState InitializeMeta() protected override void InitializeMeta()"
  },
  "api/AngeliA.Platformer.BarrelVehicle.html": {
    "href": "api/AngeliA.Platformer.BarrelVehicle.html",
    "title": "Class BarrelVehicle | AngeliA",
    "summary": "Class BarrelVehicle Namespace AngeliA.Platformer Assembly com.angelia.platformer.dll public abstract class BarrelVehicle : Vehicle<BarrelMovement>, IMapItem, ICarrier, IWithCharacterMovement, IDamageReceiver Inheritance object Entity Rigidbody Vehicle Vehicle<BarrelMovement> BarrelVehicle Implements IMapItem ICarrier IWithCharacterMovement IDamageReceiver Inherited Members Vehicle.Movement Vehicle.Driver Vehicle.LastDriveChangedFrame Vehicle.StartDriveCooldown Vehicle.FillPyhsicsForDriver Vehicle.PhysicalLayer Vehicle.AirDragY Vehicle.CarryOtherOnTop Vehicle.SelfCollisionMask Vehicle.FacingRight Vehicle.FirstUpdate() Vehicle.BeforeUpdate() Vehicle.TakeDriver() Vehicle.StartDrive(Character) Vehicle.StopDrive() Vehicle.OnDamaged(Damage) Rigidbody.Rect Rigidbody.IsGrounded Rigidbody.IsInsideGround Rigidbody.InWater Rigidbody.VelocityX Rigidbody.VelocityY Rigidbody.BounceSpeedRate Rigidbody.OffsetX Rigidbody.OffsetY Rigidbody.GroundedID Rigidbody.PrevX Rigidbody.PrevY Rigidbody.DeltaPositionX Rigidbody.DeltaPositionY Rigidbody.MomentumX Rigidbody.MomentumY Rigidbody.RequireDodgeOverlap Rigidbody.EjectWhenInsideGround Rigidbody.GlobalGravity Rigidbody.FallingGravityScale Rigidbody.RisingGravityScale Rigidbody.CollisionMask Rigidbody.IgnoreGroundCheck Rigidbody.IgnoreGravity Rigidbody.IgnorePhysics Rigidbody.IgnoreInsideGround Rigidbody.IgnoreOneway Rigidbody.IgnoreMomentum Rigidbody.MaxGravitySpeed Rigidbody.WaterFloatSpeed Rigidbody.WaterSpeedRate Rigidbody.DestroyWhenInsideGround Rigidbody.PerformMove(int, int, bool) Rigidbody.MakeGrounded(int, int) Rigidbody.CancelMakeGrounded() Rigidbody.PerformGroundCheck(IRect, out PhysicsCell) Rigidbody.FillAsTrigger(int, int) Rigidbody.FillAsOnewayUp(int, int) Rigidbody.OnInsideGroundDestroyed() Rigidbody.GroundedCheck() Rigidbody.InsideGroundCheck() Rigidbody.RefreshPrevPosition() Entity.Active Entity.X Entity.Y Entity.Width Entity.Height Entity.TypeID Entity.SpawnFrame Entity.FromWorld Entity.InstanceOrder Entity.MapUnitPos Entity.InstanceID Entity.IgnoreReposition Entity.XY Entity.Size Entity.Center Entity.CenterX Entity.CenterY Entity.PivotUnitPosition Entity.OnInactivated() Entity.AfterReposition(Int3, Int3) Entity.IgnoreDespawnFromMap(int) Entity.CancelIgnoreDespawnFromMap() Entity.Draw() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Properties AirDragX public override int AirDragX { get; } Property Value int AllowBeingPush public override bool AllowBeingPush { get; } Property Value bool BarrelSize public virtual int BarrelSize { get; } Property Value int DriverLeaveLocalPosition public override Int2? DriverLeaveLocalPosition { get; } Property Value Int2? DriverLocalPosition public override Int2? DriverLocalPosition { get; } Property Value Int2? RollSpeed public virtual int RollSpeed { get; } Property Value int Methods CheckForStartDrive(out Character) protected override bool CheckForStartDrive(out Character driver) Parameters driver Character Returns bool CheckForStopDrive() protected override bool CheckForStopDrive() Returns bool LateUpdate() public override void LateUpdate() OnActivated() public override void OnActivated() Push(int) public override void Push(int speedX) Parameters speedX int Update() public override void Update()"
  },
  "api/AngeliA.Platformer.BeamBullet.html": {
    "href": "api/AngeliA.Platformer.BeamBullet.html",
    "title": "Class BeamBullet | AngeliA",
    "summary": "Class BeamBullet Namespace AngeliA.Platformer Assembly com.angelia.platformer.dll public abstract class BeamBullet : MovableBullet, IMapItem Inheritance object Entity Bullet MovableBullet BeamBullet Implements IMapItem Inherited Members MovableBullet.SpeedSide MovableBullet.AriDrag MovableBullet.Gravity MovableBullet.StartRotation MovableBullet.RotateSpeed MovableBullet.EndRotation MovableBullet.EndRotationRandomRange MovableBullet.ResidueID MovableBullet.ArtworkID MovableBullet.Scale MovableBullet.WaterSpeedRate MovableBullet.EnvironmentHitCount MovableBullet.ReceiverHitCount MovableBullet.CurrentRotation MovableBullet.Velocity MovableBullet.InWater MovableBullet.HitReceiver MovableBullet.BeforeUpdate() MovableBullet.StartMove(Direction8, int, int) MovableBullet.GetLastUpdatedTramsform() Bullet.AttackIndex Bullet.AttackCharged Bullet.DamageType Bullet.Sender Bullet.FailbackTargetTeam Bullet.TargetTeam Bullet.BasicDamage Bullet.EnvironmentMask Bullet.ReceiverMask Bullet.RoundHitCheck Bullet.Damage Bullet.Update() Bullet.ReceiverHitCheck(out bool) Bullet.EnvironmentHitCheck(out bool) Bullet.PerformHitEnvironment(out bool) Bullet.PerformHitReceiver(IDamageReceiver, out bool) Bullet.GroundCheck(out Color32) Bullet.GetDamage() Entity.Active Entity.X Entity.Y Entity.Width Entity.Height Entity.TypeID Entity.SpawnFrame Entity.FromWorld Entity.Rect Entity.InstanceOrder Entity.MapUnitPos Entity.InstanceID Entity.IgnoreReposition Entity.XY Entity.Size Entity.Center Entity.CenterX Entity.CenterY Entity.PivotUnitPosition Entity.OnInactivated() Entity.FirstUpdate() Entity.AfterReposition(Int3, Int3) Entity.IgnoreDespawnFromMap(int) Entity.CancelIgnoreDespawnFromMap() Entity.Draw() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Fields BEAM_SPEED public const int BEAM_SPEED = 10752 Field Value int Properties BeamSize protected virtual int BeamSize { get; } Property Value int BeamSpriteID protected abstract int BeamSpriteID { get; } Property Value int BeamTint protected virtual Color32 BeamTint { get; } Property Value Color32 BurstRotateSpeed protected virtual int BurstRotateSpeed { get; } Property Value int BurstSize protected virtual int BurstSize { get; } Property Value int BurstSpriteID protected abstract int BurstSpriteID { get; } Property Value int BurstTint protected virtual Color32 BurstTint { get; } Property Value Color32 Duration public override sealed int Duration { get; } Property Value int HandBurstRotateSpeed protected virtual int HandBurstRotateSpeed { get; } Property Value int HandBurstSize protected virtual int HandBurstSize { get; } Property Value int HandBurstSpriteID protected abstract int HandBurstSpriteID { get; } Property Value int HandBurstTint protected virtual Color32 HandBurstTint { get; } Property Value Color32 IllumanteAmount protected virtual int IllumanteAmount { get; } Property Value int IllumanteUnitRadius protected virtual int IllumanteUnitRadius { get; } Property Value int MaxRange public override int MaxRange { get; } Property Value int OnlyShowBurstWhenHitReceiver protected virtual bool OnlyShowBurstWhenHitReceiver { get; } Property Value bool RenderingLayer protected virtual int RenderingLayer { get; } Property Value int SparkSize protected virtual int SparkSize { get; } Property Value int SparkSpriteID protected abstract int SparkSpriteID { get; } Property Value int SparkTint protected virtual Color32 SparkTint { get; } Property Value Color32 SpeedForward public override sealed int SpeedForward { get; } Property Value int Methods BeforeDespawn(IDamageReceiver) protected override void BeforeDespawn(IDamageReceiver receiver) Parameters receiver IDamageReceiver LateUpdate() public override void LateUpdate() OnActivated() public override void OnActivated()"
  },
  "api/AngeliA.Platformer.Bed.html": {
    "href": "api/AngeliA.Platformer.Bed.html",
    "title": "Class Bed | AngeliA",
    "summary": "Class Bed Namespace AngeliA.Platformer Assembly com.angelia.platformer.dll public abstract class Bed : ActionFurniture, IMapItem, IBlockEntity, IActionTarget Inheritance object Entity Furniture ActionFurniture Bed Implements IMapItem IBlockEntity IActionTarget Inherited Members ActionFurniture.LateUpdate() ActionFurniture.AllowInvoke() Furniture.FurnitureLeftOrDown Furniture.FurnitureRightOrUp Furniture.Pose Furniture.ColliderBorder Furniture.FirstUpdate() Furniture.BeforeUpdate() Furniture.GetIsHighlighted() Furniture.GetSpriteFromPose() Entity.Active Entity.X Entity.Y Entity.Width Entity.Height Entity.TypeID Entity.SpawnFrame Entity.FromWorld Entity.Rect Entity.InstanceOrder Entity.MapUnitPos Entity.InstanceID Entity.IgnoreReposition Entity.XY Entity.Size Entity.Center Entity.CenterX Entity.CenterY Entity.PivotUnitPosition Entity.AfterReposition(Int3, Int3) Entity.IgnoreDespawnFromMap(int) Entity.CancelIgnoreDespawnFromMap() Entity.Draw() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Properties ModuleType protected override Direction3 ModuleType { get; } Property Value Direction3 Methods GetTargetOnBed(Character) public void GetTargetOnBed(Character target) Parameters target Character Invoke() public override bool Invoke() Returns bool OnActivated() public override void OnActivated() OnInactivated() public override void OnInactivated() Update() public override void Update()"
  },
  "api/AngeliA.Platformer.BodyArmor-2.html": {
    "href": "api/AngeliA.Platformer.BodyArmor-2.html",
    "title": "Class BodyArmor<P, N> | AngeliA",
    "summary": "Class BodyArmor<P, N> Namespace AngeliA.Platformer Assembly com.angelia.platformer.dll public abstract class BodyArmor<P, N> : Armor<P, N>, IMapItem, IProgressiveItem where P : Equipment where N : Equipment Type Parameters P N Inheritance object Item Equipment Armor<P, N> BodyArmor<P, N> Implements IMapItem IProgressiveItem Inherited Members Armor<P, N>.RepairMaterials Armor<P, N>.Scale Armor<P, N>.HideEar Armor<P, N>.HideHorn Armor<P, N>.HideHair Armor<P, N>.HideTail Armor<P, N>.HideFace Armor<P, N>.HideWing Armor<P, N>.OnPoseAnimationUpdate_FromEquipment(PoseCharacterRenderer) Armor<P, N>.DrawArmor(PoseCharacterRenderer) Armor<P, N>.OnTakeDamage_FromEquipment(Character, ref Damage) Armor<P, N>.TryRepairEquipment(Character) Armor<P, N>.RepairArmor(Character, int) Equipment.MaxStackCount Item.AllowDuplicateUpdate Item.EmbedIntoLevel Item.TypeID Item.BeforeItemUpdate_FromInventory(Character, int, int) Item.OnItemUpdate_FromInventory(Character, int, int) Item.OnPoseAnimationUpdate_FromInventory(PoseCharacterRenderer, int, int) Item.OnTakeDamage_FromInventory(Character, int, int, ref Damage) Item.OnCharacterAttack_FromInventory(Character, Bullet, int, int) Item.BeforeItemUpdate_FromEquipment(Character) Item.OnItemUpdate_FromEquipment(Character) Item.BeforePoseAnimationUpdate_FromEquipment(PoseCharacterRenderer) Item.OnPoseAnimationUpdate_FromEquipment(PoseCharacterRenderer) Item.OnTakeDamage_FromEquipment(Character, ref Damage) Item.OnCharacterAttack_FromEquipment(Character, Bullet) Item.TryRepairEquipment(Character) Item.OnItemUpdate_FromItemHolder(ItemHolder, int) Item.OnCollect(Character) Item.CanUse(Character) Item.Use(Character, int, int, out bool) Item.ItemConditionCheck(Character) Item.DrawItem(Entity, IRect, Color32, int) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Constructors BodyArmor() public BodyArmor() Properties EquipmentType public override sealed EquipmentType EquipmentType { get; } Property Value EquipmentType Methods DrawArmor(PoseCharacterRenderer) protected override void DrawArmor(PoseCharacterRenderer renderer) Parameters renderer PoseCharacterRenderer"
  },
  "api/AngeliA.Platformer.Breakable.html": {
    "href": "api/AngeliA.Platformer.Breakable.html",
    "title": "Class Breakable | AngeliA",
    "summary": "Class Breakable Namespace AngeliA.Platformer Assembly com.angelia.platformer.dll [Entity.Layer(3)] public abstract class Breakable : Rigidbody, IMapItem, ICarrier, IBlockEntity, IDamageReceiver Inheritance object Entity Rigidbody Breakable Implements IMapItem ICarrier IBlockEntity IDamageReceiver Inherited Members Rigidbody.Rect Rigidbody.IsGrounded Rigidbody.IsInsideGround Rigidbody.InWater Rigidbody.VelocityX Rigidbody.VelocityY Rigidbody.BounceSpeedRate Rigidbody.OffsetX Rigidbody.OffsetY Rigidbody.GroundedID Rigidbody.PrevX Rigidbody.PrevY Rigidbody.DeltaPositionX Rigidbody.DeltaPositionY Rigidbody.MomentumX Rigidbody.MomentumY Rigidbody.RequireDodgeOverlap Rigidbody.FacingRight Rigidbody.EjectWhenInsideGround Rigidbody.GlobalGravity Rigidbody.FallingGravityScale Rigidbody.RisingGravityScale Rigidbody.CollisionMask Rigidbody.IgnoreGroundCheck Rigidbody.IgnoreGravity Rigidbody.IgnorePhysics Rigidbody.IgnoreInsideGround Rigidbody.IgnoreOneway Rigidbody.IgnoreMomentum Rigidbody.SelfCollisionMask Rigidbody.MaxGravitySpeed Rigidbody.AirDragX Rigidbody.AirDragY Rigidbody.WaterFloatSpeed Rigidbody.WaterSpeedRate Rigidbody.AllowBeingPush Rigidbody.CarryOtherOnTop Rigidbody.OnActivated() Rigidbody.FirstUpdate() Rigidbody.Update() Rigidbody.PerformMove(int, int, bool) Rigidbody.MakeGrounded(int, int) Rigidbody.CancelMakeGrounded() Rigidbody.Push(int) Rigidbody.PerformGroundCheck(IRect, out PhysicsCell) Rigidbody.FillAsTrigger(int, int) Rigidbody.FillAsOnewayUp(int, int) Rigidbody.GroundedCheck() Rigidbody.InsideGroundCheck() Rigidbody.RefreshPrevPosition() Entity.Active Entity.X Entity.Y Entity.Width Entity.Height Entity.TypeID Entity.SpawnFrame Entity.FromWorld Entity.InstanceOrder Entity.MapUnitPos Entity.InstanceID Entity.IgnoreReposition Entity.XY Entity.Size Entity.Center Entity.CenterX Entity.CenterY Entity.PivotUnitPosition Entity.OnInactivated() Entity.BeforeUpdate() Entity.AfterReposition(Int3, Int3) Entity.IgnoreDespawnFromMap(int) Entity.CancelIgnoreDespawnFromMap() Entity.Draw() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Properties DestroyWhenInsideGround public override bool DestroyWhenInsideGround { get; } Property Value bool IgnoreDamageType public virtual Tag IgnoreDamageType { get; } Property Value Tag PhysicalLayer public override int PhysicalLayer { get; } Property Value int SpawnItemFromMapWhenBreak public virtual bool SpawnItemFromMapWhenBreak { get; } Property Value bool Methods LateUpdate() public override void LateUpdate() OnBreak() protected virtual void OnBreak() OnInsideGroundDestroyed() protected override void OnInsideGroundDestroyed()"
  },
  "api/AngeliA.Platformer.BulletShooter-1.html": {
    "href": "api/AngeliA.Platformer.BulletShooter-1.html",
    "title": "Class BulletShooter<B> | AngeliA",
    "summary": "Class BulletShooter<B> Namespace AngeliA.Platformer Assembly com.angelia.platformer.dll public abstract class BulletShooter<B> : BulletShooter, IMapItem, IBlockEntity where B : Bullet Type Parameters B Inheritance object Entity BulletShooter BulletShooter<B> Implements IMapItem IBlockEntity Inherited Members BulletShooter.ShootFrequency BulletShooter.ShootOffsetForward BulletShooter.ShootOffsetSide BulletShooter.AttackTargetTeam BulletShooter.ShootDirection BulletShooter.LastShootFrame BulletShooter.OnActivated() BulletShooter.FirstUpdate() BulletShooter.BeforeUpdate() BulletShooter.Shoot() BulletShooter.OnBulletShoot(Bullet) Entity.Active Entity.X Entity.Y Entity.Width Entity.Height Entity.TypeID Entity.SpawnFrame Entity.FromWorld Entity.Rect Entity.InstanceOrder Entity.MapUnitPos Entity.InstanceID Entity.IgnoreReposition Entity.XY Entity.Size Entity.Center Entity.CenterX Entity.CenterY Entity.PivotUnitPosition Entity.OnInactivated() Entity.Update() Entity.LateUpdate() Entity.AfterReposition(Int3, Int3) Entity.IgnoreDespawnFromMap(int) Entity.CancelIgnoreDespawnFromMap() Entity.Draw() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Constructors BulletShooter() public BulletShooter() Properties BulletID protected override int BulletID { get; } Property Value int"
  },
  "api/AngeliA.Platformer.BulletShooter.html": {
    "href": "api/AngeliA.Platformer.BulletShooter.html",
    "title": "Class BulletShooter | AngeliA",
    "summary": "Class BulletShooter Namespace AngeliA.Platformer Assembly com.angelia.platformer.dll [Entity.Layer(3)] [Entity.MapEditorGroup(\"Contraption\", 0)] public abstract class BulletShooter : Entity, IMapItem, IBlockEntity Inheritance object Entity BulletShooter Implements IMapItem IBlockEntity Derived BulletShooter<B> Inherited Members Entity.Active Entity.X Entity.Y Entity.Width Entity.Height Entity.TypeID Entity.SpawnFrame Entity.FromWorld Entity.Rect Entity.InstanceOrder Entity.MapUnitPos Entity.InstanceID Entity.IgnoreReposition Entity.XY Entity.Size Entity.Center Entity.CenterX Entity.CenterY Entity.PivotUnitPosition Entity.OnInactivated() Entity.Update() Entity.LateUpdate() Entity.AfterReposition(Int3, Int3) Entity.IgnoreDespawnFromMap(int) Entity.CancelIgnoreDespawnFromMap() Entity.Draw() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Properties AttackTargetTeam protected virtual int AttackTargetTeam { get; } Property Value int BulletID protected abstract int BulletID { get; } Property Value int LastShootFrame protected int LastShootFrame { get; } Property Value int ShootDirection protected abstract Direction4 ShootDirection { get; } Property Value Direction4 ShootFrequency protected virtual int ShootFrequency { get; } Property Value int ShootOffsetForward protected virtual int ShootOffsetForward { get; } Property Value int ShootOffsetSide protected virtual int ShootOffsetSide { get; } Property Value int Methods BeforeUpdate() public override void BeforeUpdate() FirstUpdate() public override void FirstUpdate() OnActivated() public override void OnActivated() OnBulletShoot(Bullet) protected virtual void OnBulletShoot(Bullet bullet) Parameters bullet Bullet Shoot() public void Shoot()"
  },
  "api/AngeliA.Platformer.Burner-1.html": {
    "href": "api/AngeliA.Platformer.Burner-1.html",
    "title": "Class Burner<F> | AngeliA",
    "summary": "Class Burner<F> Namespace AngeliA.Platformer Assembly com.angelia.platformer.dll [Entity.Layer(3)] [Entity.MapEditorGroup(\"Contraption\", 0)] public abstract class Burner<F> : Entity, IMapItem, IBlockEntity where F : Fire Type Parameters F Inheritance object Entity Burner<F> Implements IMapItem IBlockEntity Inherited Members Entity.Active Entity.X Entity.Y Entity.Width Entity.Height Entity.TypeID Entity.SpawnFrame Entity.FromWorld Entity.Rect Entity.InstanceOrder Entity.MapUnitPos Entity.InstanceID Entity.IgnoreReposition Entity.XY Entity.Size Entity.Center Entity.CenterX Entity.CenterY Entity.PivotUnitPosition Entity.OnInactivated() Entity.BeforeUpdate() Entity.AfterReposition(Int3, Int3) Entity.IgnoreDespawnFromMap(int) Entity.CancelIgnoreDespawnFromMap() Entity.Draw() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Constructors Burner() public Burner() Properties AllowFireFromMapElement protected virtual bool AllowFireFromMapElement { get; } Property Value bool Direction protected virtual Direction4 Direction { get; } Property Value Direction4 FireDuration protected virtual int FireDuration { get; } Property Value int FireFrequency protected virtual int FireFrequency { get; } Property Value int Methods FirstUpdate() public override void FirstUpdate() LateUpdate() public override void LateUpdate() OnActivated() public override void OnActivated() Update() public override void Update()"
  },
  "api/AngeliA.Platformer.CabinetIdol.html": {
    "href": "api/AngeliA.Platformer.CabinetIdol.html",
    "title": "Class CabinetIdol | AngeliA",
    "summary": "Class CabinetIdol Namespace AngeliA.Platformer Assembly com.angelia.platformer.dll public abstract class CabinetIdol : Furniture, IMapItem, IBlockEntity, IActionTarget Inheritance object Entity Furniture CabinetIdol Implements IMapItem IBlockEntity IActionTarget Inherited Members Furniture.ModuleType Furniture.FurnitureLeftOrDown Furniture.FurnitureRightOrUp Furniture.Pose Furniture.ColliderBorder Furniture.OnActivated() Furniture.FirstUpdate() Furniture.BeforeUpdate() Furniture.GetIsHighlighted() Furniture.GetSpriteFromPose() Entity.Active Entity.X Entity.Y Entity.Width Entity.Height Entity.TypeID Entity.SpawnFrame Entity.FromWorld Entity.Rect Entity.InstanceOrder Entity.MapUnitPos Entity.InstanceID Entity.IgnoreReposition Entity.XY Entity.Size Entity.Center Entity.CenterX Entity.CenterY Entity.PivotUnitPosition Entity.OnInactivated() Entity.Update() Entity.AfterReposition(Int3, Int3) Entity.IgnoreDespawnFromMap(int) Entity.CancelIgnoreDespawnFromMap() Entity.Draw() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Methods LateUpdate() public override void LateUpdate()"
  },
  "api/AngeliA.Platformer.CameraAutoDirection.html": {
    "href": "api/AngeliA.Platformer.CameraAutoDirection.html",
    "title": "Class CameraAutoDirection | AngeliA",
    "summary": "Class CameraAutoDirection Namespace AngeliA.Platformer Assembly com.angelia.platformer.dll [Entity.MapEditorGroup(\"System\", -512)] public sealed class CameraAutoDirection : IMapItem Inheritance object CameraAutoDirection Implements IMapItem Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.Platformer.CameraAutoScroll.html": {
    "href": "api/AngeliA.Platformer.CameraAutoScroll.html",
    "title": "Class CameraAutoScroll | AngeliA",
    "summary": "Class CameraAutoScroll Namespace AngeliA.Platformer Assembly com.angelia.platformer.dll [Entity.MapEditorGroup(\"System\", -512)] public sealed class CameraAutoScroll : Entity, IMapItem Inheritance object Entity CameraAutoScroll Implements IMapItem Inherited Members Entity.Active Entity.X Entity.Y Entity.Width Entity.Height Entity.TypeID Entity.SpawnFrame Entity.FromWorld Entity.Rect Entity.InstanceOrder Entity.MapUnitPos Entity.InstanceID Entity.IgnoreReposition Entity.XY Entity.Size Entity.Center Entity.CenterX Entity.CenterY Entity.PivotUnitPosition Entity.FirstUpdate() Entity.BeforeUpdate() Entity.Update() Entity.AfterReposition(Int3, Int3) Entity.IgnoreDespawnFromMap(int) Entity.CancelIgnoreDespawnFromMap() Entity.Draw() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Methods LateUpdate() public override void LateUpdate() OnActivated() public override void OnActivated() OnInactivated() public override void OnInactivated()"
  },
  "api/AngeliA.Platformer.CameraGate.html": {
    "href": "api/AngeliA.Platformer.CameraGate.html",
    "title": "Class CameraGate | AngeliA",
    "summary": "Class CameraGate Namespace AngeliA.Platformer Assembly com.angelia.platformer.dll [Entity.MapEditorGroup(\"System\", -512)] public abstract class CameraGate : Entity, IMapItem Inheritance object Entity CameraGate Implements IMapItem Derived CameraGateDown CameraGateLeft CameraGateRight CameraGateUp Inherited Members Entity.Active Entity.X Entity.Y Entity.Width Entity.Height Entity.TypeID Entity.SpawnFrame Entity.FromWorld Entity.Rect Entity.InstanceOrder Entity.MapUnitPos Entity.InstanceID Entity.IgnoreReposition Entity.XY Entity.Size Entity.Center Entity.CenterX Entity.CenterY Entity.PivotUnitPosition Entity.OnActivated() Entity.OnInactivated() Entity.FirstUpdate() Entity.AfterReposition(Int3, Int3) Entity.IgnoreDespawnFromMap(int) Entity.CancelIgnoreDespawnFromMap() Entity.Draw() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Properties Direction protected abstract Direction4 Direction { get; } Property Value Direction4 Methods BeforeUpdate() public override void BeforeUpdate() LateUpdate() public override void LateUpdate() Update() public override void Update()"
  },
  "api/AngeliA.Platformer.CameraGateDown.html": {
    "href": "api/AngeliA.Platformer.CameraGateDown.html",
    "title": "Class CameraGateDown | AngeliA",
    "summary": "Class CameraGateDown Namespace AngeliA.Platformer Assembly com.angelia.platformer.dll public class CameraGateDown : CameraGate, IMapItem Inheritance object Entity CameraGate CameraGateDown Implements IMapItem Inherited Members CameraGate.BeforeUpdate() CameraGate.Update() CameraGate.LateUpdate() Entity.Active Entity.X Entity.Y Entity.Width Entity.Height Entity.TypeID Entity.SpawnFrame Entity.FromWorld Entity.Rect Entity.InstanceOrder Entity.MapUnitPos Entity.InstanceID Entity.IgnoreReposition Entity.XY Entity.Size Entity.Center Entity.CenterX Entity.CenterY Entity.PivotUnitPosition Entity.OnActivated() Entity.OnInactivated() Entity.FirstUpdate() Entity.AfterReposition(Int3, Int3) Entity.IgnoreDespawnFromMap(int) Entity.CancelIgnoreDespawnFromMap() Entity.Draw() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Properties Direction protected override Direction4 Direction { get; } Property Value Direction4"
  },
  "api/AngeliA.Platformer.CameraGateLeft.html": {
    "href": "api/AngeliA.Platformer.CameraGateLeft.html",
    "title": "Class CameraGateLeft | AngeliA",
    "summary": "Class CameraGateLeft Namespace AngeliA.Platformer Assembly com.angelia.platformer.dll public class CameraGateLeft : CameraGate, IMapItem Inheritance object Entity CameraGate CameraGateLeft Implements IMapItem Inherited Members CameraGate.BeforeUpdate() CameraGate.Update() CameraGate.LateUpdate() Entity.Active Entity.X Entity.Y Entity.Width Entity.Height Entity.TypeID Entity.SpawnFrame Entity.FromWorld Entity.Rect Entity.InstanceOrder Entity.MapUnitPos Entity.InstanceID Entity.IgnoreReposition Entity.XY Entity.Size Entity.Center Entity.CenterX Entity.CenterY Entity.PivotUnitPosition Entity.OnActivated() Entity.OnInactivated() Entity.FirstUpdate() Entity.AfterReposition(Int3, Int3) Entity.IgnoreDespawnFromMap(int) Entity.CancelIgnoreDespawnFromMap() Entity.Draw() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Properties Direction protected override Direction4 Direction { get; } Property Value Direction4"
  },
  "api/AngeliA.Platformer.CameraGateRight.html": {
    "href": "api/AngeliA.Platformer.CameraGateRight.html",
    "title": "Class CameraGateRight | AngeliA",
    "summary": "Class CameraGateRight Namespace AngeliA.Platformer Assembly com.angelia.platformer.dll public class CameraGateRight : CameraGate, IMapItem Inheritance object Entity CameraGate CameraGateRight Implements IMapItem Inherited Members CameraGate.BeforeUpdate() CameraGate.Update() CameraGate.LateUpdate() Entity.Active Entity.X Entity.Y Entity.Width Entity.Height Entity.TypeID Entity.SpawnFrame Entity.FromWorld Entity.Rect Entity.InstanceOrder Entity.MapUnitPos Entity.InstanceID Entity.IgnoreReposition Entity.XY Entity.Size Entity.Center Entity.CenterX Entity.CenterY Entity.PivotUnitPosition Entity.OnActivated() Entity.OnInactivated() Entity.FirstUpdate() Entity.AfterReposition(Int3, Int3) Entity.IgnoreDespawnFromMap(int) Entity.CancelIgnoreDespawnFromMap() Entity.Draw() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Properties Direction protected override Direction4 Direction { get; } Property Value Direction4"
  },
  "api/AngeliA.Platformer.CameraGateUp.html": {
    "href": "api/AngeliA.Platformer.CameraGateUp.html",
    "title": "Class CameraGateUp | AngeliA",
    "summary": "Class CameraGateUp Namespace AngeliA.Platformer Assembly com.angelia.platformer.dll public class CameraGateUp : CameraGate, IMapItem Inheritance object Entity CameraGate CameraGateUp Implements IMapItem Inherited Members CameraGate.BeforeUpdate() CameraGate.Update() CameraGate.LateUpdate() Entity.Active Entity.X Entity.Y Entity.Width Entity.Height Entity.TypeID Entity.SpawnFrame Entity.FromWorld Entity.Rect Entity.InstanceOrder Entity.MapUnitPos Entity.InstanceID Entity.IgnoreReposition Entity.XY Entity.Size Entity.Center Entity.CenterX Entity.CenterY Entity.PivotUnitPosition Entity.OnActivated() Entity.OnInactivated() Entity.FirstUpdate() Entity.AfterReposition(Int3, Int3) Entity.IgnoreDespawnFromMap(int) Entity.CancelIgnoreDespawnFromMap() Entity.Draw() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Properties Direction protected override Direction4 Direction { get; } Property Value Direction4"
  },
  "api/AngeliA.Platformer.CarryingPipe.html": {
    "href": "api/AngeliA.Platformer.CarryingPipe.html",
    "title": "Class CarryingPipe | AngeliA",
    "summary": "Class CarryingPipe Namespace AngeliA.Platformer Assembly com.angelia.platformer.dll [Entity.MapEditorGroup(\"Entity\", 0)] [Entity.Layer(3)] public abstract class CarryingPipe : Entity, IMapItem, IBlockEntity Inheritance object Entity CarryingPipe Implements IMapItem IBlockEntity Inherited Members Entity.Active Entity.X Entity.Y Entity.Width Entity.Height Entity.TypeID Entity.SpawnFrame Entity.FromWorld Entity.Rect Entity.InstanceOrder Entity.MapUnitPos Entity.InstanceID Entity.IgnoreReposition Entity.XY Entity.Size Entity.Center Entity.CenterX Entity.CenterY Entity.PivotUnitPosition Entity.OnInactivated() Entity.BeforeUpdate() Entity.AfterReposition(Int3, Int3) Entity.IgnoreDespawnFromMap(int) Entity.CancelIgnoreDespawnFromMap() Entity.Draw() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Properties BottomSprite protected abstract SpriteCode BottomSprite { get; } Property Value SpriteCode CarryingPoseAnimationID protected virtual int CarryingPoseAnimationID { get; } Property Value int Direction protected abstract Direction4 Direction { get; } Property Value Direction4 EdgeSprite protected abstract SpriteCode EdgeSprite { get; } Property Value SpriteCode InsertSprite protected abstract SpriteCode InsertSprite { get; } Property Value SpriteCode MidSprite protected abstract SpriteCode MidSprite { get; } Property Value SpriteCode Methods FirstUpdate() public override void FirstUpdate() IsEdge(bool) public bool IsEdge(bool requireOpenSpace) Parameters requireOpenSpace bool Returns bool LateUpdate() public override void LateUpdate() OnActivated() public override void OnActivated() OnPlayerEnter(Character) protected virtual void OnPlayerEnter(Character player) Parameters player Character OnPlayerExit(Character) protected virtual void OnPlayerExit(Character player) Parameters player Character Update() public override void Update()"
  },
  "api/AngeliA.Platformer.ChainCrusher.html": {
    "href": "api/AngeliA.Platformer.ChainCrusher.html",
    "title": "Class ChainCrusher | AngeliA",
    "summary": "Class ChainCrusher Namespace AngeliA.Platformer Assembly com.angelia.platformer.dll [Entity.Layer(3)] [Entity.MapEditorGroup(\"Contraption\", 0)] public abstract class ChainCrusher : Entity, IMapItem, IBlockEntity, ICircuitOperator, IDamageReceiver Inheritance object Entity ChainCrusher Implements IMapItem IBlockEntity ICircuitOperator IDamageReceiver Inherited Members Entity.Active Entity.X Entity.Y Entity.Width Entity.Height Entity.TypeID Entity.SpawnFrame Entity.FromWorld Entity.Rect Entity.InstanceOrder Entity.MapUnitPos Entity.InstanceID Entity.IgnoreReposition Entity.XY Entity.Size Entity.Center Entity.CenterX Entity.CenterY Entity.PivotUnitPosition Entity.OnInactivated() Entity.Update() Entity.LateUpdate() Entity.AfterReposition(Int3, Int3) Entity.IgnoreDespawnFromMap(int) Entity.CancelIgnoreDespawnFromMap() Entity.Draw() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Properties AllowReleaseBall public virtual bool AllowReleaseBall { get; } Property Value bool AttackTargetTeam public virtual int AttackTargetTeam { get; } Property Value int BallReleaseFrame protected int BallReleaseFrame { get; } Property Value int ChainLength public virtual int ChainLength { get; } Property Value int Clockwise public virtual bool Clockwise { get; } Property Value bool CurrentSpikeBallPos protected Int2 CurrentSpikeBallPos { get; } Property Value Int2 CurrentSpikeBallRotation protected float CurrentSpikeBallRotation { get; } Property Value float DamageAmount public virtual int DamageAmount { get; } Property Value int DamageType public virtual Tag DamageType { get; } Property Value Tag ReleaseBallOnCircuitTrigger public virtual bool ReleaseBallOnCircuitTrigger { get; } Property Value bool ReleaseBallOnDamaged public virtual bool ReleaseBallOnDamaged { get; } Property Value bool RotateFrequency public virtual int RotateFrequency { get; } Property Value int SpikeBallSize public virtual int SpikeBallSize { get; } Property Value int Methods BeforeUpdate() public override void BeforeUpdate() CalculateCurrentSpikeBallTransform() protected virtual (Int2 pos, float rot) CalculateCurrentSpikeBallTransform() Returns (Int2 pos, float rot) FirstUpdate() public override void FirstUpdate() OnActivated() public override void OnActivated() OnReleaseBall() protected virtual void OnReleaseBall()"
  },
  "api/AngeliA.Platformer.Chair.html": {
    "href": "api/AngeliA.Platformer.Chair.html",
    "title": "Class Chair | AngeliA",
    "summary": "Class Chair Namespace AngeliA.Platformer Assembly com.angelia.platformer.dll public abstract class Chair : ActionFurniture, IMapItem, IBlockEntity, IActionTarget Inheritance object Entity Furniture ActionFurniture Chair Implements IMapItem IBlockEntity IActionTarget Inherited Members Furniture.FurnitureLeftOrDown Furniture.FurnitureRightOrUp Furniture.Pose Furniture.ColliderBorder Furniture.FirstUpdate() Furniture.GetIsHighlighted() Furniture.GetSpriteFromPose() Entity.Active Entity.X Entity.Y Entity.Width Entity.Height Entity.TypeID Entity.SpawnFrame Entity.FromWorld Entity.Rect Entity.InstanceOrder Entity.MapUnitPos Entity.InstanceID Entity.IgnoreReposition Entity.XY Entity.Size Entity.Center Entity.CenterX Entity.CenterY Entity.PivotUnitPosition Entity.OnInactivated() Entity.Update() Entity.AfterReposition(Int3, Int3) Entity.IgnoreDespawnFromMap(int) Entity.CancelIgnoreDespawnFromMap() Entity.Draw() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Properties ModuleType protected override sealed Direction3 ModuleType { get; } Property Value Direction3 SitPoseAnimationID protected virtual int SitPoseAnimationID { get; } Property Value int Methods AllowInvoke() public override bool AllowInvoke() Returns bool BeforeUpdate() public override void BeforeUpdate() Invoke() public override bool Invoke() Returns bool LateUpdate() public override void LateUpdate() MakeTargetSit(Entity) public void MakeTargetSit(Entity target) Parameters target Entity OnActivated() public override void OnActivated()"
  },
  "api/AngeliA.Platformer.CheckAltar-1.html": {
    "href": "api/AngeliA.Platformer.CheckAltar-1.html",
    "title": "Class CheckAltar<CP> | AngeliA",
    "summary": "Class CheckAltar<CP> Namespace AngeliA.Platformer Assembly com.angelia.platformer.dll public abstract class CheckAltar<CP> : CheckAltar, IMapItem, ICircuitOperator, IBlockEntity where CP : CheckPoint Type Parameters CP Inheritance object Entity CheckAltar CheckAltar<CP> Implements IMapItem ICircuitOperator IBlockEntity Inherited Members CheckAltar.LinkPoolReady CheckAltar.CurrentAltarID CheckAltar.CurrentAltarUnitPos CheckAltar.LinkedCheckPointID CheckAltar.OnActivated() CheckAltar.FirstUpdate() CheckAltar.Update() CheckAltar.LateUpdate() CheckAltar.Touch() CheckAltar.TryGetLinkedID(int, out int) CheckAltar.TriggerCheckAltar(Int3) CheckAltar.TriggerCheckAltar(int, Int3) Entity.Active Entity.X Entity.Y Entity.Width Entity.Height Entity.TypeID Entity.SpawnFrame Entity.FromWorld Entity.Rect Entity.InstanceOrder Entity.MapUnitPos Entity.InstanceID Entity.IgnoreReposition Entity.XY Entity.Size Entity.Center Entity.CenterX Entity.CenterY Entity.PivotUnitPosition Entity.OnInactivated() Entity.BeforeUpdate() Entity.AfterReposition(Int3, Int3) Entity.IgnoreDespawnFromMap(int) Entity.CancelIgnoreDespawnFromMap() Entity.Draw() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Constructors CheckAltar() public CheckAltar()"
  },
  "api/AngeliA.Platformer.CheckAltar.html": {
    "href": "api/AngeliA.Platformer.CheckAltar.html",
    "title": "Class CheckAltar | AngeliA",
    "summary": "Class CheckAltar Namespace AngeliA.Platformer Assembly com.angelia.platformer.dll [Entity.MapEditorGroup(\"CheckPoint\", 0)] [Entity.Layer(3)] public abstract class CheckAltar : Entity, IMapItem, ICircuitOperator, IBlockEntity Inheritance object Entity CheckAltar Implements IMapItem ICircuitOperator IBlockEntity Derived CheckAltar<CP> Inherited Members Entity.Active Entity.X Entity.Y Entity.Width Entity.Height Entity.TypeID Entity.SpawnFrame Entity.FromWorld Entity.Rect Entity.InstanceOrder Entity.MapUnitPos Entity.InstanceID Entity.IgnoreReposition Entity.XY Entity.Size Entity.Center Entity.CenterX Entity.CenterY Entity.PivotUnitPosition Entity.OnInactivated() Entity.BeforeUpdate() Entity.AfterReposition(Int3, Int3) Entity.IgnoreDespawnFromMap(int) Entity.CancelIgnoreDespawnFromMap() Entity.Draw() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Fields LinkedCheckPointID protected int LinkedCheckPointID Field Value int Properties CurrentAltarID public static int CurrentAltarID { get; } Property Value int CurrentAltarUnitPos public static Int3 CurrentAltarUnitPos { get; } Property Value Int3 LinkPoolReady public static bool LinkPoolReady { get; } Property Value bool Methods FirstUpdate() public override void FirstUpdate() LateUpdate() public override void LateUpdate() OnActivated() public override void OnActivated() Touch() public virtual void Touch() TriggerCheckAltar(Int3) public static void TriggerCheckAltar(Int3 unitPos) Parameters unitPos Int3 TriggerCheckAltar(int, Int3) public static void TriggerCheckAltar(int id, Int3 unitPos) Parameters id int unitPos Int3 TryGetLinkedID(int, out int) public static bool TryGetLinkedID(int id, out int linkedID) Parameters id int linkedID int Returns bool Update() public override void Update()"
  },
  "api/AngeliA.Platformer.CheckPoint.html": {
    "href": "api/AngeliA.Platformer.CheckPoint.html",
    "title": "Class CheckPoint | AngeliA",
    "summary": "Class CheckPoint Namespace AngeliA.Platformer Assembly com.angelia.platformer.dll [Entity.MapEditorGroup(\"CheckPoint\", 0)] [Entity.Layer(3)] public abstract class CheckPoint : Entity, IMapItem, IBlockEntity, ICircuitOperator Inheritance object Entity CheckPoint Implements IMapItem IBlockEntity ICircuitOperator Inherited Members Entity.Active Entity.X Entity.Y Entity.Width Entity.Height Entity.TypeID Entity.SpawnFrame Entity.FromWorld Entity.Rect Entity.InstanceOrder Entity.MapUnitPos Entity.InstanceID Entity.IgnoreReposition Entity.XY Entity.Size Entity.Center Entity.CenterX Entity.CenterY Entity.PivotUnitPosition Entity.OnInactivated() Entity.BeforeUpdate() Entity.AfterReposition(Int3, Int3) Entity.IgnoreDespawnFromMap(int) Entity.CancelIgnoreDespawnFromMap() Entity.Draw() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Constructors CheckPoint() public CheckPoint() Fields LastTriggerFrame protected int LastTriggerFrame Field Value int Properties LastTriggeredCheckPointID public static int LastTriggeredCheckPointID { get; } Property Value int LastTriggeredCheckPointUnitPosition public static Int3? LastTriggeredCheckPointUnitPosition { get; } Property Value Int3? RequireAltarUnlock protected virtual bool RequireAltarUnlock { get; } Property Value bool Methods FirstUpdate() public override void FirstUpdate() LateUpdate() public override void LateUpdate() OnActivated() public override void OnActivated() OnGameRestart() [OnGameRestart(0)] public static void OnGameRestart() Touch() public virtual void Touch() TriggerCheckPoint(Int3) public static void TriggerCheckPoint(Int3 unitPos) Parameters unitPos Int3 TriggerCheckPoint(int, Int3) public static void TriggerCheckPoint(int id, Int3 unitPos) Parameters id int unitPos Int3 Update() public override void Update() Events OnCheckPointTouched public static event Action<CheckPoint, Character> OnCheckPointTouched Event Type Action<CheckPoint, Character>"
  },
  "api/AngeliA.Platformer.CheckPointPortal.html": {
    "href": "api/AngeliA.Platformer.CheckPointPortal.html",
    "title": "Class CheckPointPortal | AngeliA",
    "summary": "Class CheckPointPortal Namespace AngeliA.Platformer Assembly com.angelia.platformer.dll [Entity.Capacity(1, 0)] public class CheckPointPortal : CircleFlamePortal, IMapItem Inheritance object Entity Portal CircleFlamePortal CheckPointPortal Implements IMapItem Inherited Members CircleFlamePortal.CircleCode CircleFlamePortal.FlameCode CircleFlamePortal.LightCode CircleFlamePortal.CircleSize CircleFlamePortal.RenderingMinZ CircleFlamePortal.RenderingMaxZ Portal.DontSpawnAfterUsed Portal.FirstUpdate() Entity.Active Entity.X Entity.Y Entity.Width Entity.Height Entity.TypeID Entity.SpawnFrame Entity.FromWorld Entity.Rect Entity.InstanceOrder Entity.MapUnitPos Entity.InstanceID Entity.IgnoreReposition Entity.XY Entity.Size Entity.Center Entity.CenterX Entity.CenterY Entity.PivotUnitPosition Entity.OnInactivated() Entity.BeforeUpdate() Entity.AfterReposition(Int3, Int3) Entity.IgnoreDespawnFromMap(int) Entity.CancelIgnoreDespawnFromMap() Entity.Draw() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Fields TYPE_ID public static readonly int TYPE_ID Field Value int Properties TargetGlobalPosition protected override Int3 TargetGlobalPosition { get; } Property Value Int3 Methods Invoke(Character) public override bool Invoke(Character character) Parameters character Character Returns bool LateUpdate() public override void LateUpdate() OnActivated() public override void OnActivated() SetCheckPoint(int, Int3) public void SetCheckPoint(int checkPointID, Int3 unitPosition) Parameters checkPointID int unitPosition Int3 Update() public override void Update()"
  },
  "api/AngeliA.Platformer.CircleFlamePortal.html": {
    "href": "api/AngeliA.Platformer.CircleFlamePortal.html",
    "title": "Class CircleFlamePortal | AngeliA",
    "summary": "Class CircleFlamePortal Namespace AngeliA.Platformer Assembly com.angelia.platformer.dll public abstract class CircleFlamePortal : Portal, IMapItem Inheritance object Entity Portal CircleFlamePortal Implements IMapItem Derived CheckPointPortal Inherited Members Portal.TargetGlobalPosition Portal.DontSpawnAfterUsed Portal.FirstUpdate() Portal.Update() Portal.Invoke(Character) Entity.Active Entity.X Entity.Y Entity.Width Entity.Height Entity.TypeID Entity.SpawnFrame Entity.FromWorld Entity.Rect Entity.InstanceOrder Entity.MapUnitPos Entity.InstanceID Entity.IgnoreReposition Entity.XY Entity.Size Entity.Center Entity.CenterX Entity.CenterY Entity.PivotUnitPosition Entity.OnInactivated() Entity.BeforeUpdate() Entity.AfterReposition(Int3, Int3) Entity.IgnoreDespawnFromMap(int) Entity.CancelIgnoreDespawnFromMap() Entity.Draw() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Properties CircleCode protected virtual int CircleCode { get; } Property Value int CircleSize protected virtual int CircleSize { get; } Property Value int FlameCode protected virtual int FlameCode { get; } Property Value int LightCode protected virtual int LightCode { get; } Property Value int RenderingMaxZ protected int RenderingMaxZ { get; } Property Value int RenderingMinZ protected int RenderingMinZ { get; } Property Value int Methods LateUpdate() public override void LateUpdate() OnActivated() public override void OnActivated()"
  },
  "api/AngeliA.Platformer.Clock.html": {
    "href": "api/AngeliA.Platformer.Clock.html",
    "title": "Class Clock | AngeliA",
    "summary": "Class Clock Namespace AngeliA.Platformer Assembly com.angelia.platformer.dll public abstract class Clock : Furniture, IMapItem, IBlockEntity Inheritance object Entity Furniture Clock Implements IMapItem IBlockEntity Inherited Members Furniture.FurnitureLeftOrDown Furniture.FurnitureRightOrUp Furniture.Pose Furniture.ColliderBorder Furniture.OnActivated() Furniture.BeforeUpdate() Furniture.GetIsHighlighted() Furniture.GetSpriteFromPose() Entity.Active Entity.X Entity.Y Entity.Width Entity.Height Entity.TypeID Entity.SpawnFrame Entity.FromWorld Entity.Rect Entity.InstanceOrder Entity.MapUnitPos Entity.InstanceID Entity.IgnoreReposition Entity.XY Entity.Size Entity.Center Entity.CenterX Entity.CenterY Entity.PivotUnitPosition Entity.OnInactivated() Entity.Update() Entity.AfterReposition(Int3, Int3) Entity.IgnoreDespawnFromMap(int) Entity.CancelIgnoreDespawnFromMap() Entity.Draw() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Properties ModuleType protected override Direction3 ModuleType { get; } Property Value Direction3 Methods FirstUpdate() public override void FirstUpdate() LateUpdate() public override void LateUpdate()"
  },
  "api/AngeliA.Platformer.Collectable.html": {
    "href": "api/AngeliA.Platformer.Collectable.html",
    "title": "Class Collectable | AngeliA",
    "summary": "Class Collectable Namespace AngeliA.Platformer Assembly com.angelia.platformer.dll [Entity.Layer(3)] [Entity.MapEditorGroup(\"Collectable\", 0)] public abstract class Collectable : Entity, IMapItem, IBlockEntity Inheritance object Entity Collectable Implements IMapItem IBlockEntity Inherited Members Entity.Active Entity.X Entity.Y Entity.Width Entity.Height Entity.TypeID Entity.SpawnFrame Entity.FromWorld Entity.Rect Entity.InstanceOrder Entity.MapUnitPos Entity.InstanceID Entity.IgnoreReposition Entity.XY Entity.Size Entity.Center Entity.CenterX Entity.CenterY Entity.PivotUnitPosition Entity.OnInactivated() Entity.BeforeUpdate() Entity.AfterReposition(Int3, Int3) Entity.IgnoreDespawnFromMap(int) Entity.CancelIgnoreDespawnFromMap() Entity.Draw() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Properties ItemCount protected virtual int ItemCount { get; } Property Value int ItemID protected virtual int ItemID { get; } Property Value int Methods FirstUpdate() public override void FirstUpdate() LateUpdate() public override void LateUpdate() OnActivated() public override void OnActivated() OnCollect(Character) public virtual bool OnCollect(Character collector) Parameters collector Character Returns bool Update() public override void Update()"
  },
  "api/AngeliA.Platformer.Conveyor.html": {
    "href": "api/AngeliA.Platformer.Conveyor.html",
    "title": "Class Conveyor | AngeliA",
    "summary": "Class Conveyor Namespace AngeliA.Platformer Assembly com.angelia.platformer.dll [Entity.Layer(3)] public abstract class Conveyor : Entity, IMapItem, IBlockEntity Inheritance object Entity Conveyor Implements IMapItem IBlockEntity Inherited Members Entity.Active Entity.X Entity.Y Entity.Width Entity.Height Entity.TypeID Entity.SpawnFrame Entity.FromWorld Entity.Rect Entity.InstanceOrder Entity.MapUnitPos Entity.InstanceID Entity.IgnoreReposition Entity.XY Entity.Size Entity.Center Entity.CenterX Entity.CenterY Entity.PivotUnitPosition Entity.OnInactivated() Entity.Update() Entity.AfterReposition(Int3, Int3) Entity.IgnoreDespawnFromMap(int) Entity.CancelIgnoreDespawnFromMap() Entity.Draw() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Properties ArtCodeLeft protected abstract int ArtCodeLeft { get; } Property Value int ArtCodeMid protected abstract int ArtCodeMid { get; } Property Value int ArtCodeRight protected abstract int ArtCodeRight { get; } Property Value int ArtCodeSingle protected abstract int ArtCodeSingle { get; } Property Value int MoveSpeed protected abstract int MoveSpeed { get; } Property Value int Pose protected FittingPose Pose { get; } Property Value FittingPose Methods BeforeUpdate() public override void BeforeUpdate() FirstUpdate() public override void FirstUpdate() LateUpdate() public override void LateUpdate() OnActivated() public override void OnActivated() ReloadPose() protected void ReloadPose()"
  },
  "api/AngeliA.Platformer.CraftingTable.html": {
    "href": "api/AngeliA.Platformer.CraftingTable.html",
    "title": "Class CraftingTable | AngeliA",
    "summary": "Class CraftingTable Namespace AngeliA.Platformer Assembly com.angelia.platformer.dll public abstract class CraftingTable : InventoryFurniture<CraftingUI>, IMapItem, IBlockEntity, IActionTarget Inheritance object Entity Furniture ActionFurniture OpenableFurniture InventoryFurniture InventoryFurniture<CraftingUI> CraftingTable Implements IMapItem IBlockEntity IActionTarget Inherited Members InventoryFurniture.PartnerID InventoryFurniture.InventoryID InventoryFurniture.InventoryColumn InventoryFurniture.InventoryRow InventoryFurniture.UnlockItemInside InventoryFurniture.OnActivated() InventoryFurniture.AllowInvoke() InventoryFurniture.SetOpen(bool) InventoryFurniture.TryGetInventoryUI(int, out InventoryPartnerUI) InventoryFurniture.IsInventoryFurniture(int, out int) OpenableFurniture.Open Furniture.ModuleType Furniture.FurnitureLeftOrDown Furniture.FurnitureRightOrUp Furniture.Pose Furniture.ColliderBorder Furniture.FirstUpdate() Furniture.BeforeUpdate() Furniture.GetIsHighlighted() Furniture.GetSpriteFromPose() Entity.Active Entity.X Entity.Y Entity.Width Entity.Height Entity.TypeID Entity.SpawnFrame Entity.FromWorld Entity.Rect Entity.InstanceOrder Entity.MapUnitPos Entity.InstanceID Entity.IgnoreReposition Entity.XY Entity.Size Entity.Center Entity.CenterX Entity.CenterY Entity.PivotUnitPosition Entity.OnInactivated() Entity.Update() Entity.AfterReposition(Int3, Int3) Entity.IgnoreDespawnFromMap(int) Entity.CancelIgnoreDespawnFromMap() Entity.Draw() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Properties UseInventoryThumbnail protected virtual bool UseInventoryThumbnail { get; } Property Value bool Methods DrawInventoryThumbnail(IRect, bool) protected void DrawInventoryThumbnail(IRect itemRect, bool singleRow = false) Parameters itemRect IRect singleRow bool Invoke() public override bool Invoke() Returns bool LateUpdate() public override void LateUpdate()"
  },
  "api/AngeliA.Platformer.CraftingUI.html": {
    "href": "api/AngeliA.Platformer.CraftingUI.html",
    "title": "Class CraftingUI | AngeliA",
    "summary": "Class CraftingUI Namespace AngeliA.Platformer Assembly com.angelia.platformer.dll public sealed class CraftingUI : InventoryPartnerUI, IWindowEntityUI Inheritance object PlayerMenuPartnerUI InventoryPartnerUI CraftingUI Implements IWindowEntityUI Inherited Members InventoryPartnerUI.TYPE_ID InventoryPartnerUI.Instance InventoryPartnerUI.Column InventoryPartnerUI.Row InventoryPartnerUI.AvatarID InventoryPartnerUI._Column InventoryPartnerUI._Row PlayerMenuPartnerUI.InventoryID PlayerMenuPartnerUI.MouseInPanel PlayerMenuPartnerUI.BackgroundRect object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Properties FrameCode public SpriteCode FrameCode { get; set; } Property Value SpriteCode ItemFieldSize public override int ItemFieldSize { get; } Property Value int Methods DrawPanel(IRect) public override void DrawPanel(IRect panelRect) Parameters panelRect IRect EnablePanel() public override void EnablePanel() SetColumnAndRow(int, int) public void SetColumnAndRow(int newColumn, int newRow) Parameters newColumn int newRow int"
  },
  "api/AngeliA.Platformer.DefaultCharacter.html": {
    "href": "api/AngeliA.Platformer.DefaultCharacter.html",
    "title": "Class DefaultCharacter | AngeliA",
    "summary": "Class DefaultCharacter Namespace AngeliA.Platformer Assembly com.angelia.platformer.dll [Entity.Capacity(1, 0)] [Entity.StageOrder(4096)] public class DefaultCharacter : PoseCharacter, IMapItem, IDamageReceiver, ICarrier, IWithCharacterMovement, IWithCharacterAttackness, IWithCharacterHealth, IWithCharacterBuff, IWithCharacterRenderer, IPlayable Inheritance object Entity Rigidbody Character PoseCharacter DefaultCharacter Implements IMapItem IDamageReceiver ICarrier IWithCharacterMovement IWithCharacterAttackness IWithCharacterHealth IWithCharacterBuff IWithCharacterRenderer IPlayable Inherited Members PoseCharacter.CreateNativeRenderer() PoseCharacter.FinalCharacterHeight Character.INVENTORY_COLUMN Character.INVENTORY_ROW Character.Teleporting Character.TeleportEndFrame Character.TeleportingWithPortal Character.TeleportToFrontSide Character.CurrentAttackSpeedRate Character.PhysicalLayer Character.SelfCollisionMask Character.AirDragX Character.AirDragY Character.CarryOtherOnTop Character.FacingRight Character.EjectWhenInsideGround Character.DefaultCharacterHeight Character.IgnoreDamageType Character.Bouncy Character.HelmetInteractable Character.BodySuitInteractable Character.GlovesInteractable Character.ShoesInteractable Character.JewelryInteractable Character.HandToolInteractable Character.CharacterState Character.AnimationType Character.SleepStartFrame Character.PassOutFrame Character.LastRequireBounceFrame Character.DespawnAfterPassoutDelay Character.InventoryID Character.RenderingCellIndex Character.FullSleepDuration Character.TeleportDuration Character.Movement Character.Attackness Character.Health Character.Rendering Character.NativeMovement Character.NativeAttackness Character.NativeHealth Character.NativeRenderer Character.Buff Character.OnActivated() Character.OnInactivated() Character.AfterReposition(Int3, Int3) Character.FirstUpdate() Character.Update() Character.LateUpdate() Character.SetCharacterState(CharacterState) Character.GetCurrentPoseAnimationType() Character.OnCharacterRendered() Character.EnterTeleportState(bool, bool, bool) Character.LockAnimationType(CharacterAnimationType, int) Character.GetBonusFromFullSleep() Character.InsideGroundCheck() Character.OnDamaged(Damage) Character.Bounce() Character.CancelBounce() Character.ResetInventoryUpdate(int) Character.EquipmentAvailable(EquipmentType) Character.TryRepairAllEquipments(bool) Character.CreateNativeMovement() Character.CreateNativeAttackness() Character.CreateNativeHealth() Character.OverrideMovement(CharacterMovement, int) Character.OverrideAttackness(CharacterAttackness, int) Character.OverrideHealth(CharacterHealth, int) Character.OverrideRenderer(CharacterRenderer, int) Character.IsAttackAllowedByMovement() Character.IsAttackAllowedByEquipment() Character.ForceFillTrigger(int) Character.IgnoreDamageFromLevel(int) Character.GetDisplayName() Character.GetDescription() Rigidbody.Rect Rigidbody.IsGrounded Rigidbody.IsInsideGround Rigidbody.InWater Rigidbody.VelocityX Rigidbody.VelocityY Rigidbody.BounceSpeedRate Rigidbody.OffsetX Rigidbody.OffsetY Rigidbody.GroundedID Rigidbody.PrevX Rigidbody.PrevY Rigidbody.DeltaPositionX Rigidbody.DeltaPositionY Rigidbody.MomentumX Rigidbody.MomentumY Rigidbody.RequireDodgeOverlap Rigidbody.GlobalGravity Rigidbody.FallingGravityScale Rigidbody.RisingGravityScale Rigidbody.CollisionMask Rigidbody.IgnoreGroundCheck Rigidbody.IgnoreGravity Rigidbody.IgnorePhysics Rigidbody.IgnoreInsideGround Rigidbody.IgnoreOneway Rigidbody.IgnoreMomentum Rigidbody.MaxGravitySpeed Rigidbody.WaterFloatSpeed Rigidbody.WaterSpeedRate Rigidbody.DestroyWhenInsideGround Rigidbody.PerformMove(int, int, bool) Rigidbody.MakeGrounded(int, int) Rigidbody.CancelMakeGrounded() Rigidbody.Push(int) Rigidbody.PerformGroundCheck(IRect, out PhysicsCell) Rigidbody.FillAsTrigger(int, int) Rigidbody.FillAsOnewayUp(int, int) Rigidbody.OnInsideGroundDestroyed() Rigidbody.GroundedCheck() Rigidbody.RefreshPrevPosition() Entity.Active Entity.X Entity.Y Entity.Width Entity.Height Entity.TypeID Entity.SpawnFrame Entity.FromWorld Entity.InstanceOrder Entity.MapUnitPos Entity.InstanceID Entity.IgnoreReposition Entity.XY Entity.Size Entity.Center Entity.CenterX Entity.CenterY Entity.PivotUnitPosition Entity.IgnoreDespawnFromMap(int) Entity.CancelIgnoreDespawnFromMap() Entity.Draw() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Properties AllowBeingPush public override bool AllowBeingPush { get; } Property Value bool AttackTargetTeam public override int AttackTargetTeam { get; } Property Value int InventoryType public override CharacterInventoryType InventoryType { get; } Property Value CharacterInventoryType Team public override int Team { get; } Property Value int Methods BeforeUpdate() public override void BeforeUpdate()"
  },
  "api/AngeliA.Platformer.DollItem.html": {
    "href": "api/AngeliA.Platformer.DollItem.html",
    "title": "Class DollItem | AngeliA",
    "summary": "Class DollItem Namespace AngeliA.Platformer Assembly com.angelia.platformer.dll public abstract class DollItem : Item, IMapItem Inheritance object Item DollItem Implements IMapItem Inherited Members Item.AllowDuplicateUpdate Item.EmbedIntoLevel Item.TypeID Item.BeforeItemUpdate_FromInventory(Character, int, int) Item.OnItemUpdate_FromInventory(Character, int, int) Item.OnTakeDamage_FromInventory(Character, int, int, ref Damage) Item.OnCharacterAttack_FromInventory(Character, Bullet, int, int) Item.BeforeItemUpdate_FromEquipment(Character) Item.OnItemUpdate_FromEquipment(Character) Item.BeforePoseAnimationUpdate_FromEquipment(PoseCharacterRenderer) Item.OnPoseAnimationUpdate_FromEquipment(PoseCharacterRenderer) Item.OnTakeDamage_FromEquipment(Character, ref Damage) Item.OnCharacterAttack_FromEquipment(Character, Bullet) Item.TryRepairEquipment(Character) Item.OnItemUpdate_FromItemHolder(ItemHolder, int) Item.OnCollect(Character) Item.CanUse(Character) Item.Use(Character, int, int, out bool) Item.ItemConditionCheck(Character) Item.DrawItem(Entity, IRect, Color32, int) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Properties DollSize public abstract int DollSize { get; } Property Value int MaxStackCount public override int MaxStackCount { get; } Property Value int Methods OnPoseAnimationUpdate_FromInventory(PoseCharacterRenderer, int, int) public override void OnPoseAnimationUpdate_FromInventory(PoseCharacterRenderer rendering, int inventoryID, int itemIndex) Parameters rendering PoseCharacterRenderer inventoryID int itemIndex int"
  },
  "api/AngeliA.Platformer.DonutBlock.BreakMode.html": {
    "href": "api/AngeliA.Platformer.DonutBlock.BreakMode.html",
    "title": "Enum DonutBlock.BreakMode | AngeliA",
    "summary": "Enum DonutBlock.BreakMode Namespace AngeliA.Platformer Assembly com.angelia.platformer.dll protected enum DonutBlock.BreakMode Extension Methods Extension.Next<E>(E) Extension.Prev<E>(E) Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Fields BreakOnFall = 1 BreakOnTouchGround = 0 DoNotBreak = 2"
  },
  "api/AngeliA.Platformer.DonutBlock.html": {
    "href": "api/AngeliA.Platformer.DonutBlock.html",
    "title": "Class DonutBlock | AngeliA",
    "summary": "Class DonutBlock Namespace AngeliA.Platformer Assembly com.angelia.platformer.dll [Entity.Layer(3)] public abstract class DonutBlock : Entity, IMapItem, IBlockEntity Inheritance object Entity DonutBlock Implements IMapItem IBlockEntity Inherited Members Entity.Active Entity.X Entity.Y Entity.Width Entity.Height Entity.TypeID Entity.SpawnFrame Entity.FromWorld Entity.Rect Entity.InstanceOrder Entity.MapUnitPos Entity.InstanceID Entity.IgnoreReposition Entity.XY Entity.Size Entity.Center Entity.CenterX Entity.CenterY Entity.PivotUnitPosition Entity.OnInactivated() Entity.BeforeUpdate() Entity.AfterReposition(Int3, Int3) Entity.IgnoreDespawnFromMap(int) Entity.CancelIgnoreDespawnFromMap() Entity.Draw() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Properties BreakCondition protected virtual DonutBlock.BreakMode BreakCondition { get; } Property Value DonutBlock.BreakMode FallingVelocity protected virtual int FallingVelocity { get; } Property Value int HoldDuration protected virtual int HoldDuration { get; } Property Value int HoldStartFrame protected int HoldStartFrame { get; } Property Value int IsFalling protected bool IsFalling { get; } Property Value bool IsHolding protected bool IsHolding { get; } Property Value bool Methods Break() protected virtual void Break() FirstUpdate() public override void FirstUpdate() LateUpdate() public override void LateUpdate() OnActivated() public override void OnActivated() Update() public override void Update()"
  },
  "api/AngeliA.Platformer.Door.html": {
    "href": "api/AngeliA.Platformer.Door.html",
    "title": "Class Door | AngeliA",
    "summary": "Class Door Namespace AngeliA.Platformer Assembly com.angelia.platformer.dll [Entity.Layer(3)] [Entity.MapEditorGroup(\"Teleport\", 0)] public abstract class Door : Entity, IMapItem, IBlockEntity Inheritance object Entity Door Implements IMapItem IBlockEntity Inherited Members Entity.Active Entity.X Entity.Y Entity.Width Entity.Height Entity.TypeID Entity.SpawnFrame Entity.FromWorld Entity.Rect Entity.InstanceOrder Entity.MapUnitPos Entity.InstanceID Entity.IgnoreReposition Entity.XY Entity.Size Entity.Center Entity.CenterX Entity.CenterY Entity.PivotUnitPosition Entity.OnInactivated() Entity.Update() Entity.AfterReposition(Int3, Int3) Entity.IgnoreDespawnFromMap(int) Entity.CancelIgnoreDespawnFromMap() Entity.Draw() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Properties IsFrontDoor public abstract bool IsFrontDoor { get; } Property Value bool KeyItemID public virtual int KeyItemID { get; } Property Value int UnlockedDoorID public virtual int UnlockedDoorID { get; } Property Value int Methods AllowInvoke(Entity) public virtual bool AllowInvoke(Entity target) Parameters target Entity Returns bool BeforeUpdate() public override void BeforeUpdate() FirstUpdate() public override void FirstUpdate() Invoke(Character) public virtual bool Invoke(Character character) Parameters character Character Returns bool LateUpdate() public override void LateUpdate() OnActivated() public override void OnActivated()"
  },
  "api/AngeliA.Platformer.EmptyMovableBullet.html": {
    "href": "api/AngeliA.Platformer.EmptyMovableBullet.html",
    "title": "Class EmptyMovableBullet | AngeliA",
    "summary": "Class EmptyMovableBullet Namespace AngeliA.Platformer Assembly com.angelia.platformer.dll public sealed class EmptyMovableBullet : MovableBullet, IMapItem Inheritance object Entity Bullet MovableBullet EmptyMovableBullet Implements IMapItem Inherited Members MovableBullet.SpeedForward MovableBullet.SpeedSide MovableBullet.AriDrag MovableBullet.Gravity MovableBullet.StartRotation MovableBullet.RotateSpeed MovableBullet.EndRotation MovableBullet.EndRotationRandomRange MovableBullet.ResidueID MovableBullet.ArtworkID MovableBullet.Scale MovableBullet.WaterSpeedRate MovableBullet.MaxRange MovableBullet.Duration MovableBullet.CurrentRotation MovableBullet.Velocity MovableBullet.InWater MovableBullet.OnActivated() MovableBullet.BeforeUpdate() MovableBullet.LateUpdate() MovableBullet.StartMove(Direction8, int, int) Bullet.AttackIndex Bullet.AttackCharged Bullet.DamageType Bullet.Sender Bullet.FailbackTargetTeam Bullet.TargetTeam Bullet.Damage Bullet.Update() Bullet.GroundCheck(out Color32) Bullet.GetDamage() Entity.Active Entity.X Entity.Y Entity.Width Entity.Height Entity.TypeID Entity.SpawnFrame Entity.FromWorld Entity.Rect Entity.InstanceOrder Entity.MapUnitPos Entity.InstanceID Entity.IgnoreReposition Entity.XY Entity.Size Entity.Center Entity.CenterX Entity.CenterY Entity.PivotUnitPosition Entity.OnInactivated() Entity.FirstUpdate() Entity.AfterReposition(Int3, Int3) Entity.IgnoreDespawnFromMap(int) Entity.CancelIgnoreDespawnFromMap() Entity.Draw() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.Platformer.Enemy.html": {
    "href": "api/AngeliA.Platformer.Enemy.html",
    "title": "Class Enemy | AngeliA",
    "summary": "Class Enemy Namespace AngeliA.Platformer Assembly com.angelia.platformer.dll [Entity.RepositionWhenInactive(true)] public abstract class Enemy : Character, IMapItem, IDamageReceiver, ICarrier, IWithCharacterMovement, IWithCharacterAttackness, IWithCharacterHealth, IWithCharacterBuff, IWithCharacterRenderer Inheritance object Entity Rigidbody Character Enemy Implements IMapItem IDamageReceiver ICarrier IWithCharacterMovement IWithCharacterAttackness IWithCharacterHealth IWithCharacterBuff IWithCharacterRenderer Derived Slime Inherited Members Character.INVENTORY_COLUMN Character.INVENTORY_ROW Character.Teleporting Character.TeleportEndFrame Character.TeleportingWithPortal Character.TeleportToFrontSide Character.CurrentAttackSpeedRate Character.PhysicalLayer Character.SelfCollisionMask Character.AirDragX Character.AirDragY Character.CarryOtherOnTop Character.AllowBeingPush Character.FacingRight Character.EjectWhenInsideGround Character.InventoryType Character.FinalCharacterHeight Character.DefaultCharacterHeight Character.IgnoreDamageType Character.Bouncy Character.HelmetInteractable Character.BodySuitInteractable Character.GlovesInteractable Character.ShoesInteractable Character.JewelryInteractable Character.HandToolInteractable Character.CharacterState Character.AnimationType Character.SleepStartFrame Character.PassOutFrame Character.LastRequireBounceFrame Character.DespawnAfterPassoutDelay Character.InventoryID Character.RenderingCellIndex Character.FullSleepDuration Character.TeleportDuration Character.Movement Character.Attackness Character.Health Character.Rendering Character.NativeMovement Character.NativeAttackness Character.NativeHealth Character.NativeRenderer Character.Buff Character.OnInactivated() Character.AfterReposition(Int3, Int3) Character.Update() Character.LateUpdate() Character.SetCharacterState(CharacterState) Character.GetCurrentPoseAnimationType() Character.OnCharacterRendered() Character.EnterTeleportState(bool, bool, bool) Character.LockAnimationType(CharacterAnimationType, int) Character.GetBonusFromFullSleep() Character.InsideGroundCheck() Character.Bounce() Character.CancelBounce() Character.ResetInventoryUpdate(int) Character.EquipmentAvailable(EquipmentType) Character.TryRepairAllEquipments(bool) Character.CreateNativeMovement() Character.CreateNativeAttackness() Character.CreateNativeHealth() Character.CreateNativeRenderer() Character.OverrideMovement(CharacterMovement, int) Character.OverrideAttackness(CharacterAttackness, int) Character.OverrideHealth(CharacterHealth, int) Character.OverrideRenderer(CharacterRenderer, int) Character.IsAttackAllowedByMovement() Character.IsAttackAllowedByEquipment() Character.ForceFillTrigger(int) Character.IgnoreDamageFromLevel(int) Character.GetDisplayName() Character.GetDescription() Rigidbody.Rect Rigidbody.IsGrounded Rigidbody.IsInsideGround Rigidbody.InWater Rigidbody.VelocityX Rigidbody.VelocityY Rigidbody.BounceSpeedRate Rigidbody.OffsetX Rigidbody.OffsetY Rigidbody.GroundedID Rigidbody.PrevX Rigidbody.PrevY Rigidbody.DeltaPositionX Rigidbody.DeltaPositionY Rigidbody.MomentumX Rigidbody.MomentumY Rigidbody.RequireDodgeOverlap Rigidbody.GlobalGravity Rigidbody.FallingGravityScale Rigidbody.RisingGravityScale Rigidbody.CollisionMask Rigidbody.IgnoreGroundCheck Rigidbody.IgnoreGravity Rigidbody.IgnorePhysics Rigidbody.IgnoreInsideGround Rigidbody.IgnoreOneway Rigidbody.IgnoreMomentum Rigidbody.MaxGravitySpeed Rigidbody.WaterFloatSpeed Rigidbody.WaterSpeedRate Rigidbody.DestroyWhenInsideGround Rigidbody.PerformMove(int, int, bool) Rigidbody.MakeGrounded(int, int) Rigidbody.CancelMakeGrounded() Rigidbody.Push(int) Rigidbody.PerformGroundCheck(IRect, out PhysicsCell) Rigidbody.FillAsTrigger(int, int) Rigidbody.FillAsOnewayUp(int, int) Rigidbody.OnInsideGroundDestroyed() Rigidbody.GroundedCheck() Rigidbody.RefreshPrevPosition() Entity.Active Entity.X Entity.Y Entity.Width Entity.Height Entity.TypeID Entity.SpawnFrame Entity.FromWorld Entity.InstanceOrder Entity.MapUnitPos Entity.InstanceID Entity.IgnoreReposition Entity.XY Entity.Size Entity.Center Entity.CenterX Entity.CenterY Entity.PivotUnitPosition Entity.IgnoreDespawnFromMap(int) Entity.CancelIgnoreDespawnFromMap() Entity.Draw() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Properties AttackTargetTeam public override int AttackTargetTeam { get; } Property Value int DamageOnTouch protected virtual bool DamageOnTouch { get; } Property Value bool Team public override int Team { get; } Property Value int Methods BeforeUpdate() public override void BeforeUpdate() FirstUpdate() public override void FirstUpdate() OnActivated() public override void OnActivated() OnDamaged(Damage) public override void OnDamaged(Damage damage) Parameters damage Damage"
  },
  "api/AngeliA.Platformer.Explosion.html": {
    "href": "api/AngeliA.Platformer.Explosion.html",
    "title": "Class Explosion | AngeliA",
    "summary": "Class Explosion Namespace AngeliA.Platformer Assembly com.angelia.platformer.dll [Entity.Layer(5)] public abstract class Explosion : Entity, IMapItem Inheritance object Entity Explosion Implements IMapItem Inherited Members Entity.Active Entity.X Entity.Y Entity.Width Entity.Height Entity.TypeID Entity.SpawnFrame Entity.FromWorld Entity.Rect Entity.InstanceOrder Entity.MapUnitPos Entity.InstanceID Entity.IgnoreReposition Entity.XY Entity.Size Entity.Center Entity.CenterX Entity.CenterY Entity.PivotUnitPosition Entity.OnInactivated() Entity.FirstUpdate() Entity.LateUpdate() Entity.AfterReposition(Int3, Int3) Entity.IgnoreDespawnFromMap(int) Entity.CancelIgnoreDespawnFromMap() Entity.Draw() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Properties BreakObjectArtwork public int BreakObjectArtwork { get; set; } Property Value int CollisionMask protected virtual int CollisionMask { get; } Property Value int Damage protected virtual int Damage { get; } Property Value int DestroyBlocks protected virtual bool DestroyBlocks { get; } Property Value bool Duration protected virtual int Duration { get; } Property Value int ExplodedFrame protected int ExplodedFrame { get; } Property Value int FireColor protected virtual Color32 FireColor { get; } Property Value Color32 Radius protected virtual int Radius { get; } Property Value int RingColor protected virtual Color32 RingColor { get; } Property Value Color32 Sender public Entity Sender { get; set; } Property Value Entity WaveColor protected virtual Color32 WaveColor { get; } Property Value Color32 Methods BeforeUpdate() public override void BeforeUpdate() OnActivated() public override void OnActivated() OnExplode(IRect) protected abstract void OnExplode(IRect range) Parameters range IRect Update() public override void Update()"
  },
  "api/AngeliA.Platformer.ExplosiveMovableBullet.html": {
    "href": "api/AngeliA.Platformer.ExplosiveMovableBullet.html",
    "title": "Class ExplosiveMovableBullet | AngeliA",
    "summary": "Class ExplosiveMovableBullet Namespace AngeliA.Platformer Assembly com.angelia.platformer.dll public abstract class ExplosiveMovableBullet : MovableBullet, IMapItem Inheritance object Entity Bullet MovableBullet ExplosiveMovableBullet Implements IMapItem Inherited Members MovableBullet.SpeedForward MovableBullet.SpeedSide MovableBullet.AriDrag MovableBullet.Gravity MovableBullet.StartRotation MovableBullet.RotateSpeed MovableBullet.EndRotation MovableBullet.EndRotationRandomRange MovableBullet.ResidueID MovableBullet.ArtworkID MovableBullet.Scale MovableBullet.WaterSpeedRate MovableBullet.MaxRange MovableBullet.EnvironmentHitCount MovableBullet.ReceiverHitCount MovableBullet.CurrentRotation MovableBullet.Velocity MovableBullet.InWater MovableBullet.HitReceiver MovableBullet.BeforeUpdate() MovableBullet.LateUpdate() MovableBullet.StartMove(Direction8, int, int) MovableBullet.GetLastUpdatedTramsform() Bullet.AttackIndex Bullet.AttackCharged Bullet.DamageType Bullet.Sender Bullet.FailbackTargetTeam Bullet.TargetTeam Bullet.BasicDamage Bullet.EnvironmentMask Bullet.ReceiverMask Bullet.RoundHitCheck Bullet.Damage Bullet.Update() Bullet.ReceiverHitCheck(out bool) Bullet.EnvironmentHitCheck(out bool) Bullet.PerformHitEnvironment(out bool) Bullet.PerformHitReceiver(IDamageReceiver, out bool) Bullet.GroundCheck(out Color32) Bullet.GetDamage() Entity.Active Entity.X Entity.Y Entity.Width Entity.Height Entity.TypeID Entity.SpawnFrame Entity.FromWorld Entity.Rect Entity.InstanceOrder Entity.MapUnitPos Entity.InstanceID Entity.IgnoreReposition Entity.XY Entity.Size Entity.Center Entity.CenterX Entity.CenterY Entity.PivotUnitPosition Entity.OnInactivated() Entity.FirstUpdate() Entity.AfterReposition(Int3, Int3) Entity.IgnoreDespawnFromMap(int) Entity.CancelIgnoreDespawnFromMap() Entity.Draw() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Properties Duration public override int Duration { get; } Property Value int ExplosionDuration protected virtual int ExplosionDuration { get; } Property Value int ExplosionID protected abstract int ExplosionID { get; } Property Value int Radius protected virtual int Radius { get; } Property Value int Methods BeforeDespawn(IDamageReceiver) protected override void BeforeDespawn(IDamageReceiver receiver) Parameters receiver IDamageReceiver OnActivated() public override void OnActivated()"
  },
  "api/AngeliA.Platformer.Fire.html": {
    "href": "api/AngeliA.Platformer.Fire.html",
    "title": "Class Fire | AngeliA",
    "summary": "Class Fire Namespace AngeliA.Platformer Assembly com.angelia.platformer.dll [Entity.RepositionWhenInactive(true)] public abstract class Fire : Entity, IMapItem, IFire Inheritance object Entity Fire Implements IMapItem IFire Inherited Members Entity.Active Entity.X Entity.Y Entity.Width Entity.Height Entity.TypeID Entity.SpawnFrame Entity.FromWorld Entity.Rect Entity.InstanceOrder Entity.MapUnitPos Entity.InstanceID Entity.IgnoreReposition Entity.XY Entity.Size Entity.Center Entity.CenterX Entity.CenterY Entity.PivotUnitPosition Entity.AfterReposition(Int3, Int3) Entity.IgnoreDespawnFromMap(int) Entity.CancelIgnoreDespawnFromMap() Entity.Draw() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Properties DamageCooldown protected virtual int DamageCooldown { get; } Property Value int DefaultDirection protected virtual Direction4 DefaultDirection { get; } Property Value Direction4 Direction public Direction4 Direction { get; set; } Property Value Direction4 IlluminateAmount protected virtual int IlluminateAmount { get; } Property Value int IlluminateUnitRadius protected virtual int IlluminateUnitRadius { get; } Property Value int PowerAmount protected virtual int PowerAmount { get; } Property Value int SpreadDuration protected virtual int SpreadDuration { get; } Property Value int SpreadRange protected virtual int SpreadRange { get; } Property Value int UseAdditiveShader protected virtual bool UseAdditiveShader { get; } Property Value bool WeakenDuration protected virtual int WeakenDuration { get; } Property Value int Methods BeforeUpdate() public override void BeforeUpdate() FirstUpdate() public override void FirstUpdate() LateUpdate() public override void LateUpdate() OnActivated() public override void OnActivated() OnInactivated() public override void OnInactivated() Putout(bool) public void Putout(bool manually) Parameters manually bool Setup(ICombustible) public void Setup(ICombustible com) Parameters com ICombustible Setup(int, Direction4, int, int, bool) public void Setup(int burnDuration, Direction4 direction, int width = 256, int height = 256, bool damageImmediately = false) Parameters burnDuration int direction Direction4 width int height int damageImmediately bool Spread() public void Spread() Update() public override void Update() Events OnFirePutout public static event Action<int, IRect> OnFirePutout Event Type Action<int, IRect>"
  },
  "api/AngeliA.Platformer.FireSprinkler.html": {
    "href": "api/AngeliA.Platformer.FireSprinkler.html",
    "title": "Class FireSprinkler | AngeliA",
    "summary": "Class FireSprinkler Namespace AngeliA.Platformer Assembly com.angelia.platformer.dll public abstract class FireSprinkler : Furniture, IMapItem, IBlockEntity, ICircuitOperator Inheritance object Entity Furniture FireSprinkler Implements IMapItem IBlockEntity ICircuitOperator Inherited Members Furniture.ModuleType Furniture.FurnitureLeftOrDown Furniture.FurnitureRightOrUp Furniture.Pose Furniture.ColliderBorder Furniture.FirstUpdate() Furniture.BeforeUpdate() Furniture.GetIsHighlighted() Furniture.GetSpriteFromPose() Entity.Active Entity.X Entity.Y Entity.Width Entity.Height Entity.TypeID Entity.SpawnFrame Entity.FromWorld Entity.Rect Entity.InstanceOrder Entity.MapUnitPos Entity.InstanceID Entity.IgnoreReposition Entity.XY Entity.Size Entity.Center Entity.CenterX Entity.CenterY Entity.PivotUnitPosition Entity.OnInactivated() Entity.AfterReposition(Int3, Int3) Entity.IgnoreDespawnFromMap(int) Entity.CancelIgnoreDespawnFromMap() Entity.Draw() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Properties AlarmLightSpriteCode protected virtual int AlarmLightSpriteCode { get; } Property Value int CheckFrequency protected virtual int CheckFrequency { get; } Property Value int DetectionRadius protected virtual int DetectionRadius { get; } Property Value int RespondDelay protected virtual int RespondDelay { get; } Property Value int SprinklingDuration protected virtual int SprinklingDuration { get; } Property Value int SprinklingRange protected virtual int SprinklingRange { get; } Property Value int SprinklingWaterSpriteCount protected virtual int SprinklingWaterSpriteCount { get; } Property Value int SprinklingWaterSpriteGroupCode protected virtual int SprinklingWaterSpriteGroupCode { get; } Property Value int Methods LateUpdate() public override void LateUpdate() OnActivated() public override void OnActivated() Update() public override void Update()"
  },
  "api/AngeliA.Platformer.FloatingCombatText.html": {
    "href": "api/AngeliA.Platformer.FloatingCombatText.html",
    "title": "Class FloatingCombatText | AngeliA",
    "summary": "Class FloatingCombatText Namespace AngeliA.Platformer Assembly com.angelia.platformer.dll [Entity.Capacity(128, 0)] [Entity.Layer(0)] public class FloatingCombatText : Entity, IMapItem Inheritance object Entity FloatingCombatText Implements IMapItem Inherited Members Entity.Active Entity.X Entity.Y Entity.Width Entity.Height Entity.TypeID Entity.SpawnFrame Entity.FromWorld Entity.Rect Entity.InstanceOrder Entity.MapUnitPos Entity.InstanceID Entity.IgnoreReposition Entity.XY Entity.Size Entity.Center Entity.CenterX Entity.CenterY Entity.PivotUnitPosition Entity.OnInactivated() Entity.FirstUpdate() Entity.Update() Entity.AfterReposition(Int3, Int3) Entity.IgnoreDespawnFromMap(int) Entity.CancelIgnoreDespawnFromMap() Entity.Draw() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Fields BackgroundColor public Color32 BackgroundColor Field Value Color32 Duration public int Duration Field Value int FloatAirDrag public int FloatAirDrag Field Value int FloatSpeed public int FloatSpeed Field Value int FontID public int FontID Field Value int GlobalHeight public int GlobalHeight Field Value int Style public GUIStyle Style Field Value GUIStyle TYPE_ID public static readonly int TYPE_ID Field Value int TextColor public Color32 TextColor Field Value Color32 Methods BeforeUpdate() public override void BeforeUpdate() LateUpdate() public override void LateUpdate() OnActivated() public override void OnActivated() Spawn(int, int, char[], int, Color32?, Color32?, GUIStyle) public static FloatingCombatText Spawn(int x, int y, char[] chars, int fontID = 0, Color32? color = null, Color32? backgroundColor = null, GUIStyle style = null) Parameters x int y int chars char[] fontID int color Color32? backgroundColor Color32? style GUIStyle Returns FloatingCombatText Spawn(int, int, string, int, Color32?, Color32?, GUIStyle) public static FloatingCombatText Spawn(int x, int y, string text, int fontID = 0, Color32? color = null, Color32? backgroundColor = null, GUIStyle style = null) Parameters x int y int text string fontID int color Color32? backgroundColor Color32? style GUIStyle Returns FloatingCombatText"
  },
  "api/AngeliA.Platformer.FrozenZone.html": {
    "href": "api/AngeliA.Platformer.FrozenZone.html",
    "title": "Class FrozenZone | AngeliA",
    "summary": "Class FrozenZone Namespace AngeliA.Platformer Assembly com.angelia.platformer.dll public abstract class FrozenZone : Entity, IMapItem Inheritance object Entity FrozenZone Implements IMapItem Inherited Members Entity.Active Entity.X Entity.Y Entity.Width Entity.Height Entity.TypeID Entity.SpawnFrame Entity.FromWorld Entity.Rect Entity.InstanceOrder Entity.MapUnitPos Entity.InstanceID Entity.IgnoreReposition Entity.XY Entity.Size Entity.Center Entity.CenterX Entity.CenterY Entity.PivotUnitPosition Entity.OnInactivated() Entity.Update() Entity.AfterReposition(Int3, Int3) Entity.IgnoreDespawnFromMap(int) Entity.CancelIgnoreDespawnFromMap() Entity.Draw() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Properties Duration public int Duration { get; set; } Property Value int Fullscreen public bool Fullscreen { get; set; } Property Value bool Methods BeforeUpdate() public override void BeforeUpdate() FirstUpdate() public override void FirstUpdate() LateUpdate() public override void LateUpdate() OnActivated() public override void OnActivated() OnTouchingZone(Rigidbody) protected virtual void OnTouchingZone(Rigidbody rig) Parameters rig Rigidbody SpreadFrozenZone(int, IRect, int) public static void SpreadFrozenZone(int zoneID, IRect range, int duration = 300) Parameters zoneID int range IRect duration int"
  },
  "api/AngeliA.Platformer.Furniture.html": {
    "href": "api/AngeliA.Platformer.Furniture.html",
    "title": "Class Furniture | AngeliA",
    "summary": "Class Furniture Namespace AngeliA.Platformer Assembly com.angelia.platformer.dll [Entity.MapEditorGroup(\"Furniture\", 0)] [Entity.Layer(3)] public abstract class Furniture : Entity, IMapItem, IBlockEntity Inheritance object Entity Furniture Implements IMapItem IBlockEntity Derived ActionFurniture CabinetIdol Clock FireSprinkler GrandfatherClock Light MapChest Table Inherited Members Entity.Active Entity.X Entity.Y Entity.Width Entity.Height Entity.TypeID Entity.SpawnFrame Entity.FromWorld Entity.Rect Entity.InstanceOrder Entity.MapUnitPos Entity.InstanceID Entity.IgnoreReposition Entity.XY Entity.Size Entity.Center Entity.CenterX Entity.CenterY Entity.PivotUnitPosition Entity.OnInactivated() Entity.Update() Entity.AfterReposition(Int3, Int3) Entity.IgnoreDespawnFromMap(int) Entity.CancelIgnoreDespawnFromMap() Entity.Draw() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Fields ColliderBorder protected Int4 ColliderBorder Field Value Int4 Properties FurnitureLeftOrDown public Furniture FurnitureLeftOrDown { get; } Property Value Furniture FurnitureRightOrUp public Furniture FurnitureRightOrUp { get; } Property Value Furniture ModuleType protected virtual Direction3 ModuleType { get; } Property Value Direction3 Pose protected FittingPose Pose { get; } Property Value FittingPose Methods BeforeUpdate() public override void BeforeUpdate() FirstUpdate() public override void FirstUpdate() GetIsHighlighted() protected bool GetIsHighlighted() Returns bool GetSpriteFromPose() protected AngeSprite GetSpriteFromPose() Returns AngeSprite LateUpdate() public override void LateUpdate() OnActivated() public override void OnActivated()"
  },
  "api/AngeliA.Platformer.GlitchScope.html": {
    "href": "api/AngeliA.Platformer.GlitchScope.html",
    "title": "Struct GlitchScope | AngeliA",
    "summary": "Struct GlitchScope Namespace AngeliA.Platformer Assembly com.angelia.platformer.dll public readonly struct GlitchScope : IDisposable Implements IDisposable Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Constructors GlitchScope(int, int, int) public GlitchScope(int speedAmount = 1000, int shiftAmount = 1000, int scaleAmount = 1000) Parameters speedAmount int shiftAmount int scaleAmount int Methods Dispose() Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources. public void Dispose()"
  },
  "api/AngeliA.Platformer.Gloves-2.html": {
    "href": "api/AngeliA.Platformer.Gloves-2.html",
    "title": "Class Gloves<P, N> | AngeliA",
    "summary": "Class Gloves<P, N> Namespace AngeliA.Platformer Assembly com.angelia.platformer.dll public abstract class Gloves<P, N> : Armor<P, N>, IMapItem, IProgressiveItem where P : Equipment where N : Equipment Type Parameters P N Inheritance object Item Equipment Armor<P, N> Gloves<P, N> Implements IMapItem IProgressiveItem Inherited Members Armor<P, N>.RepairMaterials Armor<P, N>.Scale Armor<P, N>.HideEar Armor<P, N>.HideHorn Armor<P, N>.HideHair Armor<P, N>.HideTail Armor<P, N>.HideFace Armor<P, N>.HideWing Armor<P, N>.OnPoseAnimationUpdate_FromEquipment(PoseCharacterRenderer) Armor<P, N>.DrawArmor(PoseCharacterRenderer) Armor<P, N>.OnTakeDamage_FromEquipment(Character, ref Damage) Armor<P, N>.TryRepairEquipment(Character) Armor<P, N>.RepairArmor(Character, int) Equipment.MaxStackCount Item.AllowDuplicateUpdate Item.EmbedIntoLevel Item.TypeID Item.BeforeItemUpdate_FromInventory(Character, int, int) Item.OnItemUpdate_FromInventory(Character, int, int) Item.OnPoseAnimationUpdate_FromInventory(PoseCharacterRenderer, int, int) Item.OnTakeDamage_FromInventory(Character, int, int, ref Damage) Item.OnCharacterAttack_FromInventory(Character, Bullet, int, int) Item.BeforeItemUpdate_FromEquipment(Character) Item.OnItemUpdate_FromEquipment(Character) Item.BeforePoseAnimationUpdate_FromEquipment(PoseCharacterRenderer) Item.OnPoseAnimationUpdate_FromEquipment(PoseCharacterRenderer) Item.OnTakeDamage_FromEquipment(Character, ref Damage) Item.OnCharacterAttack_FromEquipment(Character, Bullet) Item.TryRepairEquipment(Character) Item.OnItemUpdate_FromItemHolder(ItemHolder, int) Item.OnCollect(Character) Item.CanUse(Character) Item.Use(Character, int, int, out bool) Item.ItemConditionCheck(Character) Item.DrawItem(Entity, IRect, Color32, int) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Constructors Gloves() public Gloves() Properties EquipmentType public override sealed EquipmentType EquipmentType { get; } Property Value EquipmentType Methods DrawArmor(PoseCharacterRenderer) protected override void DrawArmor(PoseCharacterRenderer renderer) Parameters renderer PoseCharacterRenderer"
  },
  "api/AngeliA.Platformer.GrandfatherClock.html": {
    "href": "api/AngeliA.Platformer.GrandfatherClock.html",
    "title": "Class GrandfatherClock | AngeliA",
    "summary": "Class GrandfatherClock Namespace AngeliA.Platformer Assembly com.angelia.platformer.dll public abstract class GrandfatherClock : Furniture, IMapItem, IBlockEntity, ICombustible Inheritance object Entity Furniture GrandfatherClock Implements IMapItem IBlockEntity ICombustible Inherited Members Furniture.FurnitureLeftOrDown Furniture.FurnitureRightOrUp Furniture.Pose Furniture.ColliderBorder Furniture.OnActivated() Furniture.FirstUpdate() Furniture.BeforeUpdate() Furniture.GetIsHighlighted() Furniture.GetSpriteFromPose() Entity.Active Entity.X Entity.Y Entity.Width Entity.Height Entity.TypeID Entity.SpawnFrame Entity.FromWorld Entity.Rect Entity.InstanceOrder Entity.MapUnitPos Entity.InstanceID Entity.IgnoreReposition Entity.XY Entity.Size Entity.Center Entity.CenterX Entity.CenterY Entity.PivotUnitPosition Entity.OnInactivated() Entity.Update() Entity.AfterReposition(Int3, Int3) Entity.IgnoreDespawnFromMap(int) Entity.CancelIgnoreDespawnFromMap() Entity.Draw() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Properties ModuleType protected override Direction3 ModuleType { get; } Property Value Direction3 Methods LateUpdate() public override void LateUpdate()"
  },
  "api/AngeliA.Platformer.HealBullet.html": {
    "href": "api/AngeliA.Platformer.HealBullet.html",
    "title": "Class HealBullet | AngeliA",
    "summary": "Class HealBullet Namespace AngeliA.Platformer Assembly com.angelia.platformer.dll public abstract class HealBullet : Bullet, IMapItem Inheritance object Entity Bullet HealBullet Implements IMapItem Inherited Members Bullet.AttackIndex Bullet.AttackCharged Bullet.DamageType Bullet.Sender Bullet.FailbackTargetTeam Bullet.TargetTeam Bullet.BasicDamage Bullet.EnvironmentMask Bullet.ReceiverMask Bullet.EnvironmentHitCount Bullet.ReceiverHitCount Bullet.RoundHitCheck Bullet.Duration Bullet.Damage Bullet.Update() Bullet.ReceiverHitCheck(out bool) Bullet.EnvironmentHitCheck(out bool) Bullet.BeforeDespawn(IDamageReceiver) Bullet.PerformHitEnvironment(out bool) Bullet.PerformHitReceiver(IDamageReceiver, out bool) Bullet.GroundCheck(out Color32) Bullet.GetDamage() Entity.Active Entity.X Entity.Y Entity.Width Entity.Height Entity.TypeID Entity.SpawnFrame Entity.FromWorld Entity.Rect Entity.InstanceOrder Entity.MapUnitPos Entity.InstanceID Entity.IgnoreReposition Entity.XY Entity.Size Entity.Center Entity.CenterX Entity.CenterY Entity.PivotUnitPosition Entity.OnInactivated() Entity.FirstUpdate() Entity.AfterReposition(Int3, Int3) Entity.IgnoreDespawnFromMap(int) Entity.CancelIgnoreDespawnFromMap() Entity.Draw() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Properties Lerp protected virtual int Lerp { get; } Property Value int Methods BeforeUpdate() public override void BeforeUpdate() LateUpdate() public override void LateUpdate() OnActivated() public override void OnActivated()"
  },
  "api/AngeliA.Platformer.HealWeapon-1.html": {
    "href": "api/AngeliA.Platformer.HealWeapon-1.html",
    "title": "Class HealWeapon<B> | AngeliA",
    "summary": "Class HealWeapon<B> Namespace AngeliA.Platformer Assembly com.angelia.platformer.dll public abstract class HealWeapon<B> : Weapon<B>, IMapItem where B : HealBullet Type Parameters B Inheritance object Item Equipment HandTool Weapon Weapon<B> HealWeapon<B> Implements IMapItem Inherited Members Weapon.BulletID Weapon.ValidDirection Weapon.OnPoseAnimationUpdate_FromEquipment(PoseCharacterRenderer) HandTool.SpriteID HandTool.EquipmentType HandTool.PerformDelayFrame HandTool.PerformDelayRate HandTool.TypeName HandTool.Duration HandTool.Cooldown HandTool.HoldPunish HandTool.ChargeDuration HandTool.DefaultMovementSpeedRateOnUse HandTool.WalkingMovementSpeedRateOnUse HandTool.RunningMovementSpeedRateOnUse HandTool.UseStackAsUsage HandTool.RepeatWhenHolding HandTool.CancelUseWhenRelease HandTool.LockFacingOnUse HandTool.IgnoreGrabTwist HandTool.AvailableInAir HandTool.AvailableInWater HandTool.AvailableWhenWalking HandTool.AvailableWhenRunning HandTool.AvailableWhenClimbing HandTool.AvailableWhenFlying HandTool.AvailableWhenRolling HandTool.AvailableWhenSquatting HandTool.AvailableWhenDashing HandTool.AvailableWhenSliding HandTool.AvailableWhenGrabbing HandTool.AvailableWhenRushing HandTool.AvailableWhenPounding HandTool.LoadFromSheet() HandTool.OnToolSpriteRendered(PoseCharacterRenderer, int, int, int, int, int, int, AngeSprite, int) HandTool.AllowingUse(Character) HandTool.OnToolPerform(Character) HandTool.GetHandheldPoseAnimationID(Character) HandTool.GetPerformPoseAnimationID(Character) Equipment.MaxStackCount Item.AllowDuplicateUpdate Item.EmbedIntoLevel Item.TypeID Item.BeforeItemUpdate_FromInventory(Character, int, int) Item.OnItemUpdate_FromInventory(Character, int, int) Item.OnPoseAnimationUpdate_FromInventory(PoseCharacterRenderer, int, int) Item.OnTakeDamage_FromInventory(Character, int, int, ref Damage) Item.OnCharacterAttack_FromInventory(Character, Bullet, int, int) Item.OnItemUpdate_FromEquipment(Character) Item.BeforePoseAnimationUpdate_FromEquipment(PoseCharacterRenderer) Item.OnTakeDamage_FromEquipment(Character, ref Damage) Item.OnCharacterAttack_FromEquipment(Character, Bullet) Item.TryRepairEquipment(Character) Item.OnItemUpdate_FromItemHolder(ItemHolder, int) Item.OnCollect(Character) Item.CanUse(Character) Item.Use(Character, int, int, out bool) Item.ItemConditionCheck(Character) Item.DrawItem(Entity, IRect, Color32, int) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Properties AllowManuallyAttack protected virtual bool AllowManuallyAttack { get; } Property Value bool AutoAttackFrequency protected virtual int AutoAttackFrequency { get; } Property Value int Methods BeforeItemUpdate_FromEquipment(Character) public override void BeforeItemUpdate_FromEquipment(Character holder) Parameters holder Character SpawnBullet(Character) public override Bullet SpawnBullet(Character sender) Parameters sender Character Returns Bullet"
  },
  "api/AngeliA.Platformer.Helmet-2.html": {
    "href": "api/AngeliA.Platformer.Helmet-2.html",
    "title": "Class Helmet<P, N> | AngeliA",
    "summary": "Class Helmet<P, N> Namespace AngeliA.Platformer Assembly com.angelia.platformer.dll public abstract class Helmet<P, N> : Armor<P, N>, IMapItem, IProgressiveItem where P : Equipment where N : Equipment Type Parameters P N Inheritance object Item Equipment Armor<P, N> Helmet<P, N> Implements IMapItem IProgressiveItem Inherited Members Armor<P, N>.RepairMaterials Armor<P, N>.Scale Armor<P, N>.HideEar Armor<P, N>.HideHorn Armor<P, N>.HideHair Armor<P, N>.HideTail Armor<P, N>.HideFace Armor<P, N>.HideWing Armor<P, N>.OnPoseAnimationUpdate_FromEquipment(PoseCharacterRenderer) Armor<P, N>.DrawArmor(PoseCharacterRenderer) Armor<P, N>.OnTakeDamage_FromEquipment(Character, ref Damage) Armor<P, N>.TryRepairEquipment(Character) Armor<P, N>.RepairArmor(Character, int) Equipment.MaxStackCount Item.AllowDuplicateUpdate Item.EmbedIntoLevel Item.TypeID Item.BeforeItemUpdate_FromInventory(Character, int, int) Item.OnItemUpdate_FromInventory(Character, int, int) Item.OnPoseAnimationUpdate_FromInventory(PoseCharacterRenderer, int, int) Item.OnTakeDamage_FromInventory(Character, int, int, ref Damage) Item.OnCharacterAttack_FromInventory(Character, Bullet, int, int) Item.BeforeItemUpdate_FromEquipment(Character) Item.OnItemUpdate_FromEquipment(Character) Item.BeforePoseAnimationUpdate_FromEquipment(PoseCharacterRenderer) Item.OnPoseAnimationUpdate_FromEquipment(PoseCharacterRenderer) Item.OnTakeDamage_FromEquipment(Character, ref Damage) Item.OnCharacterAttack_FromEquipment(Character, Bullet) Item.TryRepairEquipment(Character) Item.OnItemUpdate_FromItemHolder(ItemHolder, int) Item.OnCollect(Character) Item.CanUse(Character) Item.Use(Character, int, int, out bool) Item.ItemConditionCheck(Character) Item.DrawItem(Entity, IRect, Color32, int) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Constructors Helmet() public Helmet() Properties EquipmentType public override sealed EquipmentType EquipmentType { get; } Property Value EquipmentType WearingMode protected abstract HelmetWearingMode WearingMode { get; } Property Value HelmetWearingMode Methods DrawArmor(PoseCharacterRenderer) protected override void DrawArmor(PoseCharacterRenderer renderer) Parameters renderer PoseCharacterRenderer"
  },
  "api/AngeliA.Platformer.HelmetWearingMode.html": {
    "href": "api/AngeliA.Platformer.HelmetWearingMode.html",
    "title": "Enum HelmetWearingMode | AngeliA",
    "summary": "Enum HelmetWearingMode Namespace AngeliA.Platformer Assembly com.angelia.platformer.dll public enum HelmetWearingMode Extension Methods Extension.Next<E>(E) Extension.Prev<E>(E) Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Fields Attach = 0 Cover = 1"
  },
  "api/AngeliA.Platformer.IAutoTrackWalker.html": {
    "href": "api/AngeliA.Platformer.IAutoTrackWalker.html",
    "title": "Interface IAutoTrackWalker | AngeliA",
    "summary": "Interface IAutoTrackWalker Namespace AngeliA.Platformer Assembly com.angelia.platformer.dll public interface IAutoTrackWalker : IRouteWalker Inherited Members IRouteWalker.CurrentDirection IRouteWalker.TargetPosition IRouteWalker.GetNextRoutePosition(IRouteWalker, int, int, bool, BlockType, bool, HashSet<int>) IRouteWalker.GetNextRoutePosition(Entity, ref Direction8, ref Int2, int, int, bool, BlockType, bool, HashSet<int>) IRouteWalker.TryGetRouteFromMap(int, int, int, Direction8, out Direction8, BlockType, bool) IRouteWalker.TryGetRouteFromMap(HashSet<int>, int, int, Direction8, out Direction8, BlockType, bool) Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Properties LastWalkingFrame int LastWalkingFrame { get; set; } Property Value int OnTrack bool OnTrack { get; } Property Value bool TrackWalkSpeedRate int TrackWalkSpeedRate { get; } Property Value int WalkStartFrame int WalkStartFrame { get; set; } Property Value int Methods IsTypeAutoTrackWalker(int) public static bool IsTypeAutoTrackWalker(int id) Parameters id int Returns bool"
  },
  "api/AngeliA.Platformer.IPingPongWalker.html": {
    "href": "api/AngeliA.Platformer.IPingPongWalker.html",
    "title": "Interface IPingPongWalker | AngeliA",
    "summary": "Interface IPingPongWalker Namespace AngeliA.Platformer Assembly com.angelia.platformer.dll public interface IPingPongWalker Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Properties LastTurnFrame int LastTurnFrame { get; set; } Property Value int OnlyWalkWhenGrounded bool OnlyWalkWhenGrounded { get; } Property Value bool TurningCheckMask int TurningCheckMask { get; } Property Value int TurningCooldown int TurningCooldown { get; } Property Value int WalkOffEdge bool WalkOffEdge { get; } Property Value bool WalkSpeed int WalkSpeed { get; } Property Value int WalkingRight bool WalkingRight { get; set; } Property Value bool Methods OnActive(IPingPongWalker) public static void OnActive(IPingPongWalker walker) Parameters walker IPingPongWalker PingPongWalk(IPingPongWalker) public static void PingPongWalk(IPingPongWalker walker) Parameters walker IPingPongWalker"
  },
  "api/AngeliA.Platformer.IRider.html": {
    "href": "api/AngeliA.Platformer.IRider.html",
    "title": "Interface IRider | AngeliA",
    "summary": "Interface IRider Namespace AngeliA.Platformer Assembly com.angelia.platformer.dll public interface IRider Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Properties ReadyToRide bool ReadyToRide { get; } Property Value bool"
  },
  "api/AngeliA.Platformer.IUnitable.UniteMode.html": {
    "href": "api/AngeliA.Platformer.IUnitable.UniteMode.html",
    "title": "Enum IUnitable.UniteMode | AngeliA",
    "summary": "Enum IUnitable.UniteMode Namespace AngeliA.Platformer Assembly com.angelia.platformer.dll public enum IUnitable.UniteMode Extension Methods Extension.Next<E>(E) Extension.Prev<E>(E) Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Fields EightDirection = 3 FourDirection = 2 Horizontal = 0 Vertical = 1"
  },
  "api/AngeliA.Platformer.IUnitable.html": {
    "href": "api/AngeliA.Platformer.IUnitable.html",
    "title": "Interface IUnitable | AngeliA",
    "summary": "Interface IUnitable Namespace AngeliA.Platformer Assembly com.angelia.platformer.dll public interface IUnitable Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Fields GlobalUniteStamp public static int GlobalUniteStamp Field Value int UnitedPositions public static readonly Pipe<Int2> UnitedPositions Field Value Pipe<Int2> Properties LocalUniteStamp int LocalUniteStamp { get; set; } Property Value int UniteTempParam public static object UniteTempParam { get; } Property Value object Methods ForAllUnitedEntity<E>(int, int, IRect, OperationMode, UniteMode, Action<E>, object) public static void ForAllUnitedEntity<E>(int physicsMask, int entityID, IRect rect, OperationMode mode, IUnitable.UniteMode partialMode, Action<E> results, object param = null) where E : IUnitable Parameters physicsMask int entityID int rect IRect mode OperationMode partialMode IUnitable.UniteMode results Action<E> param object Type Parameters E"
  },
  "api/AngeliA.Platformer.InventoryFurniture-1.html": {
    "href": "api/AngeliA.Platformer.InventoryFurniture-1.html",
    "title": "Class InventoryFurniture<UI> | AngeliA",
    "summary": "Class InventoryFurniture<UI> Namespace AngeliA.Platformer Assembly com.angelia.platformer.dll public abstract class InventoryFurniture<UI> : InventoryFurniture, IMapItem, IBlockEntity, IActionTarget where UI : InventoryPartnerUI Type Parameters UI Inheritance object Entity Furniture ActionFurniture OpenableFurniture InventoryFurniture InventoryFurniture<UI> Implements IMapItem IBlockEntity IActionTarget Derived CraftingTable Wardrobe Inherited Members InventoryFurniture.PartnerID InventoryFurniture.InventoryID InventoryFurniture.InventoryColumn InventoryFurniture.InventoryRow InventoryFurniture.UnlockItemInside InventoryFurniture.OnActivated() InventoryFurniture.LateUpdate() InventoryFurniture.Invoke() InventoryFurniture.AllowInvoke() InventoryFurniture.SetOpen(bool) InventoryFurniture.TryGetInventoryUI(int, out InventoryPartnerUI) InventoryFurniture.IsInventoryFurniture(int, out int) OpenableFurniture.Open Furniture.ModuleType Furniture.FurnitureLeftOrDown Furniture.FurnitureRightOrUp Furniture.Pose Furniture.ColliderBorder Furniture.FirstUpdate() Furniture.BeforeUpdate() Furniture.GetIsHighlighted() Furniture.GetSpriteFromPose() Entity.Active Entity.X Entity.Y Entity.Width Entity.Height Entity.TypeID Entity.SpawnFrame Entity.FromWorld Entity.Rect Entity.InstanceOrder Entity.MapUnitPos Entity.InstanceID Entity.IgnoreReposition Entity.XY Entity.Size Entity.Center Entity.CenterX Entity.CenterY Entity.PivotUnitPosition Entity.OnInactivated() Entity.Update() Entity.AfterReposition(Int3, Int3) Entity.IgnoreDespawnFromMap(int) Entity.CancelIgnoreDespawnFromMap() Entity.Draw() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Constructors InventoryFurniture() public InventoryFurniture()"
  },
  "api/AngeliA.Platformer.InventoryFurniture.html": {
    "href": "api/AngeliA.Platformer.InventoryFurniture.html",
    "title": "Class InventoryFurniture | AngeliA",
    "summary": "Class InventoryFurniture Namespace AngeliA.Platformer Assembly com.angelia.platformer.dll public abstract class InventoryFurniture : OpenableFurniture, IMapItem, IBlockEntity, IActionTarget Inheritance object Entity Furniture ActionFurniture OpenableFurniture InventoryFurniture Implements IMapItem IBlockEntity IActionTarget Derived InventoryFurniture<UI> Inherited Members OpenableFurniture.Open Furniture.ModuleType Furniture.FurnitureLeftOrDown Furniture.FurnitureRightOrUp Furniture.Pose Furniture.ColliderBorder Furniture.FirstUpdate() Furniture.BeforeUpdate() Furniture.GetIsHighlighted() Furniture.GetSpriteFromPose() Entity.Active Entity.X Entity.Y Entity.Width Entity.Height Entity.TypeID Entity.SpawnFrame Entity.FromWorld Entity.Rect Entity.InstanceOrder Entity.MapUnitPos Entity.InstanceID Entity.IgnoreReposition Entity.XY Entity.Size Entity.Center Entity.CenterX Entity.CenterY Entity.PivotUnitPosition Entity.OnInactivated() Entity.Update() Entity.AfterReposition(Int3, Int3) Entity.IgnoreDespawnFromMap(int) Entity.CancelIgnoreDespawnFromMap() Entity.Draw() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Constructors InventoryFurniture() public InventoryFurniture() Properties InventoryColumn protected abstract int InventoryColumn { get; } Property Value int InventoryID protected int InventoryID { get; } Property Value int InventoryRow protected abstract int InventoryRow { get; } Property Value int PartnerID protected int PartnerID { get; init; } Property Value int UnlockItemInside protected virtual bool UnlockItemInside { get; } Property Value bool Methods AllowInvoke() public override bool AllowInvoke() Returns bool Invoke() public override bool Invoke() Returns bool IsInventoryFurniture(int, out int) public static bool IsInventoryFurniture(int typeID, out int capacity) Parameters typeID int capacity int Returns bool LateUpdate() public override void LateUpdate() OnActivated() public override void OnActivated() SetOpen(bool) protected override void SetOpen(bool open) Parameters open bool TryGetInventoryUI(int, out InventoryPartnerUI) protected bool TryGetInventoryUI(int typeID, out InventoryPartnerUI result) Parameters typeID int result InventoryPartnerUI Returns bool"
  },
  "api/AngeliA.Platformer.ItemBasedSummon.html": {
    "href": "api/AngeliA.Platformer.ItemBasedSummon.html",
    "title": "Class ItemBasedSummon | AngeliA",
    "summary": "Class ItemBasedSummon Namespace AngeliA.Platformer Assembly com.angelia.platformer.dll public abstract class ItemBasedSummon : Summon, IMapItem, ICarrier, IWithCharacterMovement, IWithCharacterAttackness, IWithCharacterHealth, IWithCharacterBuff, IWithCharacterRenderer, IDamageReceiver, IActionTarget Inheritance object Entity Rigidbody Character Summon ItemBasedSummon Implements IMapItem ICarrier IWithCharacterMovement IWithCharacterAttackness IWithCharacterHealth IWithCharacterBuff IWithCharacterRenderer IDamageReceiver IActionTarget Inherited Members Summon.Owner Summon.InventoryUpdatedFrame Summon.Navigation Summon.RequireOwner Summon.AllowRescueWhenPassout Summon.AllowBeingPush Summon.CarryOtherOnTop Summon.Team Summon.AttackTargetTeam Summon.OnInactivated() Summon.FirstUpdate() Summon.OnSummoned(bool) Summon.LateUpdate() Summon.OnDamaged(Damage) Summon.CreateNativeAttackness() Summon.CreateSummonNavigation() Summon.SetCharacterState(CharacterState) Summon.CreateSummon<T>(Character, int, int, bool) Summon.CreateSummon(Character, int, int, int, bool) Character.INVENTORY_COLUMN Character.INVENTORY_ROW Character.Teleporting Character.TeleportEndFrame Character.TeleportingWithPortal Character.TeleportToFrontSide Character.CurrentAttackSpeedRate Character.PhysicalLayer Character.SelfCollisionMask Character.AirDragX Character.AirDragY Character.FacingRight Character.EjectWhenInsideGround Character.InventoryType Character.FinalCharacterHeight Character.DefaultCharacterHeight Character.IgnoreDamageType Character.Bouncy Character.HelmetInteractable Character.BodySuitInteractable Character.GlovesInteractable Character.ShoesInteractable Character.JewelryInteractable Character.HandToolInteractable Character.CharacterState Character.AnimationType Character.SleepStartFrame Character.PassOutFrame Character.LastRequireBounceFrame Character.DespawnAfterPassoutDelay Character.InventoryID Character.RenderingCellIndex Character.FullSleepDuration Character.TeleportDuration Character.Movement Character.Attackness Character.Health Character.Rendering Character.NativeMovement Character.NativeAttackness Character.NativeHealth Character.NativeRenderer Character.Buff Character.AfterReposition(Int3, Int3) Character.BeforeUpdate() Character.GetCurrentPoseAnimationType() Character.OnCharacterRendered() Character.EnterTeleportState(bool, bool, bool) Character.LockAnimationType(CharacterAnimationType, int) Character.GetBonusFromFullSleep() Character.InsideGroundCheck() Character.Bounce() Character.CancelBounce() Character.ResetInventoryUpdate(int) Character.EquipmentAvailable(EquipmentType) Character.TryRepairAllEquipments(bool) Character.CreateNativeMovement() Character.CreateNativeHealth() Character.CreateNativeRenderer() Character.OverrideMovement(CharacterMovement, int) Character.OverrideAttackness(CharacterAttackness, int) Character.OverrideHealth(CharacterHealth, int) Character.OverrideRenderer(CharacterRenderer, int) Character.IsAttackAllowedByMovement() Character.IsAttackAllowedByEquipment() Character.ForceFillTrigger(int) Character.IgnoreDamageFromLevel(int) Character.GetDisplayName() Character.GetDescription() Rigidbody.Rect Rigidbody.IsGrounded Rigidbody.IsInsideGround Rigidbody.InWater Rigidbody.VelocityX Rigidbody.VelocityY Rigidbody.BounceSpeedRate Rigidbody.OffsetX Rigidbody.OffsetY Rigidbody.GroundedID Rigidbody.PrevX Rigidbody.PrevY Rigidbody.DeltaPositionX Rigidbody.DeltaPositionY Rigidbody.MomentumX Rigidbody.MomentumY Rigidbody.RequireDodgeOverlap Rigidbody.GlobalGravity Rigidbody.FallingGravityScale Rigidbody.RisingGravityScale Rigidbody.CollisionMask Rigidbody.IgnoreGroundCheck Rigidbody.IgnoreGravity Rigidbody.IgnorePhysics Rigidbody.IgnoreInsideGround Rigidbody.IgnoreOneway Rigidbody.IgnoreMomentum Rigidbody.MaxGravitySpeed Rigidbody.WaterFloatSpeed Rigidbody.WaterSpeedRate Rigidbody.DestroyWhenInsideGround Rigidbody.PerformMove(int, int, bool) Rigidbody.MakeGrounded(int, int) Rigidbody.CancelMakeGrounded() Rigidbody.Push(int) Rigidbody.PerformGroundCheck(IRect, out PhysicsCell) Rigidbody.FillAsTrigger(int, int) Rigidbody.FillAsOnewayUp(int, int) Rigidbody.OnInsideGroundDestroyed() Rigidbody.GroundedCheck() Rigidbody.RefreshPrevPosition() Entity.Active Entity.X Entity.Y Entity.Width Entity.Height Entity.TypeID Entity.SpawnFrame Entity.FromWorld Entity.InstanceOrder Entity.MapUnitPos Entity.InstanceID Entity.IgnoreReposition Entity.XY Entity.Size Entity.Center Entity.CenterX Entity.CenterY Entity.PivotUnitPosition Entity.IgnoreDespawnFromMap(int) Entity.CancelIgnoreDespawnFromMap() Entity.Draw() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Properties OriginItemID public int OriginItemID { get; set; } Property Value int Methods OnActivated() public override void OnActivated() Update() public override void Update()"
  },
  "api/AngeliA.Platformer.Launcher.html": {
    "href": "api/AngeliA.Platformer.Launcher.html",
    "title": "Class Launcher | AngeliA",
    "summary": "Class Launcher Namespace AngeliA.Platformer Assembly com.angelia.platformer.dll [Entity.Layer(3)] [Entity.MapEditorGroup(\"Contraption\", 0)] public abstract class Launcher : Entity, IMapItem, IBlockEntity Inheritance object Entity Launcher Implements IMapItem IBlockEntity Inherited Members Entity.Active Entity.X Entity.Y Entity.Width Entity.Height Entity.TypeID Entity.SpawnFrame Entity.FromWorld Entity.Rect Entity.InstanceOrder Entity.MapUnitPos Entity.InstanceID Entity.IgnoreReposition Entity.XY Entity.Size Entity.Center Entity.CenterX Entity.CenterY Entity.PivotUnitPosition Entity.OnInactivated() Entity.BeforeUpdate() Entity.AfterReposition(Int3, Int3) Entity.IgnoreDespawnFromMap(int) Entity.CancelIgnoreDespawnFromMap() Entity.Draw() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Properties AllowingAutoLaunch public virtual bool AllowingAutoLaunch { get; } Property Value bool CurrentLaunchedCount public int CurrentLaunchedCount { get; } Property Value int FailbackEntityID public virtual int FailbackEntityID { get; } Property Value int ItemCountPreLaunch public virtual int ItemCountPreLaunch { get; } Property Value int KeepLaunchedEntityInMap public virtual bool KeepLaunchedEntityInMap { get; } Property Value bool LastLaunchedFrame public int LastLaunchedFrame { get; set; } Property Value int LaunchFrequency public virtual int LaunchFrequency { get; } Property Value int LaunchOffset public virtual Int2 LaunchOffset { get; } Property Value Int2 LaunchOverlapingElement public virtual bool LaunchOverlapingElement { get; } Property Value bool LaunchTowardsPlayer public virtual bool LaunchTowardsPlayer { get; } Property Value bool LaunchVelocity public virtual Int2 LaunchVelocity { get; } Property Value Int2 LaunchWhenEntranceBlocked public virtual bool LaunchWhenEntranceBlocked { get; } Property Value bool MaxLaunchCount public virtual int MaxLaunchCount { get; } Property Value int TargetEntityID public virtual int TargetEntityID { get; } Property Value int UseMomentum public virtual bool UseMomentum { get; } Property Value bool Methods FirstUpdate() public override void FirstUpdate() LateUpdate() public override void LateUpdate() LaunchEntity() public Entity LaunchEntity() Returns Entity LaunchToRightSide() public bool LaunchToRightSide() Returns bool OnActivated() public override void OnActivated() OnEntityLaunched(Entity, int, int) protected virtual void OnEntityLaunched(Entity entity, int x, int y) Parameters entity Entity x int y int OnEntityRefresh() public void OnEntityRefresh() Update() public override void Update() ValidForLaunch() public bool ValidForLaunch() Returns bool"
  },
  "api/AngeliA.Platformer.Leaf.html": {
    "href": "api/AngeliA.Platformer.Leaf.html",
    "title": "Class Leaf | AngeliA",
    "summary": "Class Leaf Namespace AngeliA.Platformer Assembly com.angelia.platformer.dll [Entity.MapEditorGroup(\"Vegetation\", 0)] [Entity.Layer(3)] public abstract class Leaf : Entity, IMapItem, IBlockEntity, ICombustible, IDamageReceiver Inheritance object Entity Leaf Implements IMapItem IBlockEntity ICombustible IDamageReceiver Inherited Members Entity.Active Entity.X Entity.Y Entity.Width Entity.Height Entity.TypeID Entity.SpawnFrame Entity.FromWorld Entity.Rect Entity.InstanceOrder Entity.MapUnitPos Entity.InstanceID Entity.IgnoreReposition Entity.XY Entity.Size Entity.Center Entity.CenterX Entity.CenterY Entity.PivotUnitPosition Entity.OnInactivated() Entity.BeforeUpdate() Entity.AfterReposition(Int3, Int3) Entity.IgnoreDespawnFromMap(int) Entity.CancelIgnoreDespawnFromMap() Entity.Draw() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Properties LeafArtworkCode protected int LeafArtworkCode { get; } Property Value int LeafCount protected virtual int LeafCount { get; } Property Value int LeafExpand protected virtual int LeafExpand { get; } Property Value int Methods FirstUpdate() public override void FirstUpdate() GetLeafShiftY(int, int, int) protected int GetLeafShiftY(int frameOffset = 0, int duration = 60, int amount = 12) Parameters frameOffset int duration int amount int Returns int LateUpdate() public override void LateUpdate() OnActivated() public override void OnActivated() OnLeafBreak() protected virtual void OnLeafBreak() Update() public override void Update()"
  },
  "api/AngeliA.Platformer.Light.html": {
    "href": "api/AngeliA.Platformer.Light.html",
    "title": "Class Light | AngeliA",
    "summary": "Class Light Namespace AngeliA.Platformer Assembly com.angelia.platformer.dll public abstract class Light : Furniture, IMapItem, IBlockEntity Inheritance object Entity Furniture Light Implements IMapItem IBlockEntity Inherited Members Furniture.ModuleType Furniture.FurnitureLeftOrDown Furniture.FurnitureRightOrUp Furniture.Pose Furniture.ColliderBorder Furniture.BeforeUpdate() Furniture.GetIsHighlighted() Furniture.GetSpriteFromPose() Entity.Active Entity.X Entity.Y Entity.Width Entity.Height Entity.TypeID Entity.SpawnFrame Entity.FromWorld Entity.Rect Entity.InstanceOrder Entity.MapUnitPos Entity.InstanceID Entity.IgnoreReposition Entity.XY Entity.Size Entity.Center Entity.CenterX Entity.CenterY Entity.PivotUnitPosition Entity.OnInactivated() Entity.AfterReposition(Int3, Int3) Entity.IgnoreDespawnFromMap(int) Entity.CancelIgnoreDespawnFromMap() Entity.Draw() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Properties IlluminateRange protected virtual int IlluminateRange { get; } Property Value int LightRange protected virtual int LightRange { get; } Property Value int LightSprite protected virtual SpriteCode LightSprite { get; } Property Value SpriteCode Methods FirstUpdate() public override void FirstUpdate() LateUpdate() public override void LateUpdate() OnActivated() public override void OnActivated() Update() public override void Update()"
  },
  "api/AngeliA.Platformer.Liquid.html": {
    "href": "api/AngeliA.Platformer.Liquid.html",
    "title": "Class Liquid | AngeliA",
    "summary": "Class Liquid Namespace AngeliA.Platformer Assembly com.angelia.platformer.dll [Entity.Layer(4)] public abstract class Liquid : Entity, IMapItem Inheritance object Entity Liquid Implements IMapItem Inherited Members Entity.Active Entity.X Entity.Y Entity.Width Entity.Height Entity.TypeID Entity.SpawnFrame Entity.FromWorld Entity.Rect Entity.InstanceOrder Entity.MapUnitPos Entity.InstanceID Entity.IgnoreReposition Entity.XY Entity.Size Entity.Center Entity.CenterX Entity.CenterY Entity.PivotUnitPosition Entity.OnInactivated() Entity.Update() Entity.AfterReposition(Int3, Int3) Entity.IgnoreDespawnFromMap(int) Entity.CancelIgnoreDespawnFromMap() Entity.Draw() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Properties ArtworkID protected virtual int ArtworkID { get; } Property Value int ProduceID protected virtual int ProduceID { get; } Property Value int ReproduceFrequency protected virtual int ReproduceFrequency { get; } Property Value int ReproduceVolume protected virtual int ReproduceVolume { get; } Property Value int VanishSpeed protected virtual int VanishSpeed { get; } Property Value int Volume public int Volume { get; } Property Value int Methods BeforeUpdate() public override void BeforeUpdate() FirstUpdate() public override void FirstUpdate() LateUpdate() public override void LateUpdate() OnActivated() public override void OnActivated() RequireVanishCheck() protected virtual bool RequireVanishCheck() Returns bool"
  },
  "api/AngeliA.Platformer.MapChest.html": {
    "href": "api/AngeliA.Platformer.MapChest.html",
    "title": "Class MapChest | AngeliA",
    "summary": "Class MapChest Namespace AngeliA.Platformer Assembly com.angelia.platformer.dll public abstract class MapChest : Furniture, IMapItem, IActionTarget, IBlockEntity Inheritance object Entity Furniture MapChest Implements IMapItem IActionTarget IBlockEntity Inherited Members Furniture.ModuleType Furniture.FurnitureLeftOrDown Furniture.FurnitureRightOrUp Furniture.Pose Furniture.ColliderBorder Furniture.OnActivated() Furniture.FirstUpdate() Furniture.BeforeUpdate() Furniture.GetIsHighlighted() Furniture.GetSpriteFromPose() Entity.Active Entity.X Entity.Y Entity.Width Entity.Height Entity.TypeID Entity.SpawnFrame Entity.FromWorld Entity.Rect Entity.InstanceOrder Entity.MapUnitPos Entity.InstanceID Entity.IgnoreReposition Entity.XY Entity.Size Entity.Center Entity.CenterX Entity.CenterY Entity.PivotUnitPosition Entity.OnInactivated() Entity.Update() Entity.AfterReposition(Int3, Int3) Entity.IgnoreDespawnFromMap(int) Entity.CancelIgnoreDespawnFromMap() Entity.Draw() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Fields OpenedChest protected static readonly HashSet<Int3> OpenedChest Field Value HashSet<Int3> Properties ItemPlaceHolder protected virtual int ItemPlaceHolder { get; } Property Value int Methods ClearOpenedMarks(Mode) public static void ClearOpenedMarks(OnMapEditorModeChange_ModeAttribute.Mode mode) Parameters mode OnMapEditorModeChange_ModeAttribute.Mode ClearOpenedMarks_Restart() [OnGameRestart(0)] public static void ClearOpenedMarks_Restart() IsChestOpened(MapChest) protected static bool IsChestOpened(MapChest chest) Parameters chest MapChest Returns bool LateUpdate() public override void LateUpdate()"
  },
  "api/AngeliA.Platformer.MeleeBullet.html": {
    "href": "api/AngeliA.Platformer.MeleeBullet.html",
    "title": "Class MeleeBullet | AngeliA",
    "summary": "Class MeleeBullet Namespace AngeliA.Platformer Assembly com.angelia.platformer.dll public class MeleeBullet : Bullet, IMapItem Inheritance object Entity Bullet MeleeBullet Implements IMapItem Inherited Members Bullet.AttackIndex Bullet.AttackCharged Bullet.DamageType Bullet.Sender Bullet.FailbackTargetTeam Bullet.TargetTeam Bullet.BasicDamage Bullet.EnvironmentMask Bullet.ReceiverMask Bullet.RoundHitCheck Bullet.Damage Bullet.OnActivated() Bullet.BeforeUpdate() Bullet.ReceiverHitCheck(out bool) Bullet.EnvironmentHitCheck(out bool) Bullet.BeforeDespawn(IDamageReceiver) Bullet.PerformHitEnvironment(out bool) Bullet.PerformHitReceiver(IDamageReceiver, out bool) Bullet.GroundCheck(out Color32) Bullet.GetDamage() Entity.Active Entity.X Entity.Y Entity.Width Entity.Height Entity.TypeID Entity.SpawnFrame Entity.FromWorld Entity.Rect Entity.InstanceOrder Entity.MapUnitPos Entity.InstanceID Entity.IgnoreReposition Entity.XY Entity.Size Entity.Center Entity.CenterX Entity.CenterY Entity.PivotUnitPosition Entity.OnInactivated() Entity.FirstUpdate() Entity.LateUpdate() Entity.AfterReposition(Int3, Int3) Entity.IgnoreDespawnFromMap(int) Entity.CancelIgnoreDespawnFromMap() Entity.Draw() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Fields TYPE_ID public static readonly int TYPE_ID Field Value int Properties Duration public override int Duration { get; } Property Value int EnvironmentHitCount protected override sealed int EnvironmentHitCount { get; } Property Value int ReceiverHitCount protected override int ReceiverHitCount { get; } Property Value int SmokeParticleID public virtual int SmokeParticleID { get; } Property Value int Methods FollowSender() public void FollowSender() Update() public override void Update()"
  },
  "api/AngeliA.Platformer.MeleeWeapon.html": {
    "href": "api/AngeliA.Platformer.MeleeWeapon.html",
    "title": "Class MeleeWeapon | AngeliA",
    "summary": "Class MeleeWeapon Namespace AngeliA.Platformer Assembly com.angelia.platformer.dll public abstract class MeleeWeapon : Weapon<MeleeBullet>, IMapItem Inheritance object Item Equipment HandTool Weapon Weapon<MeleeBullet> MeleeWeapon Implements IMapItem Inherited Members Weapon.BulletID Weapon.ValidDirection Weapon.OnPoseAnimationUpdate_FromEquipment(PoseCharacterRenderer) HandTool.SpriteID HandTool.EquipmentType HandTool.PerformDelayFrame HandTool.PerformDelayRate HandTool.TypeName HandTool.Duration HandTool.Cooldown HandTool.HoldPunish HandTool.ChargeDuration HandTool.DefaultMovementSpeedRateOnUse HandTool.WalkingMovementSpeedRateOnUse HandTool.RunningMovementSpeedRateOnUse HandTool.UseStackAsUsage HandTool.RepeatWhenHolding HandTool.CancelUseWhenRelease HandTool.LockFacingOnUse HandTool.IgnoreGrabTwist HandTool.AvailableInAir HandTool.AvailableInWater HandTool.AvailableWhenWalking HandTool.AvailableWhenRunning HandTool.AvailableWhenClimbing HandTool.AvailableWhenFlying HandTool.AvailableWhenRolling HandTool.AvailableWhenSquatting HandTool.AvailableWhenDashing HandTool.AvailableWhenSliding HandTool.AvailableWhenGrabbing HandTool.AvailableWhenRushing HandTool.AvailableWhenPounding HandTool.LoadFromSheet() HandTool.OnToolSpriteRendered(PoseCharacterRenderer, int, int, int, int, int, int, AngeSprite, int) HandTool.AllowingUse(Character) HandTool.OnToolPerform(Character) HandTool.GetHandheldPoseAnimationID(Character) HandTool.GetPerformPoseAnimationID(Character) Equipment.MaxStackCount Item.AllowDuplicateUpdate Item.EmbedIntoLevel Item.TypeID Item.BeforeItemUpdate_FromInventory(Character, int, int) Item.OnItemUpdate_FromInventory(Character, int, int) Item.OnPoseAnimationUpdate_FromInventory(PoseCharacterRenderer, int, int) Item.OnTakeDamage_FromInventory(Character, int, int, ref Damage) Item.OnCharacterAttack_FromInventory(Character, Bullet, int, int) Item.BeforeItemUpdate_FromEquipment(Character) Item.OnItemUpdate_FromEquipment(Character) Item.BeforePoseAnimationUpdate_FromEquipment(PoseCharacterRenderer) Item.OnTakeDamage_FromEquipment(Character, ref Damage) Item.OnCharacterAttack_FromEquipment(Character, Bullet) Item.TryRepairEquipment(Character) Item.OnItemUpdate_FromItemHolder(ItemHolder, int) Item.OnCollect(Character) Item.CanUse(Character) Item.Use(Character, int, int, out bool) Item.ItemConditionCheck(Character) Item.DrawItem(Entity, IRect, Color32, int) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Properties Damage public virtual int Damage { get; } Property Value int RangeXLeft public abstract int RangeXLeft { get; } Property Value int RangeXRight public abstract int RangeXRight { get; } Property Value int RangeY public abstract int RangeY { get; } Property Value int Methods SpawnBullet(Character) public override Bullet SpawnBullet(Character sender) Parameters sender Character Returns Bullet"
  },
  "api/AngeliA.Platformer.MiniGame.SpawnBadgeHandler.html": {
    "href": "api/AngeliA.Platformer.MiniGame.SpawnBadgeHandler.html",
    "title": "Delegate MiniGame.SpawnBadgeHandler | AngeliA",
    "summary": "Delegate MiniGame.SpawnBadgeHandler Namespace AngeliA.Platformer Assembly com.angelia.platformer.dll public delegate void MiniGame.SpawnBadgeHandler(int quality) Parameters quality int Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.Platformer.MiniGame.html": {
    "href": "api/AngeliA.Platformer.MiniGame.html",
    "title": "Class MiniGame | AngeliA",
    "summary": "Class MiniGame Namespace AngeliA.Platformer Assembly com.angelia.platformer.dll [Entity.MapEditorGroup(\"MiniGame\", 0)] [Entity.Layer(3)] public abstract class MiniGame : Entity, IMapItem, IActionTarget, IBlockEntity Inheritance object Entity MiniGame Implements IMapItem IActionTarget IBlockEntity Inherited Members Entity.Active Entity.X Entity.Y Entity.Width Entity.Height Entity.TypeID Entity.SpawnFrame Entity.FromWorld Entity.Rect Entity.InstanceOrder Entity.MapUnitPos Entity.InstanceID Entity.IgnoreReposition Entity.XY Entity.Size Entity.Center Entity.CenterX Entity.CenterY Entity.PivotUnitPosition Entity.OnActivated() Entity.BeforeUpdate() Entity.Update() Entity.AfterReposition(Int3, Int3) Entity.IgnoreDespawnFromMap(int) Entity.CancelIgnoreDespawnFromMap() Entity.Draw() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Constructors MiniGame() public MiniGame() Properties BadgeCount protected abstract int BadgeCount { get; } Property Value int BadgeHints protected virtual LanguageCode[] BadgeHints { get; } Property Value LanguageCode[] DisplayName protected abstract string DisplayName { get; } Property Value string IsPlaying protected bool IsPlaying { get; } Property Value bool RequireMouseCursor protected abstract bool RequireMouseCursor { get; } Property Value bool RequireQuitConfirm protected virtual bool RequireQuitConfirm { get; } Property Value bool ShowRestartOption protected virtual bool ShowRestartOption { get; } Property Value bool Skin protected GUISkin Skin { get; } Property Value GUISkin WindowRect protected IRect WindowRect { get; } Property Value IRect WindowSize protected virtual Int2 WindowSize { get; } Property Value Int2 Methods CloseMiniGame() protected virtual void CloseMiniGame() DrawBadges(IRect) protected void DrawBadges(IRect panelRect) Parameters panelRect IRect DrawBadges(IRect, Color32) protected void DrawBadges(IRect panelRect, Color32 backgroundColor) Parameters panelRect IRect backgroundColor Color32 FirstUpdate() public override void FirstUpdate() GameUpdate() protected abstract void GameUpdate() GiveBadge(int, bool) protected void GiveBadge(int index, bool isGold) Parameters index int isGold bool LateUpdate() public override sealed void LateUpdate() OnInactivated() public override void OnInactivated() RestartGame() protected virtual void RestartGame() StartMiniGame() protected abstract void StartMiniGame() Unify(int) protected static int Unify(int value) Parameters value int Returns int Events OnBadgeSpawn public static event MiniGame.SpawnBadgeHandler OnBadgeSpawn Event Type MiniGame.SpawnBadgeHandler"
  },
  "api/AngeliA.Platformer.MiniGameTask.html": {
    "href": "api/AngeliA.Platformer.MiniGameTask.html",
    "title": "Class MiniGameTask | AngeliA",
    "summary": "Class MiniGameTask Namespace AngeliA.Platformer Assembly com.angelia.platformer.dll public class MiniGameTask : Task Inheritance object Task MiniGameTask Inherited Members Task.LocalFrame Task.UserData Task.OnStart() Task.OnEnd() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Fields MiniGame public MiniGame MiniGame Field Value MiniGame Methods FrameUpdate() public override TaskResult FrameUpdate() Returns TaskResult"
  },
  "api/AngeliA.Platformer.MissileBullet.html": {
    "href": "api/AngeliA.Platformer.MissileBullet.html",
    "title": "Class MissileBullet | AngeliA",
    "summary": "Class MissileBullet Namespace AngeliA.Platformer Assembly com.angelia.platformer.dll public abstract class MissileBullet : Bullet, IMapItem, IDamageReceiver Inheritance object Entity Bullet MissileBullet Implements IMapItem IDamageReceiver Inherited Members Bullet.AttackIndex Bullet.AttackCharged Bullet.DamageType Bullet.Sender Bullet.FailbackTargetTeam Bullet.TargetTeam Bullet.BasicDamage Bullet.EnvironmentMask Bullet.ReceiverMask Bullet.RoundHitCheck Bullet.Damage Bullet.Update() Bullet.ReceiverHitCheck(out bool) Bullet.EnvironmentHitCheck(out bool) Bullet.BeforeDespawn(IDamageReceiver) Bullet.GroundCheck(out Color32) Bullet.GetDamage() Entity.Active Entity.X Entity.Y Entity.Width Entity.Height Entity.TypeID Entity.SpawnFrame Entity.FromWorld Entity.Rect Entity.InstanceOrder Entity.MapUnitPos Entity.InstanceID Entity.IgnoreReposition Entity.XY Entity.Size Entity.Center Entity.CenterX Entity.CenterY Entity.PivotUnitPosition Entity.OnInactivated() Entity.AfterReposition(Int3, Int3) Entity.IgnoreDespawnFromMap(int) Entity.CancelIgnoreDespawnFromMap() Entity.Draw() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Properties CurrentRotation public int CurrentRotation { get; set; } Property Value int CurrentVelocity public Int2 CurrentVelocity { get; set; } Property Value Int2 DestroyOnHitTarget protected virtual bool DestroyOnHitTarget { get; } Property Value bool DestroyWhenTakeDamage protected virtual bool DestroyWhenTakeDamage { get; } Property Value bool Duration public override int Duration { get; } Property Value int EnvironmentHitCount protected override int EnvironmentHitCount { get; } Property Value int ExplosionParticleID protected virtual int ExplosionParticleID { get; } Property Value int MissileAcceleration protected virtual int MissileAcceleration { get; } Property Value int MissileFlyingSpeed protected virtual int MissileFlyingSpeed { get; } Property Value int MissileStartSpeed protected virtual int MissileStartSpeed { get; } Property Value int MissileTarget public Entity MissileTarget { get; set; } Property Value Entity OnlyHitTarget protected virtual bool OnlyHitTarget { get; } Property Value bool ReceiverHitCount protected override int ReceiverHitCount { get; } Property Value int SmokeParticleFrequency protected virtual int SmokeParticleFrequency { get; } Property Value int SmokeParticleID protected virtual int SmokeParticleID { get; } Property Value int TargetHitFrame protected int TargetHitFrame { get; } Property Value int Methods BeforeUpdate() public override void BeforeUpdate() FindTargetUpdate() protected virtual void FindTargetUpdate() FirstUpdate() public override void FirstUpdate() LateUpdate() public override void LateUpdate() OnActivated() public override void OnActivated() OnMissileHit(IDamageReceiver) protected virtual void OnMissileHit(IDamageReceiver receiver) Parameters receiver IDamageReceiver PerformHitEnvironment(out bool) protected override void PerformHitEnvironment(out bool requireSelfDestroy) Parameters requireSelfDestroy bool PerformHitReceiver(IDamageReceiver, out bool) protected override void PerformHitReceiver(IDamageReceiver receiver, out bool requireSelfDestroy) Parameters receiver IDamageReceiver requireSelfDestroy bool SpawnMissileExplosionParticle() protected virtual Particle SpawnMissileExplosionParticle() Returns Particle SpawnMissileSmokeParticle() protected virtual Particle SpawnMissileSmokeParticle() Returns Particle UpdateMissileMovement() protected virtual void UpdateMissileMovement()"
  },
  "api/AngeliA.Platformer.MissileWeapon-1.html": {
    "href": "api/AngeliA.Platformer.MissileWeapon-1.html",
    "title": "Class MissileWeapon<B> | AngeliA",
    "summary": "Class MissileWeapon<B> Namespace AngeliA.Platformer Assembly com.angelia.platformer.dll public abstract class MissileWeapon<B> : Weapon<B>, IMapItem where B : MissileBullet Type Parameters B Inheritance object Item Equipment HandTool Weapon Weapon<B> MissileWeapon<B> Implements IMapItem Inherited Members Weapon.BulletID Weapon.OnPoseAnimationUpdate_FromEquipment(PoseCharacterRenderer) HandTool.SpriteID HandTool.EquipmentType HandTool.PerformDelayFrame HandTool.PerformDelayRate HandTool.TypeName HandTool.HoldPunish HandTool.ChargeDuration HandTool.UseStackAsUsage HandTool.RepeatWhenHolding HandTool.CancelUseWhenRelease HandTool.LockFacingOnUse HandTool.IgnoreGrabTwist HandTool.LoadFromSheet() HandTool.OnToolSpriteRendered(PoseCharacterRenderer, int, int, int, int, int, int, AngeSprite, int) HandTool.AllowingUse(Character) HandTool.OnToolPerform(Character) HandTool.GetHandheldPoseAnimationID(Character) HandTool.GetPerformPoseAnimationID(Character) Equipment.MaxStackCount Item.AllowDuplicateUpdate Item.EmbedIntoLevel Item.TypeID Item.BeforeItemUpdate_FromInventory(Character, int, int) Item.OnItemUpdate_FromInventory(Character, int, int) Item.OnPoseAnimationUpdate_FromInventory(PoseCharacterRenderer, int, int) Item.OnTakeDamage_FromInventory(Character, int, int, ref Damage) Item.OnCharacterAttack_FromInventory(Character, Bullet, int, int) Item.OnItemUpdate_FromEquipment(Character) Item.BeforePoseAnimationUpdate_FromEquipment(PoseCharacterRenderer) Item.OnTakeDamage_FromEquipment(Character, ref Damage) Item.OnCharacterAttack_FromEquipment(Character, Bullet) Item.TryRepairEquipment(Character) Item.OnItemUpdate_FromItemHolder(ItemHolder, int) Item.OnCollect(Character) Item.CanUse(Character) Item.Use(Character, int, int, out bool) Item.ItemConditionCheck(Character) Item.DrawItem(Entity, IRect, Color32, int) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Properties AvailableInAir public override bool AvailableInAir { get; } Property Value bool AvailableInWater public override bool AvailableInWater { get; } Property Value bool AvailableWhenClimbing public override bool AvailableWhenClimbing { get; } Property Value bool AvailableWhenDashing public override bool AvailableWhenDashing { get; } Property Value bool AvailableWhenFlying public override bool AvailableWhenFlying { get; } Property Value bool AvailableWhenGrabbing public override bool AvailableWhenGrabbing { get; } Property Value bool AvailableWhenPounding public override bool AvailableWhenPounding { get; } Property Value bool AvailableWhenRolling public override bool AvailableWhenRolling { get; } Property Value bool AvailableWhenRunning public override bool AvailableWhenRunning { get; } Property Value bool AvailableWhenRushing public override bool AvailableWhenRushing { get; } Property Value bool AvailableWhenSliding public override bool AvailableWhenSliding { get; } Property Value bool AvailableWhenSquatting public override bool AvailableWhenSquatting { get; } Property Value bool AvailableWhenWalking public override bool AvailableWhenWalking { get; } Property Value bool Cooldown public override int Cooldown { get; } Property Value int DefaultMovementSpeedRateOnUse public override int? DefaultMovementSpeedRateOnUse { get; } Property Value int? Duration public override int Duration { get; } Property Value int RunningMovementSpeedRateOnUse public override int? RunningMovementSpeedRateOnUse { get; } Property Value int? ValidDirection protected override WeaponValidDirection ValidDirection { get; } Property Value WeaponValidDirection WalkingMovementSpeedRateOnUse public override int? WalkingMovementSpeedRateOnUse { get; } Property Value int? Methods BeforeItemUpdate_FromEquipment(Character) public override void BeforeItemUpdate_FromEquipment(Character holder) Parameters holder Character SpawnBullet(Character) public override Bullet SpawnBullet(Character sender) Parameters sender Character Returns Bullet"
  },
  "api/AngeliA.Platformer.MomentumBooster.html": {
    "href": "api/AngeliA.Platformer.MomentumBooster.html",
    "title": "Class MomentumBooster | AngeliA",
    "summary": "Class MomentumBooster Namespace AngeliA.Platformer Assembly com.angelia.platformer.dll [Entity.Layer(3)] [Entity.MapEditorGroup(\"Contraption\", 0)] public abstract class MomentumBooster : Entity, IMapItem, IBlockEntity Inheritance object Entity MomentumBooster Implements IMapItem IBlockEntity Inherited Members Entity.Active Entity.X Entity.Y Entity.Width Entity.Height Entity.TypeID Entity.SpawnFrame Entity.FromWorld Entity.Rect Entity.InstanceOrder Entity.MapUnitPos Entity.InstanceID Entity.IgnoreReposition Entity.XY Entity.Size Entity.Center Entity.CenterX Entity.CenterY Entity.PivotUnitPosition Entity.OnInactivated() Entity.Update() Entity.LateUpdate() Entity.AfterReposition(Int3, Int3) Entity.IgnoreDespawnFromMap(int) Entity.CancelIgnoreDespawnFromMap() Entity.Draw() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Properties BoostDirection protected abstract Direction3 BoostDirection { get; } Property Value Direction3 BoostSpeed protected abstract int BoostSpeed { get; } Property Value int LastBoostFrame protected int LastBoostFrame { get; } Property Value int MomentumDecay protected virtual int MomentumDecay { get; } Property Value int Methods BeforeUpdate() public override void BeforeUpdate() FirstUpdate() public override void FirstUpdate() OnActivated() public override void OnActivated() OnBoosting(Rigidbody) protected virtual void OnBoosting(Rigidbody rig) Parameters rig Rigidbody"
  },
  "api/AngeliA.Platformer.MovableBullet.html": {
    "href": "api/AngeliA.Platformer.MovableBullet.html",
    "title": "Class MovableBullet | AngeliA",
    "summary": "Class MovableBullet Namespace AngeliA.Platformer Assembly com.angelia.platformer.dll public abstract class MovableBullet : Bullet, IMapItem Inheritance object Entity Bullet MovableBullet Implements IMapItem Derived ArrowBullet BeamBullet EmptyMovableBullet ExplosiveMovableBullet Inherited Members Bullet.AttackIndex Bullet.AttackCharged Bullet.DamageType Bullet.Sender Bullet.FailbackTargetTeam Bullet.TargetTeam Bullet.BasicDamage Bullet.EnvironmentMask Bullet.ReceiverMask Bullet.RoundHitCheck Bullet.Damage Bullet.Update() Bullet.ReceiverHitCheck(out bool) Bullet.EnvironmentHitCheck(out bool) Bullet.PerformHitEnvironment(out bool) Bullet.PerformHitReceiver(IDamageReceiver, out bool) Bullet.GroundCheck(out Color32) Bullet.GetDamage() Entity.Active Entity.X Entity.Y Entity.Width Entity.Height Entity.TypeID Entity.SpawnFrame Entity.FromWorld Entity.Rect Entity.InstanceOrder Entity.MapUnitPos Entity.InstanceID Entity.IgnoreReposition Entity.XY Entity.Size Entity.Center Entity.CenterX Entity.CenterY Entity.PivotUnitPosition Entity.OnInactivated() Entity.FirstUpdate() Entity.AfterReposition(Int3, Int3) Entity.IgnoreDespawnFromMap(int) Entity.CancelIgnoreDespawnFromMap() Entity.Draw() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Properties AriDrag public virtual Int2 AriDrag { get; } Property Value Int2 ArtworkID public virtual int ArtworkID { get; } Property Value int CurrentRotation public int CurrentRotation { get; set; } Property Value int Duration public override int Duration { get; } Property Value int EndRotation public virtual int EndRotation { get; } Property Value int EndRotationRandomRange public virtual int EndRotationRandomRange { get; } Property Value int EnvironmentHitCount protected override int EnvironmentHitCount { get; } Property Value int Gravity public virtual int Gravity { get; } Property Value int HitReceiver protected bool HitReceiver { get; } Property Value bool InWater public bool InWater { get; } Property Value bool MaxRange public virtual int MaxRange { get; } Property Value int ReceiverHitCount protected override int ReceiverHitCount { get; } Property Value int ResidueID public virtual int ResidueID { get; } Property Value int RotateSpeed public virtual int RotateSpeed { get; } Property Value int Scale public virtual int Scale { get; } Property Value int SpeedForward public virtual int SpeedForward { get; } Property Value int SpeedSide public virtual int SpeedSide { get; } Property Value int StartRotation public virtual int StartRotation { get; } Property Value int Velocity public Int2 Velocity { get; set; } Property Value Int2 WaterSpeedRate public virtual int WaterSpeedRate { get; } Property Value int Methods BeforeDespawn(IDamageReceiver) protected override void BeforeDespawn(IDamageReceiver receiver) Parameters receiver IDamageReceiver BeforeUpdate() public override void BeforeUpdate() GetLastUpdatedTramsform() protected (int startX, int startY, int endX, int endY, int length, int rotation1000, bool beamHitReceiver) GetLastUpdatedTramsform() Returns (int startX, int startY, int endX, int endY, int length, int rotation1000, bool beamHitReceiver) LateUpdate() public override void LateUpdate() OnActivated() public override void OnActivated() StartMove(Direction8, int, int) public virtual void StartMove(Direction8 dir, int speedForward, int speedSide) Parameters dir Direction8 speedForward int speedSide int"
  },
  "api/AngeliA.Platformer.Navigation.IExpandRangeValidator.html": {
    "href": "api/AngeliA.Platformer.Navigation.IExpandRangeValidator.html",
    "title": "Interface Navigation.IExpandRangeValidator | AngeliA",
    "summary": "Interface Navigation.IExpandRangeValidator Namespace AngeliA.Platformer Assembly com.angelia.platformer.dll public interface Navigation.IExpandRangeValidator Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Methods Verify(int, int) bool Verify(int cellX, int cellY) Parameters cellX int cellY int Returns bool"
  },
  "api/AngeliA.Platformer.Navigation.Operation.html": {
    "href": "api/AngeliA.Platformer.Navigation.Operation.html",
    "title": "Struct Navigation.Operation | AngeliA",
    "summary": "Struct Navigation.Operation Namespace AngeliA.Platformer Assembly com.angelia.platformer.dll public struct Navigation.Operation Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Fields Motion public NavigationOperateMotion Motion Field Value NavigationOperateMotion TargetGlobalX public int TargetGlobalX Field Value int TargetGlobalY public int TargetGlobalY Field Value int"
  },
  "api/AngeliA.Platformer.Navigation.html": {
    "href": "api/AngeliA.Platformer.Navigation.html",
    "title": "Class Navigation | AngeliA",
    "summary": "Class Navigation Namespace AngeliA.Platformer Assembly com.angelia.platformer.dll public static class Navigation Inheritance object Navigation Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties IsReady public static bool IsReady { get; } Property Value bool Methods ExpandTo(int, IRect, int, int, int, int, int, out int, out int, bool, IExpandRangeValidator) public static bool ExpandTo(int globalFrame, IRect viewRect, int fromX, int fromY, int toX, int toY, int maxIteration, out int resultX, out int resultY, bool endInAir = false, Navigation.IExpandRangeValidator rangeValidator = null) Parameters globalFrame int viewRect IRect fromX int fromY int toX int toY int maxIteration int resultX int resultY int endInAir bool rangeValidator Navigation.IExpandRangeValidator Returns bool Initialize() [OnGameInitialize(0)] public static void Initialize() IsGround(int, IRect, int, int, out int) public static bool IsGround(int globalFrame, IRect viewRect, int globalX, int globalY, out int groundY) Parameters globalFrame int viewRect IRect globalX int globalY int groundY int Returns bool NavigateTo(in Operation[], int, IRect, int, int, int, int, int) public static int NavigateTo(in Navigation.Operation[] Operations, int globalFrame, IRect viewRect, int fromX, int fromY, int toX, int toY, int jumpIteration = 16) Parameters Operations Operation[] globalFrame int viewRect IRect fromX int fromY int toX int toY int jumpIteration int Returns int"
  },
  "api/AngeliA.Platformer.NavigationOperateMotion.html": {
    "href": "api/AngeliA.Platformer.NavigationOperateMotion.html",
    "title": "Enum NavigationOperateMotion | AngeliA",
    "summary": "Enum NavigationOperateMotion Namespace AngeliA.Platformer Assembly com.angelia.platformer.dll public enum NavigationOperateMotion Extension Methods Extension.Next<E>(E) Extension.Prev<E>(E) Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Fields Jump = 2 Move = 1 None = 0"
  },
  "api/AngeliA.Platformer.Oneway.html": {
    "href": "api/AngeliA.Platformer.Oneway.html",
    "title": "Class Oneway | AngeliA",
    "summary": "Class Oneway Namespace AngeliA.Platformer Assembly com.angelia.platformer.dll [Entity.Layer(3)] [Entity.MapEditorGroup(\"Contraption\", 0)] public abstract class Oneway : Entity, IMapItem, IBlockEntity Inheritance object Entity Oneway Implements IMapItem IBlockEntity Inherited Members Entity.Active Entity.X Entity.Y Entity.Width Entity.Height Entity.TypeID Entity.SpawnFrame Entity.FromWorld Entity.Rect Entity.InstanceOrder Entity.MapUnitPos Entity.InstanceID Entity.IgnoreReposition Entity.XY Entity.Size Entity.Center Entity.CenterX Entity.CenterY Entity.PivotUnitPosition Entity.OnInactivated() Entity.BeforeUpdate() Entity.AfterReposition(Int3, Int3) Entity.IgnoreDespawnFromMap(int) Entity.CancelIgnoreDespawnFromMap() Entity.Draw() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Properties GateDirection public abstract Direction4 GateDirection { get; } Property Value Direction4 ReboundFrame protected int ReboundFrame { get; } Property Value int Methods ContactReboundUpdate(int) protected virtual bool ContactReboundUpdate(int frame) Parameters frame int Returns bool FirstUpdate() public override void FirstUpdate() LateUpdate() public override void LateUpdate() OnActivated() public override void OnActivated() Update() public override void Update()"
  },
  "api/AngeliA.Platformer.OpenableFurniture.html": {
    "href": "api/AngeliA.Platformer.OpenableFurniture.html",
    "title": "Class OpenableFurniture | AngeliA",
    "summary": "Class OpenableFurniture Namespace AngeliA.Platformer Assembly com.angelia.platformer.dll public abstract class OpenableFurniture : ActionFurniture, IMapItem, IBlockEntity, IActionTarget Inheritance object Entity Furniture ActionFurniture OpenableFurniture Implements IMapItem IBlockEntity IActionTarget Derived InventoryFurniture OpenableUiFurniture Inherited Members ActionFurniture.AllowInvoke() Furniture.ModuleType Furniture.FurnitureLeftOrDown Furniture.FurnitureRightOrUp Furniture.Pose Furniture.ColliderBorder Furniture.FirstUpdate() Furniture.BeforeUpdate() Furniture.GetIsHighlighted() Furniture.GetSpriteFromPose() Entity.Active Entity.X Entity.Y Entity.Width Entity.Height Entity.TypeID Entity.SpawnFrame Entity.FromWorld Entity.Rect Entity.InstanceOrder Entity.MapUnitPos Entity.InstanceID Entity.IgnoreReposition Entity.XY Entity.Size Entity.Center Entity.CenterX Entity.CenterY Entity.PivotUnitPosition Entity.OnInactivated() Entity.Update() Entity.AfterReposition(Int3, Int3) Entity.IgnoreDespawnFromMap(int) Entity.CancelIgnoreDespawnFromMap() Entity.Draw() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Properties Open public bool Open { get; } Property Value bool Methods Invoke() public override bool Invoke() Returns bool LateUpdate() public override void LateUpdate() OnActivated() public override void OnActivated() SetOpen(bool) protected virtual void SetOpen(bool open) Parameters open bool"
  },
  "api/AngeliA.Platformer.OpenableUiFurniture.html": {
    "href": "api/AngeliA.Platformer.OpenableUiFurniture.html",
    "title": "Class OpenableUiFurniture | AngeliA",
    "summary": "Class OpenableUiFurniture Namespace AngeliA.Platformer Assembly com.angelia.platformer.dll public abstract class OpenableUiFurniture : OpenableFurniture, IMapItem, IBlockEntity, IActionTarget Inheritance object Entity Furniture ActionFurniture OpenableFurniture OpenableUiFurniture Implements IMapItem IBlockEntity IActionTarget Inherited Members OpenableFurniture.Open OpenableFurniture.OnActivated() OpenableFurniture.Invoke() ActionFurniture.AllowInvoke() Furniture.ModuleType Furniture.FurnitureLeftOrDown Furniture.FurnitureRightOrUp Furniture.Pose Furniture.ColliderBorder Furniture.FirstUpdate() Furniture.BeforeUpdate() Furniture.GetIsHighlighted() Furniture.GetSpriteFromPose() Entity.Active Entity.X Entity.Y Entity.Width Entity.Height Entity.TypeID Entity.SpawnFrame Entity.FromWorld Entity.Rect Entity.InstanceOrder Entity.MapUnitPos Entity.InstanceID Entity.IgnoreReposition Entity.XY Entity.Size Entity.Center Entity.CenterX Entity.CenterY Entity.PivotUnitPosition Entity.OnInactivated() Entity.Update() Entity.AfterReposition(Int3, Int3) Entity.IgnoreDespawnFromMap(int) Entity.CancelIgnoreDespawnFromMap() Entity.Draw() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Properties WindowSize protected virtual Int2 WindowSize { get; } Property Value Int2 Methods LateUpdate() public override void LateUpdate() OnUiClose() protected virtual void OnUiClose() OnUiOpen() protected virtual void OnUiOpen() SetOpen(bool) protected override void SetOpen(bool open) Parameters open bool Unify(int) protected static int Unify(int value) Parameters value int Returns int UpdateUI(IRect) protected abstract void UpdateUI(IRect windowRect) Parameters windowRect IRect"
  },
  "api/AngeliA.Platformer.OpeningTask.html": {
    "href": "api/AngeliA.Platformer.OpeningTask.html",
    "title": "Class OpeningTask | AngeliA",
    "summary": "Class OpeningTask Namespace AngeliA.Platformer Assembly com.angelia.platformer.dll public class OpeningTask : Task Inheritance object Task OpeningTask Inherited Members Task.LocalFrame Task.UserData Task.OnEnd() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Fields TYPE_ID public static readonly int TYPE_ID Field Value int Properties FadeOut public bool FadeOut { get; set; } Property Value bool TargetViewX public int TargetViewX { get; set; } Property Value int TargetViewY public int TargetViewY { get; set; } Property Value int TargetViewZ public int TargetViewZ { get; set; } Property Value int Methods FrameUpdate() public override TaskResult FrameUpdate() Returns TaskResult OnGameRestart() [OnGameRestart(0)] public static void OnGameRestart() OnStart() public override void OnStart()"
  },
  "api/AngeliA.Platformer.PickTool.html": {
    "href": "api/AngeliA.Platformer.PickTool.html",
    "title": "Class PickTool | AngeliA",
    "summary": "Class PickTool Namespace AngeliA.Platformer Assembly com.angelia.platformer.dll public abstract class PickTool : HandTool, IMapItem Inheritance object Item Equipment HandTool PickTool Implements IMapItem Inherited Members HandTool.SpriteID HandTool.EquipmentType HandTool.PerformDelayFrame HandTool.TypeName HandTool.Cooldown HandTool.HoldPunish HandTool.ChargeDuration HandTool.RepeatWhenHolding HandTool.CancelUseWhenRelease HandTool.LockFacingOnUse HandTool.IgnoreGrabTwist HandTool.AvailableInAir HandTool.AvailableInWater HandTool.AvailableWhenRunning HandTool.AvailableWhenClimbing HandTool.AvailableWhenFlying HandTool.AvailableWhenRolling HandTool.AvailableWhenDashing HandTool.AvailableWhenGrabbing HandTool.AvailableWhenRushing HandTool.AvailableWhenPounding HandTool.LoadFromSheet() HandTool.OnToolSpriteRendered(PoseCharacterRenderer, int, int, int, int, int, int, AngeSprite, int) HandTool.AllowingUse(Character) HandTool.GetHandheldPoseAnimationID(Character) HandTool.GetPerformPoseAnimationID(Character) Item.AllowDuplicateUpdate Item.EmbedIntoLevel Item.TypeID Item.BeforeItemUpdate_FromInventory(Character, int, int) Item.OnItemUpdate_FromInventory(Character, int, int) Item.OnPoseAnimationUpdate_FromInventory(PoseCharacterRenderer, int, int) Item.OnTakeDamage_FromInventory(Character, int, int, ref Damage) Item.OnCharacterAttack_FromInventory(Character, Bullet, int, int) Item.BeforeItemUpdate_FromEquipment(Character) Item.OnItemUpdate_FromEquipment(Character) Item.BeforePoseAnimationUpdate_FromEquipment(PoseCharacterRenderer) Item.OnTakeDamage_FromEquipment(Character, ref Damage) Item.OnCharacterAttack_FromEquipment(Character, Bullet) Item.TryRepairEquipment(Character) Item.OnItemUpdate_FromItemHolder(ItemHolder, int) Item.OnCollect(Character) Item.CanUse(Character) Item.Use(Character, int, int, out bool) Item.ItemConditionCheck(Character) Item.DrawItem(Entity, IRect, Color32, int) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Properties AllowPickBackgroundBlock public virtual bool AllowPickBackgroundBlock { get; } Property Value bool AllowPickBlockEntity public virtual bool AllowPickBlockEntity { get; } Property Value bool AllowPickLevelBlock public virtual bool AllowPickLevelBlock { get; } Property Value bool AvailableWhenSliding public override bool AvailableWhenSliding { get; } Property Value bool AvailableWhenSquatting public override bool AvailableWhenSquatting { get; } Property Value bool AvailableWhenWalking public override bool AvailableWhenWalking { get; } Property Value bool DefaultMovementSpeedRateOnUse public override int? DefaultMovementSpeedRateOnUse { get; } Property Value int? DropItemAfterPicked public virtual bool DropItemAfterPicked { get; } Property Value bool Duration public override int Duration { get; } Property Value int MaxStackCount public override int MaxStackCount { get; } Property Value int MouseUnitRange public virtual int MouseUnitRange { get; } Property Value int PerformDelayRate public override int PerformDelayRate { get; } Property Value int RunningMovementSpeedRateOnUse public override int? RunningMovementSpeedRateOnUse { get; } Property Value int? UseMouseToPick public virtual bool UseMouseToPick { get; } Property Value bool UseStackAsUsage public override bool UseStackAsUsage { get; } Property Value bool WalkingMovementSpeedRateOnUse public override int? WalkingMovementSpeedRateOnUse { get; } Property Value int? Methods DrawPickTargetHighlight(int, int, bool) protected virtual void DrawPickTargetHighlight(int unitX, int unitY, bool hasTarget) Parameters unitX int unitY int hasTarget bool OnPoseAnimationUpdate_FromEquipment(PoseCharacterRenderer) public override void OnPoseAnimationUpdate_FromEquipment(PoseCharacterRenderer rendering) Parameters rendering PoseCharacterRenderer OnToolPerform(Character) public override void OnToolPerform(Character sender) Parameters sender Character"
  },
  "api/AngeliA.Platformer.Plant.html": {
    "href": "api/AngeliA.Platformer.Plant.html",
    "title": "Class Plant | AngeliA",
    "summary": "Class Plant Namespace AngeliA.Platformer Assembly com.angelia.platformer.dll [Entity.MapEditorGroup(\"Vegetation\", 0)] [Entity.Layer(3)] public abstract class Plant : Entity, IMapItem, IBlockEntity, ICombustible, IDamageReceiver Inheritance object Entity Plant Implements IMapItem IBlockEntity ICombustible IDamageReceiver Inherited Members Entity.Active Entity.X Entity.Y Entity.Width Entity.Height Entity.TypeID Entity.SpawnFrame Entity.FromWorld Entity.Rect Entity.InstanceOrder Entity.MapUnitPos Entity.InstanceID Entity.IgnoreReposition Entity.XY Entity.Size Entity.Center Entity.CenterX Entity.CenterY Entity.PivotUnitPosition Entity.OnActivated() Entity.OnInactivated() Entity.BeforeUpdate() Entity.Update() Entity.AfterReposition(Int3, Int3) Entity.IgnoreDespawnFromMap(int) Entity.CancelIgnoreDespawnFromMap() Entity.Draw() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Methods FirstUpdate() public override void FirstUpdate() LateUpdate() public override void LateUpdate() OnPlantBreak() protected virtual void OnPlantBreak()"
  },
  "api/AngeliA.Platformer.Platform.html": {
    "href": "api/AngeliA.Platformer.Platform.html",
    "title": "Class Platform | AngeliA",
    "summary": "Class Platform Namespace AngeliA.Platformer Assembly com.angelia.platformer.dll [Entity.Layer(3)] [Entity.MapEditorGroup(\"Platform\", 0)] public abstract class Platform : Entity, IMapItem, IBlockEntity Inheritance object Entity Platform Implements IMapItem IBlockEntity Derived TriggerablePlatform Inherited Members Entity.Active Entity.X Entity.Y Entity.Width Entity.Height Entity.TypeID Entity.SpawnFrame Entity.FromWorld Entity.Rect Entity.InstanceOrder Entity.MapUnitPos Entity.InstanceID Entity.IgnoreReposition Entity.XY Entity.Size Entity.Center Entity.CenterX Entity.CenterY Entity.PivotUnitPosition Entity.OnInactivated() Entity.AfterReposition(Int3, Int3) Entity.IgnoreDespawnFromMap(int) Entity.CancelIgnoreDespawnFromMap() Entity.Draw() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Properties OneWay public abstract bool OneWay { get; } Property Value bool Pose protected FittingPose Pose { get; } Property Value FittingPose TouchedByCharacter protected bool TouchedByCharacter { get; } Property Value bool TouchedByPlayer protected bool TouchedByPlayer { get; } Property Value bool TouchedByRigidbody protected bool TouchedByRigidbody { get; } Property Value bool Methods BeforeUpdate() public override void BeforeUpdate() FirstUpdate() public override void FirstUpdate() LateUpdate() public override void LateUpdate() Move() protected abstract void Move() OnActivated() public override void OnActivated() OnCharacterTouched(Character) protected virtual void OnCharacterTouched(Character character) Parameters character Character OnPlayerTouched(Character) protected virtual void OnPlayerTouched(Character player) Parameters player Character OnRigidbodyTouched(Rigidbody) protected virtual void OnRigidbodyTouched(Rigidbody rig) Parameters rig Rigidbody RenderPlatformBlock(int) protected virtual void RenderPlatformBlock(int artworkID) Parameters artworkID int SetTouch(bool, bool, bool) public void SetTouch(bool rigidbody = true, bool character = true, bool player = true) Parameters rigidbody bool character bool player bool Update() public override void Update()"
  },
  "api/AngeliA.Platformer.PlatformerUtil.html": {
    "href": "api/AngeliA.Platformer.PlatformerUtil.html",
    "title": "Class PlatformerUtil | AngeliA",
    "summary": "Class PlatformerUtil Namespace AngeliA.Platformer Assembly com.angelia.platformer.dll public static class PlatformerUtil Inheritance object PlatformerUtil Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods NavigationFreeWandering(Int2, Entity, out bool, int, int, int) public static Int2 NavigationFreeWandering(Int2 aimPosition, Entity target, out bool grounded, int frequency, int maxDistance, int randomShift = 0) Parameters aimPosition Int2 target Entity grounded bool frequency int maxDistance int randomShift int Returns Int2"
  },
  "api/AngeliA.Platformer.Portal.html": {
    "href": "api/AngeliA.Platformer.Portal.html",
    "title": "Class Portal | AngeliA",
    "summary": "Class Portal Namespace AngeliA.Platformer Assembly com.angelia.platformer.dll [Entity.MapEditorGroup(\"Teleport\", 0)] public abstract class Portal : Entity, IMapItem Inheritance object Entity Portal Implements IMapItem Derived CircleFlamePortal Inherited Members Entity.Active Entity.X Entity.Y Entity.Width Entity.Height Entity.TypeID Entity.SpawnFrame Entity.FromWorld Entity.Rect Entity.InstanceOrder Entity.MapUnitPos Entity.InstanceID Entity.IgnoreReposition Entity.XY Entity.Size Entity.Center Entity.CenterX Entity.CenterY Entity.PivotUnitPosition Entity.OnInactivated() Entity.BeforeUpdate() Entity.LateUpdate() Entity.AfterReposition(Int3, Int3) Entity.IgnoreDespawnFromMap(int) Entity.CancelIgnoreDespawnFromMap() Entity.Draw() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Properties DontSpawnAfterUsed protected virtual bool DontSpawnAfterUsed { get; } Property Value bool TargetGlobalPosition protected abstract Int3 TargetGlobalPosition { get; } Property Value Int3 Methods FirstUpdate() public override void FirstUpdate() Invoke(Character) public virtual bool Invoke(Character character) Parameters character Character Returns bool OnActivated() public override void OnActivated() Update() public override void Update()"
  },
  "api/AngeliA.Platformer.PoseAnimation_PhotoPose.html": {
    "href": "api/AngeliA.Platformer.PoseAnimation_PhotoPose.html",
    "title": "Class PoseAnimation_PhotoPose | AngeliA",
    "summary": "Class PoseAnimation_PhotoPose Namespace AngeliA.Platformer Assembly com.angelia.platformer.dll public class PoseAnimation_PhotoPose : PoseAnimation Inheritance object PoseAnimation PoseAnimation_PhotoPose Inherited Members PoseAnimation.POSE_Z_HAND PoseAnimation.A2G PoseAnimation.ValidHeadPosition PoseAnimation.DontBlendToNext PoseAnimation.DontBlendToPrev PoseAnimation.Target PoseAnimation.Rendering PoseAnimation.Movement PoseAnimation.Attackness PoseAnimation.Head PoseAnimation.Body PoseAnimation.Hip PoseAnimation.ShoulderL PoseAnimation.ShoulderR PoseAnimation.UpperArmL PoseAnimation.UpperArmR PoseAnimation.LowerArmL PoseAnimation.LowerArmR PoseAnimation.HandL PoseAnimation.HandR PoseAnimation.UpperLegL PoseAnimation.UpperLegR PoseAnimation.LowerLegL PoseAnimation.LowerLegR PoseAnimation.FootL PoseAnimation.FootR PoseAnimation.FacingRight PoseAnimation.FacingFront PoseAnimation.IsChargingAttack PoseAnimation.FacingSign PoseAnimation.FrontSign PoseAnimation.CurrentAnimationFrame PoseAnimation.AnimationType PoseAnimation.AttackLerp PoseAnimation.AttackEase PoseAnimation.OnGameInitialize() PoseAnimation.PerformAnimationFromPool(int, PoseCharacterRenderer) PoseAnimation.PerformAnimation(PoseAnimation, PoseCharacterRenderer) PoseAnimation.PerformAnimationBlendFromPool(int, int, float, PoseCharacterRenderer) PoseAnimation.PerformAnimationBlend(PoseAnimation, PoseAnimation, float, PoseCharacterRenderer) PoseAnimation.TryGetAnimationFromPool(int, out PoseAnimation) PoseAnimation.SetAsAnimating(PoseCharacterRenderer) PoseAnimation.ResetShoulderAndUpperArmPos(bool, bool) PoseAnimation.AttackHeadDown(float, int, int, int) PoseAnimation.AttackLegShake(float) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Fields TYPE_ID public static readonly int TYPE_ID Field Value int Methods Animate(PoseCharacterRenderer) public override void Animate(PoseCharacterRenderer renderer) Parameters renderer PoseCharacterRenderer"
  },
  "api/AngeliA.Platformer.PoseAnimation_Ride.html": {
    "href": "api/AngeliA.Platformer.PoseAnimation_Ride.html",
    "title": "Class PoseAnimation_Ride | AngeliA",
    "summary": "Class PoseAnimation_Ride Namespace AngeliA.Platformer Assembly com.angelia.platformer.dll public class PoseAnimation_Ride : PoseAnimation Inheritance object PoseAnimation PoseAnimation_Ride Inherited Members PoseAnimation.POSE_Z_HAND PoseAnimation.A2G PoseAnimation.ValidHeadPosition PoseAnimation.DontBlendToNext PoseAnimation.DontBlendToPrev PoseAnimation.Target PoseAnimation.Rendering PoseAnimation.Movement PoseAnimation.Attackness PoseAnimation.Head PoseAnimation.Body PoseAnimation.Hip PoseAnimation.ShoulderL PoseAnimation.ShoulderR PoseAnimation.UpperArmL PoseAnimation.UpperArmR PoseAnimation.LowerArmL PoseAnimation.LowerArmR PoseAnimation.HandL PoseAnimation.HandR PoseAnimation.UpperLegL PoseAnimation.UpperLegR PoseAnimation.LowerLegL PoseAnimation.LowerLegR PoseAnimation.FootL PoseAnimation.FootR PoseAnimation.FacingRight PoseAnimation.FacingFront PoseAnimation.IsChargingAttack PoseAnimation.FacingSign PoseAnimation.FrontSign PoseAnimation.CurrentAnimationFrame PoseAnimation.AnimationType PoseAnimation.AttackLerp PoseAnimation.AttackEase PoseAnimation.OnGameInitialize() PoseAnimation.PerformAnimationFromPool(int, PoseCharacterRenderer) PoseAnimation.PerformAnimation(PoseAnimation, PoseCharacterRenderer) PoseAnimation.PerformAnimationBlendFromPool(int, int, float, PoseCharacterRenderer) PoseAnimation.PerformAnimationBlend(PoseAnimation, PoseAnimation, float, PoseCharacterRenderer) PoseAnimation.TryGetAnimationFromPool(int, out PoseAnimation) PoseAnimation.SetAsAnimating(PoseCharacterRenderer) PoseAnimation.ResetShoulderAndUpperArmPos(bool, bool) PoseAnimation.AttackHeadDown(float, int, int, int) PoseAnimation.AttackLegShake(float) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Fields TYPE_ID public static readonly int TYPE_ID Field Value int Methods Animate(PoseCharacterRenderer) public override void Animate(PoseCharacterRenderer renderer) Parameters renderer PoseCharacterRenderer"
  },
  "api/AngeliA.Platformer.PoseAnimation_Sit.html": {
    "href": "api/AngeliA.Platformer.PoseAnimation_Sit.html",
    "title": "Class PoseAnimation_Sit | AngeliA",
    "summary": "Class PoseAnimation_Sit Namespace AngeliA.Platformer Assembly com.angelia.platformer.dll public class PoseAnimation_Sit : PoseAnimation Inheritance object PoseAnimation PoseAnimation_Sit Inherited Members PoseAnimation.POSE_Z_HAND PoseAnimation.A2G PoseAnimation.ValidHeadPosition PoseAnimation.DontBlendToNext PoseAnimation.DontBlendToPrev PoseAnimation.Target PoseAnimation.Rendering PoseAnimation.Movement PoseAnimation.Attackness PoseAnimation.Head PoseAnimation.Body PoseAnimation.Hip PoseAnimation.ShoulderL PoseAnimation.ShoulderR PoseAnimation.UpperArmL PoseAnimation.UpperArmR PoseAnimation.LowerArmL PoseAnimation.LowerArmR PoseAnimation.HandL PoseAnimation.HandR PoseAnimation.UpperLegL PoseAnimation.UpperLegR PoseAnimation.LowerLegL PoseAnimation.LowerLegR PoseAnimation.FootL PoseAnimation.FootR PoseAnimation.FacingRight PoseAnimation.FacingFront PoseAnimation.IsChargingAttack PoseAnimation.FacingSign PoseAnimation.FrontSign PoseAnimation.CurrentAnimationFrame PoseAnimation.AnimationType PoseAnimation.AttackLerp PoseAnimation.AttackEase PoseAnimation.OnGameInitialize() PoseAnimation.PerformAnimationFromPool(int, PoseCharacterRenderer) PoseAnimation.PerformAnimation(PoseAnimation, PoseCharacterRenderer) PoseAnimation.PerformAnimationBlendFromPool(int, int, float, PoseCharacterRenderer) PoseAnimation.PerformAnimationBlend(PoseAnimation, PoseAnimation, float, PoseCharacterRenderer) PoseAnimation.TryGetAnimationFromPool(int, out PoseAnimation) PoseAnimation.SetAsAnimating(PoseCharacterRenderer) PoseAnimation.ResetShoulderAndUpperArmPos(bool, bool) PoseAnimation.AttackHeadDown(float, int, int, int) PoseAnimation.AttackLegShake(float) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Fields TYPE_ID public static readonly int TYPE_ID Field Value int Methods Animate(PoseCharacterRenderer) public override void Animate(PoseCharacterRenderer renderer) Parameters renderer PoseCharacterRenderer Sit() public static void Sit()"
  },
  "api/AngeliA.Platformer.PoseAnimation_SlidingSit.html": {
    "href": "api/AngeliA.Platformer.PoseAnimation_SlidingSit.html",
    "title": "Class PoseAnimation_SlidingSit | AngeliA",
    "summary": "Class PoseAnimation_SlidingSit Namespace AngeliA.Platformer Assembly com.angelia.platformer.dll public class PoseAnimation_SlidingSit : PoseAnimation Inheritance object PoseAnimation PoseAnimation_SlidingSit Derived PoseAnimation_SlidingSitHigh Inherited Members PoseAnimation.POSE_Z_HAND PoseAnimation.A2G PoseAnimation.ValidHeadPosition PoseAnimation.DontBlendToNext PoseAnimation.DontBlendToPrev PoseAnimation.Target PoseAnimation.Rendering PoseAnimation.Movement PoseAnimation.Attackness PoseAnimation.Head PoseAnimation.Body PoseAnimation.Hip PoseAnimation.ShoulderL PoseAnimation.ShoulderR PoseAnimation.UpperArmL PoseAnimation.UpperArmR PoseAnimation.LowerArmL PoseAnimation.LowerArmR PoseAnimation.HandL PoseAnimation.HandR PoseAnimation.UpperLegL PoseAnimation.UpperLegR PoseAnimation.LowerLegL PoseAnimation.LowerLegR PoseAnimation.FootL PoseAnimation.FootR PoseAnimation.FacingRight PoseAnimation.FacingFront PoseAnimation.IsChargingAttack PoseAnimation.FacingSign PoseAnimation.FrontSign PoseAnimation.CurrentAnimationFrame PoseAnimation.AnimationType PoseAnimation.AttackLerp PoseAnimation.AttackEase PoseAnimation.OnGameInitialize() PoseAnimation.PerformAnimationFromPool(int, PoseCharacterRenderer) PoseAnimation.PerformAnimation(PoseAnimation, PoseCharacterRenderer) PoseAnimation.PerformAnimationBlendFromPool(int, int, float, PoseCharacterRenderer) PoseAnimation.PerformAnimationBlend(PoseAnimation, PoseAnimation, float, PoseCharacterRenderer) PoseAnimation.TryGetAnimationFromPool(int, out PoseAnimation) PoseAnimation.SetAsAnimating(PoseCharacterRenderer) PoseAnimation.ResetShoulderAndUpperArmPos(bool, bool) PoseAnimation.AttackHeadDown(float, int, int, int) PoseAnimation.AttackLegShake(float) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Fields TYPE_ID public static readonly int TYPE_ID Field Value int Methods Animate(PoseCharacterRenderer) public override void Animate(PoseCharacterRenderer renderer) Parameters renderer PoseCharacterRenderer BaseAnimate(PoseCharacterRenderer) public void BaseAnimate(PoseCharacterRenderer renderer) Parameters renderer PoseCharacterRenderer SlidingSit(bool) public static void SlidingSit(bool highPos) Parameters highPos bool"
  },
  "api/AngeliA.Platformer.PoseAnimation_SlidingSitHigh.html": {
    "href": "api/AngeliA.Platformer.PoseAnimation_SlidingSitHigh.html",
    "title": "Class PoseAnimation_SlidingSitHigh | AngeliA",
    "summary": "Class PoseAnimation_SlidingSitHigh Namespace AngeliA.Platformer Assembly com.angelia.platformer.dll public class PoseAnimation_SlidingSitHigh : PoseAnimation_SlidingSit Inheritance object PoseAnimation PoseAnimation_SlidingSit PoseAnimation_SlidingSitHigh Inherited Members PoseAnimation_SlidingSit.BaseAnimate(PoseCharacterRenderer) PoseAnimation_SlidingSit.SlidingSit(bool) PoseAnimation.POSE_Z_HAND PoseAnimation.A2G PoseAnimation.ValidHeadPosition PoseAnimation.DontBlendToNext PoseAnimation.DontBlendToPrev PoseAnimation.Target PoseAnimation.Rendering PoseAnimation.Movement PoseAnimation.Attackness PoseAnimation.Head PoseAnimation.Body PoseAnimation.Hip PoseAnimation.ShoulderL PoseAnimation.ShoulderR PoseAnimation.UpperArmL PoseAnimation.UpperArmR PoseAnimation.LowerArmL PoseAnimation.LowerArmR PoseAnimation.HandL PoseAnimation.HandR PoseAnimation.UpperLegL PoseAnimation.UpperLegR PoseAnimation.LowerLegL PoseAnimation.LowerLegR PoseAnimation.FootL PoseAnimation.FootR PoseAnimation.FacingRight PoseAnimation.FacingFront PoseAnimation.IsChargingAttack PoseAnimation.FacingSign PoseAnimation.FrontSign PoseAnimation.CurrentAnimationFrame PoseAnimation.AnimationType PoseAnimation.AttackLerp PoseAnimation.AttackEase PoseAnimation.OnGameInitialize() PoseAnimation.PerformAnimationFromPool(int, PoseCharacterRenderer) PoseAnimation.PerformAnimation(PoseAnimation, PoseCharacterRenderer) PoseAnimation.PerformAnimationBlendFromPool(int, int, float, PoseCharacterRenderer) PoseAnimation.PerformAnimationBlend(PoseAnimation, PoseAnimation, float, PoseCharacterRenderer) PoseAnimation.TryGetAnimationFromPool(int, out PoseAnimation) PoseAnimation.SetAsAnimating(PoseCharacterRenderer) PoseAnimation.ResetShoulderAndUpperArmPos(bool, bool) PoseAnimation.AttackHeadDown(float, int, int, int) PoseAnimation.AttackLegShake(float) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Fields TYPE_ID public static readonly int TYPE_ID Field Value int Methods Animate(PoseCharacterRenderer) public override void Animate(PoseCharacterRenderer renderer) Parameters renderer PoseCharacterRenderer"
  },
  "api/AngeliA.Platformer.PoseAttack_Bow.html": {
    "href": "api/AngeliA.Platformer.PoseAttack_Bow.html",
    "title": "Class PoseAttack_Bow | AngeliA",
    "summary": "Class PoseAttack_Bow Namespace AngeliA.Platformer Assembly com.angelia.platformer.dll public class PoseAttack_Bow : PoseAnimation Inheritance object PoseAnimation PoseAttack_Bow Inherited Members PoseAnimation.POSE_Z_HAND PoseAnimation.A2G PoseAnimation.ValidHeadPosition PoseAnimation.DontBlendToNext PoseAnimation.DontBlendToPrev PoseAnimation.Target PoseAnimation.Rendering PoseAnimation.Movement PoseAnimation.Attackness PoseAnimation.Head PoseAnimation.Body PoseAnimation.Hip PoseAnimation.ShoulderL PoseAnimation.ShoulderR PoseAnimation.UpperArmL PoseAnimation.UpperArmR PoseAnimation.LowerArmL PoseAnimation.LowerArmR PoseAnimation.HandL PoseAnimation.HandR PoseAnimation.UpperLegL PoseAnimation.UpperLegR PoseAnimation.LowerLegL PoseAnimation.LowerLegR PoseAnimation.FootL PoseAnimation.FootR PoseAnimation.FacingRight PoseAnimation.FacingFront PoseAnimation.IsChargingAttack PoseAnimation.FacingSign PoseAnimation.FrontSign PoseAnimation.CurrentAnimationFrame PoseAnimation.AnimationType PoseAnimation.AttackLerp PoseAnimation.AttackEase PoseAnimation.OnGameInitialize() PoseAnimation.PerformAnimationFromPool(int, PoseCharacterRenderer) PoseAnimation.PerformAnimation(PoseAnimation, PoseCharacterRenderer) PoseAnimation.PerformAnimationBlendFromPool(int, int, float, PoseCharacterRenderer) PoseAnimation.PerformAnimationBlend(PoseAnimation, PoseAnimation, float, PoseCharacterRenderer) PoseAnimation.TryGetAnimationFromPool(int, out PoseAnimation) PoseAnimation.SetAsAnimating(PoseCharacterRenderer) PoseAnimation.ResetShoulderAndUpperArmPos(bool, bool) PoseAnimation.AttackHeadDown(float, int, int, int) PoseAnimation.AttackLegShake(float) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Fields TYPE_ID public static readonly int TYPE_ID Field Value int Methods Animate(PoseCharacterRenderer) public override void Animate(PoseCharacterRenderer renderer) Parameters renderer PoseCharacterRenderer Bow() public static void Bow()"
  },
  "api/AngeliA.Platformer.PoseAttack_Float.html": {
    "href": "api/AngeliA.Platformer.PoseAttack_Float.html",
    "title": "Class PoseAttack_Float | AngeliA",
    "summary": "Class PoseAttack_Float Namespace AngeliA.Platformer Assembly com.angelia.platformer.dll public class PoseAttack_Float : PoseAnimation Inheritance object PoseAnimation PoseAttack_Float Inherited Members PoseAnimation.POSE_Z_HAND PoseAnimation.A2G PoseAnimation.ValidHeadPosition PoseAnimation.DontBlendToNext PoseAnimation.DontBlendToPrev PoseAnimation.Target PoseAnimation.Rendering PoseAnimation.Movement PoseAnimation.Attackness PoseAnimation.Head PoseAnimation.Body PoseAnimation.Hip PoseAnimation.ShoulderL PoseAnimation.ShoulderR PoseAnimation.UpperArmL PoseAnimation.UpperArmR PoseAnimation.LowerArmL PoseAnimation.LowerArmR PoseAnimation.HandL PoseAnimation.HandR PoseAnimation.UpperLegL PoseAnimation.UpperLegR PoseAnimation.LowerLegL PoseAnimation.LowerLegR PoseAnimation.FootL PoseAnimation.FootR PoseAnimation.FacingRight PoseAnimation.FacingFront PoseAnimation.IsChargingAttack PoseAnimation.FacingSign PoseAnimation.FrontSign PoseAnimation.CurrentAnimationFrame PoseAnimation.AnimationType PoseAnimation.AttackLerp PoseAnimation.AttackEase PoseAnimation.OnGameInitialize() PoseAnimation.PerformAnimationFromPool(int, PoseCharacterRenderer) PoseAnimation.PerformAnimation(PoseAnimation, PoseCharacterRenderer) PoseAnimation.PerformAnimationBlendFromPool(int, int, float, PoseCharacterRenderer) PoseAnimation.PerformAnimationBlend(PoseAnimation, PoseAnimation, float, PoseCharacterRenderer) PoseAnimation.TryGetAnimationFromPool(int, out PoseAnimation) PoseAnimation.SetAsAnimating(PoseCharacterRenderer) PoseAnimation.ResetShoulderAndUpperArmPos(bool, bool) PoseAnimation.AttackHeadDown(float, int, int, int) PoseAnimation.AttackLegShake(float) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Fields TYPE_ID public static readonly int TYPE_ID Field Value int Methods Animate(PoseCharacterRenderer) public override void Animate(PoseCharacterRenderer renderer) Parameters renderer PoseCharacterRenderer Wave() public static void Wave()"
  },
  "api/AngeliA.Platformer.PoseAttack_Hand.html": {
    "href": "api/AngeliA.Platformer.PoseAttack_Hand.html",
    "title": "Class PoseAttack_Hand | AngeliA",
    "summary": "Class PoseAttack_Hand Namespace AngeliA.Platformer Assembly com.angelia.platformer.dll public class PoseAttack_Hand : PoseAnimation Inheritance object PoseAnimation PoseAttack_Hand Inherited Members PoseAnimation.POSE_Z_HAND PoseAnimation.A2G PoseAnimation.ValidHeadPosition PoseAnimation.DontBlendToNext PoseAnimation.DontBlendToPrev PoseAnimation.Target PoseAnimation.Rendering PoseAnimation.Movement PoseAnimation.Attackness PoseAnimation.Head PoseAnimation.Body PoseAnimation.Hip PoseAnimation.ShoulderL PoseAnimation.ShoulderR PoseAnimation.UpperArmL PoseAnimation.UpperArmR PoseAnimation.LowerArmL PoseAnimation.LowerArmR PoseAnimation.HandL PoseAnimation.HandR PoseAnimation.UpperLegL PoseAnimation.UpperLegR PoseAnimation.LowerLegL PoseAnimation.LowerLegR PoseAnimation.FootL PoseAnimation.FootR PoseAnimation.FacingRight PoseAnimation.FacingFront PoseAnimation.IsChargingAttack PoseAnimation.FacingSign PoseAnimation.FrontSign PoseAnimation.CurrentAnimationFrame PoseAnimation.AnimationType PoseAnimation.AttackLerp PoseAnimation.AttackEase PoseAnimation.OnGameInitialize() PoseAnimation.PerformAnimationFromPool(int, PoseCharacterRenderer) PoseAnimation.PerformAnimation(PoseAnimation, PoseCharacterRenderer) PoseAnimation.PerformAnimationBlendFromPool(int, int, float, PoseCharacterRenderer) PoseAnimation.PerformAnimationBlend(PoseAnimation, PoseAnimation, float, PoseCharacterRenderer) PoseAnimation.TryGetAnimationFromPool(int, out PoseAnimation) PoseAnimation.SetAsAnimating(PoseCharacterRenderer) PoseAnimation.ResetShoulderAndUpperArmPos(bool, bool) PoseAnimation.AttackHeadDown(float, int, int, int) PoseAnimation.AttackLegShake(float) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Fields TYPE_ID public static readonly int TYPE_ID Field Value int Methods Animate(PoseCharacterRenderer) public override void Animate(PoseCharacterRenderer renderer) Parameters renderer PoseCharacterRenderer"
  },
  "api/AngeliA.Platformer.PoseAttack_MagicPole.html": {
    "href": "api/AngeliA.Platformer.PoseAttack_MagicPole.html",
    "title": "Class PoseAttack_MagicPole | AngeliA",
    "summary": "Class PoseAttack_MagicPole Namespace AngeliA.Platformer Assembly com.angelia.platformer.dll public class PoseAttack_MagicPole : PoseAnimation Inheritance object PoseAnimation PoseAttack_MagicPole Inherited Members PoseAnimation.POSE_Z_HAND PoseAnimation.A2G PoseAnimation.ValidHeadPosition PoseAnimation.DontBlendToNext PoseAnimation.DontBlendToPrev PoseAnimation.Target PoseAnimation.Rendering PoseAnimation.Movement PoseAnimation.Attackness PoseAnimation.Head PoseAnimation.Body PoseAnimation.Hip PoseAnimation.ShoulderL PoseAnimation.ShoulderR PoseAnimation.UpperArmL PoseAnimation.UpperArmR PoseAnimation.LowerArmL PoseAnimation.LowerArmR PoseAnimation.HandL PoseAnimation.HandR PoseAnimation.UpperLegL PoseAnimation.UpperLegR PoseAnimation.LowerLegL PoseAnimation.LowerLegR PoseAnimation.FootL PoseAnimation.FootR PoseAnimation.FacingRight PoseAnimation.FacingFront PoseAnimation.IsChargingAttack PoseAnimation.FacingSign PoseAnimation.FrontSign PoseAnimation.CurrentAnimationFrame PoseAnimation.AnimationType PoseAnimation.AttackLerp PoseAnimation.AttackEase PoseAnimation.OnGameInitialize() PoseAnimation.PerformAnimationFromPool(int, PoseCharacterRenderer) PoseAnimation.PerformAnimation(PoseAnimation, PoseCharacterRenderer) PoseAnimation.PerformAnimationBlendFromPool(int, int, float, PoseCharacterRenderer) PoseAnimation.PerformAnimationBlend(PoseAnimation, PoseAnimation, float, PoseCharacterRenderer) PoseAnimation.TryGetAnimationFromPool(int, out PoseAnimation) PoseAnimation.SetAsAnimating(PoseCharacterRenderer) PoseAnimation.ResetShoulderAndUpperArmPos(bool, bool) PoseAnimation.AttackHeadDown(float, int, int, int) PoseAnimation.AttackLegShake(float) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Fields TYPE_ID public static readonly int TYPE_ID Field Value int Methods Animate(PoseCharacterRenderer) public override void Animate(PoseCharacterRenderer renderer) Parameters renderer PoseCharacterRenderer Wave() public static void Wave()"
  },
  "api/AngeliA.Platformer.PoseAttack_MagicSingleHanded.html": {
    "href": "api/AngeliA.Platformer.PoseAttack_MagicSingleHanded.html",
    "title": "Class PoseAttack_MagicSingleHanded | AngeliA",
    "summary": "Class PoseAttack_MagicSingleHanded Namespace AngeliA.Platformer Assembly com.angelia.platformer.dll public class PoseAttack_MagicSingleHanded : PoseAnimation Inheritance object PoseAnimation PoseAttack_MagicSingleHanded Inherited Members PoseAnimation.POSE_Z_HAND PoseAnimation.A2G PoseAnimation.ValidHeadPosition PoseAnimation.DontBlendToNext PoseAnimation.DontBlendToPrev PoseAnimation.Target PoseAnimation.Rendering PoseAnimation.Movement PoseAnimation.Attackness PoseAnimation.Head PoseAnimation.Body PoseAnimation.Hip PoseAnimation.ShoulderL PoseAnimation.ShoulderR PoseAnimation.UpperArmL PoseAnimation.UpperArmR PoseAnimation.LowerArmL PoseAnimation.LowerArmR PoseAnimation.HandL PoseAnimation.HandR PoseAnimation.UpperLegL PoseAnimation.UpperLegR PoseAnimation.LowerLegL PoseAnimation.LowerLegR PoseAnimation.FootL PoseAnimation.FootR PoseAnimation.FacingRight PoseAnimation.FacingFront PoseAnimation.IsChargingAttack PoseAnimation.FacingSign PoseAnimation.FrontSign PoseAnimation.CurrentAnimationFrame PoseAnimation.AnimationType PoseAnimation.AttackLerp PoseAnimation.AttackEase PoseAnimation.OnGameInitialize() PoseAnimation.PerformAnimationFromPool(int, PoseCharacterRenderer) PoseAnimation.PerformAnimation(PoseAnimation, PoseCharacterRenderer) PoseAnimation.PerformAnimationBlendFromPool(int, int, float, PoseCharacterRenderer) PoseAnimation.PerformAnimationBlend(PoseAnimation, PoseAnimation, float, PoseCharacterRenderer) PoseAnimation.TryGetAnimationFromPool(int, out PoseAnimation) PoseAnimation.SetAsAnimating(PoseCharacterRenderer) PoseAnimation.ResetShoulderAndUpperArmPos(bool, bool) PoseAnimation.AttackHeadDown(float, int, int, int) PoseAnimation.AttackLegShake(float) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Fields TYPE_ID public static readonly int TYPE_ID Field Value int Methods Animate(PoseCharacterRenderer) public override void Animate(PoseCharacterRenderer renderer) Parameters renderer PoseCharacterRenderer Wave() public static void Wave()"
  },
  "api/AngeliA.Platformer.PoseAttack_Polearm.html": {
    "href": "api/AngeliA.Platformer.PoseAttack_Polearm.html",
    "title": "Class PoseAttack_Polearm | AngeliA",
    "summary": "Class PoseAttack_Polearm Namespace AngeliA.Platformer Assembly com.angelia.platformer.dll public class PoseAttack_Polearm : PoseAnimation Inheritance object PoseAnimation PoseAttack_Polearm Inherited Members PoseAnimation.POSE_Z_HAND PoseAnimation.A2G PoseAnimation.ValidHeadPosition PoseAnimation.DontBlendToNext PoseAnimation.DontBlendToPrev PoseAnimation.Target PoseAnimation.Rendering PoseAnimation.Movement PoseAnimation.Attackness PoseAnimation.Head PoseAnimation.Body PoseAnimation.Hip PoseAnimation.ShoulderL PoseAnimation.ShoulderR PoseAnimation.UpperArmL PoseAnimation.UpperArmR PoseAnimation.LowerArmL PoseAnimation.LowerArmR PoseAnimation.HandL PoseAnimation.HandR PoseAnimation.UpperLegL PoseAnimation.UpperLegR PoseAnimation.LowerLegL PoseAnimation.LowerLegR PoseAnimation.FootL PoseAnimation.FootR PoseAnimation.FacingRight PoseAnimation.FacingFront PoseAnimation.IsChargingAttack PoseAnimation.FacingSign PoseAnimation.FrontSign PoseAnimation.CurrentAnimationFrame PoseAnimation.AnimationType PoseAnimation.AttackLerp PoseAnimation.AttackEase PoseAnimation.OnGameInitialize() PoseAnimation.PerformAnimationFromPool(int, PoseCharacterRenderer) PoseAnimation.PerformAnimation(PoseAnimation, PoseCharacterRenderer) PoseAnimation.PerformAnimationBlendFromPool(int, int, float, PoseCharacterRenderer) PoseAnimation.PerformAnimationBlend(PoseAnimation, PoseAnimation, float, PoseCharacterRenderer) PoseAnimation.TryGetAnimationFromPool(int, out PoseAnimation) PoseAnimation.SetAsAnimating(PoseCharacterRenderer) PoseAnimation.ResetShoulderAndUpperArmPos(bool, bool) PoseAnimation.AttackHeadDown(float, int, int, int) PoseAnimation.AttackLegShake(float) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Fields TYPE_ID public static readonly int TYPE_ID Field Value int Methods Animate(PoseCharacterRenderer) public override void Animate(PoseCharacterRenderer renderer) Parameters renderer PoseCharacterRenderer Poke() public static void Poke() SlashIn() public static void SlashIn() SlashOut() public static void SlashOut() SmashDown() public static void SmashDown() SmashUp() public static void SmashUp()"
  },
  "api/AngeliA.Platformer.PoseAttack_Scratch.html": {
    "href": "api/AngeliA.Platformer.PoseAttack_Scratch.html",
    "title": "Class PoseAttack_Scratch | AngeliA",
    "summary": "Class PoseAttack_Scratch Namespace AngeliA.Platformer Assembly com.angelia.platformer.dll public class PoseAttack_Scratch : PoseAnimation Inheritance object PoseAnimation PoseAttack_Scratch Inherited Members PoseAnimation.POSE_Z_HAND PoseAnimation.A2G PoseAnimation.ValidHeadPosition PoseAnimation.DontBlendToNext PoseAnimation.DontBlendToPrev PoseAnimation.Target PoseAnimation.Rendering PoseAnimation.Movement PoseAnimation.Attackness PoseAnimation.Head PoseAnimation.Body PoseAnimation.Hip PoseAnimation.ShoulderL PoseAnimation.ShoulderR PoseAnimation.UpperArmL PoseAnimation.UpperArmR PoseAnimation.LowerArmL PoseAnimation.LowerArmR PoseAnimation.HandL PoseAnimation.HandR PoseAnimation.UpperLegL PoseAnimation.UpperLegR PoseAnimation.LowerLegL PoseAnimation.LowerLegR PoseAnimation.FootL PoseAnimation.FootR PoseAnimation.FacingRight PoseAnimation.FacingFront PoseAnimation.IsChargingAttack PoseAnimation.FacingSign PoseAnimation.FrontSign PoseAnimation.CurrentAnimationFrame PoseAnimation.AnimationType PoseAnimation.AttackLerp PoseAnimation.AttackEase PoseAnimation.OnGameInitialize() PoseAnimation.PerformAnimationFromPool(int, PoseCharacterRenderer) PoseAnimation.PerformAnimation(PoseAnimation, PoseCharacterRenderer) PoseAnimation.PerformAnimationBlendFromPool(int, int, float, PoseCharacterRenderer) PoseAnimation.PerformAnimationBlend(PoseAnimation, PoseAnimation, float, PoseCharacterRenderer) PoseAnimation.TryGetAnimationFromPool(int, out PoseAnimation) PoseAnimation.SetAsAnimating(PoseCharacterRenderer) PoseAnimation.ResetShoulderAndUpperArmPos(bool, bool) PoseAnimation.AttackHeadDown(float, int, int, int) PoseAnimation.AttackLegShake(float) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Fields TYPE_ID public static readonly int TYPE_ID Field Value int Methods Animate(PoseCharacterRenderer) public override void Animate(PoseCharacterRenderer renderer) Parameters renderer PoseCharacterRenderer ScratchIn() public static void ScratchIn() ScratchOut() public static void ScratchOut() ScratchUp() public static void ScratchUp()"
  },
  "api/AngeliA.Platformer.PoseAttack_Shooting.html": {
    "href": "api/AngeliA.Platformer.PoseAttack_Shooting.html",
    "title": "Class PoseAttack_Shooting | AngeliA",
    "summary": "Class PoseAttack_Shooting Namespace AngeliA.Platformer Assembly com.angelia.platformer.dll public class PoseAttack_Shooting : PoseAnimation Inheritance object PoseAnimation PoseAttack_Shooting Inherited Members PoseAnimation.POSE_Z_HAND PoseAnimation.A2G PoseAnimation.ValidHeadPosition PoseAnimation.DontBlendToNext PoseAnimation.DontBlendToPrev PoseAnimation.Target PoseAnimation.Rendering PoseAnimation.Movement PoseAnimation.Attackness PoseAnimation.Head PoseAnimation.Body PoseAnimation.Hip PoseAnimation.ShoulderL PoseAnimation.ShoulderR PoseAnimation.UpperArmL PoseAnimation.UpperArmR PoseAnimation.LowerArmL PoseAnimation.LowerArmR PoseAnimation.HandL PoseAnimation.HandR PoseAnimation.UpperLegL PoseAnimation.UpperLegR PoseAnimation.LowerLegL PoseAnimation.LowerLegR PoseAnimation.FootL PoseAnimation.FootR PoseAnimation.FacingRight PoseAnimation.FacingFront PoseAnimation.IsChargingAttack PoseAnimation.FacingSign PoseAnimation.FrontSign PoseAnimation.CurrentAnimationFrame PoseAnimation.AnimationType PoseAnimation.AttackLerp PoseAnimation.AttackEase PoseAnimation.OnGameInitialize() PoseAnimation.PerformAnimationFromPool(int, PoseCharacterRenderer) PoseAnimation.PerformAnimation(PoseAnimation, PoseCharacterRenderer) PoseAnimation.PerformAnimationBlendFromPool(int, int, float, PoseCharacterRenderer) PoseAnimation.PerformAnimationBlend(PoseAnimation, PoseAnimation, float, PoseCharacterRenderer) PoseAnimation.TryGetAnimationFromPool(int, out PoseAnimation) PoseAnimation.SetAsAnimating(PoseCharacterRenderer) PoseAnimation.ResetShoulderAndUpperArmPos(bool, bool) PoseAnimation.AttackHeadDown(float, int, int, int) PoseAnimation.AttackLegShake(float) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Fields TYPE_ID public static readonly int TYPE_ID Field Value int Methods Animate(PoseCharacterRenderer) public override void Animate(PoseCharacterRenderer renderer) Parameters renderer PoseCharacterRenderer Shooting() public static void Shooting()"
  },
  "api/AngeliA.Platformer.PoseAttack_WaveDoubleHanded.html": {
    "href": "api/AngeliA.Platformer.PoseAttack_WaveDoubleHanded.html",
    "title": "Class PoseAttack_WaveDoubleHanded | AngeliA",
    "summary": "Class PoseAttack_WaveDoubleHanded Namespace AngeliA.Platformer Assembly com.angelia.platformer.dll public class PoseAttack_WaveDoubleHanded : PoseAnimation Inheritance object PoseAnimation PoseAttack_WaveDoubleHanded Derived PoseAttack_WaveDoubleHanded_SmashOnly Inherited Members PoseAnimation.POSE_Z_HAND PoseAnimation.A2G PoseAnimation.ValidHeadPosition PoseAnimation.DontBlendToNext PoseAnimation.DontBlendToPrev PoseAnimation.Target PoseAnimation.Rendering PoseAnimation.Movement PoseAnimation.Attackness PoseAnimation.Head PoseAnimation.Body PoseAnimation.Hip PoseAnimation.ShoulderL PoseAnimation.ShoulderR PoseAnimation.UpperArmL PoseAnimation.UpperArmR PoseAnimation.LowerArmL PoseAnimation.LowerArmR PoseAnimation.HandL PoseAnimation.HandR PoseAnimation.UpperLegL PoseAnimation.UpperLegR PoseAnimation.LowerLegL PoseAnimation.LowerLegR PoseAnimation.FootL PoseAnimation.FootR PoseAnimation.FacingRight PoseAnimation.FacingFront PoseAnimation.IsChargingAttack PoseAnimation.FacingSign PoseAnimation.FrontSign PoseAnimation.CurrentAnimationFrame PoseAnimation.AnimationType PoseAnimation.AttackLerp PoseAnimation.AttackEase PoseAnimation.OnGameInitialize() PoseAnimation.PerformAnimationFromPool(int, PoseCharacterRenderer) PoseAnimation.PerformAnimation(PoseAnimation, PoseCharacterRenderer) PoseAnimation.PerformAnimationBlendFromPool(int, int, float, PoseCharacterRenderer) PoseAnimation.PerformAnimationBlend(PoseAnimation, PoseAnimation, float, PoseCharacterRenderer) PoseAnimation.TryGetAnimationFromPool(int, out PoseAnimation) PoseAnimation.SetAsAnimating(PoseCharacterRenderer) PoseAnimation.ResetShoulderAndUpperArmPos(bool, bool) PoseAnimation.AttackHeadDown(float, int, int, int) PoseAnimation.AttackLegShake(float) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Fields TYPE_ID public static readonly int TYPE_ID Field Value int Properties StyleIndex public virtual int StyleIndex { get; } Property Value int Methods Animate(PoseCharacterRenderer) public override void Animate(PoseCharacterRenderer renderer) Parameters renderer PoseCharacterRenderer SlashIn() public static void SlashIn() SlashOut() public static void SlashOut() SmashDown() public static void SmashDown() SmashUp() public static void SmashUp()"
  },
  "api/AngeliA.Platformer.PoseAttack_WaveDoubleHanded_SmashOnly.html": {
    "href": "api/AngeliA.Platformer.PoseAttack_WaveDoubleHanded_SmashOnly.html",
    "title": "Class PoseAttack_WaveDoubleHanded_SmashOnly | AngeliA",
    "summary": "Class PoseAttack_WaveDoubleHanded_SmashOnly Namespace AngeliA.Platformer Assembly com.angelia.platformer.dll public class PoseAttack_WaveDoubleHanded_SmashOnly : PoseAttack_WaveDoubleHanded Inheritance object PoseAnimation PoseAttack_WaveDoubleHanded PoseAttack_WaveDoubleHanded_SmashOnly Inherited Members PoseAttack_WaveDoubleHanded.Animate(PoseCharacterRenderer) PoseAttack_WaveDoubleHanded.SmashDown() PoseAttack_WaveDoubleHanded.SmashUp() PoseAttack_WaveDoubleHanded.SlashIn() PoseAttack_WaveDoubleHanded.SlashOut() PoseAnimation.POSE_Z_HAND PoseAnimation.A2G PoseAnimation.ValidHeadPosition PoseAnimation.DontBlendToNext PoseAnimation.DontBlendToPrev PoseAnimation.Target PoseAnimation.Rendering PoseAnimation.Movement PoseAnimation.Attackness PoseAnimation.Head PoseAnimation.Body PoseAnimation.Hip PoseAnimation.ShoulderL PoseAnimation.ShoulderR PoseAnimation.UpperArmL PoseAnimation.UpperArmR PoseAnimation.LowerArmL PoseAnimation.LowerArmR PoseAnimation.HandL PoseAnimation.HandR PoseAnimation.UpperLegL PoseAnimation.UpperLegR PoseAnimation.LowerLegL PoseAnimation.LowerLegR PoseAnimation.FootL PoseAnimation.FootR PoseAnimation.FacingRight PoseAnimation.FacingFront PoseAnimation.IsChargingAttack PoseAnimation.FacingSign PoseAnimation.FrontSign PoseAnimation.CurrentAnimationFrame PoseAnimation.AnimationType PoseAnimation.AttackLerp PoseAnimation.AttackEase PoseAnimation.OnGameInitialize() PoseAnimation.PerformAnimationFromPool(int, PoseCharacterRenderer) PoseAnimation.PerformAnimation(PoseAnimation, PoseCharacterRenderer) PoseAnimation.PerformAnimationBlendFromPool(int, int, float, PoseCharacterRenderer) PoseAnimation.PerformAnimationBlend(PoseAnimation, PoseAnimation, float, PoseCharacterRenderer) PoseAnimation.TryGetAnimationFromPool(int, out PoseAnimation) PoseAnimation.SetAsAnimating(PoseCharacterRenderer) PoseAnimation.ResetShoulderAndUpperArmPos(bool, bool) PoseAnimation.AttackHeadDown(float, int, int, int) PoseAnimation.AttackLegShake(float) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Fields TYPE_ID public static readonly int TYPE_ID Field Value int Properties StyleIndex public override int StyleIndex { get; } Property Value int"
  },
  "api/AngeliA.Platformer.PoseAttack_WaveEachHand.html": {
    "href": "api/AngeliA.Platformer.PoseAttack_WaveEachHand.html",
    "title": "Class PoseAttack_WaveEachHand | AngeliA",
    "summary": "Class PoseAttack_WaveEachHand Namespace AngeliA.Platformer Assembly com.angelia.platformer.dll public class PoseAttack_WaveEachHand : PoseAnimation Inheritance object PoseAnimation PoseAttack_WaveEachHand Derived PoseAttack_WaveEachHand_SmashOnly Inherited Members PoseAnimation.POSE_Z_HAND PoseAnimation.A2G PoseAnimation.ValidHeadPosition PoseAnimation.DontBlendToNext PoseAnimation.DontBlendToPrev PoseAnimation.Target PoseAnimation.Rendering PoseAnimation.Movement PoseAnimation.Attackness PoseAnimation.Head PoseAnimation.Body PoseAnimation.Hip PoseAnimation.ShoulderL PoseAnimation.ShoulderR PoseAnimation.UpperArmL PoseAnimation.UpperArmR PoseAnimation.LowerArmL PoseAnimation.LowerArmR PoseAnimation.HandL PoseAnimation.HandR PoseAnimation.UpperLegL PoseAnimation.UpperLegR PoseAnimation.LowerLegL PoseAnimation.LowerLegR PoseAnimation.FootL PoseAnimation.FootR PoseAnimation.FacingRight PoseAnimation.FacingFront PoseAnimation.IsChargingAttack PoseAnimation.FacingSign PoseAnimation.FrontSign PoseAnimation.CurrentAnimationFrame PoseAnimation.AnimationType PoseAnimation.AttackLerp PoseAnimation.AttackEase PoseAnimation.OnGameInitialize() PoseAnimation.PerformAnimationFromPool(int, PoseCharacterRenderer) PoseAnimation.PerformAnimation(PoseAnimation, PoseCharacterRenderer) PoseAnimation.PerformAnimationBlendFromPool(int, int, float, PoseCharacterRenderer) PoseAnimation.PerformAnimationBlend(PoseAnimation, PoseAnimation, float, PoseCharacterRenderer) PoseAnimation.TryGetAnimationFromPool(int, out PoseAnimation) PoseAnimation.SetAsAnimating(PoseCharacterRenderer) PoseAnimation.ResetShoulderAndUpperArmPos(bool, bool) PoseAnimation.AttackHeadDown(float, int, int, int) PoseAnimation.AttackLegShake(float) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Fields TYPE_ID public static readonly int TYPE_ID Field Value int Properties StyleIndex public virtual int StyleIndex { get; } Property Value int Methods Animate(PoseCharacterRenderer) public override void Animate(PoseCharacterRenderer renderer) Parameters renderer PoseCharacterRenderer SlashIn() public static void SlashIn() SlashOut() public static void SlashOut() SmashDown() public static void SmashDown() SmashUp() public static void SmashUp()"
  },
  "api/AngeliA.Platformer.PoseAttack_WaveEachHand_SmashOnly.html": {
    "href": "api/AngeliA.Platformer.PoseAttack_WaveEachHand_SmashOnly.html",
    "title": "Class PoseAttack_WaveEachHand_SmashOnly | AngeliA",
    "summary": "Class PoseAttack_WaveEachHand_SmashOnly Namespace AngeliA.Platformer Assembly com.angelia.platformer.dll public class PoseAttack_WaveEachHand_SmashOnly : PoseAttack_WaveEachHand Inheritance object PoseAnimation PoseAttack_WaveEachHand PoseAttack_WaveEachHand_SmashOnly Inherited Members PoseAttack_WaveEachHand.Animate(PoseCharacterRenderer) PoseAttack_WaveEachHand.SmashDown() PoseAttack_WaveEachHand.SmashUp() PoseAttack_WaveEachHand.SlashIn() PoseAttack_WaveEachHand.SlashOut() PoseAnimation.POSE_Z_HAND PoseAnimation.A2G PoseAnimation.ValidHeadPosition PoseAnimation.DontBlendToNext PoseAnimation.DontBlendToPrev PoseAnimation.Target PoseAnimation.Rendering PoseAnimation.Movement PoseAnimation.Attackness PoseAnimation.Head PoseAnimation.Body PoseAnimation.Hip PoseAnimation.ShoulderL PoseAnimation.ShoulderR PoseAnimation.UpperArmL PoseAnimation.UpperArmR PoseAnimation.LowerArmL PoseAnimation.LowerArmR PoseAnimation.HandL PoseAnimation.HandR PoseAnimation.UpperLegL PoseAnimation.UpperLegR PoseAnimation.LowerLegL PoseAnimation.LowerLegR PoseAnimation.FootL PoseAnimation.FootR PoseAnimation.FacingRight PoseAnimation.FacingFront PoseAnimation.IsChargingAttack PoseAnimation.FacingSign PoseAnimation.FrontSign PoseAnimation.CurrentAnimationFrame PoseAnimation.AnimationType PoseAnimation.AttackLerp PoseAnimation.AttackEase PoseAnimation.OnGameInitialize() PoseAnimation.PerformAnimationFromPool(int, PoseCharacterRenderer) PoseAnimation.PerformAnimation(PoseAnimation, PoseCharacterRenderer) PoseAnimation.PerformAnimationBlendFromPool(int, int, float, PoseCharacterRenderer) PoseAnimation.PerformAnimationBlend(PoseAnimation, PoseAnimation, float, PoseCharacterRenderer) PoseAnimation.TryGetAnimationFromPool(int, out PoseAnimation) PoseAnimation.SetAsAnimating(PoseCharacterRenderer) PoseAnimation.ResetShoulderAndUpperArmPos(bool, bool) PoseAnimation.AttackHeadDown(float, int, int, int) PoseAnimation.AttackLegShake(float) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Fields TYPE_ID public static readonly int TYPE_ID Field Value int Properties StyleIndex public override int StyleIndex { get; } Property Value int"
  },
  "api/AngeliA.Platformer.PoseAttack_WavePolearm.html": {
    "href": "api/AngeliA.Platformer.PoseAttack_WavePolearm.html",
    "title": "Class PoseAttack_WavePolearm | AngeliA",
    "summary": "Class PoseAttack_WavePolearm Namespace AngeliA.Platformer Assembly com.angelia.platformer.dll public class PoseAttack_WavePolearm : PoseAnimation Inheritance object PoseAnimation PoseAttack_WavePolearm Derived PoseAttack_WavePolearm_SmashOnly Inherited Members PoseAnimation.POSE_Z_HAND PoseAnimation.A2G PoseAnimation.ValidHeadPosition PoseAnimation.DontBlendToNext PoseAnimation.DontBlendToPrev PoseAnimation.Target PoseAnimation.Rendering PoseAnimation.Movement PoseAnimation.Attackness PoseAnimation.Head PoseAnimation.Body PoseAnimation.Hip PoseAnimation.ShoulderL PoseAnimation.ShoulderR PoseAnimation.UpperArmL PoseAnimation.UpperArmR PoseAnimation.LowerArmL PoseAnimation.LowerArmR PoseAnimation.HandL PoseAnimation.HandR PoseAnimation.UpperLegL PoseAnimation.UpperLegR PoseAnimation.LowerLegL PoseAnimation.LowerLegR PoseAnimation.FootL PoseAnimation.FootR PoseAnimation.FacingRight PoseAnimation.FacingFront PoseAnimation.IsChargingAttack PoseAnimation.FacingSign PoseAnimation.FrontSign PoseAnimation.CurrentAnimationFrame PoseAnimation.AnimationType PoseAnimation.AttackLerp PoseAnimation.AttackEase PoseAnimation.OnGameInitialize() PoseAnimation.PerformAnimationFromPool(int, PoseCharacterRenderer) PoseAnimation.PerformAnimation(PoseAnimation, PoseCharacterRenderer) PoseAnimation.PerformAnimationBlendFromPool(int, int, float, PoseCharacterRenderer) PoseAnimation.PerformAnimationBlend(PoseAnimation, PoseAnimation, float, PoseCharacterRenderer) PoseAnimation.TryGetAnimationFromPool(int, out PoseAnimation) PoseAnimation.SetAsAnimating(PoseCharacterRenderer) PoseAnimation.ResetShoulderAndUpperArmPos(bool, bool) PoseAnimation.AttackHeadDown(float, int, int, int) PoseAnimation.AttackLegShake(float) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Fields TYPE_ID public static readonly int TYPE_ID Field Value int Properties StyleIndex public virtual int StyleIndex { get; } Property Value int Methods Animate(PoseCharacterRenderer) public override void Animate(PoseCharacterRenderer renderer) Parameters renderer PoseCharacterRenderer SlashIn() public static void SlashIn() SlashOut() public static void SlashOut() SmashDown() public static void SmashDown() SmashUp() public static void SmashUp()"
  },
  "api/AngeliA.Platformer.PoseAttack_WavePolearm_SmashOnly.html": {
    "href": "api/AngeliA.Platformer.PoseAttack_WavePolearm_SmashOnly.html",
    "title": "Class PoseAttack_WavePolearm_SmashOnly | AngeliA",
    "summary": "Class PoseAttack_WavePolearm_SmashOnly Namespace AngeliA.Platformer Assembly com.angelia.platformer.dll public class PoseAttack_WavePolearm_SmashOnly : PoseAttack_WavePolearm Inheritance object PoseAnimation PoseAttack_WavePolearm PoseAttack_WavePolearm_SmashOnly Inherited Members PoseAttack_WavePolearm.Animate(PoseCharacterRenderer) PoseAttack_WavePolearm.SmashDown() PoseAttack_WavePolearm.SmashUp() PoseAttack_WavePolearm.SlashIn() PoseAttack_WavePolearm.SlashOut() PoseAnimation.POSE_Z_HAND PoseAnimation.A2G PoseAnimation.ValidHeadPosition PoseAnimation.DontBlendToNext PoseAnimation.DontBlendToPrev PoseAnimation.Target PoseAnimation.Rendering PoseAnimation.Movement PoseAnimation.Attackness PoseAnimation.Head PoseAnimation.Body PoseAnimation.Hip PoseAnimation.ShoulderL PoseAnimation.ShoulderR PoseAnimation.UpperArmL PoseAnimation.UpperArmR PoseAnimation.LowerArmL PoseAnimation.LowerArmR PoseAnimation.HandL PoseAnimation.HandR PoseAnimation.UpperLegL PoseAnimation.UpperLegR PoseAnimation.LowerLegL PoseAnimation.LowerLegR PoseAnimation.FootL PoseAnimation.FootR PoseAnimation.FacingRight PoseAnimation.FacingFront PoseAnimation.IsChargingAttack PoseAnimation.FacingSign PoseAnimation.FrontSign PoseAnimation.CurrentAnimationFrame PoseAnimation.AnimationType PoseAnimation.AttackLerp PoseAnimation.AttackEase PoseAnimation.OnGameInitialize() PoseAnimation.PerformAnimationFromPool(int, PoseCharacterRenderer) PoseAnimation.PerformAnimation(PoseAnimation, PoseCharacterRenderer) PoseAnimation.PerformAnimationBlendFromPool(int, int, float, PoseCharacterRenderer) PoseAnimation.PerformAnimationBlend(PoseAnimation, PoseAnimation, float, PoseCharacterRenderer) PoseAnimation.TryGetAnimationFromPool(int, out PoseAnimation) PoseAnimation.SetAsAnimating(PoseCharacterRenderer) PoseAnimation.ResetShoulderAndUpperArmPos(bool, bool) PoseAnimation.AttackHeadDown(float, int, int, int) PoseAnimation.AttackLegShake(float) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Fields TYPE_ID public static readonly int TYPE_ID Field Value int Properties StyleIndex public override int StyleIndex { get; } Property Value int"
  },
  "api/AngeliA.Platformer.PoseAttack_WaveSingleHanded.html": {
    "href": "api/AngeliA.Platformer.PoseAttack_WaveSingleHanded.html",
    "title": "Class PoseAttack_WaveSingleHanded | AngeliA",
    "summary": "Class PoseAttack_WaveSingleHanded Namespace AngeliA.Platformer Assembly com.angelia.platformer.dll public class PoseAttack_WaveSingleHanded : PoseAnimation Inheritance object PoseAnimation PoseAttack_WaveSingleHanded Derived PoseAttack_WaveSingleHanded_SmashOnly Inherited Members PoseAnimation.POSE_Z_HAND PoseAnimation.A2G PoseAnimation.ValidHeadPosition PoseAnimation.DontBlendToNext PoseAnimation.DontBlendToPrev PoseAnimation.Target PoseAnimation.Rendering PoseAnimation.Movement PoseAnimation.Attackness PoseAnimation.Head PoseAnimation.Body PoseAnimation.Hip PoseAnimation.ShoulderL PoseAnimation.ShoulderR PoseAnimation.UpperArmL PoseAnimation.UpperArmR PoseAnimation.LowerArmL PoseAnimation.LowerArmR PoseAnimation.HandL PoseAnimation.HandR PoseAnimation.UpperLegL PoseAnimation.UpperLegR PoseAnimation.LowerLegL PoseAnimation.LowerLegR PoseAnimation.FootL PoseAnimation.FootR PoseAnimation.FacingRight PoseAnimation.FacingFront PoseAnimation.IsChargingAttack PoseAnimation.FacingSign PoseAnimation.FrontSign PoseAnimation.CurrentAnimationFrame PoseAnimation.AnimationType PoseAnimation.AttackLerp PoseAnimation.AttackEase PoseAnimation.OnGameInitialize() PoseAnimation.PerformAnimationFromPool(int, PoseCharacterRenderer) PoseAnimation.PerformAnimation(PoseAnimation, PoseCharacterRenderer) PoseAnimation.PerformAnimationBlendFromPool(int, int, float, PoseCharacterRenderer) PoseAnimation.PerformAnimationBlend(PoseAnimation, PoseAnimation, float, PoseCharacterRenderer) PoseAnimation.TryGetAnimationFromPool(int, out PoseAnimation) PoseAnimation.SetAsAnimating(PoseCharacterRenderer) PoseAnimation.ResetShoulderAndUpperArmPos(bool, bool) PoseAnimation.AttackHeadDown(float, int, int, int) PoseAnimation.AttackLegShake(float) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Fields TYPE_ID public static readonly int TYPE_ID Field Value int Methods Animate(PoseCharacterRenderer) public override void Animate(PoseCharacterRenderer renderer) Parameters renderer PoseCharacterRenderer SlashIn() public static void SlashIn() SlashOut() public static void SlashOut() SmashDown() public static void SmashDown() SmashUp() public static void SmashUp()"
  },
  "api/AngeliA.Platformer.PoseAttack_WaveSingleHanded_SmashOnly.html": {
    "href": "api/AngeliA.Platformer.PoseAttack_WaveSingleHanded_SmashOnly.html",
    "title": "Class PoseAttack_WaveSingleHanded_SmashOnly | AngeliA",
    "summary": "Class PoseAttack_WaveSingleHanded_SmashOnly Namespace AngeliA.Platformer Assembly com.angelia.platformer.dll public class PoseAttack_WaveSingleHanded_SmashOnly : PoseAttack_WaveSingleHanded Inheritance object PoseAnimation PoseAttack_WaveSingleHanded PoseAttack_WaveSingleHanded_SmashOnly Inherited Members PoseAttack_WaveSingleHanded.SmashDown() PoseAttack_WaveSingleHanded.SmashUp() PoseAttack_WaveSingleHanded.SlashIn() PoseAttack_WaveSingleHanded.SlashOut() PoseAnimation.POSE_Z_HAND PoseAnimation.A2G PoseAnimation.ValidHeadPosition PoseAnimation.DontBlendToNext PoseAnimation.DontBlendToPrev PoseAnimation.Target PoseAnimation.Rendering PoseAnimation.Movement PoseAnimation.Attackness PoseAnimation.Head PoseAnimation.Body PoseAnimation.Hip PoseAnimation.ShoulderL PoseAnimation.ShoulderR PoseAnimation.UpperArmL PoseAnimation.UpperArmR PoseAnimation.LowerArmL PoseAnimation.LowerArmR PoseAnimation.HandL PoseAnimation.HandR PoseAnimation.UpperLegL PoseAnimation.UpperLegR PoseAnimation.LowerLegL PoseAnimation.LowerLegR PoseAnimation.FootL PoseAnimation.FootR PoseAnimation.FacingRight PoseAnimation.FacingFront PoseAnimation.IsChargingAttack PoseAnimation.FacingSign PoseAnimation.FrontSign PoseAnimation.CurrentAnimationFrame PoseAnimation.AnimationType PoseAnimation.AttackLerp PoseAnimation.AttackEase PoseAnimation.OnGameInitialize() PoseAnimation.PerformAnimationFromPool(int, PoseCharacterRenderer) PoseAnimation.PerformAnimation(PoseAnimation, PoseCharacterRenderer) PoseAnimation.PerformAnimationBlendFromPool(int, int, float, PoseCharacterRenderer) PoseAnimation.PerformAnimationBlend(PoseAnimation, PoseAnimation, float, PoseCharacterRenderer) PoseAnimation.TryGetAnimationFromPool(int, out PoseAnimation) PoseAnimation.SetAsAnimating(PoseCharacterRenderer) PoseAnimation.ResetShoulderAndUpperArmPos(bool, bool) PoseAnimation.AttackHeadDown(float, int, int, int) PoseAnimation.AttackLegShake(float) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Fields TYPE_ID public static readonly int TYPE_ID Field Value int Methods Animate(PoseCharacterRenderer) public override void Animate(PoseCharacterRenderer renderer) Parameters renderer PoseCharacterRenderer Smash() public static void Smash()"
  },
  "api/AngeliA.Platformer.PoseHandheld_Bow.html": {
    "href": "api/AngeliA.Platformer.PoseHandheld_Bow.html",
    "title": "Class PoseHandheld_Bow | AngeliA",
    "summary": "Class PoseHandheld_Bow Namespace AngeliA.Platformer Assembly com.angelia.platformer.dll public class PoseHandheld_Bow : HandheldPoseAnimation Inheritance object PoseAnimation HandheldPoseAnimation PoseHandheld_Bow Inherited Members PoseAnimation.POSE_Z_HAND PoseAnimation.A2G PoseAnimation.ValidHeadPosition PoseAnimation.DontBlendToNext PoseAnimation.DontBlendToPrev PoseAnimation.Target PoseAnimation.Rendering PoseAnimation.Movement PoseAnimation.Attackness PoseAnimation.Head PoseAnimation.Body PoseAnimation.Hip PoseAnimation.ShoulderL PoseAnimation.ShoulderR PoseAnimation.UpperArmL PoseAnimation.UpperArmR PoseAnimation.LowerArmL PoseAnimation.LowerArmR PoseAnimation.HandL PoseAnimation.HandR PoseAnimation.UpperLegL PoseAnimation.UpperLegR PoseAnimation.LowerLegL PoseAnimation.LowerLegR PoseAnimation.FootL PoseAnimation.FootR PoseAnimation.FacingRight PoseAnimation.FacingFront PoseAnimation.IsChargingAttack PoseAnimation.FacingSign PoseAnimation.FrontSign PoseAnimation.CurrentAnimationFrame PoseAnimation.AnimationType PoseAnimation.AttackLerp PoseAnimation.AttackEase PoseAnimation.OnGameInitialize() PoseAnimation.PerformAnimationFromPool(int, PoseCharacterRenderer) PoseAnimation.PerformAnimation(PoseAnimation, PoseCharacterRenderer) PoseAnimation.PerformAnimationBlendFromPool(int, int, float, PoseCharacterRenderer) PoseAnimation.PerformAnimationBlend(PoseAnimation, PoseAnimation, float, PoseCharacterRenderer) PoseAnimation.TryGetAnimationFromPool(int, out PoseAnimation) PoseAnimation.SetAsAnimating(PoseCharacterRenderer) PoseAnimation.ResetShoulderAndUpperArmPos(bool, bool) PoseAnimation.AttackHeadDown(float, int, int, int) PoseAnimation.AttackLegShake(float) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Fields TYPE_ID public static readonly int TYPE_ID Field Value int Methods Animate(PoseCharacterRenderer) public override void Animate(PoseCharacterRenderer renderer) Parameters renderer PoseCharacterRenderer DrawTool(HandTool, PoseCharacterRenderer) public override void DrawTool(HandTool tool, PoseCharacterRenderer renderer) Parameters tool HandTool renderer PoseCharacterRenderer"
  },
  "api/AngeliA.Platformer.PoseHandheld_DoubleHanded.html": {
    "href": "api/AngeliA.Platformer.PoseHandheld_DoubleHanded.html",
    "title": "Class PoseHandheld_DoubleHanded | AngeliA",
    "summary": "Class PoseHandheld_DoubleHanded Namespace AngeliA.Platformer Assembly com.angelia.platformer.dll public class PoseHandheld_DoubleHanded : HandheldPoseAnimation Inheritance object PoseAnimation HandheldPoseAnimation PoseHandheld_DoubleHanded Inherited Members PoseAnimation.POSE_Z_HAND PoseAnimation.A2G PoseAnimation.ValidHeadPosition PoseAnimation.DontBlendToNext PoseAnimation.DontBlendToPrev PoseAnimation.Target PoseAnimation.Rendering PoseAnimation.Movement PoseAnimation.Attackness PoseAnimation.Head PoseAnimation.Body PoseAnimation.Hip PoseAnimation.ShoulderL PoseAnimation.ShoulderR PoseAnimation.UpperArmL PoseAnimation.UpperArmR PoseAnimation.LowerArmL PoseAnimation.LowerArmR PoseAnimation.HandL PoseAnimation.HandR PoseAnimation.UpperLegL PoseAnimation.UpperLegR PoseAnimation.LowerLegL PoseAnimation.LowerLegR PoseAnimation.FootL PoseAnimation.FootR PoseAnimation.FacingRight PoseAnimation.FacingFront PoseAnimation.IsChargingAttack PoseAnimation.FacingSign PoseAnimation.FrontSign PoseAnimation.CurrentAnimationFrame PoseAnimation.AnimationType PoseAnimation.AttackLerp PoseAnimation.AttackEase PoseAnimation.OnGameInitialize() PoseAnimation.PerformAnimationFromPool(int, PoseCharacterRenderer) PoseAnimation.PerformAnimation(PoseAnimation, PoseCharacterRenderer) PoseAnimation.PerformAnimationBlendFromPool(int, int, float, PoseCharacterRenderer) PoseAnimation.PerformAnimationBlend(PoseAnimation, PoseAnimation, float, PoseCharacterRenderer) PoseAnimation.TryGetAnimationFromPool(int, out PoseAnimation) PoseAnimation.SetAsAnimating(PoseCharacterRenderer) PoseAnimation.ResetShoulderAndUpperArmPos(bool, bool) PoseAnimation.AttackHeadDown(float, int, int, int) PoseAnimation.AttackLegShake(float) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Fields TYPE_ID public static readonly int TYPE_ID Field Value int Methods Animate(PoseCharacterRenderer) public override void Animate(PoseCharacterRenderer renderer) Parameters renderer PoseCharacterRenderer DrawTool(HandTool, PoseCharacterRenderer) public override void DrawTool(HandTool tool, PoseCharacterRenderer renderer) Parameters tool HandTool renderer PoseCharacterRenderer"
  },
  "api/AngeliA.Platformer.PoseHandheld_EachHand.html": {
    "href": "api/AngeliA.Platformer.PoseHandheld_EachHand.html",
    "title": "Class PoseHandheld_EachHand | AngeliA",
    "summary": "Class PoseHandheld_EachHand Namespace AngeliA.Platformer Assembly com.angelia.platformer.dll public class PoseHandheld_EachHand : HandheldPoseAnimation Inheritance object PoseAnimation HandheldPoseAnimation PoseHandheld_EachHand Inherited Members PoseAnimation.POSE_Z_HAND PoseAnimation.A2G PoseAnimation.ValidHeadPosition PoseAnimation.DontBlendToNext PoseAnimation.DontBlendToPrev PoseAnimation.Target PoseAnimation.Rendering PoseAnimation.Movement PoseAnimation.Attackness PoseAnimation.Head PoseAnimation.Body PoseAnimation.Hip PoseAnimation.ShoulderL PoseAnimation.ShoulderR PoseAnimation.UpperArmL PoseAnimation.UpperArmR PoseAnimation.LowerArmL PoseAnimation.LowerArmR PoseAnimation.HandL PoseAnimation.HandR PoseAnimation.UpperLegL PoseAnimation.UpperLegR PoseAnimation.LowerLegL PoseAnimation.LowerLegR PoseAnimation.FootL PoseAnimation.FootR PoseAnimation.FacingRight PoseAnimation.FacingFront PoseAnimation.IsChargingAttack PoseAnimation.FacingSign PoseAnimation.FrontSign PoseAnimation.CurrentAnimationFrame PoseAnimation.AnimationType PoseAnimation.AttackLerp PoseAnimation.AttackEase PoseAnimation.OnGameInitialize() PoseAnimation.PerformAnimationFromPool(int, PoseCharacterRenderer) PoseAnimation.PerformAnimation(PoseAnimation, PoseCharacterRenderer) PoseAnimation.PerformAnimationBlendFromPool(int, int, float, PoseCharacterRenderer) PoseAnimation.PerformAnimationBlend(PoseAnimation, PoseAnimation, float, PoseCharacterRenderer) PoseAnimation.TryGetAnimationFromPool(int, out PoseAnimation) PoseAnimation.SetAsAnimating(PoseCharacterRenderer) PoseAnimation.ResetShoulderAndUpperArmPos(bool, bool) PoseAnimation.AttackHeadDown(float, int, int, int) PoseAnimation.AttackLegShake(float) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Fields TYPE_ID public static readonly int TYPE_ID Field Value int Methods Animate(PoseCharacterRenderer) public override void Animate(PoseCharacterRenderer renderer) Parameters renderer PoseCharacterRenderer DrawTool(HandTool, PoseCharacterRenderer) public override void DrawTool(HandTool tool, PoseCharacterRenderer renderer) Parameters tool HandTool renderer PoseCharacterRenderer"
  },
  "api/AngeliA.Platformer.PoseHandheld_Float.html": {
    "href": "api/AngeliA.Platformer.PoseHandheld_Float.html",
    "title": "Class PoseHandheld_Float | AngeliA",
    "summary": "Class PoseHandheld_Float Namespace AngeliA.Platformer Assembly com.angelia.platformer.dll public class PoseHandheld_Float : HandheldPoseAnimation Inheritance object PoseAnimation HandheldPoseAnimation PoseHandheld_Float Inherited Members PoseAnimation.POSE_Z_HAND PoseAnimation.A2G PoseAnimation.ValidHeadPosition PoseAnimation.DontBlendToNext PoseAnimation.DontBlendToPrev PoseAnimation.Target PoseAnimation.Rendering PoseAnimation.Movement PoseAnimation.Attackness PoseAnimation.Head PoseAnimation.Body PoseAnimation.Hip PoseAnimation.ShoulderL PoseAnimation.ShoulderR PoseAnimation.UpperArmL PoseAnimation.UpperArmR PoseAnimation.LowerArmL PoseAnimation.LowerArmR PoseAnimation.HandL PoseAnimation.HandR PoseAnimation.UpperLegL PoseAnimation.UpperLegR PoseAnimation.LowerLegL PoseAnimation.LowerLegR PoseAnimation.FootL PoseAnimation.FootR PoseAnimation.FacingRight PoseAnimation.FacingFront PoseAnimation.IsChargingAttack PoseAnimation.FacingSign PoseAnimation.FrontSign PoseAnimation.CurrentAnimationFrame PoseAnimation.AnimationType PoseAnimation.AttackLerp PoseAnimation.AttackEase PoseAnimation.OnGameInitialize() PoseAnimation.PerformAnimationFromPool(int, PoseCharacterRenderer) PoseAnimation.PerformAnimation(PoseAnimation, PoseCharacterRenderer) PoseAnimation.PerformAnimationBlendFromPool(int, int, float, PoseCharacterRenderer) PoseAnimation.PerformAnimationBlend(PoseAnimation, PoseAnimation, float, PoseCharacterRenderer) PoseAnimation.TryGetAnimationFromPool(int, out PoseAnimation) PoseAnimation.SetAsAnimating(PoseCharacterRenderer) PoseAnimation.ResetShoulderAndUpperArmPos(bool, bool) PoseAnimation.AttackHeadDown(float, int, int, int) PoseAnimation.AttackLegShake(float) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Fields TYPE_ID public static readonly int TYPE_ID Field Value int Methods Animate(PoseCharacterRenderer) public override void Animate(PoseCharacterRenderer renderer) Parameters renderer PoseCharacterRenderer DrawTool(HandTool, PoseCharacterRenderer) public override void DrawTool(HandTool tool, PoseCharacterRenderer renderer) Parameters tool HandTool renderer PoseCharacterRenderer"
  },
  "api/AngeliA.Platformer.PoseHandheld_MagicPole.html": {
    "href": "api/AngeliA.Platformer.PoseHandheld_MagicPole.html",
    "title": "Class PoseHandheld_MagicPole | AngeliA",
    "summary": "Class PoseHandheld_MagicPole Namespace AngeliA.Platformer Assembly com.angelia.platformer.dll public class PoseHandheld_MagicPole : HandheldPoseAnimation Inheritance object PoseAnimation HandheldPoseAnimation PoseHandheld_MagicPole Inherited Members PoseAnimation.POSE_Z_HAND PoseAnimation.A2G PoseAnimation.ValidHeadPosition PoseAnimation.DontBlendToNext PoseAnimation.DontBlendToPrev PoseAnimation.Target PoseAnimation.Rendering PoseAnimation.Movement PoseAnimation.Attackness PoseAnimation.Head PoseAnimation.Body PoseAnimation.Hip PoseAnimation.ShoulderL PoseAnimation.ShoulderR PoseAnimation.UpperArmL PoseAnimation.UpperArmR PoseAnimation.LowerArmL PoseAnimation.LowerArmR PoseAnimation.HandL PoseAnimation.HandR PoseAnimation.UpperLegL PoseAnimation.UpperLegR PoseAnimation.LowerLegL PoseAnimation.LowerLegR PoseAnimation.FootL PoseAnimation.FootR PoseAnimation.FacingRight PoseAnimation.FacingFront PoseAnimation.IsChargingAttack PoseAnimation.FacingSign PoseAnimation.FrontSign PoseAnimation.CurrentAnimationFrame PoseAnimation.AnimationType PoseAnimation.AttackLerp PoseAnimation.AttackEase PoseAnimation.OnGameInitialize() PoseAnimation.PerformAnimationFromPool(int, PoseCharacterRenderer) PoseAnimation.PerformAnimation(PoseAnimation, PoseCharacterRenderer) PoseAnimation.PerformAnimationBlendFromPool(int, int, float, PoseCharacterRenderer) PoseAnimation.PerformAnimationBlend(PoseAnimation, PoseAnimation, float, PoseCharacterRenderer) PoseAnimation.TryGetAnimationFromPool(int, out PoseAnimation) PoseAnimation.SetAsAnimating(PoseCharacterRenderer) PoseAnimation.ResetShoulderAndUpperArmPos(bool, bool) PoseAnimation.AttackHeadDown(float, int, int, int) PoseAnimation.AttackLegShake(float) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Fields TYPE_ID public static readonly int TYPE_ID Field Value int Methods Animate(PoseCharacterRenderer) public override void Animate(PoseCharacterRenderer renderer) Parameters renderer PoseCharacterRenderer DrawTool(HandTool, PoseCharacterRenderer) public override void DrawTool(HandTool tool, PoseCharacterRenderer renderer) Parameters tool HandTool renderer PoseCharacterRenderer"
  },
  "api/AngeliA.Platformer.PoseHandheld_Polearm.html": {
    "href": "api/AngeliA.Platformer.PoseHandheld_Polearm.html",
    "title": "Class PoseHandheld_Polearm | AngeliA",
    "summary": "Class PoseHandheld_Polearm Namespace AngeliA.Platformer Assembly com.angelia.platformer.dll public class PoseHandheld_Polearm : HandheldPoseAnimation Inheritance object PoseAnimation HandheldPoseAnimation PoseHandheld_Polearm Inherited Members PoseAnimation.POSE_Z_HAND PoseAnimation.A2G PoseAnimation.ValidHeadPosition PoseAnimation.DontBlendToNext PoseAnimation.DontBlendToPrev PoseAnimation.Target PoseAnimation.Rendering PoseAnimation.Movement PoseAnimation.Attackness PoseAnimation.Head PoseAnimation.Body PoseAnimation.Hip PoseAnimation.ShoulderL PoseAnimation.ShoulderR PoseAnimation.UpperArmL PoseAnimation.UpperArmR PoseAnimation.LowerArmL PoseAnimation.LowerArmR PoseAnimation.HandL PoseAnimation.HandR PoseAnimation.UpperLegL PoseAnimation.UpperLegR PoseAnimation.LowerLegL PoseAnimation.LowerLegR PoseAnimation.FootL PoseAnimation.FootR PoseAnimation.FacingRight PoseAnimation.FacingFront PoseAnimation.IsChargingAttack PoseAnimation.FacingSign PoseAnimation.FrontSign PoseAnimation.CurrentAnimationFrame PoseAnimation.AnimationType PoseAnimation.AttackLerp PoseAnimation.AttackEase PoseAnimation.OnGameInitialize() PoseAnimation.PerformAnimationFromPool(int, PoseCharacterRenderer) PoseAnimation.PerformAnimation(PoseAnimation, PoseCharacterRenderer) PoseAnimation.PerformAnimationBlendFromPool(int, int, float, PoseCharacterRenderer) PoseAnimation.PerformAnimationBlend(PoseAnimation, PoseAnimation, float, PoseCharacterRenderer) PoseAnimation.TryGetAnimationFromPool(int, out PoseAnimation) PoseAnimation.SetAsAnimating(PoseCharacterRenderer) PoseAnimation.ResetShoulderAndUpperArmPos(bool, bool) PoseAnimation.AttackHeadDown(float, int, int, int) PoseAnimation.AttackLegShake(float) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Fields TYPE_ID public static readonly int TYPE_ID Field Value int Methods Animate(PoseCharacterRenderer) public override void Animate(PoseCharacterRenderer renderer) Parameters renderer PoseCharacterRenderer DrawTool(HandTool, PoseCharacterRenderer) public override void DrawTool(HandTool tool, PoseCharacterRenderer renderer) Parameters tool HandTool renderer PoseCharacterRenderer"
  },
  "api/AngeliA.Platformer.PoseHandheld_Shooting.html": {
    "href": "api/AngeliA.Platformer.PoseHandheld_Shooting.html",
    "title": "Class PoseHandheld_Shooting | AngeliA",
    "summary": "Class PoseHandheld_Shooting Namespace AngeliA.Platformer Assembly com.angelia.platformer.dll public class PoseHandheld_Shooting : HandheldPoseAnimation Inheritance object PoseAnimation HandheldPoseAnimation PoseHandheld_Shooting Inherited Members PoseAnimation.POSE_Z_HAND PoseAnimation.A2G PoseAnimation.ValidHeadPosition PoseAnimation.DontBlendToNext PoseAnimation.DontBlendToPrev PoseAnimation.Target PoseAnimation.Rendering PoseAnimation.Movement PoseAnimation.Attackness PoseAnimation.Head PoseAnimation.Body PoseAnimation.Hip PoseAnimation.ShoulderL PoseAnimation.ShoulderR PoseAnimation.UpperArmL PoseAnimation.UpperArmR PoseAnimation.LowerArmL PoseAnimation.LowerArmR PoseAnimation.HandL PoseAnimation.HandR PoseAnimation.UpperLegL PoseAnimation.UpperLegR PoseAnimation.LowerLegL PoseAnimation.LowerLegR PoseAnimation.FootL PoseAnimation.FootR PoseAnimation.FacingRight PoseAnimation.FacingFront PoseAnimation.IsChargingAttack PoseAnimation.FacingSign PoseAnimation.FrontSign PoseAnimation.CurrentAnimationFrame PoseAnimation.AnimationType PoseAnimation.AttackLerp PoseAnimation.AttackEase PoseAnimation.OnGameInitialize() PoseAnimation.PerformAnimationFromPool(int, PoseCharacterRenderer) PoseAnimation.PerformAnimation(PoseAnimation, PoseCharacterRenderer) PoseAnimation.PerformAnimationBlendFromPool(int, int, float, PoseCharacterRenderer) PoseAnimation.PerformAnimationBlend(PoseAnimation, PoseAnimation, float, PoseCharacterRenderer) PoseAnimation.TryGetAnimationFromPool(int, out PoseAnimation) PoseAnimation.SetAsAnimating(PoseCharacterRenderer) PoseAnimation.ResetShoulderAndUpperArmPos(bool, bool) PoseAnimation.AttackHeadDown(float, int, int, int) PoseAnimation.AttackLegShake(float) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Fields TYPE_ID public static readonly int TYPE_ID Field Value int Methods Animate(PoseCharacterRenderer) public override void Animate(PoseCharacterRenderer renderer) Parameters renderer PoseCharacterRenderer DrawTool(HandTool, PoseCharacterRenderer) public override void DrawTool(HandTool tool, PoseCharacterRenderer renderer) Parameters tool HandTool renderer PoseCharacterRenderer"
  },
  "api/AngeliA.Platformer.PoseHandheld_SingleHanded.html": {
    "href": "api/AngeliA.Platformer.PoseHandheld_SingleHanded.html",
    "title": "Class PoseHandheld_SingleHanded | AngeliA",
    "summary": "Class PoseHandheld_SingleHanded Namespace AngeliA.Platformer Assembly com.angelia.platformer.dll public class PoseHandheld_SingleHanded : HandheldPoseAnimation Inheritance object PoseAnimation HandheldPoseAnimation PoseHandheld_SingleHanded Inherited Members PoseAnimation.POSE_Z_HAND PoseAnimation.A2G PoseAnimation.ValidHeadPosition PoseAnimation.DontBlendToNext PoseAnimation.DontBlendToPrev PoseAnimation.Target PoseAnimation.Rendering PoseAnimation.Movement PoseAnimation.Attackness PoseAnimation.Head PoseAnimation.Body PoseAnimation.Hip PoseAnimation.ShoulderL PoseAnimation.ShoulderR PoseAnimation.UpperArmL PoseAnimation.UpperArmR PoseAnimation.LowerArmL PoseAnimation.LowerArmR PoseAnimation.HandL PoseAnimation.HandR PoseAnimation.UpperLegL PoseAnimation.UpperLegR PoseAnimation.LowerLegL PoseAnimation.LowerLegR PoseAnimation.FootL PoseAnimation.FootR PoseAnimation.FacingRight PoseAnimation.FacingFront PoseAnimation.IsChargingAttack PoseAnimation.FacingSign PoseAnimation.FrontSign PoseAnimation.CurrentAnimationFrame PoseAnimation.AnimationType PoseAnimation.AttackLerp PoseAnimation.AttackEase PoseAnimation.OnGameInitialize() PoseAnimation.PerformAnimationFromPool(int, PoseCharacterRenderer) PoseAnimation.PerformAnimation(PoseAnimation, PoseCharacterRenderer) PoseAnimation.PerformAnimationBlendFromPool(int, int, float, PoseCharacterRenderer) PoseAnimation.PerformAnimationBlend(PoseAnimation, PoseAnimation, float, PoseCharacterRenderer) PoseAnimation.TryGetAnimationFromPool(int, out PoseAnimation) PoseAnimation.SetAsAnimating(PoseCharacterRenderer) PoseAnimation.ResetShoulderAndUpperArmPos(bool, bool) PoseAnimation.AttackHeadDown(float, int, int, int) PoseAnimation.AttackLegShake(float) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Fields TYPE_ID public static readonly int TYPE_ID Field Value int Methods Animate(PoseCharacterRenderer) public override void Animate(PoseCharacterRenderer renderer) Parameters renderer PoseCharacterRenderer DrawTool(HandTool, PoseCharacterRenderer) public override void DrawTool(HandTool tool, PoseCharacterRenderer renderer) Parameters tool HandTool renderer PoseCharacterRenderer"
  },
  "api/AngeliA.Platformer.PoseHandheld_Throwing.html": {
    "href": "api/AngeliA.Platformer.PoseHandheld_Throwing.html",
    "title": "Class PoseHandheld_Throwing | AngeliA",
    "summary": "Class PoseHandheld_Throwing Namespace AngeliA.Platformer Assembly com.angelia.platformer.dll public class PoseHandheld_Throwing : HandheldPoseAnimation Inheritance object PoseAnimation HandheldPoseAnimation PoseHandheld_Throwing Inherited Members PoseAnimation.POSE_Z_HAND PoseAnimation.A2G PoseAnimation.ValidHeadPosition PoseAnimation.DontBlendToNext PoseAnimation.DontBlendToPrev PoseAnimation.Target PoseAnimation.Rendering PoseAnimation.Movement PoseAnimation.Attackness PoseAnimation.Head PoseAnimation.Body PoseAnimation.Hip PoseAnimation.ShoulderL PoseAnimation.ShoulderR PoseAnimation.UpperArmL PoseAnimation.UpperArmR PoseAnimation.LowerArmL PoseAnimation.LowerArmR PoseAnimation.HandL PoseAnimation.HandR PoseAnimation.UpperLegL PoseAnimation.UpperLegR PoseAnimation.LowerLegL PoseAnimation.LowerLegR PoseAnimation.FootL PoseAnimation.FootR PoseAnimation.FacingRight PoseAnimation.FacingFront PoseAnimation.IsChargingAttack PoseAnimation.FacingSign PoseAnimation.FrontSign PoseAnimation.CurrentAnimationFrame PoseAnimation.AnimationType PoseAnimation.AttackLerp PoseAnimation.AttackEase PoseAnimation.OnGameInitialize() PoseAnimation.PerformAnimationFromPool(int, PoseCharacterRenderer) PoseAnimation.PerformAnimation(PoseAnimation, PoseCharacterRenderer) PoseAnimation.PerformAnimationBlendFromPool(int, int, float, PoseCharacterRenderer) PoseAnimation.PerformAnimationBlend(PoseAnimation, PoseAnimation, float, PoseCharacterRenderer) PoseAnimation.TryGetAnimationFromPool(int, out PoseAnimation) PoseAnimation.SetAsAnimating(PoseCharacterRenderer) PoseAnimation.ResetShoulderAndUpperArmPos(bool, bool) PoseAnimation.AttackHeadDown(float, int, int, int) PoseAnimation.AttackLegShake(float) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Fields TYPE_ID public static readonly int TYPE_ID Field Value int Methods Animate(PoseCharacterRenderer) public override void Animate(PoseCharacterRenderer renderer) Parameters renderer PoseCharacterRenderer DrawTool(HandTool, PoseCharacterRenderer) public override void DrawTool(HandTool tool, PoseCharacterRenderer renderer) Parameters tool HandTool renderer PoseCharacterRenderer"
  },
  "api/AngeliA.Platformer.ProjectileWeapon-1.html": {
    "href": "api/AngeliA.Platformer.ProjectileWeapon-1.html",
    "title": "Class ProjectileWeapon<B> | AngeliA",
    "summary": "Class ProjectileWeapon<B> Namespace AngeliA.Platformer Assembly com.angelia.platformer.dll public abstract class ProjectileWeapon<B> : Weapon<B>, IMapItem where B : MovableBullet Type Parameters B Inheritance object Item Equipment HandTool Weapon Weapon<B> ProjectileWeapon<B> Implements IMapItem Inherited Members Weapon.BulletID Weapon.ValidDirection Weapon.OnPoseAnimationUpdate_FromEquipment(PoseCharacterRenderer) HandTool.SpriteID HandTool.EquipmentType HandTool.PerformDelayFrame HandTool.PerformDelayRate HandTool.TypeName HandTool.Duration HandTool.Cooldown HandTool.HoldPunish HandTool.ChargeDuration HandTool.DefaultMovementSpeedRateOnUse HandTool.WalkingMovementSpeedRateOnUse HandTool.RunningMovementSpeedRateOnUse HandTool.UseStackAsUsage HandTool.RepeatWhenHolding HandTool.CancelUseWhenRelease HandTool.LockFacingOnUse HandTool.IgnoreGrabTwist HandTool.AvailableInAir HandTool.AvailableInWater HandTool.AvailableWhenWalking HandTool.AvailableWhenRunning HandTool.AvailableWhenClimbing HandTool.AvailableWhenFlying HandTool.AvailableWhenRolling HandTool.AvailableWhenSquatting HandTool.AvailableWhenDashing HandTool.AvailableWhenSliding HandTool.AvailableWhenGrabbing HandTool.AvailableWhenRushing HandTool.AvailableWhenPounding HandTool.LoadFromSheet() HandTool.OnToolSpriteRendered(PoseCharacterRenderer, int, int, int, int, int, int, AngeSprite, int) HandTool.AllowingUse(Character) HandTool.OnToolPerform(Character) HandTool.GetHandheldPoseAnimationID(Character) HandTool.GetPerformPoseAnimationID(Character) Equipment.MaxStackCount Item.AllowDuplicateUpdate Item.EmbedIntoLevel Item.TypeID Item.BeforeItemUpdate_FromInventory(Character, int, int) Item.OnItemUpdate_FromInventory(Character, int, int) Item.OnPoseAnimationUpdate_FromInventory(PoseCharacterRenderer, int, int) Item.OnTakeDamage_FromInventory(Character, int, int, ref Damage) Item.OnCharacterAttack_FromInventory(Character, Bullet, int, int) Item.BeforeItemUpdate_FromEquipment(Character) Item.OnItemUpdate_FromEquipment(Character) Item.BeforePoseAnimationUpdate_FromEquipment(PoseCharacterRenderer) Item.OnTakeDamage_FromEquipment(Character, ref Damage) Item.OnCharacterAttack_FromEquipment(Character, Bullet) Item.TryRepairEquipment(Character) Item.OnItemUpdate_FromItemHolder(ItemHolder, int) Item.OnCollect(Character) Item.CanUse(Character) Item.Use(Character, int, int, out bool) Item.ItemConditionCheck(Character) Item.DrawItem(Entity, IRect, Color32, int) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Properties AdditionalBulletSpeedForward protected virtual int AdditionalBulletSpeedForward { get; } Property Value int AdditionalBulletSpeedSide protected virtual int AdditionalBulletSpeedSide { get; } Property Value int AngleSpeedDelta public virtual int AngleSpeedDelta { get; } Property Value int BulletCountInOneShot public virtual int BulletCountInOneShot { get; } Property Value int BulletPivotY protected virtual int BulletPivotY { get; } Property Value int ForceBulletCountNextShot protected int ForceBulletCountNextShot { get; set; } Property Value int Methods SpawnBullet(Character) public override Bullet SpawnBullet(Character sender) Parameters sender Character Returns Bullet"
  },
  "api/AngeliA.Platformer.RideableMovement.html": {
    "href": "api/AngeliA.Platformer.RideableMovement.html",
    "title": "Class RideableMovement | AngeliA",
    "summary": "Class RideableMovement Namespace AngeliA.Platformer Assembly com.angelia.platformer.dll public class RideableMovement : VehicleMovement Inheritance object CharacterMovement VehicleMovement RideableMovement Inherited Members VehicleMovement.SyncFromConfigFile VehicleMovement.Driver VehicleMovement.Move(Direction3, Direction3, bool) VehicleMovement.Stop() VehicleMovement.Jump(bool) VehicleMovement.HoldJump(bool) VehicleMovement.Crash() VehicleMovement.Dash() VehicleMovement.Pound() VehicleMovement.Rush() CharacterMovement.MovementWidth CharacterMovement.MovementHeight CharacterMovement.WalkAvailable CharacterMovement.WalkSpeed CharacterMovement.WalkAcceleration CharacterMovement.WalkBrakeAcceleration CharacterMovement.WalkDeceleration CharacterMovement.RunAvailable CharacterMovement.RunSpeed CharacterMovement.RunAcceleration CharacterMovement.RunBrakeAcceleration CharacterMovement.RunDeceleration CharacterMovement.JumpCount CharacterMovement.JumpSpeed CharacterMovement.JumpReleaseSpeedRate CharacterMovement.JumpRiseGravityRate CharacterMovement.JumpBoostFromMoveRate CharacterMovement.FirstJumpWithRoll CharacterMovement.SubsequentJumpWithRoll CharacterMovement.JumpBreakRush CharacterMovement.JumpBreakDash CharacterMovement.AllowSquatJump CharacterMovement.JumpDownThroughOneway CharacterMovement.SquatAvailable CharacterMovement.SquatHeightAmount CharacterMovement.SquatMoveSpeed CharacterMovement.SquatAcceleration CharacterMovement.SquatDeceleration CharacterMovement.DashAvailable CharacterMovement.DashHeightAmount CharacterMovement.DashWithRoll CharacterMovement.DashPutoutFire CharacterMovement.DashSpeed CharacterMovement.DashDuration CharacterMovement.DashCooldown CharacterMovement.DashAcceleration CharacterMovement.DashCancelLoseRate CharacterMovement.RushAvailable CharacterMovement.RushHeightAmount CharacterMovement.RushInAir CharacterMovement.RushInWater CharacterMovement.RushWhenClimb CharacterMovement.RushWhenSquat CharacterMovement.RushPutoutFire CharacterMovement.RushSpeed CharacterMovement.RushStopSpeed CharacterMovement.RushDuration CharacterMovement.RushStiff CharacterMovement.RushCooldown CharacterMovement.RushAcceleration CharacterMovement.RushDeceleration CharacterMovement.SlipAvailable CharacterMovement.SlipAcceleration CharacterMovement.SlipDeceleration CharacterMovement.PoundAvailable CharacterMovement.PoundPutoutFire CharacterMovement.PoundSpeed CharacterMovement.SwimAvailable CharacterMovement.InWaterSpeedRate CharacterMovement.SwimWidthAmount CharacterMovement.SwimHeightAmount CharacterMovement.SwimSpeed CharacterMovement.SwimJumpSpeed CharacterMovement.SwimAcceleration CharacterMovement.SwimDeceleration CharacterMovement.ClimbAvailable CharacterMovement.AllowJumpWhenClimbing CharacterMovement.ClimbSpeedX CharacterMovement.ClimbSpeedY CharacterMovement.FlyAvailable CharacterMovement.FlyHeightAmount CharacterMovement.GlideOnFlying CharacterMovement.FlyCooldown CharacterMovement.FlyRiseSpeed CharacterMovement.FlyGravityRiseRate CharacterMovement.FlyGravityFallRate CharacterMovement.FlyFallSpeed CharacterMovement.FlyMoveSpeed CharacterMovement.FlyAcceleration CharacterMovement.FlyDeceleration CharacterMovement.SlideAvailable CharacterMovement.SlideOnAnyBlock CharacterMovement.ResetJumpCountWhenSlide CharacterMovement.SlideJumpKickSpeed CharacterMovement.SlideDropSpeed CharacterMovement.GrabTopAvailable CharacterMovement.GrabSideAvailable CharacterMovement.GrabTopHeightAmount CharacterMovement.GrabSideHeightAmount CharacterMovement.ResetJumpCountWhenGrab CharacterMovement.GrabFlipThroughDownAvailable CharacterMovement.GrabFlipThroughUpAvailable CharacterMovement.GrabFlipThroughDuration CharacterMovement.GrabMoveSpeedX CharacterMovement.GrabMoveSpeedY CharacterMovement.GrabSideJumpKickSpeed CharacterMovement.CrashAvailable CharacterMovement.CrashWhenSlippy CharacterMovement.CrashDuration CharacterMovement.CrashRunDurationRequire CharacterMovement.CrashDeceleration CharacterMovement.PushAvailable CharacterMovement.PushSpeed CharacterMovement.Target CharacterMovement.TargetCharacter CharacterMovement.LastMoveDirection CharacterMovement.IntendedX CharacterMovement.IntendedY CharacterMovement.CurrentJumpCount CharacterMovement.FacingRight CharacterMovement.FacingFront CharacterMovement.ShouldRun CharacterMovement.LastGroundFrame CharacterMovement.LastGroundingFrame CharacterMovement.LastStartMoveFrame CharacterMovement.LastEndMoveFrame CharacterMovement.LastJumpFrame CharacterMovement.LastClimbFrame CharacterMovement.LastDashFrame CharacterMovement.LastRushStartFrame CharacterMovement.LastCrashFrame CharacterMovement.LastSlippyMoveStartFrame CharacterMovement.LastSquatStartFrame CharacterMovement.LastSquattingFrame CharacterMovement.LastPoundingFrame CharacterMovement.LastSlidingFrame CharacterMovement.LastGrabbingFrame CharacterMovement.LastFlyFrame CharacterMovement.LastGrabFlipUpFrame CharacterMovement.LastGrabFlipDownFrame CharacterMovement.LastGrabCancelFrame CharacterMovement.LastStartRunFrame CharacterMovement.LastFacingChangeFrame CharacterMovement.MovementState CharacterMovement.IsGrabFlipping CharacterMovement.IsGrabFlippingUp CharacterMovement.IsGrabFlippingDown CharacterMovement.IsMoving CharacterMovement.IsWalking CharacterMovement.IsRunning CharacterMovement.IsRolling CharacterMovement.IsDashing CharacterMovement.IsRushing CharacterMovement.IsCrashing CharacterMovement.IsSquatting CharacterMovement.IsPounding CharacterMovement.IsClimbing CharacterMovement.IsFlying CharacterMovement.IsSliding CharacterMovement.IsGrabbingTop CharacterMovement.IsGrabbingSide CharacterMovement.Rect CharacterMovement.X CharacterMovement.Y CharacterMovement.Width CharacterMovement.Height CharacterMovement.OffsetX CharacterMovement.OffsetY CharacterMovement.VelocityX CharacterMovement.VelocityY CharacterMovement.IsInsideGround CharacterMovement.InWater CharacterMovement.IsGrounded CharacterMovement.CollisionMask CharacterMovement.OnActivated() CharacterMovement.PhysicsUpdateGamePlay() CharacterMovement.UpdateLater() CharacterMovement.ReloadMovementConfigFromFile() CharacterMovement.StopDash() CharacterMovement.StopRush() CharacterMovement.StopCrash() CharacterMovement.LockFacingRight(bool, int) CharacterMovement.LockSquat(int) CharacterMovement.SetSpeedRate(int, int) CharacterMovement.CalculateMovementState(CharacterMovement) CharacterMovement.GetMovementState() CharacterMovement.MoveLogic(int, int, bool) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Constructors RideableMovement(Rigidbody) public RideableMovement(Rigidbody rig) Parameters rig Rigidbody Methods InitializeMeta() protected override void InitializeMeta()"
  },
  "api/AngeliA.Platformer.RideableVehicle-1.html": {
    "href": "api/AngeliA.Platformer.RideableVehicle-1.html",
    "title": "Class RideableVehicle<RM> | AngeliA",
    "summary": "Class RideableVehicle<RM> Namespace AngeliA.Platformer Assembly com.angelia.platformer.dll public abstract class RideableVehicle<RM> : Vehicle<RM>, IMapItem, IDamageReceiver, ICarrier, IWithCharacterMovement where RM : RideableMovement Type Parameters RM Inheritance object Entity Rigidbody Vehicle Vehicle<RM> RideableVehicle<RM> Implements IMapItem IDamageReceiver ICarrier IWithCharacterMovement Inherited Members Vehicle.Movement Vehicle.Driver Vehicle.LastDriveChangedFrame Vehicle.DriverLocalPosition Vehicle.DriverLeaveLocalPosition Vehicle.FillPyhsicsForDriver Vehicle.PhysicalLayer Vehicle.AirDragX Vehicle.AirDragY Vehicle.CarryOtherOnTop Vehicle.SelfCollisionMask Vehicle.FacingRight Vehicle.FirstUpdate() Vehicle.TakeDriver() Vehicle.StartDrive(Character) Vehicle.OnDamaged(Damage) Rigidbody.Rect Rigidbody.IsGrounded Rigidbody.IsInsideGround Rigidbody.InWater Rigidbody.VelocityX Rigidbody.VelocityY Rigidbody.BounceSpeedRate Rigidbody.OffsetX Rigidbody.OffsetY Rigidbody.GroundedID Rigidbody.PrevX Rigidbody.PrevY Rigidbody.DeltaPositionX Rigidbody.DeltaPositionY Rigidbody.MomentumX Rigidbody.MomentumY Rigidbody.RequireDodgeOverlap Rigidbody.EjectWhenInsideGround Rigidbody.GlobalGravity Rigidbody.FallingGravityScale Rigidbody.RisingGravityScale Rigidbody.CollisionMask Rigidbody.IgnoreGroundCheck Rigidbody.IgnoreGravity Rigidbody.IgnorePhysics Rigidbody.IgnoreInsideGround Rigidbody.IgnoreOneway Rigidbody.IgnoreMomentum Rigidbody.MaxGravitySpeed Rigidbody.WaterFloatSpeed Rigidbody.WaterSpeedRate Rigidbody.AllowBeingPush Rigidbody.DestroyWhenInsideGround Rigidbody.PerformMove(int, int, bool) Rigidbody.MakeGrounded(int, int) Rigidbody.CancelMakeGrounded() Rigidbody.Push(int) Rigidbody.PerformGroundCheck(IRect, out PhysicsCell) Rigidbody.FillAsTrigger(int, int) Rigidbody.FillAsOnewayUp(int, int) Rigidbody.OnInsideGroundDestroyed() Rigidbody.GroundedCheck() Rigidbody.InsideGroundCheck() Rigidbody.RefreshPrevPosition() Entity.Active Entity.X Entity.Y Entity.Width Entity.Height Entity.TypeID Entity.SpawnFrame Entity.FromWorld Entity.InstanceOrder Entity.MapUnitPos Entity.InstanceID Entity.IgnoreReposition Entity.XY Entity.Size Entity.Center Entity.CenterX Entity.CenterY Entity.PivotUnitPosition Entity.OnInactivated() Entity.LateUpdate() Entity.AfterReposition(Int3, Int3) Entity.IgnoreDespawnFromMap(int) Entity.CancelIgnoreDespawnFromMap() Entity.Draw() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Constructors RideableVehicle() public RideableVehicle() Fields Navigation protected readonly RigidbodyNavigation Navigation Field Value RigidbodyNavigation Properties AllowFreeWandering protected virtual bool AllowFreeWandering { get; } Property Value bool StartDriveCooldown public override int StartDriveCooldown { get; } Property Value int Methods BeforeUpdate() public override void BeforeUpdate() CheckForStartDrive(out Character) protected override bool CheckForStartDrive(out Character driver) Parameters driver Character Returns bool CheckForStopDrive() protected override bool CheckForStopDrive() Returns bool OnActivated() public override void OnActivated() OverrideDriverAnimation(PoseCharacterRenderer) protected virtual void OverrideDriverAnimation(PoseCharacterRenderer renderer) Parameters renderer PoseCharacterRenderer StopDrive() public override void StopDrive() Update() public override void Update()"
  },
  "api/AngeliA.Platformer.RigidbodyNavigation.html": {
    "href": "api/AngeliA.Platformer.RigidbodyNavigation.html",
    "title": "Class RigidbodyNavigation | AngeliA",
    "summary": "Class RigidbodyNavigation Namespace AngeliA.Platformer Assembly com.angelia.platformer.dll public class RigidbodyNavigation Inheritance object RigidbodyNavigation Derived SummonNavigation Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Constructors RigidbodyNavigation(Rigidbody) public RigidbodyNavigation(Rigidbody target) Parameters target Rigidbody Fields Target public readonly Rigidbody Target Field Value Rigidbody Properties ClampInSpawnRect public virtual bool ClampInSpawnRect { get; } Property Value bool DefaultFlySpeed public virtual int DefaultFlySpeed { get; } Property Value int DefaultRunSpeed public virtual int DefaultRunSpeed { get; } Property Value int EndFlyDistance public virtual int EndFlyDistance { get; } Property Value int EndMoveDistance public virtual int EndMoveDistance { get; } Property Value int EndMoveSlowDown public virtual int EndMoveSlowDown { get; } Property Value int HasPerformableOperation public bool HasPerformableOperation { get; } Property Value bool InstanceShift public virtual int InstanceShift { get; } Property Value int JumpSpeed public virtual int JumpSpeed { get; } Property Value int MaxJumpDuration public virtual int MaxJumpDuration { get; } Property Value int MinimumFlyDuration public virtual int MinimumFlyDuration { get; } Property Value int NavigationAim public Int2 NavigationAim { get; set; } Property Value Int2 NavigationAimGrounded public bool NavigationAimGrounded { get; set; } Property Value bool NavigationEnable public virtual bool NavigationEnable { get; } Property Value bool NavigationState public RigidbodyNavigationState NavigationState { get; set; } Property Value RigidbodyNavigationState StartFlyDistance public virtual int StartFlyDistance { get; } Property Value int StartMoveDistance public virtual int StartMoveDistance { get; } Property Value int TeleportWhenCantFly public virtual bool TeleportWhenCantFly { get; } Property Value bool Methods OnActivated() public virtual void OnActivated() PhysicsUpdate() public virtual void PhysicsUpdate() ResetNavigation() public void ResetNavigation() SetNavigationAim(Int2, bool) public void SetNavigationAim(Int2 newAim, bool grounded) Parameters newAim Int2 grounded bool"
  },
  "api/AngeliA.Platformer.RigidbodyNavigationState.html": {
    "href": "api/AngeliA.Platformer.RigidbodyNavigationState.html",
    "title": "Enum RigidbodyNavigationState | AngeliA",
    "summary": "Enum RigidbodyNavigationState Namespace AngeliA.Platformer Assembly com.angelia.platformer.dll public enum RigidbodyNavigationState Extension Methods Extension.Next<E>(E) Extension.Prev<E>(E) Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Fields Fly = 2 Idle = 0 Operation = 1"
  },
  "api/AngeliA.Platformer.Shoes-2.html": {
    "href": "api/AngeliA.Platformer.Shoes-2.html",
    "title": "Class Shoes<P, N> | AngeliA",
    "summary": "Class Shoes<P, N> Namespace AngeliA.Platformer Assembly com.angelia.platformer.dll public abstract class Shoes<P, N> : Armor<P, N>, IMapItem, IProgressiveItem where P : Equipment where N : Equipment Type Parameters P N Inheritance object Item Equipment Armor<P, N> Shoes<P, N> Implements IMapItem IProgressiveItem Inherited Members Armor<P, N>.RepairMaterials Armor<P, N>.Scale Armor<P, N>.HideEar Armor<P, N>.HideHorn Armor<P, N>.HideHair Armor<P, N>.HideTail Armor<P, N>.HideFace Armor<P, N>.HideWing Armor<P, N>.OnPoseAnimationUpdate_FromEquipment(PoseCharacterRenderer) Armor<P, N>.DrawArmor(PoseCharacterRenderer) Armor<P, N>.OnTakeDamage_FromEquipment(Character, ref Damage) Armor<P, N>.TryRepairEquipment(Character) Armor<P, N>.RepairArmor(Character, int) Equipment.MaxStackCount Item.AllowDuplicateUpdate Item.EmbedIntoLevel Item.TypeID Item.BeforeItemUpdate_FromInventory(Character, int, int) Item.OnItemUpdate_FromInventory(Character, int, int) Item.OnPoseAnimationUpdate_FromInventory(PoseCharacterRenderer, int, int) Item.OnTakeDamage_FromInventory(Character, int, int, ref Damage) Item.OnCharacterAttack_FromInventory(Character, Bullet, int, int) Item.BeforeItemUpdate_FromEquipment(Character) Item.OnItemUpdate_FromEquipment(Character) Item.BeforePoseAnimationUpdate_FromEquipment(PoseCharacterRenderer) Item.OnPoseAnimationUpdate_FromEquipment(PoseCharacterRenderer) Item.OnTakeDamage_FromEquipment(Character, ref Damage) Item.OnCharacterAttack_FromEquipment(Character, Bullet) Item.TryRepairEquipment(Character) Item.OnItemUpdate_FromItemHolder(ItemHolder, int) Item.OnCollect(Character) Item.CanUse(Character) Item.Use(Character, int, int, out bool) Item.ItemConditionCheck(Character) Item.DrawItem(Entity, IRect, Color32, int) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Constructors Shoes() public Shoes() Properties EquipmentType public override sealed EquipmentType EquipmentType { get; } Property Value EquipmentType Methods DrawArmor(PoseCharacterRenderer) protected override void DrawArmor(PoseCharacterRenderer renderer) Parameters renderer PoseCharacterRenderer"
  },
  "api/AngeliA.Platformer.Slime.html": {
    "href": "api/AngeliA.Platformer.Slime.html",
    "title": "Class Slime | AngeliA",
    "summary": "Class Slime Namespace AngeliA.Platformer Assembly com.angelia.platformer.dll public abstract class Slime : Enemy, IMapItem, IDamageReceiver, ICarrier, IWithCharacterMovement, IWithCharacterAttackness, IWithCharacterHealth, IWithCharacterBuff, IWithCharacterRenderer Inheritance object Entity Rigidbody Character Enemy Slime Implements IMapItem IDamageReceiver ICarrier IWithCharacterMovement IWithCharacterAttackness IWithCharacterHealth IWithCharacterBuff IWithCharacterRenderer Inherited Members Enemy.Team Enemy.AttackTargetTeam Enemy.DamageOnTouch Enemy.BeforeUpdate() Character.INVENTORY_COLUMN Character.INVENTORY_ROW Character.Teleporting Character.TeleportEndFrame Character.TeleportingWithPortal Character.TeleportToFrontSide Character.CurrentAttackSpeedRate Character.PhysicalLayer Character.SelfCollisionMask Character.AirDragX Character.AirDragY Character.CarryOtherOnTop Character.FacingRight Character.InventoryType Character.FinalCharacterHeight Character.DefaultCharacterHeight Character.IgnoreDamageType Character.Bouncy Character.HelmetInteractable Character.BodySuitInteractable Character.GlovesInteractable Character.ShoesInteractable Character.JewelryInteractable Character.HandToolInteractable Character.CharacterState Character.AnimationType Character.SleepStartFrame Character.PassOutFrame Character.LastRequireBounceFrame Character.DespawnAfterPassoutDelay Character.InventoryID Character.RenderingCellIndex Character.FullSleepDuration Character.TeleportDuration Character.Movement Character.Attackness Character.Health Character.Rendering Character.NativeMovement Character.NativeAttackness Character.NativeHealth Character.NativeRenderer Character.Buff Character.OnInactivated() Character.AfterReposition(Int3, Int3) Character.LateUpdate() Character.SetCharacterState(CharacterState) Character.GetCurrentPoseAnimationType() Character.EnterTeleportState(bool, bool, bool) Character.LockAnimationType(CharacterAnimationType, int) Character.GetBonusFromFullSleep() Character.Bounce() Character.CancelBounce() Character.ResetInventoryUpdate(int) Character.EquipmentAvailable(EquipmentType) Character.TryRepairAllEquipments(bool) Character.CreateNativeMovement() Character.CreateNativeAttackness() Character.CreateNativeHealth() Character.CreateNativeRenderer() Character.OverrideMovement(CharacterMovement, int) Character.OverrideAttackness(CharacterAttackness, int) Character.OverrideHealth(CharacterHealth, int) Character.OverrideRenderer(CharacterRenderer, int) Character.IsAttackAllowedByMovement() Character.IsAttackAllowedByEquipment() Character.ForceFillTrigger(int) Character.IgnoreDamageFromLevel(int) Character.GetDisplayName() Character.GetDescription() Rigidbody.IsGrounded Rigidbody.IsInsideGround Rigidbody.InWater Rigidbody.VelocityX Rigidbody.VelocityY Rigidbody.BounceSpeedRate Rigidbody.OffsetX Rigidbody.OffsetY Rigidbody.GroundedID Rigidbody.PrevX Rigidbody.PrevY Rigidbody.DeltaPositionX Rigidbody.DeltaPositionY Rigidbody.MomentumX Rigidbody.MomentumY Rigidbody.RequireDodgeOverlap Rigidbody.GlobalGravity Rigidbody.FallingGravityScale Rigidbody.RisingGravityScale Rigidbody.CollisionMask Rigidbody.IgnoreGroundCheck Rigidbody.IgnoreGravity Rigidbody.IgnorePhysics Rigidbody.IgnoreInsideGround Rigidbody.IgnoreOneway Rigidbody.IgnoreMomentum Rigidbody.MaxGravitySpeed Rigidbody.WaterFloatSpeed Rigidbody.WaterSpeedRate Rigidbody.DestroyWhenInsideGround Rigidbody.PerformMove(int, int, bool) Rigidbody.MakeGrounded(int, int) Rigidbody.CancelMakeGrounded() Rigidbody.Push(int) Rigidbody.PerformGroundCheck(IRect, out PhysicsCell) Rigidbody.FillAsTrigger(int, int) Rigidbody.FillAsOnewayUp(int, int) Rigidbody.OnInsideGroundDestroyed() Rigidbody.RefreshPrevPosition() Entity.Active Entity.X Entity.Y Entity.Width Entity.Height Entity.TypeID Entity.SpawnFrame Entity.FromWorld Entity.InstanceOrder Entity.MapUnitPos Entity.InstanceID Entity.IgnoreReposition Entity.XY Entity.Size Entity.Center Entity.CenterX Entity.CenterY Entity.PivotUnitPosition Entity.IgnoreDespawnFromMap(int) Entity.CancelIgnoreDespawnFromMap() Entity.Draw() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Properties AllowBeingPush public override bool AllowBeingPush { get; } Property Value bool AttachingDirection When this value is \"Up\" the walker will be upside-down. \"Center\" means not attaching anything. public Direction5 AttachingDirection { get; set; } Property Value Direction5 AttachingID public int AttachingID { get; set; } Property Value int AttachingRect public IRect AttachingRect { get; set; } Property Value IRect AttachingTarget public Entity AttachingTarget { get; set; } Property Value Entity EjectWhenInsideGround public override bool EjectWhenInsideGround { get; } Property Value bool FacingPositive public bool FacingPositive { get; set; } Property Value bool LocalPosition public Int2 LocalPosition { get; set; } Property Value Int2 Rect public override IRect Rect { get; } Property Value IRect WalkSpeed public int WalkSpeed { get; } Property Value int Methods FirstUpdate() public override void FirstUpdate() GroundedCheck() protected override bool GroundedCheck() Returns bool InsideGroundCheck() protected override bool InsideGroundCheck() Returns bool OnActivated() public override void OnActivated() OnCharacterRendered() public override void OnCharacterRendered() OnDamaged(Damage) public override void OnDamaged(Damage damage) Parameters damage Damage Update() public override void Update()"
  },
  "api/AngeliA.Platformer.Slope.html": {
    "href": "api/AngeliA.Platformer.Slope.html",
    "title": "Class Slope | AngeliA",
    "summary": "Class Slope Namespace AngeliA.Platformer Assembly com.angelia.platformer.dll [Entity.Layer(3)] [Entity.StageOrder(-2048)] public abstract class Slope : Entity, IMapItem, IBlockEntity Inheritance object Entity Slope Implements IMapItem IBlockEntity Inherited Members Entity.Active Entity.X Entity.Y Entity.Width Entity.Height Entity.TypeID Entity.SpawnFrame Entity.FromWorld Entity.Rect Entity.InstanceOrder Entity.MapUnitPos Entity.InstanceID Entity.IgnoreReposition Entity.XY Entity.Size Entity.Center Entity.CenterX Entity.CenterY Entity.PivotUnitPosition Entity.OnActivated() Entity.OnInactivated() Entity.Update() Entity.AfterReposition(Int3, Int3) Entity.IgnoreDespawnFromMap(int) Entity.CancelIgnoreDespawnFromMap() Entity.Draw() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Properties CollisionMask public virtual int CollisionMask { get; } Property Value int DirectionHorizontal public abstract Direction2 DirectionHorizontal { get; } Property Value Direction2 DirectionVertical public abstract Direction2 DirectionVertical { get; } Property Value Direction2 Methods BeforeUpdate() public override void BeforeUpdate() FirstUpdate() public override void FirstUpdate() LateUpdate() public override void LateUpdate()"
  },
  "api/AngeliA.Platformer.Spring.html": {
    "href": "api/AngeliA.Platformer.Spring.html",
    "title": "Class Spring | AngeliA",
    "summary": "Class Spring Namespace AngeliA.Platformer Assembly com.angelia.platformer.dll [Entity.Layer(3)] [Entity.RepositionWhenInactive(true)] [Entity.MapEditorGroup(\"Contraption\", 0)] public abstract class Spring : Rigidbody, IMapItem, ICarrier, IBlockEntity, IAutoTrackWalker, IRouteWalker Inheritance object Entity Rigidbody Spring Implements IMapItem ICarrier IBlockEntity IAutoTrackWalker IRouteWalker Inherited Members Rigidbody.Rect Rigidbody.IsGrounded Rigidbody.IsInsideGround Rigidbody.InWater Rigidbody.VelocityX Rigidbody.VelocityY Rigidbody.BounceSpeedRate Rigidbody.OffsetX Rigidbody.OffsetY Rigidbody.GroundedID Rigidbody.PrevX Rigidbody.PrevY Rigidbody.DeltaPositionX Rigidbody.DeltaPositionY Rigidbody.MomentumX Rigidbody.MomentumY Rigidbody.RequireDodgeOverlap Rigidbody.FacingRight Rigidbody.EjectWhenInsideGround Rigidbody.GlobalGravity Rigidbody.FallingGravityScale Rigidbody.RisingGravityScale Rigidbody.CollisionMask Rigidbody.IgnoreGroundCheck Rigidbody.IgnoreGravity Rigidbody.IgnorePhysics Rigidbody.IgnoreInsideGround Rigidbody.IgnoreOneway Rigidbody.IgnoreMomentum Rigidbody.SelfCollisionMask Rigidbody.MaxGravitySpeed Rigidbody.AirDragX Rigidbody.AirDragY Rigidbody.WaterFloatSpeed Rigidbody.WaterSpeedRate Rigidbody.DestroyWhenInsideGround Rigidbody.CarryOtherOnTop Rigidbody.FirstUpdate() Rigidbody.Update() Rigidbody.PerformMove(int, int, bool) Rigidbody.MakeGrounded(int, int) Rigidbody.CancelMakeGrounded() Rigidbody.Push(int) Rigidbody.PerformGroundCheck(IRect, out PhysicsCell) Rigidbody.FillAsTrigger(int, int) Rigidbody.FillAsOnewayUp(int, int) Rigidbody.OnInsideGroundDestroyed() Rigidbody.GroundedCheck() Rigidbody.InsideGroundCheck() Rigidbody.RefreshPrevPosition() Entity.Active Entity.X Entity.Y Entity.Width Entity.Height Entity.TypeID Entity.SpawnFrame Entity.FromWorld Entity.InstanceOrder Entity.MapUnitPos Entity.InstanceID Entity.IgnoreReposition Entity.XY Entity.Size Entity.Center Entity.CenterX Entity.CenterY Entity.PivotUnitPosition Entity.OnInactivated() Entity.AfterReposition(Int3, Int3) Entity.IgnoreDespawnFromMap(int) Entity.CancelIgnoreDespawnFromMap() Entity.Draw() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Properties AllowBeingPush public override bool AllowBeingPush { get; } Property Value bool ArtworkRotation public int ArtworkRotation { get; set; } Property Value int Horizontal protected abstract bool Horizontal { get; } Property Value bool PhysicalLayer public override int PhysicalLayer { get; } Property Value int Power protected abstract int Power { get; } Property Value int Methods BeforeUpdate() public override void BeforeUpdate() LateUpdate() public override void LateUpdate() OnActivated() public override void OnActivated()"
  },
  "api/AngeliA.Platformer.StepTriggerPlatform.html": {
    "href": "api/AngeliA.Platformer.StepTriggerPlatform.html",
    "title": "Class StepTriggerPlatform | AngeliA",
    "summary": "Class StepTriggerPlatform Namespace AngeliA.Platformer Assembly com.angelia.platformer.dll public abstract class StepTriggerPlatform : TriggerablePlatform, IMapItem, IBlockEntity, IUnitable, ICircuitOperator Inheritance object Entity Platform TriggerablePlatform StepTriggerPlatform Implements IMapItem IBlockEntity IUnitable ICircuitOperator Inherited Members TriggerablePlatform.TriggerMode TriggerablePlatform.AllowMultipleTrigger TriggerablePlatform.TriggeredData TriggerablePlatform.LastTriggerFrame TriggerablePlatform.OnActivated() TriggerablePlatform.OnTriggered(object) TriggerablePlatform.Trigger(object) Platform.OneWay Platform.TouchedByPlayer Platform.TouchedByCharacter Platform.TouchedByRigidbody Platform.Pose Platform.FirstUpdate() Platform.BeforeUpdate() Platform.Update() Platform.LateUpdate() Platform.Move() Platform.SetTouch(bool, bool, bool) Platform.RenderPlatformBlock(int) Entity.Active Entity.X Entity.Y Entity.Width Entity.Height Entity.TypeID Entity.SpawnFrame Entity.FromWorld Entity.Rect Entity.InstanceOrder Entity.MapUnitPos Entity.InstanceID Entity.IgnoreReposition Entity.XY Entity.Size Entity.Center Entity.CenterX Entity.CenterY Entity.PivotUnitPosition Entity.OnInactivated() Entity.AfterReposition(Int3, Int3) Entity.IgnoreDespawnFromMap(int) Entity.CancelIgnoreDespawnFromMap() Entity.Draw() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Properties TriggerOnCharacterTouch protected virtual bool TriggerOnCharacterTouch { get; } Property Value bool TriggerOnPlayerTouch protected virtual bool TriggerOnPlayerTouch { get; } Property Value bool TriggerOnRigidbodyTouch protected virtual bool TriggerOnRigidbodyTouch { get; } Property Value bool Methods OnCharacterTouched(Character) protected override void OnCharacterTouched(Character character) Parameters character Character OnPlayerTouched(Character) protected override void OnPlayerTouched(Character player) Parameters player Character OnRigidbodyTouched(Rigidbody) protected override void OnRigidbodyTouched(Rigidbody rig) Parameters rig Rigidbody"
  },
  "api/AngeliA.Platformer.Summon.html": {
    "href": "api/AngeliA.Platformer.Summon.html",
    "title": "Class Summon | AngeliA",
    "summary": "Class Summon Namespace AngeliA.Platformer Assembly com.angelia.platformer.dll [Entity.Capacity(128, 0)] public abstract class Summon : Character, IMapItem, ICarrier, IWithCharacterMovement, IWithCharacterAttackness, IWithCharacterHealth, IWithCharacterBuff, IWithCharacterRenderer, IDamageReceiver, IActionTarget Inheritance object Entity Rigidbody Character Summon Implements IMapItem ICarrier IWithCharacterMovement IWithCharacterAttackness IWithCharacterHealth IWithCharacterBuff IWithCharacterRenderer IDamageReceiver IActionTarget Derived ItemBasedSummon Inherited Members Character.INVENTORY_COLUMN Character.INVENTORY_ROW Character.Teleporting Character.TeleportEndFrame Character.TeleportingWithPortal Character.TeleportToFrontSide Character.CurrentAttackSpeedRate Character.PhysicalLayer Character.SelfCollisionMask Character.AirDragX Character.AirDragY Character.FacingRight Character.EjectWhenInsideGround Character.InventoryType Character.FinalCharacterHeight Character.DefaultCharacterHeight Character.IgnoreDamageType Character.Bouncy Character.HelmetInteractable Character.BodySuitInteractable Character.GlovesInteractable Character.ShoesInteractable Character.JewelryInteractable Character.HandToolInteractable Character.CharacterState Character.AnimationType Character.SleepStartFrame Character.PassOutFrame Character.LastRequireBounceFrame Character.DespawnAfterPassoutDelay Character.InventoryID Character.RenderingCellIndex Character.FullSleepDuration Character.TeleportDuration Character.Movement Character.Attackness Character.Health Character.Rendering Character.NativeMovement Character.NativeAttackness Character.NativeHealth Character.NativeRenderer Character.Buff Character.AfterReposition(Int3, Int3) Character.BeforeUpdate() Character.GetCurrentPoseAnimationType() Character.OnCharacterRendered() Character.EnterTeleportState(bool, bool, bool) Character.LockAnimationType(CharacterAnimationType, int) Character.GetBonusFromFullSleep() Character.InsideGroundCheck() Character.Bounce() Character.CancelBounce() Character.ResetInventoryUpdate(int) Character.EquipmentAvailable(EquipmentType) Character.TryRepairAllEquipments(bool) Character.CreateNativeMovement() Character.CreateNativeHealth() Character.CreateNativeRenderer() Character.OverrideMovement(CharacterMovement, int) Character.OverrideAttackness(CharacterAttackness, int) Character.OverrideHealth(CharacterHealth, int) Character.OverrideRenderer(CharacterRenderer, int) Character.IsAttackAllowedByMovement() Character.IsAttackAllowedByEquipment() Character.ForceFillTrigger(int) Character.IgnoreDamageFromLevel(int) Character.GetDisplayName() Character.GetDescription() Rigidbody.Rect Rigidbody.IsGrounded Rigidbody.IsInsideGround Rigidbody.InWater Rigidbody.VelocityX Rigidbody.VelocityY Rigidbody.BounceSpeedRate Rigidbody.OffsetX Rigidbody.OffsetY Rigidbody.GroundedID Rigidbody.PrevX Rigidbody.PrevY Rigidbody.DeltaPositionX Rigidbody.DeltaPositionY Rigidbody.MomentumX Rigidbody.MomentumY Rigidbody.RequireDodgeOverlap Rigidbody.GlobalGravity Rigidbody.FallingGravityScale Rigidbody.RisingGravityScale Rigidbody.CollisionMask Rigidbody.IgnoreGroundCheck Rigidbody.IgnoreGravity Rigidbody.IgnorePhysics Rigidbody.IgnoreInsideGround Rigidbody.IgnoreOneway Rigidbody.IgnoreMomentum Rigidbody.MaxGravitySpeed Rigidbody.WaterFloatSpeed Rigidbody.WaterSpeedRate Rigidbody.DestroyWhenInsideGround Rigidbody.PerformMove(int, int, bool) Rigidbody.MakeGrounded(int, int) Rigidbody.CancelMakeGrounded() Rigidbody.Push(int) Rigidbody.PerformGroundCheck(IRect, out PhysicsCell) Rigidbody.FillAsTrigger(int, int) Rigidbody.FillAsOnewayUp(int, int) Rigidbody.OnInsideGroundDestroyed() Rigidbody.GroundedCheck() Rigidbody.RefreshPrevPosition() Entity.Active Entity.X Entity.Y Entity.Width Entity.Height Entity.TypeID Entity.SpawnFrame Entity.FromWorld Entity.InstanceOrder Entity.MapUnitPos Entity.InstanceID Entity.IgnoreReposition Entity.XY Entity.Size Entity.Center Entity.CenterX Entity.CenterY Entity.PivotUnitPosition Entity.IgnoreDespawnFromMap(int) Entity.CancelIgnoreDespawnFromMap() Entity.Draw() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Constructors Summon() public Summon() Properties AllowBeingPush public override bool AllowBeingPush { get; } Property Value bool AllowRescueWhenPassout public virtual bool AllowRescueWhenPassout { get; } Property Value bool AttackTargetTeam public override int AttackTargetTeam { get; } Property Value int CarryOtherOnTop public override bool CarryOtherOnTop { get; } Property Value bool InventoryUpdatedFrame public int InventoryUpdatedFrame { get; set; } Property Value int Navigation public SummonNavigation Navigation { get; init; } Property Value SummonNavigation Owner public Character Owner { get; set; } Property Value Character RequireOwner public virtual bool RequireOwner { get; } Property Value bool Team public override int Team { get; } Property Value int Methods CreateNativeAttackness() protected override CharacterAttackness CreateNativeAttackness() Returns CharacterAttackness CreateSummon(Character, int, int, int, bool) public static Summon CreateSummon(Character owner, int typeID, int x, int y, bool forceCreate = false) Parameters owner Character typeID int x int y int forceCreate bool Returns Summon CreateSummonNavigation() protected virtual SummonNavigation CreateSummonNavigation() Returns SummonNavigation CreateSummon<T>(Character, int, int, bool) public static T CreateSummon<T>(Character owner, int x, int y, bool forceCreate = false) where T : Summon Parameters owner Character x int y int forceCreate bool Returns T Type Parameters T FirstUpdate() public override void FirstUpdate() LateUpdate() public override void LateUpdate() OnActivated() public override void OnActivated() OnDamaged(Damage) public override void OnDamaged(Damage damage) Parameters damage Damage OnInactivated() public override void OnInactivated() OnSummoned(bool) public virtual void OnSummoned(bool create) Parameters create bool SetCharacterState(CharacterState) public override void SetCharacterState(CharacterState state) Parameters state CharacterState Update() public override void Update()"
  },
  "api/AngeliA.Platformer.SummonItem-1.html": {
    "href": "api/AngeliA.Platformer.SummonItem-1.html",
    "title": "Class SummonItem<T> | AngeliA",
    "summary": "Class SummonItem<T> Namespace AngeliA.Platformer Assembly com.angelia.platformer.dll public abstract class SummonItem<T> : Item, IMapItem where T : ItemBasedSummon Type Parameters T Inheritance object Item SummonItem<T> Implements IMapItem Inherited Members Item.AllowDuplicateUpdate Item.EmbedIntoLevel Item.TypeID Item.BeforeItemUpdate_FromInventory(Character, int, int) Item.OnPoseAnimationUpdate_FromInventory(PoseCharacterRenderer, int, int) Item.OnTakeDamage_FromInventory(Character, int, int, ref Damage) Item.OnCharacterAttack_FromInventory(Character, Bullet, int, int) Item.BeforeItemUpdate_FromEquipment(Character) Item.OnItemUpdate_FromEquipment(Character) Item.BeforePoseAnimationUpdate_FromEquipment(PoseCharacterRenderer) Item.OnPoseAnimationUpdate_FromEquipment(PoseCharacterRenderer) Item.OnTakeDamage_FromEquipment(Character, ref Damage) Item.OnCharacterAttack_FromEquipment(Character, Bullet) Item.TryRepairEquipment(Character) Item.OnItemUpdate_FromItemHolder(ItemHolder, int) Item.OnCollect(Character) Item.CanUse(Character) Item.Use(Character, int, int, out bool) Item.ItemConditionCheck(Character) Item.DrawItem(Entity, IRect, Color32, int) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Properties MaxStackCount public override int MaxStackCount { get; } Property Value int Methods OnItemUpdate_FromInventory(Character, int, int) public override void OnItemUpdate_FromInventory(Character holder, int inventoryID, int itemIndex) Parameters holder Character inventoryID int itemIndex int SpawnSummonFromItem(Character) public T SpawnSummonFromItem(Character owner) Parameters owner Character Returns T"
  },
  "api/AngeliA.Platformer.SummonNavigation.html": {
    "href": "api/AngeliA.Platformer.SummonNavigation.html",
    "title": "Class SummonNavigation | AngeliA",
    "summary": "Class SummonNavigation Namespace AngeliA.Platformer Assembly com.angelia.platformer.dll public class SummonNavigation : RigidbodyNavigation Inheritance object RigidbodyNavigation SummonNavigation Inherited Members RigidbodyNavigation.Target RigidbodyNavigation.NavigationState RigidbodyNavigation.NavigationAim RigidbodyNavigation.NavigationAimGrounded RigidbodyNavigation.HasPerformableOperation RigidbodyNavigation.TeleportWhenCantFly RigidbodyNavigation.DefaultRunSpeed RigidbodyNavigation.DefaultFlySpeed RigidbodyNavigation.EndMoveSlowDown RigidbodyNavigation.SetNavigationAim(Int2, bool) RigidbodyNavigation.ResetNavigation() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Constructors SummonNavigation(Summon) public SummonNavigation(Summon target) Parameters target Summon Properties ClampInSpawnRect public override bool ClampInSpawnRect { get; } Property Value bool EndFlyDistance public override int EndFlyDistance { get; } Property Value int EndMoveDistance public override int EndMoveDistance { get; } Property Value int InstanceShift public override int InstanceShift { get; } Property Value int IsFollowingOwner public bool IsFollowingOwner { get; } Property Value bool IsWandering public bool IsWandering { get; } Property Value bool JumpSpeed public override int JumpSpeed { get; } Property Value int MaxJumpDuration public override int MaxJumpDuration { get; } Property Value int MinimumFlyDuration public override int MinimumFlyDuration { get; } Property Value int NavigationEnable public override bool NavigationEnable { get; } Property Value bool StartFlyDistance public override int StartFlyDistance { get; } Property Value int StartMoveDistance public override int StartMoveDistance { get; } Property Value int Methods MakeFollowOwner() public void MakeFollowOwner() MakeWander(int, int) public void MakeWander(int x, int y) Parameters x int y int MakeWander<E>() public bool MakeWander<E>() where E : Entity Returns bool Type Parameters E OnActivated() public override void OnActivated() PhysicsUpdate() public override void PhysicsUpdate() Refresh() public void Refresh()"
  },
  "api/AngeliA.Platformer.Table.html": {
    "href": "api/AngeliA.Platformer.Table.html",
    "title": "Class Table | AngeliA",
    "summary": "Class Table Namespace AngeliA.Platformer Assembly com.angelia.platformer.dll public abstract class Table : Furniture, IMapItem, IBlockEntity Inheritance object Entity Furniture Table Implements IMapItem IBlockEntity Inherited Members Furniture.FurnitureLeftOrDown Furniture.FurnitureRightOrUp Furniture.Pose Furniture.ColliderBorder Furniture.OnActivated() Furniture.FirstUpdate() Furniture.BeforeUpdate() Furniture.LateUpdate() Furniture.GetIsHighlighted() Furniture.GetSpriteFromPose() Entity.Active Entity.X Entity.Y Entity.Width Entity.Height Entity.TypeID Entity.SpawnFrame Entity.FromWorld Entity.Rect Entity.InstanceOrder Entity.MapUnitPos Entity.InstanceID Entity.IgnoreReposition Entity.XY Entity.Size Entity.Center Entity.CenterX Entity.CenterY Entity.PivotUnitPosition Entity.OnInactivated() Entity.Update() Entity.AfterReposition(Int3, Int3) Entity.IgnoreDespawnFromMap(int) Entity.CancelIgnoreDespawnFromMap() Entity.Draw() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Properties ModuleType protected override Direction3 ModuleType { get; } Property Value Direction3"
  },
  "api/AngeliA.Platformer.TechGlitchEffectScope.html": {
    "href": "api/AngeliA.Platformer.TechGlitchEffectScope.html",
    "title": "Struct TechGlitchEffectScope | AngeliA",
    "summary": "Struct TechGlitchEffectScope Namespace AngeliA.Platformer Assembly com.angelia.platformer.dll public readonly struct TechGlitchEffectScope : IDisposable Implements IDisposable Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Constructors TechGlitchEffectScope() public TechGlitchEffectScope() TechGlitchEffectScope(int, Color32) public TechGlitchEffectScope(int range, Color32 tint = default) Parameters range int tint Color32 Methods Dispose() Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources. public void Dispose()"
  },
  "api/AngeliA.Platformer.TeleportTask.html": {
    "href": "api/AngeliA.Platformer.TeleportTask.html",
    "title": "Class TeleportTask | AngeliA",
    "summary": "Class TeleportTask Namespace AngeliA.Platformer Assembly com.angelia.platformer.dll public class TeleportTask : Task Inheritance object Task TeleportTask Inherited Members Task.LocalFrame Task.UserData Task.OnEnd() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Properties Duration public int Duration { get; set; } Property Value int TeleportFrom public Int2 TeleportFrom { get; set; } Property Value Int2 TeleportTo public Int3 TeleportTo { get; set; } Property Value Int3 UseParallax public bool UseParallax { get; set; } Property Value bool UseVignette public bool UseVignette { get; set; } Property Value bool WaitDuration public int WaitDuration { get; set; } Property Value int Methods FrameUpdate() public override TaskResult FrameUpdate() Returns TaskResult OnStart() public override void OnStart() TeleportFromDoor(int, int, int, int, int) public static TeleportTask TeleportFromDoor(int fromX, int fromY, int toX, int toY, int toZ) Parameters fromX int fromY int toX int toY int toZ int Returns TeleportTask TeleportFromPortal(int, int, int, int, int, bool) public static TeleportTask TeleportFromPortal(int fromX, int fromY, int toX, int toY, int toZ, bool samePosition) Parameters fromX int fromY int toX int toY int toZ int samePosition bool Returns TeleportTask"
  },
  "api/AngeliA.Platformer.Tornado.html": {
    "href": "api/AngeliA.Platformer.Tornado.html",
    "title": "Class Tornado | AngeliA",
    "summary": "Class Tornado Namespace AngeliA.Platformer Assembly com.angelia.platformer.dll [Entity.Layer(3)] public abstract class Tornado : Entity, IMapItem Inheritance object Entity Tornado Implements IMapItem Inherited Members Entity.Active Entity.X Entity.Y Entity.Width Entity.Height Entity.TypeID Entity.SpawnFrame Entity.FromWorld Entity.Rect Entity.InstanceOrder Entity.MapUnitPos Entity.InstanceID Entity.IgnoreReposition Entity.XY Entity.Size Entity.Center Entity.CenterX Entity.CenterY Entity.PivotUnitPosition Entity.OnInactivated() Entity.FirstUpdate() Entity.Update() Entity.AfterReposition(Int3, Int3) Entity.IgnoreDespawnFromMap(int) Entity.CancelIgnoreDespawnFromMap() Entity.Draw() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Properties ArtworkPart protected virtual SpriteCode ArtworkPart { get; } Property Value SpriteCode StiffFrameGap protected virtual int StiffFrameGap { get; } Property Value int StrengthGrounded protected virtual int StrengthGrounded { get; } Property Value int StrengthInAir protected virtual int StrengthInAir { get; } Property Value int Velocity protected abstract Int2 Velocity { get; } Property Value Int2 Methods BeforeUpdate() public override void BeforeUpdate() LateUpdate() public override void LateUpdate() OnActivated() public override void OnActivated()"
  },
  "api/AngeliA.Platformer.Track.html": {
    "href": "api/AngeliA.Platformer.Track.html",
    "title": "Class Track | AngeliA",
    "summary": "Class Track Namespace AngeliA.Platformer Assembly com.angelia.platformer.dll [Entity.MapEditorGroup(\"Contraption\", 0)] [Entity.Layer(3)] public abstract class Track : Entity, IMapItem, IBlockEntity Inheritance object Entity Track Implements IMapItem IBlockEntity Inherited Members Entity.Active Entity.X Entity.Y Entity.Width Entity.Height Entity.TypeID Entity.SpawnFrame Entity.FromWorld Entity.Rect Entity.InstanceOrder Entity.MapUnitPos Entity.InstanceID Entity.IgnoreReposition Entity.XY Entity.Size Entity.Center Entity.CenterX Entity.CenterY Entity.PivotUnitPosition Entity.OnInactivated() Entity.Update() Entity.AfterReposition(Int3, Int3) Entity.IgnoreDespawnFromMap(int) Entity.CancelIgnoreDespawnFromMap() Entity.Draw() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Properties AllowStraightConnection protected virtual bool AllowStraightConnection { get; } Property Value bool AllowTiltConnection protected virtual bool AllowTiltConnection { get; } Property Value bool BodySprite protected abstract SpriteCode BodySprite { get; } Property Value SpriteCode BodyTiltSprite protected abstract SpriteCode BodyTiltSprite { get; } Property Value SpriteCode CenterSprite protected abstract SpriteCode CenterSprite { get; } Property Value SpriteCode HangGap protected virtual int HangGap { get; } Property Value int LoadItemFromMapElement protected virtual bool LoadItemFromMapElement { get; } Property Value bool SlowDownWhenWalkerOverlap protected virtual bool SlowDownWhenWalkerOverlap { get; } Property Value bool Speed protected virtual int Speed { get; } Property Value int TurnBackWhenReachEnd protected virtual bool TurnBackWhenReachEnd { get; } Property Value bool Methods BeforeUpdate() public override void BeforeUpdate() FirstUpdate() public override void FirstUpdate() IsConnected(Direction8) public bool IsConnected(Direction8 direction) Parameters direction Direction8 Returns bool LateUpdate() public override void LateUpdate() OnActivated() public override void OnActivated() OnEntityRefresh() public void OnEntityRefresh() OnWalking(IAutoTrackWalker) protected virtual void OnWalking(IAutoTrackWalker walker) Parameters walker IAutoTrackWalker"
  },
  "api/AngeliA.Platformer.TrapDoor.html": {
    "href": "api/AngeliA.Platformer.TrapDoor.html",
    "title": "Class TrapDoor | AngeliA",
    "summary": "Class TrapDoor Namespace AngeliA.Platformer Assembly com.angelia.platformer.dll [Entity.Layer(3)] [Entity.MapEditorGroup(\"Contraption\", 0)] public abstract class TrapDoor : Entity, IMapItem, IBlockEntity, ICircuitOperator Inheritance object Entity TrapDoor Implements IMapItem IBlockEntity ICircuitOperator Inherited Members Entity.Active Entity.X Entity.Y Entity.Width Entity.Height Entity.TypeID Entity.SpawnFrame Entity.FromWorld Entity.Rect Entity.InstanceOrder Entity.MapUnitPos Entity.InstanceID Entity.IgnoreReposition Entity.XY Entity.Size Entity.Center Entity.CenterX Entity.CenterY Entity.PivotUnitPosition Entity.OnInactivated() Entity.Update() Entity.LateUpdate() Entity.AfterReposition(Int3, Int3) Entity.IgnoreDespawnFromMap(int) Entity.CancelIgnoreDespawnFromMap() Entity.Draw() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Properties IsOpening public bool IsOpening { get; set; } Property Value bool LastSwitchFrame public int LastSwitchFrame { get; } Property Value int OpenDelay public virtual int OpenDelay { get; } Property Value int OpenDuration public virtual int OpenDuration { get; } Property Value int TriggerByCircuit public virtual bool TriggerByCircuit { get; } Property Value bool TriggerWhenStepOn public virtual bool TriggerWhenStepOn { get; } Property Value bool Methods BeforeUpdate() public override void BeforeUpdate() Close() public virtual void Close() FirstUpdate() public override void FirstUpdate() HitCheck() protected virtual bool HitCheck() Returns bool OnActivated() public override void OnActivated() OnTriggeredByCircuit() public void OnTriggeredByCircuit() Open() public virtual void Open()"
  },
  "api/AngeliA.Platformer.TriggerablePlatform.html": {
    "href": "api/AngeliA.Platformer.TriggerablePlatform.html",
    "title": "Class TriggerablePlatform | AngeliA",
    "summary": "Class TriggerablePlatform Namespace AngeliA.Platformer Assembly com.angelia.platformer.dll public abstract class TriggerablePlatform : Platform, IMapItem, IBlockEntity, IUnitable, ICircuitOperator Inheritance object Entity Platform TriggerablePlatform Implements IMapItem IBlockEntity IUnitable ICircuitOperator Derived StepTriggerPlatform Inherited Members Platform.OneWay Platform.TouchedByPlayer Platform.TouchedByCharacter Platform.TouchedByRigidbody Platform.Pose Platform.FirstUpdate() Platform.BeforeUpdate() Platform.Update() Platform.LateUpdate() Platform.Move() Platform.OnRigidbodyTouched(Rigidbody) Platform.OnCharacterTouched(Character) Platform.OnPlayerTouched(Character) Platform.SetTouch(bool, bool, bool) Platform.RenderPlatformBlock(int) Entity.Active Entity.X Entity.Y Entity.Width Entity.Height Entity.TypeID Entity.SpawnFrame Entity.FromWorld Entity.Rect Entity.InstanceOrder Entity.MapUnitPos Entity.InstanceID Entity.IgnoreReposition Entity.XY Entity.Size Entity.Center Entity.CenterX Entity.CenterY Entity.PivotUnitPosition Entity.OnInactivated() Entity.AfterReposition(Int3, Int3) Entity.IgnoreDespawnFromMap(int) Entity.CancelIgnoreDespawnFromMap() Entity.Draw() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Properties AllowMultipleTrigger protected virtual bool AllowMultipleTrigger { get; } Property Value bool LastTriggerFrame public int LastTriggerFrame { get; } Property Value int TriggerMode protected virtual IUnitable.UniteMode TriggerMode { get; } Property Value IUnitable.UniteMode TriggeredData protected object TriggeredData { get; set; } Property Value object Methods OnActivated() public override void OnActivated() OnTriggered(object) protected virtual void OnTriggered(object data) Parameters data object Trigger(object) public virtual void Trigger(object data = null) Parameters data object"
  },
  "api/AngeliA.Platformer.Vehicle-1.html": {
    "href": "api/AngeliA.Platformer.Vehicle-1.html",
    "title": "Class Vehicle<M> | AngeliA",
    "summary": "Class Vehicle<M> Namespace AngeliA.Platformer Assembly com.angelia.platformer.dll public abstract class Vehicle<M> : Vehicle, IMapItem, IDamageReceiver, ICarrier, IWithCharacterMovement where M : VehicleMovement Type Parameters M Inheritance object Entity Rigidbody Vehicle Vehicle<M> Implements IMapItem IDamageReceiver ICarrier IWithCharacterMovement Derived BarrelVehicle RideableVehicle<RM> Inherited Members Vehicle.Movement Vehicle.Driver Vehicle.LastDriveChangedFrame Vehicle.DriverLocalPosition Vehicle.DriverLeaveLocalPosition Vehicle.StartDriveCooldown Vehicle.FillPyhsicsForDriver Vehicle.PhysicalLayer Vehicle.AirDragX Vehicle.AirDragY Vehicle.CarryOtherOnTop Vehicle.SelfCollisionMask Vehicle.FacingRight Vehicle.OnActivated() Vehicle.FirstUpdate() Vehicle.BeforeUpdate() Vehicle.Update() Vehicle.TakeDriver() Vehicle.StartDrive(Character) Vehicle.StopDrive() Vehicle.CheckForStartDrive(out Character) Vehicle.CheckForStopDrive() Vehicle.OnDamaged(Damage) Rigidbody.Rect Rigidbody.IsGrounded Rigidbody.IsInsideGround Rigidbody.InWater Rigidbody.VelocityX Rigidbody.VelocityY Rigidbody.BounceSpeedRate Rigidbody.OffsetX Rigidbody.OffsetY Rigidbody.GroundedID Rigidbody.PrevX Rigidbody.PrevY Rigidbody.DeltaPositionX Rigidbody.DeltaPositionY Rigidbody.MomentumX Rigidbody.MomentumY Rigidbody.RequireDodgeOverlap Rigidbody.EjectWhenInsideGround Rigidbody.GlobalGravity Rigidbody.FallingGravityScale Rigidbody.RisingGravityScale Rigidbody.CollisionMask Rigidbody.IgnoreGroundCheck Rigidbody.IgnoreGravity Rigidbody.IgnorePhysics Rigidbody.IgnoreInsideGround Rigidbody.IgnoreOneway Rigidbody.IgnoreMomentum Rigidbody.MaxGravitySpeed Rigidbody.WaterFloatSpeed Rigidbody.WaterSpeedRate Rigidbody.AllowBeingPush Rigidbody.DestroyWhenInsideGround Rigidbody.PerformMove(int, int, bool) Rigidbody.MakeGrounded(int, int) Rigidbody.CancelMakeGrounded() Rigidbody.Push(int) Rigidbody.PerformGroundCheck(IRect, out PhysicsCell) Rigidbody.FillAsTrigger(int, int) Rigidbody.FillAsOnewayUp(int, int) Rigidbody.OnInsideGroundDestroyed() Rigidbody.GroundedCheck() Rigidbody.InsideGroundCheck() Rigidbody.RefreshPrevPosition() Entity.Active Entity.X Entity.Y Entity.Width Entity.Height Entity.TypeID Entity.SpawnFrame Entity.FromWorld Entity.InstanceOrder Entity.MapUnitPos Entity.InstanceID Entity.IgnoreReposition Entity.XY Entity.Size Entity.Center Entity.CenterX Entity.CenterY Entity.PivotUnitPosition Entity.OnInactivated() Entity.LateUpdate() Entity.AfterReposition(Int3, Int3) Entity.IgnoreDespawnFromMap(int) Entity.CancelIgnoreDespawnFromMap() Entity.Draw() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Constructors Vehicle() public Vehicle()"
  },
  "api/AngeliA.Platformer.Vehicle.html": {
    "href": "api/AngeliA.Platformer.Vehicle.html",
    "title": "Class Vehicle | AngeliA",
    "summary": "Class Vehicle Namespace AngeliA.Platformer Assembly com.angelia.platformer.dll [Entity.Layer(3)] [Entity.RepositionWhenInactive(true)] public abstract class Vehicle : Rigidbody, IMapItem, IDamageReceiver, ICarrier, IWithCharacterMovement Inheritance object Entity Rigidbody Vehicle Implements IMapItem IDamageReceiver ICarrier IWithCharacterMovement Derived Vehicle<M> Inherited Members Rigidbody.Rect Rigidbody.IsGrounded Rigidbody.IsInsideGround Rigidbody.InWater Rigidbody.VelocityX Rigidbody.VelocityY Rigidbody.BounceSpeedRate Rigidbody.OffsetX Rigidbody.OffsetY Rigidbody.GroundedID Rigidbody.PrevX Rigidbody.PrevY Rigidbody.DeltaPositionX Rigidbody.DeltaPositionY Rigidbody.MomentumX Rigidbody.MomentumY Rigidbody.RequireDodgeOverlap Rigidbody.EjectWhenInsideGround Rigidbody.GlobalGravity Rigidbody.FallingGravityScale Rigidbody.RisingGravityScale Rigidbody.CollisionMask Rigidbody.IgnoreGroundCheck Rigidbody.IgnoreGravity Rigidbody.IgnorePhysics Rigidbody.IgnoreInsideGround Rigidbody.IgnoreOneway Rigidbody.IgnoreMomentum Rigidbody.MaxGravitySpeed Rigidbody.WaterFloatSpeed Rigidbody.WaterSpeedRate Rigidbody.AllowBeingPush Rigidbody.DestroyWhenInsideGround Rigidbody.PerformMove(int, int, bool) Rigidbody.MakeGrounded(int, int) Rigidbody.CancelMakeGrounded() Rigidbody.Push(int) Rigidbody.PerformGroundCheck(IRect, out PhysicsCell) Rigidbody.FillAsTrigger(int, int) Rigidbody.FillAsOnewayUp(int, int) Rigidbody.OnInsideGroundDestroyed() Rigidbody.GroundedCheck() Rigidbody.InsideGroundCheck() Rigidbody.RefreshPrevPosition() Entity.Active Entity.X Entity.Y Entity.Width Entity.Height Entity.TypeID Entity.SpawnFrame Entity.FromWorld Entity.InstanceOrder Entity.MapUnitPos Entity.InstanceID Entity.IgnoreReposition Entity.XY Entity.Size Entity.Center Entity.CenterX Entity.CenterY Entity.PivotUnitPosition Entity.OnInactivated() Entity.LateUpdate() Entity.AfterReposition(Int3, Int3) Entity.IgnoreDespawnFromMap(int) Entity.CancelIgnoreDespawnFromMap() Entity.Draw() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Properties AirDragX public override int AirDragX { get; } Property Value int AirDragY public override int AirDragY { get; } Property Value int CarryOtherOnTop public override bool CarryOtherOnTop { get; } Property Value bool Driver public Character Driver { get; } Property Value Character DriverLeaveLocalPosition public virtual Int2? DriverLeaveLocalPosition { get; } Property Value Int2? DriverLocalPosition public virtual Int2? DriverLocalPosition { get; } Property Value Int2? FacingRight public override bool FacingRight { get; } Property Value bool FillPyhsicsForDriver public virtual bool FillPyhsicsForDriver { get; } Property Value bool LastDriveChangedFrame public int LastDriveChangedFrame { get; } Property Value int Movement public VehicleMovement Movement { get; protected set; } Property Value VehicleMovement PhysicalLayer public override int PhysicalLayer { get; } Property Value int SelfCollisionMask public override int SelfCollisionMask { get; } Property Value int StartDriveCooldown public virtual int StartDriveCooldown { get; } Property Value int Methods BeforeUpdate() public override void BeforeUpdate() CheckForStartDrive(out Character) protected virtual bool CheckForStartDrive(out Character driver) Parameters driver Character Returns bool CheckForStopDrive() protected virtual bool CheckForStopDrive() Returns bool FirstUpdate() public override void FirstUpdate() OnActivated() public override void OnActivated() OnDamaged(Damage) public virtual void OnDamaged(Damage damage) Parameters damage Damage StartDrive(Character) public virtual void StartDrive(Character driver) Parameters driver Character StopDrive() public virtual void StopDrive() TakeDriver() protected virtual void TakeDriver() Update() public override void Update()"
  },
  "api/AngeliA.Platformer.VehicleMovement.html": {
    "href": "api/AngeliA.Platformer.VehicleMovement.html",
    "title": "Class VehicleMovement | AngeliA",
    "summary": "Class VehicleMovement Namespace AngeliA.Platformer Assembly com.angelia.platformer.dll public abstract class VehicleMovement : CharacterMovement Inheritance object CharacterMovement VehicleMovement Derived BarrelMovement RideableMovement Inherited Members CharacterMovement.MovementWidth CharacterMovement.MovementHeight CharacterMovement.WalkAvailable CharacterMovement.WalkSpeed CharacterMovement.WalkAcceleration CharacterMovement.WalkBrakeAcceleration CharacterMovement.WalkDeceleration CharacterMovement.RunAvailable CharacterMovement.RunSpeed CharacterMovement.RunAcceleration CharacterMovement.RunBrakeAcceleration CharacterMovement.RunDeceleration CharacterMovement.JumpCount CharacterMovement.JumpSpeed CharacterMovement.JumpReleaseSpeedRate CharacterMovement.JumpRiseGravityRate CharacterMovement.JumpBoostFromMoveRate CharacterMovement.FirstJumpWithRoll CharacterMovement.SubsequentJumpWithRoll CharacterMovement.JumpBreakRush CharacterMovement.JumpBreakDash CharacterMovement.AllowSquatJump CharacterMovement.JumpDownThroughOneway CharacterMovement.SquatAvailable CharacterMovement.SquatHeightAmount CharacterMovement.SquatMoveSpeed CharacterMovement.SquatAcceleration CharacterMovement.SquatDeceleration CharacterMovement.DashAvailable CharacterMovement.DashHeightAmount CharacterMovement.DashWithRoll CharacterMovement.DashPutoutFire CharacterMovement.DashSpeed CharacterMovement.DashDuration CharacterMovement.DashCooldown CharacterMovement.DashAcceleration CharacterMovement.DashCancelLoseRate CharacterMovement.RushAvailable CharacterMovement.RushHeightAmount CharacterMovement.RushInAir CharacterMovement.RushInWater CharacterMovement.RushWhenClimb CharacterMovement.RushWhenSquat CharacterMovement.RushPutoutFire CharacterMovement.RushSpeed CharacterMovement.RushStopSpeed CharacterMovement.RushDuration CharacterMovement.RushStiff CharacterMovement.RushCooldown CharacterMovement.RushAcceleration CharacterMovement.RushDeceleration CharacterMovement.SlipAvailable CharacterMovement.SlipAcceleration CharacterMovement.SlipDeceleration CharacterMovement.PoundAvailable CharacterMovement.PoundPutoutFire CharacterMovement.PoundSpeed CharacterMovement.SwimAvailable CharacterMovement.InWaterSpeedRate CharacterMovement.SwimWidthAmount CharacterMovement.SwimHeightAmount CharacterMovement.SwimSpeed CharacterMovement.SwimJumpSpeed CharacterMovement.SwimAcceleration CharacterMovement.SwimDeceleration CharacterMovement.ClimbAvailable CharacterMovement.AllowJumpWhenClimbing CharacterMovement.ClimbSpeedX CharacterMovement.ClimbSpeedY CharacterMovement.FlyAvailable CharacterMovement.FlyHeightAmount CharacterMovement.GlideOnFlying CharacterMovement.FlyCooldown CharacterMovement.FlyRiseSpeed CharacterMovement.FlyGravityRiseRate CharacterMovement.FlyGravityFallRate CharacterMovement.FlyFallSpeed CharacterMovement.FlyMoveSpeed CharacterMovement.FlyAcceleration CharacterMovement.FlyDeceleration CharacterMovement.SlideAvailable CharacterMovement.SlideOnAnyBlock CharacterMovement.ResetJumpCountWhenSlide CharacterMovement.SlideJumpKickSpeed CharacterMovement.SlideDropSpeed CharacterMovement.GrabTopAvailable CharacterMovement.GrabSideAvailable CharacterMovement.GrabTopHeightAmount CharacterMovement.GrabSideHeightAmount CharacterMovement.ResetJumpCountWhenGrab CharacterMovement.GrabFlipThroughDownAvailable CharacterMovement.GrabFlipThroughUpAvailable CharacterMovement.GrabFlipThroughDuration CharacterMovement.GrabMoveSpeedX CharacterMovement.GrabMoveSpeedY CharacterMovement.GrabSideJumpKickSpeed CharacterMovement.CrashAvailable CharacterMovement.CrashWhenSlippy CharacterMovement.CrashDuration CharacterMovement.CrashRunDurationRequire CharacterMovement.CrashDeceleration CharacterMovement.PushAvailable CharacterMovement.PushSpeed CharacterMovement.Target CharacterMovement.TargetCharacter CharacterMovement.LastMoveDirection CharacterMovement.IntendedX CharacterMovement.IntendedY CharacterMovement.CurrentJumpCount CharacterMovement.FacingRight CharacterMovement.FacingFront CharacterMovement.ShouldRun CharacterMovement.LastGroundFrame CharacterMovement.LastGroundingFrame CharacterMovement.LastStartMoveFrame CharacterMovement.LastEndMoveFrame CharacterMovement.LastJumpFrame CharacterMovement.LastClimbFrame CharacterMovement.LastDashFrame CharacterMovement.LastRushStartFrame CharacterMovement.LastCrashFrame CharacterMovement.LastSlippyMoveStartFrame CharacterMovement.LastSquatStartFrame CharacterMovement.LastSquattingFrame CharacterMovement.LastPoundingFrame CharacterMovement.LastSlidingFrame CharacterMovement.LastGrabbingFrame CharacterMovement.LastFlyFrame CharacterMovement.LastGrabFlipUpFrame CharacterMovement.LastGrabFlipDownFrame CharacterMovement.LastGrabCancelFrame CharacterMovement.LastStartRunFrame CharacterMovement.LastFacingChangeFrame CharacterMovement.MovementState CharacterMovement.IsGrabFlipping CharacterMovement.IsGrabFlippingUp CharacterMovement.IsGrabFlippingDown CharacterMovement.IsMoving CharacterMovement.IsWalking CharacterMovement.IsRunning CharacterMovement.IsRolling CharacterMovement.IsDashing CharacterMovement.IsRushing CharacterMovement.IsCrashing CharacterMovement.IsSquatting CharacterMovement.IsPounding CharacterMovement.IsClimbing CharacterMovement.IsFlying CharacterMovement.IsSliding CharacterMovement.IsGrabbingTop CharacterMovement.IsGrabbingSide CharacterMovement.Rect CharacterMovement.X CharacterMovement.Y CharacterMovement.Width CharacterMovement.Height CharacterMovement.OffsetX CharacterMovement.OffsetY CharacterMovement.VelocityX CharacterMovement.VelocityY CharacterMovement.IsInsideGround CharacterMovement.InWater CharacterMovement.IsGrounded CharacterMovement.CollisionMask CharacterMovement.OnActivated() CharacterMovement.PhysicsUpdateGamePlay() CharacterMovement.UpdateLater() CharacterMovement.ReloadMovementConfigFromFile() CharacterMovement.StopDash() CharacterMovement.StopRush() CharacterMovement.StopCrash() CharacterMovement.LockFacingRight(bool, int) CharacterMovement.LockSquat(int) CharacterMovement.SetSpeedRate(int, int) CharacterMovement.CalculateMovementState(CharacterMovement) CharacterMovement.GetMovementState() CharacterMovement.MoveLogic(int, int, bool) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Constructors VehicleMovement(Rigidbody) public VehicleMovement(Rigidbody rig) Parameters rig Rigidbody Properties Driver public Character Driver { get; set; } Property Value Character SyncFromConfigFile Does movement config sync with json file in game universe folder public override sealed bool SyncFromConfigFile { get; } Property Value bool Methods Crash() Perform crash (call this once when crash start) public override void Crash() Dash() Perform dash (call this once when dash start) public override void Dash() HoldJump(bool) Is character holding jump (call this every frame no matter character is jumpping or not) public override void HoldJump(bool holding) Parameters holding bool InitializeMeta() protected virtual void InitializeMeta() Jump(bool) Perform jump (call this once when jump start) public override void Jump(bool isSquatJump = false) Parameters isSquatJump bool Is this jump a squat jump or not Move(Direction3, Direction3, bool) Move the character public override void Move(Direction3 x, Direction3 y, bool walk = false) Parameters x Direction3 y Direction3 walk bool True if character want to walk instead of run Pound() Perform pound (call this once when pound start) public override void Pound() Rush() Perform rush (call this once when rush start) public override void Rush() Stop() Stop current movement public override void Stop()"
  },
  "api/AngeliA.Platformer.Wallpaper.html": {
    "href": "api/AngeliA.Platformer.Wallpaper.html",
    "title": "Class Wallpaper | AngeliA",
    "summary": "Class Wallpaper Namespace AngeliA.Platformer Assembly com.angelia.platformer.dll [Entity.MapEditorGroup(\"Wallpaper\", 0)] public abstract class Wallpaper : Entity, IMapItem Inheritance object Entity Wallpaper Implements IMapItem Inherited Members Entity.Active Entity.X Entity.Y Entity.Width Entity.Height Entity.TypeID Entity.SpawnFrame Entity.FromWorld Entity.Rect Entity.InstanceOrder Entity.MapUnitPos Entity.InstanceID Entity.IgnoreReposition Entity.XY Entity.Size Entity.Center Entity.CenterX Entity.CenterY Entity.PivotUnitPosition Entity.OnInactivated() Entity.FirstUpdate() Entity.AfterReposition(Int3, Int3) Entity.IgnoreDespawnFromMap(int) Entity.CancelIgnoreDespawnFromMap() Entity.Draw() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Properties Amount protected int Amount { get; } Property Value int Methods BeforeUpdate() public override void BeforeUpdate() DrawBackground(IRect) protected abstract void DrawBackground(IRect backgroundRect) Parameters backgroundRect IRect GetSkyTint(int) protected Color32 GetSkyTint(int y) Parameters y int Returns Color32 LateUpdate() public override sealed void LateUpdate() OnActivated() public override void OnActivated() OnGameUpdate() [OnGameUpdate(0)] public static void OnGameUpdate() Update() public override void Update()"
  },
  "api/AngeliA.Platformer.Wardrobe.html": {
    "href": "api/AngeliA.Platformer.Wardrobe.html",
    "title": "Class Wardrobe | AngeliA",
    "summary": "Class Wardrobe Namespace AngeliA.Platformer Assembly com.angelia.platformer.dll public abstract class Wardrobe : InventoryFurniture<InventoryPartnerUI>, IMapItem, IBlockEntity, IActionTarget Inheritance object Entity Furniture ActionFurniture OpenableFurniture InventoryFurniture InventoryFurniture<InventoryPartnerUI> Wardrobe Implements IMapItem IBlockEntity IActionTarget Inherited Members InventoryFurniture.PartnerID InventoryFurniture.InventoryID InventoryFurniture.UnlockItemInside InventoryFurniture.OnActivated() InventoryFurniture.LateUpdate() InventoryFurniture.Invoke() InventoryFurniture.AllowInvoke() InventoryFurniture.SetOpen(bool) InventoryFurniture.TryGetInventoryUI(int, out InventoryPartnerUI) InventoryFurniture.IsInventoryFurniture(int, out int) OpenableFurniture.Open Furniture.ModuleType Furniture.FurnitureLeftOrDown Furniture.FurnitureRightOrUp Furniture.Pose Furniture.ColliderBorder Furniture.FirstUpdate() Furniture.BeforeUpdate() Furniture.GetIsHighlighted() Furniture.GetSpriteFromPose() Entity.Active Entity.X Entity.Y Entity.Width Entity.Height Entity.TypeID Entity.SpawnFrame Entity.FromWorld Entity.Rect Entity.InstanceOrder Entity.MapUnitPos Entity.InstanceID Entity.IgnoreReposition Entity.XY Entity.Size Entity.Center Entity.CenterX Entity.CenterY Entity.PivotUnitPosition Entity.OnInactivated() Entity.Update() Entity.AfterReposition(Int3, Int3) Entity.IgnoreDespawnFromMap(int) Entity.CancelIgnoreDespawnFromMap() Entity.Draw() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Properties InventoryColumn protected override int InventoryColumn { get; } Property Value int InventoryRow protected override int InventoryRow { get; } Property Value int"
  },
  "api/AngeliA.Platformer.html": {
    "href": "api/AngeliA.Platformer.html",
    "title": "Namespace AngeliA.Platformer | AngeliA",
    "summary": "Namespace AngeliA.Platformer Classes ActionFurniture Armor<P, N> ArrowBullet ArrowBullet<I> AuraItem<B> BarrelMovement BarrelVehicle BeamBullet Bed BodyArmor<P, N> Breakable BulletShooter BulletShooter<B> Burner<F> CabinetIdol CameraAutoDirection CameraAutoScroll CameraGate CameraGateDown CameraGateLeft CameraGateRight CameraGateUp CarryingPipe ChainCrusher Chair CheckAltar CheckAltar<CP> CheckPoint CheckPointPortal CircleFlamePortal Clock Collectable Conveyor CraftingTable CraftingUI DefaultCharacter DollItem DonutBlock Door EmptyMovableBullet Enemy Explosion ExplosiveMovableBullet Fire FireSprinkler FloatingCombatText FrozenZone Furniture Gloves<P, N> GrandfatherClock HealBullet HealWeapon<B> Helmet<P, N> InventoryFurniture InventoryFurniture<UI> ItemBasedSummon Launcher Leaf Light Liquid MapChest MeleeBullet MeleeWeapon MiniGame MiniGameTask MissileBullet MissileWeapon<B> MomentumBooster MovableBullet Navigation Oneway OpenableFurniture OpenableUiFurniture OpeningTask PickTool Plant Platform PlatformerUtil Portal PoseAnimation_PhotoPose PoseAnimation_Ride PoseAnimation_Sit PoseAnimation_SlidingSit PoseAnimation_SlidingSitHigh PoseAttack_Bow PoseAttack_Float PoseAttack_Hand PoseAttack_MagicPole PoseAttack_MagicSingleHanded PoseAttack_Polearm PoseAttack_Scratch PoseAttack_Shooting PoseAttack_WaveDoubleHanded PoseAttack_WaveDoubleHanded_SmashOnly PoseAttack_WaveEachHand PoseAttack_WaveEachHand_SmashOnly PoseAttack_WavePolearm PoseAttack_WavePolearm_SmashOnly PoseAttack_WaveSingleHanded PoseAttack_WaveSingleHanded_SmashOnly PoseHandheld_Bow PoseHandheld_DoubleHanded PoseHandheld_EachHand PoseHandheld_Float PoseHandheld_MagicPole PoseHandheld_Polearm PoseHandheld_Shooting PoseHandheld_SingleHanded PoseHandheld_Throwing ProjectileWeapon<B> RideableMovement RideableVehicle<RM> RigidbodyNavigation Shoes<P, N> Slime Slope Spring StepTriggerPlatform Summon SummonItem<T> SummonNavigation Table TeleportTask Tornado Track TrapDoor TriggerablePlatform Vehicle VehicleMovement Vehicle<M> Wallpaper Wardrobe Structs GlitchScope Navigation.Operation TechGlitchEffectScope Interfaces IAutoTrackWalker IPingPongWalker IRider IUnitable Navigation.IExpandRangeValidator Enums DonutBlock.BreakMode HelmetWearingMode IUnitable.UniteMode NavigationOperateMotion RigidbodyNavigationState Delegates MiniGame.SpawnBadgeHandler"
  },
  "api/AngeliA.PlayerMenuItem-1.html": {
    "href": "api/AngeliA.PlayerMenuItem-1.html",
    "title": "Class PlayerMenuItem<UI> | AngeliA",
    "summary": "Class PlayerMenuItem<UI> Namespace AngeliA Assembly AngeliA Framework.dll public abstract class PlayerMenuItem<UI> : Item, IMapItem where UI : PlayerMenuPartnerUI Type Parameters UI Inheritance object Item PlayerMenuItem<UI> Implements IMapItem Inherited Members Item.AllowDuplicateUpdate Item.EmbedIntoLevel Item.TypeID Item.BeforeItemUpdate_FromInventory(Character, int, int) Item.OnItemUpdate_FromInventory(Character, int, int) Item.OnPoseAnimationUpdate_FromInventory(PoseCharacterRenderer, int, int) Item.OnTakeDamage_FromInventory(Character, int, int, ref Damage) Item.OnCharacterAttack_FromInventory(Character, Bullet, int, int) Item.BeforeItemUpdate_FromEquipment(Character) Item.OnItemUpdate_FromEquipment(Character) Item.BeforePoseAnimationUpdate_FromEquipment(PoseCharacterRenderer) Item.OnPoseAnimationUpdate_FromEquipment(PoseCharacterRenderer) Item.OnTakeDamage_FromEquipment(Character, ref Damage) Item.OnCharacterAttack_FromEquipment(Character, Bullet) Item.TryRepairEquipment(Character) Item.OnItemUpdate_FromItemHolder(ItemHolder, int) Item.OnCollect(Character) Item.ItemConditionCheck(Character) Item.DrawItem(Entity, IRect, Color32, int) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Constructors PlayerMenuItem() public PlayerMenuItem() Properties Column protected abstract int Column { get; } Property Value int MaxStackCount public override int MaxStackCount { get; } Property Value int Row protected abstract int Row { get; } Property Value int Methods CanUse(Character) public override bool CanUse(Character character) Parameters character Character Returns bool OnPanelOpened(UI) protected virtual void OnPanelOpened(UI panelUI) Parameters panelUI UI Use(Character, int, int, out bool) public override bool Use(Character character, int inventoryID, int itemIndex, out bool consume) Parameters character Character inventoryID int itemIndex int consume bool Returns bool"
  },
  "api/AngeliA.PlayerMenuPartnerUI.html": {
    "href": "api/AngeliA.PlayerMenuPartnerUI.html",
    "title": "Class PlayerMenuPartnerUI | AngeliA",
    "summary": "Class PlayerMenuPartnerUI Namespace AngeliA Assembly AngeliA Framework.dll public abstract class PlayerMenuPartnerUI : IWindowEntityUI Inheritance object PlayerMenuPartnerUI Implements IWindowEntityUI Derived InventoryPartnerUI Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Properties BackgroundRect public IRect BackgroundRect { get; protected set; } Property Value IRect Column public virtual int Column { get; } Property Value int InventoryID public int InventoryID { get; set; } Property Value int ItemFieldSize public virtual int ItemFieldSize { get; } Property Value int MouseInPanel public bool MouseInPanel { get; set; } Property Value bool Row public virtual int Row { get; } Property Value int Methods DrawPanel(IRect) public virtual void DrawPanel(IRect panelRect) Parameters panelRect IRect EnablePanel() public virtual void EnablePanel() Unify(int) protected static int Unify(int value) Parameters value int Returns int"
  },
  "api/AngeliA.PlayerMenuUI.html": {
    "href": "api/AngeliA.PlayerMenuUI.html",
    "title": "Class PlayerMenuUI | AngeliA",
    "summary": "Class PlayerMenuUI Namespace AngeliA Assembly AngeliA Framework.dll [Entity.Capacity(1, 1)] public class PlayerMenuUI : EntityUI, IMapItem Inheritance object Entity EntityUI PlayerMenuUI Implements IMapItem Inherited Members EntityUI.BlockEvent EntityUI.FirstUpdate() EntityUI.Update() EntityUI.LateUpdate() EntityUI.Unify(int) Entity.Active Entity.X Entity.Y Entity.Width Entity.Height Entity.TypeID Entity.SpawnFrame Entity.FromWorld Entity.Rect Entity.InstanceOrder Entity.MapUnitPos Entity.InstanceID Entity.IgnoreReposition Entity.XY Entity.Size Entity.Center Entity.CenterX Entity.CenterY Entity.PivotUnitPosition Entity.BeforeUpdate() Entity.AfterReposition(Int3, Int3) Entity.IgnoreDespawnFromMap(int) Entity.CancelIgnoreDespawnFromMap() Entity.Draw() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Constructors PlayerMenuUI() public PlayerMenuUI() Fields EQUIP_ITEM_HEIGHT public const int EQUIP_ITEM_HEIGHT = 48 Field Value int EQUIP_PANEL_WIDTH public const int EQUIP_PANEL_WIDTH = 256 Field Value int INFO_WIDTH public const int INFO_WIDTH = 142 Field Value int ITEM_SIZE public const int ITEM_SIZE = 42 Field Value int PREVIEW_SIZE public const int PREVIEW_SIZE = 108 Field Value int Properties CursorInBottomPanel public bool CursorInBottomPanel { get; set; } Property Value bool CursorIndex public int CursorIndex { get; set; } Property Value int Instance public static PlayerMenuUI Instance { get; } Property Value PlayerMenuUI Partner public PlayerMenuPartnerUI Partner { get; } Property Value PlayerMenuPartnerUI ShowingUI public static bool ShowingUI { get; } Property Value bool TakingCount public int TakingCount { get; } Property Value int TakingID public int TakingID { get; } Property Value int TopPanelColumn public int TopPanelColumn { get; } Property Value int TopPanelRow public int TopPanelRow { get; } Property Value int Methods CloseMenu() public static void CloseMenu() DrawItemField(int, int, int, IRect, bool, int) public void DrawItemField(int itemID, int itemCount, int frameCode, IRect itemRect, bool interactable, int uiIndex) Parameters itemID int itemCount int frameCode int itemRect IRect interactable bool uiIndex int DrawItemFieldUI(int, int, int, IRect, bool, int) public static void DrawItemFieldUI(int itemID, int itemCount, int frameCode, IRect itemRect, bool interactable, int uiIndex) Parameters itemID int itemCount int frameCode int itemRect IRect interactable bool uiIndex int DrawTopInventory(int, int, int, int) public static void DrawTopInventory(int inventoryID, int column, int row, int avatarID = 0) Parameters inventoryID int column int row int avatarID int OnActivated() public override void OnActivated() OnInactivated() public override void OnInactivated() OpenMenu() public static PlayerMenuUI OpenMenu() Returns PlayerMenuUI OpenMenuWithPartner(PlayerMenuPartnerUI, int) public static bool OpenMenuWithPartner(PlayerMenuPartnerUI partner, int partnerInventoryID) Parameters partner PlayerMenuPartnerUI partnerInventoryID int Returns bool SetTaking(int, int) public void SetTaking(int takingID, int takingCount) Parameters takingID int takingCount int UpdateUI() public override void UpdateUI()"
  },
  "api/AngeliA.PlayerQuickMenuUI.html": {
    "href": "api/AngeliA.PlayerQuickMenuUI.html",
    "title": "Class PlayerQuickMenuUI | AngeliA",
    "summary": "Class PlayerQuickMenuUI Namespace AngeliA Assembly AngeliA Framework.dll [Entity.Capacity(1, 1)] public class PlayerQuickMenuUI : EntityUI, IMapItem, IWindowEntityUI Inheritance object Entity EntityUI PlayerQuickMenuUI Implements IMapItem IWindowEntityUI Inherited Members EntityUI.BlockEvent EntityUI.FirstUpdate() EntityUI.Update() EntityUI.LateUpdate() EntityUI.Unify(int) Entity.Active Entity.X Entity.Y Entity.Width Entity.Height Entity.TypeID Entity.SpawnFrame Entity.FromWorld Entity.Rect Entity.InstanceOrder Entity.MapUnitPos Entity.InstanceID Entity.IgnoreReposition Entity.XY Entity.Size Entity.Center Entity.CenterX Entity.CenterY Entity.PivotUnitPosition Entity.BeforeUpdate() Entity.AfterReposition(Int3, Int3) Entity.IgnoreDespawnFromMap(int) Entity.CancelIgnoreDespawnFromMap() Entity.Draw() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Constructors PlayerQuickMenuUI() public PlayerQuickMenuUI() Properties BackgroundRect public IRect BackgroundRect { get; } Property Value IRect Instance public static PlayerQuickMenuUI Instance { get; } Property Value PlayerQuickMenuUI IsDirty public bool IsDirty { get; } Property Value bool ShowingUI public static bool ShowingUI { get; } Property Value bool Methods CloseMenu() public static void CloseMenu() OnActivated() public override void OnActivated() OnInactivated() public override void OnInactivated() OpenMenu() public static PlayerQuickMenuUI OpenMenu() Returns PlayerQuickMenuUI UpdateUI() public override void UpdateUI()"
  },
  "api/AngeliA.PlayerSystem.html": {
    "href": "api/AngeliA.PlayerSystem.html",
    "title": "Class PlayerSystem | AngeliA",
    "summary": "Class PlayerSystem Namespace AngeliA Assembly AngeliA Framework.dll public static class PlayerSystem Inheritance object PlayerSystem Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields DragPlayerInMiddleButtonToMove_DebugOnly public static readonly FrameBasedBool DragPlayerInMiddleButtonToMove_DebugOnly Field Value FrameBasedBool IgnorePlayerView public static readonly FrameBasedBool IgnorePlayerView Field Value FrameBasedBool TargetViewHeight public static readonly FrameBasedInt TargetViewHeight Field Value FrameBasedInt Properties AimViewX public static int AimViewX { get; } Property Value int AimViewY public static int AimViewY { get; } Property Value int AllowPlayerMenuUI public static bool AllowPlayerMenuUI { get; } Property Value bool AllowQuickPlayerMenuUI public static bool AllowQuickPlayerMenuUI { get; } Property Value bool Enable public static bool Enable { get; } Property Value bool HomeUnitPosition public static Int3 HomeUnitPosition { get; set; } Property Value Int3 IgnoreInputFrame public static int IgnoreInputFrame { get; } Property Value int IgnoringAction public static bool IgnoringAction { get; } Property Value bool IgnoringInput public static bool IgnoringInput { get; } Property Value bool PlayableCharactersCount public static int PlayableCharactersCount { get; } Property Value int RespawnCpUnitPosition public static Int3? RespawnCpUnitPosition { get; set; } Property Value Int3? Selecting public static Character Selecting { get; } Property Value Character TargetActionEntity public static IActionTarget TargetActionEntity { get; } Property Value IActionTarget UnlockedPlayerCount public static int UnlockedPlayerCount { get; } Property Value int Methods ForAllPlayables() public static IEnumerable<int> ForAllPlayables() Returns IEnumerable<int> ForAllUnlockedPlayers() public static IEnumerable<int> ForAllUnlockedPlayers() Returns IEnumerable<int> ForceUpdateGroundedForView(int) public static void ForceUpdateGroundedForView(int duration = 1) Parameters duration int GetCameraShiftOffset(int) public static int GetCameraShiftOffset(int cameraHeight) Parameters cameraHeight int Returns int GetDefaultPlayerID(bool) public static int GetDefaultPlayerID(bool forceSelect = false) Parameters forceSelect bool Returns int GetPlayerFinalRespawnUnitPosition() public static Int3 GetPlayerFinalRespawnUnitPosition() Returns Int3 IgnoreAction(int) public static void IgnoreAction(int duration = 1) Parameters duration int IgnoreAttack(int) public static void IgnoreAttack(int duration = 1) Parameters duration int IgnoreInput(int) public static void IgnoreInput(int duration = 1) Parameters duration int IgnorePlayerMenu(int) public static void IgnorePlayerMenu(int duration = 1) Parameters duration int IgnorePlayerQuickMenu(int) public static void IgnorePlayerQuickMenu(int duration = 1) Parameters duration int IsPlayerUnlocked(int) public static bool IsPlayerUnlocked(int id) Parameters id int Returns bool SelectCharacterAsPlayer(int, bool) public static void SelectCharacterAsPlayer(int characterTypeID, bool failbackToDefault = true) Parameters characterTypeID int failbackToDefault bool SetCharacterAsPlayer(Character) public static void SetCharacterAsPlayer(Character target) Parameters target Character UnlockPlayer(int) public static void UnlockPlayer(int id) Parameters id int"
  },
  "api/AngeliA.PoseAnimation.html": {
    "href": "api/AngeliA.PoseAnimation.html",
    "title": "Class PoseAnimation | AngeliA",
    "summary": "Class PoseAnimation Namespace AngeliA Assembly AngeliA Framework.dll public abstract class PoseAnimation Inheritance object PoseAnimation Derived HandheldPoseAnimation PoseAnimation_PhotoPose PoseAnimation_Ride PoseAnimation_Sit PoseAnimation_SlidingSit PoseAttack_Bow PoseAttack_Float PoseAttack_Hand PoseAttack_MagicPole PoseAttack_MagicSingleHanded PoseAttack_Polearm PoseAttack_Scratch PoseAttack_Shooting PoseAttack_WaveDoubleHanded PoseAttack_WaveEachHand PoseAttack_WavePolearm PoseAttack_WaveSingleHanded PoseAnimation_Animation_TakingDamage PoseAnimation_Brake PoseAnimation_Climb PoseAnimation_Crash PoseAnimation_Dash PoseAnimation_Fly PoseAnimation_GrabSide PoseAnimation_GrabTop PoseAnimation_Idle PoseAnimation_JumpDown PoseAnimation_JumpUp PoseAnimation_PassOut PoseAnimation_Pound PoseAnimation_Rolling PoseAnimation_Run PoseAnimation_Rush PoseAnimation_Sleep PoseAnimation_Slide PoseAnimation_Spin PoseAnimation_SquatIdle PoseAnimation_SquatMove PoseAnimation_SwimIdle PoseAnimation_SwimMove PoseAnimation_Walk PosePerform_Block PosePerform_Tool Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Fields A2G protected const int A2G = 16 Field Value int AnimationType protected static CharacterAnimationType AnimationType Field Value CharacterAnimationType AttackEase protected static float AttackEase Field Value float AttackLerp protected static float AttackLerp Field Value float Attackness protected static CharacterAttackness Attackness Field Value CharacterAttackness Body protected static BodyPart Body Field Value BodyPart CurrentAnimationFrame protected static int CurrentAnimationFrame Field Value int FacingFront protected static bool FacingFront Field Value bool FacingRight protected static bool FacingRight Field Value bool FacingSign protected static int FacingSign Field Value int FootL protected static BodyPart FootL Field Value BodyPart FootR protected static BodyPart FootR Field Value BodyPart FrontSign protected static int FrontSign Field Value int HandL protected static BodyPart HandL Field Value BodyPart HandR protected static BodyPart HandR Field Value BodyPart Head protected static BodyPart Head Field Value BodyPart Hip protected static BodyPart Hip Field Value BodyPart IsChargingAttack protected static bool IsChargingAttack Field Value bool LowerArmL protected static BodyPart LowerArmL Field Value BodyPart LowerArmR protected static BodyPart LowerArmR Field Value BodyPart LowerLegL protected static BodyPart LowerLegL Field Value BodyPart LowerLegR protected static BodyPart LowerLegR Field Value BodyPart Movement protected static CharacterMovement Movement Field Value CharacterMovement POSE_Z_HAND protected const int POSE_Z_HAND = 36 Field Value int Rendering protected static PoseCharacterRenderer Rendering Field Value PoseCharacterRenderer ShoulderL protected static BodyPart ShoulderL Field Value BodyPart ShoulderR protected static BodyPart ShoulderR Field Value BodyPart Target protected static Character Target Field Value Character UpperArmL protected static BodyPart UpperArmL Field Value BodyPart UpperArmR protected static BodyPart UpperArmR Field Value BodyPart UpperLegL protected static BodyPart UpperLegL Field Value BodyPart UpperLegR protected static BodyPart UpperLegR Field Value BodyPart Properties DontBlendToNext protected virtual bool DontBlendToNext { get; } Property Value bool DontBlendToPrev protected virtual bool DontBlendToPrev { get; } Property Value bool ValidHeadPosition protected virtual bool ValidHeadPosition { get; } Property Value bool Methods Animate(PoseCharacterRenderer) public virtual void Animate(PoseCharacterRenderer renderer) Parameters renderer PoseCharacterRenderer AttackHeadDown(float, int, int, int) protected static void AttackHeadDown(float ease01, int headOffsetXAmount = 1000, int headOffsetYAmount = 1000, int headRotateAmount = 1000) Parameters ease01 float headOffsetXAmount int headOffsetYAmount int headRotateAmount int AttackLegShake(float) protected static void AttackLegShake(float ease01) Parameters ease01 float OnGameInitialize() [OnGameInitialize(-129)] public static void OnGameInitialize() PerformAnimation(PoseAnimation, PoseCharacterRenderer) public static void PerformAnimation(PoseAnimation animation, PoseCharacterRenderer renderer) Parameters animation PoseAnimation renderer PoseCharacterRenderer PerformAnimationBlend(PoseAnimation, PoseAnimation, float, PoseCharacterRenderer) public static void PerformAnimationBlend(PoseAnimation animationA, PoseAnimation animationB, float blend01, PoseCharacterRenderer renderer) Parameters animationA PoseAnimation animationB PoseAnimation blend01 float renderer PoseCharacterRenderer PerformAnimationBlendFromPool(int, int, float, PoseCharacterRenderer) public static void PerformAnimationBlendFromPool(int idA, int idB, float blend01, PoseCharacterRenderer renderer) Parameters idA int idB int blend01 float renderer PoseCharacterRenderer PerformAnimationFromPool(int, PoseCharacterRenderer) public static void PerformAnimationFromPool(int id, PoseCharacterRenderer renderer) Parameters id int renderer PoseCharacterRenderer ResetShoulderAndUpperArmPos(bool, bool) protected static void ResetShoulderAndUpperArmPos(bool resetLeft = true, bool resetRight = true) Parameters resetLeft bool resetRight bool SetAsAnimating(PoseCharacterRenderer) protected static void SetAsAnimating(PoseCharacterRenderer renderer) Parameters renderer PoseCharacterRenderer TryGetAnimationFromPool(int, out PoseAnimation) public static bool TryGetAnimationFromPool(int id, out PoseAnimation result) Parameters id int result PoseAnimation Returns bool"
  },
  "api/AngeliA.PoseAnimation_Animation_TakingDamage.html": {
    "href": "api/AngeliA.PoseAnimation_Animation_TakingDamage.html",
    "title": "Class PoseAnimation_Animation_TakingDamage | AngeliA",
    "summary": "Class PoseAnimation_Animation_TakingDamage Namespace AngeliA Assembly AngeliA Framework.dll public class PoseAnimation_Animation_TakingDamage : PoseAnimation Inheritance object PoseAnimation PoseAnimation_Animation_TakingDamage Inherited Members PoseAnimation.POSE_Z_HAND PoseAnimation.A2G PoseAnimation.ValidHeadPosition PoseAnimation.DontBlendToNext PoseAnimation.DontBlendToPrev PoseAnimation.Target PoseAnimation.Rendering PoseAnimation.Movement PoseAnimation.Attackness PoseAnimation.Head PoseAnimation.Body PoseAnimation.Hip PoseAnimation.ShoulderL PoseAnimation.ShoulderR PoseAnimation.UpperArmL PoseAnimation.UpperArmR PoseAnimation.LowerArmL PoseAnimation.LowerArmR PoseAnimation.HandL PoseAnimation.HandR PoseAnimation.UpperLegL PoseAnimation.UpperLegR PoseAnimation.LowerLegL PoseAnimation.LowerLegR PoseAnimation.FootL PoseAnimation.FootR PoseAnimation.FacingRight PoseAnimation.FacingFront PoseAnimation.IsChargingAttack PoseAnimation.FacingSign PoseAnimation.FrontSign PoseAnimation.CurrentAnimationFrame PoseAnimation.AnimationType PoseAnimation.AttackLerp PoseAnimation.AttackEase PoseAnimation.OnGameInitialize() PoseAnimation.PerformAnimationFromPool(int, PoseCharacterRenderer) PoseAnimation.PerformAnimation(PoseAnimation, PoseCharacterRenderer) PoseAnimation.PerformAnimationBlendFromPool(int, int, float, PoseCharacterRenderer) PoseAnimation.PerformAnimationBlend(PoseAnimation, PoseAnimation, float, PoseCharacterRenderer) PoseAnimation.TryGetAnimationFromPool(int, out PoseAnimation) PoseAnimation.SetAsAnimating(PoseCharacterRenderer) PoseAnimation.ResetShoulderAndUpperArmPos(bool, bool) PoseAnimation.AttackHeadDown(float, int, int, int) PoseAnimation.AttackLegShake(float) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Methods Animate(PoseCharacterRenderer) public override void Animate(PoseCharacterRenderer renderer) Parameters renderer PoseCharacterRenderer"
  },
  "api/AngeliA.PoseAnimation_Brake.html": {
    "href": "api/AngeliA.PoseAnimation_Brake.html",
    "title": "Class PoseAnimation_Brake | AngeliA",
    "summary": "Class PoseAnimation_Brake Namespace AngeliA Assembly AngeliA Framework.dll public class PoseAnimation_Brake : PoseAnimation Inheritance object PoseAnimation PoseAnimation_Brake Inherited Members PoseAnimation.POSE_Z_HAND PoseAnimation.A2G PoseAnimation.ValidHeadPosition PoseAnimation.DontBlendToNext PoseAnimation.DontBlendToPrev PoseAnimation.Target PoseAnimation.Rendering PoseAnimation.Movement PoseAnimation.Attackness PoseAnimation.Head PoseAnimation.Body PoseAnimation.Hip PoseAnimation.ShoulderL PoseAnimation.ShoulderR PoseAnimation.UpperArmL PoseAnimation.UpperArmR PoseAnimation.LowerArmL PoseAnimation.LowerArmR PoseAnimation.HandL PoseAnimation.HandR PoseAnimation.UpperLegL PoseAnimation.UpperLegR PoseAnimation.LowerLegL PoseAnimation.LowerLegR PoseAnimation.FootL PoseAnimation.FootR PoseAnimation.FacingRight PoseAnimation.FacingFront PoseAnimation.IsChargingAttack PoseAnimation.FacingSign PoseAnimation.FrontSign PoseAnimation.CurrentAnimationFrame PoseAnimation.AnimationType PoseAnimation.AttackLerp PoseAnimation.AttackEase PoseAnimation.OnGameInitialize() PoseAnimation.PerformAnimationFromPool(int, PoseCharacterRenderer) PoseAnimation.PerformAnimation(PoseAnimation, PoseCharacterRenderer) PoseAnimation.PerformAnimationBlendFromPool(int, int, float, PoseCharacterRenderer) PoseAnimation.PerformAnimationBlend(PoseAnimation, PoseAnimation, float, PoseCharacterRenderer) PoseAnimation.TryGetAnimationFromPool(int, out PoseAnimation) PoseAnimation.SetAsAnimating(PoseCharacterRenderer) PoseAnimation.ResetShoulderAndUpperArmPos(bool, bool) PoseAnimation.AttackHeadDown(float, int, int, int) PoseAnimation.AttackLegShake(float) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Methods Animate(PoseCharacterRenderer) public override void Animate(PoseCharacterRenderer renderer) Parameters renderer PoseCharacterRenderer"
  },
  "api/AngeliA.PoseAnimation_Climb.html": {
    "href": "api/AngeliA.PoseAnimation_Climb.html",
    "title": "Class PoseAnimation_Climb | AngeliA",
    "summary": "Class PoseAnimation_Climb Namespace AngeliA Assembly AngeliA Framework.dll public class PoseAnimation_Climb : PoseAnimation Inheritance object PoseAnimation PoseAnimation_Climb Inherited Members PoseAnimation.POSE_Z_HAND PoseAnimation.A2G PoseAnimation.ValidHeadPosition PoseAnimation.DontBlendToNext PoseAnimation.DontBlendToPrev PoseAnimation.Target PoseAnimation.Rendering PoseAnimation.Movement PoseAnimation.Attackness PoseAnimation.Head PoseAnimation.Body PoseAnimation.Hip PoseAnimation.ShoulderL PoseAnimation.ShoulderR PoseAnimation.UpperArmL PoseAnimation.UpperArmR PoseAnimation.LowerArmL PoseAnimation.LowerArmR PoseAnimation.HandL PoseAnimation.HandR PoseAnimation.UpperLegL PoseAnimation.UpperLegR PoseAnimation.LowerLegL PoseAnimation.LowerLegR PoseAnimation.FootL PoseAnimation.FootR PoseAnimation.FacingRight PoseAnimation.FacingFront PoseAnimation.IsChargingAttack PoseAnimation.FacingSign PoseAnimation.FrontSign PoseAnimation.CurrentAnimationFrame PoseAnimation.AnimationType PoseAnimation.AttackLerp PoseAnimation.AttackEase PoseAnimation.OnGameInitialize() PoseAnimation.PerformAnimationFromPool(int, PoseCharacterRenderer) PoseAnimation.PerformAnimation(PoseAnimation, PoseCharacterRenderer) PoseAnimation.PerformAnimationBlendFromPool(int, int, float, PoseCharacterRenderer) PoseAnimation.PerformAnimationBlend(PoseAnimation, PoseAnimation, float, PoseCharacterRenderer) PoseAnimation.TryGetAnimationFromPool(int, out PoseAnimation) PoseAnimation.SetAsAnimating(PoseCharacterRenderer) PoseAnimation.ResetShoulderAndUpperArmPos(bool, bool) PoseAnimation.AttackHeadDown(float, int, int, int) PoseAnimation.AttackLegShake(float) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Methods Animate(PoseCharacterRenderer) public override void Animate(PoseCharacterRenderer renderer) Parameters renderer PoseCharacterRenderer"
  },
  "api/AngeliA.PoseAnimation_Crash.html": {
    "href": "api/AngeliA.PoseAnimation_Crash.html",
    "title": "Class PoseAnimation_Crash | AngeliA",
    "summary": "Class PoseAnimation_Crash Namespace AngeliA Assembly AngeliA Framework.dll public class PoseAnimation_Crash : PoseAnimation Inheritance object PoseAnimation PoseAnimation_Crash Inherited Members PoseAnimation.POSE_Z_HAND PoseAnimation.A2G PoseAnimation.ValidHeadPosition PoseAnimation.DontBlendToNext PoseAnimation.Target PoseAnimation.Rendering PoseAnimation.Movement PoseAnimation.Attackness PoseAnimation.Head PoseAnimation.Body PoseAnimation.Hip PoseAnimation.ShoulderL PoseAnimation.ShoulderR PoseAnimation.UpperArmL PoseAnimation.UpperArmR PoseAnimation.LowerArmL PoseAnimation.LowerArmR PoseAnimation.HandL PoseAnimation.HandR PoseAnimation.UpperLegL PoseAnimation.UpperLegR PoseAnimation.LowerLegL PoseAnimation.LowerLegR PoseAnimation.FootL PoseAnimation.FootR PoseAnimation.FacingRight PoseAnimation.FacingFront PoseAnimation.IsChargingAttack PoseAnimation.FacingSign PoseAnimation.FrontSign PoseAnimation.CurrentAnimationFrame PoseAnimation.AnimationType PoseAnimation.AttackLerp PoseAnimation.AttackEase PoseAnimation.OnGameInitialize() PoseAnimation.PerformAnimationFromPool(int, PoseCharacterRenderer) PoseAnimation.PerformAnimation(PoseAnimation, PoseCharacterRenderer) PoseAnimation.PerformAnimationBlendFromPool(int, int, float, PoseCharacterRenderer) PoseAnimation.PerformAnimationBlend(PoseAnimation, PoseAnimation, float, PoseCharacterRenderer) PoseAnimation.TryGetAnimationFromPool(int, out PoseAnimation) PoseAnimation.SetAsAnimating(PoseCharacterRenderer) PoseAnimation.ResetShoulderAndUpperArmPos(bool, bool) PoseAnimation.AttackHeadDown(float, int, int, int) PoseAnimation.AttackLegShake(float) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Properties DontBlendToPrev protected override bool DontBlendToPrev { get; } Property Value bool Methods Animate(PoseCharacterRenderer) public override void Animate(PoseCharacterRenderer renderer) Parameters renderer PoseCharacterRenderer"
  },
  "api/AngeliA.PoseAnimation_Dash.html": {
    "href": "api/AngeliA.PoseAnimation_Dash.html",
    "title": "Class PoseAnimation_Dash | AngeliA",
    "summary": "Class PoseAnimation_Dash Namespace AngeliA Assembly AngeliA Framework.dll public class PoseAnimation_Dash : PoseAnimation Inheritance object PoseAnimation PoseAnimation_Dash Inherited Members PoseAnimation.POSE_Z_HAND PoseAnimation.A2G PoseAnimation.ValidHeadPosition PoseAnimation.DontBlendToNext PoseAnimation.DontBlendToPrev PoseAnimation.Target PoseAnimation.Rendering PoseAnimation.Movement PoseAnimation.Attackness PoseAnimation.Head PoseAnimation.Body PoseAnimation.Hip PoseAnimation.ShoulderL PoseAnimation.ShoulderR PoseAnimation.UpperArmL PoseAnimation.UpperArmR PoseAnimation.LowerArmL PoseAnimation.LowerArmR PoseAnimation.HandL PoseAnimation.HandR PoseAnimation.UpperLegL PoseAnimation.UpperLegR PoseAnimation.LowerLegL PoseAnimation.LowerLegR PoseAnimation.FootL PoseAnimation.FootR PoseAnimation.FacingRight PoseAnimation.FacingFront PoseAnimation.IsChargingAttack PoseAnimation.FacingSign PoseAnimation.FrontSign PoseAnimation.CurrentAnimationFrame PoseAnimation.AnimationType PoseAnimation.AttackLerp PoseAnimation.AttackEase PoseAnimation.OnGameInitialize() PoseAnimation.PerformAnimationFromPool(int, PoseCharacterRenderer) PoseAnimation.PerformAnimation(PoseAnimation, PoseCharacterRenderer) PoseAnimation.PerformAnimationBlendFromPool(int, int, float, PoseCharacterRenderer) PoseAnimation.PerformAnimationBlend(PoseAnimation, PoseAnimation, float, PoseCharacterRenderer) PoseAnimation.TryGetAnimationFromPool(int, out PoseAnimation) PoseAnimation.SetAsAnimating(PoseCharacterRenderer) PoseAnimation.ResetShoulderAndUpperArmPos(bool, bool) PoseAnimation.AttackHeadDown(float, int, int, int) PoseAnimation.AttackLegShake(float) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Methods Animate(PoseCharacterRenderer) public override void Animate(PoseCharacterRenderer renderer) Parameters renderer PoseCharacterRenderer"
  },
  "api/AngeliA.PoseAnimation_Fly.html": {
    "href": "api/AngeliA.PoseAnimation_Fly.html",
    "title": "Class PoseAnimation_Fly | AngeliA",
    "summary": "Class PoseAnimation_Fly Namespace AngeliA Assembly AngeliA Framework.dll public class PoseAnimation_Fly : PoseAnimation Inheritance object PoseAnimation PoseAnimation_Fly Inherited Members PoseAnimation.POSE_Z_HAND PoseAnimation.A2G PoseAnimation.ValidHeadPosition PoseAnimation.DontBlendToNext PoseAnimation.DontBlendToPrev PoseAnimation.Target PoseAnimation.Rendering PoseAnimation.Movement PoseAnimation.Attackness PoseAnimation.Head PoseAnimation.Body PoseAnimation.Hip PoseAnimation.ShoulderL PoseAnimation.ShoulderR PoseAnimation.UpperArmL PoseAnimation.UpperArmR PoseAnimation.LowerArmL PoseAnimation.LowerArmR PoseAnimation.HandL PoseAnimation.HandR PoseAnimation.UpperLegL PoseAnimation.UpperLegR PoseAnimation.LowerLegL PoseAnimation.LowerLegR PoseAnimation.FootL PoseAnimation.FootR PoseAnimation.FacingRight PoseAnimation.FacingFront PoseAnimation.IsChargingAttack PoseAnimation.FacingSign PoseAnimation.FrontSign PoseAnimation.CurrentAnimationFrame PoseAnimation.AnimationType PoseAnimation.AttackLerp PoseAnimation.AttackEase PoseAnimation.OnGameInitialize() PoseAnimation.PerformAnimationFromPool(int, PoseCharacterRenderer) PoseAnimation.PerformAnimation(PoseAnimation, PoseCharacterRenderer) PoseAnimation.PerformAnimationBlendFromPool(int, int, float, PoseCharacterRenderer) PoseAnimation.PerformAnimationBlend(PoseAnimation, PoseAnimation, float, PoseCharacterRenderer) PoseAnimation.TryGetAnimationFromPool(int, out PoseAnimation) PoseAnimation.SetAsAnimating(PoseCharacterRenderer) PoseAnimation.ResetShoulderAndUpperArmPos(bool, bool) PoseAnimation.AttackHeadDown(float, int, int, int) PoseAnimation.AttackLegShake(float) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Methods Animate(PoseCharacterRenderer) public override void Animate(PoseCharacterRenderer renderer) Parameters renderer PoseCharacterRenderer"
  },
  "api/AngeliA.PoseAnimation_GrabSide.html": {
    "href": "api/AngeliA.PoseAnimation_GrabSide.html",
    "title": "Class PoseAnimation_GrabSide | AngeliA",
    "summary": "Class PoseAnimation_GrabSide Namespace AngeliA Assembly AngeliA Framework.dll public class PoseAnimation_GrabSide : PoseAnimation Inheritance object PoseAnimation PoseAnimation_GrabSide Inherited Members PoseAnimation.POSE_Z_HAND PoseAnimation.A2G PoseAnimation.ValidHeadPosition PoseAnimation.DontBlendToNext PoseAnimation.DontBlendToPrev PoseAnimation.Target PoseAnimation.Rendering PoseAnimation.Movement PoseAnimation.Attackness PoseAnimation.Head PoseAnimation.Body PoseAnimation.Hip PoseAnimation.ShoulderL PoseAnimation.ShoulderR PoseAnimation.UpperArmL PoseAnimation.UpperArmR PoseAnimation.LowerArmL PoseAnimation.LowerArmR PoseAnimation.HandL PoseAnimation.HandR PoseAnimation.UpperLegL PoseAnimation.UpperLegR PoseAnimation.LowerLegL PoseAnimation.LowerLegR PoseAnimation.FootL PoseAnimation.FootR PoseAnimation.FacingRight PoseAnimation.FacingFront PoseAnimation.IsChargingAttack PoseAnimation.FacingSign PoseAnimation.FrontSign PoseAnimation.CurrentAnimationFrame PoseAnimation.AnimationType PoseAnimation.AttackLerp PoseAnimation.AttackEase PoseAnimation.OnGameInitialize() PoseAnimation.PerformAnimationFromPool(int, PoseCharacterRenderer) PoseAnimation.PerformAnimation(PoseAnimation, PoseCharacterRenderer) PoseAnimation.PerformAnimationBlendFromPool(int, int, float, PoseCharacterRenderer) PoseAnimation.PerformAnimationBlend(PoseAnimation, PoseAnimation, float, PoseCharacterRenderer) PoseAnimation.TryGetAnimationFromPool(int, out PoseAnimation) PoseAnimation.SetAsAnimating(PoseCharacterRenderer) PoseAnimation.ResetShoulderAndUpperArmPos(bool, bool) PoseAnimation.AttackHeadDown(float, int, int, int) PoseAnimation.AttackLegShake(float) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Methods Animate(PoseCharacterRenderer) public override void Animate(PoseCharacterRenderer renderer) Parameters renderer PoseCharacterRenderer"
  },
  "api/AngeliA.PoseAnimation_GrabTop.html": {
    "href": "api/AngeliA.PoseAnimation_GrabTop.html",
    "title": "Class PoseAnimation_GrabTop | AngeliA",
    "summary": "Class PoseAnimation_GrabTop Namespace AngeliA Assembly AngeliA Framework.dll public class PoseAnimation_GrabTop : PoseAnimation Inheritance object PoseAnimation PoseAnimation_GrabTop Inherited Members PoseAnimation.POSE_Z_HAND PoseAnimation.A2G PoseAnimation.ValidHeadPosition PoseAnimation.DontBlendToNext PoseAnimation.DontBlendToPrev PoseAnimation.Target PoseAnimation.Rendering PoseAnimation.Movement PoseAnimation.Attackness PoseAnimation.Head PoseAnimation.Body PoseAnimation.Hip PoseAnimation.ShoulderL PoseAnimation.ShoulderR PoseAnimation.UpperArmL PoseAnimation.UpperArmR PoseAnimation.LowerArmL PoseAnimation.LowerArmR PoseAnimation.HandL PoseAnimation.HandR PoseAnimation.UpperLegL PoseAnimation.UpperLegR PoseAnimation.LowerLegL PoseAnimation.LowerLegR PoseAnimation.FootL PoseAnimation.FootR PoseAnimation.FacingRight PoseAnimation.FacingFront PoseAnimation.IsChargingAttack PoseAnimation.FacingSign PoseAnimation.FrontSign PoseAnimation.CurrentAnimationFrame PoseAnimation.AnimationType PoseAnimation.AttackLerp PoseAnimation.AttackEase PoseAnimation.OnGameInitialize() PoseAnimation.PerformAnimationFromPool(int, PoseCharacterRenderer) PoseAnimation.PerformAnimation(PoseAnimation, PoseCharacterRenderer) PoseAnimation.PerformAnimationBlendFromPool(int, int, float, PoseCharacterRenderer) PoseAnimation.PerformAnimationBlend(PoseAnimation, PoseAnimation, float, PoseCharacterRenderer) PoseAnimation.TryGetAnimationFromPool(int, out PoseAnimation) PoseAnimation.SetAsAnimating(PoseCharacterRenderer) PoseAnimation.ResetShoulderAndUpperArmPos(bool, bool) PoseAnimation.AttackHeadDown(float, int, int, int) PoseAnimation.AttackLegShake(float) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Methods Animate(PoseCharacterRenderer) public override void Animate(PoseCharacterRenderer renderer) Parameters renderer PoseCharacterRenderer"
  },
  "api/AngeliA.PoseAnimation_Idle.html": {
    "href": "api/AngeliA.PoseAnimation_Idle.html",
    "title": "Class PoseAnimation_Idle | AngeliA",
    "summary": "Class PoseAnimation_Idle Namespace AngeliA Assembly AngeliA Framework.dll public class PoseAnimation_Idle : PoseAnimation Inheritance object PoseAnimation PoseAnimation_Idle Inherited Members PoseAnimation.POSE_Z_HAND PoseAnimation.A2G PoseAnimation.ValidHeadPosition PoseAnimation.DontBlendToNext PoseAnimation.DontBlendToPrev PoseAnimation.Target PoseAnimation.Rendering PoseAnimation.Movement PoseAnimation.Attackness PoseAnimation.Head PoseAnimation.Body PoseAnimation.Hip PoseAnimation.ShoulderL PoseAnimation.ShoulderR PoseAnimation.UpperArmL PoseAnimation.UpperArmR PoseAnimation.LowerArmL PoseAnimation.LowerArmR PoseAnimation.HandL PoseAnimation.HandR PoseAnimation.UpperLegL PoseAnimation.UpperLegR PoseAnimation.LowerLegL PoseAnimation.LowerLegR PoseAnimation.FootL PoseAnimation.FootR PoseAnimation.FacingRight PoseAnimation.FacingFront PoseAnimation.IsChargingAttack PoseAnimation.FacingSign PoseAnimation.FrontSign PoseAnimation.CurrentAnimationFrame PoseAnimation.AnimationType PoseAnimation.AttackLerp PoseAnimation.AttackEase PoseAnimation.OnGameInitialize() PoseAnimation.PerformAnimationFromPool(int, PoseCharacterRenderer) PoseAnimation.PerformAnimation(PoseAnimation, PoseCharacterRenderer) PoseAnimation.PerformAnimationBlendFromPool(int, int, float, PoseCharacterRenderer) PoseAnimation.PerformAnimationBlend(PoseAnimation, PoseAnimation, float, PoseCharacterRenderer) PoseAnimation.TryGetAnimationFromPool(int, out PoseAnimation) PoseAnimation.SetAsAnimating(PoseCharacterRenderer) PoseAnimation.ResetShoulderAndUpperArmPos(bool, bool) PoseAnimation.AttackHeadDown(float, int, int, int) PoseAnimation.AttackLegShake(float) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Fields TYPE_ID public static readonly int TYPE_ID Field Value int Methods Animate(PoseCharacterRenderer) public override void Animate(PoseCharacterRenderer renderer) Parameters renderer PoseCharacterRenderer"
  },
  "api/AngeliA.PoseAnimation_JumpDown.html": {
    "href": "api/AngeliA.PoseAnimation_JumpDown.html",
    "title": "Class PoseAnimation_JumpDown | AngeliA",
    "summary": "Class PoseAnimation_JumpDown Namespace AngeliA Assembly AngeliA Framework.dll public class PoseAnimation_JumpDown : PoseAnimation Inheritance object PoseAnimation PoseAnimation_JumpDown Inherited Members PoseAnimation.POSE_Z_HAND PoseAnimation.A2G PoseAnimation.ValidHeadPosition PoseAnimation.DontBlendToNext PoseAnimation.DontBlendToPrev PoseAnimation.Target PoseAnimation.Rendering PoseAnimation.Movement PoseAnimation.Attackness PoseAnimation.Head PoseAnimation.Body PoseAnimation.Hip PoseAnimation.ShoulderL PoseAnimation.ShoulderR PoseAnimation.UpperArmL PoseAnimation.UpperArmR PoseAnimation.LowerArmL PoseAnimation.LowerArmR PoseAnimation.HandL PoseAnimation.HandR PoseAnimation.UpperLegL PoseAnimation.UpperLegR PoseAnimation.LowerLegL PoseAnimation.LowerLegR PoseAnimation.FootL PoseAnimation.FootR PoseAnimation.FacingRight PoseAnimation.FacingFront PoseAnimation.IsChargingAttack PoseAnimation.FacingSign PoseAnimation.FrontSign PoseAnimation.CurrentAnimationFrame PoseAnimation.AnimationType PoseAnimation.AttackLerp PoseAnimation.AttackEase PoseAnimation.OnGameInitialize() PoseAnimation.PerformAnimationFromPool(int, PoseCharacterRenderer) PoseAnimation.PerformAnimation(PoseAnimation, PoseCharacterRenderer) PoseAnimation.PerformAnimationBlendFromPool(int, int, float, PoseCharacterRenderer) PoseAnimation.PerformAnimationBlend(PoseAnimation, PoseAnimation, float, PoseCharacterRenderer) PoseAnimation.TryGetAnimationFromPool(int, out PoseAnimation) PoseAnimation.SetAsAnimating(PoseCharacterRenderer) PoseAnimation.ResetShoulderAndUpperArmPos(bool, bool) PoseAnimation.AttackHeadDown(float, int, int, int) PoseAnimation.AttackLegShake(float) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Methods Animate(PoseCharacterRenderer) public override void Animate(PoseCharacterRenderer renderer) Parameters renderer PoseCharacterRenderer"
  },
  "api/AngeliA.PoseAnimation_JumpUp.html": {
    "href": "api/AngeliA.PoseAnimation_JumpUp.html",
    "title": "Class PoseAnimation_JumpUp | AngeliA",
    "summary": "Class PoseAnimation_JumpUp Namespace AngeliA Assembly AngeliA Framework.dll public class PoseAnimation_JumpUp : PoseAnimation Inheritance object PoseAnimation PoseAnimation_JumpUp Inherited Members PoseAnimation.POSE_Z_HAND PoseAnimation.A2G PoseAnimation.ValidHeadPosition PoseAnimation.DontBlendToNext PoseAnimation.DontBlendToPrev PoseAnimation.Target PoseAnimation.Rendering PoseAnimation.Movement PoseAnimation.Attackness PoseAnimation.Head PoseAnimation.Body PoseAnimation.Hip PoseAnimation.ShoulderL PoseAnimation.ShoulderR PoseAnimation.UpperArmL PoseAnimation.UpperArmR PoseAnimation.LowerArmL PoseAnimation.LowerArmR PoseAnimation.HandL PoseAnimation.HandR PoseAnimation.UpperLegL PoseAnimation.UpperLegR PoseAnimation.LowerLegL PoseAnimation.LowerLegR PoseAnimation.FootL PoseAnimation.FootR PoseAnimation.FacingRight PoseAnimation.FacingFront PoseAnimation.IsChargingAttack PoseAnimation.FacingSign PoseAnimation.FrontSign PoseAnimation.CurrentAnimationFrame PoseAnimation.AnimationType PoseAnimation.AttackLerp PoseAnimation.AttackEase PoseAnimation.OnGameInitialize() PoseAnimation.PerformAnimationFromPool(int, PoseCharacterRenderer) PoseAnimation.PerformAnimation(PoseAnimation, PoseCharacterRenderer) PoseAnimation.PerformAnimationBlendFromPool(int, int, float, PoseCharacterRenderer) PoseAnimation.PerformAnimationBlend(PoseAnimation, PoseAnimation, float, PoseCharacterRenderer) PoseAnimation.TryGetAnimationFromPool(int, out PoseAnimation) PoseAnimation.SetAsAnimating(PoseCharacterRenderer) PoseAnimation.ResetShoulderAndUpperArmPos(bool, bool) PoseAnimation.AttackHeadDown(float, int, int, int) PoseAnimation.AttackLegShake(float) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Methods Animate(PoseCharacterRenderer) public override void Animate(PoseCharacterRenderer renderer) Parameters renderer PoseCharacterRenderer"
  },
  "api/AngeliA.PoseAnimation_PassOut.html": {
    "href": "api/AngeliA.PoseAnimation_PassOut.html",
    "title": "Class PoseAnimation_PassOut | AngeliA",
    "summary": "Class PoseAnimation_PassOut Namespace AngeliA Assembly AngeliA Framework.dll public class PoseAnimation_PassOut : PoseAnimation Inheritance object PoseAnimation PoseAnimation_PassOut Inherited Members PoseAnimation.POSE_Z_HAND PoseAnimation.A2G PoseAnimation.DontBlendToNext PoseAnimation.DontBlendToPrev PoseAnimation.Target PoseAnimation.Rendering PoseAnimation.Movement PoseAnimation.Attackness PoseAnimation.Head PoseAnimation.Body PoseAnimation.Hip PoseAnimation.ShoulderL PoseAnimation.ShoulderR PoseAnimation.UpperArmL PoseAnimation.UpperArmR PoseAnimation.LowerArmL PoseAnimation.LowerArmR PoseAnimation.HandL PoseAnimation.HandR PoseAnimation.UpperLegL PoseAnimation.UpperLegR PoseAnimation.LowerLegL PoseAnimation.LowerLegR PoseAnimation.FootL PoseAnimation.FootR PoseAnimation.FacingRight PoseAnimation.FacingFront PoseAnimation.IsChargingAttack PoseAnimation.FacingSign PoseAnimation.FrontSign PoseAnimation.CurrentAnimationFrame PoseAnimation.AnimationType PoseAnimation.AttackLerp PoseAnimation.AttackEase PoseAnimation.OnGameInitialize() PoseAnimation.PerformAnimationFromPool(int, PoseCharacterRenderer) PoseAnimation.PerformAnimation(PoseAnimation, PoseCharacterRenderer) PoseAnimation.PerformAnimationBlendFromPool(int, int, float, PoseCharacterRenderer) PoseAnimation.PerformAnimationBlend(PoseAnimation, PoseAnimation, float, PoseCharacterRenderer) PoseAnimation.TryGetAnimationFromPool(int, out PoseAnimation) PoseAnimation.SetAsAnimating(PoseCharacterRenderer) PoseAnimation.ResetShoulderAndUpperArmPos(bool, bool) PoseAnimation.AttackHeadDown(float, int, int, int) PoseAnimation.AttackLegShake(float) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Properties ValidHeadPosition protected override bool ValidHeadPosition { get; } Property Value bool Methods Animate(PoseCharacterRenderer) public override void Animate(PoseCharacterRenderer renderer) Parameters renderer PoseCharacterRenderer"
  },
  "api/AngeliA.PoseAnimation_Pound.html": {
    "href": "api/AngeliA.PoseAnimation_Pound.html",
    "title": "Class PoseAnimation_Pound | AngeliA",
    "summary": "Class PoseAnimation_Pound Namespace AngeliA Assembly AngeliA Framework.dll public class PoseAnimation_Pound : PoseAnimation Inheritance object PoseAnimation PoseAnimation_Pound Inherited Members PoseAnimation.POSE_Z_HAND PoseAnimation.A2G PoseAnimation.ValidHeadPosition PoseAnimation.DontBlendToNext PoseAnimation.DontBlendToPrev PoseAnimation.Target PoseAnimation.Rendering PoseAnimation.Movement PoseAnimation.Attackness PoseAnimation.Head PoseAnimation.Body PoseAnimation.Hip PoseAnimation.ShoulderL PoseAnimation.ShoulderR PoseAnimation.UpperArmL PoseAnimation.UpperArmR PoseAnimation.LowerArmL PoseAnimation.LowerArmR PoseAnimation.HandL PoseAnimation.HandR PoseAnimation.UpperLegL PoseAnimation.UpperLegR PoseAnimation.LowerLegL PoseAnimation.LowerLegR PoseAnimation.FootL PoseAnimation.FootR PoseAnimation.FacingRight PoseAnimation.FacingFront PoseAnimation.IsChargingAttack PoseAnimation.FacingSign PoseAnimation.FrontSign PoseAnimation.CurrentAnimationFrame PoseAnimation.AnimationType PoseAnimation.AttackLerp PoseAnimation.AttackEase PoseAnimation.OnGameInitialize() PoseAnimation.PerformAnimationFromPool(int, PoseCharacterRenderer) PoseAnimation.PerformAnimation(PoseAnimation, PoseCharacterRenderer) PoseAnimation.PerformAnimationBlendFromPool(int, int, float, PoseCharacterRenderer) PoseAnimation.PerformAnimationBlend(PoseAnimation, PoseAnimation, float, PoseCharacterRenderer) PoseAnimation.TryGetAnimationFromPool(int, out PoseAnimation) PoseAnimation.SetAsAnimating(PoseCharacterRenderer) PoseAnimation.ResetShoulderAndUpperArmPos(bool, bool) PoseAnimation.AttackHeadDown(float, int, int, int) PoseAnimation.AttackLegShake(float) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Methods Animate(PoseCharacterRenderer) public override void Animate(PoseCharacterRenderer renderer) Parameters renderer PoseCharacterRenderer"
  },
  "api/AngeliA.PoseAnimation_Rolling.html": {
    "href": "api/AngeliA.PoseAnimation_Rolling.html",
    "title": "Class PoseAnimation_Rolling | AngeliA",
    "summary": "Class PoseAnimation_Rolling Namespace AngeliA Assembly AngeliA Framework.dll public class PoseAnimation_Rolling : PoseAnimation Inheritance object PoseAnimation PoseAnimation_Rolling Inherited Members PoseAnimation.POSE_Z_HAND PoseAnimation.A2G PoseAnimation.ValidHeadPosition PoseAnimation.DontBlendToNext PoseAnimation.DontBlendToPrev PoseAnimation.Target PoseAnimation.Rendering PoseAnimation.Movement PoseAnimation.Attackness PoseAnimation.Head PoseAnimation.Body PoseAnimation.Hip PoseAnimation.ShoulderL PoseAnimation.ShoulderR PoseAnimation.UpperArmL PoseAnimation.UpperArmR PoseAnimation.LowerArmL PoseAnimation.LowerArmR PoseAnimation.HandL PoseAnimation.HandR PoseAnimation.UpperLegL PoseAnimation.UpperLegR PoseAnimation.LowerLegL PoseAnimation.LowerLegR PoseAnimation.FootL PoseAnimation.FootR PoseAnimation.FacingRight PoseAnimation.FacingFront PoseAnimation.IsChargingAttack PoseAnimation.FacingSign PoseAnimation.FrontSign PoseAnimation.CurrentAnimationFrame PoseAnimation.AnimationType PoseAnimation.AttackLerp PoseAnimation.AttackEase PoseAnimation.OnGameInitialize() PoseAnimation.PerformAnimationFromPool(int, PoseCharacterRenderer) PoseAnimation.PerformAnimation(PoseAnimation, PoseCharacterRenderer) PoseAnimation.PerformAnimationBlendFromPool(int, int, float, PoseCharacterRenderer) PoseAnimation.PerformAnimationBlend(PoseAnimation, PoseAnimation, float, PoseCharacterRenderer) PoseAnimation.TryGetAnimationFromPool(int, out PoseAnimation) PoseAnimation.SetAsAnimating(PoseCharacterRenderer) PoseAnimation.ResetShoulderAndUpperArmPos(bool, bool) PoseAnimation.AttackHeadDown(float, int, int, int) PoseAnimation.AttackLegShake(float) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Fields TYPE_ID public static readonly int TYPE_ID Field Value int Methods Animate(PoseCharacterRenderer) public override void Animate(PoseCharacterRenderer renderer) Parameters renderer PoseCharacterRenderer"
  },
  "api/AngeliA.PoseAnimation_Run.html": {
    "href": "api/AngeliA.PoseAnimation_Run.html",
    "title": "Class PoseAnimation_Run | AngeliA",
    "summary": "Class PoseAnimation_Run Namespace AngeliA Assembly AngeliA Framework.dll public class PoseAnimation_Run : PoseAnimation Inheritance object PoseAnimation PoseAnimation_Run Inherited Members PoseAnimation.POSE_Z_HAND PoseAnimation.A2G PoseAnimation.ValidHeadPosition PoseAnimation.DontBlendToNext PoseAnimation.DontBlendToPrev PoseAnimation.Target PoseAnimation.Rendering PoseAnimation.Movement PoseAnimation.Attackness PoseAnimation.Head PoseAnimation.Body PoseAnimation.Hip PoseAnimation.ShoulderL PoseAnimation.ShoulderR PoseAnimation.UpperArmL PoseAnimation.UpperArmR PoseAnimation.LowerArmL PoseAnimation.LowerArmR PoseAnimation.HandL PoseAnimation.HandR PoseAnimation.UpperLegL PoseAnimation.UpperLegR PoseAnimation.LowerLegL PoseAnimation.LowerLegR PoseAnimation.FootL PoseAnimation.FootR PoseAnimation.FacingRight PoseAnimation.FacingFront PoseAnimation.IsChargingAttack PoseAnimation.FacingSign PoseAnimation.FrontSign PoseAnimation.CurrentAnimationFrame PoseAnimation.AnimationType PoseAnimation.AttackLerp PoseAnimation.AttackEase PoseAnimation.OnGameInitialize() PoseAnimation.PerformAnimationFromPool(int, PoseCharacterRenderer) PoseAnimation.PerformAnimation(PoseAnimation, PoseCharacterRenderer) PoseAnimation.PerformAnimationBlendFromPool(int, int, float, PoseCharacterRenderer) PoseAnimation.PerformAnimationBlend(PoseAnimation, PoseAnimation, float, PoseCharacterRenderer) PoseAnimation.TryGetAnimationFromPool(int, out PoseAnimation) PoseAnimation.SetAsAnimating(PoseCharacterRenderer) PoseAnimation.ResetShoulderAndUpperArmPos(bool, bool) PoseAnimation.AttackHeadDown(float, int, int, int) PoseAnimation.AttackLegShake(float) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Fields TYPE_ID public static readonly int TYPE_ID Field Value int Methods Animate(PoseCharacterRenderer) public override void Animate(PoseCharacterRenderer renderer) Parameters renderer PoseCharacterRenderer"
  },
  "api/AngeliA.PoseAnimation_Rush.html": {
    "href": "api/AngeliA.PoseAnimation_Rush.html",
    "title": "Class PoseAnimation_Rush | AngeliA",
    "summary": "Class PoseAnimation_Rush Namespace AngeliA Assembly AngeliA Framework.dll public class PoseAnimation_Rush : PoseAnimation Inheritance object PoseAnimation PoseAnimation_Rush Inherited Members PoseAnimation.POSE_Z_HAND PoseAnimation.A2G PoseAnimation.ValidHeadPosition PoseAnimation.DontBlendToNext PoseAnimation.DontBlendToPrev PoseAnimation.Target PoseAnimation.Rendering PoseAnimation.Movement PoseAnimation.Attackness PoseAnimation.Head PoseAnimation.Body PoseAnimation.Hip PoseAnimation.ShoulderL PoseAnimation.ShoulderR PoseAnimation.UpperArmL PoseAnimation.UpperArmR PoseAnimation.LowerArmL PoseAnimation.LowerArmR PoseAnimation.HandL PoseAnimation.HandR PoseAnimation.UpperLegL PoseAnimation.UpperLegR PoseAnimation.LowerLegL PoseAnimation.LowerLegR PoseAnimation.FootL PoseAnimation.FootR PoseAnimation.FacingRight PoseAnimation.FacingFront PoseAnimation.IsChargingAttack PoseAnimation.FacingSign PoseAnimation.FrontSign PoseAnimation.CurrentAnimationFrame PoseAnimation.AnimationType PoseAnimation.AttackLerp PoseAnimation.AttackEase PoseAnimation.OnGameInitialize() PoseAnimation.PerformAnimationFromPool(int, PoseCharacterRenderer) PoseAnimation.PerformAnimation(PoseAnimation, PoseCharacterRenderer) PoseAnimation.PerformAnimationBlendFromPool(int, int, float, PoseCharacterRenderer) PoseAnimation.PerformAnimationBlend(PoseAnimation, PoseAnimation, float, PoseCharacterRenderer) PoseAnimation.TryGetAnimationFromPool(int, out PoseAnimation) PoseAnimation.SetAsAnimating(PoseCharacterRenderer) PoseAnimation.ResetShoulderAndUpperArmPos(bool, bool) PoseAnimation.AttackHeadDown(float, int, int, int) PoseAnimation.AttackLegShake(float) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Methods Animate(PoseCharacterRenderer) public override void Animate(PoseCharacterRenderer renderer) Parameters renderer PoseCharacterRenderer"
  },
  "api/AngeliA.PoseAnimation_Sleep.html": {
    "href": "api/AngeliA.PoseAnimation_Sleep.html",
    "title": "Class PoseAnimation_Sleep | AngeliA",
    "summary": "Class PoseAnimation_Sleep Namespace AngeliA Assembly AngeliA Framework.dll public class PoseAnimation_Sleep : PoseAnimation Inheritance object PoseAnimation PoseAnimation_Sleep Inherited Members PoseAnimation.POSE_Z_HAND PoseAnimation.A2G PoseAnimation.ValidHeadPosition PoseAnimation.DontBlendToNext PoseAnimation.DontBlendToPrev PoseAnimation.Target PoseAnimation.Rendering PoseAnimation.Movement PoseAnimation.Attackness PoseAnimation.Head PoseAnimation.Body PoseAnimation.Hip PoseAnimation.ShoulderL PoseAnimation.ShoulderR PoseAnimation.UpperArmL PoseAnimation.UpperArmR PoseAnimation.LowerArmL PoseAnimation.LowerArmR PoseAnimation.HandL PoseAnimation.HandR PoseAnimation.UpperLegL PoseAnimation.UpperLegR PoseAnimation.LowerLegL PoseAnimation.LowerLegR PoseAnimation.FootL PoseAnimation.FootR PoseAnimation.FacingRight PoseAnimation.FacingFront PoseAnimation.IsChargingAttack PoseAnimation.FacingSign PoseAnimation.FrontSign PoseAnimation.CurrentAnimationFrame PoseAnimation.AnimationType PoseAnimation.AttackLerp PoseAnimation.AttackEase PoseAnimation.OnGameInitialize() PoseAnimation.PerformAnimationFromPool(int, PoseCharacterRenderer) PoseAnimation.PerformAnimation(PoseAnimation, PoseCharacterRenderer) PoseAnimation.PerformAnimationBlendFromPool(int, int, float, PoseCharacterRenderer) PoseAnimation.PerformAnimationBlend(PoseAnimation, PoseAnimation, float, PoseCharacterRenderer) PoseAnimation.TryGetAnimationFromPool(int, out PoseAnimation) PoseAnimation.SetAsAnimating(PoseCharacterRenderer) PoseAnimation.ResetShoulderAndUpperArmPos(bool, bool) PoseAnimation.AttackHeadDown(float, int, int, int) PoseAnimation.AttackLegShake(float) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Methods Animate(PoseCharacterRenderer) public override void Animate(PoseCharacterRenderer renderer) Parameters renderer PoseCharacterRenderer"
  },
  "api/AngeliA.PoseAnimation_Slide.html": {
    "href": "api/AngeliA.PoseAnimation_Slide.html",
    "title": "Class PoseAnimation_Slide | AngeliA",
    "summary": "Class PoseAnimation_Slide Namespace AngeliA Assembly AngeliA Framework.dll public class PoseAnimation_Slide : PoseAnimation Inheritance object PoseAnimation PoseAnimation_Slide Inherited Members PoseAnimation.POSE_Z_HAND PoseAnimation.A2G PoseAnimation.ValidHeadPosition PoseAnimation.DontBlendToNext PoseAnimation.DontBlendToPrev PoseAnimation.Target PoseAnimation.Rendering PoseAnimation.Movement PoseAnimation.Attackness PoseAnimation.Head PoseAnimation.Body PoseAnimation.Hip PoseAnimation.ShoulderL PoseAnimation.ShoulderR PoseAnimation.UpperArmL PoseAnimation.UpperArmR PoseAnimation.LowerArmL PoseAnimation.LowerArmR PoseAnimation.HandL PoseAnimation.HandR PoseAnimation.UpperLegL PoseAnimation.UpperLegR PoseAnimation.LowerLegL PoseAnimation.LowerLegR PoseAnimation.FootL PoseAnimation.FootR PoseAnimation.FacingRight PoseAnimation.FacingFront PoseAnimation.IsChargingAttack PoseAnimation.FacingSign PoseAnimation.FrontSign PoseAnimation.CurrentAnimationFrame PoseAnimation.AnimationType PoseAnimation.AttackLerp PoseAnimation.AttackEase PoseAnimation.OnGameInitialize() PoseAnimation.PerformAnimationFromPool(int, PoseCharacterRenderer) PoseAnimation.PerformAnimation(PoseAnimation, PoseCharacterRenderer) PoseAnimation.PerformAnimationBlendFromPool(int, int, float, PoseCharacterRenderer) PoseAnimation.PerformAnimationBlend(PoseAnimation, PoseAnimation, float, PoseCharacterRenderer) PoseAnimation.TryGetAnimationFromPool(int, out PoseAnimation) PoseAnimation.SetAsAnimating(PoseCharacterRenderer) PoseAnimation.ResetShoulderAndUpperArmPos(bool, bool) PoseAnimation.AttackHeadDown(float, int, int, int) PoseAnimation.AttackLegShake(float) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Methods Animate(PoseCharacterRenderer) public override void Animate(PoseCharacterRenderer renderer) Parameters renderer PoseCharacterRenderer"
  },
  "api/AngeliA.PoseAnimation_Spin.html": {
    "href": "api/AngeliA.PoseAnimation_Spin.html",
    "title": "Class PoseAnimation_Spin | AngeliA",
    "summary": "Class PoseAnimation_Spin Namespace AngeliA Assembly AngeliA Framework.dll public class PoseAnimation_Spin : PoseAnimation Inheritance object PoseAnimation PoseAnimation_Spin Inherited Members PoseAnimation.POSE_Z_HAND PoseAnimation.A2G PoseAnimation.ValidHeadPosition PoseAnimation.DontBlendToNext PoseAnimation.DontBlendToPrev PoseAnimation.Target PoseAnimation.Rendering PoseAnimation.Movement PoseAnimation.Attackness PoseAnimation.Head PoseAnimation.Body PoseAnimation.Hip PoseAnimation.ShoulderL PoseAnimation.ShoulderR PoseAnimation.UpperArmL PoseAnimation.UpperArmR PoseAnimation.LowerArmL PoseAnimation.LowerArmR PoseAnimation.HandL PoseAnimation.HandR PoseAnimation.UpperLegL PoseAnimation.UpperLegR PoseAnimation.LowerLegL PoseAnimation.LowerLegR PoseAnimation.FootL PoseAnimation.FootR PoseAnimation.FacingRight PoseAnimation.FacingFront PoseAnimation.IsChargingAttack PoseAnimation.FacingSign PoseAnimation.FrontSign PoseAnimation.CurrentAnimationFrame PoseAnimation.AnimationType PoseAnimation.AttackLerp PoseAnimation.AttackEase PoseAnimation.OnGameInitialize() PoseAnimation.PerformAnimationFromPool(int, PoseCharacterRenderer) PoseAnimation.PerformAnimation(PoseAnimation, PoseCharacterRenderer) PoseAnimation.PerformAnimationBlendFromPool(int, int, float, PoseCharacterRenderer) PoseAnimation.PerformAnimationBlend(PoseAnimation, PoseAnimation, float, PoseCharacterRenderer) PoseAnimation.TryGetAnimationFromPool(int, out PoseAnimation) PoseAnimation.SetAsAnimating(PoseCharacterRenderer) PoseAnimation.ResetShoulderAndUpperArmPos(bool, bool) PoseAnimation.AttackHeadDown(float, int, int, int) PoseAnimation.AttackLegShake(float) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Methods Animate(PoseCharacterRenderer) public override void Animate(PoseCharacterRenderer renderer) Parameters renderer PoseCharacterRenderer"
  },
  "api/AngeliA.PoseAnimation_SquatIdle.html": {
    "href": "api/AngeliA.PoseAnimation_SquatIdle.html",
    "title": "Class PoseAnimation_SquatIdle | AngeliA",
    "summary": "Class PoseAnimation_SquatIdle Namespace AngeliA Assembly AngeliA Framework.dll public class PoseAnimation_SquatIdle : PoseAnimation Inheritance object PoseAnimation PoseAnimation_SquatIdle Inherited Members PoseAnimation.POSE_Z_HAND PoseAnimation.A2G PoseAnimation.ValidHeadPosition PoseAnimation.DontBlendToNext PoseAnimation.DontBlendToPrev PoseAnimation.Target PoseAnimation.Rendering PoseAnimation.Movement PoseAnimation.Attackness PoseAnimation.Head PoseAnimation.Body PoseAnimation.Hip PoseAnimation.ShoulderL PoseAnimation.ShoulderR PoseAnimation.UpperArmL PoseAnimation.UpperArmR PoseAnimation.LowerArmL PoseAnimation.LowerArmR PoseAnimation.HandL PoseAnimation.HandR PoseAnimation.UpperLegL PoseAnimation.UpperLegR PoseAnimation.LowerLegL PoseAnimation.LowerLegR PoseAnimation.FootL PoseAnimation.FootR PoseAnimation.FacingRight PoseAnimation.FacingFront PoseAnimation.IsChargingAttack PoseAnimation.FacingSign PoseAnimation.FrontSign PoseAnimation.CurrentAnimationFrame PoseAnimation.AnimationType PoseAnimation.AttackLerp PoseAnimation.AttackEase PoseAnimation.OnGameInitialize() PoseAnimation.PerformAnimationFromPool(int, PoseCharacterRenderer) PoseAnimation.PerformAnimation(PoseAnimation, PoseCharacterRenderer) PoseAnimation.PerformAnimationBlendFromPool(int, int, float, PoseCharacterRenderer) PoseAnimation.PerformAnimationBlend(PoseAnimation, PoseAnimation, float, PoseCharacterRenderer) PoseAnimation.TryGetAnimationFromPool(int, out PoseAnimation) PoseAnimation.SetAsAnimating(PoseCharacterRenderer) PoseAnimation.ResetShoulderAndUpperArmPos(bool, bool) PoseAnimation.AttackHeadDown(float, int, int, int) PoseAnimation.AttackLegShake(float) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Fields TYPE_ID public static readonly int TYPE_ID Field Value int Methods Animate(PoseCharacterRenderer) public override void Animate(PoseCharacterRenderer renderer) Parameters renderer PoseCharacterRenderer"
  },
  "api/AngeliA.PoseAnimation_SquatMove.html": {
    "href": "api/AngeliA.PoseAnimation_SquatMove.html",
    "title": "Class PoseAnimation_SquatMove | AngeliA",
    "summary": "Class PoseAnimation_SquatMove Namespace AngeliA Assembly AngeliA Framework.dll public class PoseAnimation_SquatMove : PoseAnimation Inheritance object PoseAnimation PoseAnimation_SquatMove Inherited Members PoseAnimation.POSE_Z_HAND PoseAnimation.A2G PoseAnimation.ValidHeadPosition PoseAnimation.DontBlendToNext PoseAnimation.DontBlendToPrev PoseAnimation.Target PoseAnimation.Rendering PoseAnimation.Movement PoseAnimation.Attackness PoseAnimation.Head PoseAnimation.Body PoseAnimation.Hip PoseAnimation.ShoulderL PoseAnimation.ShoulderR PoseAnimation.UpperArmL PoseAnimation.UpperArmR PoseAnimation.LowerArmL PoseAnimation.LowerArmR PoseAnimation.HandL PoseAnimation.HandR PoseAnimation.UpperLegL PoseAnimation.UpperLegR PoseAnimation.LowerLegL PoseAnimation.LowerLegR PoseAnimation.FootL PoseAnimation.FootR PoseAnimation.FacingRight PoseAnimation.FacingFront PoseAnimation.IsChargingAttack PoseAnimation.FacingSign PoseAnimation.FrontSign PoseAnimation.CurrentAnimationFrame PoseAnimation.AnimationType PoseAnimation.AttackLerp PoseAnimation.AttackEase PoseAnimation.OnGameInitialize() PoseAnimation.PerformAnimationFromPool(int, PoseCharacterRenderer) PoseAnimation.PerformAnimation(PoseAnimation, PoseCharacterRenderer) PoseAnimation.PerformAnimationBlendFromPool(int, int, float, PoseCharacterRenderer) PoseAnimation.PerformAnimationBlend(PoseAnimation, PoseAnimation, float, PoseCharacterRenderer) PoseAnimation.TryGetAnimationFromPool(int, out PoseAnimation) PoseAnimation.SetAsAnimating(PoseCharacterRenderer) PoseAnimation.ResetShoulderAndUpperArmPos(bool, bool) PoseAnimation.AttackHeadDown(float, int, int, int) PoseAnimation.AttackLegShake(float) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Methods Animate(PoseCharacterRenderer) public override void Animate(PoseCharacterRenderer renderer) Parameters renderer PoseCharacterRenderer"
  },
  "api/AngeliA.PoseAnimation_SwimIdle.html": {
    "href": "api/AngeliA.PoseAnimation_SwimIdle.html",
    "title": "Class PoseAnimation_SwimIdle | AngeliA",
    "summary": "Class PoseAnimation_SwimIdle Namespace AngeliA Assembly AngeliA Framework.dll public class PoseAnimation_SwimIdle : PoseAnimation Inheritance object PoseAnimation PoseAnimation_SwimIdle Inherited Members PoseAnimation.POSE_Z_HAND PoseAnimation.A2G PoseAnimation.ValidHeadPosition PoseAnimation.DontBlendToNext PoseAnimation.DontBlendToPrev PoseAnimation.Target PoseAnimation.Rendering PoseAnimation.Movement PoseAnimation.Attackness PoseAnimation.Head PoseAnimation.Body PoseAnimation.Hip PoseAnimation.ShoulderL PoseAnimation.ShoulderR PoseAnimation.UpperArmL PoseAnimation.UpperArmR PoseAnimation.LowerArmL PoseAnimation.LowerArmR PoseAnimation.HandL PoseAnimation.HandR PoseAnimation.UpperLegL PoseAnimation.UpperLegR PoseAnimation.LowerLegL PoseAnimation.LowerLegR PoseAnimation.FootL PoseAnimation.FootR PoseAnimation.FacingRight PoseAnimation.FacingFront PoseAnimation.IsChargingAttack PoseAnimation.FacingSign PoseAnimation.FrontSign PoseAnimation.CurrentAnimationFrame PoseAnimation.AnimationType PoseAnimation.AttackLerp PoseAnimation.AttackEase PoseAnimation.OnGameInitialize() PoseAnimation.PerformAnimationFromPool(int, PoseCharacterRenderer) PoseAnimation.PerformAnimation(PoseAnimation, PoseCharacterRenderer) PoseAnimation.PerformAnimationBlendFromPool(int, int, float, PoseCharacterRenderer) PoseAnimation.PerformAnimationBlend(PoseAnimation, PoseAnimation, float, PoseCharacterRenderer) PoseAnimation.TryGetAnimationFromPool(int, out PoseAnimation) PoseAnimation.SetAsAnimating(PoseCharacterRenderer) PoseAnimation.ResetShoulderAndUpperArmPos(bool, bool) PoseAnimation.AttackHeadDown(float, int, int, int) PoseAnimation.AttackLegShake(float) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Methods Animate(PoseCharacterRenderer) public override void Animate(PoseCharacterRenderer renderer) Parameters renderer PoseCharacterRenderer"
  },
  "api/AngeliA.PoseAnimation_SwimMove.html": {
    "href": "api/AngeliA.PoseAnimation_SwimMove.html",
    "title": "Class PoseAnimation_SwimMove | AngeliA",
    "summary": "Class PoseAnimation_SwimMove Namespace AngeliA Assembly AngeliA Framework.dll public class PoseAnimation_SwimMove : PoseAnimation Inheritance object PoseAnimation PoseAnimation_SwimMove Inherited Members PoseAnimation.POSE_Z_HAND PoseAnimation.A2G PoseAnimation.ValidHeadPosition PoseAnimation.DontBlendToNext PoseAnimation.DontBlendToPrev PoseAnimation.Target PoseAnimation.Rendering PoseAnimation.Movement PoseAnimation.Attackness PoseAnimation.Head PoseAnimation.Body PoseAnimation.Hip PoseAnimation.ShoulderL PoseAnimation.ShoulderR PoseAnimation.UpperArmL PoseAnimation.UpperArmR PoseAnimation.LowerArmL PoseAnimation.LowerArmR PoseAnimation.HandL PoseAnimation.HandR PoseAnimation.UpperLegL PoseAnimation.UpperLegR PoseAnimation.LowerLegL PoseAnimation.LowerLegR PoseAnimation.FootL PoseAnimation.FootR PoseAnimation.FacingRight PoseAnimation.FacingFront PoseAnimation.IsChargingAttack PoseAnimation.FacingSign PoseAnimation.FrontSign PoseAnimation.CurrentAnimationFrame PoseAnimation.AnimationType PoseAnimation.AttackLerp PoseAnimation.AttackEase PoseAnimation.OnGameInitialize() PoseAnimation.PerformAnimationFromPool(int, PoseCharacterRenderer) PoseAnimation.PerformAnimation(PoseAnimation, PoseCharacterRenderer) PoseAnimation.PerformAnimationBlendFromPool(int, int, float, PoseCharacterRenderer) PoseAnimation.PerformAnimationBlend(PoseAnimation, PoseAnimation, float, PoseCharacterRenderer) PoseAnimation.TryGetAnimationFromPool(int, out PoseAnimation) PoseAnimation.SetAsAnimating(PoseCharacterRenderer) PoseAnimation.ResetShoulderAndUpperArmPos(bool, bool) PoseAnimation.AttackHeadDown(float, int, int, int) PoseAnimation.AttackLegShake(float) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Methods Animate(PoseCharacterRenderer) public override void Animate(PoseCharacterRenderer renderer) Parameters renderer PoseCharacterRenderer"
  },
  "api/AngeliA.PoseAnimation_Walk.html": {
    "href": "api/AngeliA.PoseAnimation_Walk.html",
    "title": "Class PoseAnimation_Walk | AngeliA",
    "summary": "Class PoseAnimation_Walk Namespace AngeliA Assembly AngeliA Framework.dll public class PoseAnimation_Walk : PoseAnimation Inheritance object PoseAnimation PoseAnimation_Walk Inherited Members PoseAnimation.POSE_Z_HAND PoseAnimation.A2G PoseAnimation.ValidHeadPosition PoseAnimation.DontBlendToNext PoseAnimation.DontBlendToPrev PoseAnimation.Target PoseAnimation.Rendering PoseAnimation.Movement PoseAnimation.Attackness PoseAnimation.Head PoseAnimation.Body PoseAnimation.Hip PoseAnimation.ShoulderL PoseAnimation.ShoulderR PoseAnimation.UpperArmL PoseAnimation.UpperArmR PoseAnimation.LowerArmL PoseAnimation.LowerArmR PoseAnimation.HandL PoseAnimation.HandR PoseAnimation.UpperLegL PoseAnimation.UpperLegR PoseAnimation.LowerLegL PoseAnimation.LowerLegR PoseAnimation.FootL PoseAnimation.FootR PoseAnimation.FacingRight PoseAnimation.FacingFront PoseAnimation.IsChargingAttack PoseAnimation.FacingSign PoseAnimation.FrontSign PoseAnimation.CurrentAnimationFrame PoseAnimation.AnimationType PoseAnimation.AttackLerp PoseAnimation.AttackEase PoseAnimation.OnGameInitialize() PoseAnimation.PerformAnimationFromPool(int, PoseCharacterRenderer) PoseAnimation.PerformAnimation(PoseAnimation, PoseCharacterRenderer) PoseAnimation.PerformAnimationBlendFromPool(int, int, float, PoseCharacterRenderer) PoseAnimation.PerformAnimationBlend(PoseAnimation, PoseAnimation, float, PoseCharacterRenderer) PoseAnimation.TryGetAnimationFromPool(int, out PoseAnimation) PoseAnimation.SetAsAnimating(PoseCharacterRenderer) PoseAnimation.ResetShoulderAndUpperArmPos(bool, bool) PoseAnimation.AttackHeadDown(float, int, int, int) PoseAnimation.AttackLegShake(float) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Methods Animate(PoseCharacterRenderer) public override void Animate(PoseCharacterRenderer renderer) Parameters renderer PoseCharacterRenderer"
  },
  "api/AngeliA.PoseCharacter.html": {
    "href": "api/AngeliA.PoseCharacter.html",
    "title": "Class PoseCharacter | AngeliA",
    "summary": "Class PoseCharacter Namespace AngeliA Assembly AngeliA Framework.dll public abstract class PoseCharacter : Character, IMapItem, IDamageReceiver, ICarrier, IWithCharacterMovement, IWithCharacterAttackness, IWithCharacterHealth, IWithCharacterBuff, IWithCharacterRenderer Inheritance object Entity Rigidbody Character PoseCharacter Implements IMapItem IDamageReceiver ICarrier IWithCharacterMovement IWithCharacterAttackness IWithCharacterHealth IWithCharacterBuff IWithCharacterRenderer Derived DefaultCharacter Inherited Members Character.INVENTORY_COLUMN Character.INVENTORY_ROW Character.Teleporting Character.TeleportEndFrame Character.TeleportingWithPortal Character.TeleportToFrontSide Character.CurrentAttackSpeedRate Character.PhysicalLayer Character.SelfCollisionMask Character.AirDragX Character.AirDragY Character.CarryOtherOnTop Character.AllowBeingPush Character.FacingRight Character.EjectWhenInsideGround Character.InventoryType Character.DefaultCharacterHeight Character.Team Character.AttackTargetTeam Character.IgnoreDamageType Character.Bouncy Character.HelmetInteractable Character.BodySuitInteractable Character.GlovesInteractable Character.ShoesInteractable Character.JewelryInteractable Character.HandToolInteractable Character.CharacterState Character.AnimationType Character.SleepStartFrame Character.PassOutFrame Character.LastRequireBounceFrame Character.DespawnAfterPassoutDelay Character.InventoryID Character.RenderingCellIndex Character.FullSleepDuration Character.TeleportDuration Character.Movement Character.Attackness Character.Health Character.Rendering Character.NativeMovement Character.NativeAttackness Character.NativeHealth Character.NativeRenderer Character.Buff Character.OnActivated() Character.OnInactivated() Character.AfterReposition(Int3, Int3) Character.FirstUpdate() Character.Update() Character.LateUpdate() Character.SetCharacterState(CharacterState) Character.GetCurrentPoseAnimationType() Character.OnCharacterRendered() Character.EnterTeleportState(bool, bool, bool) Character.LockAnimationType(CharacterAnimationType, int) Character.GetBonusFromFullSleep() Character.InsideGroundCheck() Character.OnDamaged(Damage) Character.Bounce() Character.CancelBounce() Character.ResetInventoryUpdate(int) Character.EquipmentAvailable(EquipmentType) Character.TryRepairAllEquipments(bool) Character.CreateNativeMovement() Character.CreateNativeAttackness() Character.CreateNativeHealth() Character.OverrideMovement(CharacterMovement, int) Character.OverrideAttackness(CharacterAttackness, int) Character.OverrideHealth(CharacterHealth, int) Character.OverrideRenderer(CharacterRenderer, int) Character.IsAttackAllowedByMovement() Character.IsAttackAllowedByEquipment() Character.ForceFillTrigger(int) Character.IgnoreDamageFromLevel(int) Character.GetDisplayName() Character.GetDescription() Rigidbody.Rect Rigidbody.IsGrounded Rigidbody.IsInsideGround Rigidbody.InWater Rigidbody.VelocityX Rigidbody.VelocityY Rigidbody.BounceSpeedRate Rigidbody.OffsetX Rigidbody.OffsetY Rigidbody.GroundedID Rigidbody.PrevX Rigidbody.PrevY Rigidbody.DeltaPositionX Rigidbody.DeltaPositionY Rigidbody.MomentumX Rigidbody.MomentumY Rigidbody.RequireDodgeOverlap Rigidbody.GlobalGravity Rigidbody.FallingGravityScale Rigidbody.RisingGravityScale Rigidbody.CollisionMask Rigidbody.IgnoreGroundCheck Rigidbody.IgnoreGravity Rigidbody.IgnorePhysics Rigidbody.IgnoreInsideGround Rigidbody.IgnoreOneway Rigidbody.IgnoreMomentum Rigidbody.MaxGravitySpeed Rigidbody.WaterFloatSpeed Rigidbody.WaterSpeedRate Rigidbody.DestroyWhenInsideGround Rigidbody.PerformMove(int, int, bool) Rigidbody.MakeGrounded(int, int) Rigidbody.CancelMakeGrounded() Rigidbody.Push(int) Rigidbody.PerformGroundCheck(IRect, out PhysicsCell) Rigidbody.FillAsTrigger(int, int) Rigidbody.FillAsOnewayUp(int, int) Rigidbody.OnInsideGroundDestroyed() Rigidbody.GroundedCheck() Rigidbody.RefreshPrevPosition() Entity.Active Entity.X Entity.Y Entity.Width Entity.Height Entity.TypeID Entity.SpawnFrame Entity.FromWorld Entity.InstanceOrder Entity.MapUnitPos Entity.InstanceID Entity.IgnoreReposition Entity.XY Entity.Size Entity.Center Entity.CenterX Entity.CenterY Entity.PivotUnitPosition Entity.IgnoreDespawnFromMap(int) Entity.CancelIgnoreDespawnFromMap() Entity.Draw() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Properties FinalCharacterHeight public override int FinalCharacterHeight { get; } Property Value int Methods BeforeUpdate() public override void BeforeUpdate() CreateNativeRenderer() protected override CharacterRenderer CreateNativeRenderer() Returns CharacterRenderer"
  },
  "api/AngeliA.PoseCharacterRenderer.html": {
    "href": "api/AngeliA.PoseCharacterRenderer.html",
    "title": "Class PoseCharacterRenderer | AngeliA",
    "summary": "Class PoseCharacterRenderer Namespace AngeliA Assembly AngeliA Framework.dll public class PoseCharacterRenderer : CharacterRenderer Inheritance object CharacterRenderer PoseCharacterRenderer Inherited Members CharacterRenderer.TargetCharacter CharacterRenderer.CurrentAnimationFrame CharacterRenderer.CurrentRenderingBounce CharacterRenderer.SpinOnGroundPound CharacterRenderer.Tint CharacterRenderer.Scale object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Constructors PoseCharacterRenderer(Character) public PoseCharacterRenderer(Character target) Parameters target Character Fields BODY_PART_COUNT How many body part does a pose character have public const int BODY_PART_COUNT = 17 Field Value int BODY_PART_NAME public static readonly string[] BODY_PART_NAME Field Value string[] BodyParts All body parts of the pose character public readonly BodyPart[] BodyParts Field Value BodyPart[] CM_PER_PX How many cm does one artwork pixel represents public const int CM_PER_PX = 5 Field Value int DEFAULT_BODY_PART_ID public static readonly int[] DEFAULT_BODY_PART_ID Field Value int[] EarID ID of current animal-ear gadget instance (like cat-girl's ears, not human ears) public readonly FrameBasedInt EarID Field Value FrameBasedInt FaceID ID of current face gadget instance public readonly FrameBasedInt FaceID Field Value FrameBasedInt ForceFaceExpressionIndex Which face expression does the face need to render public readonly FrameBasedInt ForceFaceExpressionIndex Field Value FrameBasedInt HairID ID of current hair gadget instance public readonly FrameBasedInt HairID Field Value FrameBasedInt HandGrabAttackTwistL Angle twist of the object grabbing by the left hand (0 means disappear, 1000 means normal) public readonly FrameBasedInt HandGrabAttackTwistL Field Value FrameBasedInt HandGrabAttackTwistR Angle twist of the object grabbing by the right hand (0 means disappear, 1000 means normal) public readonly FrameBasedInt HandGrabAttackTwistR Field Value FrameBasedInt HandGrabRotationL Rotation of the object grabbing by the left hand public readonly FrameBasedInt HandGrabRotationL Field Value FrameBasedInt HandGrabRotationR Rotation of the object grabbing by the right hand public readonly FrameBasedInt HandGrabRotationR Field Value FrameBasedInt HandGrabScaleL Size scaling of the object grabbing by the left hand (0 means 0%, 1000 means 100%) public readonly FrameBasedInt HandGrabScaleL Field Value FrameBasedInt HandGrabScaleR Size scaling of the object grabbing by the right hand (0 means 0%, 1000 means 100%) public readonly FrameBasedInt HandGrabScaleR Field Value FrameBasedInt HornID ID of current horn gadget instance public readonly FrameBasedInt HornID Field Value FrameBasedInt SuitBody Current body suit id (cloth with sleeves) public readonly FrameBasedInt SuitBody Field Value FrameBasedInt SuitFoot Current shoes suit id public readonly FrameBasedInt SuitFoot Field Value FrameBasedInt SuitHand Current gloves suit id public readonly FrameBasedInt SuitHand Field Value FrameBasedInt SuitHead Current hat suit id public readonly FrameBasedInt SuitHead Field Value FrameBasedInt SuitHip Current hip suit id (pants or skirt) public readonly FrameBasedInt SuitHip Field Value FrameBasedInt TailID ID of current tail gadget instance public readonly FrameBasedInt TailID Field Value FrameBasedInt WingID ID of current wing gadget instance public readonly FrameBasedInt WingID Field Value FrameBasedInt Properties BasicRootY Mid-Bottom local position of character hip y position public int BasicRootY { get; set; } Property Value int BlendDuration How many frames does it takes the character to transition from one pose to another public int BlendDuration { get; set; } Property Value int Body Body of the pose character public BodyPart Body { get; init; } Property Value BodyPart BodyTwist Make body rotate left or right public int BodyTwist { get; set; } Property Value int CharacterHeight Character body height in cm public int CharacterHeight { get; set; } Property Value int FootL Left foot of the pose character public BodyPart FootL { get; init; } Property Value BodyPart FootR Right foot of the pose character public BodyPart FootR { get; init; } Property Value BodyPart HandL Left hand of the pose character public BodyPart HandL { get; init; } Property Value BodyPart HandR Right hand of the pose character public BodyPart HandR { get; init; } Property Value BodyPart Head Head of the pose character public BodyPart Head { get; init; } Property Value BodyPart HeadTwist Make head rotate like shaking head public int HeadTwist { get; set; } Property Value int Hip Hip of the pose character public BodyPart Hip { get; init; } Property Value BodyPart LowerArmL Left lower arm of the pose character public BodyPart LowerArmL { get; init; } Property Value BodyPart LowerArmR Right lower arm of the pose character public BodyPart LowerArmR { get; init; } Property Value BodyPart LowerLegL Left lower leg of the pose character public BodyPart LowerLegL { get; init; } Property Value BodyPart LowerLegR Right lower leg of the pose character public BodyPart LowerLegR { get; init; } Property Value BodyPart PoseRootX Total offset X for pose rendering public int PoseRootX { get; set; } Property Value int PoseRootY Total offset Y for pose rendering public int PoseRootY { get; set; } Property Value int RenderedCellZ Basic rendering Z value for last time character get rendered public int RenderedCellZ { get; } Property Value int ShoulderL Left shoulder of the pose character public BodyPart ShoulderL { get; init; } Property Value BodyPart ShoulderR Right shoulder of the pose character public BodyPart ShoulderR { get; init; } Property Value BodyPart UpperArmL Left upper arm of the pose character public BodyPart UpperArmL { get; init; } Property Value BodyPart UpperArmR Right upper arm of the pose character public BodyPart UpperArmR { get; init; } Property Value BodyPart UpperLegL Left upper leg of the pose character public BodyPart UpperLegL { get; init; } Property Value BodyPart UpperLegR Right upper leg of the pose character public BodyPart UpperLegR { get; init; } Property Value BodyPart Methods BeforeUpdate() public override void BeforeUpdate() GetGadgetID(BodyGadgetType) Get current body gadget ID the character is using public int GetGadgetID(BodyGadgetType type) Parameters type BodyGadgetType Returns int GetSuitID(ClothType) Get current suit ID the character is using public int GetSuitID(ClothType type) Parameters type ClothType Returns int LateUpdate() public override void LateUpdate() ManualPoseAnimate(int, int) Make the renderer draw the character based on the given animation for specified frames long public void ManualPoseAnimate(int id, int duration = 1) Parameters id int duration int OnActivated() Callback function for character entity get activated public override void OnActivated() OverridePoseAnimation(CharacterAnimationType, int, int) Override animation for given animation type for specified frames long public void OverridePoseAnimation(CharacterAnimationType type, int id, int duration = 1) Parameters type CharacterAnimationType id int duration int PerformPoseAnimation() protected virtual void PerformPoseAnimation() ReloadRenderingConfigPoolFromFileAndSheet(bool) public static void ReloadRenderingConfigPoolFromFileAndSheet(bool forceReset = false) Parameters forceReset bool RenderBodyGadgets() protected virtual void RenderBodyGadgets() RenderCloths() protected virtual void RenderCloths() RenderEquipment() protected virtual void RenderEquipment() RenderInventory() protected virtual void RenderInventory() SaveCharacterToConfig(bool) public void SaveCharacterToConfig(bool saveToFile = false) Parameters saveToFile bool SyncRenderingConfigFromPool(bool) public void SyncRenderingConfigFromPool(bool forceSync = false) Parameters forceSync bool TryGetConfigFromPool(int, out CharacterRenderingConfig) public static bool TryGetConfigFromPool(int id, out CharacterRenderingConfig config) Parameters id int config CharacterRenderingConfig Returns bool"
  },
  "api/AngeliA.PoseHandheld_Block.html": {
    "href": "api/AngeliA.PoseHandheld_Block.html",
    "title": "Class PoseHandheld_Block | AngeliA",
    "summary": "Class PoseHandheld_Block Namespace AngeliA Assembly AngeliA Framework.dll public class PoseHandheld_Block : HandheldPoseAnimation Inheritance object PoseAnimation HandheldPoseAnimation PoseHandheld_Block Inherited Members PoseAnimation.POSE_Z_HAND PoseAnimation.A2G PoseAnimation.ValidHeadPosition PoseAnimation.DontBlendToNext PoseAnimation.DontBlendToPrev PoseAnimation.Target PoseAnimation.Rendering PoseAnimation.Movement PoseAnimation.Attackness PoseAnimation.Head PoseAnimation.Body PoseAnimation.Hip PoseAnimation.ShoulderL PoseAnimation.ShoulderR PoseAnimation.UpperArmL PoseAnimation.UpperArmR PoseAnimation.LowerArmL PoseAnimation.LowerArmR PoseAnimation.HandL PoseAnimation.HandR PoseAnimation.UpperLegL PoseAnimation.UpperLegR PoseAnimation.LowerLegL PoseAnimation.LowerLegR PoseAnimation.FootL PoseAnimation.FootR PoseAnimation.FacingRight PoseAnimation.FacingFront PoseAnimation.IsChargingAttack PoseAnimation.FacingSign PoseAnimation.FrontSign PoseAnimation.CurrentAnimationFrame PoseAnimation.AnimationType PoseAnimation.AttackLerp PoseAnimation.AttackEase PoseAnimation.OnGameInitialize() PoseAnimation.PerformAnimationFromPool(int, PoseCharacterRenderer) PoseAnimation.PerformAnimation(PoseAnimation, PoseCharacterRenderer) PoseAnimation.PerformAnimationBlendFromPool(int, int, float, PoseCharacterRenderer) PoseAnimation.PerformAnimationBlend(PoseAnimation, PoseAnimation, float, PoseCharacterRenderer) PoseAnimation.TryGetAnimationFromPool(int, out PoseAnimation) PoseAnimation.Animate(PoseCharacterRenderer) PoseAnimation.SetAsAnimating(PoseCharacterRenderer) PoseAnimation.ResetShoulderAndUpperArmPos(bool, bool) PoseAnimation.AttackHeadDown(float, int, int, int) PoseAnimation.AttackLegShake(float) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Fields TYPE_ID public static readonly int TYPE_ID Field Value int Methods DrawTool(HandTool, PoseCharacterRenderer) public override void DrawTool(HandTool tool, PoseCharacterRenderer renderer) Parameters tool HandTool renderer PoseCharacterRenderer"
  },
  "api/AngeliA.PoseHandheld_Tool.html": {
    "href": "api/AngeliA.PoseHandheld_Tool.html",
    "title": "Class PoseHandheld_Tool | AngeliA",
    "summary": "Class PoseHandheld_Tool Namespace AngeliA Assembly AngeliA Framework.dll public class PoseHandheld_Tool : HandheldPoseAnimation Inheritance object PoseAnimation HandheldPoseAnimation PoseHandheld_Tool Inherited Members PoseAnimation.POSE_Z_HAND PoseAnimation.A2G PoseAnimation.ValidHeadPosition PoseAnimation.DontBlendToNext PoseAnimation.DontBlendToPrev PoseAnimation.Target PoseAnimation.Rendering PoseAnimation.Movement PoseAnimation.Attackness PoseAnimation.Head PoseAnimation.Body PoseAnimation.Hip PoseAnimation.ShoulderL PoseAnimation.ShoulderR PoseAnimation.UpperArmL PoseAnimation.UpperArmR PoseAnimation.LowerArmL PoseAnimation.LowerArmR PoseAnimation.HandL PoseAnimation.HandR PoseAnimation.UpperLegL PoseAnimation.UpperLegR PoseAnimation.LowerLegL PoseAnimation.LowerLegR PoseAnimation.FootL PoseAnimation.FootR PoseAnimation.FacingRight PoseAnimation.FacingFront PoseAnimation.IsChargingAttack PoseAnimation.FacingSign PoseAnimation.FrontSign PoseAnimation.CurrentAnimationFrame PoseAnimation.AnimationType PoseAnimation.AttackLerp PoseAnimation.AttackEase PoseAnimation.OnGameInitialize() PoseAnimation.PerformAnimationFromPool(int, PoseCharacterRenderer) PoseAnimation.PerformAnimation(PoseAnimation, PoseCharacterRenderer) PoseAnimation.PerformAnimationBlendFromPool(int, int, float, PoseCharacterRenderer) PoseAnimation.PerformAnimationBlend(PoseAnimation, PoseAnimation, float, PoseCharacterRenderer) PoseAnimation.TryGetAnimationFromPool(int, out PoseAnimation) PoseAnimation.Animate(PoseCharacterRenderer) PoseAnimation.SetAsAnimating(PoseCharacterRenderer) PoseAnimation.ResetShoulderAndUpperArmPos(bool, bool) PoseAnimation.AttackHeadDown(float, int, int, int) PoseAnimation.AttackLegShake(float) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Fields TYPE_ID public static readonly int TYPE_ID Field Value int Methods DrawTool(HandTool, PoseCharacterRenderer) public override void DrawTool(HandTool tool, PoseCharacterRenderer renderer) Parameters tool HandTool renderer PoseCharacterRenderer"
  },
  "api/AngeliA.PosePerform_Block.html": {
    "href": "api/AngeliA.PosePerform_Block.html",
    "title": "Class PosePerform_Block | AngeliA",
    "summary": "Class PosePerform_Block Namespace AngeliA Assembly AngeliA Framework.dll public class PosePerform_Block : PoseAnimation Inheritance object PoseAnimation PosePerform_Block Inherited Members PoseAnimation.POSE_Z_HAND PoseAnimation.A2G PoseAnimation.ValidHeadPosition PoseAnimation.DontBlendToNext PoseAnimation.DontBlendToPrev PoseAnimation.Target PoseAnimation.Rendering PoseAnimation.Movement PoseAnimation.Attackness PoseAnimation.Head PoseAnimation.Body PoseAnimation.Hip PoseAnimation.ShoulderL PoseAnimation.ShoulderR PoseAnimation.UpperArmL PoseAnimation.UpperArmR PoseAnimation.LowerArmL PoseAnimation.LowerArmR PoseAnimation.HandL PoseAnimation.HandR PoseAnimation.UpperLegL PoseAnimation.UpperLegR PoseAnimation.LowerLegL PoseAnimation.LowerLegR PoseAnimation.FootL PoseAnimation.FootR PoseAnimation.FacingRight PoseAnimation.FacingFront PoseAnimation.IsChargingAttack PoseAnimation.FacingSign PoseAnimation.FrontSign PoseAnimation.CurrentAnimationFrame PoseAnimation.AnimationType PoseAnimation.AttackLerp PoseAnimation.AttackEase PoseAnimation.OnGameInitialize() PoseAnimation.PerformAnimationFromPool(int, PoseCharacterRenderer) PoseAnimation.PerformAnimation(PoseAnimation, PoseCharacterRenderer) PoseAnimation.PerformAnimationBlendFromPool(int, int, float, PoseCharacterRenderer) PoseAnimation.PerformAnimationBlend(PoseAnimation, PoseAnimation, float, PoseCharacterRenderer) PoseAnimation.TryGetAnimationFromPool(int, out PoseAnimation) PoseAnimation.SetAsAnimating(PoseCharacterRenderer) PoseAnimation.ResetShoulderAndUpperArmPos(bool, bool) PoseAnimation.AttackHeadDown(float, int, int, int) PoseAnimation.AttackLegShake(float) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Fields TYPE_ID public static readonly int TYPE_ID Field Value int Methods Animate(PoseCharacterRenderer) public override void Animate(PoseCharacterRenderer renderer) Parameters renderer PoseCharacterRenderer Build() public static void Build()"
  },
  "api/AngeliA.PosePerform_Tool.html": {
    "href": "api/AngeliA.PosePerform_Tool.html",
    "title": "Class PosePerform_Tool | AngeliA",
    "summary": "Class PosePerform_Tool Namespace AngeliA Assembly AngeliA Framework.dll public class PosePerform_Tool : PoseAnimation Inheritance object PoseAnimation PosePerform_Tool Inherited Members PoseAnimation.POSE_Z_HAND PoseAnimation.A2G PoseAnimation.ValidHeadPosition PoseAnimation.DontBlendToNext PoseAnimation.DontBlendToPrev PoseAnimation.Target PoseAnimation.Rendering PoseAnimation.Movement PoseAnimation.Attackness PoseAnimation.Head PoseAnimation.Body PoseAnimation.Hip PoseAnimation.ShoulderL PoseAnimation.ShoulderR PoseAnimation.UpperArmL PoseAnimation.UpperArmR PoseAnimation.LowerArmL PoseAnimation.LowerArmR PoseAnimation.HandL PoseAnimation.HandR PoseAnimation.UpperLegL PoseAnimation.UpperLegR PoseAnimation.LowerLegL PoseAnimation.LowerLegR PoseAnimation.FootL PoseAnimation.FootR PoseAnimation.FacingRight PoseAnimation.FacingFront PoseAnimation.IsChargingAttack PoseAnimation.FacingSign PoseAnimation.FrontSign PoseAnimation.CurrentAnimationFrame PoseAnimation.AnimationType PoseAnimation.AttackLerp PoseAnimation.AttackEase PoseAnimation.OnGameInitialize() PoseAnimation.PerformAnimationFromPool(int, PoseCharacterRenderer) PoseAnimation.PerformAnimation(PoseAnimation, PoseCharacterRenderer) PoseAnimation.PerformAnimationBlendFromPool(int, int, float, PoseCharacterRenderer) PoseAnimation.PerformAnimationBlend(PoseAnimation, PoseAnimation, float, PoseCharacterRenderer) PoseAnimation.TryGetAnimationFromPool(int, out PoseAnimation) PoseAnimation.SetAsAnimating(PoseCharacterRenderer) PoseAnimation.ResetShoulderAndUpperArmPos(bool, bool) PoseAnimation.AttackHeadDown(float, int, int, int) PoseAnimation.AttackLegShake(float) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Fields TYPE_ID public static readonly int TYPE_ID Field Value int Methods Animate(PoseCharacterRenderer) public override void Animate(PoseCharacterRenderer renderer) Parameters renderer PoseCharacterRenderer Perform() public static void Perform()"
  },
  "api/AngeliA.ProjectType.html": {
    "href": "api/AngeliA.ProjectType.html",
    "title": "Enum ProjectType | AngeliA",
    "summary": "Enum ProjectType Namespace AngeliA Assembly AngeliA Framework.dll public enum ProjectType Extension Methods Extension.Next<E>(E) Extension.Prev<E>(E) Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Fields Artwork = 1 EngineTheme = 2 Game = 0"
  },
  "api/AngeliA.PropGroupAttribute.html": {
    "href": "api/AngeliA.PropGroupAttribute.html",
    "title": "Class PropGroupAttribute | AngeliA",
    "summary": "Class PropGroupAttribute Namespace AngeliA Assembly AngeliA Framework.dll [AttributeUsage(AttributeTargets.Property|AttributeTargets.Field, AllowMultiple = false)] public class PropGroupAttribute : Attribute Inheritance object Attribute PropGroupAttribute Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Constructors PropGroupAttribute(string) public PropGroupAttribute(string name) Parameters name string Fields Name public string Name Field Value string"
  },
  "api/AngeliA.PropSeparatorAttribute.html": {
    "href": "api/AngeliA.PropSeparatorAttribute.html",
    "title": "Class PropSeparatorAttribute | AngeliA",
    "summary": "Class PropSeparatorAttribute Namespace AngeliA Assembly AngeliA Framework.dll [AttributeUsage(AttributeTargets.Property|AttributeTargets.Field, AllowMultiple = false)] public class PropSeparatorAttribute : Attribute Inheritance object Attribute PropSeparatorAttribute Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.PropVisibilityAttribute.html": {
    "href": "api/AngeliA.PropVisibilityAttribute.html",
    "title": "Class PropVisibilityAttribute | AngeliA",
    "summary": "Class PropVisibilityAttribute Namespace AngeliA Assembly AngeliA Framework.dll [AttributeUsage(AttributeTargets.Property|AttributeTargets.Field, AllowMultiple = false)] public class PropVisibilityAttribute : Attribute Inheritance object Attribute PropVisibilityAttribute Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Constructors PropVisibilityAttribute(string, CompareMode) public PropVisibilityAttribute(string boolName, CompareMode compare = CompareMode.Equal) Parameters boolName string compare CompareMode PropVisibilityAttribute(string, CompareMode, int) public PropVisibilityAttribute(string intName, CompareMode compare, int compareTargetValue) Parameters intName string compare CompareMode compareTargetValue int PropVisibilityAttribute(string, CompareMode, string) public PropVisibilityAttribute(string targetName, CompareMode compare, string compareTargetName) Parameters targetName string compare CompareMode compareTargetName string Fields Compare public readonly CompareMode Compare Field Value CompareMode CompareTargetName public readonly string CompareTargetName Field Value string CompareTargetValue public readonly int CompareTargetValue Field Value int TargetName public readonly string TargetName Field Value string Methods PropMatch(Dictionary<string, int>) public bool PropMatch(Dictionary<string, int> map) Parameters map Dictionary<string, int> Returns bool PropMatch(object) public bool PropMatch(object host) Parameters host object Returns bool"
  },
  "api/AngeliA.RenderLayer.html": {
    "href": "api/AngeliA.RenderLayer.html",
    "title": "Class RenderLayer | AngeliA",
    "summary": "Class RenderLayer Namespace AngeliA Assembly AngeliA Framework.dll public static class RenderLayer Inheritance object RenderLayer Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields ADD public const int ADD = 6 Field Value int BEHIND public const int BEHIND = 1 Field Value int COLOR public const int COLOR = 4 Field Value int COUNT public const int COUNT = 8 Field Value int DEFAULT public const int DEFAULT = 3 Field Value int DEFAULT_CAPACITY public static readonly int[] DEFAULT_CAPACITY Field Value int[] MULT public const int MULT = 5 Field Value int NAMES public static readonly string[] NAMES Field Value string[] SHADOW public const int SHADOW = 2 Field Value int UI public const int UI = 7 Field Value int WALLPAPER public const int WALLPAPER = 0 Field Value int"
  },
  "api/AngeliA.Renderer.CellComparer.html": {
    "href": "api/AngeliA.Renderer.CellComparer.html",
    "title": "Class Renderer.CellComparer | AngeliA",
    "summary": "Class Renderer.CellComparer Namespace AngeliA Assembly AngeliA Framework.dll public class Renderer.CellComparer : IComparer<Cell> Inheritance object Renderer.CellComparer Implements IComparer<Cell> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Fields Instance public static readonly Renderer.CellComparer Instance Field Value Renderer.CellComparer Methods Compare(Cell, Cell) Compares two objects and returns a value indicating whether one is less than, equal to, or greater than the other. public int Compare(Cell a, Cell b) Parameters a Cell b Cell Returns int A signed integer that indicates the relative values of x and y, as shown in the following table. Value Meaning Less than zero x is less than y. Zero x equals y. Greater than zero x is greater than y."
  },
  "api/AngeliA.Renderer.html": {
    "href": "api/AngeliA.Renderer.html",
    "title": "Class Renderer | AngeliA",
    "summary": "Class Renderer Namespace AngeliA Assembly AngeliA Framework.dll public static class Renderer Inheritance object Renderer Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields MainSheet public static readonly Sheet MainSheet Field Value Sheet Properties AltSheetCount public static int AltSheetCount { get; } Property Value int CameraRange public static FRect CameraRange { get; } Property Value FRect CameraRect public static IRect CameraRect { get; } Property Value IRect CameraRestrictionRate public static float CameraRestrictionRate { get; } Property Value float CurrentFontIndex public static int CurrentFontIndex { get; } Property Value int CurrentLayerIndex public static int CurrentLayerIndex { get; } Property Value int CurrentSheet public static Sheet CurrentSheet { get; } Property Value Sheet CurrentSheetIndex public static int CurrentSheetIndex { get; set; } Property Value int GroupCount public static int GroupCount { get; } Property Value int IsReady public static bool IsReady { get; } Property Value bool LayerCount public static int LayerCount { get; } Property Value int ScreenRenderRect public static IRect ScreenRenderRect { get; } Property Value IRect SpriteCount public static int SpriteCount { get; } Property Value int Methods AbandonLayerSort(int) public static void AbandonLayerSort(int layerIndex) Parameters layerIndex int AddAltSheet(Sheet) public static int AddAltSheet(Sheet sheet) Parameters sheet Sheet Returns int BeginDraw() [OnGameUpdate(-512)] public static void BeginDraw() ClampCells(Cell[], IRect) public static void ClampCells(Cell[] cells, IRect rect) Parameters cells Cell[] rect IRect ClampCells(IRect, int, int) public static void ClampCells(IRect rect, int startIndex, int endIndex = -1) Parameters rect IRect startIndex int endIndex int ClampCells(int, IRect, int, int) public static void ClampCells(int layerIndex, IRect rect, int startIndex, int endIndex = -1) Parameters layerIndex int rect IRect startIndex int endIndex int ClearCharSpritePool() public static void ClearCharSpritePool() ClearFontIndexIdMap() public static void ClearFontIndexIdMap() Draw(AngeSprite, IRect, Color32, int) public static Cell Draw(AngeSprite sprite, IRect rect, Color32 color, int z = -2147483648) Parameters sprite AngeSprite rect IRect color Color32 z int Returns Cell Draw(AngeSprite, IRect, int) public static Cell Draw(AngeSprite sprite, IRect rect, int z = -2147483648) Parameters sprite AngeSprite rect IRect z int Returns Cell Draw(AngeSprite, int, int, int, int, int, int, int, Color32, int, bool) public static Cell Draw(AngeSprite sprite, int x, int y, int pivotX, int pivotY, int rotation, int width, int height, Color32 color, int z = -2147483648, bool ignoreAttach = false) Parameters sprite AngeSprite x int y int pivotX int pivotY int rotation int width int height int color Color32 z int ignoreAttach bool Returns Cell Draw(AngeSprite, int, int, int, int, int, int, int, int) public static Cell Draw(AngeSprite sprite, int x, int y, int pivotX, int pivotY, int rotation, int width, int height, int z = -2147483648) Parameters sprite AngeSprite x int y int pivotX int pivotY int rotation int width int height int z int Returns Cell Draw(SpriteCode, IRect, Color32, int) public static Cell Draw(SpriteCode globalID, IRect rect, Color32 color, int z = -2147483648) Parameters globalID SpriteCode rect IRect color Color32 z int Returns Cell Draw(SpriteCode, IRect, int) public static Cell Draw(SpriteCode globalID, IRect rect, int z = -2147483648) Parameters globalID SpriteCode rect IRect z int Returns Cell Draw(SpriteCode, int, int, int, int, int, int, int, Color32, int) public static Cell Draw(SpriteCode globalID, int x, int y, int pivotX, int pivotY, int rotation, int width, int height, Color32 color, int z = -2147483648) Parameters globalID SpriteCode x int y int pivotX int pivotY int rotation int width int height int color Color32 z int Returns Cell Draw(SpriteCode, int, int, int, int, int, int, int, int) public static Cell Draw(SpriteCode globalID, int x, int y, int pivotX, int pivotY, int rotation, int width, int height, int z = -2147483648) Parameters globalID SpriteCode x int y int pivotX int pivotY int rotation int width int height int z int Returns Cell Draw(int, IRect, Color32, int) public static Cell Draw(int globalID, IRect rect, Color32 color, int z = -2147483648) Parameters globalID int rect IRect color Color32 z int Returns Cell Draw(int, IRect, int) public static Cell Draw(int globalID, IRect rect, int z = -2147483648) Parameters globalID int rect IRect z int Returns Cell Draw(int, int, int, int, int, int, int, int, Color32, int) public static Cell Draw(int globalID, int x, int y, int pivotX, int pivotY, int rotation, int width, int height, Color32 color, int z = -2147483648) Parameters globalID int x int y int pivotX int pivotY int rotation int width int height int color Color32 z int Returns Cell Draw(int, int, int, int, int, int, int, int, int) public static Cell Draw(int globalID, int x, int y, int pivotX, int pivotY, int rotation, int width, int height, int z = -2147483648) Parameters globalID int x int y int pivotX int pivotY int rotation int width int height int z int Returns Cell DrawAnimation(SpriteGroup, int, int, int, int, int, int, int, int, int) public static Cell DrawAnimation(SpriteGroup group, int x, int y, int pivotX, int pivotY, int rotation, int width, int height, int frame, int z = -2147483648) Parameters group SpriteGroup x int y int pivotX int pivotY int rotation int width int height int frame int z int Returns Cell DrawAnimation(int, int, int, int, int, int, int, int, int, int) public static Cell DrawAnimation(int chainID, int x, int y, int pivotX, int pivotY, int rotation, int width, int height, int frame, int z = -2147483648) Parameters chainID int x int y int pivotX int pivotY int rotation int width int height int frame int z int Returns Cell DrawChar(CharSprite, int, int, int, int, Color32) public static Cell DrawChar(CharSprite sprite, int x, int y, int width, int height, Color32 color) Parameters sprite CharSprite x int y int width int height int color Color32 Returns Cell DrawChar(char, int, int, int, int, Color32) public static Cell DrawChar(char c, int x, int y, int width, int height, Color32 color) Parameters c char x int y int width int height int color Color32 Returns Cell DrawPixel(IRect, Color32, int) public static Cell DrawPixel(IRect rect, Color32 color, int z = -2147483648) Parameters rect IRect color Color32 z int Returns Cell DrawPixel(IRect, int) public static Cell DrawPixel(IRect rect, int z = -2147483648) Parameters rect IRect z int Returns Cell DrawPixel(int, int, int, int, int, int, int, Color32, int) public static Cell DrawPixel(int x, int y, int pivotX, int pivotY, int rotation, int width, int height, Color32 color, int z = -2147483648) Parameters x int y int pivotX int pivotY int rotation int width int height int color Color32 z int Returns Cell DrawPixel(int, int, int, int, int, int, int, int) public static Cell DrawPixel(int x, int y, int pivotX, int pivotY, int rotation, int width, int height, int z = -2147483648) Parameters x int y int pivotX int pivotY int rotation int width int height int z int Returns Cell DrawSlice(AngeSprite, IRect) public static Cell[] DrawSlice(AngeSprite sprite, IRect rect) Parameters sprite AngeSprite rect IRect Returns Cell[] DrawSlice(AngeSprite, IRect, Color32, int) public static Cell[] DrawSlice(AngeSprite sprite, IRect rect, Color32 color, int z = -2147483648) Parameters sprite AngeSprite rect IRect color Color32 z int Returns Cell[] DrawSlice(AngeSprite, IRect, int, int, int, int, Color32, int) public static Cell[] DrawSlice(AngeSprite sprite, IRect rect, int borderL, int borderR, int borderD, int borderU, Color32 color, int z = -2147483648) Parameters sprite AngeSprite rect IRect borderL int borderR int borderD int borderU int color Color32 z int Returns Cell[] DrawSlice(AngeSprite, IRect, int, int, int, int, int) public static Cell[] DrawSlice(AngeSprite sprite, IRect rect, int borderL, int borderR, int borderD, int borderU, int z = -2147483648) Parameters sprite AngeSprite rect IRect borderL int borderR int borderD int borderU int z int Returns Cell[] DrawSlice(AngeSprite, int, int, int, int, int, int, int, Color32, int) public static Cell[] DrawSlice(AngeSprite sprite, int x, int y, int pivotX, int pivotY, int rotation, int width, int height, Color32 color, int z = -2147483648) Parameters sprite AngeSprite x int y int pivotX int pivotY int rotation int width int height int color Color32 z int Returns Cell[] DrawSlice(AngeSprite, int, int, int, int, int, int, int, int) public static Cell[] DrawSlice(AngeSprite sprite, int x, int y, int pivotX, int pivotY, int rotation, int width, int height, int z = -2147483648) Parameters sprite AngeSprite x int y int pivotX int pivotY int rotation int width int height int z int Returns Cell[] DrawSlice(AngeSprite, int, int, int, int, int, int, int, int, int, int, int, Color32, int) public static Cell[] DrawSlice(AngeSprite sprite, int x, int y, int pivotX, int pivotY, int rotation, int width, int height, int borderL, int borderR, int borderD, int borderU, Color32 color, int z = -2147483648) Parameters sprite AngeSprite x int y int pivotX int pivotY int rotation int width int height int borderL int borderR int borderD int borderU int color Color32 z int Returns Cell[] DrawSlice(AngeSprite, int, int, int, int, int, int, int, int, int, int, int, bool[], Color32, int) public static Cell[] DrawSlice(AngeSprite sprite, int x, int y, int pivotX, int pivotY, int rotation, int width, int height, int borderL, int borderR, int borderD, int borderU, bool[] partIgnore, Color32 color, int z) Parameters sprite AngeSprite x int y int pivotX int pivotY int rotation int width int height int borderL int borderR int borderD int borderU int partIgnore bool[] color Color32 z int Returns Cell[] DrawSlice(AngeSprite, int, int, int, int, int, int, int, int, int, int, int, int) public static Cell[] DrawSlice(AngeSprite sprite, int x, int y, int pivotX, int pivotY, int rotation, int width, int height, int borderL, int borderR, int borderD, int borderU, int z = -2147483648) Parameters sprite AngeSprite x int y int pivotX int pivotY int rotation int width int height int borderL int borderR int borderD int borderU int z int Returns Cell[] DrawSlice(SpriteCode, IRect) public static Cell[] DrawSlice(SpriteCode globalID, IRect rect) Parameters globalID SpriteCode rect IRect Returns Cell[] DrawSlice(SpriteCode, IRect, Color32, int) public static Cell[] DrawSlice(SpriteCode globalID, IRect rect, Color32 color, int z = -2147483648) Parameters globalID SpriteCode rect IRect color Color32 z int Returns Cell[] DrawSlice(SpriteCode, IRect, int, int, int, int, Color32, int) public static Cell[] DrawSlice(SpriteCode globalID, IRect rect, int borderL, int borderR, int borderD, int borderU, Color32 color, int z = -2147483648) Parameters globalID SpriteCode rect IRect borderL int borderR int borderD int borderU int color Color32 z int Returns Cell[] DrawSlice(SpriteCode, IRect, int, int, int, int, int) public static Cell[] DrawSlice(SpriteCode globalID, IRect rect, int borderL, int borderR, int borderD, int borderU, int z = -2147483648) Parameters globalID SpriteCode rect IRect borderL int borderR int borderD int borderU int z int Returns Cell[] DrawSlice(SpriteCode, int, int, int, int, int, int, int, Color32, int) public static Cell[] DrawSlice(SpriteCode globalID, int x, int y, int pivotX, int pivotY, int rotation, int width, int height, Color32 color, int z = -2147483648) Parameters globalID SpriteCode x int y int pivotX int pivotY int rotation int width int height int color Color32 z int Returns Cell[] DrawSlice(SpriteCode, int, int, int, int, int, int, int, int) public static Cell[] DrawSlice(SpriteCode globalID, int x, int y, int pivotX, int pivotY, int rotation, int width, int height, int z = -2147483648) Parameters globalID SpriteCode x int y int pivotX int pivotY int rotation int width int height int z int Returns Cell[] DrawSlice(SpriteCode, int, int, int, int, int, int, int, int, int, int, int, Color32, int) public static Cell[] DrawSlice(SpriteCode globalID, int x, int y, int pivotX, int pivotY, int rotation, int width, int height, int borderL, int borderR, int borderD, int borderU, Color32 color, int z = -2147483648) Parameters globalID SpriteCode x int y int pivotX int pivotY int rotation int width int height int borderL int borderR int borderD int borderU int color Color32 z int Returns Cell[] DrawSlice(SpriteCode, int, int, int, int, int, int, int, int, int, int, int, bool[], Color32, int) public static Cell[] DrawSlice(SpriteCode globalID, int x, int y, int pivotX, int pivotY, int rotation, int width, int height, int borderL, int borderR, int borderD, int borderU, bool[] partIgnore, Color32 color, int z = -2147483648) Parameters globalID SpriteCode x int y int pivotX int pivotY int rotation int width int height int borderL int borderR int borderD int borderU int partIgnore bool[] color Color32 z int Returns Cell[] DrawSlice(SpriteCode, int, int, int, int, int, int, int, int, int, int, int, int) public static Cell[] DrawSlice(SpriteCode globalID, int x, int y, int pivotX, int pivotY, int rotation, int width, int height, int borderL, int borderR, int borderD, int borderU, int z = -2147483648) Parameters globalID SpriteCode x int y int pivotX int pivotY int rotation int width int height int borderL int borderR int borderD int borderU int z int Returns Cell[] DrawSlice(int, IRect) public static Cell[] DrawSlice(int globalID, IRect rect) Parameters globalID int rect IRect Returns Cell[] DrawSlice(int, IRect, Color32, int) public static Cell[] DrawSlice(int globalID, IRect rect, Color32 color, int z = -2147483648) Parameters globalID int rect IRect color Color32 z int Returns Cell[] DrawSlice(int, IRect, int, int, int, int, Color32, int) public static Cell[] DrawSlice(int globalID, IRect rect, int borderL, int borderR, int borderD, int borderU, Color32 color, int z = -2147483648) Parameters globalID int rect IRect borderL int borderR int borderD int borderU int color Color32 z int Returns Cell[] DrawSlice(int, IRect, int, int, int, int, int) public static Cell[] DrawSlice(int globalID, IRect rect, int borderL, int borderR, int borderD, int borderU, int z = -2147483648) Parameters globalID int rect IRect borderL int borderR int borderD int borderU int z int Returns Cell[] DrawSlice(int, int, int, int, int, int, int, int, Color32, int) public static Cell[] DrawSlice(int globalID, int x, int y, int pivotX, int pivotY, int rotation, int width, int height, Color32 color, int z = -2147483648) Parameters globalID int x int y int pivotX int pivotY int rotation int width int height int color Color32 z int Returns Cell[] DrawSlice(int, int, int, int, int, int, int, int, int) public static Cell[] DrawSlice(int globalID, int x, int y, int pivotX, int pivotY, int rotation, int width, int height, int z = -2147483648) Parameters globalID int x int y int pivotX int pivotY int rotation int width int height int z int Returns Cell[] DrawSlice(int, int, int, int, int, int, int, int, int, int, int, int, Color32, int) public static Cell[] DrawSlice(int globalID, int x, int y, int pivotX, int pivotY, int rotation, int width, int height, int borderL, int borderR, int borderD, int borderU, Color32 color, int z = -2147483648) Parameters globalID int x int y int pivotX int pivotY int rotation int width int height int borderL int borderR int borderD int borderU int color Color32 z int Returns Cell[] DrawSlice(int, int, int, int, int, int, int, int, int, int, int, int, bool[], Color32, int) public static Cell[] DrawSlice(int globalID, int x, int y, int pivotX, int pivotY, int rotation, int width, int height, int borderL, int borderR, int borderD, int borderU, bool[] partIgnore, Color32 color, int z = -2147483648) Parameters globalID int x int y int pivotX int pivotY int rotation int width int height int borderL int borderR int borderD int borderU int partIgnore bool[] color Color32 z int Returns Cell[] DrawSlice(int, int, int, int, int, int, int, int, int, int, int, int, int) public static Cell[] DrawSlice(int globalID, int x, int y, int pivotX, int pivotY, int rotation, int width, int height, int borderL, int borderR, int borderD, int borderU, int z = -2147483648) Parameters globalID int x int y int pivotX int pivotY int rotation int width int height int borderL int borderR int borderD int borderU int z int Returns Cell[] GetAltSheet(int) public static Sheet GetAltSheet(int index) Parameters index int Returns Sheet GetAnimationGroupDuration(SpriteGroup) public static int GetAnimationGroupDuration(SpriteGroup group) Parameters group SpriteGroup Returns int GetAnimationGroupDuration(int) public static int GetAnimationGroupDuration(int chainID) Parameters chainID int Returns int GetCells(int, out Span<Cell>, out int) public static bool GetCells(int layer, out Span<Cell> cells, out int count) Parameters layer int cells Span<Cell> count int Returns bool GetCells(out Span<Cell>, out int) public static bool GetCells(out Span<Cell> cells, out int count) Parameters cells Span<Cell> count int Returns bool GetGroupAt(int) public static SpriteGroup GetGroupAt(int index) Parameters index int Returns SpriteGroup GetLayerCapacity(int) public static int GetLayerCapacity(int layerIndex) Parameters layerIndex int Returns int GetLayerTint(int) public static Color32 GetLayerTint(int layer) Parameters layer int Returns Color32 GetSpriteAt(int) public static AngeSprite GetSpriteAt(int index) Parameters index int Returns AngeSprite GetUsedCellCount() public static int GetUsedCellCount() Returns int GetUsedCellCount(int) public static int GetUsedCellCount(int layerIndex) Parameters layerIndex int Returns int HasSprite(int) public static bool HasSprite(int globalID) Parameters globalID int Returns bool HasSpriteGroup(int) public static bool HasSpriteGroup(int groupID) Parameters groupID int Returns bool HasSpriteGroup(int, out int) public static bool HasSpriteGroup(int groupID, out int groupLength) Parameters groupID int groupLength int Returns bool LoadMainSheet() public static void LoadMainSheet() MultLayerTint(int, Color32) public static void MultLayerTint(int layer, Color32 tint) Parameters layer int tint Color32 OverrideFontIdAndIndex(int, int) public static void OverrideFontIdAndIndex(int fontId, int fontIndex) Parameters fontId int fontIndex int RemoveAltSheet(int) public static void RemoveAltSheet(int index) Parameters index int RequireCharForPool(char, out CharSprite) public static bool RequireCharForPool(char c, out CharSprite charSprite) Parameters c char charSprite CharSprite Returns bool RequireCharForPool(char, int, out CharSprite) public static bool RequireCharForPool(char c, int fontIndex, out CharSprite charSprite) Parameters c char fontIndex int charSprite CharSprite Returns bool ResetLayer(int) public static void ResetLayer(int layerIndex) Parameters layerIndex int ReverseUnsortedCells(int) public static void ReverseUnsortedCells(int layerIndex) Parameters layerIndex int SetFontID(int) public static void SetFontID(int id) Parameters id int SetFontIndex(int) public static void SetFontIndex(int index) Parameters index int SetLayer(int) public static void SetLayer(int index) Parameters index int SetLayerTint(int, Color32) public static void SetLayerTint(int layer, Color32 tint) Parameters layer int tint Color32 SetLayerToAdditive() public static void SetLayerToAdditive() SetLayerToBehind() public static void SetLayerToBehind() SetLayerToColor() public static void SetLayerToColor() SetLayerToDefault() public static void SetLayerToDefault() SetLayerToMultiply() public static void SetLayerToMultiply() SetLayerToShadow() public static void SetLayerToShadow() SetLayerToWallpaper() public static void SetLayerToWallpaper() SortLayer(int) public static void SortLayer(int layerIndex) Parameters layerIndex int TryGetAnimationGroup(int, out SpriteGroup) public static bool TryGetAnimationGroup(int groupID, out SpriteGroup group) Parameters groupID int group SpriteGroup Returns bool TryGetSprite(int, out AngeSprite, bool) public static bool TryGetSprite(int globalID, out AngeSprite sprite, bool ignoreAnimation = true) Parameters globalID int sprite AngeSprite ignoreAnimation bool Returns bool TryGetSpriteForGizmos(int, out AngeSprite) public static bool TryGetSpriteForGizmos(int artworkID, out AngeSprite sprite) Parameters artworkID int sprite AngeSprite Returns bool TryGetSpriteFromGroup(int, int, out AngeSprite, bool, bool, bool) public static bool TryGetSpriteFromGroup(int groupID, int index, out AngeSprite sprite, bool loopIndex = true, bool clampIndex = true, bool ignoreAnimatedWhenFailback = true) Parameters groupID int index int sprite AngeSprite loopIndex bool clampIndex bool ignoreAnimatedWhenFailback bool Returns bool TryGetSpriteGroup(int, out SpriteGroup) public static bool TryGetSpriteGroup(int groupID, out SpriteGroup group) Parameters groupID int group SpriteGroup Returns bool TryGetTextureFromSheet<T>(int, int, out T) public static bool TryGetTextureFromSheet<T>(int spriteID, int sheetIndex, out T texture) Parameters spriteID int sheetIndex int texture T Returns bool Type Parameters T UpdatePausing() [OnGameUpdatePauseless(-512)] public static void UpdatePausing()"
  },
  "api/AngeliA.RendererLayerCapacityAttribute.html": {
    "href": "api/AngeliA.RendererLayerCapacityAttribute.html",
    "title": "Class RendererLayerCapacityAttribute | AngeliA",
    "summary": "Class RendererLayerCapacityAttribute Namespace AngeliA Assembly AngeliA Framework.dll Max rendering cell count for the layer [AttributeUsage(AttributeTargets.Assembly, AllowMultiple = true)] public class RendererLayerCapacityAttribute : Attribute Inheritance object Attribute RendererLayerCapacityAttribute Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Constructors RendererLayerCapacityAttribute(int, int) Max rendering cell count for the layer public RendererLayerCapacityAttribute(int layer, int capacity) Parameters layer int capacity int"
  },
  "api/AngeliA.RestartGameTask.html": {
    "href": "api/AngeliA.RestartGameTask.html",
    "title": "Class RestartGameTask | AngeliA",
    "summary": "Class RestartGameTask Namespace AngeliA Assembly AngeliA Framework.dll public class RestartGameTask : Task Inheritance object Task RestartGameTask Inherited Members Task.LocalFrame Task.UserData Task.OnStart() Task.OnEnd() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Fields TYPE_ID public static readonly int TYPE_ID Field Value int Methods FrameUpdate() public override TaskResult FrameUpdate() Returns TaskResult"
  },
  "api/AngeliA.ReverseCellsScope.html": {
    "href": "api/AngeliA.ReverseCellsScope.html",
    "title": "Struct ReverseCellsScope | AngeliA",
    "summary": "Struct ReverseCellsScope Namespace AngeliA Assembly AngeliA Framework.dll public readonly struct ReverseCellsScope : IDisposable Implements IDisposable Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Constructors ReverseCellsScope() public ReverseCellsScope() Methods Dispose() Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources. public void Dispose()"
  },
  "api/AngeliA.Rigidbody.html": {
    "href": "api/AngeliA.Rigidbody.html",
    "title": "Class Rigidbody | AngeliA",
    "summary": "Class Rigidbody Namespace AngeliA Assembly AngeliA Framework.dll public abstract class Rigidbody : Entity, IMapItem, ICarrier Inheritance object Entity Rigidbody Implements IMapItem ICarrier Derived Character ItemHolder Breakable Spring Vehicle Inherited Members Entity.Active Entity.X Entity.Y Entity.Width Entity.Height Entity.TypeID Entity.SpawnFrame Entity.FromWorld Entity.InstanceOrder Entity.MapUnitPos Entity.InstanceID Entity.IgnoreReposition Entity.XY Entity.Size Entity.Center Entity.CenterX Entity.CenterY Entity.PivotUnitPosition Entity.OnInactivated() Entity.BeforeUpdate() Entity.LateUpdate() Entity.AfterReposition(Int3, Int3) Entity.IgnoreDespawnFromMap(int) Entity.CancelIgnoreDespawnFromMap() Entity.Draw() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Fields CollisionMask public readonly FrameBasedInt CollisionMask Field Value FrameBasedInt FallingGravityScale public readonly FrameBasedInt FallingGravityScale Field Value FrameBasedInt GlobalGravity public static readonly FrameBasedInt GlobalGravity Field Value FrameBasedInt IgnoreGravity public readonly FrameBasedBool IgnoreGravity Field Value FrameBasedBool IgnoreGroundCheck public readonly FrameBasedBool IgnoreGroundCheck Field Value FrameBasedBool IgnoreInsideGround public readonly FrameBasedBool IgnoreInsideGround Field Value FrameBasedBool IgnoreMomentum public readonly FrameBasedBool IgnoreMomentum Field Value FrameBasedBool IgnoreOneway public readonly FrameBasedBool IgnoreOneway Field Value FrameBasedBool IgnorePhysics public readonly FrameBasedBool IgnorePhysics Field Value FrameBasedBool MomentumX public (int value, int decay) MomentumX Field Value (int prev, int current) MomentumY public (int value, int decay) MomentumY Field Value (int prev, int current) RisingGravityScale public readonly FrameBasedInt RisingGravityScale Field Value FrameBasedInt Properties AirDragX public virtual int AirDragX { get; } Property Value int AirDragY public virtual int AirDragY { get; } Property Value int AllowBeingPush public virtual bool AllowBeingPush { get; } Property Value bool BounceSpeedRate public int BounceSpeedRate { get; set; } Property Value int CarryOtherOnTop public virtual bool CarryOtherOnTop { get; } Property Value bool DeltaPositionX public int DeltaPositionX { get; } Property Value int DeltaPositionY public int DeltaPositionY { get; } Property Value int DestroyWhenInsideGround public virtual bool DestroyWhenInsideGround { get; } Property Value bool EjectWhenInsideGround public virtual bool EjectWhenInsideGround { get; } Property Value bool FacingRight public virtual bool FacingRight { get; } Property Value bool GroundedID public int GroundedID { get; set; } Property Value int InWater public bool InWater { get; } Property Value bool IsGrounded public bool IsGrounded { get; protected set; } Property Value bool IsInsideGround public bool IsInsideGround { get; } Property Value bool MaxGravitySpeed public virtual int MaxGravitySpeed { get; } Property Value int OffsetX public int OffsetX { get; set; } Property Value int OffsetY public int OffsetY { get; set; } Property Value int PhysicalLayer public abstract int PhysicalLayer { get; } Property Value int PrevX public int PrevX { get; } Property Value int PrevY public int PrevY { get; } Property Value int Rect public override IRect Rect { get; } Property Value IRect RequireDodgeOverlap public bool RequireDodgeOverlap { get; set; } Property Value bool SelfCollisionMask public virtual int SelfCollisionMask { get; } Property Value int VelocityX public int VelocityX { get; set; } Property Value int VelocityY public int VelocityY { get; set; } Property Value int WaterFloatSpeed public virtual int WaterFloatSpeed { get; } Property Value int WaterSpeedRate public virtual int WaterSpeedRate { get; } Property Value int Methods CancelMakeGrounded() public void CancelMakeGrounded() FillAsOnewayUp(int, int) public void FillAsOnewayUp(int duration = 0, int priority = 0) Parameters duration int priority int FillAsTrigger(int, int) public void FillAsTrigger(int duration = 0, int priority = 0) Parameters duration int priority int FirstUpdate() public override void FirstUpdate() GroundedCheck() protected virtual bool GroundedCheck() Returns bool InsideGroundCheck() protected virtual bool InsideGroundCheck() Returns bool MakeGrounded(int, int) public void MakeGrounded(int frame = 1, int blockID = 0) Parameters frame int blockID int OnActivated() public override void OnActivated() OnInsideGroundDestroyed() protected virtual void OnInsideGroundDestroyed() PerformGroundCheck(IRect, out PhysicsCell) public bool PerformGroundCheck(IRect rect, out PhysicsCell hit) Parameters rect IRect hit PhysicsCell Returns bool PerformMove(int, int, bool) public void PerformMove(int speedX, int speedY, bool ignoreCarry = false) Parameters speedX int speedY int ignoreCarry bool Push(int) public virtual void Push(int speedX) Parameters speedX int RefreshPrevPosition() protected void RefreshPrevPosition() Update() public override void Update()"
  },
  "api/AngeliA.RotateCellScope.html": {
    "href": "api/AngeliA.RotateCellScope.html",
    "title": "Struct RotateCellScope | AngeliA",
    "summary": "Struct RotateCellScope Namespace AngeliA Assembly AngeliA Framework.dll public readonly struct RotateCellScope : IDisposable Implements IDisposable Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Constructors RotateCellScope() public RotateCellScope() RotateCellScope(int, int, int, bool) public RotateCellScope(int rotation, int pointX = -2147483648, int piontY = -2147483648, bool keepOriginalRotation = false) Parameters rotation int pointX int piontY int keepOriginalRotation bool Methods Dispose() Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources. public void Dispose()"
  },
  "api/AngeliA.Rule.html": {
    "href": "api/AngeliA.Rule.html",
    "title": "Enum Rule | AngeliA",
    "summary": "Enum Rule Namespace AngeliA Assembly AngeliA Framework.dll public enum Rule : byte Extension Methods Extension.Next<E>(E) Extension.Prev<E>(E) Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Fields AnyTile = 3 Empty = 4 NotSameTile = 2 SameTile = 1 Whatever = 0"
  },
  "api/AngeliA.Saving-1.html": {
    "href": "api/AngeliA.Saving-1.html",
    "title": "Class Saving<T> | AngeliA",
    "summary": "Class Saving<T> Namespace AngeliA Assembly AngeliA Framework.dll public abstract class Saving<T> : Saving Type Parameters T Inheritance object Saving Saving<T> Derived SavingBool SavingColor32 SavingColor32NoAlpha SavingHotkey SavingInt SavingString Inherited Members Saving.Key Saving.ID object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Constructors Saving(string, T, SavingLocation) public Saving(string key, T defaultValue, SavingLocation location) Parameters key string defaultValue T location SavingLocation Properties DefaultValue public T DefaultValue { get; init; } Property Value T Value public T Value { get; set; } Property Value T Methods GetValue(bool) public T GetValue(bool forceLoad = false) Parameters forceLoad bool Returns T SetValue(T, bool) public void SetValue(T value, bool forceSave = false) Parameters value T forceSave bool StringToValue(string) protected abstract T StringToValue(string str) Parameters str string Returns T ValueToString(T) protected abstract string ValueToString(T value) Parameters value T Returns string"
  },
  "api/AngeliA.Saving.html": {
    "href": "api/AngeliA.Saving.html",
    "title": "Class Saving | AngeliA",
    "summary": "Class Saving Namespace AngeliA Assembly AngeliA Framework.dll public abstract class Saving Inheritance object Saving Derived Saving<T> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Properties ID public int ID { get; init; } Property Value int Key public string Key { get; init; } Property Value string"
  },
  "api/AngeliA.SavingBool.html": {
    "href": "api/AngeliA.SavingBool.html",
    "title": "Class SavingBool | AngeliA",
    "summary": "Class SavingBool Namespace AngeliA Assembly AngeliA Framework.dll public class SavingBool : Saving<bool> Inheritance object Saving Saving<bool> SavingBool Inherited Members Saving<bool>.Value Saving<bool>.DefaultValue Saving<bool>.GetValue(bool) Saving<bool>.SetValue(bool, bool) Saving.Key Saving.ID object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Constructors SavingBool(string, bool, SavingLocation) public SavingBool(string key, bool defaultValue, SavingLocation location) Parameters key string defaultValue bool location SavingLocation Methods StringToValue(string) protected override bool StringToValue(string str) Parameters str string Returns bool ValueToString(bool) protected override string ValueToString(bool value) Parameters value bool Returns string"
  },
  "api/AngeliA.SavingColor32.html": {
    "href": "api/AngeliA.SavingColor32.html",
    "title": "Class SavingColor32 | AngeliA",
    "summary": "Class SavingColor32 Namespace AngeliA Assembly AngeliA Framework.dll public class SavingColor32 : Saving<Color32> Inheritance object Saving Saving<Color32> SavingColor32 Inherited Members Saving<Color32>.Value Saving<Color32>.DefaultValue Saving<Color32>.GetValue(bool) Saving<Color32>.SetValue(Color32, bool) Saving.Key Saving.ID object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Constructors SavingColor32(string, Color32, SavingLocation) public SavingColor32(string key, Color32 defaultValue, SavingLocation location) Parameters key string defaultValue Color32 location SavingLocation Methods StringToValue(string) protected override Color32 StringToValue(string str) Parameters str string Returns Color32 ValueToString(Color32) protected override string ValueToString(Color32 value) Parameters value Color32 Returns string"
  },
  "api/AngeliA.SavingColor32NoAlpha.html": {
    "href": "api/AngeliA.SavingColor32NoAlpha.html",
    "title": "Class SavingColor32NoAlpha | AngeliA",
    "summary": "Class SavingColor32NoAlpha Namespace AngeliA Assembly AngeliA Framework.dll public class SavingColor32NoAlpha : Saving<Color32> Inheritance object Saving Saving<Color32> SavingColor32NoAlpha Inherited Members Saving<Color32>.Value Saving<Color32>.DefaultValue Saving<Color32>.GetValue(bool) Saving<Color32>.SetValue(Color32, bool) Saving.Key Saving.ID object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Constructors SavingColor32NoAlpha(string, Color32, SavingLocation) public SavingColor32NoAlpha(string key, Color32 defaultValue, SavingLocation location) Parameters key string defaultValue Color32 location SavingLocation Methods StringToValue(string) protected override Color32 StringToValue(string str) Parameters str string Returns Color32 ValueToString(Color32) protected override string ValueToString(Color32 value) Parameters value Color32 Returns string"
  },
  "api/AngeliA.SavingHotkey.html": {
    "href": "api/AngeliA.SavingHotkey.html",
    "title": "Class SavingHotkey | AngeliA",
    "summary": "Class SavingHotkey Namespace AngeliA Assembly AngeliA Framework.dll public class SavingHotkey : Saving<Hotkey> Inheritance object Saving Saving<Hotkey> SavingHotkey Inherited Members Saving<Hotkey>.Value Saving<Hotkey>.DefaultValue Saving<Hotkey>.GetValue(bool) Saving<Hotkey>.SetValue(Hotkey, bool) Saving.Key Saving.ID object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Constructors SavingHotkey(string, Hotkey, SavingLocation) public SavingHotkey(string key, Hotkey defaultValue, SavingLocation location) Parameters key string defaultValue Hotkey location SavingLocation Methods StringToValue(string) protected override Hotkey StringToValue(string str) Parameters str string Returns Hotkey ValueToString(Hotkey) protected override string ValueToString(Hotkey value) Parameters value Hotkey Returns string"
  },
  "api/AngeliA.SavingInt.html": {
    "href": "api/AngeliA.SavingInt.html",
    "title": "Class SavingInt | AngeliA",
    "summary": "Class SavingInt Namespace AngeliA Assembly AngeliA Framework.dll public class SavingInt : Saving<int> Inheritance object Saving Saving<int> SavingInt Inherited Members Saving<int>.Value Saving<int>.DefaultValue Saving<int>.GetValue(bool) Saving<int>.SetValue(int, bool) Saving.Key Saving.ID object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Constructors SavingInt(string, int, SavingLocation) public SavingInt(string key, int defaultValue, SavingLocation location) Parameters key string defaultValue int location SavingLocation Methods StringToValue(string) protected override int StringToValue(string str) Parameters str string Returns int ValueToString(int) protected override string ValueToString(int value) Parameters value int Returns string"
  },
  "api/AngeliA.SavingLocation.html": {
    "href": "api/AngeliA.SavingLocation.html",
    "title": "Enum SavingLocation | AngeliA",
    "summary": "Enum SavingLocation Namespace AngeliA Assembly AngeliA Framework.dll public enum SavingLocation Extension Methods Extension.Next<E>(E) Extension.Prev<E>(E) Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Fields Global = 0 Slot = 1"
  },
  "api/AngeliA.SavingString.html": {
    "href": "api/AngeliA.SavingString.html",
    "title": "Class SavingString | AngeliA",
    "summary": "Class SavingString Namespace AngeliA Assembly AngeliA Framework.dll public class SavingString : Saving<string> Inheritance object Saving Saving<string> SavingString Inherited Members Saving<string>.Value Saving<string>.DefaultValue Saving<string>.GetValue(bool) Saving<string>.SetValue(string, bool) Saving.Key Saving.ID object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Constructors SavingString(string, string, SavingLocation) public SavingString(string key, string defaultValue, SavingLocation location) Parameters key string defaultValue string location SavingLocation Methods StringToValue(string) protected override string StringToValue(string str) Parameters str string Returns string ValueToString(string) protected override string ValueToString(string value) Parameters value string Returns string"
  },
  "api/AngeliA.SavingSystem.html": {
    "href": "api/AngeliA.SavingSystem.html",
    "title": "Class SavingSystem | AngeliA",
    "summary": "Class SavingSystem Namespace AngeliA Assembly AngeliA Framework.dll public static class SavingSystem Inheritance object SavingSystem Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties FileLoaded public static bool FileLoaded { get; } Property Value bool IsDirty public static bool IsDirty { get; set; } Property Value bool PoolReady public static bool PoolReady { get; } Property Value bool PoolVersion public static int PoolVersion { get; } Property Value int Methods HasKey(Saving) public static bool HasKey(Saving saving) Parameters saving Saving Returns bool HasKey(int) public static bool HasKey(int id) Parameters id int Returns bool LoadFromFile() public static void LoadFromFile() SaveToFile() public static void SaveToFile()"
  },
  "api/AngeliA.SelectPlayerTask.html": {
    "href": "api/AngeliA.SelectPlayerTask.html",
    "title": "Class SelectPlayerTask | AngeliA",
    "summary": "Class SelectPlayerTask Namespace AngeliA Assembly AngeliA Framework.dll public class SelectPlayerTask : Task Inheritance object Task SelectPlayerTask Inherited Members Task.LocalFrame Task.UserData Task.OnStart() Task.OnEnd() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Fields TYPE_ID public static readonly int TYPE_ID Field Value int Methods FrameUpdate() public override TaskResult FrameUpdate() Returns TaskResult"
  },
  "api/AngeliA.Sheet.html": {
    "href": "api/AngeliA.Sheet.html",
    "title": "Class Sheet | AngeliA",
    "summary": "Class Sheet Namespace AngeliA Assembly AngeliA Framework.dll public class Sheet Inheritance object Sheet Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Constructors Sheet(bool, bool, bool) public Sheet(bool ignoreGroups = false, bool ignoreSpriteWithIgnoreTag = true, bool ignoreTextureAndPixels = false) Parameters ignoreGroups bool ignoreSpriteWithIgnoreTag bool ignoreTextureAndPixels bool Sheet(List<AngeSprite>, List<Atlas>, bool, bool, bool) public Sheet(List<AngeSprite> sprites, List<Atlas> atlasInfo, bool ignoreGroups = false, bool ignoreSpriteWithIgnoreTag = true, bool ignoreTextureAndPixels = false) Parameters sprites List<AngeSprite> atlasInfo List<Atlas> ignoreGroups bool ignoreSpriteWithIgnoreTag bool ignoreTextureAndPixels bool Fields Atlas public readonly List<Atlas> Atlas Field Value List<Atlas> AtlasPool public readonly Dictionary<int, Atlas> AtlasPool Field Value Dictionary<int, Atlas> GroupPool public readonly Dictionary<int, SpriteGroup> GroupPool Field Value Dictionary<int, SpriteGroup> Groups public readonly List<SpriteGroup> Groups Field Value List<SpriteGroup> SpritePool public readonly Dictionary<int, AngeSprite> SpritePool Field Value Dictionary<int, AngeSprite> Sprites public readonly List<AngeSprite> Sprites Field Value List<AngeSprite> TexturePool public readonly Dictionary<int, object> TexturePool Field Value Dictionary<int, object> Methods AddSprite(AngeSprite) public bool AddSprite(AngeSprite sprite) Parameters sprite AngeSprite Returns bool CalculateExtraData() public void CalculateExtraData() Clear() public void Clear() CombineAllSheetInFolder(string, bool, string) public void CombineAllSheetInFolder(string folderPath, bool topOnly = false, string ignoreNameWithExtension = \"\") Parameters folderPath string topOnly bool ignoreNameWithExtension string CombineSheet(Sheet, bool) public void CombineSheet(Sheet sheet, bool renameDuplicateSprites = false) Parameters sheet Sheet renameDuplicateSprites bool ContainGroup(int) public bool ContainGroup(int id) Parameters id int Returns bool ContainSprite(int) public bool ContainSprite(int id) Parameters id int Returns bool CreateSprite(string, IRect, int) public AngeSprite CreateSprite(string name, IRect pixelRect, int atlasID) Parameters name string pixelRect IRect atlasID int Returns AngeSprite GetAvailableSpriteName(string) public string GetAvailableSpriteName(string basicName) Parameters basicName string Returns string GetSpriteAnimationDuration(SpriteGroup) public int GetSpriteAnimationDuration(SpriteGroup aniGroup) Parameters aniGroup SpriteGroup Returns int IndexOfGroup(int) public int IndexOfGroup(int id) Parameters id int Returns int IndexOfSprite(int) public int IndexOfSprite(int id) Parameters id int Returns int LoadFromDisk(string) public bool LoadFromDisk(string path) Parameters path string Returns bool MoveAtlas(int, int, bool) public void MoveAtlas(int from, int to, bool intoFolder = false) Parameters from int to int intoFolder bool RemoveAllAtlasAndAllSpritesInsideExcept(int) public void RemoveAllAtlasAndAllSpritesInsideExcept(int ignoreAtlasID) Parameters ignoreAtlasID int RemoveAtlasAndAllSpritesInside(int) public void RemoveAtlasAndAllSpritesInside(int atlasIndex) Parameters atlasIndex int RemoveGroupAndAllSpritesInside(int) public void RemoveGroupAndAllSpritesInside(int groupIndex) Parameters groupIndex int RemoveSprite(int) public void RemoveSprite(int spriteIndex) Parameters spriteIndex int RenameAtlas(int, string) public bool RenameAtlas(int atlasID, string newName) Parameters atlasID int newName string Returns bool RenameSprite(AngeSprite, string) public bool RenameSprite(AngeSprite sprite, string newName) Parameters sprite AngeSprite newName string Returns bool RenameSprite(int, string) public bool RenameSprite(int id, string newName) Parameters id int newName string Returns bool SaveToDisk(string) public void SaveToDisk(string path) Parameters path string SetData(List<AngeSprite>, List<Atlas>) public void SetData(List<AngeSprite> sprites, List<Atlas> atlasInfo) Parameters sprites List<AngeSprite> atlasInfo List<Atlas> SyncSpritePixelsIntoTexturePool(AngeSprite) public void SyncSpritePixelsIntoTexturePool(AngeSprite sprite) Parameters sprite AngeSprite TryGetSpriteFromAnimationFrame(SpriteGroup, int, out AngeSprite, int) public bool TryGetSpriteFromAnimationFrame(SpriteGroup group, int localFrame, out AngeSprite sprite, int loopStart = -1) Parameters group SpriteGroup localFrame int sprite AngeSprite loopStart int Returns bool TryGetTextureFromPool(int, out object) public bool TryGetTextureFromPool(int spriteID, out object texture) Parameters spriteID int texture object Returns bool"
  },
  "api/AngeliA.SheetCharacterRenderer.html": {
    "href": "api/AngeliA.SheetCharacterRenderer.html",
    "title": "Class SheetCharacterRenderer | AngeliA",
    "summary": "Class SheetCharacterRenderer Namespace AngeliA Assembly AngeliA Framework.dll public class SheetCharacterRenderer : CharacterRenderer Inheritance object CharacterRenderer SheetCharacterRenderer Inherited Members CharacterRenderer.TargetCharacter CharacterRenderer.CurrentAnimationFrame CharacterRenderer.CurrentRenderingBounce CharacterRenderer.SpinOnGroundPound CharacterRenderer.Tint CharacterRenderer.Scale CharacterRenderer.OnActivated() CharacterRenderer.BeforeUpdate() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Constructors SheetCharacterRenderer(Character) public SheetCharacterRenderer(Character target) Parameters target Character Properties RenderedCell public Cell RenderedCell { get; } Property Value Cell Methods LateUpdate() public override void LateUpdate()"
  },
  "api/AngeliA.SheetIndexScope.html": {
    "href": "api/AngeliA.SheetIndexScope.html",
    "title": "Struct SheetIndexScope | AngeliA",
    "summary": "Struct SheetIndexScope Namespace AngeliA Assembly AngeliA Framework.dll public readonly struct SheetIndexScope : IDisposable Implements IDisposable Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Constructors SheetIndexScope(int) public SheetIndexScope(int sheet) Parameters sheet int Methods Dispose() Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources. public void Dispose()"
  },
  "api/AngeliA.ShiftCellsScope.html": {
    "href": "api/AngeliA.ShiftCellsScope.html",
    "title": "Struct ShiftCellsScope | AngeliA",
    "summary": "Struct ShiftCellsScope Namespace AngeliA Assembly AngeliA Framework.dll public readonly struct ShiftCellsScope : IDisposable Implements IDisposable Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Constructors ShiftCellsScope(Int2) public ShiftCellsScope(Int2 shift) Parameters shift Int2 Methods Dispose() Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources. public void Dispose()"
  },
  "api/AngeliA.Sky.html": {
    "href": "api/AngeliA.Sky.html",
    "title": "Class Sky | AngeliA",
    "summary": "Class Sky Namespace AngeliA Assembly AngeliA Framework.dll public static class Sky Inheritance object Sky Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties GradientBottom public static ColorGradient GradientBottom { get; set; } Property Value ColorGradient GradientTop public static ColorGradient GradientTop { get; set; } Property Value ColorGradient InGameDaytime01 public static float InGameDaytime01 { get; } Property Value float SkyTintBottomColor public static Color32 SkyTintBottomColor { get; } Property Value Color32 SkyTintTopColor public static Color32 SkyTintTopColor { get; } Property Value Color32 SunlightTint public static ColorGradient SunlightTint { get; set; } Property Value ColorGradient SunlightTintColor public static Color32 SunlightTintColor { get; } Property Value Color32 Methods ForceSkyboxTint(Color32, Color32, int) public static void ForceSkyboxTint(Color32 top, Color32 bottom, int duration = 1) Parameters top Color32 bottom Color32 duration int ForceSkyboxTint(Color32, int) public static void ForceSkyboxTint(Color32 color, int duration = 1) Parameters color Color32 duration int GetInGameDaytimeFromRealTime() public static float GetInGameDaytimeFromRealTime() Returns float RefreshSkyTintFromDateTime() [OnGameRestart(0)] public static void RefreshSkyTintFromDateTime() SetInGameDaytime(float) public static void SetInGameDaytime(float newDaytime01) Parameters newDaytime01 float"
  },
  "api/AngeliA.SoundData.html": {
    "href": "api/AngeliA.SoundData.html",
    "title": "Class SoundData | AngeliA",
    "summary": "Class SoundData Namespace AngeliA Assembly AngeliA Framework.dll public class SoundData : AudioData Inheritance object AudioData SoundData Inherited Members AudioData.ID AudioData.Name AudioData.Path object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Fields LastPlayFrame public int LastPlayFrame Field Value int SoundObjects public object[] SoundObjects Field Value object[] StartFrames public int[] StartFrames Field Value int[]"
  },
  "api/AngeliA.SpawnEntityTask.html": {
    "href": "api/AngeliA.SpawnEntityTask.html",
    "title": "Class SpawnEntityTask | AngeliA",
    "summary": "Class SpawnEntityTask Namespace AngeliA Assembly AngeliA Framework.dll public class SpawnEntityTask : Task Inheritance object Task SpawnEntityTask Inherited Members Task.LocalFrame Task.UserData Task.OnStart() Task.OnEnd() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Fields EntityID public int EntityID Field Value int ForceReactive public bool ForceReactive Field Value bool TYPE_ID public static readonly int TYPE_ID Field Value int X public int X Field Value int Y public int Y Field Value int Methods FrameUpdate() public override TaskResult FrameUpdate() Returns TaskResult"
  },
  "api/AngeliA.SpriteCode.html": {
    "href": "api/AngeliA.SpriteCode.html",
    "title": "Class SpriteCode | AngeliA",
    "summary": "Class SpriteCode Namespace AngeliA Assembly AngeliA Framework.dll public class SpriteCode Inheritance object SpriteCode Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Constructors SpriteCode(string) public SpriteCode(string name) Parameters name string Fields ID public readonly int ID Field Value int Properties Name public string Name { get; } Property Value string Operators implicit operator int(SpriteCode) public static implicit operator int(SpriteCode code) Parameters code SpriteCode Returns int implicit operator SpriteCode(string) public static implicit operator SpriteCode(string value) Parameters value string Returns SpriteCode"
  },
  "api/AngeliA.SpriteGroup.html": {
    "href": "api/AngeliA.SpriteGroup.html",
    "title": "Class SpriteGroup | AngeliA",
    "summary": "Class SpriteGroup Namespace AngeliA Assembly AngeliA Framework.dll public class SpriteGroup Inheritance object SpriteGroup Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Fields Animated public bool Animated Field Value bool ID public int ID Field Value int LoopStart public int LoopStart Field Value int MAX_COUNT public const int MAX_COUNT = 256 Field Value int Name public string Name Field Value string Random public bool Random Field Value bool Sprites public List<AngeSprite> Sprites Field Value List<AngeSprite> WithRule public bool WithRule Field Value bool Properties Count public int Count { get; } Property Value int"
  },
  "api/AngeliA.Stage.html": {
    "href": "api/AngeliA.Stage.html",
    "title": "Class Stage | AngeliA",
    "summary": "Class Stage Namespace AngeliA Assembly AngeliA Framework.dll public static class Stage Inheritance object Stage Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields SETTING_SET_VIEW_H public const int SETTING_SET_VIEW_H = 921736238 Field Value int SETTING_SET_VIEW_X public const int SETTING_SET_VIEW_X = 921736235 Field Value int SETTING_SET_VIEW_Y public const int SETTING_SET_VIEW_Y = 921736236 Field Value int SETTING_SET_VIEW_Z public const int SETTING_SET_VIEW_Z = 921736237 Field Value int Properties AntiSpawnRect public static IRect AntiSpawnRect { get; } Property Value IRect DelayingViewHeight public static int? DelayingViewHeight { get; } Property Value int? DelayingViewX public static int? DelayingViewX { get; } Property Value int? DelayingViewY public static int? DelayingViewY { get; } Property Value int? Enable public static bool Enable { get; } Property Value bool Entities public static Entity[][] Entities { get; } Property Value Entity[][] EntityCounts public static int[] EntityCounts { get; } Property Value int[] IsReady public static bool IsReady { get; } Property Value bool LastSettleFrame public static int LastSettleFrame { get; } Property Value int SpawnRect public static IRect SpawnRect { get; } Property Value IRect ViewRect public static IRect ViewRect { get; } Property Value IRect ViewZ public static int ViewZ { get; } Property Value int Methods DespawnAllEntitiesOfType<E>(int) public static void DespawnAllEntitiesOfType<E>(int targetLayer = -1) where E : Entity Parameters targetLayer int Type Parameters E DespawnAllNonUiEntities(bool) public static void DespawnAllNonUiEntities(bool refreshImmediately = false) Parameters refreshImmediately bool FindEntity(int) public static Entity FindEntity(int typeID) Parameters typeID int Returns Entity FindEntity<T>() public static T FindEntity<T>() where T : Entity Returns T Type Parameters T ForAllActiveEntities<E>(int) public static IEnumerable<E> ForAllActiveEntities<E>(int entityLayer = -1) where E : Entity Parameters entityLayer int Returns IEnumerable<E> Type Parameters E GetCameraCullingPadding() public static Int4 GetCameraCullingPadding() Returns Int4 GetEntityCapacity(int) public static int GetEntityCapacity(int typeID) Parameters typeID int Returns int GetEntityType(int) public static Type GetEntityType(int id) Parameters id int Returns Type GetOrSpawnEntity(int, int, int) public static Entity GetOrSpawnEntity(int typeID, int x, int y) Parameters typeID int x int y int Returns Entity GetOrSpawnEntity<T>(int, int) public static T GetOrSpawnEntity<T>(int x, int y) where T : Entity Parameters x int y int Returns T Type Parameters T GetSpawnedEntityCount(int) public static int GetSpawnedEntityCount(int id) Parameters id int Returns int IsEntityRequireDrawBehind(int) public static bool IsEntityRequireDrawBehind(int id) Parameters id int Returns bool IsEntityRequireReposition(int) public static bool IsEntityRequireReposition(int typeID) Parameters typeID int Returns bool IsValidEntityID(int) public static bool IsValidEntityID(int id) Parameters id int Returns bool PeekOrGetEntity(int) public static Entity PeekOrGetEntity(int typeID) Parameters typeID int Returns Entity PeekOrGetEntity<T>() public static T PeekOrGetEntity<T>() where T : Entity Returns T Type Parameters T RemoveStagedEntity(Int3) public static void RemoveStagedEntity(Int3 instanceID) Parameters instanceID Int3 SetViewPositionDelay(int, int, int, int) public static void SetViewPositionDelay(int x, int y, int lerp = 1000, int priority = -2147483648) Parameters x int y int lerp int priority int SetViewRectImmediately(IRect, bool, bool) public static void SetViewRectImmediately(IRect newRect, bool remapAllRenderingCells = false, bool resetDelay = true) Parameters newRect IRect remapAllRenderingCells bool resetDelay bool SetViewSizeDelay(int, int, int, bool) public static void SetViewSizeDelay(int height, int lerp = 1000, int priority = -2147483648, bool centralized = false) Parameters height int lerp int priority int centralized bool SetViewXDelay(int, int, int) public static void SetViewXDelay(int x, int lerp = 1000, int priority = -2147483648) Parameters x int lerp int priority int SetViewYDelay(int, int, int) public static void SetViewYDelay(int y, int lerp = 1000, int priority = -2147483648) Parameters y int lerp int priority int SetViewZ(int, bool) public static void SetViewZ(int newZ, bool immediately = false) Parameters newZ int immediately bool Settle() public static void Settle() SpawnEntity(int, int, int) public static Entity SpawnEntity(int typeID, int x, int y) Parameters typeID int x int y int Returns Entity SpawnEntityFromWorld(int, int, int, int, int, int, bool) public static Entity SpawnEntityFromWorld(int typeID, int x, int y, int z, int reposDeltaX = 0, int reposDeltaY = 0, bool forceSpawn = false) Parameters typeID int x int y int z int reposDeltaX int reposDeltaY int forceSpawn bool Returns Entity SpawnEntity<T>(int, int) public static T SpawnEntity<T>(int x, int y) where T : Entity Parameters x int y int Returns T Type Parameters T TryFindEntity(int, out Entity) public static bool TryFindEntity(int typeID, out Entity result) Parameters typeID int result Entity Returns bool TryFindEntityNearby<E>(Int2, out E, Func<E, bool>) public static bool TryFindEntityNearby<E>(Int2 pos, out E finalTarget, Func<E, bool> condition = null) Parameters pos Int2 finalTarget E condition Func<E, bool> Returns bool Type Parameters E TryFindEntity<E>(out E) public static bool TryFindEntity<E>(out E result) where E : Entity Parameters result E Returns bool Type Parameters E TryGetEntities(int, out ReadOnlySpan<Entity>, out int) public static bool TryGetEntities(int layer, out ReadOnlySpan<Entity> entities, out int count) Parameters layer int entities ReadOnlySpan<Entity> count int Returns bool TryGetStagedEntity(Int3, out Entity) public static bool TryGetStagedEntity(Int3 instanceID, out Entity instance) Parameters instanceID Int3 instance Entity Returns bool TryRepositionEntity(Entity, bool) public static void TryRepositionEntity(Entity entity, bool carryThoughZ = false) Parameters entity Entity carryThoughZ bool TrySpawnEntity(int, int, int, out Entity) public static bool TrySpawnEntity(int typeID, int x, int y, out Entity entity) Parameters typeID int x int y int entity Entity Returns bool TrySpawnEntity(int, object, object, out Entity) public static void TrySpawnEntity(int tYPE_ID, object x, object value, out Entity _) Parameters tYPE_ID int x object value object _ Entity TrySpawnEntity<T>(int, int, out T) public static bool TrySpawnEntity<T>(int x, int y, out T entity) where T : Entity Parameters x int y int entity T Returns bool Type Parameters T"
  },
  "api/AngeliA.SummonAttackness.html": {
    "href": "api/AngeliA.SummonAttackness.html",
    "title": "Class SummonAttackness | AngeliA",
    "summary": "Class SummonAttackness Namespace AngeliA Assembly AngeliA Framework.dll Behavour class that handle attack logic for summon type character public class SummonAttackness : CharacterAttackness Inheritance object CharacterAttackness SummonAttackness Inherited Members CharacterAttackness.TargetCharacter CharacterAttackness.AimingDirection CharacterAttackness.IsAttacking CharacterAttackness.IsAttackIgnored CharacterAttackness.IsChargingAttack CharacterAttackness.LastAttackFrame CharacterAttackness.AttackChargeStartFrame CharacterAttackness.LastAttackCharged CharacterAttackness.AttackStyleIndex CharacterAttackness.AttackStartFacingRight CharacterAttackness.AttackDuration CharacterAttackness.AttackCooldown CharacterAttackness.MinimalChargeAttackDuration CharacterAttackness.RepeatAttackWhenHolding CharacterAttackness.HoldingAttack CharacterAttackness.LockFacingOnAttack CharacterAttackness.AttackComboGap CharacterAttackness.HoldAttackPunishFrame CharacterAttackness.CancelAttackOnJump CharacterAttackness.DefaultSpeedRateOnAttack CharacterAttackness.AirSpeedRateOnAttack CharacterAttackness.WalkingSpeedRateOnAttack CharacterAttackness.RunningSpeedRateOnAttack CharacterAttackness.AttackInAir CharacterAttackness.AttackInWater CharacterAttackness.AttackWhenWalking CharacterAttackness.AttackWhenRunning CharacterAttackness.AttackWhenClimbing CharacterAttackness.AttackWhenFlying CharacterAttackness.AttackWhenRolling CharacterAttackness.AttackWhenSquatting CharacterAttackness.AttackWhenDashing CharacterAttackness.AttackWhenSliding CharacterAttackness.AttackWhenGrabbing CharacterAttackness.AttackWhenRush CharacterAttackness.AttackWhenPounding CharacterAttackness.OnActivated() CharacterAttackness.PhysicsUpdate_Attack() CharacterAttackness.Attack(bool, bool) CharacterAttackness.CancelAttack() CharacterAttackness.IgnoreAimingDirection(Direction8, int) CharacterAttackness.IsAimingDirectionIgnored(Direction8) CharacterAttackness.IgnoreAttack(int) CharacterAttackness.CancelIgnoreAttack() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Constructors SummonAttackness(Character) Behavour class that handle attack logic for summon type character public SummonAttackness(Character character) Parameters character Character"
  },
  "api/AngeliA.SwitchItem-1.html": {
    "href": "api/AngeliA.SwitchItem-1.html",
    "title": "Class SwitchItem<TargetItem> | AngeliA",
    "summary": "Class SwitchItem<TargetItem> Namespace AngeliA Assembly AngeliA Framework.dll public abstract class SwitchItem<TargetItem> : Item, IMapItem where TargetItem : Item Type Parameters TargetItem Inheritance object Item SwitchItem<TargetItem> Implements IMapItem Inherited Members Item.AllowDuplicateUpdate Item.EmbedIntoLevel Item.TypeID Item.BeforeItemUpdate_FromInventory(Character, int, int) Item.OnItemUpdate_FromInventory(Character, int, int) Item.OnPoseAnimationUpdate_FromInventory(PoseCharacterRenderer, int, int) Item.OnTakeDamage_FromInventory(Character, int, int, ref Damage) Item.OnCharacterAttack_FromInventory(Character, Bullet, int, int) Item.BeforeItemUpdate_FromEquipment(Character) Item.OnItemUpdate_FromEquipment(Character) Item.BeforePoseAnimationUpdate_FromEquipment(PoseCharacterRenderer) Item.OnPoseAnimationUpdate_FromEquipment(PoseCharacterRenderer) Item.OnTakeDamage_FromEquipment(Character, ref Damage) Item.OnCharacterAttack_FromEquipment(Character, Bullet) Item.TryRepairEquipment(Character) Item.OnItemUpdate_FromItemHolder(ItemHolder, int) Item.OnCollect(Character) Item.ItemConditionCheck(Character) Item.DrawItem(Entity, IRect, Color32, int) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Constructors SwitchItem() public SwitchItem() Properties MaxStackCount public override int MaxStackCount { get; } Property Value int TargetID public int TargetID { get; init; } Property Value int Methods CanUse(Character) public override bool CanUse(Character character) Parameters character Character Returns bool Use(Character, int, int, out bool) public override bool Use(Character character, int inventoryID, int itemIndex, out bool consume) Parameters character Character inventoryID int itemIndex int consume bool Returns bool"
  },
  "api/AngeliA.Tag.html": {
    "href": "api/AngeliA.Tag.html",
    "title": "Enum Tag | AngeliA",
    "summary": "Enum Tag Namespace AngeliA Assembly AngeliA Framework.dll [Flags] public enum Tag Extension Methods Extension.Next<E>(E) Extension.Prev<E>(E) TagUtil.HasAll(Tag, Tag) TagUtil.HasAny(Tag, Tag) Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Fields Climb = 16 ClimbStable = 32 ExplosiveDamage = 1048576 FireDamage = 8388608 GrabSide = 4096 GrabTop = 2048 HideLimb = 32768 IceDamage = 16777216 LightenDamage = 33554432 LoopStart = 65536 MagicalDamage = 2097152 Mark = 64 NoSlide = 1024 None = 0 OnewayDown = 2 OnewayLeft = 4 OnewayRight = 8 OnewayUp = 1 Palette = 262144 PhysicalDamage = 524288 PoisonDamage = 4194304 Random = 131072 ShowLimb = 16384 Slide = 512 Slip = 256 Unbreackable = 8192 Water = 128"
  },
  "api/AngeliA.TagUtil.html": {
    "href": "api/AngeliA.TagUtil.html",
    "title": "Class TagUtil | AngeliA",
    "summary": "Class TagUtil Namespace AngeliA Assembly AngeliA Framework.dll public static class TagUtil Inheritance object TagUtil Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields ALL_TAG_NAMES public static readonly string[] ALL_TAG_NAMES Field Value string[] AllDamages public const Tag AllDamages = PhysicalDamage | ExplosiveDamage | MagicalDamage | PoisonDamage | FireDamage | IceDamage | LightenDamage Field Value Tag NonExplosiveDamage public const Tag NonExplosiveDamage = PhysicalDamage | MagicalDamage | PoisonDamage | FireDamage | IceDamage | LightenDamage Field Value Tag TAG_COUNT public const int TAG_COUNT = 26 Field Value int Methods GetTagAt(int) public static Tag GetTagAt(int index) Parameters index int Returns Tag HasAll(Tag, Tag) public static bool HasAll(this Tag self, Tag musk) Parameters self Tag musk Tag Returns bool HasAny(Tag, Tag) public static bool HasAny(this Tag self, Tag musk) Parameters self Tag musk Tag Returns bool"
  },
  "api/AngeliA.Tail.html": {
    "href": "api/AngeliA.Tail.html",
    "title": "Class Tail | AngeliA",
    "summary": "Class Tail Namespace AngeliA Assembly AngeliA Framework.dll public abstract class Tail : BodyGadget Inheritance object BodyGadget Tail Derived ModularTail Inherited Members BodyGadget.BodyGadgetSystemReady BodyGadget.SheetIndex BodyGadget.GadgetID BodyGadget.GadgetName BodyGadget.ForAllGadget() BodyGadget.GetDefaultGadgetID(int, BodyGadgetType) BodyGadget.TryGetGadget(int, out BodyGadget) BodyGadget.GetDisplayName(string, out int) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Properties AngleAmountRoot protected virtual int AngleAmountRoot { get; } Property Value int AngleAmountSubsequent protected virtual int AngleAmountSubsequent { get; } Property Value int AngleOffset protected virtual int AngleOffset { get; } Property Value int FrameDelta protected virtual int FrameDelta { get; } Property Value int FrameLen protected virtual int FrameLen { get; } Property Value int Frequency protected virtual int Frequency { get; } Property Value int FrequencyAlt protected virtual int FrequencyAlt { get; } Property Value int GadgetType public override sealed BodyGadgetType GadgetType { get; } Property Value BodyGadgetType LimbGrow protected virtual int LimbGrow { get; } Property Value int OffsetX protected virtual int OffsetX { get; } Property Value int OffsetY protected virtual int OffsetY { get; } Property Value int SpriteLoaded public override bool SpriteLoaded { get; } Property Value bool SpriteTail public OrientedSprite SpriteTail { get; } Property Value OrientedSprite Methods DrawGadget(PoseCharacterRenderer) public override void DrawGadget(PoseCharacterRenderer renderer) Parameters renderer PoseCharacterRenderer DrawGadgetFromPool(PoseCharacterRenderer) public static void DrawGadgetFromPool(PoseCharacterRenderer renderer) Parameters renderer PoseCharacterRenderer DrawGadgetGizmos(IRect, Color32, int) public override void DrawGadgetGizmos(IRect rect, Color32 tint, int z) Parameters rect IRect tint Color32 z int DrawSpriteAsSimpleTail(OrientedSprite, int, int, bool, bool, bool, int) public static void DrawSpriteAsSimpleTail(OrientedSprite oSprite, int x, int y, bool facingFront, bool facingRight, bool facingUp, int z = -2147483648) Parameters oSprite OrientedSprite x int y int facingFront bool facingRight bool facingUp bool z int DrawSpriteAsWhipTail(OrientedSprite, int, int, bool, bool, bool, int, int, int, int, int, int, int, int, int, int, bool, int, int) public static void DrawSpriteAsWhipTail(OrientedSprite oSprite, int x, int y, bool facingFront, bool facingRight, bool facingUp, int frequency = 113, int frequencyAlt = 277, int frameLen = 219, int frameDelta = 37, int angleAmountRoot = 1000, int angleAmountSubsequent = 1000, int angleOffset = 0, int limbGrow = 1000, int offsetX = 0, int offsetY = 0, bool isFlying = false, int frameOffset = 0, int z = -2147483648) Parameters oSprite OrientedSprite x int y int facingFront bool facingRight bool facingUp bool frequency int frequencyAlt int frameLen int frameDelta int angleAmountRoot int angleAmountSubsequent int angleOffset int limbGrow int offsetX int offsetY int isFlying bool frameOffset int z int FillFromSheet(string) public override bool FillFromSheet(string name) Parameters name string Returns bool"
  },
  "api/AngeliA.Task.html": {
    "href": "api/AngeliA.Task.html",
    "title": "Class Task | AngeliA",
    "summary": "Class Task Namespace AngeliA Assembly AngeliA Framework.dll public abstract class Task Inheritance object Task Derived ChangeSavingSlotTask DelayTask DespawnEntityTask DialogueTask EntityHookTask FadeInTask FadeOutTask MethodTask MiniGameTask OpeningTask TeleportTask RestartGameTask SelectPlayerTask SpawnEntityTask Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Properties LocalFrame public int LocalFrame { get; } Property Value int UserData public object UserData { get; } Property Value object Methods FrameUpdate() public abstract TaskResult FrameUpdate() Returns TaskResult OnEnd() public virtual void OnEnd() OnStart() public virtual void OnStart()"
  },
  "api/AngeliA.TaskResult.html": {
    "href": "api/AngeliA.TaskResult.html",
    "title": "Enum TaskResult | AngeliA",
    "summary": "Enum TaskResult Namespace AngeliA Assembly AngeliA Framework.dll public enum TaskResult Extension Methods Extension.Next<E>(E) Extension.Prev<E>(E) Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Fields Continue = 0 End = 1"
  },
  "api/AngeliA.TaskSystem.html": {
    "href": "api/AngeliA.TaskSystem.html",
    "title": "Class TaskSystem | AngeliA",
    "summary": "Class TaskSystem Namespace AngeliA Assembly AngeliA Framework.dll public static class TaskSystem Inheritance object TaskSystem Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods AddToFirst(int, object) public static Task AddToFirst(int id, object userData = null) Parameters id int userData object Returns Task AddToLast(int, object) public static Task AddToLast(int id, object userData = null) Parameters id int userData object Returns Task ClearAllTask() public static void ClearAllTask() EndAllTask() public static void EndAllTask() GetCurrentTask() public static Task GetCurrentTask() Returns Task GetTaskAt(int) public static Task GetTaskAt(int index) Parameters index int Returns Task GetWaitingTaskCount() public static int GetWaitingTaskCount() Returns int HasTask() public static bool HasTask() Returns bool HasTask<T>() public static bool HasTask<T>() where T : Task Returns bool Type Parameters T Initialize() [OnGameInitialize(-128)] public static void Initialize() IsTasking<T>() public static bool IsTasking<T>() where T : Task Returns bool Type Parameters T PeekFromPool(int) public static Task PeekFromPool(int id) Parameters id int Returns Task TryAddToFirst(int, out Task) public static bool TryAddToFirst(int id, out Task task) Parameters id int task Task Returns bool TryAddToFirst(int, object, out Task) public static bool TryAddToFirst(int id, object userData, out Task task) Parameters id int userData object task Task Returns bool TryAddToLast(int, out Task) public static bool TryAddToLast(int id, out Task task) Parameters id int task Task Returns bool TryAddToLast(int, object, out Task) public static bool TryAddToLast(int id, object userData, out Task task) Parameters id int userData object task Task Returns bool"
  },
  "api/AngeliA.ToolApplicationAttribute.html": {
    "href": "api/AngeliA.ToolApplicationAttribute.html",
    "title": "Class ToolApplicationAttribute | AngeliA",
    "summary": "Class ToolApplicationAttribute Namespace AngeliA Assembly AngeliA Framework.dll If application with current assembly should be treat as a \"tool\" rather than \"game\" [AttributeUsage(AttributeTargets.Assembly, AllowMultiple = true)] public class ToolApplicationAttribute : Attribute Inheritance object Attribute ToolApplicationAttribute Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.TransferSystem.html": {
    "href": "api/AngeliA.TransferSystem.html",
    "title": "Class TransferSystem | AngeliA",
    "summary": "Class TransferSystem Namespace AngeliA Assembly AngeliA Framework.dll public static class TransferSystem Inheritance object TransferSystem Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods IsTransfer(int, out Direction4) public static bool IsTransfer(int transferID, out Direction4 direction) Parameters transferID int direction Direction4 Returns bool StartTransfer(Int3, object, int) public static void StartTransfer(Int3 unitPos, object data, int stamp = -2147483648) Parameters unitPos Int3 data object stamp int"
  },
  "api/AngeliA.UILayerScope.html": {
    "href": "api/AngeliA.UILayerScope.html",
    "title": "Struct UILayerScope | AngeliA",
    "summary": "Struct UILayerScope Namespace AngeliA Assembly AngeliA Framework.dll public readonly struct UILayerScope : IDisposable Implements IDisposable Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Constructors UILayerScope() public UILayerScope() UILayerScope(bool) public UILayerScope(bool ignoreSorting) Parameters ignoreSorting bool Methods Dispose() Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources. public void Dispose()"
  },
  "api/AngeliA.UndoRedo.html": {
    "href": "api/AngeliA.UndoRedo.html",
    "title": "Class UndoRedo | AngeliA",
    "summary": "Class UndoRedo Namespace AngeliA Assembly AngeliA Framework.dll public class UndoRedo Inheritance object UndoRedo Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Constructors UndoRedo(int, Action<IUndoItem>, Action<IUndoItem>) public UndoRedo(int undoLimit = 4096, Action<IUndoItem> onUndoPerformed = null, Action<IUndoItem> onRedoPerformed = null) Parameters undoLimit int onUndoPerformed Action<IUndoItem> onRedoPerformed Action<IUndoItem> Fields RedoList protected readonly Pipe<IUndoItem> RedoList Field Value Pipe<IUndoItem> UndoList protected readonly Pipe<IUndoItem> UndoList Field Value Pipe<IUndoItem> Properties CurrentStep public int CurrentStep { get; } Property Value int Methods AbortUnstable() public void AbortUnstable() GrowStep() public virtual void GrowStep() InvokeRedoPerform(IUndoItem) protected virtual void InvokeRedoPerform(IUndoItem data) Parameters data IUndoItem InvokeUndoPerform(IUndoItem) protected virtual void InvokeUndoPerform(IUndoItem data) Parameters data IUndoItem MarkAsStable() public void MarkAsStable() Redo() public void Redo() Register(IUndoItem) public virtual void Register(IUndoItem data) Parameters data IUndoItem Reset() public virtual void Reset() Undo() public void Undo()"
  },
  "api/AngeliA.Universe.html": {
    "href": "api/AngeliA.Universe.html",
    "title": "Class Universe | AngeliA",
    "summary": "Class Universe Namespace AngeliA Assembly AngeliA Framework.dll public class Universe Inheritance object Universe Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Properties BuiltIn public static Universe BuiltIn { get; } Property Value Universe BuiltInInfo public static UniverseInfo BuiltInInfo { get; } Property Value UniverseInfo BuiltInMapRoot public string BuiltInMapRoot { get; } Property Value string BuiltInSheetPath public string BuiltInSheetPath { get; } Property Value string CharacterMovementConfigRoot public string CharacterMovementConfigRoot { get; } Property Value string ConversationRoot public string ConversationRoot { get; } Property Value string CurrentSavingSlot public int CurrentSavingSlot { get; } Property Value int FontRoot public string FontRoot { get; } Property Value string GameSheetPath public string GameSheetPath { get; } Property Value string Info public UniverseInfo Info { get; } Property Value UniverseInfo InfoPath public string InfoPath { get; } Property Value string LanguageRoot public string LanguageRoot { get; } Property Value string MusicRoot public string MusicRoot { get; } Property Value string SavingRoot public string SavingRoot { get; } Property Value string SheetRoot public string SheetRoot { get; } Property Value string SlotCharacterRenderingConfigRoot public string SlotCharacterRenderingConfigRoot { get; } Property Value string SlotInventoryRoot public string SlotInventoryRoot { get; } Property Value string SlotMetaRoot public string SlotMetaRoot { get; } Property Value string SlotRoot public string SlotRoot { get; } Property Value string SlotUserMapRoot public string SlotUserMapRoot { get; } Property Value string SoundRoot public string SoundRoot { get; } Property Value string UniverseMetaRoot public string UniverseMetaRoot { get; } Property Value string UniverseRoot public string UniverseRoot { get; } Property Value string Methods LoadFromFile(string, bool) public static Universe LoadFromFile(string universeFolder, bool useBuiltInSavingRoot = true) Parameters universeFolder string useBuiltInSavingRoot bool Returns Universe ReloadSavingSlot(int, bool) public void ReloadSavingSlot(int newSlot, bool forceReload = false) Parameters newSlot int forceReload bool SetSavingRoot(string, int) public void SetSavingRoot(string newSavingRoot, int slot) Parameters newSavingRoot string slot int"
  },
  "api/AngeliA.UniverseInfo.html": {
    "href": "api/AngeliA.UniverseInfo.html",
    "title": "Class UniverseInfo | AngeliA",
    "summary": "Class UniverseInfo Namespace AngeliA Assembly AngeliA Framework.dll [Serializable] public class UniverseInfo : IJsonSerializationCallback Inheritance object UniverseInfo Implements IJsonSerializationCallback Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Fields AllowCheatCode public bool AllowCheatCode Field Value bool AllowPause public bool AllowPause Field Value bool AllowQuitFromMenu public bool AllowQuitFromMenu Field Value bool AllowRestartFromMenu public bool AllowRestartFromMenu Field Value bool DefaultViewHeight public int DefaultViewHeight Field Value int DeveloperName public string DeveloperName Field Value string EngineBuildVersion public uint EngineBuildVersion Field Value uint LastBackupSavingDate public long LastBackupSavingDate Field Value long LastEdittingViewHeight public int LastEdittingViewHeight Field Value int LastEdittingViewPos public Int3 LastEdittingViewPos Field Value Int3 LastOpenAtlasIndex public int LastOpenAtlasIndex Field Value int LightMap_AirIlluminanceDay public float LightMap_AirIlluminanceDay Field Value float LightMap_AirIlluminanceNight public float LightMap_AirIlluminanceNight Field Value float LightMap_BackgroundTint public float LightMap_BackgroundTint Field Value float LightMap_LevelIlluminateRemain public float LightMap_LevelIlluminateRemain Field Value float LightMap_PixelStyle public bool LightMap_PixelStyle Field Value bool LightMap_SelfLerp public float LightMap_SelfLerp Field Value float LightMap_SolidIlluminance public float LightMap_SolidIlluminance Field Value float MajorVersion public int MajorVersion Field Value int MaxViewHeight public int MaxViewHeight Field Value int MinViewHeight public int MinViewHeight Field Value int MinorVersion public int MinorVersion Field Value int PatchVersion public int PatchVersion Field Value int ProductName public string ProductName Field Value string ProjectType public ProjectType ProjectType Field Value ProjectType ReadonlyMap public bool ReadonlyMap Field Value bool RequireFixScriptNamesWhenAnalyse public bool RequireFixScriptNamesWhenAnalyse Field Value bool ScaleUiBasedOnMonitor public bool ScaleUiBasedOnMonitor Field Value bool UseLightingSystem public bool UseLightingSystem Field Value bool UseMapEditor public bool UseMapEditor Field Value bool UseProceduralMap public bool UseProceduralMap Field Value bool ViewRatio public int ViewRatio Field Value int WorldBehindAlpha public byte WorldBehindAlpha Field Value byte WorldBehindParallax public int WorldBehindParallax Field Value int Methods OnAfterLoadedFromDisk() public void OnAfterLoadedFromDisk() OnBeforeSaveToDisk() public void OnBeforeSaveToDisk() Valid(bool) public void Valid(bool minViewSizeFirst) Parameters minViewSizeFirst bool"
  },
  "api/AngeliA.Util.MathfInternal.html": {
    "href": "api/AngeliA.Util.MathfInternal.html",
    "title": "Struct Util.MathfInternal | AngeliA",
    "summary": "Struct Util.MathfInternal Namespace AngeliA Assembly AngeliA Framework.dll public struct Util.MathfInternal Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Fields FloatMinDenormal public static volatile float FloatMinDenormal Field Value float FloatMinNormal public static volatile float FloatMinNormal Field Value float IsFlushToZeroEnabled public static bool IsFlushToZeroEnabled Field Value bool"
  },
  "api/AngeliA.Util.html": {
    "href": "api/AngeliA.Util.html",
    "title": "Class Util | AngeliA",
    "summary": "Class Util Namespace AngeliA Assembly AngeliA Framework.dll public static class Util Inheritance object Util Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields AllAssemblies public static readonly List<Assembly> AllAssemblies Field Value List<Assembly> Deg2Rad public const float Deg2Rad = 0.017453292 Field Value float Epsilon public static readonly float Epsilon Field Value float PI public const float PI = 3.1415927 Field Value float Rad2Deg public const float Rad2Deg = 57.29578 Field Value float Methods Abs(int) public static int Abs(int value) Parameters value int Returns int Abs(float) public static float Abs(float value) Parameters value float Returns float AddAssembly(Assembly) public static void AddAssembly(Assembly assembly) Parameters assembly Assembly AddEnvironmentVariable(string, string) public static void AddEnvironmentVariable(string key, string value) Parameters key string value string AllChildClass(Type, bool, bool) public static IEnumerable<Type> AllChildClass(this Type type, bool includeAbstract = false, bool includeInterface = false) Parameters type Type includeAbstract bool includeInterface bool Returns IEnumerable<Type> AllChildClassID(Type, bool, bool) public static IEnumerable<int> AllChildClassID(this Type type, bool includeAbstract = false, bool includeInterface = false) Parameters type Type includeAbstract bool includeInterface bool Returns IEnumerable<int> AllClassImplemented(Type, bool) public static IEnumerable<Type> AllClassImplemented(this Type interfaceType, bool includeAbstract = false) Parameters interfaceType Type includeAbstract bool Returns IEnumerable<Type> AllClassImplementedID(Type, bool) public static IEnumerable<int> AllClassImplementedID(this Type interfaceType, bool includeAbstract = false) Parameters interfaceType Type includeAbstract bool Returns IEnumerable<int> AllClassWithAttribute(Type, bool, bool) public static IEnumerable<(Type, Attribute)> AllClassWithAttribute(this Type attribute, bool ignoreAbstract = true, bool ignoreInterface = true) Parameters attribute Type ignoreAbstract bool ignoreInterface bool Returns IEnumerable<(Type, Attribute)> AllClassWithAttribute<A>(bool, bool, bool) public static IEnumerable<(Type, A)> AllClassWithAttribute<A>(bool ignoreAbstract = true, bool ignoreInterface = true, bool inherit = false) where A : Attribute Parameters ignoreAbstract bool ignoreInterface bool inherit bool Returns IEnumerable<(Type, A)> Type Parameters A AllEnumIdPairs<E>() public static IEnumerable<KeyValuePair<E, int>> AllEnumIdPairs<E>() where E : struct, Enum Returns IEnumerable<KeyValuePair<E, int>> Type Parameters E AllStaticMethodWithAttribute<T>() public static IEnumerable<KeyValuePair<MethodInfo, T>> AllStaticMethodWithAttribute<T>() where T : Attribute Returns IEnumerable<KeyValuePair<MethodInfo, T>> Type Parameters T Approximately(float, float) public static bool Approximately(float a, float b) Parameters a float b float Returns bool ArgPath_to_Path(string) public static string ArgPath_to_Path(string path) Parameters path string Returns string Atan(float, float) public static float Atan(float x, float y) Parameters x float y float Returns float BabylonianSqrt(int) public static int BabylonianSqrt(int n) Parameters n int Returns int ByteToCompressedFile(string, byte[], int) public static void ByteToCompressedFile(string path, byte[] rawBytes, int length = -1) Parameters path string rawBytes byte[] length int BytesToFile(byte[], string, int) public static void BytesToFile(byte[] bytes, string path, int length = -1) Parameters bytes byte[] path string length int CeilToInt(float) public static int CeilToInt(float value) Parameters value float Returns int ChangeExtension(string, string) public static string ChangeExtension(string path, string newEx) Parameters path string newEx string Returns string Clamp(int, int, int) public static int Clamp(int a, int min, int max) Parameters a int min int max int Returns int Clamp(float, float, float) public static float Clamp(float a, float min, float max) Parameters a float min float max float Returns float Clamp01(float) public static float Clamp01(float value) Parameters value float Returns float ColorToHtml(Color32, bool) public static string ColorToHtml(Color32 color, bool ignoreAlpha = false) Parameters color Color32 ignoreAlpha bool Returns string ColorToInt(Color32) public static int ColorToInt(Color32 color) Parameters color Color32 Returns int CombinePaths(string, string) public static string CombinePaths(string path1, string path2) Parameters path1 string path2 string Returns string CombinePaths(string, string, string) public static string CombinePaths(string path1, string path2, string path3) Parameters path1 string path2 string path3 string Returns string CombinePaths(string, string, string, string) public static string CombinePaths(string path1, string path2, string path3, string path4) Parameters path1 string path2 string path3 string path4 string Returns string CombinePaths(params string[]) public static string CombinePaths(params string[] paths) Parameters paths string[] Returns string CompressedFileToByte(string, out int) public static byte[] CompressedFileToByte(string path, out int byteLength) Parameters path string byteLength int Returns byte[] CopyFile(string, string, bool) public static bool CopyFile(string from, string to, bool overwrite = true) Parameters from string to string overwrite bool Returns bool CopyFolder(string, string, bool, bool, bool) public static bool CopyFolder(string from, string to, bool copySubDirs, bool ignoreHidden, bool overrideFile = false) Parameters from string to string copySubDirs bool ignoreHidden bool overrideFile bool Returns bool Cos(float) public static float Cos(float radAngle) Parameters radAngle float Returns float CreateFolder(string) public static void CreateFolder(string path) Parameters path string DecompressBytes(byte[]) public static byte[] DecompressBytes(byte[] compressedBytes) Parameters compressedBytes byte[] Returns byte[] DeleteFile(string) public static void DeleteFile(string path) Parameters path string DeleteFolder(string) public static void DeleteFolder(string path) Parameters path string DistanceFloat(Float2, Float2) public static float DistanceFloat(Float2 a, Float2 b) Parameters a Float2 b Float2 Returns float DistanceFloat(float, float, float, float) public static float DistanceFloat(float aX, float aY, float bX, float bY) Parameters aX float aY float bX float bY float Returns float DistanceInt(Int2, Int2) public static int DistanceInt(Int2 a, Int2 b) Parameters a Int2 b Int2 Returns int DistanceInt(int, int, int, int) public static int DistanceInt(int aX, int aY, int bX, int bY) Parameters aX int aY int bX int bY int Returns int DrawFilledEllipse_Patrick(int, int, int, int) public static IEnumerable<IRect> DrawFilledEllipse_Patrick(int left, int bottom, int width, int height) Parameters left int bottom int width int height int Returns IEnumerable<IRect> DrawHoloEllipse_Patrick(int, int, int, int) public static IEnumerable<Int2> DrawHoloEllipse_Patrick(int left, int bottom, int width, int height) Parameters left int bottom int width int height int Returns IEnumerable<Int2> DrawLineWithRect_DDA(int, int, int, int) public static IEnumerable<IRect> DrawLineWithRect_DDA(int x0, int y0, int x1, int y1) Parameters x0 int y0 int x1 int y1 int Returns IEnumerable<IRect> DrawLine_DDA(int, int, int, int) public static IEnumerable<Int2> DrawLine_DDA(int x0, int y0, int x1, int y1) Parameters x0 int y0 int x1 int y1 int Returns IEnumerable<Int2> EnumerateFiles(string, bool, string) public static IEnumerable<string> EnumerateFiles(string path, bool topOnly, string searchPattern) Parameters path string topOnly bool searchPattern string Returns IEnumerable<string> EnumerateFiles(string, bool, params string[]) public static IEnumerable<string> EnumerateFiles(string path, bool topOnly, params string[] searchPatterns) Parameters path string topOnly bool searchPatterns string[] Returns IEnumerable<string> EnumerateFolders(string, bool, string) public static IEnumerable<string> EnumerateFolders(string path, bool topOnly, string searchPattern = \"*\") Parameters path string topOnly bool searchPattern string Returns IEnumerable<string> EnumerateFolders(string, bool, params string[]) public static IEnumerable<string> EnumerateFolders(string path, bool topOnly, params string[] searchPatterns) Parameters path string topOnly bool searchPatterns string[] Returns IEnumerable<string> ExecuteCommand(string, string, int, bool) public static int ExecuteCommand(string workingDirectory, string arguments, int logID = -1, bool wait = true) Parameters workingDirectory string arguments string logID int wait bool Returns int FileExists(string) public static bool FileExists(string path) Parameters path string Returns bool FileToBytes(string) public static byte[] FileToBytes(string path) Parameters path string Returns byte[] FileToText(string) public static string FileToText(string path) Parameters path string Returns string FileToText(string, Encoding) public static string FileToText(string path, Encoding encoding) Parameters path string encoding Encoding Returns string FindNextStringStep(string, int, bool) public static int FindNextStringStep(string content, int start, bool toRight) Parameters content string start int toRight bool Returns int FixPath(string, bool) public static string FixPath(string path, bool forUnity = true) Parameters path string forUnity bool Returns string FloorToInt(float) public static int FloorToInt(float value) Parameters value float Returns int FolderExists(string) public static bool FolderExists(string path) Parameters path string Returns bool ForAllAssemblyWithAttribute<A>() public static IEnumerable<(Assembly assembly, A attribyte)> ForAllAssemblyWithAttribute<A>() where A : Attribute Returns IEnumerable<(Assembly assembly, A attribyte)> Type Parameters A ForAllLinesInFile(string) public static IEnumerable<string> ForAllLinesInFile(string path) Parameters path string Returns IEnumerable<string> ForAllLinesInFile(string, Encoding) public static IEnumerable<string> ForAllLinesInFile(string path, Encoding encoding) Parameters path string encoding Encoding Returns IEnumerable<string> ForAllLinesInString(string) public static IEnumerable<string> ForAllLinesInString(string content) Parameters content string Returns IEnumerable<string> ForAllNameAndIntInFile(StreamReader) public static IEnumerable<(string name, int value)> ForAllNameAndIntInFile(StreamReader reader) Parameters reader StreamReader Returns IEnumerable<(string name, int value)> ForAllNameAndIntInFile(string) public static IEnumerable<(string name, int value)> ForAllNameAndIntInFile(string path) Parameters path string Returns IEnumerable<(string name, int value)> ForAllNameAndIntInFile(string, Encoding) public static IEnumerable<(string name, int value)> ForAllNameAndIntInFile(string path, Encoding encoding) Parameters path string encoding Encoding Returns IEnumerable<(string name, int value)> ForAllNameAndStringInFile(StreamReader) public static IEnumerable<(string name, string value)> ForAllNameAndStringInFile(StreamReader reader) Parameters reader StreamReader Returns IEnumerable<(string name, string value)> ForAllNameAndStringInFile(string) public static IEnumerable<(string name, string value)> ForAllNameAndStringInFile(string path) Parameters path string Returns IEnumerable<(string name, string value)> ForAllNameAndStringInFile(string, Encoding) public static IEnumerable<(string name, string value)> ForAllNameAndStringInFile(string path, Encoding encoding) Parameters path string encoding Encoding Returns IEnumerable<(string name, string value)> ForAllSystemLanguages() public static IEnumerable<string> ForAllSystemLanguages() Returns IEnumerable<string> GetAllTypeSpan() public static ReadOnlySpan<Type> GetAllTypeSpan() Returns ReadOnlySpan<Type> GetAngeHashForClassName(string) public static int GetAngeHashForClassName(string className) Parameters className string Returns int GetDirection(int, int) public static Direction8 GetDirection(int deltaX, int deltaY) Parameters deltaX int deltaY int Returns Direction8 GetDisplayName(string) public static string GetDisplayName(string name) Parameters name string Returns string GetDisplayTimeFromTicks(long) public static string GetDisplayTimeFromTicks(long ticks) Parameters ticks long Returns string GetExtensionWithDot(string) public static string GetExtensionWithDot(string path) Parameters path string Returns string GetField(Type, string) public static FieldInfo GetField(Type type, string name) Parameters type Type name string Returns FieldInfo GetFieldType(object, string) public static Type GetFieldType(object target, string name) Parameters target object name string Returns Type GetFieldValue(object, string) public static object GetFieldValue(object target, string fieldName) Parameters target object fieldName string Returns object GetFileCount(string, string, SearchOption) public static int GetFileCount(string path, string search = \"*\", SearchOption option = SearchOption.TopDirectoryOnly) Parameters path string search string option SearchOption Returns int GetFileCreationDate(string) public static long GetFileCreationDate(string path) Parameters path string Returns long GetFileModifyDate(string) public static long GetFileModifyDate(string path) Parameters path string Returns long GetFileSizeInMB(string) public static float GetFileSizeInMB(string path) Parameters path string Returns float GetFolderCount(string, string, SearchOption) public static int GetFolderCount(string path, string search = \"*\", SearchOption option = SearchOption.TopDirectoryOnly) Parameters path string search string option SearchOption Returns int GetFolderFullPath(string) public static string GetFolderFullPath(string path) Parameters path string Returns string GetFolderModifyDate(string) public static long GetFolderModifyDate(string path) Parameters path string Returns long GetFullPath(string) public static string GetFullPath(string path) Parameters path string Returns string GetKeyDisplayName(KeyboardKey) public static string GetKeyDisplayName(KeyboardKey key) Parameters key KeyboardKey Returns string GetLanguageDisplayName(string) public static string GetLanguageDisplayName(string iso) Parameters iso string Returns string GetLanguageDisplayNameInEnglish(string) public static string GetLanguageDisplayNameInEnglish(string iso) Parameters iso string Returns string GetLongTime() public static long GetLongTime() Returns long GetNameWithExtension(string) public static string GetNameWithExtension(string path) Parameters path string Returns string GetNameWithoutExtension(string) public static string GetNameWithoutExtension(string path) Parameters path string Returns string GetParentPath(string) public static string GetParentPath(string path) Parameters path string Returns string GetProperty(Type, string) public static PropertyInfo GetProperty(Type type, string name) Parameters type Type name string Returns PropertyInfo GetPropertyValue(object, string) public static object GetPropertyValue(object target, string name) Parameters target object name string Returns object GetStaticFieldType(Type, string) public static Type GetStaticFieldType(Type type, string name) Parameters type Type name string Returns Type GetStaticFieldValue(Type, string) public static object GetStaticFieldValue(Type type, string name) Parameters type Type name string Returns object GetStaticPropertyValue(Type, string) public static object GetStaticPropertyValue(Type type, string name) Parameters type Type name string Returns object GetTimeString() public static string GetTimeString() Returns string GetTrimedPixels(Color32[], int, int, out int, out int, out int, out int) public static Color32[] GetTrimedPixels(Color32[] pixels, int width, int height, out int left, out int right, out int down, out int up) Parameters pixels Color32[] width int height int left int right int down int up int Returns Color32[] GetUrl(string) public static string GetUrl(string path) Parameters path string Returns string GreatestCommonFactor(int, int) public static int GreatestCommonFactor(int a, int b) Parameters a int b int Returns int HasFileIn(string, bool, string) public static bool HasFileIn(string path, bool topOnly, string searchPattern) Parameters path string topOnly bool searchPattern string Returns bool HasFileIn(string, bool, params string[]) public static bool HasFileIn(string path, bool topOnly, params string[] searchPattern) Parameters path string topOnly bool searchPattern string[] Returns bool HsvToRgb(float, float, float) public static Color32 HsvToRgb(float h, float s, float v) Parameters h float s float v float Returns Color32 HsvToRgbF(float, float, float) public static ColorF HsvToRgbF(float h, float s, float v) Parameters h float s float v float Returns ColorF HtmlToColor(string, out Color32) public static bool HtmlToColor(string html, out Color32 color) Parameters html string color Color32 Returns bool IntToColor(int) public static Color32 IntToColor(int i) Parameters i int Returns Color32 InverseLerp(float, float, float) public static float InverseLerp(float from, float to, float value) Parameters from float to float value float Returns float InverseLerpUnclamped(float, float, float) public static float InverseLerpUnclamped(float from, float to, float value) Parameters from float to float value float Returns float InvokeAllStaticMethodWithAttribute<A>() public static void InvokeAllStaticMethodWithAttribute<A>() where A : Attribute Type Parameters A InvokeAllStaticMethodWithAttribute<A>(Comparison<KeyValuePair<MethodInfo, A>>) public static void InvokeAllStaticMethodWithAttribute<A>(Comparison<KeyValuePair<MethodInfo, A>> comparison) where A : Attribute Parameters comparison Comparison<KeyValuePair<MethodInfo, A>> Type Parameters A InvokeAllStaticMethodWithAttribute<A>(Func<KeyValuePair<MethodInfo, A>, bool>) public static void InvokeAllStaticMethodWithAttribute<A>(Func<KeyValuePair<MethodInfo, A>, bool> predicte) where A : Attribute Parameters predicte Func<KeyValuePair<MethodInfo, A>, bool> Type Parameters A InvokeMethod(object, string, params object[]) public static object InvokeMethod(object obj, string methodName, params object[] param) Parameters obj object methodName string param object[] Returns object InvokeStaticMethod(Type, string, params object[]) public static object InvokeStaticMethod(Type type, string methodName, params object[] param) Parameters type Type methodName string param object[] Returns object IsExistingFileEmpty(string) public static bool IsExistingFileEmpty(string path) Parameters path string Returns bool IsFileHidden(string) public static bool IsFileHidden(string path) Parameters path string Returns bool IsFolderHidden(string) public static bool IsFolderHidden(string path) Parameters path string Returns bool IsPathValid(string) public static bool IsPathValid(string path) Parameters path string Returns bool IsPowerOfTwo(int) public static bool IsPowerOfTwo(int x) Parameters x int Returns bool IsSameDay(long, long) public static bool IsSameDay(long timeA, long timeB) Parameters timeA long timeB long Returns bool IsSamePath(string, string) public static bool IsSamePath(string pathA, string pathB) Parameters pathA string pathB string Returns bool IsSupportedLanguageISO(string) public static bool IsSupportedLanguageISO(string iso) Parameters iso string Returns bool IsValidForFileName(string) public static bool IsValidForFileName(string content) Parameters content string Returns bool LeastCommonMultiple(int, int) public static int LeastCommonMultiple(int a, int b) Parameters a int b int Returns int Lerp(float, float, float) public static float Lerp(float a, float b, float t) Parameters a float b float t float Returns float LerpAngle(float, float, float) public static float LerpAngle(float a, float b, float t) Parameters a float b float t float Returns float LerpAngleUnclamped(float, float, float) public static float LerpAngleUnclamped(float a, float b, float t) Parameters a float b float t float Returns float LerpUnclamped(float, float, float) public static float LerpUnclamped(float a, float b, float t) Parameters a float b float t float Returns float Max(int, int) public static int Max(int a, int b) Parameters a int b int Returns int Max(int, int, int) public static int Max(int a, int b, int c) Parameters a int b int c int Returns int Max(float, float) public static float Max(float a, float b) Parameters a float b float Returns float MergeColor(Color32, Color32) public static Color32 MergeColor(Color32 top, Color32 back) Parameters top Color32 back Color32 Returns Color32 MergeColor(ColorF, ColorF) public static ColorF MergeColor(ColorF top, ColorF back) Parameters top ColorF back ColorF Returns ColorF MergeColor_Editor(Color32, Color32) public static Color32 MergeColor_Editor(Color32 top, Color32 back) Parameters top Color32 back Color32 Returns Color32 MergeColor_Lerp(Color32, Color32) public static Color32 MergeColor_Lerp(Color32 top, Color32 back) Parameters top Color32 back Color32 Returns Color32 MergeColor_Lerp(ColorF, ColorF) public static ColorF MergeColor_Lerp(ColorF top, ColorF back) Parameters top ColorF back ColorF Returns ColorF MergeColor_Overlay(Color32, Color32) public static Color32 MergeColor_Overlay(Color32 top, Color32 back) Parameters top Color32 back Color32 Returns Color32 MergeColor_Overlay(ColorF, ColorF) public static ColorF MergeColor_Overlay(ColorF top, ColorF back) Parameters top ColorF back ColorF Returns ColorF Min(int, int) public static int Min(int a, int b) Parameters a int b int Returns int Min(int, int, int) public static int Min(int a, int b, int c) Parameters a int b int c int Returns int Min(float, float) public static float Min(float a, float b) Parameters a float b float Returns float MoveFile(string, string) public static void MoveFile(string from, string to) Parameters from string to string MoveFolder(string, string) public static bool MoveFolder(string from, string to) Parameters from string to string Returns bool OverlapRectCircle(int, int, int, int, int, int, int) public static bool OverlapRectCircle(int radius, int circleX, int circleY, int minX, int minY, int maxX, int maxY) Parameters radius int circleX int circleY int minX int minY int maxX int maxY int Returns bool PathIsFolder(string) public static bool PathIsFolder(string path) Parameters path string Returns bool Path_to_ArgPath(string) public static string Path_to_ArgPath(string path) Parameters path string Returns string PingPong(float, float) public static float PingPong(float t, float length) Parameters t float length float Returns float PointInTriangle(Float2, Float2, Float2, Float2) public static bool PointInTriangle(Float2 p, Float2 a, Float2 b, Float2 c) Parameters p Float2 a Float2 b Float2 c Float2 Returns bool PointInTriangle(float, float, float, float, float, float, float, float) public static bool PointInTriangle(float px, float py, float p0x, float p0y, float p1x, float p1y, float p2x, float p2y) Parameters px float py float p0x float p0y float p1x float p1y float p2x float p2y float Returns bool PointLine_Distance(Float2, Float2, Float2, out Float2) public static float PointLine_Distance(Float2 pt, Float2 p1, Float2 p2, out Float2 closest) Parameters pt Float2 p1 Float2 p2 Float2 closest Float2 Returns float Pow(float, float) public static float Pow(float f, float p) Parameters f float p float Returns float QuickRandom() public static int QuickRandom() Returns int QuickRandom(int, int) \"min\" is Included, \"max\" is Excluded public static int QuickRandom(int min, int max) Parameters min int max int Returns int QuickRandomColor(int, int, int, int, int, int, int, int) public static Color32 QuickRandomColor(int minH = 0, int maxH = 360, int minS = 0, int maxS = 100, int minV = 0, int maxV = 100, int minA = 0, int maxA = 255) Parameters minH int maxH int minS int maxS int minV int maxV int minA int maxA int Returns Color32 QuickRandomSign() public static int QuickRandomSign() Returns int QuickRandomWithSeed(int) public static int QuickRandomWithSeed(int seed) Parameters seed int Returns int QuickRandomWithSeed(int, int, int) \"min\" is Included, \"max\" is Excluded public static int QuickRandomWithSeed(int seed, int min, int max) Parameters seed int min int max int Returns int QuickRandomWithSeed(long) public static int QuickRandomWithSeed(long seed) Parameters seed long Returns int QuickRandomWithSeed(long, int, int) \"min\" is Included, \"max\" is Excluded public static int QuickRandomWithSeed(long seed, int min, int max) Parameters seed long min int max int Returns int QuickSort<T>(Span<T>, int, int, IComparer<T>) public static void QuickSort<T>(Span<T> cells, int min, int max, IComparer<T> comparer) Parameters cells Span<T> min int max int comparer IComparer<T> Type Parameters T QuickSort<T>(T[], int, int, IComparer<T>) public static void QuickSort<T>(T[] cells, int min, int max, IComparer<T> comparer) Parameters cells T[] min int max int comparer IComparer<T> Type Parameters T RGBToHSV(Color32, out float, out float, out float) public static void RGBToHSV(Color32 rgbColor, out float h, out float s, out float v) Parameters rgbColor Color32 h float s float v float RGBToHSV(ColorF, out float, out float, out float) public static void RGBToHSV(ColorF rgbColor, out float h, out float s, out float v) Parameters rgbColor ColorF h float s float v float ReadBool(ref byte*) public static bool ReadBool(ref byte* p) Parameters p byte* Returns bool ReadBool(ref byte*, byte*) public static bool ReadBool(ref byte* p, byte* end) Parameters p byte* end byte* Returns bool ReadByte(ref byte*) public static byte ReadByte(ref byte* p) Parameters p byte* Returns byte ReadByte(ref byte*, byte*) public static byte ReadByte(ref byte* p, byte* end) Parameters p byte* end byte* Returns byte ReadBytes(ref byte*, int) public static byte[] ReadBytes(ref byte* p, int length) Parameters p byte* length int Returns byte[] ReadBytes(ref byte*, int, byte*) public static byte[] ReadBytes(ref byte* p, int length, byte* end) Parameters p byte* length int end byte* Returns byte[] ReadChar(ref byte*) public static char ReadChar(ref byte* p) Parameters p byte* Returns char ReadChar(ref byte*, byte*) public static char ReadChar(ref byte* p, byte* end) Parameters p byte* end byte* Returns char ReadDouble(ref byte*) public static double ReadDouble(ref byte* p) Parameters p byte* Returns double ReadDouble(ref byte*, byte*) public static double ReadDouble(ref byte* p, byte* end) Parameters p byte* end byte* Returns double ReadFloat(ref byte*) public static float ReadFloat(ref byte* p) Parameters p byte* Returns float ReadFloat(ref byte*, byte*) public static float ReadFloat(ref byte* p, byte* end) Parameters p byte* end byte* Returns float ReadInt(ref byte*) public static int ReadInt(ref byte* p) Parameters p byte* Returns int ReadInt(ref byte*, byte*) public static int ReadInt(ref byte* p, byte* end) Parameters p byte* end byte* Returns int ReadLong(ref byte*) public static long ReadLong(ref byte* p) Parameters p byte* Returns long ReadLong(ref byte*, byte*) public static long ReadLong(ref byte* p, byte* end) Parameters p byte* end byte* Returns long ReadSByte(ref byte*) public static sbyte ReadSByte(ref byte* p) Parameters p byte* Returns sbyte ReadSByte(ref byte*, byte*) public static sbyte ReadSByte(ref byte* p, byte* end) Parameters p byte* end byte* Returns sbyte ReadShort(ref byte*) public static short ReadShort(ref byte* p) Parameters p byte* Returns short ReadShort(ref byte*, byte*) public static short ReadShort(ref byte* p, byte* end) Parameters p byte* end byte* Returns short ReadUInt(ref byte*) public static uint ReadUInt(ref byte* p) Parameters p byte* Returns uint ReadUInt(ref byte*, byte*) public static uint ReadUInt(ref byte* p, byte* end) Parameters p byte* end byte* Returns uint ReadULong(ref byte*) public static ulong ReadULong(ref byte* p) Parameters p byte* Returns ulong ReadULong(ref byte*, byte*) public static ulong ReadULong(ref byte* p, byte* end) Parameters p byte* end byte* Returns ulong ReadUShort(ref byte*) public static ushort ReadUShort(ref byte* p) Parameters p byte* Returns ushort ReadUShort(ref byte*, byte*) public static ushort ReadUShort(ref byte* p, byte* end) Parameters p byte* end byte* Returns ushort ReadXML<T>(string) public static T ReadXML<T>(string path) where T : class Parameters path string Returns T Type Parameters T Remap(int, int, int, int, int) public static int Remap(int l, int r, int newL, int newR, int t) Parameters l int r int newL int newR int t int Returns int Remap(float, float, float, float, float) public static float Remap(float l, float r, float newL, float newR, float t) Parameters l float r float newL float newR float t float Returns float RemapUnclamped(int, int, int, int, int) public static int RemapUnclamped(int l, int r, int newL, int newR, int t) Parameters l int r int newL int newR int t int Returns int RemapUnclamped(float, float, float, float, float) public static float RemapUnclamped(float l, float r, float newL, float newR, float t) Parameters l float r float newL float newR float t float Returns float Repeat(float, float) public static float Repeat(float t, float length) Parameters t float length float Returns float RotateAround(int, int, int, int, int) public static Int2 RotateAround(int x, int y, int rotation, int originX, int originY) Parameters x int y int rotation int originX int originY int Returns Int2 RoundToInt(float) public static int RoundToInt(float value) Parameters value float Returns int SegmentIntersect(Float2, Float2, Float2, Float2) public static Float2? SegmentIntersect(Float2 a1, Float2 a2, Float2 b1, Float2 b2) Parameters a1 Float2 a2 Float2 b1 Float2 b2 Float2 Returns Float2? SegmentRectIntersect(Float2, Float2, FRect) public static (Float2? intersect0, Float2? intersect1) SegmentRectIntersect(Float2 a0, Float2 a1, FRect rect) Parameters a0 Float2 a1 Float2 rect FRect Returns (Float2? intersect0, Float2? intersect1) SetFieldValue(object, string, object) public static void SetFieldValue(object target, string name, object value) Parameters target object name string value object SetFileModifyDate(string, long) public static void SetFileModifyDate(string path, long fileTime) Parameters path string fileTime long SetFolderModifyDate(string, long) public static void SetFolderModifyDate(string path, long fileTime) Parameters path string fileTime long SetPropertyValue(object, string, object) public static void SetPropertyValue(object target, string name, object value) Parameters target object name string value object SetStaticFieldValue(Type, string, object) public static void SetStaticFieldValue(Type type, string name, object value) Parameters type Type name string value object SetStaticPropertyValue(Type, string, object) public static void SetStaticPropertyValue(Type type, string name, object value) Parameters type Type name string value object Sin(float) public static float Sin(float radAngle) Parameters radAngle float Returns float Sqrt(float) public static float Sqrt(float f) Parameters f float Returns float SquareDistance(Int2, Int2) public static int SquareDistance(Int2 a, Int2 b) Parameters a Int2 b Int2 Returns int SquareDistance(int, int, int, int) public static int SquareDistance(int aX, int aY, int bX, int bY) Parameters aX int aY int bX int bY int Returns int SquareDistanceF(float, float, float, float) public static float SquareDistanceF(float aX, float aY, float bX, float bY) Parameters aX float aY float bX float bY float Returns float TextToFile(string, string, bool) public static void TextToFile(string data, string path, bool append = false) Parameters data string path string append bool TextToFile(string, string, Encoding, bool) public static void TextToFile(string data, string path, Encoding encoding, bool append = false) Parameters data string path string encoding Encoding append bool TryCompute(string, out int) public static bool TryCompute(string expression, out int result) Parameters expression string result int Returns bool TryGetAttributeFromAllAssemblies<A>() public static bool TryGetAttributeFromAllAssemblies<A>() where A : Attribute Returns bool Type Parameters A TryGetAttributeFromAllAssemblies<A>(out A) public static bool TryGetAttributeFromAllAssemblies<A>(out A attribute) where A : Attribute Parameters attribute A Returns bool Type Parameters A TryGetIntFromString(string, int, out int, out int) public static bool TryGetIntFromString(string str, int startIndex, out int value, out int endIndex) Parameters str string startIndex int value int endIndex int Returns bool TryGetLanguageDisplayName(string, out string) public static bool TryGetLanguageDisplayName(string iso, out string displayName) Parameters iso string displayName string Returns bool TryGetRelativePath(string, string, out string) public static bool TryGetRelativePath(string relativeTo, string path, out string relativePath) Parameters relativeTo string path string relativePath string Returns bool UpdateFile(string, string, bool) public static void UpdateFile(string source, string target, bool skipWhenTargetNotExists = false) Parameters source string target string skipWhenTargetNotExists bool Vector2InverseLerp2(Float2, Float2, float, float) public static Float2 Vector2InverseLerp2(Float2 a, Float2 b, float x, float y) Parameters a Float2 b Float2 x float y float Returns Float2 Vector2Lerp2(Float2, Float2, float, float) public static Float2 Vector2Lerp2(Float2 a, Float2 b, float x, float y) Parameters a Float2 b Float2 x float y float Returns Float2 Vector3InverseLerp3(Float3, Float3, float, float, float) public static Float3 Vector3InverseLerp3(Float3 a, Float3 b, float x, float y, float z = 0) Parameters a Float3 b Float3 x float y float z float Returns Float3 Vector3Lerp3(Float3, Float3, float, float, float) public static Float3 Vector3Lerp3(Float3 a, Float3 b, float x, float y, float z = 0) Parameters a Float3 b Float3 x float y float z float Returns Float3 Write(ref byte*, bool) public static void Write(ref byte* p, bool value) Parameters p byte* value bool Write(ref byte*, bool, byte*) public static void Write(ref byte* p, bool value, byte* end) Parameters p byte* value bool end byte* Write(ref byte*, byte) public static void Write(ref byte* p, byte value) Parameters p byte* value byte Write(ref byte*, byte, byte*) public static void Write(ref byte* p, byte value, byte* end) Parameters p byte* value byte end byte* Write(ref byte*, byte[], int) public static void Write(ref byte* p, byte[] bytes, int length) Parameters p byte* bytes byte[] length int Write(ref byte*, byte[], int, byte*) public static void Write(ref byte* p, byte[] bytes, int length, byte* end) Parameters p byte* bytes byte[] length int end byte* Write(ref byte*, char) public static void Write(ref byte* p, char value) Parameters p byte* value char Write(ref byte*, char, byte*) public static void Write(ref byte* p, char value, byte* end) Parameters p byte* value char end byte* Write(ref byte*, double) public static void Write(ref byte* p, double value) Parameters p byte* value double Write(ref byte*, double, byte*) public static void Write(ref byte* p, double value, byte* end) Parameters p byte* value double end byte* Write(ref byte*, short) public static void Write(ref byte* p, short value) Parameters p byte* value short Write(ref byte*, short, byte*) public static void Write(ref byte* p, short value, byte* end) Parameters p byte* value short end byte* Write(ref byte*, int) public static void Write(ref byte* p, int value) Parameters p byte* value int Write(ref byte*, int, byte*) public static void Write(ref byte* p, int value, byte* end) Parameters p byte* value int end byte* Write(ref byte*, long) public static void Write(ref byte* p, long value) Parameters p byte* value long Write(ref byte*, long, byte*) public static void Write(ref byte* p, long value, byte* end) Parameters p byte* value long end byte* Write(ref byte*, sbyte) public static void Write(ref byte* p, sbyte value) Parameters p byte* value sbyte Write(ref byte*, sbyte, byte*) public static void Write(ref byte* p, sbyte value, byte* end) Parameters p byte* value sbyte end byte* Write(ref byte*, float) public static void Write(ref byte* p, float value) Parameters p byte* value float Write(ref byte*, float, byte*) public static void Write(ref byte* p, float value, byte* end) Parameters p byte* value float end byte* Write(ref byte*, ushort) public static void Write(ref byte* p, ushort value) Parameters p byte* value ushort Write(ref byte*, ushort, byte*) public static void Write(ref byte* p, ushort value, byte* end) Parameters p byte* value ushort end byte* Write(ref byte*, uint) public static void Write(ref byte* p, uint value) Parameters p byte* value uint Write(ref byte*, uint, byte*) public static void Write(ref byte* p, uint value, byte* end) Parameters p byte* value uint end byte* Write(ref byte*, ulong) public static void Write(ref byte* p, ulong value) Parameters p byte* value ulong Write(ref byte*, ulong, byte*) public static void Write(ref byte* p, ulong value, byte* end) Parameters p byte* value ulong end byte* WritePixelsToConsole(Color32[], int) public static void WritePixelsToConsole(Color32[] pixels, int width) Parameters pixels Color32[] width int WriteXML<T>(T, string) public static void WriteXML<T>(T data, string path) where T : class Parameters data T path string Type Parameters T"
  },
  "api/AngeliA.Weapon-1.html": {
    "href": "api/AngeliA.Weapon-1.html",
    "title": "Class Weapon<B> | AngeliA",
    "summary": "Class Weapon<B> Namespace AngeliA Assembly AngeliA Framework.dll public abstract class Weapon<B> : Weapon, IMapItem where B : Bullet Type Parameters B Inheritance object Item Equipment HandTool Weapon Weapon<B> Implements IMapItem Derived HealWeapon<B> MeleeWeapon MissileWeapon<B> ProjectileWeapon<B> Inherited Members Weapon.BulletID Weapon.ValidDirection Weapon.OnPoseAnimationUpdate_FromEquipment(PoseCharacterRenderer) Weapon.SpawnBullet(Character) HandTool.SpriteID HandTool.EquipmentType HandTool.PerformDelayFrame HandTool.PerformDelayRate HandTool.TypeName HandTool.Duration HandTool.Cooldown HandTool.HoldPunish HandTool.ChargeDuration HandTool.DefaultMovementSpeedRateOnUse HandTool.WalkingMovementSpeedRateOnUse HandTool.RunningMovementSpeedRateOnUse HandTool.UseStackAsUsage HandTool.RepeatWhenHolding HandTool.CancelUseWhenRelease HandTool.LockFacingOnUse HandTool.IgnoreGrabTwist HandTool.AvailableInAir HandTool.AvailableInWater HandTool.AvailableWhenWalking HandTool.AvailableWhenRunning HandTool.AvailableWhenClimbing HandTool.AvailableWhenFlying HandTool.AvailableWhenRolling HandTool.AvailableWhenSquatting HandTool.AvailableWhenDashing HandTool.AvailableWhenSliding HandTool.AvailableWhenGrabbing HandTool.AvailableWhenRushing HandTool.AvailableWhenPounding HandTool.LoadFromSheet() HandTool.OnToolSpriteRendered(PoseCharacterRenderer, int, int, int, int, int, int, AngeSprite, int) HandTool.AllowingUse(Character) HandTool.OnToolPerform(Character) HandTool.GetHandheldPoseAnimationID(Character) HandTool.GetPerformPoseAnimationID(Character) Equipment.MaxStackCount Item.AllowDuplicateUpdate Item.EmbedIntoLevel Item.TypeID Item.BeforeItemUpdate_FromInventory(Character, int, int) Item.OnItemUpdate_FromInventory(Character, int, int) Item.OnPoseAnimationUpdate_FromInventory(PoseCharacterRenderer, int, int) Item.OnTakeDamage_FromInventory(Character, int, int, ref Damage) Item.OnCharacterAttack_FromInventory(Character, Bullet, int, int) Item.BeforeItemUpdate_FromEquipment(Character) Item.OnItemUpdate_FromEquipment(Character) Item.BeforePoseAnimationUpdate_FromEquipment(PoseCharacterRenderer) Item.OnTakeDamage_FromEquipment(Character, ref Damage) Item.OnCharacterAttack_FromEquipment(Character, Bullet) Item.TryRepairEquipment(Character) Item.OnItemUpdate_FromItemHolder(ItemHolder, int) Item.OnCollect(Character) Item.CanUse(Character) Item.Use(Character, int, int, out bool) Item.ItemConditionCheck(Character) Item.DrawItem(Entity, IRect, Color32, int) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Constructors Weapon() public Weapon()"
  },
  "api/AngeliA.Weapon.html": {
    "href": "api/AngeliA.Weapon.html",
    "title": "Class Weapon | AngeliA",
    "summary": "Class Weapon Namespace AngeliA Assembly AngeliA Framework.dll public abstract class Weapon : HandTool, IMapItem Inheritance object Item Equipment HandTool Weapon Implements IMapItem Derived Weapon<B> Inherited Members HandTool.SpriteID HandTool.EquipmentType HandTool.PerformDelayFrame HandTool.PerformDelayRate HandTool.TypeName HandTool.Duration HandTool.Cooldown HandTool.HoldPunish HandTool.ChargeDuration HandTool.DefaultMovementSpeedRateOnUse HandTool.WalkingMovementSpeedRateOnUse HandTool.RunningMovementSpeedRateOnUse HandTool.UseStackAsUsage HandTool.RepeatWhenHolding HandTool.CancelUseWhenRelease HandTool.LockFacingOnUse HandTool.IgnoreGrabTwist HandTool.AvailableInAir HandTool.AvailableInWater HandTool.AvailableWhenWalking HandTool.AvailableWhenRunning HandTool.AvailableWhenClimbing HandTool.AvailableWhenFlying HandTool.AvailableWhenRolling HandTool.AvailableWhenSquatting HandTool.AvailableWhenDashing HandTool.AvailableWhenSliding HandTool.AvailableWhenGrabbing HandTool.AvailableWhenRushing HandTool.AvailableWhenPounding HandTool.LoadFromSheet() HandTool.OnToolSpriteRendered(PoseCharacterRenderer, int, int, int, int, int, int, AngeSprite, int) HandTool.AllowingUse(Character) HandTool.OnToolPerform(Character) HandTool.GetHandheldPoseAnimationID(Character) HandTool.GetPerformPoseAnimationID(Character) Equipment.MaxStackCount Item.AllowDuplicateUpdate Item.EmbedIntoLevel Item.TypeID Item.BeforeItemUpdate_FromInventory(Character, int, int) Item.OnItemUpdate_FromInventory(Character, int, int) Item.OnPoseAnimationUpdate_FromInventory(PoseCharacterRenderer, int, int) Item.OnTakeDamage_FromInventory(Character, int, int, ref Damage) Item.OnCharacterAttack_FromInventory(Character, Bullet, int, int) Item.BeforeItemUpdate_FromEquipment(Character) Item.OnItemUpdate_FromEquipment(Character) Item.BeforePoseAnimationUpdate_FromEquipment(PoseCharacterRenderer) Item.OnTakeDamage_FromEquipment(Character, ref Damage) Item.OnCharacterAttack_FromEquipment(Character, Bullet) Item.TryRepairEquipment(Character) Item.OnItemUpdate_FromItemHolder(ItemHolder, int) Item.OnCollect(Character) Item.CanUse(Character) Item.Use(Character, int, int, out bool) Item.ItemConditionCheck(Character) Item.DrawItem(Entity, IRect, Color32, int) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Properties BulletID public int BulletID { get; protected set; } Property Value int ValidDirection protected virtual WeaponValidDirection ValidDirection { get; } Property Value WeaponValidDirection Methods OnPoseAnimationUpdate_FromEquipment(PoseCharacterRenderer) public override void OnPoseAnimationUpdate_FromEquipment(PoseCharacterRenderer rendering) Parameters rendering PoseCharacterRenderer SpawnBullet(Character) public virtual Bullet SpawnBullet(Character sender) Parameters sender Character Returns Bullet"
  },
  "api/AngeliA.WeaponValidDirection.html": {
    "href": "api/AngeliA.WeaponValidDirection.html",
    "title": "Enum WeaponValidDirection | AngeliA",
    "summary": "Enum WeaponValidDirection Namespace AngeliA Assembly AngeliA Framework.dll public enum WeaponValidDirection Extension Methods Extension.Next<E>(E) Extension.Prev<E>(E) Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Fields Eight = 8 Five = 5 Four = 4 Three = 3 Two = 2"
  },
  "api/AngeliA.WindowUI.html": {
    "href": "api/AngeliA.WindowUI.html",
    "title": "Class WindowUI | AngeliA",
    "summary": "Class WindowUI Namespace AngeliA Assembly AngeliA Framework.dll [Entity.Capacity(1, 0)] public abstract class WindowUI : EntityUI, IMapItem, IWindowEntityUI Inheritance object Entity EntityUI WindowUI Implements IMapItem IWindowEntityUI Derived MapEditor Inherited Members EntityUI.BlockEvent EntityUI.FirstUpdate() EntityUI.Update() EntityUI.LateUpdate() EntityUI.Unify(int) Entity.Active Entity.X Entity.Y Entity.Width Entity.Height Entity.TypeID Entity.SpawnFrame Entity.FromWorld Entity.Rect Entity.InstanceOrder Entity.MapUnitPos Entity.InstanceID Entity.IgnoreReposition Entity.XY Entity.Size Entity.Center Entity.CenterX Entity.CenterY Entity.PivotUnitPosition Entity.OnActivated() Entity.OnInactivated() Entity.BeforeUpdate() Entity.AfterReposition(Int3, Int3) Entity.IgnoreDespawnFromMap(int) Entity.CancelIgnoreDespawnFromMap() Entity.Draw() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Properties BackgroundRect public virtual IRect BackgroundRect { get; } Property Value IRect DefaultWindowName public virtual string DefaultWindowName { get; } Property Value string IsDirty public bool IsDirty { get; } Property Value bool NotificationContent public string NotificationContent { get; set; } Property Value string NotificationSubContent public string NotificationSubContent { get; set; } Property Value string RequiringTooltipContent public string RequiringTooltipContent { get; set; } Property Value string RequiringTooltipRect public IRect RequiringTooltipRect { get; } Property Value IRect Skin protected GUISkin Skin { get; } Property Value GUISkin WindowRect public static IRect WindowRect { get; } Property Value IRect Methods CleanDirty() public virtual void CleanDirty() CloseWindow(int) public static void CloseWindow(int typeID) Parameters typeID int ForceWindowRect(IRect) public static void ForceWindowRect(IRect newRect) Parameters newRect IRect OnGameQuitting() [OnGameQuitting(0)] public static void OnGameQuitting() OpenWindow(int) public static void OpenWindow(int typeID) Parameters typeID int RequireNotification(string, string) protected void RequireNotification(string content, string subContent = null) Parameters content string subContent string RequireTooltip(IRect, string) protected void RequireTooltip(IRect rect, string content) Parameters rect IRect content string Save(bool) public virtual void Save(bool forceSave = false) Parameters forceSave bool SetDirty() public virtual void SetDirty() UpdateUI() public override sealed void UpdateUI() UpdateWindowUI() public abstract void UpdateWindowUI()"
  },
  "api/AngeliA.Wing.html": {
    "href": "api/AngeliA.Wing.html",
    "title": "Class Wing | AngeliA",
    "summary": "Class Wing Namespace AngeliA Assembly AngeliA Framework.dll public abstract class Wing : BodyGadget Inheritance object BodyGadget Wing Derived DefaultPropellerWing DefaultWing ModularWing Inherited Members BodyGadget.BodyGadgetSystemReady BodyGadget.SheetIndex BodyGadget.GadgetID BodyGadget.GadgetName BodyGadget.ForAllGadget() BodyGadget.GetDefaultGadgetID(int, BodyGadgetType) BodyGadget.TryGetGadget(int, out BodyGadget) BodyGadget.GetDisplayName(string, out int) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Properties GadgetType public override sealed BodyGadgetType GadgetType { get; } Property Value BodyGadgetType IsPropeller public bool IsPropeller { get; } Property Value bool Scale protected virtual int Scale { get; } Property Value int SpriteLoaded public override bool SpriteLoaded { get; } Property Value bool SpriteWing public OrientedSprite SpriteWing { get; } Property Value OrientedSprite Methods DrawGadget(PoseCharacterRenderer) public override void DrawGadget(PoseCharacterRenderer renderer) Parameters renderer PoseCharacterRenderer DrawGadgetFromPool(PoseCharacterRenderer) public static void DrawGadgetFromPool(PoseCharacterRenderer renderer) Parameters renderer PoseCharacterRenderer DrawGadgetGizmos(IRect, Color32, int) public override void DrawGadgetGizmos(IRect rect, Color32 tint, int z) Parameters rect IRect tint Color32 z int DrawSpriteAsWing(PoseCharacterRenderer, OrientedSprite, bool, int) public static void DrawSpriteAsWing(PoseCharacterRenderer renderer, OrientedSprite oSprite, bool isPropeller, int scale = 1000) Parameters renderer PoseCharacterRenderer oSprite OrientedSprite isPropeller bool scale int FillFromSheet(string) public override bool FillFromSheet(string name) Parameters name string Returns bool IsPropellerWing(int) public static bool IsPropellerWing(int wingID) Parameters wingID int Returns bool"
  },
  "api/AngeliA.World.html": {
    "href": "api/AngeliA.World.html",
    "title": "Class World | AngeliA",
    "summary": "Class World Namespace AngeliA Assembly AngeliA Framework.dll public class World Inheritance object World Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Constructors World() public World() World(Int3) public World(Int3 pos) Parameters pos Int3 Fields CacheMapPixels public static readonly Color32[] CacheMapPixels Field Value Color32[] TextureMapLinkedPool public static readonly Dictionary<uint, Int3> TextureMapLinkedPool Field Value Dictionary<uint, Int3> Properties Backgrounds public int[] Backgrounds { get; set; } Property Value int[] Elements public int[] Elements { get; set; } Property Value int[] Entities public int[] Entities { get; set; } Property Value int[] Levels public int[] Levels { get; set; } Property Value int[] WorldPosition public Int3 WorldPosition { get; set; } Property Value Int3 Methods Clear(Int3?) public void Clear(Int3? pos = null) Parameters pos Int3? ContainsBlock(int, BlockType) public bool ContainsBlock(int blockID, BlockType type) Parameters blockID int type BlockType Returns bool CopyFrom(World) public void CopyFrom(World source) Parameters source World EmptyCheck() public bool EmptyCheck() Returns bool FillMapIntoTexture(object) public void FillMapIntoTexture(object texture) Parameters texture object LoadFromDisk(string, int, int, int) public bool LoadFromDisk(string filePath, int worldX, int worldY, int worldZ) Parameters filePath string worldX int worldY int worldZ int Returns bool LoadMapIntoTexture(string, object) public static bool LoadMapIntoTexture(string filePath, object texture) Parameters filePath string texture object Returns bool SaveToDisk(string) public void SaveToDisk(string filePath) Parameters filePath string"
  },
  "api/AngeliA.WorldPathPool.html": {
    "href": "api/AngeliA.WorldPathPool.html",
    "title": "Class WorldPathPool | AngeliA",
    "summary": "Class WorldPathPool Namespace AngeliA Assembly AngeliA Framework.dll public class WorldPathPool : Dictionary<Int3, string>, IDictionary<Int3, string>, ICollection<KeyValuePair<Int3, string>>, IReadOnlyDictionary<Int3, string>, IReadOnlyCollection<KeyValuePair<Int3, string>>, IEnumerable<KeyValuePair<Int3, string>>, IDictionary, ICollection, IEnumerable, IDeserializationCallback, ISerializable Inheritance object Dictionary<Int3, string> WorldPathPool Implements IDictionary<Int3, string> ICollection<KeyValuePair<Int3, string>> IReadOnlyDictionary<Int3, string> IReadOnlyCollection<KeyValuePair<Int3, string>> IEnumerable<KeyValuePair<Int3, string>> IDictionary ICollection IEnumerable IDeserializationCallback ISerializable Inherited Members Dictionary<Int3, string>.Add(Int3, string) Dictionary<Int3, string>.Clear() Dictionary<Int3, string>.ContainsKey(Int3) Dictionary<Int3, string>.ContainsValue(string) Dictionary<Int3, string>.EnsureCapacity(int) Dictionary<Int3, string>.GetEnumerator() Dictionary<Int3, string>.OnDeserialization(object) Dictionary<Int3, string>.Remove(Int3) Dictionary<Int3, string>.Remove(Int3, out string) Dictionary<Int3, string>.TrimExcess() Dictionary<Int3, string>.TrimExcess(int) Dictionary<Int3, string>.TryAdd(Int3, string) Dictionary<Int3, string>.TryGetValue(Int3, out string) Dictionary<Int3, string>.Comparer Dictionary<Int3, string>.Count Dictionary<Int3, string>.this[Int3] Dictionary<Int3, string>.Keys Dictionary<Int3, string>.Values object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.JoinArray<T>(IEnumerable<T>, Func<T, string>, char) Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Methods GetOrAddPath(Int3) public string GetOrAddPath(Int3 worldPos) Parameters worldPos Int3 Returns string GetWorldNameFromPosition(Int3) public static string GetWorldNameFromPosition(Int3 pos) Parameters pos Int3 Returns string GetWorldNameFromPosition(int, int, int) public static string GetWorldNameFromPosition(int x, int y, int z) Parameters x int y int z int Returns string SetMapRoot(string) public void SetMapRoot(string newRoot) Parameters newRoot string TryGetPath(Int3, out string) public bool TryGetPath(Int3 worldPos, out string path) Parameters worldPos Int3 path string Returns bool TryGetWorldPositionFromName(string, out Int3) public static bool TryGetWorldPositionFromName(string name, out Int3 pos) Parameters name string pos Int3 Returns bool"
  },
  "api/AngeliA.WorldSquad.html": {
    "href": "api/AngeliA.WorldSquad.html",
    "title": "Class WorldSquad | AngeliA",
    "summary": "Class WorldSquad Namespace AngeliA Assembly AngeliA Framework.dll public sealed class WorldSquad : IBlockSquad Inheritance object WorldSquad Implements IBlockSquad Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Properties Behind public static WorldSquad Behind { get; set; } Property Value WorldSquad Enable public static bool Enable { get; set; } Property Value bool Front public static WorldSquad Front { get; set; } Property Value WorldSquad SquadReady public static bool SquadReady { get; } Property Value bool Methods AddBlockRedirect(int, int) public static void AddBlockRedirect(int fromID, int toID) Parameters fromID int toID int ClearStreamWorldPool() public static void ClearStreamWorldPool() GetAllBlocksAt(int, int, int) public (int level, int bg, int entity, int element) GetAllBlocksAt(int unitX, int unitY, int z) Parameters unitX int unitY int z int Returns (int level, int bg, int entity, int element) GetBlockAt(int, int, BlockType) public int GetBlockAt(int unitX, int unitY, BlockType type) Parameters unitX int unitY int type BlockType Returns int GetBlockAt(int, int, int, BlockType) public int GetBlockAt(int unitX, int unitY, int z, BlockType type) Parameters unitX int unitY int z int type BlockType Returns int OnGameRestart() [OnGameRestart(0)] public static void OnGameRestart() OnGameUpdate() [OnGameUpdate(-64)] public static void OnGameUpdate() RemoveBlockRedirect(int) public static bool RemoveBlockRedirect(int fromID) Parameters fromID int Returns bool ResetStreamFailbackCopying() public static void ResetStreamFailbackCopying() SetBlockAt(int, int, int, BlockType, int) public void SetBlockAt(int unitX, int unitY, int z, BlockType type, int newID) Parameters unitX int unitY int z int type BlockType newID int WorldExists(Int3) public bool WorldExists(Int3 worldPos) Parameters worldPos Int3 Returns bool"
  },
  "api/AngeliA.WorldStream.html": {
    "href": "api/AngeliA.WorldStream.html",
    "title": "Class WorldStream | AngeliA",
    "summary": "Class WorldStream Namespace AngeliA Assembly AngeliA Framework.dll public sealed class WorldStream : IBlockSquad Inheritance object WorldStream Implements IBlockSquad Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Constructors WorldStream(string) public WorldStream(string mapFolder) Parameters mapFolder string Properties IsDirty public bool IsDirty { get; } Property Value bool MapRoot public string MapRoot { get; init; } Property Value string UseBuiltInAsFailback public bool UseBuiltInAsFailback { get; set; } Property Value bool Methods ClearWorldPool() public void ClearWorldPool() DiscardAllChanges(bool) public void DiscardAllChanges(bool forceDiscard = false) Parameters forceDiscard bool GetAllBlocksAt(int, int, int) public (int level, int bg, int entity, int element) GetAllBlocksAt(int unitX, int unitY, int z) Parameters unitX int unitY int z int Returns (int level, int bg, int entity, int element) GetBlockAt(int, int, int, BlockType) public int GetBlockAt(int unitX, int unitY, int z, BlockType type) Parameters unitX int unitY int z int type BlockType Returns int GetOrCreateStreamFromPool(string) public static WorldStream GetOrCreateStreamFromPool(string mapFolder) Parameters mapFolder string Returns WorldStream GetOrCreateWorld(int, int, int) public World GetOrCreateWorld(int worldX, int worldY, int worldZ) Parameters worldX int worldY int worldZ int Returns World GetWorldVersion(Int3) public uint? GetWorldVersion(Int3 worldPos) Parameters worldPos Int3 Returns uint? ResetFailbackCopying() public void ResetFailbackCopying() SaveAllDirty() public void SaveAllDirty() SetBlockAt(int, int, int, BlockType, int) public void SetBlockAt(int unitX, int unitY, int z, BlockType type, int value) Parameters unitX int unitY int z int type BlockType value int TryGetWorld(Int3, out World) public bool TryGetWorld(Int3 worldPos, out World world) Parameters worldPos Int3 world World Returns bool TryGetWorld(int, int, int, out World) public bool TryGetWorld(int worldX, int worldY, int worldZ, out World world) Parameters worldX int worldY int worldZ int world World Returns bool WorldExists(Int3) public bool WorldExists(Int3 worldPos) Parameters worldPos Int3 Returns bool Events OnWorldCreated public static event Action<WorldStream, World> OnWorldCreated Event Type Action<WorldStream, World> OnWorldLoaded public static event Action<WorldStream, World> OnWorldLoaded Event Type Action<WorldStream, World> OnWorldSaved public static event Action<WorldStream, World> OnWorldSaved Event Type Action<WorldStream, World>"
  },
  "api/AngeliA.WrapMode.html": {
    "href": "api/AngeliA.WrapMode.html",
    "title": "Enum WrapMode | AngeliA",
    "summary": "Enum WrapMode Namespace AngeliA Assembly AngeliA Framework.dll How text wrap when reach edge public enum WrapMode : byte Extension Methods Extension.Next<E>(E) Extension.Prev<E>(E) Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Fields NoWrap = 0 WordWrap = 2 Wrap = 1"
  },
  "api/AngeliA.html": {
    "href": "api/AngeliA.html",
    "title": "Namespace AngeliA | AngeliA",
    "summary": "Namespace AngeliA Classes AfterLateUpdateAttribute The function will be called after all entity.LateUpdate is called AfterLayerFrameUpdate_IntLayerAttribute The function will be called after rendering layer update AfterLevelRenderedAttribute The function will be called after world squad render all level blocks for the current frame AngePath Utility class for path related logic for an AngeliA project AngeSprite AntiBuffItem<B> Atlas AudioCode AudioData AutoValidList<T> A list that auto remove element inside based on the given function BasicGlobalItemCombinationAttribute BasicItemCombinationAttribute Define a item combination to craft the item. BeforeBeforeUpdateAttribute The function will be called before any entity.BeforeUpdate is called BeforeFirstUpdateAttribute The function will be called before any entity.FirstUpdate is called BeforeLateUpdateAttribute The function will be called before any entity.LateUpdate is called BeforeLayerFrameUpdate_IntLayerAttribute The function will be called before rendering layer update BeforeLevelRenderedAttribute The function will be called before world squad rendering any level blocks for the current frame BeforeSavingSlotChanged The function will be called before user change the saving slot. Universe.BuiltIn.CurrentSavingSlot is still the old value when this function is called. BeforeUpdateUpdateAttribute The function will be called before any entity.Update is called BlockBuilder BlockColor BlockColorBlack BlockColorBlue BlockColorCyan BlockColorGreen BlockColorGrey BlockColorOrange BlockColorPink BlockColorPurple BlockColorRed BlockColorYellow BlockColoringSystem BodyCloth BodyGadget BodyGadgetItem BodyPart BodySetAttribute Treat specified sprites as bodyset for pose-characters BodySetItem Buff Represent a type of buff BuffItem BuffItem<B> BuiltInSprite Utility class to get built-in sprites BuiltInText Utility class to get built-in text though language system Bullet Cell Rendering cell CellScreenshotSystem CellScreenshotSystem.Screenshot ChangeSavingSlotTask CharSprite Character CharacterAttackness Behavour class that handle attack logic for character CharacterAttribute Attribute for character class CharacterAttribute.DefaultSelectedPlayerAttribute Make the character as default selected player CharacterBuff Behavour class that handles buff logic for characters CharacterHealth Behavour class that handle health logic for character CharacterMovement Behavour class that handle movement logic for character CharacterPose CharacterRenderer Behaviour class handles rendering of character CharacterRenderingConfig CheatCodeAttribute The function will be called when user perform the given cheat code. Cheat code can be perform like those in NES games. CheatSystem CircuitOperate_Int3UnitPos_IntStamp_Direction5From The function will be called when CircuitSystem triggers the entity that holds this function CircuitSystem Cloth ClothItem ColorGradient Const Utility class for constant values ControlHintUI Cursor Debug Log debug messages to the console or screen DefaultDialogueUI DefaultGamepadGamekeyAttribute Default gamepad binding for the given gamekey DefaultKeyboardGamekeyAttribute Default keyboard binding for the given gamekey DefaultPropellerWing DefaultWing DelayTask DespawnEntityTask DialogueTask DialogueUI Ear Ease EchoDictionary<TKey, TValue> EnablePlayerSystemAttribute The current application use player system or not Entity EntityAttribute Attribute for entities EntityAttribute.CapacityAttribute Spawn limit count of this entity EntityAttribute.DontDespawnOutOfRangeAttribute Do not despawn this entity when it's out of view rect EntityAttribute.DontDestroyOnZChangedAttribute This entity do not despawn when player enter another map layer EntityAttribute.DontDrawBehindAttribute This entity will not display on the behind layer EntityAttribute.DontSpawnFromWorld Do not spawn this entity when it's painted into the map EntityAttribute.ExcludeInMapEditorAttribute Do not show this entity inside the palette panel of map editor. EntityAttribute.LayerAttribute Which layer should this entity spawn inside. EntityAttribute.MapEditorGroupAttribute Which map editor palette group should this entity in EntityAttribute.RepositionWhenInactiveAttribute When the entity despawn, reset the position in map. So next time it will be load from the position where it last appeared EntityAttribute.SpawnWithCheatCodeAttribute Player can use \"Spawn---\" to spawn this entity to stage. EntityAttribute.StageOrderAttribute The order in which this entity gets updated in it's layer EntityAttribute.UpdateOutOfRangeAttribute This entity will update when it's outside view rect EntityHookTask EntityLayer Layer for entity spawning EntityLayerCapacityAttribute Max entity count for the layer EntityUI Equipment EventAttribute Attribute for link all static methods with a System.Action. When the action is invoked, all methods get called. Extension Face FadeInTask FadeOutTask FastNoiseGroup FileBrowserUI FontData Food FootCloth FrameBasedBool FrameBasedColor FrameBasedInt FrameBasedValue FrameBasedValue<T> FrameworkUtil GUI GUISkin GUIStyle Game GenericDialogUI GenericDialogUI.Option GenericPopupUI GlobalGravityAttribute The gravity value applys on all rigidbody GlobalItemCombinationAttribute Define a item combination to craft the item. GlobalItemCombinationAttribute<I0> Define a item combination to craft the item. GlobalItemCombinationAttribute<I0, I1> Define a item combination to craft the item. GlobalItemCombinationAttribute<I0, I1, I2> Define a item combination to craft the item. GlobalItemCombinationAttribute<I0, I1, I2, I3> Define a item combination to craft the item. GroupAnimationHolder Hair HandCloth HandTool HandheldPoseAnimation HeadCloth HipCloth Horn IgnoreArtworkPixelsAttribute Current application do not load pixel data from sheet Input IntToChars Inventory InventoryPartnerUI Item ItemCombinationAttribute Define a item combination to craft the item. ItemCombinationAttribute<I0> Define a item combination to craft the item. ItemCombinationAttribute<I0, I1> Define a item combination to craft the item. ItemCombinationAttribute<I0, I1, I2> Define a item combination to craft the item. ItemCombinationAttribute<I0, I1, I2, I3> Define a item combination to craft the item. ItemCombinationParam ItemDropAttribute Register item drop for the entity, use ItemSystem.DropItemFor(Entity) to perform the item drop. ItemDropAttribute<I> Register item drop for the entity, use ItemSystem.DropItemFor(Entity) to perform the item drop. ItemHolder ItemSystem ItemSystem.ItemData Jewelry JsonUtil Language LanguageCode LanguageUtil LightingSystem MapEditor MapEditorBlinkParticle MapEditorToolbarButton MenuUI MethodTask ModularBodySuit ModularEar ModularFace ModularFootSuit ModularHair ModularHandSuit ModularHeadSuit ModularHipSuit ModularHorn ModularTail ModularWing MovementEditor MusicData NoItemCombinationAttribute Indicates to the system that this item does not require crafting combination NonStackableItem NotificationUI NumberEight NumberFive NumberFour NumberNine NumberOne NumberSeven NumberSix NumberThree NumberTwo NumberZero OnBlockPicked_IntSpriteID_IRectAttribute The function will be called when a map block has been picked OnBulletHitEnvironment_Bullet The function will be called when a bullet hit environment (something not an IDamageReceiver) OnCameOutOfWater_Rigidbody_EntityAttribute The function will be called when a rigidbody came out of water OnCharacterCrash_Entity The function will be called when a character crash OnCharacterFly_Entity The function will be called when a character fly OnCharacterFootStepped_Entity The function will be called when a character makes a foot step on running OnCharacterJump_Entity The function will be called when a character jumps OnCharacterPassOut_Entity The function will be called when a character pass out OnCharacterPound_Entity The function will be called when a character ground pound OnCharacterSleeping_Entity The function will be called when a character is sleeping OnCharacterSlideStepped_Entity The function will be called when a character makes a step when sliding OnCharacterTeleport_Entity The function will be called when a character teleport OnCheatPerformed_StringCodeAttribute The function will be called when user performed any cheat code. Cheat code can be perform like those in NES games. OnCircuitWireActived_Int3UnitPosAttribute The function will be called when CircuitSystem's electric current pass through OnDealDamage_Damage_IDamageReceiver The function will be called when something deal damage to a damage-receiver OnFallIntoWater_Rigidbody_EntityAttribute The function will be called when a rigidbody fall into water OnFileDropped_StringPathAttribute The function will be called when user drag and drop a file into the application window OnGameFocusedAttribute The function will be called when the application window regain focus. OnGameInitializeAttribute The function will be called when game initialize. OnGameInitializeLaterAttribute The function will be called when game initialize but after all [OnGameInitialize] functions already called OnGameLostFocusAttribute The function will be called when the application window lost focus. OnGameQuittingAttribute The function will be called before the application actually quit. OnGameRestartAttribute The function will be called when game restart. OnGameTryingToQuitAttribute The function will be called when player try to quit the game. Return false will stop the application from quiting. OnGameUpdateAttribute The function will be called every time game update (60 times per second) OnGameUpdateLaterAttribute The function will be called every time game update (60 times per second), but after all [OnGameUpdate] functions already called. OnGameUpdatePauselessAttribute The function will be called every time game update (60 times per second), even when the game is paused. OnItemCollected_Entity_Int2Pos_IntItemID_IntItemCountAttribute The function will be called when a character collect an item OnItemDamage_Character_IntItemBefore_IntItemAfterAttribute The function will be called when an item is damaged into another item OnItemError_Entity_Int2Pos_IntIconID The function will be called when something wrong about an item (like when guns out of ammo) OnItemLost_Character_IntItemIDAttribute The function will be called when a character lost an item OnItemUnlocked_IntItemIDAttribute The function will be called when an item is unlocked by player OnLanguageChangedAttribute The function will be called when user change game display language. Language.CurrentLanguage is already set to new value when this function is called. OnMainSheetReloadAttribute The function will be called when artwork sheet for rendering loaded from file OnMapEditorModeChange_ModeAttribute The function will be called when user change map editor editing mode OnObjectBreak_IntSpriteID_IRectAttribute The function will be called when an object break OnObjectFreeFall_IntSpriteID_Int2Pos_IntRot_BoolFlip_Int2Velocity_IntRotSpeed_IntGravityAttribute The function will be called when an object start to free fall OnRemoteSettingChanged_IntID_IntDataAttribute The function will be called when engine send remote message to rigged game OnSavingSlotChanged The function will be called after user change the saving slot. Universe.BuiltIn.CurrentSavingSlot is the new value when this function is called. OnTransferArrivedAttribute_IntEntityID_Int3UnitPos_ObjectData The function will be called when message from TransferSystem.StartTransfer() arrived OnTransferPassAttribute_Int3UnitPos_ObjectData The function will be called when message from TransferSystem.StartTransfer() pass through OnViewZChangedAttribute The function will be called when player change the map layer OnWindowSizeChangedAttribute The function will be called when user change the size of the application window OnWorldCreatedBySquad_WorldAttribute The function will be called when a world instance is created by world squad OnWorldLoadedBySquad_WorldAttribute The function will be called when a world instance is loaded by world squad OnWorldSavedByMapEditor_WorldAttribute The function will be called when a world instance is saved to file by the world squad OrderedAttribute Attribute apply to method and call all of them in given order Particle PauseMenuUI Physics PhysicsLayer PhysicsMask Pipe<T> PlayerMenuItem<UI> PlayerMenuPartnerUI PlayerMenuUI PlayerQuickMenuUI PlayerSystem PoseAnimation PoseAnimation_Animation_TakingDamage PoseAnimation_Brake PoseAnimation_Climb PoseAnimation_Crash PoseAnimation_Dash PoseAnimation_Fly PoseAnimation_GrabSide PoseAnimation_GrabTop PoseAnimation_Idle PoseAnimation_JumpDown PoseAnimation_JumpUp PoseAnimation_PassOut PoseAnimation_Pound PoseAnimation_Rolling PoseAnimation_Run PoseAnimation_Rush PoseAnimation_Sleep PoseAnimation_Slide PoseAnimation_Spin PoseAnimation_SquatIdle PoseAnimation_SquatMove PoseAnimation_SwimIdle PoseAnimation_SwimMove PoseAnimation_Walk PoseCharacter PoseCharacterRenderer PoseHandheld_Block PoseHandheld_Tool PosePerform_Block PosePerform_Tool PropGroupAttribute PropSeparatorAttribute PropVisibilityAttribute RenderLayer Renderer Renderer.CellComparer RendererLayerCapacityAttribute Max rendering cell count for the layer RestartGameTask Rigidbody Saving SavingBool SavingColor32 SavingColor32NoAlpha SavingHotkey SavingInt SavingString SavingSystem Saving<T> SelectPlayerTask Sheet SheetCharacterRenderer Sky SoundData SpawnEntityTask SpriteCode SpriteGroup Stage SummonAttackness Behavour class that handle attack logic for summon type character SwitchItem<TargetItem> TagUtil Tail Task TaskSystem ToolApplicationAttribute If application with current assembly should be treat as a \"tool\" rather than \"game\" TransferSystem UndoRedo Universe UniverseInfo Util Weapon Weapon<B> WindowUI Wing World WorldPathPool WorldSquad WorldStream Structs AfterimageScope BlockRule CellZScope ClampCellsScope Color32 ColorF ColorGradient.Data Damage Data structure for a single damage performed DefaultLayerScope DynamicClampCellScope EmptyScope EnvironmentShadowScope FRect Float2 Float3 Float4 FontScope GUIBodyColorScope GUIColorScope GUIContentColorScope GUIEnableScope GUIHorizontalScrollScope GUIInteractableScope GUILabelWidthScope GUIScrollScope GUISkinScope GUIVerticalScrollScope Hotkey IRect IgnoreInputScope Int2 Int3 Int4 LayerScope Long4 OrientedSprite PhysicsCell ReverseCellsScope RotateCellScope SheetIndexScope ShiftCellsScope UILayerScope Util.MathfInternal Interfaces IActionTarget IBlockEntity IBlockSquad IBumpable ICarrier ICircuitOperator ICombustible IDamageReceiver IFire IItemTransfer IJsonSerializationCallback IMapItem IPlayable IProgressiveItem IRouteWalker IUndoItem IWindowEntityUI IWithCharacterAttackness IWithCharacterBuff IWithCharacterHealth IWithCharacterMovement IWithCharacterRenderer Enums Alignment AntiBuffItem<B>.TriggerMode AtlasState AtlasType BlockType BodyGadgetType BodyPart.CoverMode CharacterAnimationType CharacterFaceExpression CharacterInventoryType CharacterMovementState CharacterState ClothType CompareMode Direction2 Direction3 Direction4 Direction5 Direction8 EquipmentType FittingPose GUISkin.LabelPattern GUIState Gamekey GamepadKey HipCloth.HipClothType KeyboardKey NoiseMatching OnMapEditorModeChange_ModeAttribute.Mode OperationMode ProjectType Rule SavingLocation Tag TaskResult WeaponValidDirection WrapMode How text wrap when reach edge"
  },
  "api/GeorgeMamaladze.Trie-1.html": {
    "href": "api/GeorgeMamaladze.Trie-1.html",
    "title": "Class Trie<TValue> | AngeliA",
    "summary": "Class Trie<TValue> Namespace GeorgeMamaladze Assembly AngeliA Framework.dll [Serializable] public class Trie<TValue> : TrieNode<TValue> Type Parameters TValue Inheritance object TrieNodeBase<TValue> TrieNode<TValue> Trie<TValue> Inherited Members TrieNode<TValue>.KeyLength TrieNode<TValue>.Children() TrieNode<TValue>.Values() TrieNode<TValue>.GetOrCreateChild(char) TrieNode<TValue>.GetChildOrNull(string, int) TrieNode<TValue>.AddValue(TValue) TrieNode<TValue>.Clear() TrieNodeBase<TValue>.Size() TrieNodeBase<TValue>.Add(string, int, TValue) TrieNodeBase<TValue>.Retrieve(string, int) TrieNodeBase<TValue>.SearchDeep(string, int) TrieNodeBase<TValue>.Subtree() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Methods Add(string, TValue) public void Add(string key, TValue value) Parameters key string value TValue AddForSearching(string, TValue) public void AddForSearching(string name, TValue value) Parameters name string value TValue Retrieve(string) public IEnumerable<TValue> Retrieve(string query) Parameters query string Returns IEnumerable<TValue>"
  },
  "api/GeorgeMamaladze.TrieNode-1.html": {
    "href": "api/GeorgeMamaladze.TrieNode-1.html",
    "title": "Class TrieNode<TValue> | AngeliA",
    "summary": "Class TrieNode<TValue> Namespace GeorgeMamaladze Assembly AngeliA Framework.dll [Serializable] public class TrieNode<TValue> : TrieNodeBase<TValue> Type Parameters TValue Inheritance object TrieNodeBase<TValue> TrieNode<TValue> Derived Trie<TValue> Inherited Members TrieNodeBase<TValue>.Size() TrieNodeBase<TValue>.Add(string, int, TValue) TrieNodeBase<TValue>.Retrieve(string, int) TrieNodeBase<TValue>.SearchDeep(string, int) TrieNodeBase<TValue>.Subtree() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Constructors TrieNode() protected TrieNode() Properties KeyLength protected override int KeyLength { get; } Property Value int Methods AddValue(TValue) protected override void AddValue(TValue value) Parameters value TValue Children() protected override IEnumerable<TrieNodeBase<TValue>> Children() Returns IEnumerable<TrieNodeBase<TValue>> Clear() public void Clear() GetChildOrNull(string, int) protected override TrieNodeBase<TValue> GetChildOrNull(string query, int position) Parameters query string position int Returns TrieNodeBase<TValue> GetOrCreateChild(char) protected override TrieNodeBase<TValue> GetOrCreateChild(char key) Parameters key char Returns TrieNodeBase<TValue> Values() protected override IEnumerable<TValue> Values() Returns IEnumerable<TValue>"
  },
  "api/GeorgeMamaladze.TrieNodeBase-1.html": {
    "href": "api/GeorgeMamaladze.TrieNodeBase-1.html",
    "title": "Class TrieNodeBase<TValue> | AngeliA",
    "summary": "Class TrieNodeBase<TValue> Namespace GeorgeMamaladze Assembly AngeliA Framework.dll [Serializable] public abstract class TrieNodeBase<TValue> Type Parameters TValue Inheritance object TrieNodeBase<TValue> Derived TrieNode<TValue> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Properties KeyLength protected abstract int KeyLength { get; } Property Value int Methods Add(string, int, TValue) public void Add(string key, int position, TValue value) Parameters key string position int value TValue AddValue(TValue) protected abstract void AddValue(TValue value) Parameters value TValue Children() protected abstract IEnumerable<TrieNodeBase<TValue>> Children() Returns IEnumerable<TrieNodeBase<TValue>> GetChildOrNull(string, int) protected abstract TrieNodeBase<TValue> GetChildOrNull(string query, int position) Parameters query string position int Returns TrieNodeBase<TValue> GetOrCreateChild(char) protected abstract TrieNodeBase<TValue> GetOrCreateChild(char key) Parameters key char Returns TrieNodeBase<TValue> Retrieve(string, int) protected virtual IEnumerable<TValue> Retrieve(string query, int position) Parameters query string position int Returns IEnumerable<TValue> SearchDeep(string, int) protected virtual IEnumerable<TValue> SearchDeep(string query, int position) Parameters query string position int Returns IEnumerable<TValue> Size() public long Size() Returns long Subtree() protected IEnumerable<TrieNodeBase<TValue>> Subtree() Returns IEnumerable<TrieNodeBase<TValue>> Values() protected abstract IEnumerable<TValue> Values() Returns IEnumerable<TValue>"
  },
  "api/GeorgeMamaladze.html": {
    "href": "api/GeorgeMamaladze.html",
    "title": "Namespace GeorgeMamaladze | AngeliA",
    "summary": "Namespace GeorgeMamaladze Classes TrieNodeBase<TValue> TrieNode<TValue> Trie<TValue>"
  },
  "api/JordanPeck.CellularDistanceFunction.html": {
    "href": "api/JordanPeck.CellularDistanceFunction.html",
    "title": "Enum CellularDistanceFunction | AngeliA",
    "summary": "Enum CellularDistanceFunction Namespace JordanPeck Assembly AngeliA Framework.dll public enum CellularDistanceFunction Extension Methods Extension.Next<E>(E) Extension.Prev<E>(E) Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Fields Euclidean = 0 EuclideanSq = 1 Hybrid = 3 Manhattan = 2"
  },
  "api/JordanPeck.CellularReturnType.html": {
    "href": "api/JordanPeck.CellularReturnType.html",
    "title": "Enum CellularReturnType | AngeliA",
    "summary": "Enum CellularReturnType Namespace JordanPeck Assembly AngeliA Framework.dll public enum CellularReturnType Extension Methods Extension.Next<E>(E) Extension.Prev<E>(E) Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Fields CellValue = 0 Distance = 1 Distance2 = 2 Distance2Add = 3 Distance2Div = 6 Distance2Mul = 5 Distance2Sub = 4"
  },
  "api/JordanPeck.DomainWarpType.html": {
    "href": "api/JordanPeck.DomainWarpType.html",
    "title": "Enum DomainWarpType | AngeliA",
    "summary": "Enum DomainWarpType Namespace JordanPeck Assembly AngeliA Framework.dll public enum DomainWarpType Extension Methods Extension.Next<E>(E) Extension.Prev<E>(E) Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Fields BasicGrid = 2 OpenSimplex2 = 0 OpenSimplex2Reduced = 1"
  },
  "api/JordanPeck.FastNoiseLite.html": {
    "href": "api/JordanPeck.FastNoiseLite.html",
    "title": "Class FastNoiseLite | AngeliA",
    "summary": "Class FastNoiseLite Namespace JordanPeck Assembly AngeliA Framework.dll public class FastNoiseLite Inheritance object FastNoiseLite Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Constructors FastNoiseLite() public FastNoiseLite() Properties CellularDistanceFunction public CellularDistanceFunction CellularDistanceFunction { get; set; } Property Value CellularDistanceFunction CellularJitterModifier public float CellularJitterModifier { get; set; } Property Value float CellularReturnType public CellularReturnType CellularReturnType { get; set; } Property Value CellularReturnType DomainWarpAmp public int DomainWarpAmp { get; set; } Property Value int DomainWarpType public DomainWarpType DomainWarpType { get; set; } Property Value DomainWarpType FractalType public FractalType FractalType { get; set; } Property Value FractalType Frequency public float Frequency { get; set; } Property Value float Gain public float Gain { get; set; } Property Value float Lacunarity public float Lacunarity { get; set; } Property Value float Max public float Max { get; set; } Property Value float Min public float Min { get; set; } Property Value float NoiseType public NoiseType NoiseType { get; set; } Property Value NoiseType Octaves public int Octaves { get; set; } Property Value int PingPongStrength public float PingPongStrength { get; set; } Property Value float RotationType3D public RotationType3D RotationType3D { get; set; } Property Value RotationType3D Seed public int Seed { get; set; } Property Value int WeightedStrength public float WeightedStrength { get; set; } Property Value float Methods AppendCSharpCode(StringBuilder, string, int) public void AppendCSharpCode(StringBuilder builder, string paramName = \"noise\", int tableCount = 0) Parameters builder StringBuilder paramName string tableCount int GetNoise(float, float) public float GetNoise(float x, float y) Parameters x float y float Returns float GetNoise(float, float, float) public float GetNoise(float x, float y, float z) Parameters x float y float z float Returns float"
  },
  "api/JordanPeck.FractalType.html": {
    "href": "api/JordanPeck.FractalType.html",
    "title": "Enum FractalType | AngeliA",
    "summary": "Enum FractalType Namespace JordanPeck Assembly AngeliA Framework.dll public enum FractalType Extension Methods Extension.Next<E>(E) Extension.Prev<E>(E) Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Fields DomainWarpIndependent = 5 DomainWarpProgressive = 4 FBm = 1 None = 0 PingPong = 3 Ridged = 2"
  },
  "api/JordanPeck.NoiseType.html": {
    "href": "api/JordanPeck.NoiseType.html",
    "title": "Enum NoiseType | AngeliA",
    "summary": "Enum NoiseType Namespace JordanPeck Assembly AngeliA Framework.dll public enum NoiseType Extension Methods Extension.Next<E>(E) Extension.Prev<E>(E) Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Fields Cellular = 2 OpenSimplex2 = 0 OpenSimplex2S = 1 Perlin = 3 Value = 5 ValueCubic = 4"
  },
  "api/JordanPeck.RotationType3D.html": {
    "href": "api/JordanPeck.RotationType3D.html",
    "title": "Enum RotationType3D | AngeliA",
    "summary": "Enum RotationType3D Namespace JordanPeck Assembly AngeliA Framework.dll public enum RotationType3D Extension Methods Extension.Next<E>(E) Extension.Prev<E>(E) Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object) Fields ImproveXYPlanes = 1 ImproveXZPlanes = 2 None = 0"
  },
  "api/JordanPeck.html": {
    "href": "api/JordanPeck.html",
    "title": "Namespace JordanPeck | AngeliA",
    "summary": "Namespace JordanPeck Classes FastNoiseLite Enums CellularDistanceFunction CellularReturnType DomainWarpType FractalType NoiseType RotationType3D"
  },
  "docs/getting-started.html": {
    "href": "docs/getting-started.html",
    "title": "Getting Started | AngeliA",
    "summary": "Getting Started"
  },
  "docs/introduction.html": {
    "href": "docs/introduction.html",
    "title": "Introduction | AngeliA",
    "summary": "Introduction"
  },
  "index.html": {
    "href": "index.html",
    "title": "This is the HOMEPAGE. | AngeliA",
    "summary": "This is the HOMEPAGE. Refer to Markdown for how to write markdown files. Quick Start Notes: Add images to the images folder if the file is referencing an image."
  }
}
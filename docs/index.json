{
  "api/AngeliA.AfterLateUpdateAttribute.html": {
    "href": "api/AngeliA.AfterLateUpdateAttribute.html",
    "title": "Class AfterLateUpdateAttribute | AngeliA",
    "summary": "Class AfterLateUpdateAttribute The function will be called after all entity.LateUpdate is called Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public class AfterLateUpdateAttribute : EventAttribute Examples [AfterLateUpdate] internal static void ExampleFunction () { } Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.AfterLayerFrameUpdate_IntLayerAttribute.html": {
    "href": "api/AngeliA.AfterLayerFrameUpdate_IntLayerAttribute.html",
    "title": "Class AfterLayerFrameUpdate_IntLayerAttribute | AngeliA",
    "summary": "Class AfterLayerFrameUpdate_IntLayerAttribute The function will be called after rendering layer update Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public class AfterLayerFrameUpdate_IntLayerAttribute : EventAttribute Examples [AfterLayerFrameUpdate_IntLayer] internal static void ExampleFunction () { } Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.AfterLevelRenderedAttribute.html": {
    "href": "api/AngeliA.AfterLevelRenderedAttribute.html",
    "title": "Class AfterLevelRenderedAttribute | AngeliA",
    "summary": "Class AfterLevelRenderedAttribute The function will be called after world squad render all level blocks for the current frame Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public class AfterLevelRenderedAttribute : EventAttribute Examples [AfterLevelRendered] internal static void ExampleFunction () { } Constructors | Edit this page View Source AfterLevelRenderedAttribute(int) The function will be called after world squad render all level blocks for the current frame Declaration public AfterLevelRenderedAttribute(int order = 0) Examples [AfterLevelRendered] internal static void ExampleFunction () { } Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.AfterimageScope.html": {
    "href": "api/AngeliA.AfterimageScope.html",
    "title": "Struct AfterimageScope | AngeliA",
    "summary": "Struct AfterimageScope Implements IDisposable Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public readonly struct AfterimageScope : IDisposable Examples using AngeliA; namespace AngeliaGame; public class Example { static int CurrentX = 0; static int CurrentY = 0; static int CurrentRot = 0; [OnGameUpdate] internal static void OnGameUpdate () { int speedX = QTest.Int(\"Speed X\", 50, -64, 64); int speedY = QTest.Int(\"Speed Y\", 10, -64, 64); int rotateSpeed = QTest.Int(\"Rotate Speed\", 8, -64, 64); int count = QTest.Int(\"Count\", 8, 1, 24); int frameStep = QTest.Int(\"Frame Step\", 16, 1, 32); int scaleStart = QTest.Int(\"Scale Start\", 1000, 0, 2000); int scaleEnd = QTest.Int(\"Scale End\", 100, 0, 2000); using (new AfterimageScope( speedX, speedY, Color32.WHITE, Color32.CLEAR, rotateSpeed, count, frameStep, scaleStart, scaleEnd )) { var cameraRect = Renderer.CameraRect; // Render object here Renderer.Draw( BuiltInSprite.ICON_ENTITY, cameraRect.x + CurrentX, cameraRect.y + CurrentY, 500, 500, CurrentRot, Const.CEL * 2, Const.CEL * 2 ); // Move the object CurrentX += speedX; CurrentY += speedY; CurrentRot += rotateSpeed; CurrentX = CurrentX.UMod(cameraRect.width); CurrentY = CurrentY.UMod(cameraRect.height); } } } Constructors | Edit this page View Source AfterimageScope(int, int, Color32, Color32, int, int, int, int, int, int) Draw a continuous tailing cell effect for the objects rendering inside Declaration public AfterimageScope(int speedX, int speedY, Color32 tintStart, Color32 tintEnd, int rotateSpeed = 0, int count = 3, int frameStep = 2, int scaleStart = 1000, int scaleEnd = 1000, int renderLayer = 3) Parameters Type Name Description int speedX How fast is the object moves horizontaly int speedY How fast is the object moves verticaly Color32 tintStart Color tint for start of the effect Color32 tintEnd Color tint for end of the effect int rotateSpeed How fast does the object rotate int count How many effect should be drawn int frameStep Frame distance between each effects int scaleStart Size scale when the effect start (0 means 0%, 1000 means 100%) int scaleEnd Size scale when the effect end (0 means 0%, 1000 means 100%) int renderLayer Which layer does this effect renders into. Use RenderLayer.XXX to get the value. | Edit this page View Source AfterimageScope(int, int, int, int, int, int, int, int) Draw a continuous tailing cell effect for the objects rendering inside Declaration public AfterimageScope(int speedX, int speedY, int rotateSpeed = 0, int count = 3, int frameStep = 2, int scaleStart = 1000, int scaleEnd = 1000, int renderLayer = 3) Parameters Type Name Description int speedX How fast is the object moves horizontaly int speedY How fast is the object moves verticaly int rotateSpeed How fast does the object rotate int count How many effect should be drawn int frameStep Frame distance between each effects int scaleStart Size scale when the effect start (0 means 0%, 1000 means 100%) int scaleEnd Size scale when the effect end (0 means 0%, 1000 means 100%) int renderLayer Which layer does this effect renders into. Use RenderLayer.XXX to get the value. Methods | Edit this page View Source Dispose() Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources. Declaration public void Dispose() Implements IDisposable Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.Alignment.html": {
    "href": "api/AngeliA.Alignment.html",
    "title": "Enum Alignment | AngeliA",
    "summary": "Enum Alignment Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public enum Alignment : byte Fields Name Description BottomLeft BottomMid BottomRight Full MidLeft MidMid MidRight TopLeft TopMid TopRight Extension Methods Extension.IsBottom(Alignment) Extension.IsLeft(Alignment) Extension.IsMidX(Alignment) Extension.IsMidY(Alignment) Extension.IsRight(Alignment) Extension.IsTop(Alignment) Extension.Next<Alignment>(Alignment) Extension.Normal(Alignment) Extension.Prev<Alignment>(Alignment) Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.AngePath.html": {
    "href": "api/AngeliA.AngePath.html",
    "title": "Class AngePath | AngeliA",
    "summary": "Class AngePath Utility class for path-related logic in an AngeliA project Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public static class AngePath Fields | Edit this page View Source CONVERSATION_FILE_EXT Declaration public const string CONVERSATION_FILE_EXT = \"txt\" | Edit this page View Source DesktopPath Declaration public static string DesktopPath | Edit this page View Source EDITABLE_CONVERSATION_FILE_EXT Declaration public const string EDITABLE_CONVERSATION_FILE_EXT = \"conversation\" | Edit this page View Source EDITABLE_CONVERSATION_SEARCH_PATTERN Declaration public const string EDITABLE_CONVERSATION_SEARCH_PATTERN = \"*.conversation\" | Edit this page View Source EQ_INVENTORY_FILE_EXT Inventory file extension with equipment data Declaration public const string EQ_INVENTORY_FILE_EXT = \"invq\" | Edit this page View Source EQ_INVENTORY_SEARCH_PATTERN Inventory file search pattern with equipment data Declaration public const string EQ_INVENTORY_SEARCH_PATTERN = \"*.invq\" | Edit this page View Source INVENTORY_FILE_EXT Declaration public const string INVENTORY_FILE_EXT = \"inv\" | Edit this page View Source INVENTORY_SEARCH_PATTERN Declaration public const string INVENTORY_SEARCH_PATTERN = \"*.inv\" | Edit this page View Source LANGUAGE_FILE_EXT Declaration public const string LANGUAGE_FILE_EXT = \"txt\" | Edit this page View Source LANGUAGE_SEARCH_PATTERN Declaration public const string LANGUAGE_SEARCH_PATTERN = \"*.txt\" | Edit this page View Source MAP_FILE_EXT Declaration public const string MAP_FILE_EXT = \"ibb\" | Edit this page View Source MAP_SEARCH_PATTERN Declaration public const string MAP_SEARCH_PATTERN = \"*.ibb\" | Edit this page View Source MOVEMENT_CONFIG_FILE_EXT Declaration public const string MOVEMENT_CONFIG_FILE_EXT = \"txt\" | Edit this page View Source MOVEMENT_CONFIG_SEARCH_PATTERN Declaration public const string MOVEMENT_CONFIG_SEARCH_PATTERN = \"*.txt\" | Edit this page View Source PACKAGE_FILE_EXT Declaration public const string PACKAGE_FILE_EXT = \"angepack\" | Edit this page View Source PACKAGE_SEARCH_PATTERN Declaration public const string PACKAGE_SEARCH_PATTERN = \"*.angepack\" | Edit this page View Source SHEET_FILE_EXT Declaration public const string SHEET_FILE_EXT = \"sheet\" | Edit this page View Source SHEET_SEARCH_PATTERN Declaration public const string SHEET_SEARCH_PATTERN = \"*.sheet\" Properties | Edit this page View Source BuiltInUniverseRoot Game universe folder path. This folder contents project data for an AngeliA project Declaration public static string BuiltInUniverseRoot { get; } | Edit this page View Source PersistentDataPath Declaration public static string PersistentDataPath { get; } | Edit this page View Source TempDataPath Declaration public static string TempDataPath { get; } Methods | Edit this page View Source GetAsepriteRoot(string) Declaration public static string GetAsepriteRoot(string universeFolder) | Edit this page View Source GetAtlasRoot(string) Declaration public static string GetAtlasRoot(string universeFolder) | Edit this page View Source GetBuiltInSheetPath(string) Declaration public static string GetBuiltInSheetPath(string universeFolder) | Edit this page View Source GetCharacterMovementConfigRoot(string) Declaration public static string GetCharacterMovementConfigRoot(string universeFolder) | Edit this page View Source GetConversationRoot(string) Declaration public static string GetConversationRoot(string universeFolder) | Edit this page View Source GetEditableConversationRoot(string) Declaration public static string GetEditableConversationRoot(string universeFolder) | Edit this page View Source GetGameSheetPath(string) Declaration public static string GetGameSheetPath(string universeFolder) | Edit this page View Source GetLanguageRoot(string) Declaration public static string GetLanguageRoot(string universeFolder) | Edit this page View Source GetMapRoot(string) Declaration public static string GetMapRoot(string universeFolder) | Edit this page View Source GetPersistentDataPath(string, string) Declaration public static string GetPersistentDataPath(string devName, string productName) | Edit this page View Source GetSheetRoot(string) Declaration public static string GetSheetRoot(string universeFolder) | Edit this page View Source GetSlotInventoryRoot(string, int) Declaration public static string GetSlotInventoryRoot(string savingFolder, int slot) | Edit this page View Source GetSlotMetaCharacterConfigRoot(string, int) Declaration public static string GetSlotMetaCharacterConfigRoot(string savingFolder, int slot) | Edit this page View Source GetSlotMetaRoot(string, int) Declaration public static string GetSlotMetaRoot(string savingFolder, int slot) | Edit this page View Source GetSlotRoot(string, int) Declaration public static string GetSlotRoot(string savingFolder, int slot) | Edit this page View Source GetSlotUserMapRoot(string, int) Declaration public static string GetSlotUserMapRoot(string savingFolder, int slot) | Edit this page View Source GetTempDataPath(string, string) Declaration public static string GetTempDataPath(string devName, string productName) | Edit this page View Source GetUniverseCoverPath(string) Declaration public static string GetUniverseCoverPath(string universeFolder) | Edit this page View Source GetUniverseFontRoot(string) Declaration public static string GetUniverseFontRoot(string universeFolder) | Edit this page View Source GetUniverseInfoPath(string) Declaration public static string GetUniverseInfoPath(string universeFolder) | Edit this page View Source GetUniverseMetaRoot(string) Declaration public static string GetUniverseMetaRoot(string universeFolder) | Edit this page View Source GetUniverseMusicRoot(string) Declaration public static string GetUniverseMusicRoot(string universeFolder) | Edit this page View Source GetUniverseRoot(string) Declaration public static string GetUniverseRoot(string projectFolder) | Edit this page View Source GetUniverseSoundRoot(string) Declaration public static string GetUniverseSoundRoot(string universeFolder)"
  },
  "api/AngeliA.AngeSprite.html": {
    "href": "api/AngeliA.AngeSprite.html",
    "title": "Class AngeSprite | AngeliA",
    "summary": "Class AngeSprite Artwork sprite data for rendering the game Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public class AngeSprite Fields | Edit this page View Source Atlas Instance of the atlas this sprite belongs to Declaration public Atlas Atlas | Edit this page View Source AtlasID AngeHash of the atlas this sprite belongs to Declaration public int AtlasID | Edit this page View Source Duration Animation duration of this sprite Declaration public int Duration | Edit this page View Source EMPTY Declaration public static readonly AngeSprite EMPTY | Edit this page View Source GlobalBorder Border value in global space. Declaration public Int4 GlobalBorder | Edit this page View Source GlobalHeight Height in global space. Calculate from the pixel rect height multiply Const.ART_SCALE Declaration public int GlobalHeight | Edit this page View Source GlobalWidth Width in global space. Calculate from the pixel rect width multiply Const.ART_SCALE Declaration public int GlobalWidth | Edit this page View Source Group Instance of the sprite group this sprite belongs to. Null if this sprite is individual. Declaration public SpriteGroup Group | Edit this page View Source ID Global unique ID for this sprite. from RealName.AngeHash(); Declaration public int ID | Edit this page View Source IsTrigger True if this sprite is tagged as trigger. Declaration public bool IsTrigger | Edit this page View Source LocalZ Z value for sort rendering cells Declaration public int LocalZ | Edit this page View Source PivotX Pivot X (0 means left edge. 1000 means right edge) Declaration public int PivotX | Edit this page View Source PivotY Pivot Y (0 means bottom edge. 1000 means top edge) Declaration public int PivotY | Edit this page View Source PixelRect Rect position of the pixel data inside the atlas canvas Declaration public IRect PixelRect | Edit this page View Source Pixels The pixels content data Declaration public Color32[] Pixels | Edit this page View Source RealName Uniaue logical name of this sprite. Declaration public string RealName | Edit this page View Source Rule Rule for auto tiling map blocks Declaration public BlockRule Rule | Edit this page View Source SummaryTint Average color of the pixels Declaration public Color32 SummaryTint | Edit this page View Source Tag Meta tag of this sprite. Multiple tags can be contains at same time. Declaration public Tag Tag Methods | Edit this page View Source CopyTo(AngeSprite) Copy the data to the given sprite Declaration public AngeSprite CopyTo(AngeSprite target) Returns Type Description AngeSprite The target sprite | Edit this page View Source CreateCopy() Create a new sprite instance with same data with this one Declaration public AngeSprite CreateCopy() | Edit this page View Source MakeDedicatedForTexture(object, Sheet) Link the given sprite to the texture Declaration public void MakeDedicatedForTexture(object texture, Sheet sheet) | Edit this page View Source RemoveFromDedicatedTexture(Sheet) Remove the texture dedicated sprite Declaration public void RemoveFromDedicatedTexture(Sheet sheet) | Edit this page View Source ResizePixelRect(IRect, bool, out bool) Set pixel content data to new size without delete the data inside Declaration public void ResizePixelRect(IRect newRect, bool resizeBorder, out bool contentChanged) Parameters Type Name Description IRect newRect New pixel rect position bool resizeBorder True if auto resize the border bool contentChanged True if any pixel data changed | Edit this page View Source SetPixelDirty() Mark this sprite as changed without save Declaration public void SetPixelDirty() | Edit this page View Source ValidBorders(Direction8?) Make sure the borders don't overlaps each others Declaration public void ValidBorders(Direction8? priority = null) Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.AntiBuffItem-1.TriggerMode.html": {
    "href": "api/AngeliA.AntiBuffItem-1.TriggerMode.html",
    "title": "Enum AntiBuffItem<B>.TriggerMode | AngeliA",
    "summary": "Enum AntiBuffItem<B>.TriggerMode How anti buff item been trigger Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax protected enum AntiBuffItem<B>.TriggerMode Fields Name Description Auto Manual Extension Methods Extension.Next<AntiBuffItem<B>.TriggerMode>(AntiBuffItem<B>.TriggerMode) Extension.Prev<AntiBuffItem<B>.TriggerMode>(AntiBuffItem<B>.TriggerMode) Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.AntiBuffItem-1.html": {
    "href": "api/AngeliA.AntiBuffItem-1.html",
    "title": "Class AntiBuffItem<B> | AngeliA",
    "summary": "Class AntiBuffItem<B> A type of item that prevents a given type of buff from giving to the host Implements IMapItem Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public abstract class AntiBuffItem<B> : Item, IMapItem where B : Buff Type Parameters Name Description B Type of the buff to prevent Constructors | Edit this page View Source AntiBuffItem() Declaration public AntiBuffItem() Properties | Edit this page View Source Duration How long does it work after been use in frame Declaration public abstract int Duration { get; } | Edit this page View Source Mode How this item been trigger Declaration protected abstract AntiBuffItem<B>.TriggerMode Mode { get; } Methods | Edit this page View Source BeforeItemUpdate_FromInventory(Character, int, int) This function is called every frame when this item is in an holder's inventory Declaration public override void BeforeItemUpdate_FromInventory(Character character, int inventoryID, int itemIndex) int inventoryID ID of the inventory Overrides Item.BeforeItemUpdate_FromInventory(Character, int, int) | Edit this page View Source CanUse(Character) True if this item can be use at current frame Declaration public override bool CanUse(Character character) Overrides Item.CanUse(Character) | Edit this page View Source OnAntiBuffTriggerd(Character) This function is called when the item is triggered Declaration public virtual void OnAntiBuffTriggerd(Character target) Parameters Type Name Description Character target Target character that will get the effect | Edit this page View Source Use(Character, int, int, out bool) Perform the logic when the item get used Declaration public override bool Use(Character character, int inventoryID, int itemIndex, out bool consume) int inventoryID Inventory ID of this holder int itemIndex Index of this item inside the inventory bool consume True if the item should disappear after being used Returns Type Description bool True if the item is used Overrides Item.Use(Character, int, int, out bool) Implements IMapItem Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.Atlas.html": {
    "href": "api/AngeliA.Atlas.html",
    "title": "Class Atlas | AngeliA",
    "summary": "Class Atlas Segment container of sprites inside artwork sheet Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public class Atlas Fields | Edit this page View Source ID Unique ID of this atlas. From Name.AngeHash(); Declaration public int ID | Edit this page View Source Name Unique name of this atlas Declaration public string Name | Edit this page View Source State Internal data used for display folder layout Declaration public AtlasState State | Edit this page View Source Type Declaration public AtlasType Type Properties | Edit this page View Source InFolder True if this atlas is inside a folder Declaration public bool InFolder { get; } | Edit this page View Source IsFolder True if this atlas is folder Declaration public bool IsFolder { get; } Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.AtlasState.html": {
    "href": "api/AngeliA.AtlasState.html",
    "title": "Enum AtlasState | AngeliA",
    "summary": "Enum AtlasState Internal data used for display folder layout Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public enum AtlasState Fields Name Description Folded Root Sub Unfolded Extension Methods Extension.Next<AtlasState>(AtlasState) Extension.Prev<AtlasState>(AtlasState) Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.AtlasType.html": {
    "href": "api/AngeliA.AtlasType.html",
    "title": "Enum AtlasType | AngeliA",
    "summary": "Enum AtlasType Type of sprite atlas Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public enum AtlasType Fields Name Description Background Sprites inside are background blocks General No special info Level Sprites inside are level blocks Extension Methods Extension.Next<AtlasType>(AtlasType) Extension.Prev<AtlasType>(AtlasType) Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.AudioCode.html": {
    "href": "api/AngeliA.AudioCode.html",
    "title": "Class AudioCode | AngeliA",
    "summary": "Class AudioCode Quick setup for an audio ID Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public class AudioCode Examples private static readonly AudioCode AudioCodeName = \"Name of audio file without extension\"; Constructors | Edit this page View Source AudioCode(string) Quick setup for an audio ID Declaration public AudioCode(string name) Examples private static readonly AudioCode AudioCodeName = \"Name of audio file without extension\"; Fields | Edit this page View Source ID Declaration public readonly int ID Properties | Edit this page View Source Name Declaration public string Name { get; } Operators | Edit this page View Source implicit operator int(AudioCode) Declaration public static implicit operator int(AudioCode code) | Edit this page View Source implicit operator AudioCode(string) Declaration public static implicit operator AudioCode(string value) Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.AudioData.html": {
    "href": "api/AngeliA.AudioData.html",
    "title": "Class AudioData | AngeliA",
    "summary": "Class AudioData Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public abstract class AudioData Fields | Edit this page View Source ID Declaration public int ID | Edit this page View Source Name Declaration public string Name | Edit this page View Source Path Declaration public string Path Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.AutoValidList-1.html": {
    "href": "api/AngeliA.AutoValidList-1.html",
    "title": "Class AutoValidList<T> | AngeliA",
    "summary": "Class AutoValidList<T> A list that automatically remove element inside based on the given function Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public class AutoValidList<T> Type Parameters Name Description T Constructors | Edit this page View Source AutoValidList(int, Func<T, bool>) A list that automatically remove element inside based on the given function Declaration public AutoValidList(int capacity, Func<T, bool> updateFunc) Properties | Edit this page View Source Capacity Max element count Declaration public int Capacity { get; } | Edit this page View Source Count How many elements are currently inside this list Declaration public int Count { get; } Methods | Edit this page View Source Add(T) Declaration public bool Add(T element) | Edit this page View Source Update() Valid all elements in the list based on the given funtion. Declaration public void Update() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.BasicGlobalItemCombinationAttribute.html": {
    "href": "api/AngeliA.BasicGlobalItemCombinationAttribute.html",
    "title": "Class BasicGlobalItemCombinationAttribute | AngeliA",
    "summary": "Class BasicGlobalItemCombinationAttribute Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public abstract class BasicGlobalItemCombinationAttribute : BasicItemCombinationAttribute Constructors | Edit this page View Source BasicGlobalItemCombinationAttribute(ItemCombinationParam, ItemCombinationParam, ItemCombinationParam, ItemCombinationParam, string, int, string, string, string, string) Declaration protected BasicGlobalItemCombinationAttribute(ItemCombinationParam itemA, ItemCombinationParam itemB, ItemCombinationParam itemC, ItemCombinationParam itemD, string result, int count = 1, string keepId0 = \"\", string keepId1 = \"\", string keepId2 = \"\", string keepId3 = \"\") Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.BasicItemCombinationAttribute.html": {
    "href": "api/AngeliA.BasicItemCombinationAttribute.html",
    "title": "Class BasicItemCombinationAttribute | AngeliA",
    "summary": "Class BasicItemCombinationAttribute Define a item combination to craft the item. Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public abstract class BasicItemCombinationAttribute : Attribute Constructors | Edit this page View Source BasicItemCombinationAttribute(ItemCombinationParam, ItemCombinationParam, ItemCombinationParam, ItemCombinationParam, int, string, string, string, string) Define a item combination to craft the item. Declaration protected BasicItemCombinationAttribute(ItemCombinationParam itemA, ItemCombinationParam itemB, ItemCombinationParam itemC, ItemCombinationParam itemD, int count = 1, string keepId0 = \"\", string keepId1 = \"\", string keepId2 = \"\", string keepId3 = \"\") Parameters Type Name Description ItemCombinationParam itemA An item required to craft the result item ItemCombinationParam itemB An item required to craft the result item ItemCombinationParam itemC An item required to craft the result item ItemCombinationParam itemD An item required to craft the result item int count How many item does it craft at once string keepId0 Do not consume this item string keepId1 Do not consume this item string keepId2 Do not consume this item string keepId3 Do not consume this item Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.BeforeBeforeUpdateAttribute.html": {
    "href": "api/AngeliA.BeforeBeforeUpdateAttribute.html",
    "title": "Class BeforeBeforeUpdateAttribute | AngeliA",
    "summary": "Class BeforeBeforeUpdateAttribute The function will be called before any entity.BeforeUpdate is called Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public class BeforeBeforeUpdateAttribute : EventAttribute Examples [BeforeBeforeUpdate] internal static void ExampleFunction () { } Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.BeforeFirstUpdateAttribute.html": {
    "href": "api/AngeliA.BeforeFirstUpdateAttribute.html",
    "title": "Class BeforeFirstUpdateAttribute | AngeliA",
    "summary": "Class BeforeFirstUpdateAttribute The function will be called before any entity.FirstUpdate is called Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public class BeforeFirstUpdateAttribute : EventAttribute Examples [BeforeFirstUpdate] internal static void ExampleFunction () { } Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.BeforeLateUpdateAttribute.html": {
    "href": "api/AngeliA.BeforeLateUpdateAttribute.html",
    "title": "Class BeforeLateUpdateAttribute | AngeliA",
    "summary": "Class BeforeLateUpdateAttribute The function will be called before any entity.LateUpdate is called Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public class BeforeLateUpdateAttribute : EventAttribute Examples [BeforeLateUpdate] internal static void ExampleFunction () { } Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.BeforeLayerFrameUpdate_IntLayerAttribute.html": {
    "href": "api/AngeliA.BeforeLayerFrameUpdate_IntLayerAttribute.html",
    "title": "Class BeforeLayerFrameUpdate_IntLayerAttribute | AngeliA",
    "summary": "Class BeforeLayerFrameUpdate_IntLayerAttribute The function will be called before rendering layer update Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public class BeforeLayerFrameUpdate_IntLayerAttribute : EventAttribute Examples internal static void ExampleFunction (int layerIndex) { } Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.BeforeLevelRenderedAttribute.html": {
    "href": "api/AngeliA.BeforeLevelRenderedAttribute.html",
    "title": "Class BeforeLevelRenderedAttribute | AngeliA",
    "summary": "Class BeforeLevelRenderedAttribute The function will be called before world squad rendering any level blocks for the current frame Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public class BeforeLevelRenderedAttribute : EventAttribute Examples [BeforeLevelRendered] internal static void ExampleFunction () { } Constructors | Edit this page View Source BeforeLevelRenderedAttribute(int) The function will be called before world squad rendering any level blocks for the current frame Declaration public BeforeLevelRenderedAttribute(int order = 0) Examples [BeforeLevelRendered] internal static void ExampleFunction () { } Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.BeforeSavingSlotChangedAttribute.html": {
    "href": "api/AngeliA.BeforeSavingSlotChangedAttribute.html",
    "title": "Class BeforeSavingSlotChangedAttribute | AngeliA",
    "summary": "Class BeforeSavingSlotChangedAttribute The function will be called before user change the saving slot. Universe.BuiltIn.CurrentSavingSlot is still the old value when this function is called. Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public class BeforeSavingSlotChangedAttribute : OrderedAttribute Examples [BeforeSavingSlotChanged] internal static void ExampleFunction () { } Constructors | Edit this page View Source BeforeSavingSlotChangedAttribute(int) The function will be called before user change the saving slot. Universe.BuiltIn.CurrentSavingSlot is still the old value when this function is called. Declaration public BeforeSavingSlotChangedAttribute(int order = 0) Parameters Type Name Description int order Function with smaller order will be called earlier Examples [BeforeSavingSlotChanged] internal static void ExampleFunction () { } Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.BeforeUpdateUpdateAttribute.html": {
    "href": "api/AngeliA.BeforeUpdateUpdateAttribute.html",
    "title": "Class BeforeUpdateUpdateAttribute | AngeliA",
    "summary": "Class BeforeUpdateUpdateAttribute The function will be called before any entity.Update is called Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public class BeforeUpdateUpdateAttribute : EventAttribute Examples [BeforeUpdateUpdate] internal static void ExampleFunction () { } Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.BlockBuilder.html": {
    "href": "api/AngeliA.BlockBuilder.html",
    "title": "Class BlockBuilder | AngeliA",
    "summary": "Class BlockBuilder Item that represent a map block inside inventory. Also handles the build block to map/stage logic Implements IMapItem Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public sealed class BlockBuilder : HandTool, IMapItem Constructors | Edit this page View Source BlockBuilder(int, string, BlockType, int) Declaration public BlockBuilder(int blockID, string blockName, BlockType blockType, int maxStackCount) Properties | Edit this page View Source AvailableWhenClimbing True if character can use this tool when climbing Declaration public override bool AvailableWhenClimbing { get; } Overrides HandTool.AvailableWhenClimbing | Edit this page View Source AvailableWhenSliding True if character can use this tool when sliding on wall Declaration public override bool AvailableWhenSliding { get; } Overrides HandTool.AvailableWhenSliding | Edit this page View Source AvailableWhenSquatting True if character can use this tool when squatting Declaration public override bool AvailableWhenSquatting { get; } Overrides HandTool.AvailableWhenSquatting | Edit this page View Source AvailableWhenWalking True if character can use this tool when walking Declaration public override bool AvailableWhenWalking { get; } Overrides HandTool.AvailableWhenWalking | Edit this page View Source BlockID ID of the block it holds Declaration public int BlockID { get; init; } | Edit this page View Source BlockType Type of the block it holds Declaration public BlockType BlockType { get; init; } | Edit this page View Source DefaultMovementSpeedRateOnUse How fast can the character move when using this tool. (0 means do not move. 1000 means move as normal speed. null means do not effect movement speed.) Declaration public override int? DefaultMovementSpeedRateOnUse { get; } Overrides HandTool.DefaultMovementSpeedRateOnUse | Edit this page View Source Duration How long does the tool perform it's function for once Declaration public override int Duration { get; } Overrides HandTool.Duration | Edit this page View Source MaxStackCount Count limitation for multiple items inside one inventory slot Declaration public override int MaxStackCount { get; } Overrides Equipment.MaxStackCount | Edit this page View Source RunningMovementSpeedRateOnUse How fast can the character move when using this tool when running. (0 means do not move. 1000 means move as normal speed. null means do not effect movement speed.) Declaration public override int? RunningMovementSpeedRateOnUse { get; } Overrides HandTool.RunningMovementSpeedRateOnUse | Edit this page View Source WalkingMovementSpeedRateOnUse How fast can the character move when using this tool when walking. (0 means do not move. 1000 means move as normal speed. null means do not effect movement speed.) Declaration public override int? WalkingMovementSpeedRateOnUse { get; } Overrides HandTool.WalkingMovementSpeedRateOnUse Methods | Edit this page View Source DrawItem(Entity, IRect, Color32, int) Call this function to render the item Declaration public override void DrawItem(Entity holder, IRect rect, Color32 tint, int z) Parameters Type Name Description Entity holder Holder that own this item IRect rect Rect position in global space Color32 tint Color tint int z Z value for sort rendering cells Overrides Item.DrawItem(Entity, IRect, Color32, int) | Edit this page View Source GetHandheldPoseAnimationID(Character) Get the ID of the pose animation for handheld Declaration public override int GetHandheldPoseAnimationID(Character character) Overrides HandTool.GetHandheldPoseAnimationID(Character) | Edit this page View Source GetPerformPoseAnimationID(Character) Get the ID of the pose animation for using the tool Declaration public override int GetPerformPoseAnimationID(Character character) Overrides HandTool.GetPerformPoseAnimationID(Character) | Edit this page View Source OnPoseAnimationUpdate_FromEquipment(PoseCharacterRenderer) This function is called every frame when a pose-style character equipping this item Declaration public override void OnPoseAnimationUpdate_FromEquipment(PoseCharacterRenderer rendering) Overrides Item.OnPoseAnimationUpdate_FromEquipment(PoseCharacterRenderer) | Edit this page View Source OnToolPerform(Character) This function is called when this tool is used for once by the given character Declaration public override void OnToolPerform(Character sender) Overrides HandTool.OnToolPerform(Character) Implements IMapItem Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.BlockColor.html": {
    "href": "api/AngeliA.BlockColor.html",
    "title": "Class BlockColor | AngeliA",
    "summary": "Class BlockColor Implements IMapItem Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax [Entity.MapEditorGroup(\"System\", 0)] public abstract class BlockColor : IMapItem Properties | Edit this page View Source Color Declaration public abstract Color32 Color { get; } Implements IMapItem Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.BlockColorBlack.html": {
    "href": "api/AngeliA.BlockColorBlack.html",
    "title": "Class BlockColorBlack | AngeliA",
    "summary": "Class BlockColorBlack Implements IMapItem Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public sealed class BlockColorBlack : BlockColor, IMapItem Fields | Edit this page View Source TYPE_ID Declaration public static readonly int TYPE_ID Properties | Edit this page View Source Color Declaration public override Color32 Color { get; } Overrides BlockColor.Color Implements IMapItem Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.BlockColorBlue.html": {
    "href": "api/AngeliA.BlockColorBlue.html",
    "title": "Class BlockColorBlue | AngeliA",
    "summary": "Class BlockColorBlue Implements IMapItem Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public sealed class BlockColorBlue : BlockColor, IMapItem Fields | Edit this page View Source TYPE_ID Declaration public static readonly int TYPE_ID Properties | Edit this page View Source Color Declaration public override Color32 Color { get; } Overrides BlockColor.Color Implements IMapItem Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.BlockColorCyan.html": {
    "href": "api/AngeliA.BlockColorCyan.html",
    "title": "Class BlockColorCyan | AngeliA",
    "summary": "Class BlockColorCyan Implements IMapItem Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public sealed class BlockColorCyan : BlockColor, IMapItem Fields | Edit this page View Source TYPE_ID Declaration public static readonly int TYPE_ID Properties | Edit this page View Source Color Declaration public override Color32 Color { get; } Overrides BlockColor.Color Implements IMapItem Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.BlockColorGreen.html": {
    "href": "api/AngeliA.BlockColorGreen.html",
    "title": "Class BlockColorGreen | AngeliA",
    "summary": "Class BlockColorGreen Implements IMapItem Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public sealed class BlockColorGreen : BlockColor, IMapItem Fields | Edit this page View Source TYPE_ID Declaration public static readonly int TYPE_ID Properties | Edit this page View Source Color Declaration public override Color32 Color { get; } Overrides BlockColor.Color Implements IMapItem Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.BlockColorGrey.html": {
    "href": "api/AngeliA.BlockColorGrey.html",
    "title": "Class BlockColorGrey | AngeliA",
    "summary": "Class BlockColorGrey Implements IMapItem Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public sealed class BlockColorGrey : BlockColor, IMapItem Fields | Edit this page View Source TYPE_ID Declaration public static readonly int TYPE_ID Properties | Edit this page View Source Color Declaration public override Color32 Color { get; } Overrides BlockColor.Color Implements IMapItem Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.BlockColorOrange.html": {
    "href": "api/AngeliA.BlockColorOrange.html",
    "title": "Class BlockColorOrange | AngeliA",
    "summary": "Class BlockColorOrange Implements IMapItem Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public sealed class BlockColorOrange : BlockColor, IMapItem Fields | Edit this page View Source TYPE_ID Declaration public static readonly int TYPE_ID Properties | Edit this page View Source Color Declaration public override Color32 Color { get; } Overrides BlockColor.Color Implements IMapItem Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.BlockColorPink.html": {
    "href": "api/AngeliA.BlockColorPink.html",
    "title": "Class BlockColorPink | AngeliA",
    "summary": "Class BlockColorPink Implements IMapItem Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public sealed class BlockColorPink : BlockColor, IMapItem Fields | Edit this page View Source TYPE_ID Declaration public static readonly int TYPE_ID Properties | Edit this page View Source Color Declaration public override Color32 Color { get; } Overrides BlockColor.Color Implements IMapItem Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.BlockColorPurple.html": {
    "href": "api/AngeliA.BlockColorPurple.html",
    "title": "Class BlockColorPurple | AngeliA",
    "summary": "Class BlockColorPurple Implements IMapItem Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public sealed class BlockColorPurple : BlockColor, IMapItem Fields | Edit this page View Source TYPE_ID Declaration public static readonly int TYPE_ID Properties | Edit this page View Source Color Declaration public override Color32 Color { get; } Overrides BlockColor.Color Implements IMapItem Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.BlockColorRed.html": {
    "href": "api/AngeliA.BlockColorRed.html",
    "title": "Class BlockColorRed | AngeliA",
    "summary": "Class BlockColorRed Implements IMapItem Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public sealed class BlockColorRed : BlockColor, IMapItem Fields | Edit this page View Source TYPE_ID Declaration public static readonly int TYPE_ID Properties | Edit this page View Source Color Declaration public override Color32 Color { get; } Overrides BlockColor.Color Implements IMapItem Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.BlockColorYellow.html": {
    "href": "api/AngeliA.BlockColorYellow.html",
    "title": "Class BlockColorYellow | AngeliA",
    "summary": "Class BlockColorYellow Implements IMapItem Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public sealed class BlockColorYellow : BlockColor, IMapItem Fields | Edit this page View Source TYPE_ID Declaration public static readonly int TYPE_ID Properties | Edit this page View Source Color Declaration public override Color32 Color { get; } Overrides BlockColor.Color Implements IMapItem Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.BlockColoringSystem.html": {
    "href": "api/AngeliA.BlockColoringSystem.html",
    "title": "Class BlockColoringSystem | AngeliA",
    "summary": "Class BlockColoringSystem Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public static class BlockColoringSystem Fields | Edit this page View Source COLOR_POOL Declaration public static readonly Dictionary<int, Color32> COLOR_POOL Methods | Edit this page View Source TryGetColor(int, out Color32) Declaration public static bool TryGetColor(int elementID, out Color32 color)"
  },
  "api/AngeliA.BlockRule.html": {
    "href": "api/AngeliA.BlockRule.html",
    "title": "Struct BlockRule | AngeliA",
    "summary": "Struct BlockRule Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public struct BlockRule Constructors | Edit this page View Source BlockRule(Rule, Rule, Rule, Rule, Rule, Rule, Rule, Rule) Declaration public BlockRule(Rule ruleTL, Rule ruleT, Rule ruleTR, Rule ruleL, Rule ruleR, Rule ruleBL, Rule ruleB, Rule ruleBR) Fields | Edit this page View Source EMPTY Declaration public static readonly BlockRule EMPTY | Edit this page View Source RuleB Declaration public Rule RuleB | Edit this page View Source RuleBL Declaration public Rule RuleBL | Edit this page View Source RuleBR Declaration public Rule RuleBR | Edit this page View Source RuleL Declaration public Rule RuleL | Edit this page View Source RuleR Declaration public Rule RuleR | Edit this page View Source RuleT Declaration public Rule RuleT | Edit this page View Source RuleTL Declaration public Rule RuleTL | Edit this page View Source RuleTR Declaration public Rule RuleTR Properties | Edit this page View Source IsEmpty Declaration public readonly bool IsEmpty { get; } | Edit this page View Source this[int] Declaration public Rule this[int i] { readonly get; set; } Methods | Edit this page View Source IsSameWith(BlockRule) Declaration public readonly bool IsSameWith(BlockRule other) Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.BlockType.html": {
    "href": "api/AngeliA.BlockType.html",
    "title": "Enum BlockType | AngeliA",
    "summary": "Enum BlockType Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public enum BlockType Fields Name Description Background Element Entity Level Extension Methods Extension.Next<BlockType>(BlockType) Extension.Prev<BlockType>(BlockType) Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.BodyCloth.html": {
    "href": "api/AngeliA.BodyCloth.html",
    "title": "Class BodyCloth | AngeliA",
    "summary": "Class BodyCloth Body cloth of a pose-style character. Include body, shoulder and arms Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public abstract class BodyCloth : Cloth Properties | Edit this page View Source ClothType Where should characters wear this cloth Declaration public override sealed ClothType ClothType { get; } Overrides Cloth.ClothType | Edit this page View Source LocalZ Z value for sorting rendering cells Declaration protected virtual int LocalZ { get; } | Edit this page View Source SpriteLoaded True if the artwork sprites are loaded Declaration public override bool SpriteLoaded { get; } Overrides Cloth.SpriteLoaded | Edit this page View Source TwistShiftTopAmount How much does it shift left and right with character's body movement (0 means 0%, 1000 means 100%) Declaration protected virtual int TwistShiftTopAmount { get; } Methods | Edit this page View Source DrawCape(PoseCharacterRenderer, OrientedSprite, int) Draw artwork sprite as cape for given character Declaration public static void DrawCape(PoseCharacterRenderer renderer, OrientedSprite clothSprite, int motionAmount = 1000) Parameters Type Name Description PoseCharacterRenderer renderer Target character OrientedSprite clothSprite Artwork sprite int motionAmount How much does the cape flow with character's movement (0 means 0%, 1000 means 100%) | Edit this page View Source DrawCloth(PoseCharacterRenderer) Draw cloth for the given character Declaration public override void DrawCloth(PoseCharacterRenderer renderer) Overrides Cloth.DrawCloth(PoseCharacterRenderer) | Edit this page View Source DrawClothForBody(PoseCharacterRenderer, OrientedSprite, int, int) Draw artwork sprite as cloth for only \"Body\" of the given character Declaration public static void DrawClothForBody(PoseCharacterRenderer renderer, OrientedSprite clothSprite, int localZ, int twistShiftTopAmount) Parameters Type Name Description PoseCharacterRenderer renderer Target character OrientedSprite clothSprite Artwork sprite int localZ Z value for sorting rendering cells int twistShiftTopAmount How much does it shift left and right with character's body movement | Edit this page View Source DrawClothForLowerArm(PoseCharacterRenderer, OrientedSprite, OrientedSprite, int) Draw artwork sprite as cloth for lower-arms of the given character Declaration public static void DrawClothForLowerArm(PoseCharacterRenderer renderer, OrientedSprite spriteLeft, OrientedSprite spriteRight, int localZ = 1) Parameters Type Name Description PoseCharacterRenderer renderer Target character OrientedSprite spriteLeft Artwork sprite for left lower-arm OrientedSprite spriteRight Artwork sprite for right lower-arm int localZ Z value for sorting rendering cells | Edit this page View Source DrawClothForShoulder(PoseCharacterRenderer, OrientedSprite, OrientedSprite, int) Draw artwork sprite as cloth for shoulders of the given character Declaration public static void DrawClothForShoulder(PoseCharacterRenderer renderer, OrientedSprite spriteLeft, OrientedSprite spriteRight, int localZ = 1) Parameters Type Name Description PoseCharacterRenderer renderer Target character OrientedSprite spriteLeft Artwork sprite for left shoulder OrientedSprite spriteRight Artwork sprite for right shoulder int localZ Z value for sorting rendering cells | Edit this page View Source DrawClothForUpperArm(PoseCharacterRenderer, OrientedSprite, OrientedSprite, int) Draw artwork sprite as cloth for upper-arms of the given character Declaration public static void DrawClothForUpperArm(PoseCharacterRenderer renderer, OrientedSprite spriteLeft, OrientedSprite spriteRight, int localZ = 1) Parameters Type Name Description PoseCharacterRenderer renderer Target character OrientedSprite spriteLeft Artwork sprite for left upper-arm OrientedSprite spriteRight Artwork sprite for right upper-arm int localZ Z value for sorting rendering cells | Edit this page View Source DrawClothFromPool(PoseCharacterRenderer) Draw all body cloths for given character from system pool Declaration public static void DrawClothFromPool(PoseCharacterRenderer renderer) | Edit this page View Source DrawClothGizmos(IRect, Color32, int) Draw cloth as gizmos Declaration public override void DrawClothGizmos(IRect rect, Color32 tint, int z) Parameters Type Name Description IRect rect Rect position in global space Color32 tint Color tint int z Z value for sort rendering cell Overrides Cloth.DrawClothGizmos(IRect, Color32, int) | Edit this page View Source FillFromSheet(string) Load sprite data from Renderer.CurrentSheet Declaration public override bool FillFromSheet(string name) Overrides Cloth.FillFromSheet(string) Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.BodyGadget.html": {
    "href": "api/AngeliA.BodyGadget.html",
    "title": "Class BodyGadget | AngeliA",
    "summary": "Class BodyGadget Representation of a pose character's extra body part. Always use instance from pool. Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public abstract class BodyGadget Examples BodyGadget.TryGetGadget(id, out var result); Properties | Edit this page View Source BodyGadgetSystemReady Declaration public static bool BodyGadgetSystemReady { get; } | Edit this page View Source GadgetID Global unique AngeHash of this body gadget Declaration public int GadgetID { get; } | Edit this page View Source GadgetName Global unique AngeName of this body gadget Declaration public string GadgetName { get; } | Edit this page View Source GadgetType Type of this body gadget Declaration public abstract BodyGadgetType GadgetType { get; } | Edit this page View Source SheetIndex Which artwork sheet does this body gadget get it's artwork from Declaration public int SheetIndex { get; } | Edit this page View Source SpriteLoaded True if artwork sprite is loaded Declaration public virtual bool SpriteLoaded { get; } Methods | Edit this page View Source DrawGadget(PoseCharacterRenderer) Render the gadget for the given character Declaration public abstract void DrawGadget(PoseCharacterRenderer renderer) | Edit this page View Source DrawGadgetGizmos(IRect, Color32, int) Render the gadget as gizmos Declaration public virtual void DrawGadgetGizmos(IRect rect, Color32 tint, int z) Parameters Type Name Description IRect rect Global rect position Color32 tint Color tint int z Z position for sorting | Edit this page View Source FillFromSheet(string) Load sprite data from Renderer.CurrentSheet Declaration public virtual bool FillFromSheet(string basicName) | Edit this page View Source ForAllGadget() Iterate through all body gadgets Declaration public static IEnumerable<KeyValuePair<int, BodyGadget>> ForAllGadget() | Edit this page View Source GetDefaultGadgetID(int, BodyGadgetType) Get body gadget id of the default gadget for the given character Declaration public static int GetDefaultGadgetID(int characterID, BodyGadgetType type) | Edit this page View Source GetDisplayName(string, out int) Declaration public string GetDisplayName(string typeName, out int languageID) | Edit this page View Source TryGetGadget(int, out BodyGadget) Get body gadget instance from system pool Declaration public static bool TryGetGadget(int gadgetID, out BodyGadget gadget) Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.BodyGadgetItem.html": {
    "href": "api/AngeliA.BodyGadgetItem.html",
    "title": "Class BodyGadgetItem | AngeliA",
    "summary": "Class BodyGadgetItem A type of item that holds a body gadget. Implements IMapItem Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public sealed class BodyGadgetItem : NonStackableItem, IMapItem Constructors | Edit this page View Source BodyGadgetItem(int) A type of item that holds a body gadget. Declaration public BodyGadgetItem(int id) Parameters Type Name Description int id ID of the body gadget it holds Properties | Edit this page View Source GadgetID ID of the body gadget it holds Declaration public int GadgetID { get; init; } Methods | Edit this page View Source CanUse(Character) True if this item can be use at current frame Declaration public override bool CanUse(Character holder) Parameters Type Name Description Character holder Holder that trying to use this item Overrides Item.CanUse(Character) | Edit this page View Source DrawItem(Entity, IRect, Color32, int) Call this function to render the item Declaration public override void DrawItem(Entity holder, IRect rect, Color32 tint, int z) Parameters Type Name Description Entity holder Holder that own this item IRect rect Rect position in global space Color32 tint Color tint int z Z value for sort rendering cells Overrides Item.DrawItem(Entity, IRect, Color32, int) | Edit this page View Source Use(Character, int, int, out bool) Perform the logic when the item get used Declaration public override bool Use(Character holder, int inventoryID, int itemIndex, out bool consume) Parameters Type Name Description Character holder Holder that using this item int inventoryID Inventory ID of this holder int itemIndex Index of this item inside the inventory bool consume True if the item should disappear after being used Returns Type Description bool True if the item is used Overrides Item.Use(Character, int, int, out bool) Implements IMapItem Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.BodyGadgetType.html": {
    "href": "api/AngeliA.BodyGadgetType.html",
    "title": "Enum BodyGadgetType | AngeliA",
    "summary": "Enum BodyGadgetType Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public enum BodyGadgetType Fields Name Description Ear Face Hair Horn Tail Wing Extension Methods Extension.Next<BodyGadgetType>(BodyGadgetType) Extension.Prev<BodyGadgetType>(BodyGadgetType) Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.BodyPart.CoverMode.html": {
    "href": "api/AngeliA.BodyPart.CoverMode.html",
    "title": "Enum BodyPart.CoverMode | AngeliA",
    "summary": "Enum BodyPart.CoverMode How cloths is covering the bodypart Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public enum BodyPart.CoverMode Fields Name Description Covered FullCovered None Extension Methods Extension.Next<BodyPart.CoverMode>(BodyPart.CoverMode) Extension.Prev<BodyPart.CoverMode>(BodyPart.CoverMode) Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.BodyPart.html": {
    "href": "api/AngeliA.BodyPart.html",
    "title": "Class BodyPart | AngeliA",
    "summary": "Class BodyPart Representation of a bodypart for a pose-style character Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public class BodyPart Constructors | Edit this page View Source BodyPart(BodyPart, bool, bool) Representation of a bodypart for a pose-style character Declaration public BodyPart(BodyPart parent, bool useLimbFlip, bool rotateWithBody) Parameters Type Name Description BodyPart parent Which bodypart does this bodypart attached on. Set to null if it's not a limb bool useLimbFlip True if the limb flip horizontaly when rotate over specified angle bool rotateWithBody True if the limb apply rotation from body of the character Fields | Edit this page View Source Covered How this bodypart is being covered by cloths Declaration public BodyPart.CoverMode Covered | Edit this page View Source FrontSide True if the bodypart is facing front Declaration public bool FrontSide | Edit this page View Source GlobalX Position X in global space Declaration public int GlobalX | Edit this page View Source GlobalY Position Y in global space Declaration public int GlobalY | Edit this page View Source Height Vertical size of this bodypart Declaration public int Height | Edit this page View Source PivotX Current pivot X of this bodypart (0 means left, 1000 means right) Declaration public int PivotX | Edit this page View Source PivotY Current pivot Y of this bodypart (0 means bottom, 1000 means top) Declaration public int PivotY | Edit this page View Source Rotation Angle of this bodypart Declaration public int Rotation | Edit this page View Source Tint Color tint Declaration public Color32 Tint | Edit this page View Source Width Horizontal size of this bodypart Declaration public int Width | Edit this page View Source X Position X in local space Declaration public int X | Edit this page View Source Y Position Y in local space Declaration public int Y | Edit this page View Source Z Z value for sort rendering cells Declaration public int Z Properties | Edit this page View Source Border Artwork sprite border Declaration public Int4 Border { get; } | Edit this page View Source FacingRight True if this bodypart is facing right Declaration public bool FacingRight { get; } | Edit this page View Source FacingSign Return 1 if this bodypart is facing right Declaration public int FacingSign { get; } | Edit this page View Source FlexableSizeY Height that changes with character's body height Declaration public int FlexableSizeY { get; set; } | Edit this page View Source ID Global unique id for this bodypart Declaration public int ID { get; } | Edit this page View Source IsFullCovered True if this bodypart is totaly covered by cloth Declaration public bool IsFullCovered { get; } | Edit this page View Source LimbParent Which bodypart does this bodypart attached on. Set to null if it's not a limb Declaration public BodyPart LimbParent { get; init; } | Edit this page View Source RotateWithBody True if the limb apply rotation from body of the character Declaration public bool RotateWithBody { get; init; } | Edit this page View Source SizeX Artwork sprite Width in global size Declaration public int SizeX { get; } | Edit this page View Source SizeY Artwork sprite Height in global size Declaration public int SizeY { get; } | Edit this page View Source SpritePivotX Artwork sprite pivot X Declaration public int SpritePivotX { get; } | Edit this page View Source SpritePivotY Artwork sprite pivot Y Declaration public int SpritePivotY { get; } | Edit this page View Source UseLimbFlip True if the limb flip horizontaly when rotate over specified angle Declaration public bool UseLimbFlip { get; init; } Methods | Edit this page View Source GetGlobalCenter() Get current center position in global space Declaration public Int2 GetGlobalCenter() | Edit this page View Source GetGlobalRect() Get current position rect in global space Declaration public IRect GetGlobalRect() | Edit this page View Source GetLocalCenter() Get current center position in local space Declaration public Int2 GetLocalCenter() | Edit this page View Source GlobalLerp(float, float, bool) Get global position that lerp from given value Declaration public Int2 GlobalLerp(float x01, float y01, bool natural = false) Parameters Type Name Description float x01 X lerp value (0 means left, 1 means right) float y01 Y lerp value (0 means bottom, 1 means top) bool natural True if this lerping logic respect character's natural orientation (like Tokino Sora's hairpin should always on her left side) | Edit this page View Source Imitate(BodyPart) Copy motion data from another bodypart without changing anything about data about source sprite Declaration public void Imitate(BodyPart other) | Edit this page View Source LimbRotate(int, int) Rotate the bodypart with \"LimbRotate\" logic Declaration public void LimbRotate(int rotation, int grow = 1000) int grow How much does the limb grow it's size from the rotation (0 means don't grow. 1000 means general amount) | Edit this page View Source SetData(int) Set bodypart data by giving a sprite ID Declaration public void SetData(int id) | Edit this page View Source TryGetSpriteIdFromSheet(Type, string, bool, out int) Get sprite id to rendering bodypart for given type of character Declaration public static bool TryGetSpriteIdFromSheet(Type characterType, string bodyPartName, bool checkForGroup, out int id) Parameters Type Name Description Type characterType Target type of character string bodyPartName Basic name of this bodypart bool checkForGroup True if the sprite can be get from sprite group int id Global ID of the result bodypart Returns Type Description bool True if the id is found Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.BodySetAttribute.html": {
    "href": "api/AngeliA.BodySetAttribute.html",
    "title": "Class BodySetAttribute | AngeliA",
    "summary": "Class BodySetAttribute Treat specified sprites as bodyset for pose-characters Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax [AttributeUsage(AttributeTargets.Assembly, AllowMultiple = true)] public class BodySetAttribute : Attribute Constructors | Edit this page View Source BodySetAttribute(string) Treat specified sprites as bodyset for pose-characters Declaration public BodySetAttribute(string name) Parameters Type Name Description string name The name of the bodyset Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.BodySetItem.html": {
    "href": "api/AngeliA.BodySetItem.html",
    "title": "Class BodySetItem | AngeliA",
    "summary": "Class BodySetItem Represent an item that holds a whole set of bodypart for pose-style characters to apply Implements IMapItem Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public sealed class BodySetItem : NonStackableItem, IMapItem Constructors | Edit this page View Source BodySetItem(string) Declaration public BodySetItem(string basicName) | Edit this page View Source BodySetItem(Type) Declaration public BodySetItem(Type characterType) Properties | Edit this page View Source Data Rendering config data for the bodypart it holds Declaration public CharacterRenderingConfig Data { get; init; } | Edit this page View Source TargetCharacterID ID of the target character for the bodypart it holds Declaration public int TargetCharacterID { get; init; } | Edit this page View Source TargetCharacterName Name of the target character for the bodypart it holds Declaration public string TargetCharacterName { get; init; } Methods | Edit this page View Source CanUse(Character) True if this item can be use at current frame Declaration public override bool CanUse(Character holder) Parameters Type Name Description Character holder Holder that trying to use this item Overrides Item.CanUse(Character) | Edit this page View Source DrawItem(Entity, IRect, Color32, int) Call this function to render the item Declaration public override void DrawItem(Entity holder, IRect rect, Color32 tint, int z) Parameters Type Name Description Entity holder Holder that own this item IRect rect Rect position in global space Color32 tint Color tint int z Z value for sort rendering cells Overrides Item.DrawItem(Entity, IRect, Color32, int) | Edit this page View Source ForAllBodySetCharacterType() Iterate through all body-set the current project have Declaration public static IEnumerable<KeyValuePair<int, (Type, string)>> ForAllBodySetCharacterType() Examples using AngeliA; namespace AngeliaGame; public class Example { [OnGameInitializeLater(4096)] internal static void OnGameUpdate () { Debug.Log(\"All body-set inside this game:\"); foreach (var (id, (type, typeName)) in BodySetItem.ForAllBodySetCharacterType()) { string setName = ItemSystem.GetItemDisplayName(id); Debug.Log($\"{setName} - {typeName}\"); } } } | Edit this page View Source GetDisplayName(string, out int) Get display name for bodyset from language system Declaration public string GetDisplayName(string typeName, out int languageID) | Edit this page View Source Use(Character, int, int, out bool) Perform the logic when the item get used Declaration public override bool Use(Character holder, int inventoryID, int itemIndex, out bool consume) Parameters Type Name Description Character holder Holder that using this item int inventoryID Inventory ID of this holder int itemIndex Index of this item inside the inventory bool consume True if the item should disappear after being used Returns Type Description bool True if the item is used Overrides Item.Use(Character, int, int, out bool) Implements IMapItem Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.Buff.html": {
    "href": "api/AngeliA.Buff.html",
    "title": "Class Buff | AngeliA",
    "summary": "Class Buff Represent a type of buff Implements IMapItem Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax [Entity.MapEditorGroup(\"Buff\", 0)] public abstract class Buff : IMapItem Constructors | Edit this page View Source Buff() Declaration public Buff() Properties | Edit this page View Source DefaultDuration How many frames should this buff apply by default Declaration public abstract int DefaultDuration { get; } | Edit this page View Source DescriptionID Unique angehash for language system to get the description of this buff Declaration public int DescriptionID { get; init; } | Edit this page View Source NameID Unique angehash for language system to get the display name of this buff Declaration public int NameID { get; init; } | Edit this page View Source TypeID Unique angehash of this buff class Declaration public int TypeID { get; init; } | Edit this page View Source TypeName AngeName of this type of buff Declaration public string TypeName { get; init; } Methods | Edit this page View Source BeforeUpdate(Character) Declaration public virtual void BeforeUpdate(Character target) | Edit this page View Source LateUpdate(Character) Declaration public virtual void LateUpdate(Character target) | Edit this page View Source OnCharacterAttack(Character, Bullet) Declaration public virtual void OnCharacterAttack(Character target, Bullet bullet) | Edit this page View Source OnCharacterRenderered(CharacterRenderer) Declaration public virtual void OnCharacterRenderered(CharacterRenderer renderer) Implements IMapItem Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.BuffItem-1.html": {
    "href": "api/AngeliA.BuffItem-1.html",
    "title": "Class BuffItem<B> | AngeliA",
    "summary": "Class BuffItem<B> Item that gives the holder a buff Implements IMapItem Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public abstract class BuffItem<B> : BuffItem, IMapItem where B : Buff Type Parameters Name Description B Type of the buff Constructors | Edit this page View Source BuffItem() Declaration public BuffItem() Implements IMapItem Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.BuffItem.html": {
    "href": "api/AngeliA.BuffItem.html",
    "title": "Class BuffItem | AngeliA",
    "summary": "Class BuffItem Item that gives the holder a buff Implements IMapItem Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public abstract class BuffItem : Item, IMapItem Properties | Edit this page View Source AllowDuplicateUpdate True if same type of item can update multiple times during same frame for same holder Declaration public override bool AllowDuplicateUpdate { get; } Overrides Item.AllowDuplicateUpdate | Edit this page View Source BuffID Type of the buff Declaration public int BuffID { get; init; } | Edit this page View Source MaxStackCount Count limitation for multiple items inside one inventory slot Declaration public override int MaxStackCount { get; } Overrides Item.MaxStackCount Methods | Edit this page View Source OnItemUpdate_FromInventory(Character, int, int) This function is called every frame when this item is in an holder's inventory Declaration public override void OnItemUpdate_FromInventory(Character holder, int inventoryID, int itemIndex) Parameters Type Name Description Character holder The holder of the inventory int inventoryID ID of the inventory Overrides Item.OnItemUpdate_FromInventory(Character, int, int) Implements IMapItem Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.BuiltInSprite.html": {
    "href": "api/AngeliA.BuiltInSprite.html",
    "title": "Class BuiltInSprite | AngeliA",
    "summary": "Class BuiltInSprite Utility class to get built-in sprites Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public static class BuiltInSprite Fields | Edit this page View Source CHECKER_BOARD_16 Declaration public static readonly SpriteCode CHECKER_BOARD_16 | Edit this page View Source CHECKER_BOARD_8 Declaration public static readonly SpriteCode CHECKER_BOARD_8 | Edit this page View Source CHECK_MARK_16 Declaration public static readonly SpriteCode CHECK_MARK_16 | Edit this page View Source CHECK_MARK_32 Declaration public static readonly SpriteCode CHECK_MARK_32 | Edit this page View Source CIRCLE_16 Declaration public static readonly SpriteCode CIRCLE_16 | Edit this page View Source CIRCLE_32 Declaration public static readonly SpriteCode CIRCLE_32 | Edit this page View Source CIRCLE_OUTLINE Declaration public static readonly SpriteCode CIRCLE_OUTLINE | Edit this page View Source COLOR_HUE Declaration public static readonly SpriteCode COLOR_HUE | Edit this page View Source COLOR_HUE_ALT Declaration public static readonly SpriteCode COLOR_HUE_ALT | Edit this page View Source COLOR_WHITE_BAR Declaration public static readonly SpriteCode COLOR_WHITE_BAR | Edit this page View Source DOTTED_LINE_16 Declaration public static readonly SpriteCode DOTTED_LINE_16 | Edit this page View Source DOTTED_LINE_16_SMOOTH Declaration public static readonly SpriteCode DOTTED_LINE_16_SMOOTH | Edit this page View Source DOWN_ARROW Declaration public static readonly SpriteCode DOWN_ARROW | Edit this page View Source EQUAL_16 Declaration public static readonly SpriteCode EQUAL_16 | Edit this page View Source FILE_ICON_AUDIO Declaration public static readonly SpriteCode FILE_ICON_AUDIO | Edit this page View Source FILE_ICON_DISK Declaration public static readonly SpriteCode FILE_ICON_DISK | Edit this page View Source FILE_ICON_FILE Declaration public static readonly SpriteCode FILE_ICON_FILE | Edit this page View Source FILE_ICON_FOLDER Declaration public static readonly SpriteCode FILE_ICON_FOLDER | Edit this page View Source FILE_ICON_FOLDER_EMPTY Declaration public static readonly SpriteCode FILE_ICON_FOLDER_EMPTY | Edit this page View Source FILE_ICON_FONT Declaration public static readonly SpriteCode FILE_ICON_FONT | Edit this page View Source FILE_ICON_IMAGE Declaration public static readonly SpriteCode FILE_ICON_IMAGE | Edit this page View Source FILE_ICON_TEXT Declaration public static readonly SpriteCode FILE_ICON_TEXT | Edit this page View Source FRAME_16 Declaration public static readonly SpriteCode FRAME_16 | Edit this page View Source FRAME_HOLLOW_16 Declaration public static readonly SpriteCode FRAME_HOLLOW_16 | Edit this page View Source GAMEPAD_BODY Declaration public static readonly SpriteCode GAMEPAD_BODY | Edit this page View Source GAMEPAD_DOWN Declaration public static readonly SpriteCode GAMEPAD_DOWN | Edit this page View Source GAMEPAD_EAST Declaration public static readonly SpriteCode GAMEPAD_EAST | Edit this page View Source GAMEPAD_HINT_A Declaration public static readonly SpriteCode GAMEPAD_HINT_A | Edit this page View Source GAMEPAD_HINT_B Declaration public static readonly SpriteCode GAMEPAD_HINT_B | Edit this page View Source GAMEPAD_HINT_DOWN Declaration public static readonly SpriteCode GAMEPAD_HINT_DOWN | Edit this page View Source GAMEPAD_HINT_LEFT Declaration public static readonly SpriteCode GAMEPAD_HINT_LEFT | Edit this page View Source GAMEPAD_HINT_RIGHT Declaration public static readonly SpriteCode GAMEPAD_HINT_RIGHT | Edit this page View Source GAMEPAD_HINT_SELECT Declaration public static readonly SpriteCode GAMEPAD_HINT_SELECT | Edit this page View Source GAMEPAD_HINT_START Declaration public static readonly SpriteCode GAMEPAD_HINT_START | Edit this page View Source GAMEPAD_HINT_UP Declaration public static readonly SpriteCode GAMEPAD_HINT_UP | Edit this page View Source GAMEPAD_LEFT Declaration public static readonly SpriteCode GAMEPAD_LEFT | Edit this page View Source GAMEPAD_LEFT_SHOULDER Declaration public static readonly SpriteCode GAMEPAD_LEFT_SHOULDER | Edit this page View Source GAMEPAD_LEFT_TRIGGER Declaration public static readonly SpriteCode GAMEPAD_LEFT_TRIGGER | Edit this page View Source GAMEPAD_NORTH Declaration public static readonly SpriteCode GAMEPAD_NORTH | Edit this page View Source GAMEPAD_RIGHT Declaration public static readonly SpriteCode GAMEPAD_RIGHT | Edit this page View Source GAMEPAD_RIGHT_SHOULDER Declaration public static readonly SpriteCode GAMEPAD_RIGHT_SHOULDER | Edit this page View Source GAMEPAD_RIGHT_TRIGGER Declaration public static readonly SpriteCode GAMEPAD_RIGHT_TRIGGER | Edit this page View Source GAMEPAD_SELECT Declaration public static readonly SpriteCode GAMEPAD_SELECT | Edit this page View Source GAMEPAD_SOUTH Declaration public static readonly SpriteCode GAMEPAD_SOUTH | Edit this page View Source GAMEPAD_START Declaration public static readonly SpriteCode GAMEPAD_START | Edit this page View Source GAMEPAD_UP Declaration public static readonly SpriteCode GAMEPAD_UP | Edit this page View Source GAMEPAD_WEST Declaration public static readonly SpriteCode GAMEPAD_WEST | Edit this page View Source HINT_BUTTON Declaration public static readonly SpriteCode HINT_BUTTON | Edit this page View Source ICON_BACK Declaration public static readonly SpriteCode ICON_BACK | Edit this page View Source ICON_BODYPART_HEIGHT Declaration public static readonly SpriteCode ICON_BODYPART_HEIGHT | Edit this page View Source ICON_BODY_PART_ARM_HAND Declaration public static readonly SpriteCode ICON_BODY_PART_ARM_HAND | Edit this page View Source ICON_BODY_PART_BODY Declaration public static readonly SpriteCode ICON_BODY_PART_BODY | Edit this page View Source ICON_BODY_PART_EAR Declaration public static readonly SpriteCode ICON_BODY_PART_EAR | Edit this page View Source ICON_BODY_PART_FACE Declaration public static readonly SpriteCode ICON_BODY_PART_FACE | Edit this page View Source ICON_BODY_PART_HAIR Declaration public static readonly SpriteCode ICON_BODY_PART_HAIR | Edit this page View Source ICON_BODY_PART_HAIR_COLOR Declaration public static readonly SpriteCode ICON_BODY_PART_HAIR_COLOR | Edit this page View Source ICON_BODY_PART_HEAD Declaration public static readonly SpriteCode ICON_BODY_PART_HEAD | Edit this page View Source ICON_BODY_PART_HORN Declaration public static readonly SpriteCode ICON_BODY_PART_HORN | Edit this page View Source ICON_BODY_PART_LEG_FOOT Declaration public static readonly SpriteCode ICON_BODY_PART_LEG_FOOT | Edit this page View Source ICON_BODY_PART_SKIN_COLOR Declaration public static readonly SpriteCode ICON_BODY_PART_SKIN_COLOR | Edit this page View Source ICON_BODY_PART_TAIL Declaration public static readonly SpriteCode ICON_BODY_PART_TAIL | Edit this page View Source ICON_BODY_PART_WING Declaration public static readonly SpriteCode ICON_BODY_PART_WING | Edit this page View Source ICON_BRUSH Declaration public static readonly SpriteCode ICON_BRUSH | Edit this page View Source ICON_BUFF Declaration public static readonly SpriteCode ICON_BUFF | Edit this page View Source ICON_CHARACTER_AVATAR Declaration public static readonly SpriteCode ICON_CHARACTER_AVATAR | Edit this page View Source ICON_CLEAR Declaration public static readonly SpriteCode ICON_CLEAR | Edit this page View Source ICON_CROSS Declaration public static readonly SpriteCode ICON_CROSS | Edit this page View Source ICON_DELETE Declaration public static readonly SpriteCode ICON_DELETE | Edit this page View Source ICON_ENTITY Declaration public static readonly SpriteCode ICON_ENTITY | Edit this page View Source ICON_ERROR Declaration public static readonly SpriteCode ICON_ERROR | Edit this page View Source ICON_FILE Declaration public static readonly SpriteCode ICON_FILE | Edit this page View Source ICON_GAMEPAD Declaration public static readonly SpriteCode ICON_GAMEPAD | Edit this page View Source ICON_HOME Declaration public static readonly SpriteCode ICON_HOME | Edit this page View Source ICON_INFO Declaration public static readonly SpriteCode ICON_INFO | Edit this page View Source ICON_MAP Declaration public static readonly SpriteCode ICON_MAP | Edit this page View Source ICON_MENU Declaration public static readonly SpriteCode ICON_MENU | Edit this page View Source ICON_PALETTE Declaration public static readonly SpriteCode ICON_PALETTE | Edit this page View Source ICON_PLUS Declaration public static readonly SpriteCode ICON_PLUS | Edit this page View Source ICON_QUESTION_MARK Declaration public static readonly SpriteCode ICON_QUESTION_MARK | Edit this page View Source ICON_REFRESH Declaration public static readonly SpriteCode ICON_REFRESH | Edit this page View Source ICON_SEARCH Declaration public static readonly SpriteCode ICON_SEARCH | Edit this page View Source ICON_STAR Declaration public static readonly SpriteCode ICON_STAR | Edit this page View Source ICON_SUIT_BODYSUIT Declaration public static readonly SpriteCode ICON_SUIT_BODYSUIT | Edit this page View Source ICON_SUIT_GLOVE Declaration public static readonly SpriteCode ICON_SUIT_GLOVE | Edit this page View Source ICON_SUIT_HAT Declaration public static readonly SpriteCode ICON_SUIT_HAT | Edit this page View Source ICON_SUIT_PANTS Declaration public static readonly SpriteCode ICON_SUIT_PANTS | Edit this page View Source ICON_SUIT_SHOES Declaration public static readonly SpriteCode ICON_SUIT_SHOES | Edit this page View Source ICON_TRIANGLE_DOWN Declaration public static readonly SpriteCode ICON_TRIANGLE_DOWN | Edit this page View Source ICON_TRIANGLE_LEFT Declaration public static readonly SpriteCode ICON_TRIANGLE_LEFT | Edit this page View Source ICON_TRIANGLE_RIGHT Declaration public static readonly SpriteCode ICON_TRIANGLE_RIGHT | Edit this page View Source ICON_TRIANGLE_UP Declaration public static readonly SpriteCode ICON_TRIANGLE_UP | Edit this page View Source ICON_WARNING Declaration public static readonly SpriteCode ICON_WARNING | Edit this page View Source ITEM_ICON_ARMOR Declaration public static readonly SpriteCode ITEM_ICON_ARMOR | Edit this page View Source ITEM_ICON_FOOD Declaration public static readonly SpriteCode ITEM_ICON_FOOD | Edit this page View Source ITEM_ICON_GLOVES Declaration public static readonly SpriteCode ITEM_ICON_GLOVES | Edit this page View Source ITEM_ICON_HAND_TOOL Declaration public static readonly SpriteCode ITEM_ICON_HAND_TOOL | Edit this page View Source ITEM_ICON_HELMET Declaration public static readonly SpriteCode ITEM_ICON_HELMET | Edit this page View Source ITEM_ICON_ITEM Declaration public static readonly SpriteCode ITEM_ICON_ITEM | Edit this page View Source ITEM_ICON_JEWELRY Declaration public static readonly SpriteCode ITEM_ICON_JEWELRY | Edit this page View Source ITEM_ICON_SHOES Declaration public static readonly SpriteCode ITEM_ICON_SHOES | Edit this page View Source ITEM_ICON_WEAPON Declaration public static readonly SpriteCode ITEM_ICON_WEAPON | Edit this page View Source LAMP_LIGHT Declaration public static readonly SpriteCode LAMP_LIGHT | Edit this page View Source LEFT_ARROW Declaration public static readonly SpriteCode LEFT_ARROW | Edit this page View Source MENU_ARROW_MARK Declaration public static readonly SpriteCode MENU_ARROW_MARK | Edit this page View Source MENU_DIALOG_BG Declaration public static readonly SpriteCode MENU_DIALOG_BG | Edit this page View Source MENU_GENERIC_DIALOG_BG Declaration public static readonly SpriteCode MENU_GENERIC_DIALOG_BG | Edit this page View Source MENU_MORE_MARK Declaration public static readonly SpriteCode MENU_MORE_MARK | Edit this page View Source MENU_SELECTION_MARK Declaration public static readonly SpriteCode MENU_SELECTION_MARK | Edit this page View Source MENU_THREE_DOTS Declaration public static readonly SpriteCode MENU_THREE_DOTS | Edit this page View Source PIXEL Declaration public static readonly SpriteCode PIXEL | Edit this page View Source PLUS_16 Declaration public static readonly SpriteCode PLUS_16 | Edit this page View Source RADIAL_DOTTED_RING_24 Declaration public static readonly SpriteCode RADIAL_DOTTED_RING_24 | Edit this page View Source RADIAL_DOTTED_RING_32 Declaration public static readonly SpriteCode RADIAL_DOTTED_RING_32 | Edit this page View Source RIGHT_ARROW Declaration public static readonly SpriteCode RIGHT_ARROW | Edit this page View Source RING_24 Declaration public static readonly SpriteCode RING_24 | Edit this page View Source RING_32 Declaration public static readonly SpriteCode RING_32 | Edit this page View Source SHADOW_LINE_16 Declaration public static readonly SpriteCode SHADOW_LINE_16 | Edit this page View Source SOFT_LINE_H Declaration public static readonly SpriteCode SOFT_LINE_H | Edit this page View Source SOFT_LINE_V Declaration public static readonly SpriteCode SOFT_LINE_V | Edit this page View Source TRIANGLE_13 Declaration public static readonly SpriteCode TRIANGLE_13 | Edit this page View Source TRIANGLE_RIGHT_13 Declaration public static readonly SpriteCode TRIANGLE_RIGHT_13 | Edit this page View Source UI_BUTTON Declaration public static readonly SpriteCode UI_BUTTON | Edit this page View Source UI_BUTTON_DOWN Declaration public static readonly SpriteCode UI_BUTTON_DOWN | Edit this page View Source UI_BUTTON_HOVER Declaration public static readonly SpriteCode UI_BUTTON_HOVER | Edit this page View Source UI_DARK_BUTTON Declaration public static readonly SpriteCode UI_DARK_BUTTON | Edit this page View Source UI_DARK_BUTTON_DOWN Declaration public static readonly SpriteCode UI_DARK_BUTTON_DOWN | Edit this page View Source UI_DARK_BUTTON_HOVER Declaration public static readonly SpriteCode UI_DARK_BUTTON_HOVER | Edit this page View Source UI_HOLO_BUTTON Declaration public static readonly SpriteCode UI_HOLO_BUTTON | Edit this page View Source UI_INPUT_FIELD Declaration public static readonly SpriteCode UI_INPUT_FIELD | Edit this page View Source UI_INPUT_FIELD_LARGE Declaration public static readonly SpriteCode UI_INPUT_FIELD_LARGE | Edit this page View Source UI_INPUT_FIELD_SMALL Declaration public static readonly SpriteCode UI_INPUT_FIELD_SMALL | Edit this page View Source UI_ITEM_FRAME Declaration public static readonly SpriteCode UI_ITEM_FRAME | Edit this page View Source UI_LARGE_TOGGLE Declaration public static readonly SpriteCode UI_LARGE_TOGGLE | Edit this page View Source UI_LARGE_TOGGLE_DOWN Declaration public static readonly SpriteCode UI_LARGE_TOGGLE_DOWN | Edit this page View Source UI_LARGE_TOGGLE_HOVER Declaration public static readonly SpriteCode UI_LARGE_TOGGLE_HOVER | Edit this page View Source UI_MINI_BUTTON_DARK Declaration public static readonly SpriteCode UI_MINI_BUTTON_DARK | Edit this page View Source UI_MINI_BUTTON_DARK_DOWN Declaration public static readonly SpriteCode UI_MINI_BUTTON_DARK_DOWN | Edit this page View Source UI_MINI_BUTTON_DARK_HOVER Declaration public static readonly SpriteCode UI_MINI_BUTTON_DARK_HOVER | Edit this page View Source UI_SCROLL_BAR Declaration public static readonly SpriteCode UI_SCROLL_BAR | Edit this page View Source UI_SLIDER_BODY Declaration public static readonly SpriteCode UI_SLIDER_BODY | Edit this page View Source UI_SLIDER_FILL Declaration public static readonly SpriteCode UI_SLIDER_FILL | Edit this page View Source UI_SLIDER_HANDLE Declaration public static readonly SpriteCode UI_SLIDER_HANDLE | Edit this page View Source UI_SMALL_BUTTON Declaration public static readonly SpriteCode UI_SMALL_BUTTON | Edit this page View Source UI_SMALL_BUTTON_DOWN Declaration public static readonly SpriteCode UI_SMALL_BUTTON_DOWN | Edit this page View Source UI_SMALL_BUTTON_HOVER Declaration public static readonly SpriteCode UI_SMALL_BUTTON_HOVER | Edit this page View Source UI_TAB Declaration public static readonly SpriteCode UI_TAB | Edit this page View Source UI_TOGGLE Declaration public static readonly SpriteCode UI_TOGGLE | Edit this page View Source UI_TOGGLE_DOWN Declaration public static readonly SpriteCode UI_TOGGLE_DOWN | Edit this page View Source UI_TOGGLE_HOVER Declaration public static readonly SpriteCode UI_TOGGLE_HOVER | Edit this page View Source UI_TOGGLE_MARK Declaration public static readonly SpriteCode UI_TOGGLE_MARK | Edit this page View Source UP_ARROW Declaration public static readonly SpriteCode UP_ARROW"
  },
  "api/AngeliA.BuiltInText.html": {
    "href": "api/AngeliA.BuiltInText.html",
    "title": "Class BuiltInText | AngeliA",
    "summary": "Class BuiltInText Utility class to get built-in text through language system Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public static class BuiltInText Fields | Edit this page View Source HINT_ADJUST Declaration public static readonly LanguageCode HINT_ADJUST | Edit this page View Source HINT_ATTACK Declaration public static readonly LanguageCode HINT_ATTACK | Edit this page View Source HINT_DRIVE Declaration public static readonly LanguageCode HINT_DRIVE | Edit this page View Source HINT_JUMP Declaration public static readonly LanguageCode HINT_JUMP | Edit this page View Source HINT_MOVE Declaration public static readonly LanguageCode HINT_MOVE | Edit this page View Source HINT_SHOW_MENU Declaration public static readonly LanguageCode HINT_SHOW_MENU | Edit this page View Source HINT_STOP_DRIVE Declaration public static readonly LanguageCode HINT_STOP_DRIVE | Edit this page View Source HINT_SWITCH_PLAYER Declaration public static readonly LanguageCode HINT_SWITCH_PLAYER | Edit this page View Source HINT_USE Declaration public static readonly LanguageCode HINT_USE | Edit this page View Source LABEL_B Declaration public static readonly LanguageCode LABEL_B | Edit this page View Source LABEL_BOTTOM Declaration public static readonly LanguageCode LABEL_BOTTOM | Edit this page View Source LABEL_D Declaration public static readonly LanguageCode LABEL_D | Edit this page View Source LABEL_DOWN Declaration public static readonly LanguageCode LABEL_DOWN | Edit this page View Source LABEL_L Declaration public static readonly LanguageCode LABEL_L | Edit this page View Source LABEL_LEFT Declaration public static readonly LanguageCode LABEL_LEFT | Edit this page View Source LABEL_R Declaration public static readonly LanguageCode LABEL_R | Edit this page View Source LABEL_RIGHT Declaration public static readonly LanguageCode LABEL_RIGHT | Edit this page View Source LABEL_T Declaration public static readonly LanguageCode LABEL_T | Edit this page View Source LABEL_TOP Declaration public static readonly LanguageCode LABEL_TOP | Edit this page View Source LABEL_U Declaration public static readonly LanguageCode LABEL_U | Edit this page View Source LABEL_UP Declaration public static readonly LanguageCode LABEL_UP | Edit this page View Source UI_ADD Declaration public static readonly LanguageCode UI_ADD | Edit this page View Source UI_APPLY Declaration public static readonly LanguageCode UI_APPLY | Edit this page View Source UI_BACK Declaration public static readonly LanguageCode UI_BACK | Edit this page View Source UI_CANCEL Declaration public static readonly LanguageCode UI_CANCEL | Edit this page View Source UI_CONTINUE Declaration public static readonly LanguageCode UI_CONTINUE | Edit this page View Source UI_DEBUG Declaration public static readonly LanguageCode UI_DEBUG | Edit this page View Source UI_DELETE Declaration public static readonly LanguageCode UI_DELETE | Edit this page View Source UI_DONT_SAVE Declaration public static readonly LanguageCode UI_DONT_SAVE | Edit this page View Source UI_EMPTY Declaration public static readonly LanguageCode UI_EMPTY | Edit this page View Source UI_EXPLORE Declaration public static readonly LanguageCode UI_EXPLORE | Edit this page View Source UI_GAMEOVER Declaration public static readonly LanguageCode UI_GAMEOVER | Edit this page View Source UI_IGNORE Declaration public static readonly LanguageCode UI_IGNORE | Edit this page View Source UI_LOCK Declaration public static readonly LanguageCode UI_LOCK | Edit this page View Source UI_MENU Declaration public static readonly LanguageCode UI_MENU | Edit this page View Source UI_NO Declaration public static readonly LanguageCode UI_NO | Edit this page View Source UI_NONE Declaration public static readonly LanguageCode UI_NONE | Edit this page View Source UI_OFF Declaration public static readonly LanguageCode UI_OFF | Edit this page View Source UI_OK Declaration public static readonly LanguageCode UI_OK | Edit this page View Source UI_ON Declaration public static readonly LanguageCode UI_ON | Edit this page View Source UI_OPEN Declaration public static readonly LanguageCode UI_OPEN | Edit this page View Source UI_QUIT Declaration public static readonly LanguageCode UI_QUIT | Edit this page View Source UI_QUIT_GAME Declaration public static readonly LanguageCode UI_QUIT_GAME | Edit this page View Source UI_RENAME Declaration public static readonly LanguageCode UI_RENAME | Edit this page View Source UI_RESET Declaration public static readonly LanguageCode UI_RESET | Edit this page View Source UI_RESTART Declaration public static readonly LanguageCode UI_RESTART | Edit this page View Source UI_SAVE Declaration public static readonly LanguageCode UI_SAVE | Edit this page View Source UI_SETTING Declaration public static readonly LanguageCode UI_SETTING | Edit this page View Source UI_UNLOCK Declaration public static readonly LanguageCode UI_UNLOCK | Edit this page View Source UI_YES Declaration public static readonly LanguageCode UI_YES"
  },
  "api/AngeliA.Bullet.html": {
    "href": "api/AngeliA.Bullet.html",
    "title": "Class Bullet | AngeliA",
    "summary": "Class Bullet An entity represent bullet from weapons that deal damage to IDamageReceiver Implements IMapItem Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax [Entity.Capacity(128, 0)] [Entity.Layer(5)] public abstract class Bullet : Entity, IMapItem Fields | Edit this page View Source Damage Final damage value Declaration public readonly FrameBasedInt Damage Properties | Edit this page View Source AttackCharged True if the attack is charged Declaration public bool AttackCharged { get; } | Edit this page View Source AttackIndex Index for style of the attack from the sender Declaration public int AttackIndex { get; } | Edit this page View Source BasicDamage Intrinsic damage value Declaration protected virtual int BasicDamage { get; } | Edit this page View Source DamageType What extra type of damage does this bullet deal Declaration public Tag DamageType { get; set; } | Edit this page View Source Duration How long can this bullet exists on stage in frame Declaration public virtual int Duration { get; } | Edit this page View Source EnvironmentHitCount How many environment collider can this bullet hit without getting despawn Declaration protected virtual int EnvironmentHitCount { get; } | Edit this page View Source EnvironmentMask Group of physics layers for checking environment that this bullet can react with Declaration protected virtual int EnvironmentMask { get; } | Edit this page View Source FailbackTargetTeam Default team for checking attack target Declaration public int FailbackTargetTeam { get; set; } | Edit this page View Source ReceiverHitCount How many target collider can this bullet hit without getting despawn Declaration protected virtual int ReceiverHitCount { get; } | Edit this page View Source ReceiverMask Group of physics layers for checking target that this bullet can react with Declaration protected virtual int ReceiverMask { get; } | Edit this page View Source RoundHitCheck True if the bullet check for target in a round shaped range Declaration protected virtual bool RoundHitCheck { get; } | Edit this page View Source Sender This entity send the bullet Declaration public Entity Sender { get; set; } | Edit this page View Source TargetTeam Team data for checking which group of target should be attack Declaration public int TargetTeam { get; } Methods | Edit this page View Source BeforeDespawn(IDamageReceiver) This function is called before the bullet get despawn by performing damage logic Declaration protected virtual void BeforeDespawn(IDamageReceiver receiver) Parameters Type Name Description IDamageReceiver receiver The target it hits | Edit this page View Source BeforeUpdate() [2/4] This function is called every frame when entity is in stage. Prioritize using this function to update physics logic. Declaration public override void BeforeUpdate() Overrides Entity.BeforeUpdate() | Edit this page View Source EnvironmentHitCheck(out bool) Check for hitting any environment block Declaration protected void EnvironmentHitCheck(out bool requireSelfDestroy) Parameters Type Name Description bool requireSelfDestroy True if this bullet should be despawn | Edit this page View Source GetDamage() Get the damage data using by this bullet to deal damage Declaration public Damage GetDamage() | Edit this page View Source GroundCheck(out Color32) True if the bullet is touching ground Declaration public bool GroundCheck(out Color32 groundTint) | Edit this page View Source OnActivated() This function is called when entity enter the stage Declaration public override void OnActivated() Overrides Entity.OnActivated() | Edit this page View Source PerformHitEnvironment(out bool) This function is called when the bullet hit environment colliders Declaration protected virtual void PerformHitEnvironment(out bool requireSelfDestroy) Parameters Type Name Description bool requireSelfDestroy True if this bullet should be despawn | Edit this page View Source PerformHitReceiver(IDamageReceiver, out bool) This function is called when the bullet hit IDamageReceiver Declaration protected virtual void PerformHitReceiver(IDamageReceiver receiver, out bool requireSelfDestroy) Parameters Type Name Description IDamageReceiver receiver The target it hits bool requireSelfDestroy True if this bullet should be despawn | Edit this page View Source ReceiverHitCheck(out bool) Check for hitting any IDamageReceiver Declaration protected void ReceiverHitCheck(out bool requireSelfDestroy) Parameters Type Name Description bool requireSelfDestroy True if this bullet should be despawn | Edit this page View Source Update() [3/4] This function is called every frame when entity is in stage. Prioritize using this function to update physics logic. Declaration public override void Update() Overrides Entity.Update() Implements IMapItem Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.Cell.html": {
    "href": "api/AngeliA.Cell.html",
    "title": "Class Cell | AngeliA",
    "summary": "Class Cell Rendering cell Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public class Cell Fields | Edit this page View Source BorderSide Which side does this cell belongs to when it's rendered in 9-slice mode Declaration public Alignment BorderSide | Edit this page View Source Color Declaration public Color32 Color | Edit this page View Source EMPTY Declaration public static readonly Cell EMPTY | Edit this page View Source Height Declaration public int Height | Edit this page View Source PivotX Which place of the cell should be align with the X position. 0 means left edge, 1 means right edge. Declaration public float PivotX | Edit this page View Source PivotY Which place of the cell should be align with the Y position. 0 means bottom edge, 1 means top edge. Declaration public float PivotY | Edit this page View Source Rotation1000 Actual rotation data of the cell, 0 means up, 90000 means right Declaration public int Rotation1000 | Edit this page View Source SheetIndex Which sprite sheet does this cell use. -1 means main sheet. Declaration public int SheetIndex | Edit this page View Source Shift How many edge should be clip off. 0 means no clip off, set left into \"width\" means clip off all of them Declaration public Int4 Shift | Edit this page View Source Sprite Declaration public AngeSprite Sprite | Edit this page View Source Width Declaration public int Width | Edit this page View Source X Declaration public int X | Edit this page View Source Y Declaration public int Y | Edit this page View Source Z Z position for sorting Declaration public int Z Properties | Edit this page View Source Rotation Rotation of the cell, 0 means up, 90 means right Declaration public int Rotation { get; set; } | Edit this page View Source TextSprite Sprite for rendering text character Declaration public CharSprite TextSprite { get; set; } Methods | Edit this page View Source Clamp(IRect) Clamp the content inside the given rect range Declaration public void Clamp(IRect rect) | Edit this page View Source CopyFrom(Cell) Declaration public void CopyFrom(Cell other) | Edit this page View Source GetGlobalBounds() Get the boundary occupied by the cell Declaration public IRect GetGlobalBounds() | Edit this page View Source GlobalLerp(float, float) Declaration public Int2 GlobalLerp(float x01, float y01) | Edit this page View Source GlobalToLocal(int, int) Declaration public Int2 GlobalToLocal(int globalX, int globalY) | Edit this page View Source LocalToGlobal(int, int) Declaration public Int2 LocalToGlobal(int localX, int localY) | Edit this page View Source ReturnPivots() Set pivot of the cell into (0,0) and let position adapt, so the final position of the cell remain the same Declaration public void ReturnPivots() | Edit this page View Source ReturnPivots(float, float) Set pivot of the cell and let position adapt, so the final position of the cell remain the same Declaration public void ReturnPivots(float newPivotX, float newPivotY) | Edit this page View Source ReturnPosition(int, int) Set position of the cell and let pivot adapt, so the final position of the cell remain the same Declaration public void ReturnPosition(int globalX, int globalY) | Edit this page View Source RotateAround(int, int, int) Rotate the cell around the given position Declaration public void RotateAround(int rotation, int pointX, int pointY) | Edit this page View Source ScaleFrom(int, int, int) Scale the cell based on the given position Declaration public void ScaleFrom(int scale, int pointX, int pointY) | Edit this page View Source ScaleFrom(float, int, int) Scale the cell based on the given position Declaration public void ScaleFrom(float scale, int pointX, int pointY) | Edit this page View Source SetRect(IRect) Set X,Y,Width,Height with a rect Declaration public void SetRect(IRect rect) Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.CellScreenshotSystem.Screenshot.html": {
    "href": "api/AngeliA.CellScreenshotSystem.Screenshot.html",
    "title": "Class CellScreenshotSystem.Screenshot | AngeliA",
    "summary": "Class CellScreenshotSystem.Screenshot Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public class CellScreenshotSystem.Screenshot Fields | Edit this page View Source CreatedDate Declaration public long CreatedDate | Edit this page View Source FilePath Declaration public string FilePath | Edit this page View Source Locked Declaration public bool Locked | Edit this page View Source Range Declaration public IRect Range | Edit this page View Source SkyBottom Declaration public Color32 SkyBottom | Edit this page View Source SkyTop Declaration public Color32 SkyTop Methods | Edit this page View Source Read(BinaryReader) Declaration public void Read(BinaryReader reader) | Edit this page View Source Write(BinaryWriter) Declaration public void Write(BinaryWriter writer) Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.CellScreenshotSystem.html": {
    "href": "api/AngeliA.CellScreenshotSystem.html",
    "title": "Class CellScreenshotSystem | AngeliA",
    "summary": "Class CellScreenshotSystem Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public static class CellScreenshotSystem Properties | Edit this page View Source Count Declaration public static int Count { get; } Methods | Edit this page View Source DeleteScreenshot(int, bool) Declaration public static void DeleteScreenshot(int index, bool dontDeleteLocked = true) | Edit this page View Source DrawScreenshot(Screenshot, IRect, Color32, int, int, bool) Declaration public static void DrawScreenshot(CellScreenshotSystem.Screenshot screenshot, IRect rect, Color32 tint, int z = 0, int layer = 7, bool fit = true) | Edit this page View Source DrawScreenshot(Screenshot, IRect, FRect, Color32, int, int, bool) Declaration public static void DrawScreenshot(CellScreenshotSystem.Screenshot screenshot, IRect rect, FRect sourceRange, Color32 tint, int z = 0, int layer = 7, bool fit = true) | Edit this page View Source DrawScreenshot(Screenshot, IRect, FRect, int, int, bool) Declaration public static void DrawScreenshot(CellScreenshotSystem.Screenshot screenshot, IRect rect, FRect sourceRange, int z = 0, int layer = 7, bool fit = true) | Edit this page View Source DrawScreenshot(Screenshot, IRect, int, int, bool) Declaration public static void DrawScreenshot(CellScreenshotSystem.Screenshot screenshot, IRect rect, int z = 0, int layer = 7, bool fit = true) | Edit this page View Source GetScreenshot(int) Declaration public static CellScreenshotSystem.Screenshot GetScreenshot(int index) | Edit this page View Source RequireTakeScreenshot(IRect, int) Declaration public static void RequireTakeScreenshot(IRect cameraRange, int delay = 0) | Edit this page View Source SetScreenshotLock(int, bool) Declaration public static void SetScreenshotLock(int index, bool locked) | Edit this page View Source TakeScreenshotImmediately(IRect, bool) Declaration public static CellScreenshotSystem.Screenshot TakeScreenshotImmediately(IRect cameraRange, bool saveToSystem = true)"
  },
  "api/AngeliA.CellZScope.html": {
    "href": "api/AngeliA.CellZScope.html",
    "title": "Struct CellZScope | AngeliA",
    "summary": "Struct CellZScope Scope to change rendering cell z value Implements IDisposable Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public readonly struct CellZScope : IDisposable Examples using AngeliA; namespace AngeliaGame; public class Example { [OnGameUpdate] internal static void OnGameUpdate () { int newZ = 0; using (new CellZScope(newZ)) { // Rendering cell created inside will have their z value override } } } Constructors | Edit this page View Source CellZScope(int) Scope to change rendering cell z value Declaration public CellZScope(int z) Examples using AngeliA; namespace AngeliaGame; public class Example { [OnGameUpdate] internal static void OnGameUpdate () { int newZ = 0; using (new CellZScope(newZ)) { // Rendering cell created inside will have their z value override } } } Methods | Edit this page View Source Dispose() Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources. Declaration public void Dispose() Implements IDisposable Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.ChangeSavingSlotTask.html": {
    "href": "api/AngeliA.ChangeSavingSlotTask.html",
    "title": "Class ChangeSavingSlotTask | AngeliA",
    "summary": "Class ChangeSavingSlotTask Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public class ChangeSavingSlotTask : Task Fields | Edit this page View Source TYPE_ID Declaration public static readonly int TYPE_ID Methods | Edit this page View Source FrameUpdate() Declaration public override TaskResult FrameUpdate() Overrides Task.FrameUpdate() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.CharSprite.html": {
    "href": "api/AngeliA.CharSprite.html",
    "title": "Class CharSprite | AngeliA",
    "summary": "Class CharSprite Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public class CharSprite Fields | Edit this page View Source Advance Declaration public float Advance | Edit this page View Source Char Declaration public char Char | Edit this page View Source FontIndex Declaration public int FontIndex | Edit this page View Source NONE Declaration public static readonly CharSprite NONE | Edit this page View Source Offset Declaration public FRect Offset | Edit this page View Source Texture Declaration public object Texture Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.Character.html": {
    "href": "api/AngeliA.Character.html",
    "title": "Class Character | AngeliA",
    "summary": "Class Character General representation of characters in AngeliA games Implements IMapItem IDamageReceiver ICarrier IWithCharacterMovement IWithCharacterAttackness IWithCharacterHealth IWithCharacterBuff IWithCharacterRenderer Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax [Entity.MapEditorGroup(\"Character\", 0)] [Entity.Layer(2)] public abstract class Character : Rigidbody, IMapItem, IDamageReceiver, ICarrier, IWithCharacterMovement, IWithCharacterAttackness, IWithCharacterHealth, IWithCharacterBuff, IWithCharacterRenderer Constructors | Edit this page View Source Character() Declaration public Character() Fields | Edit this page View Source Attackness Instance of the current functioning attackness behaviour Declaration public CharacterAttackness Attackness | Edit this page View Source Buff Instance of the buff behaviour Declaration public readonly CharacterBuff Buff | Edit this page View Source FullSleepDuration How long does it takes to get into full sleep Declaration public readonly FrameBasedInt FullSleepDuration | Edit this page View Source Health Instance of the current functioning health behaviour Declaration public CharacterHealth Health | Edit this page View Source Movement Instance of the current functioning movement behaviour Declaration public CharacterMovement Movement | Edit this page View Source NativeAttackness Instance of the attackness behaviour from the character themselfs Declaration public readonly CharacterAttackness NativeAttackness | Edit this page View Source NativeHealth Instance of the health behaviour from the character themselfs Declaration public readonly CharacterHealth NativeHealth | Edit this page View Source NativeMovement Instance of the movement behaviour from the character themselfs Declaration public readonly CharacterMovement NativeMovement | Edit this page View Source NativeRenderer Instance of the rendering behaviour from the character themselfs Declaration public readonly CharacterRenderer NativeRenderer | Edit this page View Source Rendering Instance of the current functioning rendering behaviour Declaration public CharacterRenderer Rendering | Edit this page View Source TeleportDuration How long does it takes to complete teleport Declaration public readonly FrameBasedInt TeleportDuration Properties | Edit this page View Source AirDragX Amount of horizontal speed lost every frame Declaration public override int AirDragX { get; } Overrides Rigidbody.AirDragX | Edit this page View Source AirDragY Amount of vertical speed lost every frame Declaration public override int AirDragY { get; } Overrides Rigidbody.AirDragY | Edit this page View Source AllowBeingPush True if this entity can be push by other Declaration public override bool AllowBeingPush { get; } Overrides Rigidbody.AllowBeingPush | Edit this page View Source AnimationType Current animation type of this character is showing Declaration public CharacterAnimationType AnimationType { get; set; } | Edit this page View Source AttackTargetTeam Target team for dealing damage to other Declaration public virtual int AttackTargetTeam { get; } | Edit this page View Source BodySuitInteractable True if this character can equip body armor from equipment items (not effect cloths) Declaration public bool BodySuitInteractable { get; set; } | Edit this page View Source Bouncy How bouncy is this character appears to be (150 by default) Declaration public virtual int Bouncy { get; } | Edit this page View Source CarryOtherOnTop Trhe if this entity can carry other ICarrier on top Declaration public override bool CarryOtherOnTop { get; } Overrides Rigidbody.CarryOtherOnTop | Edit this page View Source CharacterState Current general game state of this character Declaration public CharacterState CharacterState { get; } | Edit this page View Source CurrentAttackSpeedRate How fast should the character attacks (0 means couldn't attack, 1000 means normal speed) Declaration public int CurrentAttackSpeedRate { get; } | Edit this page View Source DefaultCharacterHeight Intrinsic body height of this character in cm Declaration public virtual int DefaultCharacterHeight { get; } | Edit this page View Source DespawnAfterPassoutDelay How many frames does this character despawn after passout. Set to -1 if they don't despawn Declaration public int DespawnAfterPassoutDelay { get; set; } | Edit this page View Source EjectWhenInsideGround True if this entity try to move out of ground automatically when it stuck inside ground Declaration public override bool EjectWhenInsideGround { get; } Overrides Rigidbody.EjectWhenInsideGround | Edit this page View Source FacingRight True if this entity is facing right side Declaration public override bool FacingRight { get; } Overrides Rigidbody.FacingRight | Edit this page View Source FinalCharacterHeight Get the height of this character in global space Declaration public virtual int FinalCharacterHeight { get; } | Edit this page View Source GlovesInteractable True if this character can equip gloves from equipment items (not effect cloths) Declaration public bool GlovesInteractable { get; set; } | Edit this page View Source HandToolInteractable True if this character can equip handtool from equipment items Declaration public bool HandToolInteractable { get; set; } | Edit this page View Source HelmetInteractable True if this character can equip helmet from equipment items (not effect cloths) Declaration public bool HelmetInteractable { get; set; } | Edit this page View Source IgnoreDamageType Do not take damage in these types Declaration public virtual Tag IgnoreDamageType { get; } | Edit this page View Source InventoryColumn Column count for this character's inventory Declaration public virtual int InventoryColumn { get; } | Edit this page View Source InventoryID Unique ID of this character from inventory system Declaration public int InventoryID { get; } | Edit this page View Source InventoryRow Row count for this character's inventory Declaration public virtual int InventoryRow { get; } | Edit this page View Source InventoryType Which type of inventory does this character have Declaration public virtual CharacterInventoryType InventoryType { get; } | Edit this page View Source JewelryInteractable True if this character can equip jewelry from equipment items Declaration public bool JewelryInteractable { get; set; } | Edit this page View Source LastRequireBounceFrame Frame when character last start to bounce Declaration public int LastRequireBounceFrame { get; set; } | Edit this page View Source PassOutFrame Frame when character passout Declaration public int PassOutFrame { get; } | Edit this page View Source PhysicalLayer Which physical layer should this entity fill it's collider in Declaration public override sealed int PhysicalLayer { get; } Overrides Rigidbody.PhysicalLayer | Edit this page View Source RenderingCellIndex First rendering cell's index for current frame Declaration public int RenderingCellIndex { get; } | Edit this page View Source SelfCollisionMask Intrinsic physics layers this entity should collide with Declaration public override sealed int SelfCollisionMask { get; } Overrides Rigidbody.SelfCollisionMask | Edit this page View Source ShoesInteractable True if this character can equip shoes from equipment items (not effect cloths) Declaration public bool ShoesInteractable { get; set; } | Edit this page View Source SleepStartFrame Frame when character start to sleep Declaration public int SleepStartFrame { get; set; } | Edit this page View Source Team Target team for taking damage from other Declaration public virtual int Team { get; } | Edit this page View Source TeleportEndFrame End frame of the end of teleport Declaration public int TeleportEndFrame { get; } | Edit this page View Source TeleportToFrontSide True if the character is teleporting to front side layer (closer to camera) Declaration public bool TeleportToFrontSide { get; } | Edit this page View Source Teleporting True if the character is teleporting Declaration public bool Teleporting { get; } | Edit this page View Source TeleportingWithPortal True if the character is teleporting with a portal Declaration public bool TeleportingWithPortal { get; } Methods | Edit this page View Source AfterReposition(Int3, Int3) This function is called when the entity's map position got repositioned by stage Declaration public override void AfterReposition(Int3 fromUnitPos, Int3 toUnitPos) Overrides Entity.AfterReposition(Int3, Int3) | Edit this page View Source BeforeUpdate() [2/4] This function is called every frame when entity is in stage. Prioritize using this function to update physics logic. Declaration public override void BeforeUpdate() Overrides Entity.BeforeUpdate() | Edit this page View Source Bounce() Make the character bounce Declaration public void Bounce() | Edit this page View Source CancelBounce() Stop the character from bouncing Declaration public void CancelBounce() | Edit this page View Source CreateNativeAttackness() Create new instance for character's intrinsic attackness behaviour Declaration protected virtual CharacterAttackness CreateNativeAttackness() | Edit this page View Source CreateNativeHealth() Create new instance for character's intrinsic health behaviour Declaration protected virtual CharacterHealth CreateNativeHealth() | Edit this page View Source CreateNativeMovement() Create new instance for character's intrinsic movement behaviour Declaration protected virtual CharacterMovement CreateNativeMovement() | Edit this page View Source CreateNativeRenderer() Create new instance for character's intrinsic rendering behaviour Declaration protected virtual CharacterRenderer CreateNativeRenderer() | Edit this page View Source EnterTeleportState(bool, bool, bool) Make character apears to be teleported. This will not actually teleport the character. Declaration public void EnterTeleportState(bool front, bool portal, bool lastHalfOnly = false) Parameters Type Name Description bool front True if teleport to front layer bool portal True if teleport by a portal bool lastHalfOnly True if only shows the last half part of the teleport | Edit this page View Source EquipmentAvailable(EquipmentType) True if given type of equipment is available for this character Declaration public bool EquipmentAvailable(EquipmentType equipmentType) | Edit this page View Source FirstUpdate() [1/4] This function is called every frame when entity is in stage. Prioritize using this function to fill collider in to physics system. Declaration public override void FirstUpdate() Overrides Rigidbody.FirstUpdate() | Edit this page View Source GetBonusFromFullSleep() Give the character all bonus from full sleep Declaration public void GetBonusFromFullSleep() | Edit this page View Source GetCurrentPoseAnimationType() Calculate which type of animation should this character shows Declaration public virtual CharacterAnimationType GetCurrentPoseAnimationType() | Edit this page View Source GetDescription() Get character's description from language system Declaration public string GetDescription() | Edit this page View Source GetDisplayName() Get character's display name from language system Declaration public string GetDisplayName() | Edit this page View Source IgnoreDamageFromLevel(int) Make character not taking damage from level blocks for specified frames long Declaration public void IgnoreDamageFromLevel(int duration = 1) | Edit this page View Source InsideGroundCheck() Function that holds the stuch inside ground checking logic Declaration protected override bool InsideGroundCheck() Overrides Rigidbody.InsideGroundCheck() | Edit this page View Source IsAttackAllowedByEquipment() True if character can perform attack unfer current equipment set Declaration public virtual bool IsAttackAllowedByEquipment() | Edit this page View Source IsAttackAllowedByMovement() True if character can perform attack under current movement Declaration public virtual bool IsAttackAllowedByMovement() | Edit this page View Source LateUpdate() [4/4] This function is called every frame when entity is in stage. Prioritize using this function to render the entity. Declaration public override void LateUpdate() Overrides Entity.LateUpdate() | Edit this page View Source LockAnimationType(CharacterAnimationType, int) Force character to show the given type of animation for specified frames long Declaration public void LockAnimationType(CharacterAnimationType type, int duration = 1) | Edit this page View Source OnActivated() This function is called when entity enter the stage Declaration public override void OnActivated() Overrides Rigidbody.OnActivated() | Edit this page View Source OnCharacterRendered() This function is called after character is rendered Declaration public virtual void OnCharacterRendered() | Edit this page View Source OnDamaged(Damage) This function is called when character take damage Declaration public virtual void OnDamaged(Damage damage) | Edit this page View Source OnInactivated() This function is called when entity leave the stage Declaration public override void OnInactivated() Overrides Entity.OnInactivated() | Edit this page View Source OverrideAttackness(CharacterAttackness, int) Override the attackness behaviour for specified frames Declaration public void OverrideAttackness(CharacterAttackness attacknessOverride, int duration = 1) | Edit this page View Source OverrideHealth(CharacterHealth, int) Override the health behaviour for specified frames Declaration public void OverrideHealth(CharacterHealth healthOverride, int duration = 1) | Edit this page View Source OverrideMovement(CharacterMovement, int) Override the movement behaviour for specified frames Declaration public void OverrideMovement(CharacterMovement movementOverride, int duration = 1) | Edit this page View Source OverrideRenderer(CharacterRenderer, int) Override the rendering behaviour for specified frames Declaration public void OverrideRenderer(CharacterRenderer rendererOverride, int duration = 1) | Edit this page View Source SetCharacterState(CharacterState) Set character's general game state, ignore when state already is the current one Declaration public virtual void SetCharacterState(CharacterState state) | Edit this page View Source TryRepairAllEquipments(bool) Repair equipments once for this character Declaration public int TryRepairAllEquipments(bool requireMultiple = false) Parameters Type Name Description bool requireMultiple Set to true to repair all equipments for once | Edit this page View Source Update() [3/4] This function is called every frame when entity is in stage. Prioritize using this function to update physics logic. Declaration public override void Update() Overrides Rigidbody.Update() Implements IMapItem IDamageReceiver ICarrier IWithCharacterMovement IWithCharacterAttackness IWithCharacterHealth IWithCharacterBuff IWithCharacterRenderer Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.CharacterAnimationType.html": {
    "href": "api/AngeliA.CharacterAnimationType.html",
    "title": "Enum CharacterAnimationType | AngeliA",
    "summary": "Enum CharacterAnimationType Which type of animation does this character shows Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public enum CharacterAnimationType Fields Name Description Brake Climb Crash Dash Fly GrabSide GrabTop Idle JumpDown JumpUp PassOut Pound Rolling Run Rush Sleep Slide Spin SquatIdle SquatMove SwimIdle SwimMove TakingDamage Walk Extension Methods Extension.IsLyingDown(CharacterAnimationType) Extension.Next<CharacterAnimationType>(CharacterAnimationType) Extension.Prev<CharacterAnimationType>(CharacterAnimationType) Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.CharacterAttackness.html": {
    "href": "api/AngeliA.CharacterAttackness.html",
    "title": "Class CharacterAttackness | AngeliA",
    "summary": "Class CharacterAttackness Behavior class that handles attack logic for character Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public class CharacterAttackness Constructors | Edit this page View Source CharacterAttackness(Character) Behavior class that handles attack logic for character Declaration public CharacterAttackness(Character character) Fields | Edit this page View Source AirSpeedRateOnAttack Moving speed will be mutiply be this rate when character is attacking while not grounded (0 means 0%, 1000 means 100%) Declaration public readonly FrameBasedInt AirSpeedRateOnAttack | Edit this page View Source AttackComboGap Attack happens between this many frames should be combo attacks Declaration public readonly FrameBasedInt AttackComboGap | Edit this page View Source AttackInAir Allow character attack when not grounded Declaration public readonly FrameBasedBool AttackInAir | Edit this page View Source AttackInWater Allow character attack when inside water Declaration public readonly FrameBasedBool AttackInWater | Edit this page View Source AttackWhenClimbing Allow character attack when climbing Declaration public readonly FrameBasedBool AttackWhenClimbing | Edit this page View Source AttackWhenDashing Allow character attack when dashing Declaration public readonly FrameBasedBool AttackWhenDashing | Edit this page View Source AttackWhenFlying Allow character attack when flying Declaration public readonly FrameBasedBool AttackWhenFlying | Edit this page View Source AttackWhenGrabbing Allow character attack when grabbing Declaration public readonly FrameBasedBool AttackWhenGrabbing | Edit this page View Source AttackWhenPounding Allow character attack when pounding Declaration public readonly FrameBasedBool AttackWhenPounding | Edit this page View Source AttackWhenRolling Allow character attack when rolling Declaration public readonly FrameBasedBool AttackWhenRolling | Edit this page View Source AttackWhenRunning Allow character attack when running Declaration public readonly FrameBasedBool AttackWhenRunning | Edit this page View Source AttackWhenRush Allow character attack when rushing Declaration public readonly FrameBasedBool AttackWhenRush | Edit this page View Source AttackWhenSliding Allow character attack when sliding Declaration public readonly FrameBasedBool AttackWhenSliding | Edit this page View Source AttackWhenSquatting Allow character attack when squatting Declaration public readonly FrameBasedBool AttackWhenSquatting | Edit this page View Source AttackWhenWalking Allow character attack when walking Declaration public readonly FrameBasedBool AttackWhenWalking | Edit this page View Source CancelAttackOnJump When character jumps, unfinished attack will be cancel Declaration public readonly FrameBasedBool CancelAttackOnJump | Edit this page View Source DefaultSpeedRateOnAttack Moving speed will be mutiply be this rate when character is attacking (0 means 0%, 1000 means 100%) Declaration public readonly FrameBasedInt DefaultSpeedRateOnAttack | Edit this page View Source HoldAttackPunishFrame If hold attack button to perform multiple attacks, the cooldown will be add this frames longer Declaration public readonly FrameBasedInt HoldAttackPunishFrame | Edit this page View Source RunningSpeedRateOnAttack Moving speed will be mutiply be this rate when character is attacking while running (0 means 0%, 1000 means 100%) Declaration public readonly FrameBasedInt RunningSpeedRateOnAttack | Edit this page View Source TargetCharacter Character hosting this attackness Declaration public readonly Character TargetCharacter | Edit this page View Source WalkingSpeedRateOnAttack Moving speed will be mutiply be this rate when character is attacking while walking (0 means 0%, 1000 means 100%) Declaration public readonly FrameBasedInt WalkingSpeedRateOnAttack Properties | Edit this page View Source AimingDirection Which direction does the character attacks Declaration public Direction8 AimingDirection { get; set; } | Edit this page View Source AttackChargeStartFrame The start frame of the last attack charging Declaration public int? AttackChargeStartFrame { get; } | Edit this page View Source AttackCooldown How many frames should be wait from the prev attack end to the next attack start Declaration public int AttackCooldown { get; set; } | Edit this page View Source AttackDuration How many frames should be the current attack last Declaration public int AttackDuration { get; set; } | Edit this page View Source AttackStartFacingRight True if character facing right when the current attack start Declaration public bool AttackStartFacingRight { get; set; } | Edit this page View Source AttackStyleIndex Attack style index of the current attack, indicate what kind of rendering style should be apply to the current attack Declaration public int AttackStyleIndex { get; set; } | Edit this page View Source HoldingAttack True if the character is holding attack button Declaration public bool HoldingAttack { get; } | Edit this page View Source IsAttackIgnored True if the character is not allow to attack at the current frame Declaration public bool IsAttackIgnored { get; } | Edit this page View Source IsAttacking True if the character is attacking at the current frame Declaration public bool IsAttacking { get; } | Edit this page View Source IsChargingAttack True if the character is charging attack at the current frame Declaration public bool IsChargingAttack { get; set; } | Edit this page View Source LastAttackCharged True if the last performed attack is charged Declaration public bool LastAttackCharged { get; } | Edit this page View Source LastAttackFrame The start frame of the last attack Declaration public int LastAttackFrame { get; } | Edit this page View Source LockFacingOnAttack True if the character can not change it's facing direction when attacking Declaration public bool LockFacingOnAttack { get; set; } | Edit this page View Source MinimalChargeAttackDuration Charge attack longer than this frame should be count as attack charged Declaration public int MinimalChargeAttackDuration { get; set; } | Edit this page View Source RepeatAttackWhenHolding True if the character can hold attack button to keep attacking multiple times Declaration public bool RepeatAttackWhenHolding { get; set; } Methods | Edit this page View Source Attack(bool, bool) Perform an attack Declaration public virtual bool Attack(bool facingRight, bool charged = false) Parameters Type Name Description bool facingRight True if the attack is performed when character facing right bool charged True if the attack is charged | Edit this page View Source CancelAttack() Cancel current performing attack Declaration public void CancelAttack() | Edit this page View Source CancelIgnoreAttack() Allowing attack which ignored by IgnoreAttack function Declaration public void CancelIgnoreAttack() | Edit this page View Source IgnoreAimingDirection(Direction8, int) Do not allow aiming at given direction for specified frames Declaration public void IgnoreAimingDirection(Direction8 dir, int duration = 1) | Edit this page View Source IgnoreAttack(int) Do not allow attack for specified frames Declaration public void IgnoreAttack(int duration = 1) | Edit this page View Source IsAimingDirectionIgnored(Direction8) True if the given aiming direction is currently ignored Declaration public bool IsAimingDirectionIgnored(Direction8 dir) | Edit this page View Source OnActivated() Callback for character entity get activated Declaration public virtual void OnActivated() | Edit this page View Source PhysicsUpdate_Attack() Callback for update the attackness Declaration public virtual void PhysicsUpdate_Attack() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.CharacterAttribute.DefaultSelectedPlayerAttribute.html": {
    "href": "api/AngeliA.CharacterAttribute.DefaultSelectedPlayerAttribute.html",
    "title": "Class CharacterAttribute.DefaultSelectedPlayerAttribute | AngeliA",
    "summary": "Class CharacterAttribute.DefaultSelectedPlayerAttribute Make the character the default selected player Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax [AttributeUsage(AttributeTargets.Class)] public class CharacterAttribute.DefaultSelectedPlayerAttribute : Attribute Constructors | Edit this page View Source DefaultSelectedPlayerAttribute(int) Make the character the default selected player Declaration public DefaultSelectedPlayerAttribute(int priority = 0) Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.CharacterAttribute.html": {
    "href": "api/AngeliA.CharacterAttribute.html",
    "title": "Class CharacterAttribute | AngeliA",
    "summary": "Class CharacterAttribute Attribute for character class Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public static class CharacterAttribute"
  },
  "api/AngeliA.CharacterBuff.html": {
    "href": "api/AngeliA.CharacterBuff.html",
    "title": "Class CharacterBuff | AngeliA",
    "summary": "Class CharacterBuff Behavior class that handles buff logic for characters Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public sealed class CharacterBuff Properties | Edit this page View Source BuffCount Total count for all buff the character is having Declaration public int BuffCount { get; } Methods | Edit this page View Source ClearAllBuffs() Remove all buff from character Declaration public void ClearAllBuffs() | Edit this page View Source ClearBuff(int) Remove the given buff from character Declaration public void ClearBuff(int id) | Edit this page View Source ForAllBuffs() Iterate thought all buffs this character currently have Declaration public IEnumerable<Buff> ForAllBuffs() | Edit this page View Source GetBuffData(int) Get the user data of the given buff from the character Declaration public object GetBuffData(int id) | Edit this page View Source GetBuffDescription(int) Get description of the given buff from the language system Declaration public static string GetBuffDescription(int id) | Edit this page View Source GetBuffDisplayName(int) Get display name of the given buff from the language system Declaration public static string GetBuffDisplayName(int id) | Edit this page View Source GetBuffEndFrame(int) Get which frame does the given buff ends Declaration public int GetBuffEndFrame(int id) | Edit this page View Source GiveBuff(int, int) Give the character given buff for specified frames long Declaration public void GiveBuff(int id, int duration = -1) | Edit this page View Source HasBuff(int) True if the character is having the given buff Declaration public bool HasBuff(int id) | Edit this page View Source IsBuffPrevented(int) True if the given buff is being prevented Declaration public bool IsBuffPrevented(int id) | Edit this page View Source PreventBuff(int, int) Do not allow the character have given buff for specified frames Declaration public void PreventBuff(int id, int duration = 1) | Edit this page View Source SetBuffData(int, object) Set user data of the given buff to the character Declaration public void SetBuffData(int id, object data) Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.CharacterFaceExpression.html": {
    "href": "api/AngeliA.CharacterFaceExpression.html",
    "title": "Enum CharacterFaceExpression | AngeliA",
    "summary": "Enum CharacterFaceExpression Face expression type for pose animation characters Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public enum CharacterFaceExpression Fields Name Description Attack Blink Damage Happy Normal PassOut Sleep Suffer Extension Methods Extension.Next<CharacterFaceExpression>(CharacterFaceExpression) Extension.Prev<CharacterFaceExpression>(CharacterFaceExpression) Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.CharacterHealth.html": {
    "href": "api/AngeliA.CharacterHealth.html",
    "title": "Class CharacterHealth | AngeliA",
    "summary": "Class CharacterHealth Behavior class that handles health logic for character Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public class CharacterHealth Fields | Edit this page View Source DamageStunDuration How many frames does the character stun when they take damage Declaration public readonly FrameBasedInt DamageStunDuration | Edit this page View Source InvincibleDuration How many frames does the character's Invincibility last Declaration public readonly FrameBasedInt InvincibleDuration | Edit this page View Source InvincibleOnDash Should character be invincible when dashing Declaration public readonly FrameBasedBool InvincibleOnDash | Edit this page View Source InvincibleOnRush Should character be invincible when rushing Declaration public readonly FrameBasedBool InvincibleOnRush | Edit this page View Source KnockbackDeceleration Movement deceleration when the character is knocking back after take damage Declaration public readonly FrameBasedInt KnockbackDeceleration | Edit this page View Source KnockbackSpeed How fast should the character get knock back when they take damage Declaration public readonly FrameBasedInt KnockbackSpeed | Edit this page View Source MaxHP Upper limit of the HP Declaration public readonly FrameBasedInt MaxHP Properties | Edit this page View Source HP Current health point of the character Declaration public int HP { get; set; } | Edit this page View Source InvincibleEndFrame The frame when character's invincibility ends Declaration public int InvincibleEndFrame { get; set; } | Edit this page View Source IsEmptyHealth True if the character have no health point Declaration public bool IsEmptyHealth { get; } | Edit this page View Source IsFullHealth True if the character is full of health Declaration public bool IsFullHealth { get; } | Edit this page View Source IsInvincible True if the character is currently invincible Declaration public bool IsInvincible { get; } | Edit this page View Source LastDamageFrame The frame when character took damage last time Declaration public int LastDamageFrame { get; set; } | Edit this page View Source TakingDamage True if the character is currently taking damage Declaration public bool TakingDamage { get; } Methods | Edit this page View Source Heal(int) Add given amount of HP for the character Declaration public bool Heal(int heal) Returns Type Description bool True when character get healed | Edit this page View Source MakeInvincible(int) Let the character become invincible for given frames Declaration public void MakeInvincible(int duration = 1) | Edit this page View Source OnActivated() Callback when character entity get activated Declaration public void OnActivated() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.CharacterInventoryType.html": {
    "href": "api/AngeliA.CharacterInventoryType.html",
    "title": "Enum CharacterInventoryType | AngeliA",
    "summary": "Enum CharacterInventoryType Which type of inventory does this character have Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public enum CharacterInventoryType Fields Name Description Map Every instance of this type of characters have it's own inventory data based on where this character spawn from map None No inventory logic should be perform Unique All instance of this type of characters share the same inventory data Extension Methods Extension.Next<CharacterInventoryType>(CharacterInventoryType) Extension.Prev<CharacterInventoryType>(CharacterInventoryType) Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.CharacterMovement.html": {
    "href": "api/AngeliA.CharacterMovement.html",
    "title": "Class CharacterMovement | AngeliA",
    "summary": "Class CharacterMovement Behavior class that handles movement logic for character Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public class CharacterMovement Constructors | Edit this page View Source CharacterMovement(Rigidbody) Behavior class that handles movement logic for character Declaration public CharacterMovement(Rigidbody rig) Fields | Edit this page View Source AllowJumpWhenClimbing Allow character jump when climbing Declaration [PropVisibility(\"ClimbAvailable\", CompareMode.Equal)] public readonly FrameBasedBool AllowJumpWhenClimbing | Edit this page View Source AllowSquatJump Allow character jump when squatting, and keep squatting when jump in air Declaration [PropVisibility(\"JumpCount\", CompareMode.GreaterThan, 0)] public readonly FrameBasedBool AllowSquatJump | Edit this page View Source ClimbAvailable Allow character to climb Declaration [PropGroup(\"Climb\")] public readonly FrameBasedBool ClimbAvailable | Edit this page View Source ClimbSpeedX Horizontal speed when climbing Declaration [PropVisibility(\"ClimbAvailable\", CompareMode.Equal)] public readonly FrameBasedInt ClimbSpeedX | Edit this page View Source ClimbSpeedY Vertical speed when climbing Declaration [PropVisibility(\"ClimbAvailable\", CompareMode.Equal)] public readonly FrameBasedInt ClimbSpeedY | Edit this page View Source CrashAvailable Allow character crash Declaration [PropGroup(\"Crash\")] public readonly FrameBasedBool CrashAvailable | Edit this page View Source CrashDeceleration Speed deceleration when character crashing Declaration [PropVisibility(\"CrashAvailable\", CompareMode.Equal)] public readonly FrameBasedInt CrashDeceleration | Edit this page View Source CrashDuration How many frames does it takes for one crash Declaration [PropVisibility(\"CrashAvailable\", CompareMode.Equal)] public readonly FrameBasedInt CrashDuration | Edit this page View Source CrashRunDurationRequire How many frames does it takes to make character crash Declaration [PropVisibility(\"CrashAvailable\", CompareMode.And, \"CrashWhenSlippy\")] public readonly FrameBasedInt CrashRunDurationRequire | Edit this page View Source CrashWhenSlippy Make character crash when running too long on slippery ground or rush on slippery ground Declaration [PropVisibility(\"CrashAvailable\", CompareMode.Equal)] public readonly FrameBasedBool CrashWhenSlippy | Edit this page View Source DashAcceleration Speed acceleration when dashing Declaration [PropVisibility(\"DashAvailable\", CompareMode.Equal)] public readonly FrameBasedInt DashAcceleration | Edit this page View Source DashAvailable Allow character to dash (player hold down button and press jump button for once) Declaration [PropGroup(\"Dash\")] public readonly FrameBasedBool DashAvailable | Edit this page View Source DashCancelLoseRate Speed multiply this rate when dash being cancel (0 means 0%, 1000 means 100%) Declaration [PropVisibility(\"DashAvailable\", CompareMode.Equal)] public readonly FrameBasedInt DashCancelLoseRate | Edit this page View Source DashCooldown Frames length between prev dash end and next dash start Declaration [PropVisibility(\"DashAvailable\", CompareMode.Equal)] public readonly FrameBasedInt DashCooldown | Edit this page View Source DashDuration How many frames does dash last Declaration [PropVisibility(\"DashAvailable\", CompareMode.Equal)] public readonly FrameBasedInt DashDuration | Edit this page View Source DashHeightAmount Character hitbox height multiply this rate when dashing (0 means 0%, 1000 means 100%) Declaration [PropVisibility(\"DashAvailable\", CompareMode.Equal)] public readonly FrameBasedInt DashHeightAmount | Edit this page View Source DashPutoutFire Allow character dash through fire to put it out Declaration [PropVisibility(\"DashAvailable\", CompareMode.Equal)] public readonly FrameBasedBool DashPutoutFire | Edit this page View Source DashSpeed Movement speed for dashing Declaration [PropVisibility(\"DashAvailable\", CompareMode.Equal)] public readonly FrameBasedInt DashSpeed | Edit this page View Source DashWithRoll Character roll when dashing Declaration [PropVisibility(\"DashAvailable\", CompareMode.Equal)] public readonly FrameBasedBool DashWithRoll | Edit this page View Source FirstJumpWithRoll When character jump from ground, does it jump with rolling in air Declaration [PropVisibility(\"JumpCount\", CompareMode.GreaterThan, 0)] public readonly FrameBasedBool FirstJumpWithRoll | Edit this page View Source FlyAcceleration Speed acceleration when flying Declaration [PropVisibility(\"FlyAvailable\", CompareMode.Equal)] public readonly FrameBasedInt FlyAcceleration | Edit this page View Source FlyAvailable Allow character to fly (player press jump button when no jump count left) Declaration [PropGroup(\"Fly\")] public readonly FrameBasedBool FlyAvailable | Edit this page View Source FlyCooldown Character has to wait this many frames to fly again Declaration [PropVisibility(\"FlyAvailable\", CompareMode.Equal)] public readonly FrameBasedInt FlyCooldown | Edit this page View Source FlyDeceleration Speed deceleration when flying Declaration [PropVisibility(\"FlyAvailable\", CompareMode.Equal)] public readonly FrameBasedInt FlyDeceleration | Edit this page View Source FlyFallSpeed Fall down speed shen flying Declaration [PropVisibility(\"FlyAvailable\", CompareMode.Equal)] public readonly FrameBasedInt FlyFallSpeed | Edit this page View Source FlyGravityFallRate Gravity multiply this rate when flying and moving down (0 means 0%, 1000 means 100%) Declaration [PropVisibility(\"FlyAvailable\", CompareMode.Equal)] public readonly FrameBasedInt FlyGravityFallRate | Edit this page View Source FlyGravityRiseRate Gravity multiply this rate when flying and moving up (0 means 0%, 1000 means 100%) Declaration [PropVisibility(\"FlyAvailable\", CompareMode.Equal)] public readonly FrameBasedInt FlyGravityRiseRate | Edit this page View Source FlyHeightAmount Character hitbox height multiply this rate when flying (0 means 0%, 1000 means 100%) Declaration [PropVisibility(\"FlyAvailable\", CompareMode.Equal)] public readonly FrameBasedInt FlyHeightAmount | Edit this page View Source FlyMoveSpeed Horizontal move speed when flying Declaration [PropVisibility(\"FlyAvailable\", CompareMode.Equal)] public readonly FrameBasedInt FlyMoveSpeed | Edit this page View Source FlyRiseSpeed Initial speed when fly start Declaration [PropVisibility(\"FlyAvailable\", CompareMode.Equal)] public readonly FrameBasedInt FlyRiseSpeed | Edit this page View Source GlideOnFlying When glide flying, character always move to the direction it facing Declaration [PropVisibility(\"FlyAvailable\", CompareMode.Equal)] public readonly FrameBasedBool GlideOnFlying | Edit this page View Source GrabFlipThroughDownAvailable Allow character to flip through block downward (player press down when standing on top-grabable blocks) Declaration [PropVisibility(\"GrabTopAvailable\", CompareMode.Equal)] public readonly FrameBasedBool GrabFlipThroughDownAvailable | Edit this page View Source GrabFlipThroughDuration How long does flip through takes in frames Declaration [PropVisibility(\"GrabTopAvailable\", CompareMode.Equal)] public readonly FrameBasedInt GrabFlipThroughDuration | Edit this page View Source GrabFlipThroughUpAvailable Allow character to flip through block upward (player press up when top-grabbing) Declaration [PropVisibility(\"GrabTopAvailable\", CompareMode.Equal)] public readonly FrameBasedBool GrabFlipThroughUpAvailable | Edit this page View Source GrabMoveSpeedX Horizontal move speed when top-grabbing Declaration [PropVisibility(\"GrabTopAvailable\", CompareMode.Equal)] public readonly FrameBasedInt GrabMoveSpeedX | Edit this page View Source GrabMoveSpeedY Vertical move speed when side-grabbing Declaration [PropVisibility(\"GrabSideAvailable\", CompareMode.Equal)] public readonly FrameBasedInt GrabMoveSpeedY | Edit this page View Source GrabSideAvailable Allow character grab on the side of blocks with Tag.GrabSide Declaration public readonly FrameBasedBool GrabSideAvailable | Edit this page View Source GrabSideHeightAmount Character hitbox height multiply this rate when side-grabbing (0 means 0%, 1000 means 100%) Declaration [PropVisibility(\"GrabSideAvailable\", CompareMode.Equal)] public readonly FrameBasedInt GrabSideHeightAmount | Edit this page View Source GrabSideJumpKickSpeed Horizontal initial speed when character jump when side-grabbing Declaration [PropVisibility(\"GrabSideAvailable\", CompareMode.Equal)] public readonly FrameBasedInt GrabSideJumpKickSpeed | Edit this page View Source GrabTopAvailable Allow character grab on the bottom of blocks with Tag.GrabTop Declaration [PropGroup(\"Grab\")] public readonly FrameBasedBool GrabTopAvailable | Edit this page View Source GrabTopHeightAmount Character hitbox height multiply this rate when top-grabbing (0 means 0%, 1000 means 100%) Declaration [PropVisibility(\"GrabTopAvailable\", CompareMode.Equal)] public readonly FrameBasedInt GrabTopHeightAmount | Edit this page View Source InWaterSpeedRate When character inside water, the movement speed will multiply this rate (0 means 0%, 1000 means 100%) Declaration public readonly FrameBasedInt InWaterSpeedRate | Edit this page View Source JumpBoostFromMoveRate When character start jump, if it's moving, the running speed will multiply this rate and add into the initial jump speed. (0 means 0%, 1000 means 100%) Declaration [PropVisibility(\"JumpCount\", CompareMode.GreaterThan, 0)] public readonly FrameBasedInt JumpBoostFromMoveRate | Edit this page View Source JumpBreakDash Allow character jump when dashing and stop the dash Declaration [PropVisibility(\"JumpCount\", CompareMode.GreaterThan, 0)] public readonly FrameBasedBool JumpBreakDash | Edit this page View Source JumpBreakRush Allow character jump when rushing and stop the rush Declaration [PropVisibility(\"JumpCount\", CompareMode.GreaterThan, 0)] public readonly FrameBasedBool JumpBreakRush | Edit this page View Source JumpCount How many times can the character jump without touching ground Declaration [PropGroup(\"Jump\")] public readonly FrameBasedInt JumpCount | Edit this page View Source JumpDownThroughOneway Allow character jump down and go through oneway gate (player holding down button and press jump button once) Declaration public readonly FrameBasedBool JumpDownThroughOneway | Edit this page View Source JumpReleaseSpeedRate When character stop trying to jump (player release the jump button), and the character is still moving up, then the current speed will be multiply to this rate (0 means 0%, 1000 means 100%) Declaration [PropVisibility(\"JumpCount\", CompareMode.GreaterThan, 0)] public readonly FrameBasedInt JumpReleaseSpeedRate | Edit this page View Source JumpRiseGravityRate Gravity applys on the character will multiply this rate when character moving up in air (0 means 0%, 1000 means 100%) Declaration [PropVisibility(\"JumpCount\", CompareMode.GreaterThan, 0)] public readonly FrameBasedInt JumpRiseGravityRate | Edit this page View Source JumpSpeed Initial speed when character start to jump Declaration [PropVisibility(\"JumpCount\", CompareMode.GreaterThan, 0)] public readonly FrameBasedInt JumpSpeed | Edit this page View Source MovementHeight Default height of the character Declaration public readonly FrameBasedInt MovementHeight | Edit this page View Source MovementWidth Default with of the character Declaration [PropGroup(\"Size\")] public readonly FrameBasedInt MovementWidth | Edit this page View Source PoundAvailable Allow character ground pound in air (player press down button in air) Declaration [PropGroup(\"Pound\")] public readonly FrameBasedBool PoundAvailable | Edit this page View Source PoundPutoutFire Allow character pound on fire to put it out Declaration [PropVisibility(\"PoundAvailable\", CompareMode.Equal)] public readonly FrameBasedBool PoundPutoutFire | Edit this page View Source PoundSpeed Movement speed when pounding Declaration [PropVisibility(\"PoundAvailable\", CompareMode.Equal)] public readonly FrameBasedInt PoundSpeed | Edit this page View Source PushAvailable Allow character push other rigidbody Declaration [PropGroup(\"Push\")] public readonly FrameBasedBool PushAvailable | Edit this page View Source PushSpeed Movement speed when character pushing Declaration [PropVisibility(\"PushAvailable\", CompareMode.Equal)] public readonly FrameBasedInt PushSpeed | Edit this page View Source ResetJumpCountWhenGrab Set jump count to 0 when character grabbing Declaration [PropVisibility(\"GrabTopAvailable\", CompareMode.Or, \"GrabSideAvailable\")] public readonly FrameBasedBool ResetJumpCountWhenGrab | Edit this page View Source ResetJumpCountWhenSlide Set jump count to 0 when slide Declaration [PropVisibility(\"SlideAvailable\", CompareMode.Equal)] public readonly FrameBasedBool ResetJumpCountWhenSlide | Edit this page View Source RunAcceleration Speed acceleration when character is running Declaration [PropVisibility(\"RunAvailable\", CompareMode.Equal)] public readonly FrameBasedInt RunAcceleration | Edit this page View Source RunAvailable Allow character to run Declaration [PropGroup(\"Run\")] public readonly FrameBasedBool RunAvailable | Edit this page View Source RunBrakeAcceleration Speed acceleration when character is trying to run to the opposite direction Declaration [PropVisibility(\"RunAvailable\", CompareMode.Equal)] public readonly FrameBasedInt RunBrakeAcceleration | Edit this page View Source RunDeceleration Speed deceleration when character is running Declaration [PropVisibility(\"RunAvailable\", CompareMode.Equal)] public readonly FrameBasedInt RunDeceleration | Edit this page View Source RunSpeed How fast should the character run Declaration [PropVisibility(\"RunAvailable\", CompareMode.Equal)] public readonly FrameBasedInt RunSpeed | Edit this page View Source RushAcceleration Speed acceleration when rushing Declaration [PropVisibility(\"RushAvailable\", CompareMode.Equal)] public readonly FrameBasedInt RushAcceleration | Edit this page View Source RushAvailable Allow character to rush Declaration [PropGroup(\"Rush\")] public readonly FrameBasedBool RushAvailable | Edit this page View Source RushCooldown How many frames does character has to wair after prev rush end to rush again Declaration [PropVisibility(\"RushAvailable\", CompareMode.Equal)] public readonly FrameBasedInt RushCooldown | Edit this page View Source RushDeceleration Speed deceleration when rushing Declaration [PropVisibility(\"RushAvailable\", CompareMode.Equal)] public readonly FrameBasedInt RushDeceleration | Edit this page View Source RushDuration How many frames does rush last Declaration [PropVisibility(\"RushAvailable\", CompareMode.Equal)] public readonly FrameBasedInt RushDuration | Edit this page View Source RushHeightAmount Character hitbox height multiply this rate when rushing (0 means 0%, 1000 means 100%) Declaration [PropVisibility(\"RushAvailable\", CompareMode.Equal)] public readonly FrameBasedInt RushHeightAmount | Edit this page View Source RushInAir Allow character rush when not grounded Declaration [PropVisibility(\"RushAvailable\", CompareMode.Equal)] public readonly FrameBasedBool RushInAir | Edit this page View Source RushInWater Allow character rush when inside water Declaration [PropVisibility(\"RushAvailable\", CompareMode.Equal)] public readonly FrameBasedBool RushInWater | Edit this page View Source RushPutoutFire Allow character rush through fire to put it out Declaration [PropVisibility(\"RushAvailable\", CompareMode.Equal)] public readonly FrameBasedBool RushPutoutFire | Edit this page View Source RushSpeed Movement speed when rushing Declaration [PropVisibility(\"RushAvailable\", CompareMode.Equal)] public readonly FrameBasedInt RushSpeed | Edit this page View Source RushStiff How many frames does character not allow to move after rush end Declaration [PropVisibility(\"RushAvailable\", CompareMode.Equal)] public readonly FrameBasedInt RushStiff | Edit this page View Source RushStopSpeed Movement speed when rush end Declaration [PropVisibility(\"RushAvailable\", CompareMode.Equal)] public readonly FrameBasedInt RushStopSpeed | Edit this page View Source RushWhenClimb character rush when climb Declaration [PropVisibility(\"RushAvailable\", CompareMode.Equal)] public readonly FrameBasedBool RushWhenClimb | Edit this page View Source RushWhenSquat character rush when squat Declaration [PropVisibility(\"RushAvailable\", CompareMode.Equal)] public readonly FrameBasedBool RushWhenSquat | Edit this page View Source SlideAvailable Allow character to slide on wall Declaration [PropGroup(\"Slide\")] public readonly FrameBasedBool SlideAvailable | Edit this page View Source SlideDropSpeed Drop down speed when sliding Declaration [PropVisibility(\"SlideAvailable\", CompareMode.Equal)] public readonly FrameBasedInt SlideDropSpeed | Edit this page View Source SlideJumpKickSpeed Horizontal initial speed when character jump when slide Declaration [PropVisibility(\"SlideAvailable\", CompareMode.Equal)] public readonly FrameBasedInt SlideJumpKickSpeed | Edit this page View Source SlideOnAnyBlock Allow character to slide on all type of blocks Declaration [PropVisibility(\"SlideAvailable\", CompareMode.Equal)] public readonly FrameBasedBool SlideOnAnyBlock | Edit this page View Source SlipAcceleration Speed acceleration when moving on slippery ground Declaration [PropVisibility(\"SlipAvailable\", CompareMode.Equal)] public readonly FrameBasedInt SlipAcceleration | Edit this page View Source SlipAvailable Allow character slip when run on slippery ground Declaration [PropGroup(\"Slip\")] public readonly FrameBasedBool SlipAvailable | Edit this page View Source SlipDeceleration Speed deceleration when moving on slippery ground Declaration [PropVisibility(\"SlipAvailable\", CompareMode.Equal)] public readonly FrameBasedInt SlipDeceleration | Edit this page View Source SquatAcceleration Movement acceleration when squat moving Declaration [PropVisibility(\"SquatAvailable\", CompareMode.Equal)] public readonly FrameBasedInt SquatAcceleration | Edit this page View Source SquatAvailable Allow character to squat Declaration [PropGroup(\"Squat\")] public readonly FrameBasedBool SquatAvailable | Edit this page View Source SquatDeceleration Movement deceleration when squat moving Declaration [PropVisibility(\"SquatAvailable\", CompareMode.Equal)] public readonly FrameBasedInt SquatDeceleration | Edit this page View Source SquatHeightAmount Character hitbox height multiply this rate when squatting (0 means 0%, 1000 means 100%) Declaration [PropVisibility(\"SquatAvailable\", CompareMode.Equal)] public readonly FrameBasedInt SquatHeightAmount | Edit this page View Source SquatMoveSpeed Move speed when character squatting, set to 0 when not allow squat move Declaration [PropVisibility(\"SquatAvailable\", CompareMode.Equal)] public readonly FrameBasedInt SquatMoveSpeed | Edit this page View Source SubsequentJumpWithRoll When character jump from air, does it jump with rolling in air Declaration [PropVisibility(\"JumpCount\", CompareMode.GreaterThan, 1)] public readonly FrameBasedBool SubsequentJumpWithRoll | Edit this page View Source SwimAcceleration Speed acceleration when chracter inside water Declaration [PropVisibility(\"SwimAvailable\", CompareMode.Equal)] public readonly FrameBasedInt SwimAcceleration | Edit this page View Source SwimAvailable Allow character swim in water Declaration [PropGroup(\"Swim\")] public readonly FrameBasedBool SwimAvailable | Edit this page View Source SwimDeceleration Speed deceleration when chracter inside water Declaration [PropVisibility(\"SwimAvailable\", CompareMode.Equal)] public readonly FrameBasedInt SwimDeceleration | Edit this page View Source SwimHeightAmount Character hitbox height multiply this rate when swimming (0 means 0%, 1000 means 100%) Declaration [PropVisibility(\"SwimAvailable\", CompareMode.Equal)] public readonly FrameBasedInt SwimHeightAmount | Edit this page View Source SwimJumpSpeed Movement speed when character jump inside water Declaration [PropVisibility(\"SwimAvailable\", CompareMode.Equal)] public readonly FrameBasedInt SwimJumpSpeed | Edit this page View Source SwimSpeed Movement speed when character swimming Declaration [PropVisibility(\"SwimAvailable\", CompareMode.Equal)] public readonly FrameBasedInt SwimSpeed | Edit this page View Source SwimWidthAmount Character hitbox width multiply this rate when swimming (0 means 0%, 1000 means 100%) Declaration [PropVisibility(\"SwimAvailable\", CompareMode.Equal)] public readonly FrameBasedInt SwimWidthAmount | Edit this page View Source Target Declaration public readonly Rigidbody Target | Edit this page View Source TargetCharacter Declaration public readonly Character TargetCharacter | Edit this page View Source WalkAcceleration Speed acceleration when character is walking Declaration [PropVisibility(\"WalkAvailable\", CompareMode.Equal)] public readonly FrameBasedInt WalkAcceleration | Edit this page View Source WalkAvailable Allow character to walk Declaration [PropGroup(\"Walk\")] public readonly FrameBasedBool WalkAvailable | Edit this page View Source WalkBrakeAcceleration Speed acceleration when character is trying to walk to the opposite direction Declaration [PropVisibility(\"WalkAvailable\", CompareMode.Equal)] public readonly FrameBasedInt WalkBrakeAcceleration | Edit this page View Source WalkDeceleration Speed deceleration when character is walking Declaration [PropVisibility(\"WalkAvailable\", CompareMode.Equal)] public readonly FrameBasedInt WalkDeceleration | Edit this page View Source WalkSpeed How fast should the character walk Declaration [PropVisibility(\"WalkAvailable\", CompareMode.Equal)] public readonly FrameBasedInt WalkSpeed Properties | Edit this page View Source CollisionMask Declaration protected int CollisionMask { get; } | Edit this page View Source CurrentJumpCount How many times does character jumps after touching ground Declaration public int CurrentJumpCount { get; set; } | Edit this page View Source FacingFront True if character currently facing front Declaration public bool FacingFront { get; set; } | Edit this page View Source FacingRight True if character currently facing right Declaration public bool FacingRight { get; set; } | Edit this page View Source Height Declaration protected int Height { get; set; } | Edit this page View Source InWater Declaration protected bool InWater { get; } | Edit this page View Source IntendedX 1 if character want to move right, -1 for left Declaration public int IntendedX { get; } | Edit this page View Source IntendedY 1 if character want to move up, -1 for down Declaration public int IntendedY { get; } | Edit this page View Source IsClimbing True if character is climbing Declaration public bool IsClimbing { get; } | Edit this page View Source IsCrashing True if character is crashing Declaration public bool IsCrashing { get; } | Edit this page View Source IsDashing True if character is dashing Declaration public bool IsDashing { get; } | Edit this page View Source IsFlying True if character is flying Declaration public bool IsFlying { get; } | Edit this page View Source IsGrabFlipping True if character flipping through blocks Declaration public bool IsGrabFlipping { get; } | Edit this page View Source IsGrabFlippingDown True if character flipping through blocks downward Declaration public bool IsGrabFlippingDown { get; } | Edit this page View Source IsGrabFlippingUp True if character flipping through blocks upward Declaration public bool IsGrabFlippingUp { get; } | Edit this page View Source IsGrabbingSide True if character is side-grabbing Declaration public bool IsGrabbingSide { get; } | Edit this page View Source IsGrabbingTop True if character is top-grabbing Declaration public bool IsGrabbingTop { get; } | Edit this page View Source IsGrounded Declaration protected bool IsGrounded { get; } | Edit this page View Source IsInsideGround Declaration protected bool IsInsideGround { get; } | Edit this page View Source IsMoving True if character is moving Declaration public bool IsMoving { get; } | Edit this page View Source IsPounding True if character is pounding Declaration public bool IsPounding { get; } | Edit this page View Source IsRolling True if character is rolling Declaration public bool IsRolling { get; } | Edit this page View Source IsRunning True if character is running Declaration public bool IsRunning { get; } | Edit this page View Source IsRushing True if character is rushing Declaration public bool IsRushing { get; } | Edit this page View Source IsSliding True if character is sliding on wall Declaration public bool IsSliding { get; } | Edit this page View Source IsSquatting True if character is squatting Declaration public bool IsSquatting { get; } | Edit this page View Source IsWalking True if character is walking Declaration public bool IsWalking { get; } | Edit this page View Source LastClimbFrame Last frame when character climb Declaration public int LastClimbFrame { get; } | Edit this page View Source LastCrashFrame Last frame when character crash Declaration public int LastCrashFrame { get; } | Edit this page View Source LastDashFrame Last frame when character start to dash Declaration public int LastDashFrame { get; } | Edit this page View Source LastEndMoveFrame Last frame when character moving ends Declaration public int LastEndMoveFrame { get; } | Edit this page View Source LastFacingChangeFrame Last frame when character change horizontal facing Declaration public int LastFacingChangeFrame { get; } | Edit this page View Source LastFlyFrame Last frame when character start to fly Declaration public int LastFlyFrame { get; } | Edit this page View Source LastGrabCancelFrame Last frame when character stop grabbing Declaration public int LastGrabCancelFrame { get; } | Edit this page View Source LastGrabFlipDownFrame Last frame when character start to grab flip downward Declaration public int LastGrabFlipDownFrame { get; } | Edit this page View Source LastGrabFlipUpFrame Last frame when character start to grab flip upward Declaration public int LastGrabFlipUpFrame { get; } | Edit this page View Source LastGrabbingFrame Last frame when character is grabbing Declaration public int LastGrabbingFrame { get; } | Edit this page View Source LastGroundFrame Last frame when character start touching ground Declaration public int LastGroundFrame { get; } | Edit this page View Source LastGroundingFrame Last frame when character is touching ground Declaration public int LastGroundingFrame { get; } | Edit this page View Source LastJumpFrame Last frame when character start to jump Declaration public int LastJumpFrame { get; } | Edit this page View Source LastMoveDirection Direction for last movement Declaration public Int2 LastMoveDirection { get; } | Edit this page View Source LastPoundingFrame Last frame when character is pounding Declaration public int LastPoundingFrame { get; } | Edit this page View Source LastRushStartFrame Last frame when character start to rush Declaration public int LastRushStartFrame { get; } | Edit this page View Source LastSlidingFrame Last frame when character is sliding on wall Declaration public int LastSlidingFrame { get; } | Edit this page View Source LastSlippyMoveStartFrame Last frame when character start to move on slippery ground Declaration public int LastSlippyMoveStartFrame { get; } | Edit this page View Source LastSquatStartFrame Last frame when character start to squat Declaration public int LastSquatStartFrame { get; } | Edit this page View Source LastSquattingFrame Last frame when character is squatting Declaration public int LastSquattingFrame { get; } | Edit this page View Source LastStartMoveFrame Last frame when character start to move Declaration public int LastStartMoveFrame { get; } | Edit this page View Source LastStartRunFrame Last frame when character start to run Declaration public int LastStartRunFrame { get; } | Edit this page View Source MovementState Current movement type Declaration public CharacterMovementState MovementState { get; set; } | Edit this page View Source OffsetX Declaration protected int OffsetX { get; set; } | Edit this page View Source OffsetY Declaration protected int OffsetY { get; set; } | Edit this page View Source Rect Declaration protected IRect Rect { get; } | Edit this page View Source ShouldRun True if character want to run instead of walk when move Declaration public bool ShouldRun { get; } | Edit this page View Source SyncFromConfigFile Does movement config sync with json file in game universe folder Declaration public virtual bool SyncFromConfigFile { get; } | Edit this page View Source VelocityX Declaration protected int VelocityX { get; set; } | Edit this page View Source VelocityY Declaration protected int VelocityY { get; set; } | Edit this page View Source Width Declaration protected int Width { get; set; } | Edit this page View Source X Declaration protected int X { get; set; } | Edit this page View Source Y Declaration protected int Y { get; set; } Methods | Edit this page View Source CalculateMovementState(CharacterMovement) Get current movement type base on current cached data Declaration public static CharacterMovementState CalculateMovementState(CharacterMovement movement) | Edit this page View Source Crash() Perform crash (call this once when crash start) Declaration public virtual void Crash() | Edit this page View Source Dash() Perform dash (call this once when dash start) Declaration public virtual void Dash() | Edit this page View Source GetMovementState() Get current movement type base on current cached data Declaration protected virtual CharacterMovementState GetMovementState() | Edit this page View Source HoldJump(bool) Is character holding jump (call this every frame no matter character is jumpping or not) Declaration public virtual void HoldJump(bool holding) | Edit this page View Source Jump(bool) Perform jump (call this once when jump start) Declaration public virtual void Jump(bool isSquatJump = false) Parameters Type Name Description bool isSquatJump Is this jump a squat jump or not | Edit this page View Source LockFacingRight(bool, int) Force character facing right or left for given frames Declaration public void LockFacingRight(bool facingRight, int duration = 1) | Edit this page View Source LockSquat(int) Force character to squat for given frames Declaration public void LockSquat(int duration = 1) | Edit this page View Source Move(Direction3, Direction3, bool) Move the character Declaration public virtual void Move(Direction3 x, Direction3 y, bool walk = false) bool walk True if character want to walk instead of run | Edit this page View Source MoveLogic(int, int, bool) Declaration protected void MoveLogic(int x, int y, bool walk = false) | Edit this page View Source OnActivated() Declaration public virtual void OnActivated() | Edit this page View Source PhysicsUpdateGamePlay() Declaration public virtual void PhysicsUpdateGamePlay() | Edit this page View Source Pound() Perform pound (call this once when pound start) Declaration public virtual void Pound() | Edit this page View Source ReloadMovementConfigFromFile() Load movement data from json file inside game universe folder Declaration public void ReloadMovementConfigFromFile() | Edit this page View Source Rush() Perform rush (call this once when rush start) Declaration public virtual void Rush() | Edit this page View Source SetSpeedRate(int, int) Force movement speed rate for given frames Declaration public void SetSpeedRate(int newRate, int duration = 1) Parameters Type Name Description int newRate 0 means 0%, 1000 means 100% | Edit this page View Source Stop() Stop current movement Declaration public virtual void Stop() | Edit this page View Source StopCrash() Stop current crash Declaration public void StopCrash() | Edit this page View Source StopDash() Stop current dashing Declaration public void StopDash() | Edit this page View Source StopRush() Stop current rush Declaration public void StopRush() | Edit this page View Source UpdateLater() Declaration public virtual void UpdateLater() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.CharacterMovementState.html": {
    "href": "api/AngeliA.CharacterMovementState.html",
    "title": "Enum CharacterMovementState | AngeliA",
    "summary": "Enum CharacterMovementState Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public enum CharacterMovementState Fields Name Description Climb Crash Dash Fly GrabFlip GrabSide GrabTop Idle JumpDown JumpUp Pound Run Rush Slide SquatIdle SquatMove SwimIdle SwimMove Walk Extension Methods Extension.Next<CharacterMovementState>(CharacterMovementState) Extension.Prev<CharacterMovementState>(CharacterMovementState) Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.CharacterPose.html": {
    "href": "api/AngeliA.CharacterPose.html",
    "title": "Class CharacterPose | AngeliA",
    "summary": "Class CharacterPose Complete pose infomation at one moment for a pose-style character Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public class CharacterPose Constructors | Edit this page View Source CharacterPose() Declaration public CharacterPose() Fields | Edit this page View Source BodyTwist Declaration public int BodyTwist | Edit this page View Source HandGrabAttackTwistL Declaration public int HandGrabAttackTwistL | Edit this page View Source HandGrabAttackTwistR Declaration public int HandGrabAttackTwistR | Edit this page View Source HandGrabRotationL Declaration public int HandGrabRotationL | Edit this page View Source HandGrabRotationR Declaration public int HandGrabRotationR | Edit this page View Source HandGrabScaleL Declaration public int HandGrabScaleL | Edit this page View Source HandGrabScaleR Declaration public int HandGrabScaleR | Edit this page View Source HeadTwist Declaration public int HeadTwist | Edit this page View Source PoseRootX Declaration public int PoseRootX | Edit this page View Source PoseRootY Declaration public int PoseRootY Properties | Edit this page View Source Body Declaration public BodyPart Body { get; init; } | Edit this page View Source FootL Declaration public BodyPart FootL { get; init; } | Edit this page View Source FootR Declaration public BodyPart FootR { get; init; } | Edit this page View Source HandL Declaration public BodyPart HandL { get; init; } | Edit this page View Source HandR Declaration public BodyPart HandR { get; init; } | Edit this page View Source Head Declaration public BodyPart Head { get; init; } | Edit this page View Source Hip Declaration public BodyPart Hip { get; init; } | Edit this page View Source LowerArmL Declaration public BodyPart LowerArmL { get; init; } | Edit this page View Source LowerArmR Declaration public BodyPart LowerArmR { get; init; } | Edit this page View Source LowerLegL Declaration public BodyPart LowerLegL { get; init; } | Edit this page View Source LowerLegR Declaration public BodyPart LowerLegR { get; init; } | Edit this page View Source ShoulderL Declaration public BodyPart ShoulderL { get; init; } | Edit this page View Source ShoulderR Declaration public BodyPart ShoulderR { get; init; } | Edit this page View Source UpperArmL Declaration public BodyPart UpperArmL { get; init; } | Edit this page View Source UpperArmR Declaration public BodyPart UpperArmR { get; init; } | Edit this page View Source UpperLegL Declaration public BodyPart UpperLegL { get; init; } | Edit this page View Source UpperLegR Declaration public BodyPart UpperLegR { get; init; } Methods | Edit this page View Source ApplyToCharacter(PoseCharacterRenderer) Make the character perform this pose Declaration public void ApplyToCharacter(PoseCharacterRenderer rendering) | Edit this page View Source BlendToCharacter(PoseCharacterRenderer, float) Make the character perform this pose with weight Declaration public void BlendToCharacter(PoseCharacterRenderer rendering, float blend01) | Edit this page View Source RecordFromCharacter(PoseCharacterRenderer) Read pose data from the character Declaration public void RecordFromCharacter(PoseCharacterRenderer rendering) Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.CharacterRenderer.html": {
    "href": "api/AngeliA.CharacterRenderer.html",
    "title": "Class CharacterRenderer | AngeliA",
    "summary": "Class CharacterRenderer Behaviour class handles rendering of character Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public abstract class CharacterRenderer Constructors | Edit this page View Source CharacterRenderer(Character) Behaviour class handles rendering of character Declaration protected CharacterRenderer(Character target) Fields | Edit this page View Source TargetCharacter Declaration public readonly Character TargetCharacter Properties | Edit this page View Source CurrentAnimationFrame Declaration public int CurrentAnimationFrame { get; set; } | Edit this page View Source CurrentRenderingBounce Declaration public int CurrentRenderingBounce { get; } | Edit this page View Source Scale Final size scaling (0 means 0%, 1000 means 100%) Declaration public FrameBasedInt Scale { get; set; } | Edit this page View Source SpinOnGroundPound Does character spin when ground pound Declaration public bool SpinOnGroundPound { get; set; } | Edit this page View Source Tint Final color tint Declaration public FrameBasedColor Tint { get; set; } Methods | Edit this page View Source BeforeUpdate() Declaration public virtual void BeforeUpdate() | Edit this page View Source LateUpdate() Declaration public virtual void LateUpdate() | Edit this page View Source OnActivated() Callback function for character entity get activated Declaration public virtual void OnActivated() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.CharacterRenderingConfig.html": {
    "href": "api/AngeliA.CharacterRenderingConfig.html",
    "title": "Class CharacterRenderingConfig | AngeliA",
    "summary": "Class CharacterRenderingConfig Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public class CharacterRenderingConfig Fields | Edit this page View Source Body Declaration public int Body | Edit this page View Source CharacterHeight Declaration public int CharacterHeight | Edit this page View Source Ear Declaration public int Ear | Edit this page View Source Face Declaration public int Face | Edit this page View Source Foot Declaration public int Foot | Edit this page View Source Hair Declaration public int Hair | Edit this page View Source Hand Declaration public int Hand | Edit this page View Source Head Declaration public int Head | Edit this page View Source Hip Declaration public int Hip | Edit this page View Source Horn Declaration public int Horn | Edit this page View Source LowerArm Declaration public int LowerArm | Edit this page View Source LowerLeg Declaration public int LowerLeg | Edit this page View Source Shoulder Declaration public int Shoulder | Edit this page View Source SuitBody Declaration public int SuitBody | Edit this page View Source SuitFoot Declaration public int SuitFoot | Edit this page View Source SuitHand Declaration public int SuitHand | Edit this page View Source SuitHead Declaration public int SuitHead | Edit this page View Source SuitHip Declaration public int SuitHip | Edit this page View Source Tail Declaration public int Tail | Edit this page View Source UpperArm Declaration public int UpperArm | Edit this page View Source UpperLeg Declaration public int UpperLeg | Edit this page View Source Wing Declaration public int Wing Methods | Edit this page View Source AllBodyPartIsDefault() Declaration public bool AllBodyPartIsDefault() | Edit this page View Source GetBodyPartID(int) Declaration public int GetBodyPartID(int index) | Edit this page View Source LoadFromSheet(Type, bool, bool, bool) Declaration public void LoadFromSheet(Type characterType, bool ignoreBodyPart = false, bool ignoreBodyGadget = false, bool ignoreCloth = false) | Edit this page View Source LoadToCharacter(PoseCharacterRenderer) Declaration public void LoadToCharacter(PoseCharacterRenderer renderer) Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.CharacterState.html": {
    "href": "api/AngeliA.CharacterState.html",
    "title": "Enum CharacterState | AngeliA",
    "summary": "Enum CharacterState General game state of a character Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public enum CharacterState Fields Name Description GamePlay The character is online PassOut The character is offline Sleep The character is sleeping Extension Methods Extension.Next<CharacterState>(CharacterState) Extension.Prev<CharacterState>(CharacterState) Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.CheatCodeAttribute.html": {
    "href": "api/AngeliA.CheatCodeAttribute.html",
    "title": "Class CheatCodeAttribute | AngeliA",
    "summary": "Class CheatCodeAttribute The function will be called when user perform the given cheat code. Cheat code can be perform like those in NES games. Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public class CheatCodeAttribute : EventAttribute Examples [CheatCode] internal static void ExampleFunction (string code) { } Constructors | Edit this page View Source CheatCodeAttribute(string) The function will be called when user perform the given cheat code. Cheat code can be perform like those in NES games. Declaration public CheatCodeAttribute(string code) Examples [CheatCode] internal static void ExampleFunction (string code) { } Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.CheatSystem.html": {
    "href": "api/AngeliA.CheatSystem.html",
    "title": "Class CheatSystem | AngeliA",
    "summary": "Class CheatSystem Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public static class CheatSystem Properties | Edit this page View Source CheatCodeCount Declaration public static int CheatCodeCount { get; } | Edit this page View Source CurrentParam Declaration public static object CurrentParam { get; } Methods | Edit this page View Source ForAllCheatCodes() Declaration public static IEnumerable<string> ForAllCheatCodes() | Edit this page View Source GetCodeAt(int) Declaration public static string GetCodeAt(int index) | Edit this page View Source SetCheatCodeEnable(string, bool) Declaration public static void SetCheatCodeEnable(string code, bool enable) | Edit this page View Source TryAddCheatAction(string, MethodInfo, object) Declaration public static bool TryAddCheatAction(string code, MethodInfo method, object param = null)"
  },
  "api/AngeliA.CircuitOperate_Int3UnitPos_IntStamp_Direction5FromAttribute.html": {
    "href": "api/AngeliA.CircuitOperate_Int3UnitPos_IntStamp_Direction5FromAttribute.html",
    "title": "Class CircuitOperate_Int3UnitPos_IntStamp_Direction5FromAttribute | AngeliA",
    "summary": "Class CircuitOperate_Int3UnitPos_IntStamp_Direction5FromAttribute The function will be called when CircuitSystem triggers the entity that holds this function Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax [AttributeUsage(AttributeTargets.Method, AllowMultiple = false)] public class CircuitOperate_Int3UnitPos_IntStamp_Direction5FromAttribute : Attribute Examples [CircuitOperate_Int3UnitPos_IntStamp_Direction5From] internal static void ExampleFunction (Int3 unitPos, int stamp, Direction5 from) { } Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.CircuitSystem.html": {
    "href": "api/AngeliA.CircuitSystem.html",
    "title": "Class CircuitSystem | AngeliA",
    "summary": "Class CircuitSystem Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public static class CircuitSystem Methods | Edit this page View Source BitInt_to_WireConnection(int, out bool, out bool, out bool, out bool) Declaration public static void BitInt_to_WireConnection(int bitInt, out bool connectL, out bool connectR, out bool connectD, out bool connectU) | Edit this page View Source GetStamp(Int3) Declaration public static int GetStamp(Int3 unitPos) | Edit this page View Source IsCircuitOperator(int) Declaration public static bool IsCircuitOperator(int typeID) | Edit this page View Source IsWire(int) Declaration public static bool IsWire(int typeID) | Edit this page View Source OperateCircuit(Int3, int, Direction5) Declaration public static bool OperateCircuit(Int3 unitPos, int stamp = -2147483648, Direction5 circuitFrom = Direction5.Center) | Edit this page View Source RegisterWire(int, bool, bool, bool, bool) Declaration public static void RegisterWire(int id, bool connectL, bool connectR, bool connectD, bool connectU) | Edit this page View Source SaveAndClearAllBackgroundTrigger() Declaration [BeforeSavingSlotChanged(0)] [OnGameQuitting(0)] public static void SaveAndClearAllBackgroundTrigger() | Edit this page View Source TriggerCircuit(int, int, int, int, Direction5) Declaration public static void TriggerCircuit(int unitX, int unitY, int unitZ, int stamp = -2147483648, Direction5 startDirection = Direction5.Center) | Edit this page View Source TryAddBackgroundTrigger(int, Int3) Declaration public static bool TryAddBackgroundTrigger(int entityID, Int3 unitPos) | Edit this page View Source TryRemoveBackgroundTrigger(int, Int3) Declaration public static bool TryRemoveBackgroundTrigger(int entityID, Int3 unitPos) | Edit this page View Source WireConnection_to_BitInt(bool, bool, bool, bool) Declaration public static int WireConnection_to_BitInt(bool connectL, bool connectR, bool connectD, bool connectU) | Edit this page View Source WireEntityID_to_WireConnection(int, out bool, out bool, out bool, out bool) Declaration public static bool WireEntityID_to_WireConnection(int id, out bool connectL, out bool connectR, out bool connectD, out bool connectU)"
  },
  "api/AngeliA.ClampCellsScope.html": {
    "href": "api/AngeliA.ClampCellsScope.html",
    "title": "Struct ClampCellsScope | AngeliA",
    "summary": "Struct ClampCellsScope Scope to clamp rendering cell into given rect position Implements IDisposable Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public readonly struct ClampCellsScope : IDisposable Examples using AngeliA; namespace AngeliaGame; public class Example { [OnGameUpdate] internal static void OnGameUpdate () { int x = QTest.Int(\"X\", 0, 0, Const.CEL * 128); int y = QTest.Int(\"Y\", 0, 0, Const.CEL * 128); int w = QTest.Int(\"W\", Const.CEL * 24, 0, Const.CEL * 128); int h = QTest.Int(\"H\", Const.CEL * 24, 0, Const.CEL * 128); var cameraRect = Renderer.CameraRect; Renderer.SetLayer(RenderLayer.UI); using (new ClampCellsScope(new IRect(cameraRect.x + x, cameraRect.y + y, w, h))) { // Rendering cell created inside will have be clamped inside Renderer.Draw(BuiltInSprite.ICON_ENTITY, cameraRect.Shrink(Const.CEL * 3).Fit(1, 1)); } } } Constructors | Edit this page View Source ClampCellsScope(IRect) Scope to clamp rendering cell into given rect position Declaration public ClampCellsScope(IRect rect) Parameters Type Name Description IRect rect Rect position in global space Examples using AngeliA; namespace AngeliaGame; public class Example { [OnGameUpdate] internal static void OnGameUpdate () { int x = QTest.Int(\"X\", 0, 0, Const.CEL * 128); int y = QTest.Int(\"Y\", 0, 0, Const.CEL * 128); int w = QTest.Int(\"W\", Const.CEL * 24, 0, Const.CEL * 128); int h = QTest.Int(\"H\", Const.CEL * 24, 0, Const.CEL * 128); var cameraRect = Renderer.CameraRect; Renderer.SetLayer(RenderLayer.UI); using (new ClampCellsScope(new IRect(cameraRect.x + x, cameraRect.y + y, w, h))) { // Rendering cell created inside will have be clamped inside Renderer.Draw(BuiltInSprite.ICON_ENTITY, cameraRect.Shrink(Const.CEL * 3).Fit(1, 1)); } } } Methods | Edit this page View Source Dispose() Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources. Declaration public void Dispose() Implements IDisposable Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.Cloth.html": {
    "href": "api/AngeliA.Cloth.html",
    "title": "Class Cloth | AngeliA",
    "summary": "Class Cloth Cloth for pose-style character (not for equipment items). Get instance with Cloth.TryGetCloth(id, out var result) Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public abstract class Cloth Properties | Edit this page View Source ClothID Global unique id for this type of cloth Declaration public int ClothID { get; } | Edit this page View Source ClothName Type name for this type of cloth Declaration public string ClothName { get; } | Edit this page View Source ClothSystemReady Declaration public static bool ClothSystemReady { get; } | Edit this page View Source ClothType Where should characters wear this cloth Declaration public abstract ClothType ClothType { get; } | Edit this page View Source SheetIndex Which artwork sheet does this cloth get it's artwork from Declaration public int SheetIndex { get; } | Edit this page View Source SpriteLoaded True if the artwork sprites are loaded Declaration public virtual bool SpriteLoaded { get; } Methods | Edit this page View Source AttachClothOn(BodyPart, AngeSprite, int, int, int, int, int, int, int, int, bool) Attach the given artwork sprite as a general cloth to given bodypart. Cloth will use it's own size no matter how big the bodypart is. Declaration public static Cell[] AttachClothOn(BodyPart bodyPart, AngeSprite sprite, int locationX, int locationY, int localZ, int widthAmount = 1000, int heightAmount = 1000, int localRotation = 0, int shiftPixelX = 0, int shiftPixelY = 0, bool defaultHideLimb = true) Parameters Type Name Description BodyPart bodyPart Target bodypart AngeSprite sprite Artwork sprite int locationX Position X in bodypart's local space int locationY Position Y in bodypart's local space int localZ Local Z value the sort rendering cells int widthAmount Horizontal size scaling (0 means 0%, 1000 means 100%) int heightAmount Vertical size scaling (0 means 0%, 1000 means 100%) int localRotation Rotation of the cloth in bodypart's local space int shiftPixelX Position offset X int shiftPixelY Position offset Y bool defaultHideLimb True if it requires the bodypart to be hiden. Artwork sprite's tag will override this value. Returns Type Description Cell[] Rendering cells which holds the cloth rendering data | Edit this page View Source CoverClothOn(BodyPart, AngeSprite) Cover the given artwork sprite as a general cloth to given bodypart. Size of the sprite will change based on how big the bodypart is. Declaration public static Cell[] CoverClothOn(BodyPart bodyPart, AngeSprite sprite) Parameters Type Name Description BodyPart bodyPart Target bodypart AngeSprite sprite Artwork sprite Returns Type Description Cell[] Rendering cells which holds the cloth rendering data | Edit this page View Source CoverClothOn(BodyPart, AngeSprite, int) Cover the given artwork sprite as a general cloth to given bodypart. Size of the sprite will change based on how big the bodypart is. Declaration public static Cell[] CoverClothOn(BodyPart bodyPart, AngeSprite sprite, int localZ) Parameters Type Name Description BodyPart bodyPart Target bodypart AngeSprite sprite Artwork sprite int localZ Local Z value the sort rendering cells Returns Type Description Cell[] Rendering cells which holds the cloth rendering data | Edit this page View Source CoverClothOn(BodyPart, AngeSprite, int, Color32, bool) Cover the given artwork sprite as a general cloth to given bodypart. Size of the sprite will change based on how big the bodypart is. Declaration public static Cell[] CoverClothOn(BodyPart bodyPart, AngeSprite sprite, int localZ, Color32 tint, bool defaultHideLimb = true) Parameters Type Name Description BodyPart bodyPart Target bodypart AngeSprite sprite Artwork sprite int localZ Local Z value the sort rendering cells Color32 tint Color tint bool defaultHideLimb True if it requires the bodypart to be hiden. Artwork sprite's tag will override this value. Returns Type Description Cell[] Rendering cells which holds the cloth rendering data | Edit this page View Source DrawCloth(PoseCharacterRenderer) Draw cloth for the given character Declaration public abstract void DrawCloth(PoseCharacterRenderer renderer) | Edit this page View Source DrawClothGizmos(IRect, Color32, int) Draw cloth as gizmos Declaration public virtual void DrawClothGizmos(IRect rect, Color32 tint, int z) Parameters Type Name Description IRect rect Rect position in global space Color32 tint Color tint int z Z value for sort rendering cell | Edit this page View Source FillFromSheet(string) Load sprite data from Renderer.CurrentSheet Declaration public virtual bool FillFromSheet(string name) | Edit this page View Source ForAllCloth() Iterate through all cloth instance in pool Declaration public static IEnumerable<KeyValuePair<int, Cloth>> ForAllCloth() | Edit this page View Source GetDefaultClothID(int, ClothType) Get ID of given character's default cloth. Return 0 if not found Declaration public static int GetDefaultClothID(int characterID, ClothType suitType) | Edit this page View Source GetDisplayName(out int) Get display name for this cloth from language system. Declaration public string GetDisplayName(out int languageID) | Edit this page View Source HasCloth(int) Does cloth with given id exists in the pool Declaration public static bool HasCloth(int clothID) | Edit this page View Source TryGetCloth(int, out Cloth) Get cloth instance from pool Declaration public static bool TryGetCloth(int clothID, out Cloth cloth) Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.ClothItem.html": {
    "href": "api/AngeliA.ClothItem.html",
    "title": "Class ClothItem | AngeliA",
    "summary": "Class ClothItem Represent an item that holds a cloth for pose-style character to wear. Unlike body armor, cloth do not occupy equipment slot. Implements IMapItem Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public sealed class ClothItem : NonStackableItem, IMapItem Constructors | Edit this page View Source ClothItem(int) Represent an item that holds a cloth for pose-style character to wear. Unlike body armor, cloth do not occupy equipment slot. Declaration public ClothItem(int id) Parameters Type Name Description int id ID of the cloth Properties | Edit this page View Source ClothID ID of the cloth Declaration public int ClothID { get; init; } Methods | Edit this page View Source CanUse(Character) True if this item can be use at current frame Declaration public override bool CanUse(Character holder) Parameters Type Name Description Character holder Holder that trying to use this item Overrides Item.CanUse(Character) | Edit this page View Source DrawItem(Entity, IRect, Color32, int) Call this function to render the item Declaration public override void DrawItem(Entity holder, IRect rect, Color32 tint, int z) Parameters Type Name Description Entity holder Holder that own this item IRect rect Rect position in global space Color32 tint Color tint int z Z value for sort rendering cells Overrides Item.DrawItem(Entity, IRect, Color32, int) | Edit this page View Source Use(Character, int, int, out bool) Perform the logic when the item get used Declaration public override bool Use(Character holder, int inventoryID, int itemIndex, out bool consume) Parameters Type Name Description Character holder Holder that using this item int inventoryID Inventory ID of this holder int itemIndex Index of this item inside the inventory bool consume True if the item should disappear after being used Returns Type Description bool True if the item is used Overrides Item.Use(Character, int, int, out bool) Implements IMapItem Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.ClothType.html": {
    "href": "api/AngeliA.ClothType.html",
    "title": "Enum ClothType | AngeliA",
    "summary": "Enum ClothType Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public enum ClothType Fields Name Description Body Foot Hand Head Hip Extension Methods Extension.Next<ClothType>(ClothType) Extension.Prev<ClothType>(ClothType) Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.Color32.html": {
    "href": "api/AngeliA.Color32.html",
    "title": "Struct Color32 | AngeliA",
    "summary": "Struct Color32 Implements IFormattable IComparable Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax [Serializable] public struct Color32 : IFormattable, IComparable Constructors | Edit this page View Source Color32(byte, byte, byte, byte) Declaration public Color32(byte r, byte g, byte b, byte a = 255) Fields | Edit this page View Source BLACK Declaration public static readonly Color32 BLACK | Edit this page View Source BLACK_12 Declaration public static readonly Color32 BLACK_12 | Edit this page View Source BLACK_128 Declaration public static readonly Color32 BLACK_128 | Edit this page View Source BLACK_196 Declaration public static readonly Color32 BLACK_196 | Edit this page View Source BLACK_220 Declaration public static readonly Color32 BLACK_220 | Edit this page View Source BLACK_32 Declaration public static readonly Color32 BLACK_32 | Edit this page View Source BLACK_64 Declaration public static readonly Color32 BLACK_64 | Edit this page View Source BLACK_96 Declaration public static readonly Color32 BLACK_96 | Edit this page View Source BLUE Declaration public static readonly Color32 BLUE | Edit this page View Source BLUE_BETTER Declaration public static readonly Color32 BLUE_BETTER | Edit this page View Source CLEAR Declaration public static readonly Color32 CLEAR | Edit this page View Source CYAN Declaration public static readonly Color32 CYAN | Edit this page View Source CYAN_BETTER Declaration public static readonly Color32 CYAN_BETTER | Edit this page View Source CYAN_DARK Declaration public static readonly Color32 CYAN_DARK | Edit this page View Source GREEN Declaration public static readonly Color32 GREEN | Edit this page View Source GREEN_BETTER Declaration public static readonly Color32 GREEN_BETTER | Edit this page View Source GREEN_DARK Declaration public static readonly Color32 GREEN_DARK | Edit this page View Source GREY_112 Declaration public static readonly Color32 GREY_112 | Edit this page View Source GREY_12 Declaration public static readonly Color32 GREY_12 | Edit this page View Source GREY_128 Declaration public static readonly Color32 GREY_128 | Edit this page View Source GREY_160 Declaration public static readonly Color32 GREY_160 | Edit this page View Source GREY_196 Declaration public static readonly Color32 GREY_196 | Edit this page View Source GREY_20 Declaration public static readonly Color32 GREY_20 | Edit this page View Source GREY_216 Declaration public static readonly Color32 GREY_216 | Edit this page View Source GREY_230 Declaration public static readonly Color32 GREY_230 | Edit this page View Source GREY_245 Declaration public static readonly Color32 GREY_245 | Edit this page View Source GREY_32 Declaration public static readonly Color32 GREY_32 | Edit this page View Source GREY_38 Declaration public static readonly Color32 GREY_38 | Edit this page View Source GREY_42 Declaration public static readonly Color32 GREY_42 | Edit this page View Source GREY_46 Declaration public static readonly Color32 GREY_46 | Edit this page View Source GREY_56 Declaration public static readonly Color32 GREY_56 | Edit this page View Source GREY_64 Declaration public static readonly Color32 GREY_64 | Edit this page View Source GREY_96 Declaration public static readonly Color32 GREY_96 | Edit this page View Source ORANGE Declaration public static readonly Color32 ORANGE | Edit this page View Source ORANGE_BETTER Declaration public static readonly Color32 ORANGE_BETTER | Edit this page View Source ORANGE_DARK Declaration public static readonly Color32 ORANGE_DARK | Edit this page View Source PINK Declaration public static readonly Color32 PINK | Edit this page View Source PURPLE Declaration public static readonly Color32 PURPLE | Edit this page View Source PURPLE_BETTER Declaration public static readonly Color32 PURPLE_BETTER | Edit this page View Source RED Declaration public static readonly Color32 RED | Edit this page View Source RED_BETTER Declaration public static readonly Color32 RED_BETTER | Edit this page View Source RED_DARK Declaration public static readonly Color32 RED_DARK | Edit this page View Source SKIN_YELLOW Declaration public static readonly Color32 SKIN_YELLOW | Edit this page View Source WHITE Declaration public static readonly Color32 WHITE | Edit this page View Source WHITE_0 Declaration public static readonly Color32 WHITE_0 | Edit this page View Source WHITE_12 Declaration public static readonly Color32 WHITE_12 | Edit this page View Source WHITE_128 Declaration public static readonly Color32 WHITE_128 | Edit this page View Source WHITE_196 Declaration public static readonly Color32 WHITE_196 | Edit this page View Source WHITE_20 Declaration public static readonly Color32 WHITE_20 | Edit this page View Source WHITE_32 Declaration public static readonly Color32 WHITE_32 | Edit this page View Source WHITE_46 Declaration public static readonly Color32 WHITE_46 | Edit this page View Source WHITE_6 Declaration public static readonly Color32 WHITE_6 | Edit this page View Source WHITE_64 Declaration public static readonly Color32 WHITE_64 | Edit this page View Source WHITE_96 Declaration public static readonly Color32 WHITE_96 | Edit this page View Source YELLOW Declaration public static readonly Color32 YELLOW | Edit this page View Source YELLOW_DARK Declaration public static readonly Color32 YELLOW_DARK | Edit this page View Source a Declaration public byte a | Edit this page View Source b Declaration public byte b | Edit this page View Source g Declaration public byte g | Edit this page View Source r Declaration public byte r Methods | Edit this page View Source CompareTo(object) Compares the current instance with another object of the same type and returns an integer that indicates whether the current instance precedes, follows, or occurs in the same position in the sort order as the other object. Declaration public readonly int CompareTo(object obj) Parameters Type Name Description object obj An object to compare with this instance. Returns Type Description int A value that indicates the relative order of the objects being compared. The return value has these meanings: Value Meaning Less than zero This instance precedes obj in the sort order. Zero This instance occurs in the same position in the sort order as obj. Greater than zero This instance follows obj in the sort order. Exceptions Type Condition ArgumentException obj is not the same type as this instance. | Edit this page View Source Equals(object) Indicates whether this instance and a specified object are equal. Declaration public override readonly bool Equals(object obj) Parameters Type Name Description object obj The object to compare with the current instance. Returns Type Description bool true if obj and this instance are the same type and represent the same value; otherwise, false. Overrides ValueType.Equals(object) | Edit this page View Source GetHashCode() Returns the hash code for this instance. Declaration public override readonly int GetHashCode() Returns Type Description int A 32-bit signed integer that is the hash code for this instance. Overrides ValueType.GetHashCode() | Edit this page View Source Lerp(Color32, Color32, float) Declaration public static Color32 Lerp(Color32 a, Color32 b, float t) | Edit this page View Source LerpUnclamped(Color32, Color32, float) Declaration public static Color32 LerpUnclamped(Color32 a, Color32 b, float t) | Edit this page View Source ToString() Returns the fully qualified type name of this instance. Declaration public override readonly string ToString() Returns Type Description string The fully qualified type name. Overrides ValueType.ToString() | Edit this page View Source ToString(string) Declaration public readonly string ToString(string format) | Edit this page View Source ToString(string, IFormatProvider) Formats the value of the current instance using the specified format. Declaration public readonly string ToString(string format, IFormatProvider formatProvider) Parameters Type Name Description string format The format to use. -or- A null reference (Nothing in Visual Basic) to use the default format defined for the type of the IFormattable implementation. IFormatProvider formatProvider The provider to use to format the value. -or- A null reference (Nothing in Visual Basic) to obtain the numeric format information from the current locale setting of the operating system. Returns Type Description string The value of the current instance in the specified format. Operators | Edit this page View Source operator ==(Color32, Color32) Declaration public static bool operator ==(Color32 a, Color32 b) | Edit this page View Source operator !=(Color32, Color32) Declaration public static bool operator !=(Color32 a, Color32 b) | Edit this page View Source operator *(Color32, Color32) Declaration public static Color32 operator *(Color32 a, Color32 b) Implements IFormattable IComparable Extension Methods Extension.Adjust(Color32, float, float, float, float) Extension.IsSame(Color32, Color32, bool) Extension.LookDifferent(Color32, Color32) Extension.Mult(Color32, Color32) Extension.ToColorF(Color32) Extension.WithNewA(Color32, int) Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.ColorF.html": {
    "href": "api/AngeliA.ColorF.html",
    "title": "Struct ColorF | AngeliA",
    "summary": "Struct ColorF Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public struct ColorF Constructors | Edit this page View Source ColorF(float, float, float, float) Declaration public ColorF(float r, float g, float b, float a = 1) Fields | Edit this page View Source a Declaration public float a | Edit this page View Source b Declaration public float b | Edit this page View Source g Declaration public float g | Edit this page View Source r Declaration public float r Methods | Edit this page View Source CompareTo(object) Declaration public readonly int CompareTo(object obj) | Edit this page View Source Equals(object) Indicates whether this instance and a specified object are equal. Declaration public override readonly bool Equals(object obj) Parameters Type Name Description object obj The object to compare with the current instance. Returns Type Description bool true if obj and this instance are the same type and represent the same value; otherwise, false. Overrides ValueType.Equals(object) | Edit this page View Source GetHashCode() Returns the hash code for this instance. Declaration public override readonly int GetHashCode() Returns Type Description int A 32-bit signed integer that is the hash code for this instance. Overrides ValueType.GetHashCode() | Edit this page View Source Lerp(ColorF, ColorF, float) Declaration public static ColorF Lerp(ColorF a, ColorF b, float t) | Edit this page View Source ToString() Returns the fully qualified type name of this instance. Declaration public override readonly string ToString() Returns Type Description string The fully qualified type name. Overrides ValueType.ToString() | Edit this page View Source ToString(string) Declaration public readonly string ToString(string format) | Edit this page View Source ToString(string, IFormatProvider) Declaration public readonly string ToString(string format, IFormatProvider formatProvider) Operators | Edit this page View Source operator ==(ColorF, ColorF) Declaration public static bool operator ==(ColorF a, ColorF b) | Edit this page View Source operator !=(ColorF, ColorF) Declaration public static bool operator !=(ColorF a, ColorF b) | Edit this page View Source operator *(ColorF, ColorF) Declaration public static ColorF operator *(ColorF a, ColorF b) Extension Methods Extension.Almost(ColorF, ColorF) Extension.ToColor32(ColorF) Extension.WithNewA(ColorF, float) Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.ColorGradient.Data.html": {
    "href": "api/AngeliA.ColorGradient.Data.html",
    "title": "Struct ColorGradient.Data | AngeliA",
    "summary": "Struct ColorGradient.Data Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax [Serializable] public struct ColorGradient.Data Constructors | Edit this page View Source Data(Color32, float) Declaration public Data(Color32 color, float time) Fields | Edit this page View Source color Declaration public Color32 color | Edit this page View Source time Declaration public float time Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.ColorGradient.html": {
    "href": "api/AngeliA.ColorGradient.html",
    "title": "Class ColorGradient | AngeliA",
    "summary": "Class ColorGradient Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax [Serializable] public class ColorGradient Constructors | Edit this page View Source ColorGradient(params Data[]) Declaration public ColorGradient(params ColorGradient.Data[] values) Fields | Edit this page View Source Values Declaration public ColorGradient.Data[] Values Methods | Edit this page View Source Evaluate(float) Declaration public Color32 Evaluate(float time) Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.CompareMode.html": {
    "href": "api/AngeliA.CompareMode.html",
    "title": "Enum CompareMode | AngeliA",
    "summary": "Enum CompareMode Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public enum CompareMode Fields Name Description And Equal GreaterOrEqual GreaterThan LessOrEqual LessThan NotEqual Or Extension Methods Extension.Next<CompareMode>(CompareMode) Extension.Prev<CompareMode>(CompareMode) Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.Const.html": {
    "href": "api/AngeliA.Const.html",
    "title": "Class Const | AngeliA",
    "summary": "Class Const Utility class for constant values Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public static class Const Fields | Edit this page View Source ANTI_SPAWN_PADDING Entity anti-spawning rect expand distance from view-rect in global size Declaration public const int ANTI_SPAWN_PADDING = 512 | Edit this page View Source ANTI_SPAWN_PADDING_UNIT Entity anti-spawning rect expand distance from view-rect in unit (1 unit = 256 global size) Declaration public const int ANTI_SPAWN_PADDING_UNIT = 2 | Edit this page View Source ART_CEL Global size of a artwork pixel Declaration public const int ART_CEL = 16 | Edit this page View Source ART_SCALE Size ratio between global size and artwork pixel Declaration public const int ART_SCALE = 16 | Edit this page View Source CEL Global size of a block unit Declaration public const int CEL = 256 | Edit this page View Source CEL2 Global size of a block unit Declaration public static readonly Int2 CEL2 | Edit this page View Source CONTROL_COPY Declaration public const char CONTROL_COPY = '\\u0003' | Edit this page View Source CONTROL_CUT Declaration public const char CONTROL_CUT = '\\u0018' | Edit this page View Source CONTROL_PASTE Declaration public const char CONTROL_PASTE = '\\u0016' | Edit this page View Source CONTROL_SELECT_ALL Declaration public const char CONTROL_SELECT_ALL = '\\u0006' | Edit this page View Source CURSOR_ARROW Pointing arrow mouse cursor Declaration public const int CURSOR_ARROW = 1 | Edit this page View Source CURSOR_BEAM Texting beam mouse cursor for input field Declaration public const int CURSOR_BEAM = 2 | Edit this page View Source CURSOR_COUNT Total count of mouse cursor styles Declaration public const int CURSOR_COUNT = 11 | Edit this page View Source CURSOR_CROSSHAIR Cross shape mouse cursor with no arrow on the edge Declaration public const int CURSOR_CROSSHAIR = 3 | Edit this page View Source CURSOR_DEFAULT Default mouse cursor Declaration public const int CURSOR_DEFAULT = 0 | Edit this page View Source CURSOR_HAND Point hand mouse cursor Declaration public const int CURSOR_HAND = 4 | Edit this page View Source CURSOR_NONE No mouse cursor Declaration public const int CURSOR_NONE = -2 | Edit this page View Source CURSOR_PROHIBIT Forbidden symbol mouse cursor Declaration public const int CURSOR_PROHIBIT = 10 | Edit this page View Source CURSOR_RESIZE_CROSS Mouse cursor with arrows pointing left, right, up and down. Declaration public const int CURSOR_RESIZE_CROSS = 9 | Edit this page View Source CURSOR_RESIZE_HORIZONTAL Mouse cursor with arrows pointing left and right Declaration public const int CURSOR_RESIZE_HORIZONTAL = 5 | Edit this page View Source CURSOR_RESIZE_TOPLEFT Mouse cursor with arrows pointing top-left and bottom-right (like ) Declaration public const int CURSOR_RESIZE_TOPLEFT = 7 | Edit this page View Source CURSOR_RESIZE_TOPRIGHT Mouse cursor with arrows pointing top-right and bottom-left (like /) Declaration public const int CURSOR_RESIZE_TOPRIGHT = 8 | Edit this page View Source CURSOR_RESIZE_VERTICAL Mouse cursor with arrows pointing up and down Declaration public const int CURSOR_RESIZE_VERTICAL = 6 | Edit this page View Source EQUIPMENT_TYPE_COUNT Declaration public static readonly int EQUIPMENT_TYPE_COUNT | Edit this page View Source HALF Global size of a half block unit Declaration public const int HALF = 128 | Edit this page View Source HALF2 Global size of a half block unit Declaration public static readonly Int2 HALF2 | Edit this page View Source LEVEL_SPAWN_PADDING Level block expand distance from view-rect in global size Declaration public const int LEVEL_SPAWN_PADDING = 2048 | Edit this page View Source LEVEL_SPAWN_PADDING_UNIT Level block expand distance from view-rect in unit (1 unit = 256 global size) Declaration public const int LEVEL_SPAWN_PADDING_UNIT = 8 | Edit this page View Source MAP Unit size of a map file Declaration public const int MAP = 128 | Edit this page View Source MAX_CHARACTER_HEIGHT Declaration public const int MAX_CHARACTER_HEIGHT = 251 | Edit this page View Source MIN_CHARACTER_HEIGHT Declaration public const int MIN_CHARACTER_HEIGHT = 65 | Edit this page View Source ORIGINAL_PIVOT Use the original pivot of the sprite from artwork sheet Declaration public const int ORIGINAL_PIVOT = 2147483647 | Edit this page View Source ORIGINAL_SIZE Use the original size of the sprite from artwork sheet Declaration public const int ORIGINAL_SIZE = 2147483647 | Edit this page View Source ORIGINAL_SIZE_NEGATAVE Use the original size * -1 of the sprite from artwork sheet Declaration public const int ORIGINAL_SIZE_NEGATAVE = -2147483648 | Edit this page View Source PIXEL Sprite ID of the 1x1 white pixel Declaration public const int PIXEL = 11254534 | Edit this page View Source QUARTER Global size of a quarter block unit Declaration public const int QUARTER = 64 | Edit this page View Source QUARTER2 Global size of a quarter block unit Declaration public static readonly Int2 QUARTER2 | Edit this page View Source RETURN_SIGN Declaration public const char RETURN_SIGN = '\\r' | Edit this page View Source RIG_BUFFER_SIZE Declaration public const int RIG_BUFFER_SIZE = 5000000 | Edit this page View Source SCREEN_EFFECT_COUNT Screen effect total count Declaration public const int SCREEN_EFFECT_COUNT = 6 | Edit this page View Source SCREEN_EFFECT_GREYSCALE Screen effect index for the grey-scale effect Declaration public const int SCREEN_EFFECT_GREYSCALE = 4 | Edit this page View Source SCREEN_EFFECT_INVERT Screen effect index for the invert effect Declaration public const int SCREEN_EFFECT_INVERT = 5 | Edit this page View Source SCREEN_EFFECT_NAMES Declaration public static readonly string[] SCREEN_EFFECT_NAMES | Edit this page View Source SCREEN_EFFECT_RETRO_DARKEN Screen effect index for the retro-darken effect Declaration public const int SCREEN_EFFECT_RETRO_DARKEN = 1 | Edit this page View Source SCREEN_EFFECT_RETRO_LIGHTEN Screen effect index for the retro-lighten effect Declaration public const int SCREEN_EFFECT_RETRO_LIGHTEN = 2 | Edit this page View Source SCREEN_EFFECT_TINT Screen effect index for the tint effect Declaration public const int SCREEN_EFFECT_TINT = 0 | Edit this page View Source SCREEN_EFFECT_VIGNETTE Screen effect index for the vignette effect Declaration public const int SCREEN_EFFECT_VIGNETTE = 3 | Edit this page View Source SOUND_CHANNEL_COUNT Declaration public const int SOUND_CHANNEL_COUNT = 6 | Edit this page View Source SPAWN_PADDING Entity spawning expand distance from view-rect in global size Declaration public const int SPAWN_PADDING = 4096 | Edit this page View Source SPAWN_PADDING_UNIT Entity spawning expand distance from view-rect in unit (1 unit = 256 global size) Declaration public const int SPAWN_PADDING_UNIT = 16 | Edit this page View Source SliceIgnoreCenter Declaration public static readonly bool[] SliceIgnoreCenter | Edit this page View Source TEAM_ALL Attack target team for all Declaration public const int TEAM_ALL = 15 | Edit this page View Source TEAM_COUNT Attack target team total count Declaration public const int TEAM_COUNT = 4 | Edit this page View Source TEAM_ENEMY Attack target team for enemy Declaration public const int TEAM_ENEMY = 8 | Edit this page View Source TEAM_ENVIRONMENT Attack target team for environment Declaration public const int TEAM_ENVIRONMENT = 1 | Edit this page View Source TEAM_NEUTRAL Attack target team for neutral Declaration public const int TEAM_NEUTRAL = 2 | Edit this page View Source TEAM_PLAYER Attack target team for player Declaration public const int TEAM_PLAYER = 4 Methods | Edit this page View Source EmptyBoolMethod() Literally an empty method that returns a bool value (It returns \"true\" if you wonder) Declaration public static bool EmptyBoolMethod() | Edit this page View Source EmptyMethod() Literally an empty method Declaration public static void EmptyMethod()"
  },
  "api/AngeliA.ControlHintUI.html": {
    "href": "api/AngeliA.ControlHintUI.html",
    "title": "Class ControlHintUI | AngeliA",
    "summary": "Class ControlHintUI Hint for active buttons displays at botton-left corner of the screen during gameplay Implements IMapItem Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax [Entity.StageOrder(2147483647)] [Entity.Capacity(1, 1)] public class ControlHintUI : EntityUI, IMapItem Constructors | Edit this page View Source ControlHintUI() Declaration public ControlHintUI() Properties | Edit this page View Source Instance Single instance of this entity Declaration public static ControlHintUI Instance { get; } | Edit this page View Source OffsetX Position offset X in global space Declaration public int OffsetX { get; set; } | Edit this page View Source OffsetY Position offset Y in global space Declaration public int OffsetY { get; set; } | Edit this page View Source UseControlHint True if show the control hint UI Declaration public static bool UseControlHint { get; set; } | Edit this page View Source UseGamePadHint True if show the gamepad UI indicator Declaration public static bool UseGamePadHint { get; set; } Methods | Edit this page View Source AddHint(Gamekey, Gamekey, string, int) Require hint for given game-key for the current frame Declaration public static void AddHint(Gamekey keyA, Gamekey keyB, string label, int priority = -2147483648) int priority Require with large priority will override the one with small priority | Edit this page View Source AddHint(Gamekey, string, int) Require hint for given game-key for the current frame Declaration public static void AddHint(Gamekey key, string label, int priority = -2147483648) int priority Require with large priority will override the one with small priority | Edit this page View Source AddHint(KeyboardKey, KeyboardKey, string) Require hint for given keyboard-key for the current frame Declaration public static void AddHint(KeyboardKey keyA, KeyboardKey keyB, string label) | Edit this page View Source AddHint(KeyboardKey, string) Require hint for given keyboard-key for the current frame Declaration public static void AddHint(KeyboardKey key, string label) | Edit this page View Source DrawGlobalHint(int, int, Gamekey, Gamekey, string, bool) Draw a control hint UI on the given position Declaration public static void DrawGlobalHint(int globalX, int globalY, Gamekey keyA, Gamekey keyB, string label, bool background = false) Parameters Type Name Description int globalX Position X in global space int globalY Position Y in global space string label Hint content bool background True if the hint renders with a black background | Edit this page View Source DrawGlobalHint(int, int, Gamekey, string, bool) Draw a control hint UI on the given position Declaration public static void DrawGlobalHint(int globalX, int globalY, Gamekey key, string label, bool background = false) Parameters Type Name Description int globalX Position X in global space int globalY Position Y in global space Gamekey key Target key string label Hint content bool background True if the hint renders with a black background | Edit this page View Source DrawGlobalHint(int, int, GamepadKey, GamepadKey, string, bool) Draw a control hint UI on the given position Declaration public static void DrawGlobalHint(int globalX, int globalY, GamepadKey keyA, GamepadKey keyB, string label, bool background = false) Parameters Type Name Description int globalX Position X in global space int globalY Position Y in global space string label Hint content bool background True if the hint renders with a black background | Edit this page View Source DrawGlobalHint(int, int, GamepadKey, string, bool) Draw a control hint UI on the given position Declaration public static void DrawGlobalHint(int globalX, int globalY, GamepadKey key, string label, bool background = false) Parameters Type Name Description int globalX Position X in global space int globalY Position Y in global space GamepadKey key Target key string label Hint content bool background True if the hint renders with a black background | Edit this page View Source DrawGlobalHint(int, int, KeyboardKey, KeyboardKey, string, bool) Draw a control hint UI on the given position Declaration public static void DrawGlobalHint(int globalX, int globalY, KeyboardKey keyA, KeyboardKey keyB, string label, bool background = false) Parameters Type Name Description int globalX Position X in global space int globalY Position Y in global space string label Hint content bool background True if the hint renders with a black background | Edit this page View Source DrawGlobalHint(int, int, KeyboardKey, string, bool) Draw a control hint UI on the given position Declaration public static void DrawGlobalHint(int globalX, int globalY, KeyboardKey key, string label, bool background = false) Parameters Type Name Description int globalX Position X in global space int globalY Position Y in global space KeyboardKey key Target key string label Hint content bool background True if the hint renders with a black background | Edit this page View Source ForceHideGamepad(int) Hide gamepad indicator even user have turn it on in setting menu Declaration public static void ForceHideGamepad(int duration = 1) | Edit this page View Source ForceHideGlobalHint(int) Hide all global hints for given frames Declaration public static void ForceHideGlobalHint(int duration = 1) | Edit this page View Source ForceOffset(int, int, int) Override global position offset for given frames Declaration public static void ForceOffset(int x, int y, int duration = 1) | Edit this page View Source ForceShowHint(int) Show control hint even user have turn it off in setting menu Declaration public static void ForceShowHint(int duration = 1) | Edit this page View Source OnActivated() This function is called when entity enter the stage Declaration public override void OnActivated() Overrides Entity.OnActivated() Implements IMapItem Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.Cursor.html": {
    "href": "api/AngeliA.Cursor.html",
    "title": "Class Cursor | AngeliA",
    "summary": "Class Cursor Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public static class Cursor Properties | Edit this page View Source CurrentCursorIndex Declaration public static int CurrentCursorIndex { get; } | Edit this page View Source CursorPriority Declaration public static int CursorPriority { get; set; } Methods | Edit this page View Source GetResizeCursorIndex(Direction8) Declaration public static int GetResizeCursorIndex(Direction8 direction) | Edit this page View Source RequireCursor(int) Declaration public static void RequireCursor(int priority = -1) | Edit this page View Source SetCursor(int, IRect, int) Declaration public static void SetCursor(int cursorIndex, IRect mouseRange, int priority = 0) | Edit this page View Source SetCursor(int, int) Declaration public static void SetCursor(int cursorIndex, int priority = 0) | Edit this page View Source SetCursorAsBeam(IRect, int) Declaration public static void SetCursorAsBeam(IRect mouseRange, int priority = 0) | Edit this page View Source SetCursorAsBeam(int) Declaration public static void SetCursorAsBeam(int priority = 0) | Edit this page View Source SetCursorAsHand(IRect, int) Declaration public static void SetCursorAsHand(IRect mouseRange, int priority = 0) | Edit this page View Source SetCursorAsHand(int) Declaration public static void SetCursorAsHand(int priority = 0) | Edit this page View Source SetCursorAsMove(IRect, int) Declaration public static void SetCursorAsMove(IRect mouseRange, int priority = 0) | Edit this page View Source SetCursorAsMove(int) Declaration public static void SetCursorAsMove(int priority = 0) | Edit this page View Source SetCursorAsNone(int) Declaration public static void SetCursorAsNone(int priority = 0) | Edit this page View Source SetCursorAsNormal(int) Declaration public static void SetCursorAsNormal(int priority = 0)"
  },
  "api/AngeliA.Damage.html": {
    "href": "api/AngeliA.Damage.html",
    "title": "Struct Damage | AngeliA",
    "summary": "Struct Damage Data structure for a single damage performed Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public struct Damage Constructors | Edit this page View Source Damage(int, int, Entity, Tag) Data structure for a single damage performed Declaration public Damage(int amount, int targetTeam = 15, Entity bullet = null, Tag type = Tag.PhysicalDamage) Parameters Type Name Description int amount How many damage it deals int targetTeam What team does it attacks Entity bullet Which bullet does it came from Tag type What special type does it holds Fields | Edit this page View Source Amount Declaration public int Amount | Edit this page View Source Bullet Declaration public Entity Bullet | Edit this page View Source IgnoreInvincible Do not make target become invincible after take this damage Declaration public bool IgnoreInvincible | Edit this page View Source IgnoreStun Do not make target stun after take this damage Declaration public bool IgnoreStun | Edit this page View Source TargetTeam Declaration public int TargetTeam | Edit this page View Source Type Declaration public Tag Type Methods | Edit this page View Source DamageUpdateFromLevel() Declaration [OnGameUpdateLater(0)] public static void DamageUpdateFromLevel() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.Debug.html": {
    "href": "api/AngeliA.Debug.html",
    "title": "Class Debug | AngeliA",
    "summary": "Class Debug Log debug messages to the console or screen Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public static class Debug Methods | Edit this page View Source Log(LanguageCode) Declaration public static void Log(LanguageCode message) | Edit this page View Source Log(object) Declaration public static void Log(object message) | Edit this page View Source Log(params object[]) Declaration public static void Log(params object[] messages) | Edit this page View Source LogError(LanguageCode) Declaration public static void LogError(LanguageCode message) | Edit this page View Source LogError(object) Declaration public static void LogError(object message) | Edit this page View Source LogError(params object[]) Declaration public static void LogError(params object[] messages) | Edit this page View Source LogException(Exception) Declaration public static void LogException(Exception ex) | Edit this page View Source LogLabel(object) Draw a label on top-right of the screen for the current frame Declaration public static void LogLabel(object obj) | Edit this page View Source LogLabel(params object[]) Draw a label on top-right of the screen for the current frame Declaration public static void LogLabel(params object[] objs) | Edit this page View Source LogLabel(string) Draw a label on top-right of the screen for the current frame Declaration public static void LogLabel(string content) | Edit this page View Source LogWarning(LanguageCode) Declaration public static void LogWarning(LanguageCode message) | Edit this page View Source LogWarning(object) Declaration public static void LogWarning(object message) | Edit this page View Source LogWarning(params object[]) Declaration public static void LogWarning(params object[] messages) Events | Edit this page View Source OnLog Declaration public static event Action<object> OnLog | Edit this page View Source OnLogError Declaration public static event Action<object> OnLogError | Edit this page View Source OnLogErrorInternal Declaration public static event Action<int, string> OnLogErrorInternal | Edit this page View Source OnLogException Declaration public static event Action<Exception> OnLogException | Edit this page View Source OnLogInternal Declaration public static event Action<int, string> OnLogInternal | Edit this page View Source OnLogWarning Declaration public static event Action<object> OnLogWarning"
  },
  "api/AngeliA.DefaultDialogueUI.html": {
    "href": "api/AngeliA.DefaultDialogueUI.html",
    "title": "Class DefaultDialogueUI | AngeliA",
    "summary": "Class DefaultDialogueUI Implementation of the dialogueUI with default settings Implements IMapItem IWindowEntityUI Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public sealed class DefaultDialogueUI : DialogueUI, IMapItem, IWindowEntityUI Properties | Edit this page View Source ContentRect Rect position for the text content Declaration protected override IRect ContentRect { get; } Overrides DialogueUI.ContentRect | Edit this page View Source IconRect Rect position for the character avatar icon Declaration protected override IRect IconRect { get; } Overrides DialogueUI.IconRect | Edit this page View Source NameRect Rect position for the character name Declaration protected override IRect NameRect { get; } Overrides DialogueUI.NameRect | Edit this page View Source PanelRect Rect position for the total boundary Declaration protected override IRect PanelRect { get; } Overrides DialogueUI.PanelRect Implements IMapItem IWindowEntityUI Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.DefaultGamepadGamekeyAttribute.html": {
    "href": "api/AngeliA.DefaultGamepadGamekeyAttribute.html",
    "title": "Class DefaultGamepadGamekeyAttribute | AngeliA",
    "summary": "Class DefaultGamepadGamekeyAttribute Default gamepad binding for the given gamekey Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax [AttributeUsage(AttributeTargets.Assembly, AllowMultiple = true)] public class DefaultGamepadGamekeyAttribute : Attribute Constructors | Edit this page View Source DefaultGamepadGamekeyAttribute(Gamekey, GamepadKey) Default gamepad binding for the given gamekey Declaration public DefaultGamepadGamekeyAttribute(Gamekey gamekey, GamepadKey inputKey) Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.DefaultKeyboardGamekeyAttribute.html": {
    "href": "api/AngeliA.DefaultKeyboardGamekeyAttribute.html",
    "title": "Class DefaultKeyboardGamekeyAttribute | AngeliA",
    "summary": "Class DefaultKeyboardGamekeyAttribute Default keyboard binding for the given gamekey Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax [AttributeUsage(AttributeTargets.Assembly, AllowMultiple = true)] public class DefaultKeyboardGamekeyAttribute : Attribute Constructors | Edit this page View Source DefaultKeyboardGamekeyAttribute(Gamekey, KeyboardKey) Default keyboard binding for the given gamekey Declaration public DefaultKeyboardGamekeyAttribute(Gamekey gamekey, KeyboardKey inputKey) Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.DefaultLayerScope.html": {
    "href": "api/AngeliA.DefaultLayerScope.html",
    "title": "Struct DefaultLayerScope | AngeliA",
    "summary": "Struct DefaultLayerScope Scope that makes renderer draw into default layer Implements IDisposable Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public readonly struct DefaultLayerScope : IDisposable Examples using AngeliA; namespace AngeliaGame; public class Example { [OnGameUpdate] internal static void OnGameUpdate () { using (new DefaultLayerScope()) { // Rendering cell created inside will draw into default layer } } } Constructors | Edit this page View Source DefaultLayerScope() Declaration public DefaultLayerScope() Methods | Edit this page View Source Dispose() Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources. Declaration public void Dispose() Implements IDisposable Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.DefaultPropellerWing.html": {
    "href": "api/AngeliA.DefaultPropellerWing.html",
    "title": "Class DefaultPropellerWing | AngeliA",
    "summary": "Class DefaultPropellerWing Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public sealed class DefaultPropellerWing : Wing Fields | Edit this page View Source TYPE_ID Declaration public static readonly int TYPE_ID Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.DefaultWing.html": {
    "href": "api/AngeliA.DefaultWing.html",
    "title": "Class DefaultWing | AngeliA",
    "summary": "Class DefaultWing Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public sealed class DefaultWing : Wing Fields | Edit this page View Source TYPE_ID Declaration public static readonly int TYPE_ID Properties | Edit this page View Source Scale Size scale for the wing (0 means 0%, 1000 means 100%) Declaration protected override int Scale { get; } Overrides Wing.Scale Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.DelayTask.html": {
    "href": "api/AngeliA.DelayTask.html",
    "title": "Class DelayTask | AngeliA",
    "summary": "Class DelayTask Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public class DelayTask : Task Fields | Edit this page View Source TYPE_ID Declaration public static readonly int TYPE_ID Methods | Edit this page View Source FrameUpdate() Declaration public override TaskResult FrameUpdate() Overrides Task.FrameUpdate() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.DespawnEntityTask.html": {
    "href": "api/AngeliA.DespawnEntityTask.html",
    "title": "Class DespawnEntityTask | AngeliA",
    "summary": "Class DespawnEntityTask Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public class DespawnEntityTask : Task Fields | Edit this page View Source TYPE_ID Declaration public static readonly int TYPE_ID Methods | Edit this page View Source FrameUpdate() Declaration public override TaskResult FrameUpdate() Overrides Task.FrameUpdate() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.DialogueTask.html": {
    "href": "api/AngeliA.DialogueTask.html",
    "title": "Class DialogueTask | AngeliA",
    "summary": "Class DialogueTask Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public class DialogueTask : Task Constructors | Edit this page View Source DialogueTask() Declaration public DialogueTask() Methods | Edit this page View Source EndConversation() Declaration public static void EndConversation() | Edit this page View Source FrameUpdate() Declaration public override TaskResult FrameUpdate() Overrides Task.FrameUpdate() | Edit this page View Source StartConversation<D>(string) Declaration public static void StartConversation<D>(string globalName) where D : DialogueUI Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.DialogueUI.html": {
    "href": "api/AngeliA.DialogueUI.html",
    "title": "Class DialogueUI | AngeliA",
    "summary": "Class DialogueUI Entity that shows dialogue content. Driven by the DialogueTask. Implements IMapItem IWindowEntityUI Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax [Entity.Capacity(1, 1)] public abstract class DialogueUI : EntityUI, IMapItem, IWindowEntityUI Properties | Edit this page View Source BackgroundRect Rect position for the background Declaration public IRect BackgroundRect { get; } | Edit this page View Source ContentRect Rect position for the text content Declaration protected abstract IRect ContentRect { get; } | Edit this page View Source IconRect Rect position for the character avatar icon Declaration protected abstract IRect IconRect { get; } | Edit this page View Source NameRect Rect position for the character name Declaration protected abstract IRect NameRect { get; } | Edit this page View Source PanelRect Rect position for the total boundary Declaration protected abstract IRect PanelRect { get; } | Edit this page View Source RollingSpeed How many characters does it add per frame during the rolling animation Declaration protected virtual int RollingSpeed { get; } Methods | Edit this page View Source OnActivated() This function is called when entity enter the stage Declaration public override void OnActivated() Overrides Entity.OnActivated() | Edit this page View Source UpdateUI() Declaration public override void UpdateUI() Overrides EntityUI.UpdateUI() Implements IMapItem IWindowEntityUI Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.Direction2.html": {
    "href": "api/AngeliA.Direction2.html",
    "title": "Enum Direction2 | AngeliA",
    "summary": "Enum Direction2 Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public enum Direction2 : sbyte Fields Name Description Down Horizontal Left Negative Positive Right Up Vertical Extension Methods Extension.Next<Direction2>(Direction2) Extension.Prev<Direction2>(Direction2) Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.Direction3.html": {
    "href": "api/AngeliA.Direction3.html",
    "title": "Enum Direction3 | AngeliA",
    "summary": "Enum Direction3 Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public enum Direction3 : sbyte Fields Name Description Down Horizontal Left Negative None Positive Right Up Vertical Extension Methods Extension.Next<Direction3>(Direction3) Extension.Opposite(Direction3) Extension.Prev<Direction3>(Direction3) Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.Direction4.html": {
    "href": "api/AngeliA.Direction4.html",
    "title": "Enum Direction4 | AngeliA",
    "summary": "Enum Direction4 Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public enum Direction4 : byte Fields Name Description Down Left Right Up Extension Methods Extension.AntiClockwise(Direction4) Extension.Clockwise(Direction4) Extension.GetRotation(Direction4) Extension.IsHorizontal(Direction4) Extension.IsPositive(Direction4) Extension.IsVertical(Direction4) Extension.Next<Direction4>(Direction4) Extension.Normal(Direction4) Extension.Opposite(Direction4) Extension.Prev<Direction4>(Direction4) Extension.ToAlignment(Direction4) Extension.ToDirection5(Direction4) Extension.ToDirection8(Direction4) Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.Direction5.html": {
    "href": "api/AngeliA.Direction5.html",
    "title": "Enum Direction5 | AngeliA",
    "summary": "Enum Direction5 Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public enum Direction5 : byte Fields Name Description Center Down Left Right Up Extension Methods Extension.AntiClockwise(Direction5) Extension.Clockwise(Direction5) Extension.GetHorizontalDirection(Direction5) Extension.GetVerticalDirection(Direction5) Extension.IsHorizontal(Direction5) Extension.IsPositive(Direction5) Extension.IsVertical(Direction5) Extension.Next<Direction5>(Direction5) Extension.Normal(Direction5) Extension.Opposite(Direction5) Extension.Prev<Direction5>(Direction5) Extension.ToAlignment(Direction5) Extension.ToDirection4(Direction5, Direction4) Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.Direction8.html": {
    "href": "api/AngeliA.Direction8.html",
    "title": "Enum Direction8 | AngeliA",
    "summary": "Enum Direction8 Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public enum Direction8 : byte Fields Name Description Bottom BottomLeft BottomRight Left Right Top TopLeft TopRight Extension Methods Extension.AntiClockwise(Direction8, int) Extension.Clockwise(Direction8, int) Extension.GetRotation(Direction8) Extension.IsBottom(Direction8) Extension.IsHorizontal(Direction8) Extension.IsLeft(Direction8) Extension.IsPositive(Direction8) Extension.IsRight(Direction8) Extension.IsTilted(Direction8) Extension.IsTop(Direction8) Extension.IsVertical(Direction8) Extension.Next<Direction8>(Direction8) Extension.Normal(Direction8) Extension.Opposite(Direction8) Extension.Prev<Direction8>(Direction8) Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.DynamicClampCellScope.html": {
    "href": "api/AngeliA.DynamicClampCellScope.html",
    "title": "Struct DynamicClampCellScope | AngeliA",
    "summary": "Struct DynamicClampCellScope Scope that clamp rendering cells inside given range by changing the size scale of the content Implements IDisposable Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public readonly struct DynamicClampCellScope : IDisposable Examples using AngeliA; namespace AngeliaGame; public class Example { [OnGameUpdate] internal static void OnGameUpdate () { var range = new IRect(); using (new DynamicClampCellScope(range)) { // Rendering cell created inside will be clamped by rescale } } } Constructors | Edit this page View Source DynamicClampCellScope(IRect) Scope that clamp rendering cells inside given range by changing the size scale of the content Declaration public DynamicClampCellScope(IRect rect) Parameters Type Name Description IRect rect Rect position in global space Examples using AngeliA; namespace AngeliaGame; public class Example { [OnGameUpdate] internal static void OnGameUpdate () { var range = new IRect(); using (new DynamicClampCellScope(range)) { // Rendering cell created inside will be clamped by rescale } } } Methods | Edit this page View Source Dispose() Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources. Declaration public void Dispose() Implements IDisposable Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.Ear.html": {
    "href": "api/AngeliA.Ear.html",
    "title": "Class Ear | AngeliA",
    "summary": "Class Ear Animal ear body gadget for pose character. (Like cat-girl's ears, not human ears) Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public abstract class Ear : BodyGadget Properties | Edit this page View Source GadgetType Type of this body gadget Declaration public override sealed BodyGadgetType GadgetType { get; } Overrides BodyGadget.GadgetType | Edit this page View Source MotionAmount How much ease motion will be apply from the character's movement (0 means 0%, 1000 means 100%) Declaration protected virtual int MotionAmount { get; } | Edit this page View Source SpriteLoaded True if artwork sprite is loaded Declaration public override bool SpriteLoaded { get; } Overrides BodyGadget.SpriteLoaded Methods | Edit this page View Source DrawGadget(PoseCharacterRenderer) Render the gadget for the given character Declaration public override void DrawGadget(PoseCharacterRenderer renderer) Overrides BodyGadget.DrawGadget(PoseCharacterRenderer) | Edit this page View Source DrawGadgetFromPool(PoseCharacterRenderer) Draw ear gadgets for the given character. Declaration public static void DrawGadgetFromPool(PoseCharacterRenderer renderer) | Edit this page View Source DrawGadgetGizmos(IRect, Color32, int) Render the gadget as gizmos Declaration public override void DrawGadgetGizmos(IRect rect, Color32 tint, int z) Parameters Type Name Description IRect rect Global rect position Color32 tint Color tint int z Z position for sorting Overrides BodyGadget.DrawGadgetGizmos(IRect, Color32, int) | Edit this page View Source DrawSpriteAsEar(PoseCharacterRenderer, OrientedSprite, OrientedSprite, bool, bool, int, bool) Draw given sprite as ear Declaration public static void DrawSpriteAsEar(PoseCharacterRenderer renderer, OrientedSprite spriteLeft, OrientedSprite spriteRight, bool frontOfHeadL = true, bool frontOfHeadR = true, int motionAmount = 1000, bool selfMotion = true) Parameters Type Name Description PoseCharacterRenderer renderer Target character OrientedSprite spriteLeft Left ear artwork sprite OrientedSprite spriteRight Right ear artwork sprite bool frontOfHeadL Draw left ear in front of head bool frontOfHeadR Draw right ear in front of head bool selfMotion True if the ear randomly shakes | Edit this page View Source FillFromSheet(string) Load sprite data from Renderer.CurrentSheet Declaration public override bool FillFromSheet(string basicName) Overrides BodyGadget.FillFromSheet(string) | Edit this page View Source FrontOfHeadL(PoseCharacterRenderer) True if the left ear should be rendered in front of the head Declaration protected virtual bool FrontOfHeadL(PoseCharacterRenderer renderer) | Edit this page View Source FrontOfHeadR(PoseCharacterRenderer) True if the right ear should be rendered in front of the head Declaration protected virtual bool FrontOfHeadR(PoseCharacterRenderer renderer) Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.Ease.html": {
    "href": "api/AngeliA.Ease.html",
    "title": "Class Ease | AngeliA",
    "summary": "Class Ease Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public static class Ease Methods | Edit this page View Source InBack(float) Declaration public static float InBack(float x) | Edit this page View Source InBounce(float) Declaration public static float InBounce(float x) | Edit this page View Source InCirc(float) Declaration public static float InCirc(float x) | Edit this page View Source InCubic(float) Declaration public static float InCubic(float x) | Edit this page View Source InElastic(float) Declaration public static float InElastic(float x) | Edit this page View Source InExpo(float) Declaration public static float InExpo(float x) | Edit this page View Source InLiner(float) Declaration public static float InLiner(float x) | Edit this page View Source InOutBack(float) Declaration public static float InOutBack(float x) | Edit this page View Source InOutBounce(float) Declaration public static float InOutBounce(float x) | Edit this page View Source InOutCirc(float) Declaration public static float InOutCirc(float x) | Edit this page View Source InOutCubic(float) Declaration public static float InOutCubic(float x) | Edit this page View Source InOutElastic(float) Declaration public static float InOutElastic(float x) | Edit this page View Source InOutExpo(float) Declaration public static float InOutExpo(float x) | Edit this page View Source InOutLiner(float) Declaration public static float InOutLiner(float x) | Edit this page View Source InOutQuad(float) Declaration public static float InOutQuad(float x) | Edit this page View Source InOutQuart(float) Declaration public static float InOutQuart(float x) | Edit this page View Source InOutQuint(float) Declaration public static float InOutQuint(float x) | Edit this page View Source InOutSine(float) Declaration public static float InOutSine(float x) | Edit this page View Source InQuad(float) Declaration public static float InQuad(float x) | Edit this page View Source InQuart(float) Declaration public static float InQuart(float x) | Edit this page View Source InQuint(float) Declaration public static float InQuint(float x) | Edit this page View Source InSine(float) Declaration public static float InSine(float x) | Edit this page View Source OutBack(float) Declaration public static float OutBack(float x) | Edit this page View Source OutBounce(float) Declaration public static float OutBounce(float x) | Edit this page View Source OutCirc(float) Declaration public static float OutCirc(float x) | Edit this page View Source OutCubic(float) Declaration public static float OutCubic(float x) | Edit this page View Source OutElastic(float) Declaration public static float OutElastic(float x) | Edit this page View Source OutExpo(float) Declaration public static float OutExpo(float x) | Edit this page View Source OutLiner(float) Declaration public static float OutLiner(float x) | Edit this page View Source OutQuad(float) Declaration public static float OutQuad(float x) | Edit this page View Source OutQuart(float) Declaration public static float OutQuart(float x) | Edit this page View Source OutQuint(float) Declaration public static float OutQuint(float x) | Edit this page View Source OutSine(float) Declaration public static float OutSine(float x)"
  },
  "api/AngeliA.EchoDictionary-2.html": {
    "href": "api/AngeliA.EchoDictionary-2.html",
    "title": "Class EchoDictionary<TKey, TValue> | AngeliA",
    "summary": "Class EchoDictionary<TKey, TValue> Implements IEnumerable<KeyValuePair<TKey, TValue>> IEnumerable Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public class EchoDictionary<TKey, TValue> : IEnumerable<KeyValuePair<TKey, TValue>>, IEnumerable Type Parameters Name Description TKey TValue Properties | Edit this page View Source Count Declaration public int Count { get; } | Edit this page View Source this[TKey] Declaration public TValue this[TKey key] { get; set; } | Edit this page View Source this[TValue] Declaration public TKey this[TValue tValue] { get; set; } Methods | Edit this page View Source Add(TKey, TValue) Declaration public void Add(TKey key, TValue value) | Edit this page View Source Clear() Declaration public void Clear() | Edit this page View Source ContainsAny(TKey, TValue) Declaration public bool ContainsAny(TKey key, TValue value) | Edit this page View Source ContainsKey(TKey) Declaration public bool ContainsKey(TKey key) | Edit this page View Source ContainsPair(TKey, TValue) Declaration public bool ContainsPair(TKey key, TValue value) | Edit this page View Source ContainsValue(TValue) Declaration public bool ContainsValue(TValue value) | Edit this page View Source GetEnumerator() Returns an enumerator that iterates through the collection. Declaration public IEnumerator<KeyValuePair<TKey, TValue>> GetEnumerator() Returns Type Description IEnumerator<KeyValuePair<TKey, TValue>> An enumerator that can be used to iterate through the collection. | Edit this page View Source GetKey(TValue) Declaration public TKey GetKey(TValue value) | Edit this page View Source GetValue(TKey) Declaration public TValue GetValue(TKey key) | Edit this page View Source Remove(TKey) Declaration public bool Remove(TKey key) | Edit this page View Source Remove(TKey, out TValue) Declaration public bool Remove(TKey key, out TValue value) | Edit this page View Source Remove(TValue) Declaration public bool Remove(TValue value) | Edit this page View Source Remove(TValue, out TKey) Declaration public bool Remove(TValue value, out TKey key) | Edit this page View Source SetValue(TKey, TValue) Declaration public void SetValue(TKey key, TValue value) | Edit this page View Source TryAdd(TKey, TValue) Declaration public bool TryAdd(TKey key, TValue value) | Edit this page View Source TryGetKey(TValue, out TKey) Declaration public bool TryGetKey(TValue value, out TKey key) | Edit this page View Source TryGetValue(TKey, out TValue) Declaration public bool TryGetValue(TKey key, out TValue value) Implements IEnumerable<T> IEnumerable Extension Methods Extension.JoinArray<T>(IEnumerable<T>, Func<T, string>, char) Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.EmptyScope.html": {
    "href": "api/AngeliA.EmptyScope.html",
    "title": "Struct EmptyScope | AngeliA",
    "summary": "Struct EmptyScope Implements IDisposable Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public readonly struct EmptyScope : IDisposable Methods | Edit this page View Source Dispose() Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources. Declaration public void Dispose() Implements IDisposable Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.EnablePlayerSystemAttribute.html": {
    "href": "api/AngeliA.EnablePlayerSystemAttribute.html",
    "title": "Class EnablePlayerSystemAttribute | AngeliA",
    "summary": "Class EnablePlayerSystemAttribute Indicates whether the current application uses the player system or not Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax [AttributeUsage(AttributeTargets.Assembly, AllowMultiple = true)] public class EnablePlayerSystemAttribute : Attribute Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.Entity.html": {
    "href": "api/AngeliA.Entity.html",
    "title": "Class Entity | AngeliA",
    "summary": "Class Entity General object with logic which can spawn into the stage Implements IMapItem Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax [Entity.Capacity(4096, 0)] [Entity.MapEditorGroup(\"Entity\", 0)] [Entity.Layer(1)] public abstract class Entity : IMapItem Constructors | Edit this page View Source Entity() Declaration public Entity() Properties | Edit this page View Source Active True if the entity is currently in stage Declaration public bool Active { get; set; } | Edit this page View Source Center Center position of the Rect in global space Declaration public Int2 Center { get; } | Edit this page View Source CenterX Center position X of the Rect in global space Declaration public int CenterX { get; } | Edit this page View Source CenterY Center position Y of the Rect in global space Declaration public int CenterY { get; } | Edit this page View Source FromWorld True if the entity is spawned by the world squad Declaration public bool FromWorld { get; } | Edit this page View Source Height Size Y of thie entity in global space Declaration public int Height { get; set; } | Edit this page View Source IgnoreReposition True if the entity do not reposition when it out of view Declaration public bool IgnoreReposition { get; set; } | Edit this page View Source InstanceID Unique ID for this entity as a instance on stage Declaration public Int3 InstanceID { get; } | Edit this page View Source InstanceOrder Unique index for this entity that distinguish from other same-type entities on stage Declaration public int InstanceOrder { get; } | Edit this page View Source MapUnitPos The position of this entity on the map in unit space Declaration public Int3? MapUnitPos { get; } | Edit this page View Source PivotUnitPosition Position that this entity belongs to in unit space. Get the MapUnitPos when it's from world. Get rect center's unit position when not from world. Declaration public Int3 PivotUnitPosition { get; } | Edit this page View Source Rect Rect position of this entity in global space Declaration public virtual IRect Rect { get; } | Edit this page View Source Size Size in global space Declaration public Int2 Size { get; set; } | Edit this page View Source SpawnFrame Which frame does this entity get spawned into the stage Declaration public int SpawnFrame { get; protected set; } | Edit this page View Source TypeID Unique ID represent what type of entity is it Declaration public int TypeID { get; init; } | Edit this page View Source Width Size X of thie entity in global space Declaration public int Width { get; set; } | Edit this page View Source X Position X of this entity in global space Declaration public int X { get; set; } | Edit this page View Source XY Position in global space Declaration public Int2 XY { get; set; } | Edit this page View Source Y Position Y of this entity in global space Declaration public int Y { get; set; } Methods | Edit this page View Source AfterReposition(Int3, Int3) This function is called when the entity's map position got repositioned by stage Declaration public virtual void AfterReposition(Int3 fromUnitPos, Int3 toUnitPos) | Edit this page View Source BeforeUpdate() [2/4] This function is called every frame when entity is in stage. Prioritize using this function to update physics logic. Declaration public virtual void BeforeUpdate() | Edit this page View Source CancelIgnoreDespawnFromMap() Do not force this entity not despawn by stage Declaration public void CancelIgnoreDespawnFromMap() | Edit this page View Source Draw() Draw this entity by it's type ID and rect position Declaration public Cell Draw() | Edit this page View Source FirstUpdate() [1/4] This function is called every frame when entity is in stage. Prioritize using this function to fill collider in to physics system. Declaration public virtual void FirstUpdate() | Edit this page View Source IgnoreDespawnFromMap(int) Force this entity not despawn by stage when out of range for given frames long Declaration public void IgnoreDespawnFromMap(int duration = 1) | Edit this page View Source LateUpdate() [4/4] This function is called every frame when entity is in stage. Prioritize using this function to render the entity. Declaration public virtual void LateUpdate() | Edit this page View Source OnActivated() This function is called when entity enter the stage Declaration public virtual void OnActivated() | Edit this page View Source OnInactivated() This function is called when entity leave the stage Declaration public virtual void OnInactivated() | Edit this page View Source Update() [3/4] This function is called every frame when entity is in stage. Prioritize using this function to update physics logic. Declaration public virtual void Update() Implements IMapItem Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.EntityAttribute.CapacityAttribute.html": {
    "href": "api/AngeliA.EntityAttribute.CapacityAttribute.html",
    "title": "Class EntityAttribute.CapacityAttribute | AngeliA",
    "summary": "Class EntityAttribute.CapacityAttribute Spawn limit count of this entity Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax [AttributeUsage(AttributeTargets.Class)] public class EntityAttribute.CapacityAttribute : Attribute Constructors | Edit this page View Source CapacityAttribute(int, int) Spawn limit count of this entity Declaration public CapacityAttribute(int capacity, int preSpawn = 0) int preSpawn Create this many instance of the entity when game initialize Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.EntityAttribute.DontDespawnOutOfRangeAttribute.html": {
    "href": "api/AngeliA.EntityAttribute.DontDespawnOutOfRangeAttribute.html",
    "title": "Class EntityAttribute.DontDespawnOutOfRangeAttribute | AngeliA",
    "summary": "Class EntityAttribute.DontDespawnOutOfRangeAttribute Do not despawn this entity when it's out of view rect Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax [AttributeUsage(AttributeTargets.Class)] public class EntityAttribute.DontDespawnOutOfRangeAttribute : Attribute Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.EntityAttribute.DontDestroyOnZChangedAttribute.html": {
    "href": "api/AngeliA.EntityAttribute.DontDestroyOnZChangedAttribute.html",
    "title": "Class EntityAttribute.DontDestroyOnZChangedAttribute | AngeliA",
    "summary": "Class EntityAttribute.DontDestroyOnZChangedAttribute This entity do not despawn when player enter another map layer Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax [AttributeUsage(AttributeTargets.Class)] public class EntityAttribute.DontDestroyOnZChangedAttribute : Attribute Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.EntityAttribute.DontDrawBehindAttribute.html": {
    "href": "api/AngeliA.EntityAttribute.DontDrawBehindAttribute.html",
    "title": "Class EntityAttribute.DontDrawBehindAttribute | AngeliA",
    "summary": "Class EntityAttribute.DontDrawBehindAttribute This entity will not display on the behind layer Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax [AttributeUsage(AttributeTargets.Class)] public class EntityAttribute.DontDrawBehindAttribute : Attribute Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.EntityAttribute.DontSpawnFromWorld.html": {
    "href": "api/AngeliA.EntityAttribute.DontSpawnFromWorld.html",
    "title": "Class EntityAttribute.DontSpawnFromWorld | AngeliA",
    "summary": "Class EntityAttribute.DontSpawnFromWorld Do not spawn this entity when it's painted into the map Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax [AttributeUsage(AttributeTargets.Class)] public class EntityAttribute.DontSpawnFromWorld : Attribute Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.EntityAttribute.ExcludeInMapEditorAttribute.html": {
    "href": "api/AngeliA.EntityAttribute.ExcludeInMapEditorAttribute.html",
    "title": "Class EntityAttribute.ExcludeInMapEditorAttribute | AngeliA",
    "summary": "Class EntityAttribute.ExcludeInMapEditorAttribute Do not show this entity inside the palette panel of map editor. Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax [AttributeUsage(AttributeTargets.Class)] public class EntityAttribute.ExcludeInMapEditorAttribute : Attribute Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.EntityAttribute.LayerAttribute.html": {
    "href": "api/AngeliA.EntityAttribute.LayerAttribute.html",
    "title": "Class EntityAttribute.LayerAttribute | AngeliA",
    "summary": "Class EntityAttribute.LayerAttribute Which layer should this entity spawn inside. Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax [AttributeUsage(AttributeTargets.Class)] public class EntityAttribute.LayerAttribute : Attribute Constructors | Edit this page View Source LayerAttribute(int) Which layer should this entity spawn inside. Declaration public LayerAttribute(int layer) Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.EntityAttribute.MapEditorGroupAttribute.html": {
    "href": "api/AngeliA.EntityAttribute.MapEditorGroupAttribute.html",
    "title": "Class EntityAttribute.MapEditorGroupAttribute | AngeliA",
    "summary": "Class EntityAttribute.MapEditorGroupAttribute Which map editor palette group should this entity in Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax [AttributeUsage(AttributeTargets.Class, Inherited = true)] public class EntityAttribute.MapEditorGroupAttribute : Attribute Constructors | Edit this page View Source MapEditorGroupAttribute(string, int) Which map editor palette group should this entity in Declaration public MapEditorGroupAttribute(string groupName, int order = 0) Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.EntityAttribute.RepositionWhenInactiveAttribute.html": {
    "href": "api/AngeliA.EntityAttribute.RepositionWhenInactiveAttribute.html",
    "title": "Class EntityAttribute.RepositionWhenInactiveAttribute | AngeliA",
    "summary": "Class EntityAttribute.RepositionWhenInactiveAttribute When the entity despawn, reset the position in map. So next time it will be load from the position where it last appeared Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax [AttributeUsage(AttributeTargets.Class)] public class EntityAttribute.RepositionWhenInactiveAttribute : Attribute Constructors | Edit this page View Source RepositionWhenInactiveAttribute(bool) When the entity despawn, reset the position in map. So next time it will be load from the position where it last appeared Declaration public RepositionWhenInactiveAttribute(bool requireReposition = true) Parameters Type Name Description bool requireReposition Disable reposition by setting this to False Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.EntityAttribute.SpawnWithCheatCodeAttribute.html": {
    "href": "api/AngeliA.EntityAttribute.SpawnWithCheatCodeAttribute.html",
    "title": "Class EntityAttribute.SpawnWithCheatCodeAttribute | AngeliA",
    "summary": "Class EntityAttribute.SpawnWithCheatCodeAttribute Player can use \"Spawn---\" to spawn this entity to stage. Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax [AttributeUsage(AttributeTargets.Class)] public class EntityAttribute.SpawnWithCheatCodeAttribute : Attribute Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.EntityAttribute.StageOrderAttribute.html": {
    "href": "api/AngeliA.EntityAttribute.StageOrderAttribute.html",
    "title": "Class EntityAttribute.StageOrderAttribute | AngeliA",
    "summary": "Class EntityAttribute.StageOrderAttribute The order in which this entity gets updated in it's layer Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax [AttributeUsage(AttributeTargets.Class)] public class EntityAttribute.StageOrderAttribute : Attribute Constructors | Edit this page View Source StageOrderAttribute(int) The order in which this entity gets updated in it's layer Declaration public StageOrderAttribute(int order) Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.EntityAttribute.UpdateOutOfRangeAttribute.html": {
    "href": "api/AngeliA.EntityAttribute.UpdateOutOfRangeAttribute.html",
    "title": "Class EntityAttribute.UpdateOutOfRangeAttribute | AngeliA",
    "summary": "Class EntityAttribute.UpdateOutOfRangeAttribute This entity will update when it's outside view rect Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax [AttributeUsage(AttributeTargets.Class)] public class EntityAttribute.UpdateOutOfRangeAttribute : Attribute Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.EntityAttribute.html": {
    "href": "api/AngeliA.EntityAttribute.html",
    "title": "Class EntityAttribute | AngeliA",
    "summary": "Class EntityAttribute Attribute for entities Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public static class EntityAttribute"
  },
  "api/AngeliA.EntityHookTask.html": {
    "href": "api/AngeliA.EntityHookTask.html",
    "title": "Class EntityHookTask | AngeliA",
    "summary": "Class EntityHookTask Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public class EntityHookTask : Task Fields | Edit this page View Source TYPE_ID Declaration public static readonly int TYPE_ID Methods | Edit this page View Source FrameUpdate() Declaration public override TaskResult FrameUpdate() Overrides Task.FrameUpdate() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.EntityLayer.html": {
    "href": "api/AngeliA.EntityLayer.html",
    "title": "Class EntityLayer | AngeliA",
    "summary": "Class EntityLayer Layer for entity spawning Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public static class EntityLayer Fields | Edit this page View Source BULLET Declaration public const int BULLET = 5 | Edit this page View Source CHARACTER Declaration public const int CHARACTER = 2 | Edit this page View Source COUNT Declaration public const int COUNT = 8 | Edit this page View Source DECORATE Particles, Effects etc... Declaration public const int DECORATE = 7 | Edit this page View Source ENVIRONMENT Declaration public const int ENVIRONMENT = 3 | Edit this page View Source GAME Default option Declaration public const int GAME = 1 | Edit this page View Source ITEM Declaration public const int ITEM = 6 | Edit this page View Source LAYER_NAMES Declaration public static readonly string[] LAYER_NAMES | Edit this page View Source UI Declaration public const int UI = 0 | Edit this page View Source WATER Declaration public const int WATER = 4"
  },
  "api/AngeliA.EntityLayerCapacityAttribute.html": {
    "href": "api/AngeliA.EntityLayerCapacityAttribute.html",
    "title": "Class EntityLayerCapacityAttribute | AngeliA",
    "summary": "Class EntityLayerCapacityAttribute Max entity count for the layer Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax [AttributeUsage(AttributeTargets.Assembly, AllowMultiple = true)] public class EntityLayerCapacityAttribute : Attribute Constructors | Edit this page View Source EntityLayerCapacityAttribute(int, int) Max entity count for the layer Declaration public EntityLayerCapacityAttribute(int layer, int capacity) Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.EntityUI.html": {
    "href": "api/AngeliA.EntityUI.html",
    "title": "Class EntityUI | AngeliA",
    "summary": "Class EntityUI Entities which spawns into the stage and serves as UI Implements IMapItem Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax [Entity.MapEditorGroup(\"UI\", 0)] [Entity.Capacity(1, 0)] [Entity.Layer(0)] public abstract class EntityUI : Entity, IMapItem Constructors | Edit this page View Source EntityUI() Declaration public EntityUI() Properties | Edit this page View Source BlockEvent True if this UI blocks mouse button event Declaration protected virtual bool BlockEvent { get; } Methods | Edit this page View Source FirstUpdate() [1/4] This function is called every frame when entity is in stage. Prioritize using this function to fill collider in to physics system. Declaration public override void FirstUpdate() Overrides Entity.FirstUpdate() | Edit this page View Source LateUpdate() [4/4] This function is called every frame when entity is in stage. Prioritize using this function to render the entity. Declaration public override void LateUpdate() Overrides Entity.LateUpdate() | Edit this page View Source Unify(int) Convert unified size into global size Declaration protected static int Unify(int value) | Edit this page View Source Update() [3/4] This function is called every frame when entity is in stage. Prioritize using this function to update physics logic. Declaration public override void Update() Overrides Entity.Update() | Edit this page View Source UpdateUI() Declaration public virtual void UpdateUI() Implements IMapItem Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.EnvironmentShadowScope.html": {
    "href": "api/AngeliA.EnvironmentShadowScope.html",
    "title": "Struct EnvironmentShadowScope | AngeliA",
    "summary": "Struct EnvironmentShadowScope Scope that draw shadows for rendering cells inside Implements IDisposable Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public readonly struct EnvironmentShadowScope : IDisposable Examples using AngeliA; namespace AngeliaGame; public class Example { [OnGameUpdate] internal static void OnGameUpdate () { using (new EnvironmentShadowScope()) { // Rendering cell created inside will have a shadow Renderer.Draw(BuiltInSprite.ICON_ENTITY, Renderer.CameraRect.Shrink(Const.CEL * 8)); } } } Constructors | Edit this page View Source EnvironmentShadowScope() Declaration public EnvironmentShadowScope() | Edit this page View Source EnvironmentShadowScope(int, int, byte, int) Scope that draw shadows for rendering cells inside Declaration public EnvironmentShadowScope(int offsetX = -64, int offsetY = 0, byte alpha = 64, int z = -65520) Parameters Type Name Description int offsetX Shadow distance X in global space int offsetY Shadow distance Y in global space byte alpha Transparency value of the shadow. (0 means transparent, 255 means not tramsparent) int z Z value for sort rendering cells Examples using AngeliA; namespace AngeliaGame; public class Example { [OnGameUpdate] internal static void OnGameUpdate () { using (new EnvironmentShadowScope()) { // Rendering cell created inside will have a shadow Renderer.Draw(BuiltInSprite.ICON_ENTITY, Renderer.CameraRect.Shrink(Const.CEL * 8)); } } } Fields | Edit this page View Source Alpha Transparency value of the shadow. (0 means transparent, 255 means not tramsparent) Declaration public readonly byte Alpha | Edit this page View Source OffsetX Shadow distance X in global space Declaration public readonly int OffsetX | Edit this page View Source OffsetY Shadow distance Y in global space Declaration public readonly int OffsetY | Edit this page View Source Z Z value for sort rendering cells Declaration public readonly int Z Methods | Edit this page View Source Dispose() Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources. Declaration public void Dispose() Implements IDisposable Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.Equipment.html": {
    "href": "api/AngeliA.Equipment.html",
    "title": "Class Equipment | AngeliA",
    "summary": "Class Equipment Represent an item that can be equip into a slot for a character Implements IMapItem Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax [Entity.MapEditorGroup(\"ItemEquipment\", 0)] public abstract class Equipment : Item, IMapItem Properties | Edit this page View Source EquipmentType Which type is this quipment Declaration public abstract EquipmentType EquipmentType { get; } | Edit this page View Source MaxStackCount Count limitation for multiple items inside one inventory slot Declaration public override int MaxStackCount { get; } Overrides Item.MaxStackCount Implements IMapItem Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.EquipmentType.html": {
    "href": "api/AngeliA.EquipmentType.html",
    "title": "Enum EquipmentType | AngeliA",
    "summary": "Enum EquipmentType Represent the type of the equipment Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public enum EquipmentType Fields Name Description BodyArmor Equipment that equip into body slot Gloves Equipment that equip into hand slot HandTool Equipment that equip into hand slot and can be use as a tool Helmet Equipment that equip into head slot Jewelry Equipment that equip into jewelry slot. Do not render onto the character by default. Shoes Equipment that equip into foot slot Extension Methods Extension.Next<EquipmentType>(EquipmentType) Extension.Prev<EquipmentType>(EquipmentType) Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.EventAttribute.html": {
    "href": "api/AngeliA.EventAttribute.html",
    "title": "Class EventAttribute | AngeliA",
    "summary": "Class EventAttribute Attribute for link all static methods with a System.Action. When the action is invoked, all methods get called. Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax [AttributeUsage(AttributeTargets.Method|AttributeTargets.Field, AllowMultiple = false)] public abstract class EventAttribute : OrderedAttribute Constructors | Edit this page View Source EventAttribute(int) Attribute for link all static methods with a System.Action. When the action is invoked, all methods get called. Declaration protected EventAttribute(int order = 0) Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.Extension.html": {
    "href": "api/AngeliA.Extension.html",
    "title": "Class Extension | AngeliA",
    "summary": "Class Extension Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public static class Extension Methods | Edit this page View Source Abs(int) Declaration public static int Abs(this int value) | Edit this page View Source Abs(float) Declaration public static float Abs(this float value) | Edit this page View Source AddDistinct<T>(IList<T>, T) Declaration public static void AddDistinct<T>(this IList<T> list, T item) | Edit this page View Source Adjust(Color32, float, float, float, float) Declaration public static Color32 Adjust(this Color32 color, float hue, float saturation, float volume, float alpha) | Edit this page View Source Almost(ColorF, ColorF) Declaration public static bool Almost(this ColorF a, ColorF b) | Edit this page View Source Almost(FRect, FRect) Declaration public static bool Almost(this FRect a, FRect b) | Edit this page View Source Almost(Float2, Float2) Declaration public static bool Almost(this Float2 a, Float2 b) | Edit this page View Source Almost(Float3, Float3) Declaration public static bool Almost(this Float3 a, Float3 b) | Edit this page View Source Almost(float, float) Declaration public static bool Almost(this float a, float b) | Edit this page View Source AlmostZero(Float4) Declaration public static bool AlmostZero(this Float4 value) | Edit this page View Source AlmostZero(float) Declaration public static bool AlmostZero(this float a) | Edit this page View Source AngeHash(string) Hash code that used inside AngeliA Declaration public static int AngeHash(this string str) | Edit this page View Source AngeHash(string, int, int) Hash code that used inside AngeliA Declaration public static int AngeHash(this string str, int start, int length) | Edit this page View Source AngeHash(Type) Hash code that used inside AngeliA Declaration public static int AngeHash(this Type type) | Edit this page View Source AngeName(Type) Name of this type that used inside AngeliA Declaration public static string AngeName(this Type type) | Edit this page View Source AngeReverseHash(char[], int, int) Hash code that used inside AngeliA but generate with the reversed string data Declaration public static int AngeReverseHash(this char[] arr, int start, int length) | Edit this page View Source AntiClockwise(Direction4) Declaration public static Direction4 AntiClockwise(this Direction4 dir) | Edit this page View Source AntiClockwise(Direction5) Declaration public static Direction5 AntiClockwise(this Direction5 dir) | Edit this page View Source AntiClockwise(Direction8, int) Declaration public static Direction8 AntiClockwise(this Direction8 dir, int count = 1) | Edit this page View Source AppendWithDoubleQuotes(StringBuilder, string) Declaration public static void AppendWithDoubleQuotes(this StringBuilder builder, string content) | Edit this page View Source BottomHalf(IRect) Declaration public static IRect BottomHalf(this IRect rect) | Edit this page View Source BottomLeft(FRect) Declaration public static Float2 BottomLeft(this FRect rect) | Edit this page View Source BottomLeft(IRect) Declaration public static Int2 BottomLeft(this IRect rect) | Edit this page View Source BottomMid(IRect) Declaration public static Int2 BottomMid(this IRect rect) | Edit this page View Source BottomRight(FRect) Declaration public static Float2 BottomRight(this FRect rect) | Edit this page View Source BottomRight(IRect) Declaration public static Int2 BottomRight(this IRect rect) | Edit this page View Source Bytes_to_Pixels(byte[], int, int) Declaration public static Color32[] Bytes_to_Pixels(this byte[] bytes, int width, int height) | Edit this page View Source Ceil(float) Declaration public static float Ceil(this float a) | Edit this page View Source CeilDivide(int, int) Declaration public static int CeilDivide(this int value, int target) | Edit this page View Source CeilToInt(Float2) Declaration public static Int2 CeilToInt(this Float2 v) | Edit this page View Source CeilToInt(float) Declaration public static int CeilToInt(this float a) | Edit this page View Source CenterInt(IRect) Declaration public static Int2 CenterInt(this IRect rect) | Edit this page View Source CenterX(IRect) Declaration public static int CenterX(this IRect rect) | Edit this page View Source CenterY(IRect) Declaration public static int CenterY(this IRect rect) | Edit this page View Source Clamp(ref FRect, FRect) Declaration public static void Clamp(this ref FRect rect, FRect range) | Edit this page View Source Clamp(ref Float2, float, float, float, float) Declaration public static void Clamp(this ref Float2 v, float minX, float minY, float maxX, float maxY) | Edit this page View Source Clamp(IRect, IRect) Declaration public static IRect Clamp(this IRect rect, IRect range) | Edit this page View Source Clamp(ref Int2, IRect) Declaration public static void Clamp(this ref Int2 v, IRect range) | Edit this page View Source Clamp(ref Int2, int, int, int, int) Declaration public static void Clamp(this ref Int2 v, int minX, int minY, int maxX, int maxY) | Edit this page View Source Clamp(int, int, int) Declaration public static int Clamp(this int a, int min, int max) | Edit this page View Source Clamp(float, float, float) Declaration public static float Clamp(this float a, float min, float max) | Edit this page View Source Clamp01(float) Declaration public static float Clamp01(this float value) | Edit this page View Source ClampDisorder(int, int, int) Declaration public static int ClampDisorder(this int a, int rangeA, int rangeB) | Edit this page View Source ClampPositionInside(ref IRect, IRect) Declaration public static void ClampPositionInside(this ref IRect rect, IRect bounds) | Edit this page View Source Clamped(Int2, IRect) Declaration public static Int2 Clamped(this Int2 v, IRect range) | Edit this page View Source Clamped(Int2, int, int, int, int) Declaration public static Int2 Clamped(this Int2 v, int minX, int minY, int maxX, int maxY) | Edit this page View Source Clockwise(Direction4) Declaration public static Direction4 Clockwise(this Direction4 dir) | Edit this page View Source Clockwise(Direction5) Declaration public static Direction5 Clockwise(this Direction5 dir) | Edit this page View Source Clockwise(Direction8, int) Declaration public static Direction8 Clockwise(this Direction8 dir, int count = 1) | Edit this page View Source CompleteInside(FRect, FRect) Declaration public static bool CompleteInside(this FRect rect, FRect range) | Edit this page View Source CompleteInside(IRect, IRect) Declaration public static bool CompleteInside(this IRect rect, IRect range) | Edit this page View Source Contains(IRect, int, int) Declaration public static bool Contains(this IRect rect, int x, int y) | Edit this page View Source CornerInside(IRect, Alignment, int) Declaration public static IRect CornerInside(this IRect rect, Alignment corner, int size) | Edit this page View Source CornerInside(IRect, Alignment, int, int) Declaration public static IRect CornerInside(this IRect rect, Alignment corner, int width, int height) | Edit this page View Source CornerOutside(IRect, Alignment, int) Declaration public static IRect CornerOutside(this IRect rect, Alignment corner, int size) | Edit this page View Source CornerOutside(IRect, Alignment, int, int) Declaration public static IRect CornerOutside(this IRect rect, Alignment corner, int width, int height) | Edit this page View Source DigitCount(int) Declaration public static int DigitCount(this int n) | Edit this page View Source Distance(int, int) Declaration public static int Distance(this int value, int target) | Edit this page View Source Dodge(IRect, IRect, out IRect?, out IRect?, out IRect?, out IRect?) Declaration public static bool Dodge(this IRect rect, IRect dodge, out IRect? resultTop, out IRect? resultMidL, out IRect? resultMidR, out IRect? resultBottom) | Edit this page View Source Edge(FRect, Direction4, float) Declaration public static FRect Edge(this FRect rect, Direction4 edge, float thickness = 1) | Edit this page View Source EdgeExact(IRect, Direction4, int) Declaration public static IRect EdgeExact(this IRect rect, Direction4 edge, int size = 1) | Edit this page View Source EdgeInside(IRect, Direction4, int) Declaration public static IRect EdgeInside(this IRect rect, Direction4 edge, int size = 1) | Edit this page View Source EdgeInsideDown(IRect, int) Declaration public static IRect EdgeInsideDown(this IRect rect, int size) | Edit this page View Source EdgeInsideLeft(IRect, int) Declaration public static IRect EdgeInsideLeft(this IRect rect, int size) | Edit this page View Source EdgeInsideRight(IRect, int) Declaration public static IRect EdgeInsideRight(this IRect rect, int size) | Edit this page View Source EdgeInsideSquareDown(IRect) Declaration public static IRect EdgeInsideSquareDown(this IRect rect) | Edit this page View Source EdgeInsideSquareLeft(IRect) Declaration public static IRect EdgeInsideSquareLeft(this IRect rect) | Edit this page View Source EdgeInsideSquareRight(IRect) Declaration public static IRect EdgeInsideSquareRight(this IRect rect) | Edit this page View Source EdgeInsideSquareUp(IRect) Declaration public static IRect EdgeInsideSquareUp(this IRect rect) | Edit this page View Source EdgeInsideUp(IRect, int) Declaration public static IRect EdgeInsideUp(this IRect rect, int size) | Edit this page View Source EdgeOutside(IRect, Direction4, int) Declaration public static IRect EdgeOutside(this IRect rect, Direction4 edge, int size = 1) | Edit this page View Source EdgeOutsideDown(IRect, int) Declaration public static IRect EdgeOutsideDown(this IRect rect, int size) | Edit this page View Source EdgeOutsideLeft(IRect, int) Declaration public static IRect EdgeOutsideLeft(this IRect rect, int size) | Edit this page View Source EdgeOutsideRight(IRect, int) Declaration public static IRect EdgeOutsideRight(this IRect rect, int size) | Edit this page View Source EdgeOutsideUp(IRect, int) Declaration public static IRect EdgeOutsideUp(this IRect rect, int size) | Edit this page View Source EnumLength(Type) Declaration public static int EnumLength(this Type @enum) | Edit this page View Source Envelope(FRect, float) Declaration public static FRect Envelope(this FRect rect, float targetAspect) | Edit this page View Source Envelope(IRect, int, int) Declaration public static IRect Envelope(this IRect innerRect, int aspWidth, int aspHeight) | Edit this page View Source Expand(FRect, float) Declaration public static FRect Expand(this FRect rect, float offset) | Edit this page View Source Expand(FRect, float, float, float, float) Declaration public static FRect Expand(this FRect rect, float l, float r, float d, float u) | Edit this page View Source Expand(IRect, Int4) Declaration public static IRect Expand(this IRect rect, Int4 offset) | Edit this page View Source Expand(IRect, int) Declaration public static IRect Expand(this IRect rect, int offset) | Edit this page View Source Expand(IRect, int, int, int, int) Declaration public static IRect Expand(this IRect rect, int l, int r, int d, int u) | Edit this page View Source ExpandHorizontal(IRect, int) Declaration public static IRect ExpandHorizontal(this IRect rect, int offset) | Edit this page View Source ExpandToIRect(FRect) Declaration public static IRect ExpandToIRect(this FRect rect) | Edit this page View Source ExpandVertical(IRect, int) Declaration public static IRect ExpandVertical(this IRect rect, int offset) | Edit this page View Source FillWithNewValue<A>(A[]) Declaration public static A[] FillWithNewValue<A>(this A[] arr) where A : new() | Edit this page View Source FillWithValue<A>(A[], A) Declaration public static A[] FillWithValue<A>(this A[] arr, A value) | Edit this page View Source Fit(FRect, float, float, float) Declaration public static FRect Fit(this FRect rect, float targetAspect, float pivotX = 0.5, float pivotY = 0.5) | Edit this page View Source Fit(IRect, AngeSprite, int, int) Declaration public static IRect Fit(this IRect rect, AngeSprite sprite, int pivotX = 500, int pivotY = 500) | Edit this page View Source Fit(IRect, int, int, int, int) Declaration public static IRect Fit(this IRect rect, int outterWidth, int outterHeight, int pivotX = 500, int pivotY = 500) | Edit this page View Source FlipHorizontal(ref IRect) Declaration public static void FlipHorizontal(this ref IRect rect) | Edit this page View Source FlipNegative(ref IRect) Declaration public static void FlipNegative(this ref IRect rect) | Edit this page View Source FlipVertical(ref IRect) Declaration public static void FlipVertical(this ref IRect rect) | Edit this page View Source Floor(float) Declaration public static float Floor(this float a) | Edit this page View Source FloorToInt(Float2) Declaration public static Int2 FloorToInt(this Float2 v) | Edit this page View Source FloorToInt(float) Declaration public static int FloorToInt(this float a) | Edit this page View Source ForAllFields<T>(object, BindingFlags, bool) Declaration public static IEnumerable<(FieldInfo field, T value)> ForAllFields<T>(this object target, BindingFlags binding = BindingFlags.Instance | BindingFlags.Static | BindingFlags.Public | BindingFlags.NonPublic, bool inherited = true) | Edit this page View Source ForAllFields<T>(Type, BindingFlags, bool) Declaration public static IEnumerable<FieldInfo> ForAllFields<T>(this Type type, BindingFlags binding = BindingFlags.Instance | BindingFlags.Static | BindingFlags.Public | BindingFlags.NonPublic, bool inherited = true) | Edit this page View Source ForAllProperties<T>(object) Declaration public static IEnumerable<(string name, T value)> ForAllProperties<T>(this object target) | Edit this page View Source ForAllStaticFieldValue<T>(Type, BindingFlags, bool) Declaration public static IEnumerable<T> ForAllStaticFieldValue<T>(this Type type, BindingFlags binding = BindingFlags.Static | BindingFlags.Public | BindingFlags.NonPublic, bool inherited = true) | Edit this page View Source ForEach<T>(object[], Action<T, int>) Declaration public static void ForEach<T>(this object[] arr, Action<T, int> action) | Edit this page View Source ForEach<T>(object[], Action<T>) Declaration public static void ForEach<T>(this object[] arr, Action<T> action) | Edit this page View Source ForceSquare(IRect, bool, bool, bool) Declaration public static IRect ForceSquare(this IRect rect, bool toLeft, bool toBottom, bool grow = false) | Edit this page View Source GetBit(byte, int) Declaration public static bool GetBit(this byte value, int index) | Edit this page View Source GetBit(int, int) Declaration public static bool GetBit(this int value, int index) | Edit this page View Source GetBit(ushort, int) Declaration public static bool GetBit(this ushort value, int index) | Edit this page View Source GetBit(uint, int) Declaration public static bool GetBit(this uint value, int index) | Edit this page View Source GetBit(ulong, int) Declaration public static bool GetBit(this ulong value, int index) | Edit this page View Source GetClamp(FRect, FRect) Declaration public static FRect GetClamp(this FRect rect, FRect range) | Edit this page View Source GetDirection(Gamekey) Declaration public static Direction4? GetDirection(this Gamekey key) | Edit this page View Source GetFlipHorizontal(IRect) Declaration public static IRect GetFlipHorizontal(this IRect rect) | Edit this page View Source GetFlipNegative(IRect) Declaration public static IRect GetFlipNegative(this IRect rect) | Edit this page View Source GetFlipVertical(IRect) Declaration public static IRect GetFlipVertical(this IRect rect) | Edit this page View Source GetHorizontalDirection(Direction5) Declaration public static Direction3 GetHorizontalDirection(this Direction5 dir) | Edit this page View Source GetReadOnlySpan<T>(T[]) Declaration public static ReadOnlySpan<T> GetReadOnlySpan<T>(this T[] arr) | Edit this page View Source GetRotation(Direction4) Declaration public static int GetRotation(this Direction4 dir) | Edit this page View Source GetRotation(Direction8) Declaration public static int GetRotation(this Direction8 dir) | Edit this page View Source GetRotation(Float2) Declaration public static int GetRotation(this Float2 vector) | Edit this page View Source GetRotation(Int2) Declaration public static int GetRotation(this Int2 vector) | Edit this page View Source GetSpan<T>(List<T>) Declaration public static Span<T> GetSpan<T>(this List<T> list) | Edit this page View Source GetSpan<T>(T[]) Declaration public static Span<T> GetSpan<T>(this T[] arr) | Edit this page View Source GetTypePath(Type, Type) Declaration public static string GetTypePath(this Type type, Type startFrom = null) | Edit this page View Source GetVerticalDirection(Direction5) Declaration public static Direction3 GetVerticalDirection(this Direction5 dir) | Edit this page View Source GreaterOrAlmost(float, float) Declaration public static bool GreaterOrAlmost(this float a, float b) | Edit this page View Source GreaterOrEquel(int, int) Declaration public static int GreaterOrEquel(this int value, int target) | Edit this page View Source GreaterOrEquel(long, long) Declaration public static long GreaterOrEquel(this long value, long target) | Edit this page View Source GreaterOrEquelThanZero(int) Declaration public static int GreaterOrEquelThanZero(this int value) | Edit this page View Source HorizontalMidHalf(IRect) Declaration public static IRect HorizontalMidHalf(this IRect rect) | Edit this page View Source InLength(int, int) Declaration public static bool InLength(this int value, int length) | Edit this page View Source InRangeExclude(int, int, int) Declaration public static bool InRangeExclude(this int value, int min, int max) | Edit this page View Source InRangeInclude(int, int, int) Declaration public static bool InRangeInclude(this int value, int min, int max) | Edit this page View Source Inside(Float2, Float2, Float2) Declaration public static bool Inside(this Float2 v, Float2 min, Float2 max) | Edit this page View Source Inside(Float2, float, float, float, float) Declaration public static bool Inside(this Float2 v, float left, float right, float down, float up) | Edit this page View Source Inside01(Float2) Declaration public static bool Inside01(this Float2 v) | Edit this page View Source Intersection(IRect, IRect) Declaration public static IRect? Intersection(this IRect rect, IRect other) | Edit this page View Source InvokeSafe(Action) Declaration public static void InvokeSafe(this Action action) | Edit this page View Source InvokeSafe<T0>(Action<T0>, T0) Declaration public static void InvokeSafe<T0>(this Action<T0> action, T0 a) | Edit this page View Source InvokeSafe<T0, T1>(Action<T0, T1>, T0, T1) Declaration public static void InvokeSafe<T0, T1>(this Action<T0, T1> action, T0 a, T1 b) | Edit this page View Source InvokeSafe<T0, T1, T2>(Action<T0, T1, T2>, T0, T1, T2) Declaration public static void InvokeSafe<T0, T1, T2>(this Action<T0, T1, T2> action, T0 a, T1 b, T2 c) | Edit this page View Source IsBottom(Alignment) Declaration public static bool IsBottom(this Alignment alignment) | Edit this page View Source IsBottom(Direction8) Declaration public static bool IsBottom(this Direction8 dir) | Edit this page View Source IsHorizontal(Direction4) Declaration public static bool IsHorizontal(this Direction4 dir) | Edit this page View Source IsHorizontal(Direction5) Declaration public static bool IsHorizontal(this Direction5 dir) | Edit this page View Source IsHorizontal(Direction8) Declaration public static bool IsHorizontal(this Direction8 dir) | Edit this page View Source IsLeft(Alignment) Declaration public static bool IsLeft(this Alignment alignment) | Edit this page View Source IsLeft(Direction8) Declaration public static bool IsLeft(this Direction8 dir) | Edit this page View Source IsLyingDown(CharacterAnimationType) True if the character should be rendered lying down Declaration public static bool IsLyingDown(this CharacterAnimationType aniType) | Edit this page View Source IsMidX(Alignment) Declaration public static bool IsMidX(this Alignment alignment) | Edit this page View Source IsMidY(Alignment) Declaration public static bool IsMidY(this Alignment alignment) | Edit this page View Source IsNotSame(IRect, IRect) Declaration public static bool IsNotSame(this IRect a, IRect b) | Edit this page View Source IsPositive(Direction4) Declaration public static bool IsPositive(this Direction4 dir) | Edit this page View Source IsPositive(Direction5) Declaration public static bool IsPositive(this Direction5 dir) | Edit this page View Source IsPositive(Direction8) Declaration public static bool IsPositive(this Direction8 dir) | Edit this page View Source IsRight(Alignment) Declaration public static bool IsRight(this Alignment alignment) | Edit this page View Source IsRight(Direction8) Declaration public static bool IsRight(this Direction8 dir) | Edit this page View Source IsSame(Color32, Color32, bool) Declaration public static bool IsSame(this Color32 a, Color32 b, bool ignoreAlpha = false) | Edit this page View Source IsSame(IRect, IRect) Declaration public static bool IsSame(this IRect a, IRect b) | Edit this page View Source IsTilted(Direction8) Declaration public static bool IsTilted(this Direction8 dir) | Edit this page View Source IsTop(Alignment) Declaration public static bool IsTop(this Alignment alignment) | Edit this page View Source IsTop(Direction8) Declaration public static bool IsTop(this Direction8 dir) | Edit this page View Source IsVertical(Direction4) Declaration public static bool IsVertical(this Direction4 dir) | Edit this page View Source IsVertical(Direction5) Declaration public static bool IsVertical(this Direction5 dir) | Edit this page View Source IsVertical(Direction8) Declaration public static bool IsVertical(this Direction8 dir) | Edit this page View Source JoinArray<T>(IEnumerable<T>, Func<T, string>, char) Declaration public static string JoinArray<T>(this IEnumerable<T> arr, Func<T, string> toString, char separator = '\\0') | Edit this page View Source LeftHalf(IRect) Declaration public static IRect LeftHalf(this IRect rect) | Edit this page View Source LerpTo(IRect, IRect, int) Declaration public static IRect LerpTo(this IRect from, IRect to, int lerpRate) | Edit this page View Source LerpTo(IRect, IRect, float) Declaration public static IRect LerpTo(this IRect from, IRect to, float lerp) | Edit this page View Source LerpTo(int, int, int) Declaration public static int LerpTo(this int from, int to, int lerpRate) | Edit this page View Source LerpTo(int, int, float) Declaration public static int LerpTo(this int from, int to, float lerp01) | Edit this page View Source LerpWithGap(float, float, float, float) Declaration public static float LerpWithGap(this float from, float to, float lerp, float gap) | Edit this page View Source LessOrAlmost(float, float) Declaration public static bool LessOrAlmost(this float a, float b) | Edit this page View Source LessOrEquel(int, int) Declaration public static int LessOrEquel(this int value, int target) | Edit this page View Source LessOrEquelThanZero(int) Declaration public static int LessOrEquelThanZero(this int value) | Edit this page View Source LookDifferent(Color32, Color32) Declaration public static bool LookDifferent(this Color32 a, Color32 b) | Edit this page View Source MidLeft(IRect) Declaration public static Int2 MidLeft(this IRect rect) | Edit this page View Source MidRight(IRect) Declaration public static Int2 MidRight(this IRect rect) | Edit this page View Source MoveTowards(Int2, Int2, Int2) Declaration public static Int2 MoveTowards(this Int2 v, Int2 target, Int2 delta) | Edit this page View Source MoveTowards(Int2, Int2, int) Declaration public static Int2 MoveTowards(this Int2 v, Int2 target, int delta) | Edit this page View Source MoveTowards(int, int, int) Declaration public static int MoveTowards(this int current, int target, int maxDelta) | Edit this page View Source MoveTowards(int, int, int, int) Declaration public static int MoveTowards(this int current, int target, int positiveDelta, int negativeDelta) | Edit this page View Source Mult(Color32, Color32) Declaration public static Color32 Mult(this Color32 a, Color32 b) | Edit this page View Source Next<E>(E) Declaration public static E Next<E>(this E @enum) where E : Enum | Edit this page View Source Normal(Alignment) Declaration public static Int2 Normal(this Alignment alignment) | Edit this page View Source Normal(Direction4) Declaration public static Int2 Normal(this Direction4 dir) | Edit this page View Source Normal(Direction5) Declaration public static Int2 Normal(this Direction5 dir) | Edit this page View Source Normal(Direction8) Declaration public static Int2 Normal(this Direction8 dir) | Edit this page View Source NotAlmost(FRect, FRect) Declaration public static bool NotAlmost(this FRect a, FRect b) | Edit this page View Source NotAlmost(Float2, Float2) Declaration public static bool NotAlmost(this Float2 a, Float2 b) | Edit this page View Source NotAlmost(Float3, Float3) Declaration public static bool NotAlmost(this Float3 a, Float3 b) | Edit this page View Source NotAlmost(float, float) Declaration public static bool NotAlmost(this float a, float b) | Edit this page View Source NotAlmostZero(float) Declaration public static bool NotAlmostZero(this float a) | Edit this page View Source NotEnd(BinaryReader) Declaration public static bool NotEnd(this BinaryReader reader) | Edit this page View Source Opposite(Direction3) Declaration public static Direction3 Opposite(this Direction3 dir) | Edit this page View Source Opposite(Direction4) Declaration public static Direction4 Opposite(this Direction4 dir) | Edit this page View Source Opposite(Direction5) Declaration public static Direction5 Opposite(this Direction5 dir) | Edit this page View Source Opposite(Direction8) Declaration public static Direction8 Opposite(this Direction8 dir) | Edit this page View Source PartHorizontal(IRect, int, int) Declaration public static IRect PartHorizontal(this IRect rect, int index, int count) | Edit this page View Source PartVertical(IRect, int, int) Declaration public static IRect PartVertical(this IRect rect, int index, int count) | Edit this page View Source PingPong(int, int) Declaration public static int PingPong(this int value, int length) | Edit this page View Source PingPong(int, int, int) Declaration public static int PingPong(this int value, int min, int max) | Edit this page View Source Pixels_to_Bytes(Color32[]) Declaration public static byte[] Pixels_to_Bytes(this Color32[] pixels) | Edit this page View Source Prev<E>(E) Declaration public static E Prev<E>(this E @enum) where E : Enum | Edit this page View Source ResizeFrom(FRect, float, float, float, float) Declaration public static FRect ResizeFrom(this FRect rect, float newWidth, float newHeight, float pointX, float pointY) | Edit this page View Source ResizeFrom(IRect, int, int, int, int) Declaration public static IRect ResizeFrom(this IRect rect, int newWidth, int newHeight, int pointX, int pointY) | Edit this page View Source ReverseClamp(int, int, int) Declaration public static int ReverseClamp(this int a, int min, int max) | Edit this page View Source RightHalf(IRect) Declaration public static IRect RightHalf(this IRect rect) | Edit this page View Source Rotate(Float2, float) Declaration public static Float2 Rotate(this Float2 vector, float angle) | Edit this page View Source Rotate(Float3, float) Declaration public static Float3 Rotate(this Float3 vector, float angle) | Edit this page View Source Round(float) Declaration public static float Round(this float a) | Edit this page View Source RoundToInt(Float2) Declaration public static Int2 RoundToInt(this Float2 v) | Edit this page View Source RoundToInt(float) Declaration public static int RoundToInt(this float a) | Edit this page View Source ScaleFrom(FRect, float, float, float) Declaration public static FRect ScaleFrom(this FRect rect, float scale, float pointX, float pointY) | Edit this page View Source ScaleFrom(IRect, int, int, int) Declaration public static IRect ScaleFrom(this IRect rect, int scale, int pointX, int pointY) | Edit this page View Source ScaleFrom(IRect, int, int, int, int) Declaration public static IRect ScaleFrom(this IRect rect, int scaleX, int scaleY, int pointX, int pointY) | Edit this page View Source ScaleFrom(IRect, float, int, int) Declaration public static IRect ScaleFrom(this IRect rect, float scale01, int pointX, int pointY) | Edit this page View Source ScaleFrom(IRect, float, float, int, int) Declaration public static IRect ScaleFrom(this IRect rect, float scaleX01, float scaleY01, int pointX, int pointY) | Edit this page View Source SetBit(ref byte, int, bool) Declaration public static void SetBit(this ref byte value, int index, bool bitValue) | Edit this page View Source SetBit(ref int, int, bool) Declaration public static void SetBit(this ref int value, int index, bool bitValue) | Edit this page View Source SetBit(ref uint, int, bool) Declaration public static void SetBit(this ref uint value, int index, bool bitValue) | Edit this page View Source SetBit(ref ulong, int, bool) Declaration public static void SetBit(this ref ulong value, int index, bool bitValue) | Edit this page View Source SetMinMax(ref IRect, int, int, int, int) Declaration public static void SetMinMax(this ref IRect rect, int xMin, int xMax, int yMin, int yMax) | Edit this page View Source Shift(FRect, float, float) Declaration public static FRect Shift(this FRect rect, float x, float y) | Edit this page View Source Shift(IRect, Int2) Declaration public static IRect Shift(this IRect rect, Int2 offset) | Edit this page View Source Shift(IRect, int, int) Declaration public static IRect Shift(this IRect rect, int x, int y) | Edit this page View Source Shift(Int2, int, int) Declaration public static Int2 Shift(this Int2 v, int x, int y) | Edit this page View Source ShiftX(Int2, int) Declaration public static Int2 ShiftX(this Int2 v, int x) | Edit this page View Source ShiftY(Int2, int) Declaration public static Int2 ShiftY(this Int2 v, int y) | Edit this page View Source Shrink(FRect, float) Declaration public static FRect Shrink(this FRect rect, float offset) | Edit this page View Source Shrink(FRect, float, float, float, float) Declaration public static FRect Shrink(this FRect rect, float l, float r, float d, float u) | Edit this page View Source Shrink(IRect, Int4) Declaration public static IRect Shrink(this IRect rect, Int4 offset) | Edit this page View Source Shrink(IRect, int) Declaration public static IRect Shrink(this IRect rect, int offset) | Edit this page View Source Shrink(IRect, int, int, int, int) Declaration public static IRect Shrink(this IRect rect, int l, int r, int d, int u) | Edit this page View Source ShrinkDown(IRect, int) Declaration public static IRect ShrinkDown(this IRect rect, int down) | Edit this page View Source ShrinkLeft(IRect, int) Declaration public static IRect ShrinkLeft(this IRect rect, int left) | Edit this page View Source ShrinkRight(IRect, int) Declaration public static IRect ShrinkRight(this IRect rect, int right) | Edit this page View Source ShrinkUp(IRect, int) Declaration public static IRect ShrinkUp(this IRect rect, int up) | Edit this page View Source Sign(bool) Declaration public static int Sign(this bool value) | Edit this page View Source Sign(int) Declaration public static int Sign(this int i) | Edit this page View Source Sign3(int) Declaration public static int Sign3(this int i) | Edit this page View Source SlideDown(ref IRect, int) Declaration public static void SlideDown(this ref IRect rect, int padding = 0) | Edit this page View Source SlideLeft(ref IRect, int) Declaration public static void SlideLeft(this ref IRect rect, int padding = 0) | Edit this page View Source SlideRight(ref IRect, int) Declaration public static void SlideRight(this ref IRect rect, int padding = 0) | Edit this page View Source SlideUp(ref IRect, int) Declaration public static void SlideUp(this ref IRect rect, int padding = 0) | Edit this page View Source StartsWith(string, char, char) Declaration public static bool StartsWith(this string str, char targetChar, char ignoreChar) | Edit this page View Source StartsWith_IgnoreWhiteSpace(string, char) Declaration public static bool StartsWith_IgnoreWhiteSpace(this string str, char targetChar) | Edit this page View Source StartsWith_IgnoreWhiteSpace(string, char, out int) Declaration public static bool StartsWith_IgnoreWhiteSpace(this string str, char targetChar, out int index) | Edit this page View Source ToAlignment(Direction4) Declaration public static Alignment ToAlignment(this Direction4 dir4) | Edit this page View Source ToAlignment(Direction5) Declaration public static Alignment ToAlignment(this Direction5 dir5) | Edit this page View Source ToColor32(ColorF) Declaration public static Color32 ToColor32(this ColorF value) | Edit this page View Source ToColorF(Color32) Declaration public static ColorF ToColorF(this Color32 value) | Edit this page View Source ToDirection4(Direction5, Direction4) Declaration public static Direction4 ToDirection4(this Direction5 dir5, Direction4 center = Direction4.Up) | Edit this page View Source ToDirection5(Direction4) Declaration public static Direction5 ToDirection5(this Direction4 dir4) | Edit this page View Source ToDirection8(Direction4) Declaration public static Direction8 ToDirection8(this Direction4 dir4) | Edit this page View Source ToFRect(IRect) Declaration public static FRect ToFRect(this IRect rect) | Edit this page View Source ToGlobal(IRect) Declaration public static IRect ToGlobal(this IRect unit) | Edit this page View Source ToGlobal(Int2) Declaration public static Int2 ToGlobal(this Int2 unitPos) | Edit this page View Source ToGlobal(Int3) Declaration public static Int3 ToGlobal(this Int3 unitPos) | Edit this page View Source ToGlobal(int) Declaration public static int ToGlobal(this int unitPos) | Edit this page View Source ToIRect(FRect) Declaration public static IRect ToIRect(this FRect rect) | Edit this page View Source ToStringWithDoubleQuotes(string) Declaration public static string ToStringWithDoubleQuotes(this string str) | Edit this page View Source ToStringWithDoubleQuotes(StringBuilder) Declaration public static string ToStringWithDoubleQuotes(this StringBuilder builder) | Edit this page View Source ToUnifyGlobal(Int2) Declaration public static Int2 ToUnifyGlobal(this Int2 globalPos) | Edit this page View Source ToUnifyGlobal(Int3) Declaration public static Int3 ToUnifyGlobal(this Int3 globalPos) | Edit this page View Source ToUnifyGlobal(int) Declaration public static int ToUnifyGlobal(this int globalPos) | Edit this page View Source ToUnit(IRect) Declaration public static IRect ToUnit(this IRect global) | Edit this page View Source ToUnit(Int2) Declaration public static Int2 ToUnit(this Int2 globalPos) | Edit this page View Source ToUnit(Int3) Declaration public static Int3 ToUnit(this Int3 globalPos) | Edit this page View Source ToUnit(int) Declaration public static int ToUnit(this int globalPos) | Edit this page View Source ToUnit(int, out int) Declaration public static int ToUnit(this int globalPos, out int remainder) | Edit this page View Source ToVector3Int(Int2, int) Declaration public static Int3 ToVector3Int(this Int2 v, int z) | Edit this page View Source TopHalf(IRect) Declaration public static IRect TopHalf(this IRect rect) | Edit this page View Source TopLeft(FRect) Declaration public static Float2 TopLeft(this FRect rect) | Edit this page View Source TopLeft(IRect) Declaration public static Int2 TopLeft(this IRect rect) | Edit this page View Source TopMid(IRect) Declaration public static Int2 TopMid(this IRect rect) | Edit this page View Source TopRight(FRect) Declaration public static Float2 TopRight(this FRect rect) | Edit this page View Source TopRight(IRect) Declaration public static Int2 TopRight(this IRect rect) | Edit this page View Source TrimEnd_IfEndWith(string, string, params char[]) Declaration public static string TrimEnd_IfEndWith(this string str, string end, params char[] trimChars) | Edit this page View Source TrimEnd_Numbers(string) Declaration public static string TrimEnd_Numbers(this string str) | Edit this page View Source TrimEnd_NumbersEmpty(string) Declaration public static string TrimEnd_NumbersEmpty(this string str) | Edit this page View Source TrimEnd_NumbersEmpty_(string) Declaration public static string TrimEnd_NumbersEmpty_(this string str) | Edit this page View Source TrimStart_Numbers(string) Declaration public static string TrimStart_Numbers(this string str) | Edit this page View Source TrimWhiteForStartAndEnd(string) Declaration public static string TrimWhiteForStartAndEnd(this string str) | Edit this page View Source TryGetDirection8(Int2, out Direction8) Declaration public static bool TryGetDirection8(this Int2 dir, out Direction8 result) | Edit this page View Source UCeil(int, int) Declaration public static int UCeil(this int value, int step) | Edit this page View Source UCeil(float, float) Declaration public static float UCeil(this float value, float gap) | Edit this page View Source UDivide(IRect, int) Declaration public static IRect UDivide(this IRect rect, int divide) | Edit this page View Source UDivide(Int2, int) Declaration public static Int2 UDivide(this Int2 v, int gap) | Edit this page View Source UDivide(int, int) Declaration public static int UDivide(this int value, int step) | Edit this page View Source UFloor(int, int) Declaration public static int UFloor(this int value, int step) | Edit this page View Source UFloor(float, float) Declaration public static float UFloor(this float value, float gap) | Edit this page View Source UMod(int, int) Declaration public static int UMod(this int value, int step) | Edit this page View Source UMod(long, long) Declaration public static long UMod(this long value, long step) | Edit this page View Source UMod(float, float) Declaration public static float UMod(this float value, float gap) | Edit this page View Source VerticalMidHalf(IRect) Declaration public static IRect VerticalMidHalf(this IRect rect) | Edit this page View Source WithNewA(Color32, int) Declaration public static Color32 WithNewA(this Color32 value, int a) | Edit this page View Source WithNewA(ColorF, float) Declaration public static ColorF WithNewA(this ColorF value, float a) | Edit this page View Source WithNewHeight(IRect, int) Declaration public static IRect WithNewHeight(this IRect rect, int height) | Edit this page View Source WithNewWidth(IRect, int) Declaration public static IRect WithNewWidth(this IRect rect, int width)"
  },
  "api/AngeliA.FRect.html": {
    "href": "api/AngeliA.FRect.html",
    "title": "Struct FRect | AngeliA",
    "summary": "Struct FRect Implements IEquatable<FRect> IFormattable Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax [Serializable] public struct FRect : IEquatable<FRect>, IFormattable Constructors | Edit this page View Source FRect(FRect) Declaration public FRect(FRect source) | Edit this page View Source FRect(Float2, Float2) Declaration public FRect(Float2 position, Float2 size) | Edit this page View Source FRect(float, float, float, float) Declaration public FRect(float x, float y, float width, float height) Properties | Edit this page View Source center Declaration public Float2 center { readonly get; set; } | Edit this page View Source height Declaration public float height { readonly get; set; } | Edit this page View Source max Declaration public Float2 max { readonly get; set; } | Edit this page View Source min Declaration public Float2 min { readonly get; set; } | Edit this page View Source position Declaration public Float2 position { readonly get; set; } | Edit this page View Source size Declaration public Float2 size { readonly get; set; } | Edit this page View Source width Declaration public float width { readonly get; set; } | Edit this page View Source x Declaration public float x { readonly get; set; } | Edit this page View Source xMax Declaration public float xMax { readonly get; set; } | Edit this page View Source xMin Declaration public float xMin { readonly get; set; } | Edit this page View Source y Declaration public float y { readonly get; set; } | Edit this page View Source yMax Declaration public float yMax { readonly get; set; } | Edit this page View Source yMin Declaration public float yMin { readonly get; set; } | Edit this page View Source zero Declaration public static FRect zero { get; } Methods | Edit this page View Source Contains(Float2) Declaration public readonly bool Contains(Float2 point) | Edit this page View Source Contains(Float3) Declaration public readonly bool Contains(Float3 point) | Edit this page View Source Contains(Float3, bool) Declaration public readonly bool Contains(Float3 point, bool allowInverse) | Edit this page View Source Equals(FRect) Indicates whether the current object is equal to another object of the same type. Declaration public readonly bool Equals(FRect other) Parameters Type Name Description FRect other An object to compare with this object. Returns Type Description bool true if the current object is equal to the other parameter; otherwise, false. | Edit this page View Source Equals(object) Indicates whether this instance and a specified object are equal. Declaration public override readonly bool Equals(object other) Returns Type Description bool true if obj and this instance are the same type and represent the same value; otherwise, false. Overrides ValueType.Equals(object) | Edit this page View Source GetHashCode() Returns the hash code for this instance. Declaration public override readonly int GetHashCode() Returns Type Description int A 32-bit signed integer that is the hash code for this instance. Overrides ValueType.GetHashCode() | Edit this page View Source MinMaxRect(float, float, float, float) Declaration public static FRect MinMaxRect(float xmin, float ymin, float xmax, float ymax) | Edit this page View Source NormalizedToPoint(FRect, Float2) Declaration public static Float2 NormalizedToPoint(FRect rectangle, Float2 normalizedRectCoordinates) | Edit this page View Source Overlaps(FRect) Declaration public readonly bool Overlaps(FRect other) | Edit this page View Source Overlaps(FRect, bool) Declaration public readonly bool Overlaps(FRect other, bool allowInverse) | Edit this page View Source PointToNormalized(FRect, Float2) Declaration public static Float2 PointToNormalized(FRect rectangle, Float2 point) | Edit this page View Source Set(float, float, float, float) Declaration public void Set(float x, float y, float width, float height) | Edit this page View Source ToString() Returns the fully qualified type name of this instance. Declaration public override readonly string ToString() Returns Type Description string The fully qualified type name. Overrides ValueType.ToString() | Edit this page View Source ToString(string) Declaration public readonly string ToString(string format) | Edit this page View Source ToString(string, IFormatProvider) Formats the value of the current instance using the specified format. Declaration public readonly string ToString(string format, IFormatProvider formatProvider) Parameters Type Name Description string format The format to use. -or- A null reference (Nothing in Visual Basic) to use the default format defined for the type of the IFormattable implementation. IFormatProvider formatProvider The provider to use to format the value. -or- A null reference (Nothing in Visual Basic) to obtain the numeric format information from the current locale setting of the operating system. Returns Type Description string The value of the current instance in the specified format. Operators | Edit this page View Source operator ==(FRect, FRect) Declaration public static bool operator ==(FRect lhs, FRect rhs) | Edit this page View Source operator !=(FRect, FRect) Declaration public static bool operator !=(FRect lhs, FRect rhs) Implements IEquatable<T> IFormattable Extension Methods Extension.Almost(FRect, FRect) Extension.BottomLeft(FRect) Extension.BottomRight(FRect) Extension.Clamp(ref FRect, FRect) Extension.CompleteInside(FRect, FRect) Extension.Edge(FRect, Direction4, float) Extension.Envelope(FRect, float) Extension.Expand(FRect, float) Extension.Expand(FRect, float, float, float, float) Extension.ExpandToIRect(FRect) Extension.Fit(FRect, float, float, float) Extension.GetClamp(FRect, FRect) Extension.NotAlmost(FRect, FRect) Extension.ResizeFrom(FRect, float, float, float, float) Extension.ScaleFrom(FRect, float, float, float) Extension.Shift(FRect, float, float) Extension.Shrink(FRect, float) Extension.Shrink(FRect, float, float, float, float) Extension.ToIRect(FRect) Extension.TopLeft(FRect) Extension.TopRight(FRect) Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.Face.html": {
    "href": "api/AngeliA.Face.html",
    "title": "Class Face | AngeliA",
    "summary": "Class Face Face gadget for pose characters Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public abstract class Face : BodyGadget Properties | Edit this page View Source GadgetType Type of this body gadget Declaration public override sealed BodyGadgetType GadgetType { get; } Overrides BodyGadget.GadgetType | Edit this page View Source SpriteLoaded True if artwork sprite is loaded Declaration public override bool SpriteLoaded { get; } Overrides BodyGadget.SpriteLoaded Methods | Edit this page View Source DrawEye(CharacterFaceExpression, IRect, bool, bool, int) Draw one eye for pose-style character Declaration protected virtual void DrawEye(CharacterFaceExpression expression, IRect faceRect, bool leftEye, bool facingRight, int animationFrame) Parameters Type Name Description CharacterFaceExpression expression Current face expression IRect faceRect Rect position for the character's face bool leftEye True if this eye is the left eye bool facingRight True if the character is facing right | Edit this page View Source DrawGadget(PoseCharacterRenderer) Render the gadget for the given character Declaration public override void DrawGadget(PoseCharacterRenderer renderer) Overrides BodyGadget.DrawGadget(PoseCharacterRenderer) | Edit this page View Source DrawGadgetFromPool(PoseCharacterRenderer) Draw face gadget for given character Declaration public static void DrawGadgetFromPool(PoseCharacterRenderer renderer) | Edit this page View Source DrawGadgetGizmos(IRect, Color32, int) Render the gadget as gizmos Declaration public override void DrawGadgetGizmos(IRect rect, Color32 tint, int z) Parameters Type Name Description IRect rect Global rect position Color32 tint Color tint int z Z position for sorting Overrides BodyGadget.DrawGadgetGizmos(IRect, Color32, int) | Edit this page View Source DrawMouth(CharacterFaceExpression, IRect, bool, int) Draw mouth for pose-style character Declaration protected virtual void DrawMouth(CharacterFaceExpression expression, IRect faceRect, bool facingRight, int animationFrame) Parameters Type Name Description CharacterFaceExpression expression Current face expression IRect faceRect Rect position for the character's face bool facingRight True if the character is facing right | Edit this page View Source DrawSpriteAsHumanEar(PoseCharacterRenderer, OrientedSprite, OrientedSprite, int, int) Draw two human style ears on both sides of the face Declaration public static void DrawSpriteAsHumanEar(PoseCharacterRenderer renderer, OrientedSprite spriteLeft, OrientedSprite spriteRight, int offsetXL = 0, int offsetXR = 0) Parameters Type Name Description PoseCharacterRenderer renderer Target character OrientedSprite spriteLeft Left ear sprite OrientedSprite spriteRight Right ear sprite int offsetXL Horizontal offset for left ear in global space int offsetXR Horizontal offset for right ear in global space | Edit this page View Source FillFromSheet(string) Load sprite data from Renderer.CurrentSheet Declaration public override bool FillFromSheet(string keyword) Overrides BodyGadget.FillFromSheet(string) | Edit this page View Source GetCurrentExpression(PoseCharacterRenderer) Declaration public static CharacterFaceExpression GetCurrentExpression(PoseCharacterRenderer renderer) | Edit this page View Source GetFaceRect(PoseCharacterRenderer, out IRect) Get current rect position for the given character's face Declaration public IRect GetFaceRect(PoseCharacterRenderer renderer, out IRect headRect) | Edit this page View Source GetScleraRect(PoseCharacterRenderer, bool) Get rect position of sclera part of the eye Declaration public IRect GetScleraRect(PoseCharacterRenderer renderer, bool leftEye) Parameters Type Name Description PoseCharacterRenderer renderer Target character bool leftEye True if the eye is left eye Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.FadeInTask.html": {
    "href": "api/AngeliA.FadeInTask.html",
    "title": "Class FadeInTask | AngeliA",
    "summary": "Class FadeInTask Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public class FadeInTask : Task Fields | Edit this page View Source TYPE_ID Declaration public static readonly int TYPE_ID Methods | Edit this page View Source FrameUpdate() Declaration public override TaskResult FrameUpdate() Overrides Task.FrameUpdate() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.FadeOutTask.html": {
    "href": "api/AngeliA.FadeOutTask.html",
    "title": "Class FadeOutTask | AngeliA",
    "summary": "Class FadeOutTask Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public class FadeOutTask : Task Fields | Edit this page View Source TYPE_ID Declaration public static readonly int TYPE_ID Methods | Edit this page View Source FrameUpdate() Declaration public override TaskResult FrameUpdate() Overrides Task.FrameUpdate() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.FastNoiseGroup.html": {
    "href": "api/AngeliA.FastNoiseGroup.html",
    "title": "Class FastNoiseGroup | AngeliA",
    "summary": "Class FastNoiseGroup Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public class FastNoiseGroup Constructors | Edit this page View Source FastNoiseGroup(int) Declaration public FastNoiseGroup(int length) Fields | Edit this page View Source Length Declaration public readonly int Length Properties | Edit this page View Source this[int] Declaration public FastNoiseLite this[int index] { get; } | Edit this page View Source SolidMax Declaration public float SolidMax { get; set; } | Edit this page View Source SolidMin Declaration public float SolidMin { get; set; } Methods | Edit this page View Source FillAltitude(int[,], float, float, float, float, float, out int) Declaration public void FillAltitude(int[,] altitude, float left, float down, float z, float deltaX, float deltaY, out int altitudeMax) | Edit this page View Source GetCSharpCode(string) Declaration public string GetCSharpCode(string groupName) | Edit this page View Source GetMatching(int) Declaration public NoiseMatching GetMatching(int index) | Edit this page View Source GetNoise(float, float, float) Declaration public float GetNoise(float x, float y, float z) | Edit this page View Source IsSolid(float) Declaration public bool IsSolid(float value) | Edit this page View Source SetMatching(int, NoiseMatching) Declaration public void SetMatching(int index, NoiseMatching matching) Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.FileBrowserUI.html": {
    "href": "api/AngeliA.FileBrowserUI.html",
    "title": "Class FileBrowserUI | AngeliA",
    "summary": "Class FileBrowserUI Built-in file brower entity for PC only Implements IMapItem IWindowEntityUI Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax [Entity.StageOrder(4095)] [Entity.Capacity(1, 1)] public sealed class FileBrowserUI : EntityUI, IMapItem, IWindowEntityUI Constructors | Edit this page View Source FileBrowserUI() Declaration public FileBrowserUI() Properties | Edit this page View Source BackgroundRect Rect position for background range in global space Declaration public IRect BackgroundRect { get; } | Edit this page View Source BlockEvent True if this UI blocks mouse button event Declaration protected override bool BlockEvent { get; } Overrides EntityUI.BlockEvent | Edit this page View Source CurrentFolder Path of the current browsing folder Declaration public string CurrentFolder { get; set; } | Edit this page View Source CurrentName Name of the current selecting file/folder Declaration public string CurrentName { get; set; } | Edit this page View Source Instance Global single instance for this class Declaration public static FileBrowserUI Instance { get; } | Edit this page View Source SearchPatterns Files that will be display inside the content panel Declaration public string[] SearchPatterns { get; } | Edit this page View Source ShowingBrowser True if the entity is currently displaying Declaration public static bool ShowingBrowser { get; } | Edit this page View Source Title Title of the current window Declaration public string Title { get; set; } Methods | Edit this page View Source BeforeUpdate() [2/4] This function is called every frame when entity is in stage. Prioritize using this function to update physics logic. Declaration public override void BeforeUpdate() Overrides Entity.BeforeUpdate() | Edit this page View Source FirstUpdate() [1/4] This function is called every frame when entity is in stage. Prioritize using this function to fill collider in to physics system. Declaration public override void FirstUpdate() Overrides EntityUI.FirstUpdate() | Edit this page View Source OnActivated() This function is called when entity enter the stage Declaration public override void OnActivated() Overrides Entity.OnActivated() | Edit this page View Source OpenFile(string, Action<string>, params string[]) Start file browser for open an existing file Declaration public static void OpenFile(string title, Action<string> onFileOpen, params string[] searchPatterns) Parameters Type Name Description string title Title of the window Action<string> onFileOpen Callback function for a file being open string[] searchPatterns Which file should be display. eg.\".png\", \".jpg\" | Edit this page View Source OpenFolder(string, Action<string>) Start file browser for open an existing folder Declaration public static void OpenFolder(string title, Action<string> onFolderOpen) Parameters Type Name Description string title Title of the window Action<string> onFolderOpen Callback function for a folder being open | Edit this page View Source SaveFile(string, string, Action<string>, params string[]) Start file browser for create/save a file Declaration public static void SaveFile(string title, string defaultFileNameWithExt, Action<string> onFileSaved, params string[] searchPatterns) Parameters Type Name Description string title Title of the window string defaultFileNameWithExt Default name shown in the input field. eg. \"name.png\" Action<string> onFileSaved Callback function for the file being create/save string[] searchPatterns Which type of file is allowed be create/save. eg.\".png\", \".jpg\" | Edit this page View Source SaveFolder(string, string, Action<string>) Start file browser for create/save a folder Declaration public static void SaveFolder(string title, string defaultFolderName, Action<string> onFolderSaved) Parameters Type Name Description string title Title of the window string defaultFolderName Default name shown in the input field Action<string> onFolderSaved Callback function for the folder being create/save | Edit this page View Source UpdateUI() Declaration public override void UpdateUI() Overrides EntityUI.UpdateUI() Implements IMapItem IWindowEntityUI Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.FittingPose.html": {
    "href": "api/AngeliA.FittingPose.html",
    "title": "Enum FittingPose | AngeliA",
    "summary": "Enum FittingPose Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public enum FittingPose Fields Name Description Down Left Mid Right Single Unknown Up Extension Methods Extension.Next<FittingPose>(FittingPose) Extension.Prev<FittingPose>(FittingPose) Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.Float2.html": {
    "href": "api/AngeliA.Float2.html",
    "title": "Struct Float2 | AngeliA",
    "summary": "Struct Float2 Implements IEquatable<Float2> IFormattable Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax [Serializable] public struct Float2 : IEquatable<Float2>, IFormattable Constructors | Edit this page View Source Float2(float, float) Declaration public Float2(float x, float y) Fields | Edit this page View Source kEpsilon Declaration public const float kEpsilon = 1E-05 | Edit this page View Source kEpsilonNormalSqrt Declaration public const float kEpsilonNormalSqrt = 1E-15 | Edit this page View Source x Declaration public float x | Edit this page View Source y Declaration public float y Properties | Edit this page View Source this[int] Declaration public float this[int index] { readonly get; set; } | Edit this page View Source down Declaration public static Float2 down { get; } | Edit this page View Source left Declaration public static Float2 left { get; } | Edit this page View Source magnitude Declaration public readonly float magnitude { get; } | Edit this page View Source negativeInfinity Declaration public static Float2 negativeInfinity { get; } | Edit this page View Source normalized Declaration public readonly Float2 normalized { get; } | Edit this page View Source one Declaration public static Float2 one { get; } | Edit this page View Source positiveInfinity Declaration public static Float2 positiveInfinity { get; } | Edit this page View Source right Declaration public static Float2 right { get; } | Edit this page View Source sqrMagnitude Declaration public readonly float sqrMagnitude { get; } | Edit this page View Source up Declaration public static Float2 up { get; } | Edit this page View Source zero Declaration public static Float2 zero { get; } Methods | Edit this page View Source ClampMagnitude(Float2, float) Declaration public static Float2 ClampMagnitude(Float2 vector, float maxLength) | Edit this page View Source Distance(Float2, Float2) Declaration public static float Distance(Float2 a, Float2 b) | Edit this page View Source Dot(Float2, Float2) Declaration public static float Dot(Float2 lhs, Float2 rhs) | Edit this page View Source Equals(Float2) Indicates whether the current object is equal to another object of the same type. Declaration public readonly bool Equals(Float2 other) Parameters Type Name Description Float2 other An object to compare with this object. Returns Type Description bool true if the current object is equal to the other parameter; otherwise, false. | Edit this page View Source Equals(object) Indicates whether this instance and a specified object are equal. Declaration public override readonly bool Equals(object other) Returns Type Description bool true if obj and this instance are the same type and represent the same value; otherwise, false. Overrides ValueType.Equals(object) | Edit this page View Source GetHashCode() Returns the hash code for this instance. Declaration public override readonly int GetHashCode() Returns Type Description int A 32-bit signed integer that is the hash code for this instance. Overrides ValueType.GetHashCode() | Edit this page View Source Lerp(Float2, Float2, float) Declaration public static Float2 Lerp(Float2 a, Float2 b, float t) | Edit this page View Source LerpUnclamped(Float2, Float2, float) Declaration public static Float2 LerpUnclamped(Float2 a, Float2 b, float t) | Edit this page View Source MoveTowards(Float2, Float2, float) Declaration public static Float2 MoveTowards(Float2 current, Float2 target, float maxDistanceDelta) | Edit this page View Source Normalize() Declaration public void Normalize() | Edit this page View Source Reflect(Float2, Float2) Declaration public static Float2 Reflect(Float2 inDirection, Float2 inNormal) | Edit this page View Source Scale(Float2) Declaration public void Scale(Float2 scale) | Edit this page View Source Scale(Float2, Float2) Declaration public static Float2 Scale(Float2 a, Float2 b) | Edit this page View Source Set(float, float) Declaration public void Set(float newX, float newY) | Edit this page View Source SignedAngle(Float2, Float2) Declaration public static float SignedAngle(Float2 from, Float2 to) | Edit this page View Source SmoothDamp(Float2, Float2, ref Float2, float, float, float) Declaration public static Float2 SmoothDamp(Float2 current, Float2 target, ref Float2 currentVelocity, float smoothTime, float maxSpeed, float deltaTime) | Edit this page View Source SqrMagnitude() Declaration public readonly float SqrMagnitude() | Edit this page View Source SqrMagnitude(Float2) Declaration public static float SqrMagnitude(Float2 a) | Edit this page View Source ToString() Returns the fully qualified type name of this instance. Declaration public override readonly string ToString() Returns Type Description string The fully qualified type name. Overrides ValueType.ToString() | Edit this page View Source ToString(string) Declaration public readonly string ToString(string format) | Edit this page View Source ToString(string, IFormatProvider) Formats the value of the current instance using the specified format. Declaration public readonly string ToString(string format, IFormatProvider formatProvider) Parameters Type Name Description string format The format to use. -or- A null reference (Nothing in Visual Basic) to use the default format defined for the type of the IFormattable implementation. IFormatProvider formatProvider The provider to use to format the value. -or- A null reference (Nothing in Visual Basic) to obtain the numeric format information from the current locale setting of the operating system. Returns Type Description string The value of the current instance in the specified format. Operators | Edit this page View Source operator +(Float2, Float2) Declaration public static Float2 operator +(Float2 a, Float2 b) | Edit this page View Source operator /(Float2, Float2) Declaration public static Float2 operator /(Float2 a, Float2 b) | Edit this page View Source operator /(Float2, float) Declaration public static Float2 operator /(Float2 a, float d) | Edit this page View Source operator ==(Float2, Float2) Declaration public static bool operator ==(Float2 lhs, Float2 rhs) | Edit this page View Source implicit operator Float3(Float2) Declaration public static implicit operator Float3(Float2 v) | Edit this page View Source implicit operator Float2(Float3) Declaration public static implicit operator Float2(Float3 v) | Edit this page View Source operator !=(Float2, Float2) Declaration public static bool operator !=(Float2 lhs, Float2 rhs) | Edit this page View Source operator *(Float2, Float2) Declaration public static Float2 operator *(Float2 a, Float2 b) | Edit this page View Source operator *(Float2, float) Declaration public static Float2 operator *(Float2 a, float d) | Edit this page View Source operator *(float, Float2) Declaration public static Float2 operator *(float d, Float2 a) | Edit this page View Source operator -(Float2, Float2) Declaration public static Float2 operator -(Float2 a, Float2 b) | Edit this page View Source operator -(Float2) Declaration public static Float2 operator -(Float2 a) Implements IEquatable<T> IFormattable Extension Methods Extension.Almost(Float2, Float2) Extension.CeilToInt(Float2) Extension.Clamp(ref Float2, float, float, float, float) Extension.FloorToInt(Float2) Extension.GetRotation(Float2) Extension.Inside(Float2, Float2, Float2) Extension.Inside(Float2, float, float, float, float) Extension.Inside01(Float2) Extension.NotAlmost(Float2, Float2) Extension.Rotate(Float2, float) Extension.RoundToInt(Float2) Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.Float3.html": {
    "href": "api/AngeliA.Float3.html",
    "title": "Struct Float3 | AngeliA",
    "summary": "Struct Float3 Implements IEquatable<Float3> IFormattable Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax [Serializable] public struct Float3 : IEquatable<Float3>, IFormattable Constructors | Edit this page View Source Float3(float, float) Declaration public Float3(float x, float y) | Edit this page View Source Float3(float, float, float) Declaration public Float3(float x, float y, float z) Fields | Edit this page View Source kEpsilon Declaration public const float kEpsilon = 1E-05 | Edit this page View Source kEpsilonNormalSqrt Declaration public const float kEpsilonNormalSqrt = 1E-15 | Edit this page View Source x Declaration public float x | Edit this page View Source y Declaration public float y | Edit this page View Source z Declaration public float z Properties | Edit this page View Source this[int] Declaration public float this[int index] { readonly get; set; } | Edit this page View Source back Declaration public static Float3 back { get; } | Edit this page View Source down Declaration public static Float3 down { get; } | Edit this page View Source forward Declaration public static Float3 forward { get; } | Edit this page View Source left Declaration public static Float3 left { get; } | Edit this page View Source magnitude Declaration public readonly float magnitude { get; } | Edit this page View Source negativeInfinity Declaration public static Float3 negativeInfinity { get; } | Edit this page View Source normalized Declaration public readonly Float3 normalized { get; } | Edit this page View Source one Declaration public static Float3 one { get; } | Edit this page View Source positiveInfinity Declaration public static Float3 positiveInfinity { get; } | Edit this page View Source right Declaration public static Float3 right { get; } | Edit this page View Source sqrMagnitude Declaration public readonly float sqrMagnitude { get; } | Edit this page View Source up Declaration public static Float3 up { get; } | Edit this page View Source zero Declaration public static Float3 zero { get; } Methods | Edit this page View Source Angle(Float3, Float3) Declaration public static float Angle(Float3 from, Float3 to) | Edit this page View Source ClampMagnitude(Float3, float) Declaration public static Float3 ClampMagnitude(Float3 vector, float maxLength) | Edit this page View Source Cross(Float3, Float3) Declaration public static Float3 Cross(Float3 lhs, Float3 rhs) | Edit this page View Source Distance(Float3, Float3) Declaration public static float Distance(Float3 a, Float3 b) | Edit this page View Source Dot(Float3, Float3) Declaration public static float Dot(Float3 lhs, Float3 rhs) | Edit this page View Source Equals(Float3) Indicates whether the current object is equal to another object of the same type. Declaration public readonly bool Equals(Float3 other) Parameters Type Name Description Float3 other An object to compare with this object. Returns Type Description bool true if the current object is equal to the other parameter; otherwise, false. | Edit this page View Source Equals(object) Indicates whether this instance and a specified object are equal. Declaration public override readonly bool Equals(object other) Returns Type Description bool true if obj and this instance are the same type and represent the same value; otherwise, false. Overrides ValueType.Equals(object) | Edit this page View Source GetHashCode() Returns the hash code for this instance. Declaration public override readonly int GetHashCode() Returns Type Description int A 32-bit signed integer that is the hash code for this instance. Overrides ValueType.GetHashCode() | Edit this page View Source Lerp(Float3, Float3, float) Declaration public static Float3 Lerp(Float3 a, Float3 b, float t) | Edit this page View Source LerpUnclamped(Float3, Float3, float) Declaration public static Float3 LerpUnclamped(Float3 a, Float3 b, float t) | Edit this page View Source Magnitude(Float3) Declaration public static float Magnitude(Float3 vector) | Edit this page View Source Max(Float3, Float3) Declaration public static Float3 Max(Float3 lhs, Float3 rhs) | Edit this page View Source Min(Float3, Float3) Declaration public static Float3 Min(Float3 lhs, Float3 rhs) | Edit this page View Source MoveTowards(Float3, Float3, float) Declaration public static Float3 MoveTowards(Float3 current, Float3 target, float maxDistanceDelta) | Edit this page View Source Normalize() Declaration public void Normalize() | Edit this page View Source Normalize(Float3) Declaration public static Float3 Normalize(Float3 value) | Edit this page View Source Project(Float3, Float3) Declaration public static Float3 Project(Float3 vector, Float3 onNormal) | Edit this page View Source ProjectOnPlane(Float3, Float3) Declaration public static Float3 ProjectOnPlane(Float3 vector, Float3 planeNormal) | Edit this page View Source Reflect(Float3, Float3) Declaration public static Float3 Reflect(Float3 inDirection, Float3 inNormal) | Edit this page View Source Scale(Float3) Declaration public void Scale(Float3 scale) | Edit this page View Source Scale(Float3, Float3) Declaration public static Float3 Scale(Float3 a, Float3 b) | Edit this page View Source Set(float, float, float) Declaration public void Set(float newX, float newY, float newZ) | Edit this page View Source SignedAngle(Float3, Float3, Float3) Declaration public static float SignedAngle(Float3 from, Float3 to, Float3 axis) | Edit this page View Source SmoothDamp(Float3, Float3, ref Float3, float, float, float) Declaration public static Float3 SmoothDamp(Float3 current, Float3 target, ref Float3 currentVelocity, float smoothTime, float maxSpeed, float deltaTime) | Edit this page View Source SqrMagnitude(Float3) Declaration public static float SqrMagnitude(Float3 vector) | Edit this page View Source ToString() Returns the fully qualified type name of this instance. Declaration public override readonly string ToString() Returns Type Description string The fully qualified type name. Overrides ValueType.ToString() | Edit this page View Source ToString(string) Declaration public readonly string ToString(string format) | Edit this page View Source ToString(string, IFormatProvider) Formats the value of the current instance using the specified format. Declaration public readonly string ToString(string format, IFormatProvider formatProvider) Parameters Type Name Description string format The format to use. -or- A null reference (Nothing in Visual Basic) to use the default format defined for the type of the IFormattable implementation. IFormatProvider formatProvider The provider to use to format the value. -or- A null reference (Nothing in Visual Basic) to obtain the numeric format information from the current locale setting of the operating system. Returns Type Description string The value of the current instance in the specified format. Operators | Edit this page View Source operator +(Float3, Float3) Declaration public static Float3 operator +(Float3 a, Float3 b) | Edit this page View Source operator /(Float3, float) Declaration public static Float3 operator /(Float3 a, float d) | Edit this page View Source operator ==(Float3, Float3) Declaration public static bool operator ==(Float3 lhs, Float3 rhs) | Edit this page View Source operator !=(Float3, Float3) Declaration public static bool operator !=(Float3 lhs, Float3 rhs) | Edit this page View Source operator *(Float3, float) Declaration public static Float3 operator *(Float3 a, float d) | Edit this page View Source operator *(float, Float3) Declaration public static Float3 operator *(float d, Float3 a) | Edit this page View Source operator -(Float3, Float3) Declaration public static Float3 operator -(Float3 a, Float3 b) | Edit this page View Source operator -(Float3) Declaration public static Float3 operator -(Float3 a) Implements IEquatable<T> IFormattable Extension Methods Extension.Almost(Float3, Float3) Extension.NotAlmost(Float3, Float3) Extension.Rotate(Float3, float) Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.Float4.html": {
    "href": "api/AngeliA.Float4.html",
    "title": "Struct Float4 | AngeliA",
    "summary": "Struct Float4 Implements IEquatable<Float4> IFormattable Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax [Serializable] public struct Float4 : IEquatable<Float4>, IFormattable Constructors | Edit this page View Source Float4(float, float) Declaration public Float4(float x, float y) | Edit this page View Source Float4(float, float, float) Declaration public Float4(float x, float y, float z) | Edit this page View Source Float4(float, float, float, float) Declaration public Float4(float x, float y, float z, float w) Fields | Edit this page View Source kEpsilon Declaration public const float kEpsilon = 1E-05 | Edit this page View Source w Declaration public float w | Edit this page View Source x Declaration public float x | Edit this page View Source y Declaration public float y | Edit this page View Source z Declaration public float z Properties | Edit this page View Source this[int] Declaration public float this[int index] { readonly get; set; } | Edit this page View Source magnitude Declaration public readonly float magnitude { get; } | Edit this page View Source negativeInfinity Declaration public static Float4 negativeInfinity { get; } | Edit this page View Source normalized Declaration public readonly Float4 normalized { get; } | Edit this page View Source one Declaration public static Float4 one { get; } | Edit this page View Source positiveInfinity Declaration public static Float4 positiveInfinity { get; } | Edit this page View Source sqrMagnitude Declaration public readonly float sqrMagnitude { get; } | Edit this page View Source zero Declaration public static Float4 zero { get; } Methods | Edit this page View Source Distance(Float4, Float4) Declaration public static float Distance(Float4 a, Float4 b) | Edit this page View Source Dot(Float4, Float4) Declaration public static float Dot(Float4 a, Float4 b) | Edit this page View Source Equals(Float4) Indicates whether the current object is equal to another object of the same type. Declaration public readonly bool Equals(Float4 other) Parameters Type Name Description Float4 other An object to compare with this object. Returns Type Description bool true if the current object is equal to the other parameter; otherwise, false. | Edit this page View Source Equals(object) Indicates whether this instance and a specified object are equal. Declaration public override readonly bool Equals(object other) Returns Type Description bool true if obj and this instance are the same type and represent the same value; otherwise, false. Overrides ValueType.Equals(object) | Edit this page View Source GetHashCode() Returns the hash code for this instance. Declaration public override readonly int GetHashCode() Returns Type Description int A 32-bit signed integer that is the hash code for this instance. Overrides ValueType.GetHashCode() | Edit this page View Source Lerp(Float4, Float4, float) Declaration public static Float4 Lerp(Float4 a, Float4 b, float t) | Edit this page View Source LerpUnclamped(Float4, Float4, float) Declaration public static Float4 LerpUnclamped(Float4 a, Float4 b, float t) | Edit this page View Source Magnitude(Float4) Declaration public static float Magnitude(Float4 a) | Edit this page View Source Max(Float4, Float4) Declaration public static Float4 Max(Float4 lhs, Float4 rhs) | Edit this page View Source Min(Float4, Float4) Declaration public static Float4 Min(Float4 lhs, Float4 rhs) | Edit this page View Source MoveTowards(Float4, Float4, float) Declaration public static Float4 MoveTowards(Float4 current, Float4 target, float maxDistanceDelta) | Edit this page View Source Normalize() Declaration public void Normalize() | Edit this page View Source Normalize(Float4) Declaration public static Float4 Normalize(Float4 a) | Edit this page View Source Project(Float4, Float4) Declaration public static Float4 Project(Float4 a, Float4 b) | Edit this page View Source Scale(Float4) Declaration public void Scale(Float4 scale) | Edit this page View Source Scale(Float4, Float4) Declaration public static Float4 Scale(Float4 a, Float4 b) | Edit this page View Source Set(float, float, float, float) Declaration public void Set(float newX, float newY, float newZ, float newW) | Edit this page View Source SqrMagnitude() Declaration public readonly float SqrMagnitude() | Edit this page View Source SqrMagnitude(Float4) Declaration public static float SqrMagnitude(Float4 a) | Edit this page View Source ToString() Returns the fully qualified type name of this instance. Declaration public override readonly string ToString() Returns Type Description string The fully qualified type name. Overrides ValueType.ToString() | Edit this page View Source ToString(string) Declaration public readonly string ToString(string format) | Edit this page View Source ToString(string, IFormatProvider) Formats the value of the current instance using the specified format. Declaration public readonly string ToString(string format, IFormatProvider formatProvider) Parameters Type Name Description string format The format to use. -or- A null reference (Nothing in Visual Basic) to use the default format defined for the type of the IFormattable implementation. IFormatProvider formatProvider The provider to use to format the value. -or- A null reference (Nothing in Visual Basic) to obtain the numeric format information from the current locale setting of the operating system. Returns Type Description string The value of the current instance in the specified format. Operators | Edit this page View Source operator +(Float4, Float4) Declaration public static Float4 operator +(Float4 a, Float4 b) | Edit this page View Source operator /(Float4, float) Declaration public static Float4 operator /(Float4 a, float d) | Edit this page View Source operator ==(Float4, Float4) Declaration public static bool operator ==(Float4 lhs, Float4 rhs) | Edit this page View Source implicit operator Float4(Float2) Declaration public static implicit operator Float4(Float2 v) | Edit this page View Source implicit operator Float4(Float3) Declaration public static implicit operator Float4(Float3 v) | Edit this page View Source implicit operator Float2(Float4) Declaration public static implicit operator Float2(Float4 v) | Edit this page View Source implicit operator Float3(Float4) Declaration public static implicit operator Float3(Float4 v) | Edit this page View Source operator !=(Float4, Float4) Declaration public static bool operator !=(Float4 lhs, Float4 rhs) | Edit this page View Source operator *(Float4, float) Declaration public static Float4 operator *(Float4 a, float d) | Edit this page View Source operator *(float, Float4) Declaration public static Float4 operator *(float d, Float4 a) | Edit this page View Source operator -(Float4, Float4) Declaration public static Float4 operator -(Float4 a, Float4 b) | Edit this page View Source operator -(Float4) Declaration public static Float4 operator -(Float4 a) Implements IEquatable<T> IFormattable Extension Methods Extension.AlmostZero(Float4) Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.FontData.html": {
    "href": "api/AngeliA.FontData.html",
    "title": "Class FontData | AngeliA",
    "summary": "Class FontData Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public abstract class FontData Fields | Edit this page View Source BuiltIn Declaration public bool BuiltIn | Edit this page View Source FileModifyDate Declaration public long FileModifyDate | Edit this page View Source ID Declaration public int ID | Edit this page View Source Name Declaration public string Name | Edit this page View Source Path Declaration public string Path | Edit this page View Source Scale Declaration public float Scale | Edit this page View Source Size Declaration public int Size Methods | Edit this page View Source GetFontRealName(string) Declaration public static string GetFontRealName(string fontNameWithHashTag) | Edit this page View Source LoadData(string) Declaration public abstract void LoadData(string filePath) | Edit this page View Source LoadFromFile(string, bool) Declaration public bool LoadFromFile(string fontPath, bool builtIn) | Edit this page View Source TryGetCharSprite(char, out CharSprite) Declaration public abstract bool TryGetCharSprite(char c, out CharSprite result) | Edit this page View Source Unload() Declaration public abstract void Unload() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.FontScope.html": {
    "href": "api/AngeliA.FontScope.html",
    "title": "Struct FontScope | AngeliA",
    "summary": "Struct FontScope Scope that makes labels inside display with given font Implements IDisposable Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public readonly struct FontScope : IDisposable Examples using AngeliA; namespace AngeliaGame; public class Example { [OnGameUpdate] internal static void OnGameUpdate () { int fontID = /*Your font ID here*/; using (new FontScope(fontID)) { // Labels inside will be display with the given font } } } Constructors | Edit this page View Source FontScope(int) Declaration public FontScope(int fontID) Methods | Edit this page View Source Dispose() Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources. Declaration public void Dispose() Implements IDisposable Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.Food.html": {
    "href": "api/AngeliA.Food.html",
    "title": "Class Food | AngeliA",
    "summary": "Class Food Item that represent food Implements IMapItem Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax [Entity.MapEditorGroup(\"ItemFood\", 0)] public abstract class Food : Item, IMapItem Properties | Edit this page View Source MaxStackCount Count limitation for multiple items inside one inventory slot Declaration public override int MaxStackCount { get; } Overrides Item.MaxStackCount Implements IMapItem Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.FootCloth.html": {
    "href": "api/AngeliA.FootCloth.html",
    "title": "Class FootCloth | AngeliA",
    "summary": "Class FootCloth Shoes of a pose-style character Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public abstract class FootCloth : Cloth Properties | Edit this page View Source ClothType Where should characters wear this cloth Declaration public override sealed ClothType ClothType { get; } Overrides Cloth.ClothType | Edit this page View Source SpriteLoaded True if the artwork sprites are loaded Declaration public override bool SpriteLoaded { get; } Overrides Cloth.SpriteLoaded Methods | Edit this page View Source DrawCloth(PoseCharacterRenderer) Draw cloth for the given character Declaration public override void DrawCloth(PoseCharacterRenderer renderer) Overrides Cloth.DrawCloth(PoseCharacterRenderer) | Edit this page View Source DrawClothForFoot(PoseCharacterRenderer, OrientedSprite, OrientedSprite, int) Draw given artwork sprite as shoes for given character Declaration public static void DrawClothForFoot(PoseCharacterRenderer renderer, OrientedSprite spriteLeft, OrientedSprite spriteRight, int localZ = 1) Parameters Type Name Description PoseCharacterRenderer renderer Target character OrientedSprite spriteLeft Artwork sprite for left shoe OrientedSprite spriteRight Artwork sprite for right shoe int localZ Z value for sorting rendering cells | Edit this page View Source DrawClothFromPool(PoseCharacterRenderer) Draw shoes for given character from system pool Declaration public static void DrawClothFromPool(PoseCharacterRenderer renderer) | Edit this page View Source DrawClothGizmos(IRect, Color32, int) Draw cloth as gizmos Declaration public override void DrawClothGizmos(IRect rect, Color32 tint, int z) Parameters Type Name Description IRect rect Rect position in global space Color32 tint Color tint int z Z value for sort rendering cell Overrides Cloth.DrawClothGizmos(IRect, Color32, int) | Edit this page View Source FillFromSheet(string) Load sprite data from Renderer.CurrentSheet Declaration public override bool FillFromSheet(string name) Overrides Cloth.FillFromSheet(string) Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.FrameBasedBool.html": {
    "href": "api/AngeliA.FrameBasedBool.html",
    "title": "Class FrameBasedBool | AngeliA",
    "summary": "Class FrameBasedBool A data that can be override for specified frames Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public class FrameBasedBool : FrameBasedValue<bool> Constructors | Edit this page View Source FrameBasedBool() Declaration public FrameBasedBool() | Edit this page View Source FrameBasedBool(bool) A data that can be override for specified frames Declaration public FrameBasedBool(bool value) Methods | Edit this page View Source And(bool, int, int) Declaration public void And(bool value, int duration = 0, int priority = 0) | Edit this page View Source False(int, int) Declaration public void False(int duration = 0, int priority = 0) | Edit this page View Source Or(bool, int, int) Declaration public void Or(bool value, int duration = 0, int priority = 0) | Edit this page View Source True(int, int) Declaration public void True(int duration = 0, int priority = 0) Operators | Edit this page View Source implicit operator bool(FrameBasedBool) Declaration public static implicit operator bool(FrameBasedBool bBool) Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.FrameBasedColor.html": {
    "href": "api/AngeliA.FrameBasedColor.html",
    "title": "Class FrameBasedColor | AngeliA",
    "summary": "Class FrameBasedColor A data that can be override for specified frames Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public class FrameBasedColor : FrameBasedValue<Color32> Constructors | Edit this page View Source FrameBasedColor() Declaration public FrameBasedColor() | Edit this page View Source FrameBasedColor(Color32) A data that can be override for specified frames Declaration public FrameBasedColor(Color32 value) Methods | Edit this page View Source Tint(Color32, int, int) Declaration public void Tint(Color32 tint, int duration = 0, int priority = 0) Operators | Edit this page View Source implicit operator Color32(FrameBasedColor) Declaration public static implicit operator Color32(FrameBasedColor bColor) Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.FrameBasedInt.html": {
    "href": "api/AngeliA.FrameBasedInt.html",
    "title": "Class FrameBasedInt | AngeliA",
    "summary": "Class FrameBasedInt A data that can be override for specified frames Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public class FrameBasedInt : FrameBasedValue<int> Constructors | Edit this page View Source FrameBasedInt() Declaration public FrameBasedInt() | Edit this page View Source FrameBasedInt(int) A data that can be override for specified frames Declaration public FrameBasedInt(int value) Methods | Edit this page View Source Add(int, int, int) Declaration public void Add(int delta, int duration = 0, int priority = 0) | Edit this page View Source Max(int, int, int) Declaration public void Max(int value, int duration = 0, int priority = 0) | Edit this page View Source Min(int, int, int) Declaration public void Min(int value, int duration = 0, int priority = 0) | Edit this page View Source Multiply(int, int, int) Declaration public void Multiply(int scale, int duration = 0, int priority = 0) Operators | Edit this page View Source implicit operator int(FrameBasedInt) Declaration public static implicit operator int(FrameBasedInt bInt) Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.FrameBasedValue-1.html": {
    "href": "api/AngeliA.FrameBasedValue-1.html",
    "title": "Class FrameBasedValue<T> | AngeliA",
    "summary": "Class FrameBasedValue<T> A data that can be override for specified frames Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public abstract class FrameBasedValue<T> : FrameBasedValue Type Parameters Name Description T Constructors | Edit this page View Source FrameBasedValue() Declaration public FrameBasedValue() | Edit this page View Source FrameBasedValue(T) Declaration public FrameBasedValue(T value) Fields | Edit this page View Source BaseValue Declaration public T BaseValue | Edit this page View Source OverrideValue Declaration public T OverrideValue Properties | Edit this page View Source FinalValue Declaration public T FinalValue { get; } Methods | Edit this page View Source Override(T, int, int) Declaration public void Override(T value, int duration = 0, int priority = 0) | Edit this page View Source ToString() Returns a string that represents the current object. Declaration public override string ToString() Returns Type Description string A string that represents the current object. Overrides object.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.FrameBasedValue.html": {
    "href": "api/AngeliA.FrameBasedValue.html",
    "title": "Class FrameBasedValue | AngeliA",
    "summary": "Class FrameBasedValue A data that can be override for specified frames Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public abstract class FrameBasedValue Fields | Edit this page View Source OverrideFrame Declaration public int OverrideFrame | Edit this page View Source OverridePriority Declaration public int OverridePriority Properties | Edit this page View Source Overrided Declaration public bool Overrided { get; } Methods | Edit this page View Source ClearOverride() Declaration public void ClearOverride() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.FrameworkUtil.html": {
    "href": "api/AngeliA.FrameworkUtil.html",
    "title": "Class FrameworkUtil | AngeliA",
    "summary": "Class FrameworkUtil Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public static class FrameworkUtil Fields | Edit this page View Source GAMEPAD_CODE Declaration public static readonly Dictionary<GamepadKey, int> GAMEPAD_CODE | Edit this page View Source RUN_CODE_ANALYSIS_SETTING_ID Declaration public const int RUN_CODE_ANALYSIS_SETTING_ID = 895245367 | Edit this page View Source RUN_CODE_ANALYSIS_SETTING_SILENTLY_ID Declaration public const int RUN_CODE_ANALYSIS_SETTING_SILENTLY_ID = 895245368 Methods | Edit this page View Source BlockRuleToDigit(BlockRule) Declaration public static int BlockRuleToDigit(BlockRule ruleStr) | Edit this page View Source BreakEntityBlock(Entity) Declaration public static bool BreakEntityBlock(Entity target) | Edit this page View Source BroadcastBuff(IRect, int, int) Declaration public static void BroadcastBuff(IRect range, int buffID, int duration = 1) | Edit this page View Source BroadcastBuff(int, int, int, int, int) Declaration public static void BroadcastBuff(int x, int y, int radius, int buffID, int duration = 1) | Edit this page View Source ClampCells(Cell[], IRect, int, int) Declaration public static void ClampCells(Cell[] cells, IRect rect, int startIndex, int endIndex) | Edit this page View Source ClampCells(Span<Cell>, IRect, int, int) Declaration public static void ClampCells(Span<Cell> cells, IRect rect, int startIndex, int endIndex) | Edit this page View Source DeleteAllEmptyMaps(string) Declaration public static void DeleteAllEmptyMaps(string mapRoot) | Edit this page View Source DigitToBlockRule(int) Declaration public static BlockRule DigitToBlockRule(int digit) | Edit this page View Source DigitToRuleByte(int, byte[]) Declaration public static void DigitToRuleByte(int digit, byte[] bytes) | Edit this page View Source DrawAfterimageEffect(Cell, int, int, Color32, Color32, int, int, int, int, int) Declaration public static void DrawAfterimageEffect(Cell source, int speedX, int speedY, Color32 tintStart, Color32 tintEnd, int rotateSpeed = 0, int count = 3, int frameStep = 2, int scaleStart = 1000, int scaleEnd = 1000) | Edit this page View Source DrawAllCollidersAsGizmos(int, Int2, float, bool, bool, bool, Color32[]) Declaration public static void DrawAllCollidersAsGizmos(int physicsMask = 31, Int2 offset = default, float brightness = 1, bool ignoreNonOnewayTrigger = false, bool ignoreOnewayTrigger = false, bool useTechEffect = false, Color32[] layerTints = null) | Edit this page View Source DrawBullet(Bullet, int, bool, int, int, int) Declaration public static void DrawBullet(Bullet bullet, int artworkID, bool facingRight, int rotation, int scale, int z = 2147483631) | Edit this page View Source DrawClockHands(IRect, int, int, int, Color32) Declaration public static void DrawClockHands(IRect rect, int handCode, int thickness, int thicknessSecond, Color32 tint) | Edit this page View Source DrawClockHands(int, int, int, int, int, int, Color32, int) Declaration public static void DrawClockHands(int centerX, int centerY, int radius, int handCode, int thickness, int thicknessSecond, Color32 tint, int z = -2147483648) | Edit this page View Source DrawClockPendulum(int, int, int, int, int, int, int, int, int) Declaration public static void DrawClockPendulum(int artCodeLeg, int artCodeHead, int x, int y, int length, int thickness, int headSize, int maxRot, int deltaX = 0) | Edit this page View Source DrawEnvironmentShadow(Cell, int, int, byte, int) Declaration public static Cell DrawEnvironmentShadow(Cell source, int offsetX = -64, int offsetY = 0, byte alpha = 64, int z = -65520) | Edit this page View Source DrawExplosionRing(int, int, int, int, int, int, Color32, int) Declaration public static void DrawExplosionRing(int spriteID, int centerX, int centerY, int radius, int localFrame, int duration, Color32 tint, int z = 2147483646) | Edit this page View Source DrawFrozenEffect(IRect, byte, int, Int2, int, int, int) Declaration public static void DrawFrozenEffect(IRect rect, byte alpha, int count = 32, Int2 offset = default, int seed = 0, int size = 142, int z = 0) | Edit this page View Source DrawGlitchEffect(Cell, int, int, int, int) Declaration public static void DrawGlitchEffect(Cell cell, int frame, int speedAmount = 1000, int shiftAmount = 1000, int scaleAmount = 1000) | Edit this page View Source DrawItemShortInfo(int, IRect, int, int, int, Color32) Declaration public static void DrawItemShortInfo(int itemID, IRect panelRect, int z, int armorIcon, int armorEmptyIcon, Color32 tint) | Edit this page View Source DrawItemUsageBar(IRect, int, int) Declaration public static void DrawItemUsageBar(IRect rect, int usage, int maxUsage) | Edit this page View Source DrawLightenEffect(AngeSprite, IRect, int, int) Declaration public static void DrawLightenEffect(AngeSprite sprite, IRect rect, int count = 2, int size = 196) | Edit this page View Source DrawLightenEffect(int, IRect, int, int) Declaration public static void DrawLightenEffect(int spriteID, IRect rect, int count = 2, int size = 196) | Edit this page View Source DrawLoopingActivatedHighlight(IRect, Color32, int, int) Declaration public static void DrawLoopingActivatedHighlight(IRect targetRect, Color32 tint, int lineCount = 4, int duration = 22) | Edit this page View Source DrawLoopingTriangleMark(IRect, int, Color32, Direction4, int, int, int, int) Declaration public static void DrawLoopingTriangleMark(IRect range, int frame, Color32 tint, Direction4 direction, int count, int size, int z, int speed) | Edit this page View Source DrawMagicEncircleAurora(int, int, int, int, int, Color32, int, int, int, int, int, int) Declaration public static void DrawMagicEncircleAurora(int spriteID, int count, int centerX, int centerY, int localFrame, Color32 tint, int scale = 1000, int rotateSpeed = 16, int swingDuration = 20, int swingAmout = 240, int growDuration = 10, int z = -2147483648) | Edit this page View Source DrawOnFireEffect(AngeSprite, IRect, int, int, int, int, int) Declaration public static void DrawOnFireEffect(AngeSprite sprite, IRect rect, int count = 2, int loop = 40, int size = 200, int seed = 0, int z = 2147483647) | Edit this page View Source DrawOnFireEffect(int, IRect, int, int, int, int, int) Declaration public static void DrawOnFireEffect(int spriteID, IRect rect, int count = 2, int loop = 40, int size = 200, int seed = 0, int z = 2147483647) | Edit this page View Source DrawPoisonEffect(AngeSprite, IRect, int, int, int, int, int) Declaration public static void DrawPoisonEffect(AngeSprite sprite, IRect rect, int loop = 120, int count = 4, int seed = 0, int size = 132, int z = 2147483647) | Edit this page View Source DrawPoisonEffect(int, IRect, int, int, int, int, int) Declaration public static void DrawPoisonEffect(int spriteID, IRect rect, int loop = 120, int count = 4, int seed = 0, int size = 132, int z = 2147483647) | Edit this page View Source DrawPoseCharacterAsUI(IRect, PoseCharacterRenderer, int) Declaration public static bool DrawPoseCharacterAsUI(IRect rect, PoseCharacterRenderer renderer, int animationFrame) | Edit this page View Source DrawPoseCharacterAsUI(IRect, PoseCharacterRenderer, int, out IRect, out IRect) Declaration public static bool DrawPoseCharacterAsUI(IRect rect, PoseCharacterRenderer renderer, int animationFrame, out IRect globalRect, out IRect uiRect) | Edit this page View Source DrawSegmentHealthBar(int, int, int, int, int, int, int, int, int, int) Declaration public static void DrawSegmentHealthBar(int x, int y, int heartLeftCode, int heartRightCode, int emptyHeartLeftCode, int emptyHeartRightCode, int dropParticleID, int hp, int maxHP, int prevHP = -2147483648) | Edit this page View Source ForAllExistsWorldInRange(IBlockSquad, IRect, int, out int) Declaration public static Int3[] ForAllExistsWorldInRange(IBlockSquad squad, IRect overlapUnitRange, int z, out int count) | Edit this page View Source ForAllWorldInRange(IRect, int, out int) Declaration public static Int3[] ForAllWorldInRange(IRect overlapUnitRange, int z, out int count) | Edit this page View Source FrameBasedFields_to_List(object, List<(string name, int value)>) Declaration public static void FrameBasedFields_to_List(object target, List<(string name, int value)> list) | Edit this page View Source GetAimingBuilderPositionFromKey(Character, BlockType, out int, out int, out bool, bool) Declaration public static bool GetAimingBuilderPositionFromKey(Character holder, BlockType blockType, out int targetUnitX, out int targetUnitY, out bool requireEmbedAsElement, bool ignoreValid = false) | Edit this page View Source GetAimingBuilderPositionFromMouse(Character, BlockType, out int, out int, out bool) Declaration public static bool GetAimingBuilderPositionFromMouse(Character holder, BlockType blockType, out int targetUnitX, out int targetUnitY, out bool requireEmbedAsElement) | Edit this page View Source GetAimingPickerPositionFromKey(Character, out int, out int, bool, bool, bool) Declaration public static bool GetAimingPickerPositionFromKey(Character pHolder, out int targetUnitX, out int targetUnitY, bool allowPickBlockEntity = true, bool allowPickLevelBlock = true, bool allowPickBackgroundBlock = true) | Edit this page View Source GetAimingPickerPositionFromMouse(Character, int, out int, out int, out bool, bool, bool, bool) Declaration public static bool GetAimingPickerPositionFromMouse(Character holder, int unitRange, out int targetUnitX, out int targetUnitY, out bool inRange, bool allowPickBlockEntity = true, bool allowPickLevelBlock = true, bool allowPickBackgroundBlock = true) | Edit this page View Source GetBlockRealName(string) Declaration public static string GetBlockRealName(string name) | Edit this page View Source GetEntityPose(Entity, bool, int, out Entity, out Entity, OperationMode, Tag) Declaration public static FittingPose GetEntityPose(Entity entity, bool horizontal, int mask, out Entity left_down, out Entity right_up, OperationMode mode = OperationMode.ColliderOnly, Tag tag = Tag.None) | Edit this page View Source GetEntityPose(int, int, int, bool) Declaration public static FittingPose GetEntityPose(int typeID, int unitX, int unitY, bool horizontal) | Edit this page View Source GetFlyingFormation(Int2, int, int) Declaration public static Int2 GetFlyingFormation(Int2 pos, int column, int instanceIndex) | Edit this page View Source GetGroupInfoFromSpriteRealName(string, out string, out int) Declaration public static bool GetGroupInfoFromSpriteRealName(string realName, out string groupName, out int groupIndex) | Edit this page View Source GetItemTypeIcon(int) Declaration public static int GetItemTypeIcon(int itemID) | Edit this page View Source GetOnewayTag(Direction4) Declaration public static Tag GetOnewayTag(Direction4 gateDirection) | Edit this page View Source GetPlayerHoldingHandTool() Declaration public static HandTool GetPlayerHoldingHandTool() | Edit this page View Source GetRepositionElementCode(int, int) Declaration public static int GetRepositionElementCode(int deltaGlobalX, int deltaGlobalY) | Edit this page View Source GetRuleIndex(IList<AngeSprite>, int, int, int, int, int, int, int, int, int) Declaration public static int GetRuleIndex(IList<AngeSprite> sprites, int ruleID, int tl, int tm, int tr, int ml, int mr, int bl, int bm, int br) | Edit this page View Source GetScaledAudioVolume(int, int) Declaration public static float GetScaledAudioVolume(int volume, int scale = 1000) | Edit this page View Source GetSlicedUvBorder(AngeSprite, Alignment, out Float2, out Float2, out Float2, out Float2) Declaration public static void GetSlicedUvBorder(AngeSprite sprite, Alignment alignment, out Float2 bl, out Float2 br, out Float2 tl, out Float2 tr) | Edit this page View Source GetSpriteInfoFromName(string, out string, out bool, out Tag, out BlockRule, out bool, out int, out int, out int?, out int?) Declaration public static void GetSpriteInfoFromName(string name, out string realName, out bool isTrigger, out Tag tag, out BlockRule rule, out bool noCollider, out int offsetZ, out int aniDuration, out int? pivotX, out int? pivotY) | Edit this page View Source GetSummaryTint(Color32[]) Declaration public static Color32 GetSummaryTint(Color32[] pixels) | Edit this page View Source GiveBuffFromMap(IWithCharacterBuff, int, int, int, int) Declaration public static void GiveBuffFromMap(IWithCharacterBuff wBuff, int unitX = -2147483648, int unitY = -2147483648, int unitZ = -2147483648, int duration = -1) | Edit this page View Source HasOnewayTag(Tag) Declaration public static bool HasOnewayTag(Tag tag) | Edit this page View Source HasPickableBlockAt(int, int, bool, bool, bool) Declaration public static bool HasPickableBlockAt(int unitX, int unitY, bool allowPickBlockEntity = true, bool allowPickLevelBlock = true, bool allowPickBackgroundBlock = true) | Edit this page View Source HasSystemNumber(IBlockSquad, int, int, int) Declaration public static bool HasSystemNumber(IBlockSquad squad, int unitX, int unitY, int z) | Edit this page View Source HighlightBlink(Cell, float, float, bool, bool) Declaration public static void HighlightBlink(Cell cell, float pivotX = 0.5, float pivotY = 0, bool horizontal = true, bool vertical = true) | Edit this page View Source InvokeBlockPicked(int, IRect) Declaration public static void InvokeBlockPicked(int spriteID, IRect rect) | Edit this page View Source InvokeCameOutOfWater(Rigidbody, Entity) Declaration public static void InvokeCameOutOfWater(Rigidbody rig, Entity water) | Edit this page View Source InvokeCheatPerformed(string) Declaration public static void InvokeCheatPerformed(string cheatCode) | Edit this page View Source InvokeErrorHint(Entity, int) Declaration public static void InvokeErrorHint(Entity holder, int id) | Edit this page View Source InvokeErrorHint(int, int, int) Declaration public static void InvokeErrorHint(int x, int y, int id) | Edit this page View Source InvokeFallIntoWater(Rigidbody, Entity) Declaration public static void InvokeFallIntoWater(Rigidbody rig, Entity water) | Edit this page View Source InvokeItemCollected(Entity, int, int) Declaration public static void InvokeItemCollected(Entity collector, int id, int count) | Edit this page View Source InvokeItemCollected(int, int, int, int) Declaration public static void InvokeItemCollected(int id, int x, int y, int count) | Edit this page View Source InvokeItemDamage(Character, int, int) Declaration public static void InvokeItemDamage(Character holder, int fromID, int toID) | Edit this page View Source InvokeItemLost(Character, int) Declaration public static void InvokeItemLost(Character holder, int id) | Edit this page View Source InvokeItemUnlocked(int) Declaration public static void InvokeItemUnlocked(int itemID) | Edit this page View Source InvokeObjectBreak(int, IRect) Declaration public static void InvokeObjectBreak(int spriteID, IRect rect) | Edit this page View Source InvokeObjectFreeFall(int, int, int, int, int, int, int, int, bool) Declaration public static void InvokeObjectFreeFall(int spriteID, int x, int y, int speedX = 0, int speedY = 0, int rotation = -2147483648, int rotationSpeed = 0, int gravity = 5, bool flipX = false) | Edit this page View Source InvokeOnCharacterCrash(Entity) Declaration public static void InvokeOnCharacterCrash(Entity target) | Edit this page View Source InvokeOnCharacterFly(Entity) Declaration public static void InvokeOnCharacterFly(Entity target) | Edit this page View Source InvokeOnCharacterJump(Entity) Declaration public static void InvokeOnCharacterJump(Entity target) | Edit this page View Source InvokeOnCharacterPassOut(Entity) Declaration public static void InvokeOnCharacterPassOut(Entity target) | Edit this page View Source InvokeOnCharacterPound(Entity) Declaration public static void InvokeOnCharacterPound(Entity target) | Edit this page View Source InvokeOnCharacterSleeping(Entity) Declaration public static void InvokeOnCharacterSleeping(Entity target) | Edit this page View Source InvokeOnCharacterSlideStepped(Entity) Declaration public static void InvokeOnCharacterSlideStepped(Entity target) | Edit this page View Source InvokeOnCharacterTeleport(Entity) Declaration public static void InvokeOnCharacterTeleport(Entity target) | Edit this page View Source InvokeOnFootStepped(Entity) Declaration public static void InvokeOnFootStepped(Entity target) | Edit this page View Source IsRepositionElementCode(int) Declaration public static bool IsRepositionElementCode(int elementCode) | Edit this page View Source LimbRotate(ref int, ref int, ref int, ref int, ref int, ref int, ref int, int, bool, int) Declaration public static void LimbRotate(ref int targetX, ref int targetY, ref int targetPivotX, ref int targetPivotY, ref int targetRotation, ref int targetWidth, ref int targetHeight, int rotation, bool useFlip, int grow) | Edit this page View Source LimbRotate(ref int, ref int, ref int, ref int, ref int, ref int, ref int, int, int, int, int, int, int, bool, int) Declaration public static void LimbRotate(ref int targetX, ref int targetY, ref int targetPivotX, ref int targetPivotY, ref int targetRotation, ref int targetWidth, ref int targetHeight, int parentX, int parentY, int parentRotation, int parentWidth, int parentHeight, int rotation, bool useFlip, int grow) | Edit this page View Source List_to_FrameBasedFields(List<(string name, int value)>, object) Declaration public static bool List_to_FrameBasedFields(List<(string name, int value)> list, object target) | Edit this page View Source MouseInside(IRect) Declaration public static bool MouseInside(this IRect rect) | Edit this page View Source NameAndIntFile_to_List(List<(string name, int value)>, string) Declaration public static bool NameAndIntFile_to_List(List<(string name, int value)> list, string path) | Edit this page View Source Number_to_SystemNumberID(int) Declaration public static int Number_to_SystemNumberID(int number) | Edit this page View Source PaintBlock(int, int, int, bool) Declaration public static void PaintBlock(int unitX, int unitY, int blockColorID, bool overlapExistingElement = false) | Edit this page View Source Pairs_to_NameAndIntFile(IEnumerable<KeyValuePair<string, int>>, string) Declaration public static void Pairs_to_NameAndIntFile(IEnumerable<KeyValuePair<string, int>> list, string path) | Edit this page View Source PerformSpringBounce(Entity, Direction4, int, int) Declaration public static bool PerformSpringBounce(Entity springEntity, Direction4 side, int power, int powerSide = 0) | Edit this page View Source PerformSpringBounce(Rigidbody, Entity, Direction4, int, int) Declaration public static void PerformSpringBounce(Rigidbody target, Entity spring, Direction4 side, int power, int powerSide = 0) | Edit this page View Source PickBlockAt(int, int, bool, bool, bool, bool, bool) Declaration public static bool PickBlockAt(int unitX, int unitY, bool allowPickBlockEntity = true, bool allowPickLevelBlock = true, bool allowPickBackgroundBlock = true, bool dropItemAfterPicked = true, bool allowMultiplePick = false) | Edit this page View Source PutBlockTo(int, BlockType, int, int) Declaration public static bool PutBlockTo(int blockID, BlockType blockType, int targetUnitX, int targetUnitY) | Edit this page View Source ReadSystemNumber(IBlockSquad, int, int, int, Direction4, out int) Declaration public static bool ReadSystemNumber(IBlockSquad squad, int unitX, int unitY, int z, Direction4 direction, out int number) | Edit this page View Source ReadSystemNumber(IBlockSquad, int, int, int, out int) Declaration public static bool ReadSystemNumber(IBlockSquad squad, int unitX, int unitY, int z, out int number) | Edit this page View Source RedirectForRule(IBlockSquad, IRect, int) Declaration public static void RedirectForRule(IBlockSquad squad, IRect unitRange, int z) | Edit this page View Source RedirectForRule(IBlockSquad, int, int, int, BlockType) Declaration public static void RedirectForRule(IBlockSquad squad, int i, int j, int z, BlockType type) | Edit this page View Source RemapCells(Cell[], int, int, IRect, IRect, int, int, bool, bool) Declaration public static void RemapCells(Cell[] cells, int cellIndexStart, int cellIndexEnd, IRect from, IRect to, int fitPivotX = 500, int fitPivotY = 500, bool round = false, bool fit = true) | Edit this page View Source RemapCells(Cell[], int, int, IRect, IRect, out int, int, int, bool, bool) Declaration public static void RemapCells(Cell[] cells, int cellIndexStart, int cellIndexEnd, IRect from, IRect to, out int minZ, int fitPivotX = 500, int fitPivotY = 500, bool round = false, bool fit = true) | Edit this page View Source RemapCells(Span<Cell>, int, int, IRect, IRect, int, int, bool, bool) Declaration public static void RemapCells(Span<Cell> cells, int cellIndexStart, int cellIndexEnd, IRect from, IRect to, int fitPivotX = 500, int fitPivotY = 500, bool round = false, bool fit = true) | Edit this page View Source RemapCells(Span<Cell>, int, int, IRect, IRect, out int, int, int, bool, bool) Declaration public static void RemapCells(Span<Cell> cells, int cellIndexStart, int cellIndexEnd, IRect from, IRect to, out int minZ, int fitPivotX = 500, int fitPivotY = 500, bool round = false, bool fit = true) | Edit this page View Source RemoveFromWorldMemory(Entity) Declaration public static void RemoveFromWorldMemory(Entity entity) | Edit this page View Source ResetShoulderAndUpperArmPos(PoseCharacterRenderer, bool, bool) Declaration public static void ResetShoulderAndUpperArmPos(PoseCharacterRenderer rendering, bool resetLeft = true, bool resetRight = true) | Edit this page View Source RuleByteToDigit(byte[]) Declaration public static int RuleByteToDigit(byte[] singleRule) | Edit this page View Source RunAngeliaCodeAnalysis(bool, bool, bool) Declaration public static void RunAngeliaCodeAnalysis(bool onlyLogWhenWarningFounded = false, bool fixScriptFileName = false, bool checkNoItemCombination = true) | Edit this page View Source RunBuiltInSpriteAnalysys(bool) Declaration public static void RunBuiltInSpriteAnalysys(bool onlyLogWhenWarningFounded = false) | Edit this page View Source RunEmptyScriptFileAnalysis(string, bool) Declaration public static void RunEmptyScriptFileAnalysis(string rootPath, bool onlyLogWhenWarningFounded = false) | Edit this page View Source SearchlightBlockCheck(IBlockSquad, Int3, Direction8?, int, bool) Declaration public static bool SearchlightBlockCheck(IBlockSquad squad, Int3 startUnitPoint, Direction8? direction, int unitDistance = 128, bool reverse = false) | Edit this page View Source SpawnItemFromMap(IBlockSquad, int, int, int, int, int, int, bool) Declaration public static void SpawnItemFromMap(IBlockSquad squad, int unitX, int unitY, int z, int maxDeltaX = 1024, int maxDeltaY = 1024, int placeHolderID = 0, bool spawnEntity = true) | Edit this page View Source SpiralSpinningCellEffect(int, int, int, int, int, bool) Declaration public static void SpiralSpinningCellEffect(int localFrame, int pointX, int pointY, int duration, int cellIndexStart, bool reverseSpin = false) | Edit this page View Source SystemNumberID_to_Number(int) Declaration public static int SystemNumberID_to_Number(int id) | Edit this page View Source Time01_to_TimeDigit(float, out int, out int, out int) Declaration public static void Time01_to_TimeDigit(float time01, out int hour, out int minute, out int second) | Edit this page View Source TimeDigit_to_Time01(int, int, int) Declaration public static float TimeDigit_to_Time01(int hour, int minute, int second) | Edit this page View Source TryEjectOutsideGround(Rigidbody, int, int, int) Declaration public static void TryEjectOutsideGround(Rigidbody rig, int collisionMask = 0, int unitRange = 2, int speed = 32) | Edit this page View Source TryGetEmptyPlaceNearbyForEntity(int, int, int, out int, out int, int, bool) Declaration public static bool TryGetEmptyPlaceNearbyForEntity(int unitX, int unitY, int z, out int resultUnitX, out int resultUnitY, int maxRange = 8, bool preferNoSolidLevel = true) | Edit this page View Source TryGetOnewayDirection(Tag, out Direction4) Declaration public static bool TryGetOnewayDirection(Tag tag, out Direction4 direction) | Edit this page View Source TryGetRepositionElementDelta(int, out int, out int) Declaration public static bool TryGetRepositionElementDelta(int elementCode, out int deltaGlobalX, out int deltaGlobalY) | Edit this page View Source TryGetSingleSystemNumber(IBlockSquad, int, int, int, out int) Declaration public static bool TryGetSingleSystemNumber(IBlockSquad squad, int unitX, int unitY, int z, out int digitValue)"
  },
  "api/AngeliA.GUI.html": {
    "href": "api/AngeliA.GUI.html",
    "title": "Class GUI | AngeliA",
    "summary": "Class GUI GUI for Game-User-Interface. Handles UI related rendering and interaction logic Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public static class GUI Properties | Edit this page View Source BodyColor Color tint of the current invoke GUI element's body Declaration public static Color32 BodyColor { get; set; } | Edit this page View Source Color Total color tint of the current invoke GUI element Declaration public static Color32 Color { get; set; } | Edit this page View Source ContentColor Color tint of the current invoke GUI element's content part Declaration public static Color32 ContentColor { get; set; } | Edit this page View Source ContentVersion Internal changing version of the GUI content Declaration public static int ContentVersion { get; } | Edit this page View Source Enable True if the current invoke GUI element should be interactable with user Declaration public static bool Enable { get; set; } | Edit this page View Source FieldHeight Unified height of a standard field-like element should have Declaration public static int FieldHeight { get; } | Edit this page View Source FieldPadding Unified gap of a standard element should have Declaration public static int FieldPadding { get; } | Edit this page View Source Interactable False if the current invoke GUI element should be not interactable with user but still looks interactable Declaration public static bool Interactable { get; set; } | Edit this page View Source IsTyping True if the user is typing in text field at current frame Declaration public static bool IsTyping { get; } | Edit this page View Source LabelWidth Unified width of the label part of the current invoke GUI element Declaration public static int LabelWidth { get; set; } | Edit this page View Source ScrollbarSize Unified size of a standard scrollbar element should have Declaration public static int ScrollbarSize { get; } | Edit this page View Source Skin Built-in skin of the system Declaration public static GUISkin Skin { get; set; } | Edit this page View Source ToolbarSize Unified size of a standard toolbar element should have Declaration public static int ToolbarSize { get; } | Edit this page View Source TypingTextFieldID Control ID of the current typing input field Declaration public static int TypingTextFieldID { get; } Methods | Edit this page View Source BackgroundLabel(IRect, char[], Color32, out IRect, int, GUIStyle) Label with a color block as background Declaration public static void BackgroundLabel(IRect rect, char[] chars, Color32 backgroundColor, out IRect bounds, int backgroundPadding = 0, GUIStyle style = null) Parameters Type Name Description IRect rect Rect position in global space Color32 backgroundColor Color of the background block IRect bounds Rendering boundary of the text content in global space int backgroundPadding Border size of the background block in unified size | Edit this page View Source BackgroundLabel(IRect, char[], Color32, int, GUIStyle) Label with a color block as background Declaration public static void BackgroundLabel(IRect rect, char[] chars, Color32 backgroundColor, int backgroundPadding = 0, GUIStyle style = null) Parameters Type Name Description IRect rect Rect position in global space Color32 backgroundColor Color of the background block int backgroundPadding Border size of the background block in unified size | Edit this page View Source BackgroundLabel(IRect, string, Color32, out IRect, int, bool, GUIStyle) Label with a color block as background Declaration public static void BackgroundLabel(IRect rect, string text, Color32 backgroundColor, out IRect bounds, int backgroundPadding = 0, bool forceInside = false, GUIStyle style = null) Parameters Type Name Description IRect rect Rect position in global space string text Text content Color32 backgroundColor Color of the background block IRect bounds Rendering boundary of the text content in global space int backgroundPadding Border size of the background block in unified size bool forceInside True if the text content clamp inside the background block | Edit this page View Source BackgroundLabel(IRect, string, Color32, int, bool, GUIStyle) Label with a color block as background Declaration public static void BackgroundLabel(IRect rect, string text, Color32 backgroundColor, int backgroundPadding = 0, bool forceInside = false, GUIStyle style = null) Parameters Type Name Description IRect rect Rect position in global space string text Text content Color32 backgroundColor Color of the background block int backgroundPadding Border size of the background block in unified size bool forceInside True if the text content clamp inside the background block | Edit this page View Source BeginChangeCheck() Start the change check. Use GUI.EndChangeCheck to get the result Declaration public static void BeginChangeCheck() | Edit this page View Source BlankButton(IRect, out GUIState) GUI element that behave like a button Declaration public static bool BlankButton(IRect rect, out GUIState state) Parameters Type Name Description IRect rect Rect position in global space Returns Type Description bool True if the button is pressed at current frame | Edit this page View Source BlankSlider(int, IRect, int, int, int, out GUIState, bool, int) Draw a slider that user can drag with mouse to change a intager value Declaration public static int BlankSlider(int controlID, IRect rect, int value, int min, int max, out GUIState state, bool vertical = false, int step = 0) Parameters Type Name Description int controlID ID to identify the interaction of this element IRect rect Rect position in global space int min Minimal limitation for the value int max Maximal limitation for the value bool vertical True if this slider slide verticaly int step Smooth step of the sliding. 0 means no step. Returns Type Description int New value after slide | Edit this page View Source BlankToggle(IRect, bool, out GUIState) Draw a GUI element with a check box and check mark Declaration public static bool BlankToggle(IRect rect, bool isOn, out GUIState state) Parameters Type Name Description IRect rect Rect position in global space bool isOn True if the toggle is checked Returns Type Description bool True if the toggle is checked | Edit this page View Source Button(IRect, int, out GUIState, GUIStyle) GUI element that behave like a button Declaration public static bool Button(IRect rect, int icon, out GUIState state, GUIStyle style = null) Parameters Type Name Description IRect rect Rect position in global space int icon Artwork sprite ID for the icon inside this button Returns Type Description bool True if the button is pressed at current frame | Edit this page View Source Button(IRect, int, GUIStyle) GUI element that behave like a button Declaration public static bool Button(IRect rect, int icon, GUIStyle style = null) Parameters Type Name Description IRect rect Rect position in global space int icon Artwork sprite ID for the icon inside this button Returns Type Description bool True if the button is pressed at current frame | Edit this page View Source Button(IRect, string, out GUIState, GUIStyle, int) GUI element that behave like a button Declaration public static bool Button(IRect rect, string label, out GUIState state, GUIStyle style = null, int charSize = -2) Parameters Type Name Description IRect rect Rect position in global space string label Text content inside this button int charSize Character size of the label in unified space Returns Type Description bool True if the button is pressed at current frame | Edit this page View Source Button(IRect, string, GUIStyle, int) GUI element that behave like a button Declaration public static bool Button(IRect rect, string label, GUIStyle style = null, int charSize = -2) Parameters Type Name Description IRect rect Rect position in global space string label Text content inside this button int charSize Character size of the label in unified space Returns Type Description bool True if the button is pressed at current frame | Edit this page View Source CancelTyping() Stop typing on any input field Declaration public static void CancelTyping() | Edit this page View Source DarkButton(IRect, int) GUI element that behave like a button Declaration public static bool DarkButton(IRect rect, int icon) Parameters Type Name Description IRect rect Rect position in global space int icon Artwork sprite ID for the icon inside this button Returns Type Description bool True if the button is pressed at current frame | Edit this page View Source DarkButton(IRect, string, int) GUI element that behave like a button Declaration public static bool DarkButton(IRect rect, string label, int charSize = -2) Parameters Type Name Description IRect rect Rect position in global space string label Text content inside this button int charSize Character size of the label in unified space Returns Type Description bool True if the button is pressed at current frame | Edit this page View Source DrawAxis(Int2, Int2, Int2, int, int, int, int, Color32, Color32, int, GUIStyle, IRect) Declaration public static void DrawAxis(Int2 position, Int2 length, Int2 stepCount, int stepNumberGap, int thickness, int stepThickness, int z, Color32 colorX, Color32 colorY, int labelHeight = 0, GUIStyle labelStyle = null, IRect clampRect = default) | Edit this page View Source DrawSlice(AngeSprite, IRect) Draw the artwork sprite with 9-slice logic. Border size will be unified. Declaration public static Cell[] DrawSlice(AngeSprite sprite, IRect rect) Parameters Type Name Description AngeSprite sprite Artwork sprite IRect rect Rect position in global space Returns Type Description Cell[] Rendering cells of this element | Edit this page View Source DrawSlice(int, IRect) Draw the artwork sprite with 9-slice logic. Border size will be unified. Declaration public static Cell[] DrawSlice(int spriteID, IRect rect) Parameters Type Name Description int spriteID ID of the artwork sprite IRect rect Rect position in global space Returns Type Description Cell[] Rendering cells of this element | Edit this page View Source DrawStyleBody(IRect, GUIStyle, GUIState) Draw the given style as body of a GUI element Declaration public static void DrawStyleBody(IRect rect, GUIStyle style, GUIState state) Parameters Type Name Description IRect rect Rect position in global space | Edit this page View Source DrawStyleBody(IRect, GUIStyle, GUIState, Color32) Draw the given style as body of a GUI element Declaration public static void DrawStyleBody(IRect rect, GUIStyle style, GUIState state, Color32 tint) Parameters Type Name Description IRect rect Rect position in global space Color32 tint Color tint that apply on this element | Edit this page View Source DrawStyleContent(IRect, int, GUIStyle, GUIState, bool, bool) Draw the given style as content of a GUI element Declaration public static void DrawStyleContent(IRect rect, int sprite, GUIStyle style, GUIState state, bool ignoreSlice = false, bool fit = false) Parameters Type Name Description IRect rect Rect position in global space int sprite Artwork sprite bool ignoreSlice True if not apply 9-slice logic bool fit True if keep the aspect ratio of the sprite | Edit this page View Source EndChangeCheck() True if any GUI element changed it's value during the change check Declaration public static bool EndChangeCheck() | Edit this page View Source FilledSlider(int, IRect, int, int, int, bool, int) Draw a slider that user can drag with mouse to change a intager value Declaration public static int FilledSlider(int controlID, IRect rect, int value, int min, int max, bool vertical = false, int step = 0) Parameters Type Name Description int controlID ID to identify the interaction of this element IRect rect Rect position in global space int min Minimal limitation for the value int max Maximal limitation for the value bool vertical True if this slider slide verticaly int step Smooth step of the sliding. 0 means no step. Returns Type Description int New value after slide | Edit this page View Source FrameBasedIntLabel(IRect, FrameBasedInt, Color32, Color32, GUIStyle) Label for draw FrameBasedInt as a buff Declaration public static void FrameBasedIntLabel(IRect rect, FrameBasedInt number, Color32 greaterColor, Color32 lessColor, GUIStyle style = null) Parameters Type Name Description IRect rect Rect position in global space FrameBasedInt number Intager content Color32 greaterColor Text color for the extra part when final value is greater Color32 lessColor Text color for the extra part when final value is less | Edit this page View Source FrameBasedIntLabel(IRect, FrameBasedInt, Color32, Color32, out IRect, GUIStyle) Label for draw FrameBasedInt as a buff Declaration public static void FrameBasedIntLabel(IRect rect, FrameBasedInt number, Color32 greaterColor, Color32 lessColor, out IRect bounds, GUIStyle style = null) Parameters Type Name Description IRect rect Rect position in global space FrameBasedInt number Intager content Color32 greaterColor Text color for the extra part when final value is greater Color32 lessColor Text color for the extra part when final value is less IRect bounds Rendering boundary of the text content in global space | Edit this page View Source GetContentRect(IRect, GUIStyle, GUIState) Get rect position in global space for content inside a GUI element Declaration public static IRect GetContentRect(IRect rect, GUIStyle style, GUIState state) | Edit this page View Source HandleSlider(int, IRect, int, int, int, bool, int) Draw a slider that user can drag with mouse to change a intager value Declaration public static int HandleSlider(int controlID, IRect rect, int value, int min, int max, bool vertical = false, int step = 0) Parameters Type Name Description int controlID ID to identify the interaction of this element IRect rect Rect position in global space int min Minimal limitation for the value int max Maximal limitation for the value bool vertical True if this slider slide verticaly int step Smooth step of the sliding. 0 means no step. Returns Type Description int New value after slide | Edit this page View Source HighlightCursor(int, IRect) Draw an animated cursor Declaration public static void HighlightCursor(int spriteID, IRect rect) Parameters Type Name Description int spriteID Artwork sprite ID IRect rect Rect position in global space | Edit this page View Source HighlightCursor(int, IRect, Color32) Draw an animated cursor Declaration public static void HighlightCursor(int spriteID, IRect rect, Color32 color) Parameters Type Name Description int spriteID Artwork sprite ID IRect rect Rect position in global space Color32 color Color tint for this element only | Edit this page View Source HorizontalColorField(ColorF, IRect, bool, bool, bool, bool, ColorF?) Draw a GUI element to edit color value Declaration public static ColorF HorizontalColorField(ColorF color, IRect rect, bool hsv = true, bool alpha = false, bool stepped = true, bool folded = false, ColorF? defaultColor = null) Parameters Type Name Description ColorF color The color value IRect rect Rect position in global space bool hsv True if the field use HSV instead of RGB bool alpha True if the field include alpha value bool stepped True if the field use smooth step when dragging bool folded True if the field is folded ColorF? defaultColor Default value will set to the color value when user press the reset button. Set to null when you don't want the reset button. Returns Type Description ColorF New color after edit | Edit this page View Source HorizontalColorField(ColorF, IRect, string, GUIStyle, bool, bool, bool, bool, ColorF?) Draw a GUI element to edit color value Declaration public static ColorF HorizontalColorField(ColorF color, IRect rect, string label, GUIStyle labelStyle = null, bool hsv = true, bool alpha = false, bool stepped = true, bool folded = false, ColorF? defaultColor = null) Parameters Type Name Description ColorF color The color value IRect rect Rect position in global space string label Text content display on left of the field GUIStyle labelStyle GUI style for the label bool hsv True if the field use HSV instead of RGB bool alpha True if the field include alpha value bool stepped True if the field use smooth step when dragging bool folded True if the field is folded ColorF? defaultColor Default value will set to the color value when user press the reset button. Set to null when you don't want the reset button. Returns Type Description ColorF New color after edit | Edit this page View Source Icon(IRect, int) Draw a artwork sprite as an icon Declaration public static void Icon(IRect rect, int sprite) Parameters Type Name Description IRect rect Rect position in global space int sprite Artwork sprite | Edit this page View Source Icon(IRect, int, GUIStyle, GUIState) Draw a artwork sprite as an icon Declaration public static void Icon(IRect rect, int sprite, GUIStyle style, GUIState state) Parameters Type Name Description IRect rect Rect position in global space int sprite Artwork sprite | Edit this page View Source IconToggle(IRect, bool, int, GUIStyle, GUIStyle) Draw a GUI element with a check box and check mark Declaration public static bool IconToggle(IRect rect, bool isOn, int icon, GUIStyle markStyle = null, GUIStyle iconStyle = null) Parameters Type Name Description IRect rect Rect position in global space bool isOn True if the toggle is checked int icon Artwork sprite of the content inside the toggle GUIStyle markStyle GUI style of the check mark GUIStyle iconStyle GUI style of the icon content Returns Type Description bool True if the toggle is checked | Edit this page View Source InputField(int, IRect, string, GUIStyle, Color32?) Draw a GUI element to allow the user to edit a text content Declaration public static string InputField(int controlID, IRect rect, string text, GUIStyle bodyStyle = null, Color32? selectionColor = null) Parameters Type Name Description int controlID ID to identify the interaction of this element IRect rect Rect position in global space string text Input content Color32? selectionColor Color of the selection block Returns Type Description string Editted text content | Edit this page View Source InputField(int, IRect, string, out bool, out bool, GUIStyle, Color32?) Draw a GUI element to allow the user to edit a text content Declaration public static string InputField(int controlID, IRect rect, string text, out bool changed, out bool confirm, GUIStyle bodyStyle = null, Color32? selectionColor = null) Parameters Type Name Description int controlID ID to identify the interaction of this element IRect rect Rect position in global space string text Input content bool changed True if the field changed it's content at current frame bool confirm True if the field stop edit at current frame Color32? selectionColor Color of the selection block Returns Type Description string Editted text content | Edit this page View Source IntDial(IRect, int, out bool, string, GUIStyle, GUIStyle, GUIStyle, int, int, int) Draw a label display an intager with two buttons to add and remove value Declaration public static int IntDial(IRect rect, int value, out bool changed, string label = null, GUIStyle labelStyle = null, GUIStyle bodyStyle = null, GUIStyle dialButtonStyle = null, int delta = 1, int min = -2147483648, int max = 2147483647) Parameters Type Name Description IRect rect Rect position in global space int value The intager value bool changed True if the value is changed in this frame string label Text content displays on the left GUIStyle labelStyle GUI style for the text label GUIStyle bodyStyle GUI style for the int field GUIStyle dialButtonStyle GUI style for the buttons int delta How many value does it add/remove when the button get pressed int min Minimal value for the intager int max Maximal value for the intager Returns Type Description int New value after modified | Edit this page View Source IntDial(IRect, int, string, GUIStyle, GUIStyle, GUIStyle, int, int, int) Draw a label display an intager with two buttons to add and remove value Declaration public static int IntDial(IRect rect, int value, string label = null, GUIStyle labelStyle = null, GUIStyle bodyStyle = null, GUIStyle dialButtonStyle = null, int delta = 1, int min = -2147483648, int max = 2147483647) Parameters Type Name Description IRect rect Rect position in global space int value The intager value string label Text content displays on the left GUIStyle labelStyle GUI style for the text label GUIStyle bodyStyle GUI style for the int field GUIStyle dialButtonStyle GUI style for the buttons int delta How many value does it add/remove when the button get pressed int min Minimal value for the intager int max Maximal value for the intager Returns Type Description int New value after modified | Edit this page View Source IntLabel(IRect, int, GUIStyle) Label for intager content Declaration public static void IntLabel(IRect rect, int number, GUIStyle style = null) Parameters Type Name Description IRect rect Rect position in global space int number Intager content | Edit this page View Source IntLabel(IRect, int, out IRect, GUIStyle) Label for intager content Declaration public static void IntLabel(IRect rect, int number, out IRect bounds, GUIStyle style = null) Parameters Type Name Description IRect rect Rect position in global space int number Intager content IRect bounds Rendering boundary of the text content in global space | Edit this page View Source Label(IRect, char[], GUIStyle, int) Draw a text content on screen Declaration public static void Label(IRect rect, char[] text, GUIStyle style = null, int charSize = -2) Parameters Type Name Description IRect rect Rect position in global space char[] text Text content int charSize Unified height of the character | Edit this page View Source Label(IRect, char[], out IRect, GUIStyle, int) Draw a text content on screen Declaration public static void Label(IRect rect, char[] text, out IRect bounds, GUIStyle style = null, int charSize = -2) Parameters Type Name Description IRect rect Rect position in global space char[] text Text content IRect bounds Total rendering boundary of the characters in global space int charSize Unified height of the character | Edit this page View Source Label(IRect, string, GUIStyle, int) Draw a text content on screen Declaration public static void Label(IRect rect, string text, GUIStyle style = null, int charSize = -2) Parameters Type Name Description IRect rect Rect position in global space string text Text content int charSize Unified height of the character | Edit this page View Source Label(IRect, string, out IRect, GUIStyle, int) Draw a text content on screen Declaration public static void Label(IRect rect, string text, out IRect bounds, GUIStyle style = null, int charSize = -2) Parameters Type Name Description IRect rect Rect position in global space string text Text content IRect bounds Total rendering boundary of the characters in global space int charSize Unified height of the character | Edit this page View Source Label(IRect, string, int, bool, out IRect, out int, GUIStyle, int) Draw a text content on screen Declaration public static void Label(IRect rect, string text, int startIndex, bool drawInvisibleChar, out IRect bounds, out int endIndex, GUIStyle style = null, int charSize = -2) Parameters Type Name Description IRect rect Rect position in global space string text Text content int startIndex Label content start with this index bool drawInvisibleChar True if invisible characters should make the internal iteration grow IRect bounds Total rendering boundary of the characters in global space int endIndex Last rendered character index int charSize Unified height of the character | Edit this page View Source Label(IRect, string, int, int, bool, out IRect, out IRect, out int, GUIStyle, int) Draw a text content on screen Declaration public static void Label(IRect rect, string text, int beamIndex, int startIndex, bool drawInvisibleChar, out IRect bounds, out IRect beamRect, out int endIndex, GUIStyle style = null, int charSize = -2) Parameters Type Name Description IRect rect Rect position in global space string text Text content int beamIndex Index of the typing beam inside the text content int startIndex Label content start with this index bool drawInvisibleChar True if invisible characters should make the internal iteration grow IRect bounds Total rendering boundary of the characters in global space IRect beamRect Rendering rect position of the typing beam int endIndex Last rendered character index int charSize Unified height of the character | Edit this page View Source LinkButton(IRect, string, GUIStyle, bool, int) Button that behave like a link Declaration public static bool LinkButton(IRect rect, string label, GUIStyle labelStyle = null, bool useUnderLine = true, int charSize = -2) Parameters Type Name Description IRect rect Rect position in global space string label Text content GUIStyle labelStyle GUI style for the label content bool useUnderLine True if draw a line below the text int charSize Character size in unified space Returns Type Description bool True if the link is pressed at current frame | Edit this page View Source LinkButton(IRect, string, out IRect, GUIStyle, bool, int) Button that behave like a link Declaration public static bool LinkButton(IRect rect, string label, out IRect bounds, GUIStyle labelStyle = null, bool useUnderLine = true, int charSize = -2) Parameters Type Name Description IRect rect Rect position in global space string label Text content IRect bounds Boundary of the rendered content in global space GUIStyle labelStyle GUI style for the label content bool useUnderLine True if draw a line below the text int charSize Character size in unified space Returns Type Description bool True if the link is pressed at current frame | Edit this page View Source PopupTriangleIcon(IRect, int) Draw the triangle icon inside a popup button Declaration public static void PopupTriangleIcon(IRect rect, int iconSprite = 0) Parameters Type Name Description IRect rect Rect position of the whole button in global space int iconSprite Artwork sprite ID. Leave it 0 to use the built-in sprite | Edit this page View Source ReverseUnify(int) Convert global size into unified size Declaration public static int ReverseUnify(int value) | Edit this page View Source ReverseUnifyMonitor(int) Convert global size into unified size based on monitor size instead of application window height Declaration public static int ReverseUnifyMonitor(int value) | Edit this page View Source ScrollBar(int, IRect, int, int, int, GUIStyle, GUIStyle, bool) Draw a bar that slide when user drag the handle inside Declaration public static int ScrollBar(int controlID, IRect contentRect, int position, int totalSize, int pageSize, GUIStyle handleStyle = null, GUIStyle bgStyle = null, bool vertical = true) Parameters Type Name Description int controlID ID to identify the interaction of this element IRect contentRect Rect position of the content panel in global space int position Scrolling offset position in global space int totalSize Size of all content in global space int pageSize Size of the displaying content in global space GUIStyle handleStyle GUI style for the handle GUIStyle bgStyle GUI style for the background bool vertical True if it scrolls in vertical direction Returns Type Description int New position value | Edit this page View Source ScrollLabel(string, IRect, int, GUIStyle) Label that scroll the content inside verticaly Declaration public static int ScrollLabel(string text, IRect rect, int scrollPosition, GUIStyle style) Parameters Type Name Description string text Text content IRect rect Rect position in global space int scrollPosition Offset Y position in global space Returns Type Description int The new scrolling position | Edit this page View Source SetChange() Mark the GUI system as changed Declaration public static void SetChange() | Edit this page View Source ShadowLabel(IRect, char[], int, GUIStyle) Label with shadow below Declaration public static void ShadowLabel(IRect rect, char[] chars, int shadowDistance = 3, GUIStyle style = null) Parameters Type Name Description IRect rect Rect position in global space int shadowDistance Offset Y of the shadow in unified space | Edit this page View Source ShadowLabel(IRect, string, int, GUIStyle) Label with shadow below Declaration public static void ShadowLabel(IRect rect, string text, int shadowDistance = 3, GUIStyle style = null) Parameters Type Name Description IRect rect Rect position in global space string text Text content int shadowDistance Offset Y of the shadow in unified space | Edit this page View Source Slider(int, IRect, int, int, int, GUIStyle, GUIStyle, GUIStyle, bool, int) Draw a slider that user can drag with mouse to change a intager value Declaration public static int Slider(int controlID, IRect rect, int value, int min, int max, GUIStyle bodyStyle, GUIStyle handleStyle, GUIStyle fillStyle, bool vertical = false, int step = 0) Parameters Type Name Description int controlID ID to identify the interaction of this element IRect rect Rect position in global space int min Minimal limitation for the value int max Maximal limitation for the value bool vertical True if this slider slide verticaly int step Smooth step of the sliding. 0 means no step. Returns Type Description int New value after slide | Edit this page View Source SmallInputField(int, IRect, string, out bool, out bool, Color32?) Draw a GUI element to allow the user to edit a text content Declaration public static string SmallInputField(int controlID, IRect rect, string text, out bool changed, out bool confirm, Color32? selectionColor = null) Parameters Type Name Description int controlID ID to identify the interaction of this element IRect rect Rect position in global space string text Input content bool changed True if the field changed it's content at current frame bool confirm True if the field stop edit at current frame Color32? selectionColor Color of the selection block Returns Type Description string Editted text content | Edit this page View Source SmallInputField(int, IRect, string, Color32?) Draw a GUI element to allow the user to edit a text content Declaration public static string SmallInputField(int controlID, IRect rect, string text, Color32? selectionColor = null) Parameters Type Name Description int controlID ID to identify the interaction of this element IRect rect Rect position in global space string text Input content Color32? selectionColor Color of the selection block Returns Type Description string Editted text content | Edit this page View Source SmallIntDial(IRect, int, out bool, string, int, int, int) Draw a label display an intager with two buttons to add and remove value Declaration public static int SmallIntDial(IRect rect, int value, out bool changed, string label = null, int delta = 1, int min = -2147483648, int max = 2147483647) Parameters Type Name Description IRect rect Rect position in global space int value The intager value bool changed True if the value is changed in this frame string label Text content displays on the left int delta How many value does it add/remove when the button get pressed int min Minimal value for the intager int max Maximal value for the intager Returns Type Description int New value after modified | Edit this page View Source SmallIntDial(IRect, int, string, int, int, int) Draw a label display an intager with two buttons to add and remove value Declaration public static int SmallIntDial(IRect rect, int value, string label = null, int delta = 1, int min = -2147483648, int max = 2147483647) Parameters Type Name Description IRect rect Rect position in global space int value The intager value string label Text content displays on the left int delta How many value does it add/remove when the button get pressed int min Minimal value for the intager int max Maximal value for the intager Returns Type Description int New value after modified | Edit this page View Source SmallLabel(IRect, char[]) Draw a text content on screen Declaration public static void SmallLabel(IRect rect, char[] text) Parameters Type Name Description IRect rect Rect position in global space char[] text Text content | Edit this page View Source SmallLabel(IRect, char[], out IRect) Draw a text content on screen Declaration public static void SmallLabel(IRect rect, char[] text, out IRect bounds) Parameters Type Name Description IRect rect Rect position in global space char[] text Text content IRect bounds Total rendering boundary of the characters in global space | Edit this page View Source SmallLabel(IRect, string) Draw a text content on screen Declaration public static void SmallLabel(IRect rect, string text) Parameters Type Name Description IRect rect Rect position in global space string text Text content | Edit this page View Source SmallLabel(IRect, string, out IRect) Draw a text content on screen Declaration public static void SmallLabel(IRect rect, string text, out IRect bounds) Parameters Type Name Description IRect rect Rect position in global space string text Text content IRect bounds Total rendering boundary of the characters in global space | Edit this page View Source SmallLabel(IRect, string, int, bool, out IRect, out int) Draw a text content on screen Declaration public static void SmallLabel(IRect rect, string text, int startIndex, bool drawInvisibleChar, out IRect bounds, out int endIndex) Parameters Type Name Description IRect rect Rect position in global space string text Text content int startIndex Label content start with this index bool drawInvisibleChar True if invisible characters should make the internal iteration grow IRect bounds Total rendering boundary of the characters in global space int endIndex Last rendered character index | Edit this page View Source SmallLabel(IRect, string, int, int, bool, out IRect, out IRect, out int) Draw a text content on screen Declaration public static void SmallLabel(IRect rect, string text, int beamIndex, int startIndex, bool drawInvisibleChar, out IRect bounds, out IRect beamRect, out int endIndex) Parameters Type Name Description IRect rect Rect position in global space string text Text content int beamIndex Index of the typing beam inside the text content int startIndex Label content start with this index bool drawInvisibleChar True if invisible characters should make the internal iteration grow IRect bounds Total rendering boundary of the characters in global space IRect beamRect Rendering rect position of the typing beam int endIndex Last rendered character index | Edit this page View Source SmallLinkButton(IRect, string, out IRect, bool, int) Button that behave like a link Declaration public static bool SmallLinkButton(IRect rect, string label, out IRect bounds, bool useUnderLine = true, int charSize = -2) Parameters Type Name Description IRect rect Rect position in global space string label Text content IRect bounds Boundary of the rendered content in global space bool useUnderLine True if draw a line below the text int charSize Character size in unified space Returns Type Description bool True if the link is pressed at current frame | Edit this page View Source SmallLinkButton(IRect, string, bool, int) Button that behave like a link Declaration public static bool SmallLinkButton(IRect rect, string label, bool useUnderLine = true, int charSize = -2) Parameters Type Name Description IRect rect Rect position in global space string label Text content bool useUnderLine True if draw a line below the text int charSize Character size in unified space Returns Type Description bool True if the link is pressed at current frame | Edit this page View Source StartTyping(int) Procedurelly start typing with an input field Declaration public static void StartTyping(int controlID) Parameters Type Name Description int controlID Control ID of the target input field | Edit this page View Source Toggle(IRect, bool, GUIStyle, GUIStyle) Draw a GUI element with a check box and check mark Declaration public static bool Toggle(IRect rect, bool isOn, GUIStyle bodyStyle = null, GUIStyle markStyle = null) Parameters Type Name Description IRect rect Rect position in global space bool isOn True if the toggle is checked GUIStyle bodyStyle GUI style of the toggle box GUIStyle markStyle GUI style of the check mark Returns Type Description bool True if the toggle is checked | Edit this page View Source Toggle(IRect, bool, string, GUIStyle, GUIStyle, GUIStyle) Draw a GUI element with a check box and check mark Declaration public static bool Toggle(IRect rect, bool isOn, string label, GUIStyle bodyStyle = null, GUIStyle markStyle = null, GUIStyle labelStyle = null) Parameters Type Name Description IRect rect Rect position in global space bool isOn True if the toggle is checked string label Text content inside the toggle GUIStyle bodyStyle GUI style of the toggle box GUIStyle markStyle GUI style of the check mark GUIStyle labelStyle GUI style of the text label Returns Type Description bool True if the toggle is checked | Edit this page View Source ToggleButton(IRect, bool, int, GUIStyle) Draw a GUI element with a check box and check mark Declaration public static bool ToggleButton(IRect rect, bool isOn, int icon, GUIStyle style = null) Parameters Type Name Description IRect rect Rect position in global space bool isOn True if the toggle is checked int icon Artwork sprite of the content inside the toggle Returns Type Description bool True if the toggle is checked | Edit this page View Source ToggleButton(IRect, bool, string, GUIStyle) Draw a GUI element with a check box and check mark Declaration public static bool ToggleButton(IRect rect, bool isOn, string label, GUIStyle bodyStyle = null) Parameters Type Name Description IRect rect Rect position in global space bool isOn True if the toggle is checked string label Text content inside the toggle GUIStyle bodyStyle GUI style of the toggle box Returns Type Description bool True if the toggle is checked | Edit this page View Source ToggleFold(IRect, ref bool, int, string, int, int) Draw a GUI element with a check box and check mark Declaration public static bool ToggleFold(IRect rect, ref bool folding, int icon, string label, int paddingLeft = 0, int paddingRight = 0) Parameters Type Name Description IRect rect Rect position in global space bool folding True if the panel if folded int icon Artwork sprite of the content inside the toggle string label Text content inside the toggle Returns Type Description bool True if the toggle is checked | Edit this page View Source ToggleLeft(IRect, bool, string, GUIStyle, GUIStyle, GUIStyle) Draw a GUI element with a check box and check mark Declaration public static bool ToggleLeft(IRect rect, bool isOn, string label, GUIStyle bodyStyle = null, GUIStyle labelStyle = null, GUIStyle markStyle = null) Parameters Type Name Description IRect rect Rect position in global space bool isOn True if the toggle is checked string label Text content inside the toggle GUIStyle bodyStyle GUI style of the toggle box GUIStyle labelStyle GUI style of the text label GUIStyle markStyle GUI style of the check mark Returns Type Description bool True if the toggle is checked | Edit this page View Source Unify(int) Convert unified size into global size Declaration public static int Unify(int value) | Edit this page View Source UnifyBorder(Int4) Convert unified size into global size Declaration public static Int4 UnifyBorder(Int4 border) | Edit this page View Source UnifyMonitor(int) Convert unified size into global size based on monitor size instead of application window height Declaration public static int UnifyMonitor(int value) | Edit this page View Source VerticalColorField(ColorF, IRect, bool, bool, bool, bool, ColorF?) Draw a GUI element to edit color value Declaration public static ColorF VerticalColorField(ColorF color, IRect rect, bool hsv = true, bool alpha = false, bool stepped = true, bool folded = false, ColorF? defaultColor = null) Parameters Type Name Description ColorF color The color value IRect rect Rect position in global space bool hsv True if the field use HSV instead of RGB bool alpha True if the field include alpha value bool stepped True if the field use smooth step when dragging bool folded True if the field is folded ColorF? defaultColor Default value will set to the color value when user press the reset button. Set to null when you don't want the reset button. Returns Type Description ColorF New color after edit | Edit this page View Source VerticalColorField(ColorF, IRect, string, GUIStyle, bool, bool, bool, bool, ColorF?) Draw a GUI element to edit color value Declaration public static ColorF VerticalColorField(ColorF color, IRect rect, string label, GUIStyle labelStyle = null, bool hsv = true, bool alpha = false, bool stepped = true, bool folded = false, ColorF? defaultColor = null) Parameters Type Name Description ColorF color The color value IRect rect Rect position in global space string label Text content display on left of the field GUIStyle labelStyle GUI style for the label bool hsv True if the field use HSV instead of RGB bool alpha True if the field include alpha value bool stepped True if the field use smooth step when dragging bool folded True if the field is folded ColorF? defaultColor Default value will set to the color value when user press the reset button. Set to null when you don't want the reset button. Returns Type Description ColorF New color after edit"
  },
  "api/AngeliA.GUIBodyColorScope.html": {
    "href": "api/AngeliA.GUIBodyColorScope.html",
    "title": "Struct GUIBodyColorScope | AngeliA",
    "summary": "Struct GUIBodyColorScope Scope that change the body color of GUI element inside Implements IDisposable Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public readonly struct GUIBodyColorScope : IDisposable Examples using AngeliA; namespace AngeliaGame; public class Example { [OnGameUpdate] internal static void OnGameUpdate () { using (new GUIBodyColorScope(Color32.GREEN)) { // GUI elements inside will have their body color changed } } } Constructors | Edit this page View Source GUIBodyColorScope() Declaration public GUIBodyColorScope() | Edit this page View Source GUIBodyColorScope(Color32) Declaration public GUIBodyColorScope(Color32 color) Methods | Edit this page View Source Dispose() Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources. Declaration public void Dispose() Implements IDisposable Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.GUIColorScope.html": {
    "href": "api/AngeliA.GUIColorScope.html",
    "title": "Struct GUIColorScope | AngeliA",
    "summary": "Struct GUIColorScope Scope that change the color of GUI element inside Implements IDisposable Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public readonly struct GUIColorScope : IDisposable Examples using AngeliA; namespace AngeliaGame; public class Example { [OnGameUpdate] internal static void OnGameUpdate () { using (new GUIColorScope(Color32.GREEN)) { // GUI elements inside will have their color changed } } } Constructors | Edit this page View Source GUIColorScope(Color32) Declaration public GUIColorScope(Color32 color) Methods | Edit this page View Source Dispose() Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources. Declaration public void Dispose() Implements IDisposable Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.GUIContentColorScope.html": {
    "href": "api/AngeliA.GUIContentColorScope.html",
    "title": "Struct GUIContentColorScope | AngeliA",
    "summary": "Struct GUIContentColorScope Scope that change the content color of GUI element inside Implements IDisposable Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public readonly struct GUIContentColorScope : IDisposable Examples using AngeliA; namespace AngeliaGame; public class Example { [OnGameUpdate] internal static void OnGameUpdate () { using (new GUIContentColorScope(Color32.GREEN)) { // GUI elements inside will have their content color changed } } } Constructors | Edit this page View Source GUIContentColorScope(Color32) Declaration public GUIContentColorScope(Color32 color) Methods | Edit this page View Source Dispose() Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources. Declaration public void Dispose() Implements IDisposable Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.GUIEnableScope.html": {
    "href": "api/AngeliA.GUIEnableScope.html",
    "title": "Struct GUIEnableScope | AngeliA",
    "summary": "Struct GUIEnableScope Scope that set enable of GUI elements inside Implements IDisposable Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public readonly struct GUIEnableScope : IDisposable Examples using AngeliA; namespace AngeliaGame; public class Example { [OnGameUpdate] internal static void OnGameUpdate () { using (new GUIEnableScope(false)) { // GUI elements inside will be disabled } } } Constructors | Edit this page View Source GUIEnableScope(bool) Declaration public GUIEnableScope(bool enable) Methods | Edit this page View Source Dispose() Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources. Declaration public void Dispose() Implements IDisposable Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.GUIHorizontalScrollScope.html": {
    "href": "api/AngeliA.GUIHorizontalScrollScope.html",
    "title": "Struct GUIHorizontalScrollScope | AngeliA",
    "summary": "Struct GUIHorizontalScrollScope Scope that make GUI elements inside scrolls Implements IDisposable Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public readonly struct GUIHorizontalScrollScope : IDisposable Examples using AngeliA; namespace AngeliaGame; public class Example { static Int2 ScrollPos; [OnGameUpdate] internal static void OnGameUpdate () { var cameraRect = Renderer.CameraRect; using (var scroll = new GUIScrollScope(cameraRect, ScrollPos, new Int2(0, -4096), new Int2(0, 4096))) { ScrollPos = scroll.Position; Renderer.Draw(BuiltInSprite.ICON_ENTITY, cameraRect.x + 1024, cameraRect.y, 0, 0, 0, 512, 512); Renderer.Draw(BuiltInSprite.ICON_ENTITY, cameraRect.x + 1024, cameraRect.y + 1024, 0, 0, 0, 512, 512); Renderer.Draw(BuiltInSprite.ICON_ENTITY, cameraRect.x + 1024, cameraRect.y + 2048, 0, 0, 0, 512, 512); } } } Constructors | Edit this page View Source GUIHorizontalScrollScope(IRect, int, int, int, int) Scope that make GUI elements inside scrolls Declaration public GUIHorizontalScrollScope(IRect rect, int positionX, int min = -2147483648, int max = 2147483647, int layer = 7) Examples using AngeliA; namespace AngeliaGame; public class Example { static Int2 ScrollPos; [OnGameUpdate] internal static void OnGameUpdate () { var cameraRect = Renderer.CameraRect; using (var scroll = new GUIScrollScope(cameraRect, ScrollPos, new Int2(0, -4096), new Int2(0, 4096))) { ScrollPos = scroll.Position; Renderer.Draw(BuiltInSprite.ICON_ENTITY, cameraRect.x + 1024, cameraRect.y, 0, 0, 0, 512, 512); Renderer.Draw(BuiltInSprite.ICON_ENTITY, cameraRect.x + 1024, cameraRect.y + 1024, 0, 0, 0, 512, 512); Renderer.Draw(BuiltInSprite.ICON_ENTITY, cameraRect.x + 1024, cameraRect.y + 2048, 0, 0, 0, 512, 512); } } } Fields | Edit this page View Source Scope Declaration public readonly GUIScrollScope Scope Properties | Edit this page View Source PositionX Declaration public int PositionX { get; } Methods | Edit this page View Source Dispose() Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources. Declaration public void Dispose() Implements IDisposable Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.GUIInteractableScope.html": {
    "href": "api/AngeliA.GUIInteractableScope.html",
    "title": "Struct GUIInteractableScope | AngeliA",
    "summary": "Struct GUIInteractableScope Scope that set interactable of GUI elements inside Implements IDisposable Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public readonly struct GUIInteractableScope : IDisposable Examples using AngeliA; namespace AngeliaGame; public class Example { [OnGameUpdate] internal static void OnGameUpdate () { using (new GUIInteractableScope(false)) { // GUI elements inside will be not interactable } } } Constructors | Edit this page View Source GUIInteractableScope(bool) Declaration public GUIInteractableScope(bool interactable) Methods | Edit this page View Source Dispose() Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources. Declaration public void Dispose() Implements IDisposable Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.GUILabelWidthScope.html": {
    "href": "api/AngeliA.GUILabelWidthScope.html",
    "title": "Struct GUILabelWidthScope | AngeliA",
    "summary": "Struct GUILabelWidthScope Scope that set internal label width of GUI elements inside Implements IDisposable Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public readonly struct GUILabelWidthScope : IDisposable Examples using AngeliA; namespace AngeliaGame; public class Example { [OnGameUpdate] internal static void OnGameUpdate () { using (new GUILabelWidthScope(128)) { // GUI elements inside will have internal label with 128 in width } } } Constructors | Edit this page View Source GUILabelWidthScope(int) Declaration public GUILabelWidthScope(int width) Methods | Edit this page View Source Dispose() Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources. Declaration public void Dispose() Implements IDisposable Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.GUIScrollScope.html": {
    "href": "api/AngeliA.GUIScrollScope.html",
    "title": "Struct GUIScrollScope | AngeliA",
    "summary": "Struct GUIScrollScope Scope that make GUI elements inside scrolls Implements IDisposable Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public readonly struct GUIScrollScope : IDisposable Examples using AngeliA; namespace AngeliaGame; public class Example { static Int2 ScrollPos; [OnGameUpdate] internal static void OnGameUpdate () { var cameraRect = Renderer.CameraRect; using (var scroll = new GUIScrollScope(cameraRect, ScrollPos, new Int2(0, -4096), new Int2(0, 4096))) { ScrollPos = scroll.Position; Renderer.Draw(BuiltInSprite.ICON_ENTITY, cameraRect.x + 1024, cameraRect.y, 0, 0, 0, 512, 512); Renderer.Draw(BuiltInSprite.ICON_ENTITY, cameraRect.x + 1024, cameraRect.y + 1024, 0, 0, 0, 512, 512); Renderer.Draw(BuiltInSprite.ICON_ENTITY, cameraRect.x + 1024, cameraRect.y + 2048, 0, 0, 0, 512, 512); } } } Constructors | Edit this page View Source GUIScrollScope(IRect, Int2, Int2, Int2, bool, bool, int) Scope that make GUI elements inside scrolls Declaration public GUIScrollScope(IRect rect, Int2 position, Int2 min, Int2 max, bool mouseWheelForVertical = true, bool reverseMouseWheel = false, int layer = -2147483648) Parameters Type Name Description IRect rect Content rect position in global space Int2 position Scroll position in global space Int2 min Minimal limitation for the scrolling Int2 max Maximal limitation for the scrolling bool mouseWheelForVertical True if the mouse wheel control vertical scroll instead of horizontal bool reverseMouseWheel True if the mouse wheel scroll should reverse in direction int layer Which render layer does it scrolls Fields | Edit this page View Source CellCount Declaration public readonly int CellCount | Edit this page View Source Layer Declaration public readonly int Layer | Edit this page View Source MousePosShift Declaration public readonly Int2 MousePosShift | Edit this page View Source Position Declaration public readonly Int2 Position | Edit this page View Source PrevMouseInputIgnoring Declaration public readonly bool PrevMouseInputIgnoring | Edit this page View Source Rect Declaration public readonly IRect Rect Methods | Edit this page View Source Dispose() Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources. Declaration public void Dispose() Implements IDisposable Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.GUISkin.html": {
    "href": "api/AngeliA.GUISkin.html",
    "title": "Class GUISkin | AngeliA",
    "summary": "Class GUISkin Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public class GUISkin Fields | Edit this page View Source AutoCenterGreyLabel Declaration public readonly GUIStyle AutoCenterGreyLabel | Edit this page View Source AutoCenterLabel Declaration public readonly GUIStyle AutoCenterLabel | Edit this page View Source AutoDarkLabel Declaration public readonly GUIStyle AutoDarkLabel | Edit this page View Source AutoGreyLabel Declaration public readonly GUIStyle AutoGreyLabel | Edit this page View Source AutoLabel Declaration public readonly GUIStyle AutoLabel | Edit this page View Source AutoRightLabel Declaration public readonly GUIStyle AutoRightLabel | Edit this page View Source Background Declaration public Color32 Background | Edit this page View Source Button Declaration public readonly GUIStyle Button | Edit this page View Source CenterGreyLabel Declaration public readonly GUIStyle CenterGreyLabel | Edit this page View Source CenterLabel Declaration public readonly GUIStyle CenterLabel | Edit this page View Source CenterLabelButton Declaration public readonly GUIStyle CenterLabelButton | Edit this page View Source CenterMessage Declaration public readonly GUIStyle CenterMessage | Edit this page View Source DarkButton Declaration public readonly GUIStyle DarkButton | Edit this page View Source DarkLabel Declaration public readonly GUIStyle DarkLabel | Edit this page View Source Default Default gui skin instance Declaration public static readonly GUISkin Default | Edit this page View Source DeleteTint Declaration public Color32 DeleteTint | Edit this page View Source DialogBG Declaration public readonly GUIStyle DialogBG | Edit this page View Source ErrorTint Declaration public Color32 ErrorTint | Edit this page View Source Frame Declaration public readonly GUIStyle Frame | Edit this page View Source GizmosCursor Declaration public Color32 GizmosCursor | Edit this page View Source GizmosCursorAlt Declaration public Color32 GizmosCursorAlt | Edit this page View Source GizmosDotted Declaration public Color32 GizmosDotted | Edit this page View Source GizmosDottedAlt Declaration public Color32 GizmosDottedAlt | Edit this page View Source GizmosDragging Declaration public Color32 GizmosDragging | Edit this page View Source GizmosDraggingAlt Declaration public Color32 GizmosDraggingAlt | Edit this page View Source GizmosNormal Declaration public Color32 GizmosNormal | Edit this page View Source GizmosSelecting Declaration public Color32 GizmosSelecting | Edit this page View Source GreenPixel Declaration public readonly GUIStyle GreenPixel | Edit this page View Source GreyLabel Declaration public readonly GUIStyle GreyLabel | Edit this page View Source HighlightColor Declaration public Color32 HighlightColor | Edit this page View Source HighlightColorAlt Declaration public Color32 HighlightColorAlt | Edit this page View Source HighlightPixel Declaration public readonly GUIStyle HighlightPixel | Edit this page View Source IconButton Declaration public readonly GUIStyle IconButton | Edit this page View Source InputField Declaration public readonly GUIStyle InputField | Edit this page View Source ItemFrame Declaration public readonly GUIStyle ItemFrame | Edit this page View Source Label Declaration public readonly GUIStyle Label | Edit this page View Source LabelButton Declaration public readonly GUIStyle LabelButton | Edit this page View Source LargeCenterGreyLabel Declaration public readonly GUIStyle LargeCenterGreyLabel | Edit this page View Source LargeCenterLabel Declaration public readonly GUIStyle LargeCenterLabel | Edit this page View Source LargeCenterLabelButton Declaration public readonly GUIStyle LargeCenterLabelButton | Edit this page View Source LargeCenterMessage Declaration public readonly GUIStyle LargeCenterMessage | Edit this page View Source LargeDarkLabel Declaration public readonly GUIStyle LargeDarkLabel | Edit this page View Source LargeGreyLabel Declaration public readonly GUIStyle LargeGreyLabel | Edit this page View Source LargeInputField Declaration public readonly GUIStyle LargeInputField | Edit this page View Source LargeLabel Declaration public readonly GUIStyle LargeLabel | Edit this page View Source LargeLabelButton Declaration public readonly GUIStyle LargeLabelButton | Edit this page View Source LargeMessage Declaration public readonly GUIStyle LargeMessage | Edit this page View Source LargeRightLabel Declaration public readonly GUIStyle LargeRightLabel | Edit this page View Source LargeTextArea Declaration public readonly GUIStyle LargeTextArea | Edit this page View Source LargeToggle Declaration public readonly GUIStyle LargeToggle | Edit this page View Source LinkTint Declaration public Color32 LinkTint | Edit this page View Source LinkTintHover Declaration public Color32 LinkTintHover | Edit this page View Source Message Declaration public readonly GUIStyle Message | Edit this page View Source Name Name of this gui skin Declaration public string Name | Edit this page View Source RightLabel Declaration public readonly GUIStyle RightLabel | Edit this page View Source Scrollbar Declaration public readonly GUIStyle Scrollbar | Edit this page View Source SliderBody Declaration public readonly GUIStyle SliderBody | Edit this page View Source SliderFill Declaration public readonly GUIStyle SliderFill | Edit this page View Source SliderHandle Declaration public readonly GUIStyle SliderHandle | Edit this page View Source SmallButton Declaration public readonly GUIStyle SmallButton | Edit this page View Source SmallCenterGreyLabel Declaration public readonly GUIStyle SmallCenterGreyLabel | Edit this page View Source SmallCenterLabel Declaration public readonly GUIStyle SmallCenterLabel | Edit this page View Source SmallCenterLabelButton Declaration public readonly GUIStyle SmallCenterLabelButton | Edit this page View Source SmallCenterMessage Declaration public readonly GUIStyle SmallCenterMessage | Edit this page View Source SmallDarkButton Declaration public readonly GUIStyle SmallDarkButton | Edit this page View Source SmallDarkLabel Declaration public readonly GUIStyle SmallDarkLabel | Edit this page View Source SmallGreyLabel Declaration public readonly GUIStyle SmallGreyLabel | Edit this page View Source SmallIconButton Declaration public readonly GUIStyle SmallIconButton | Edit this page View Source SmallInputField Declaration public readonly GUIStyle SmallInputField | Edit this page View Source SmallLabel Declaration public readonly GUIStyle SmallLabel | Edit this page View Source SmallLabelButton Declaration public readonly GUIStyle SmallLabelButton | Edit this page View Source SmallMessage Declaration public readonly GUIStyle SmallMessage | Edit this page View Source SmallRightLabel Declaration public readonly GUIStyle SmallRightLabel | Edit this page View Source SmallTextArea Declaration public readonly GUIStyle SmallTextArea | Edit this page View Source TextArea Declaration public readonly GUIStyle TextArea | Edit this page View Source Toggle Declaration public readonly GUIStyle Toggle | Edit this page View Source ToggleMark Declaration public readonly GUIStyle ToggleMark | Edit this page View Source WeakHighlightPixel Declaration public readonly GUIStyle WeakHighlightPixel | Edit this page View Source WeakPixel Declaration public readonly GUIStyle WeakPixel Methods | Edit this page View Source LoadColorFromSheet(Sheet) Declaration public void LoadColorFromSheet(Sheet sheet) | Edit this page View Source LoadColorFromSkin(GUISkin) Declaration public void LoadColorFromSkin(GUISkin otherSkin) Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.GUISkinScope.html": {
    "href": "api/AngeliA.GUISkinScope.html",
    "title": "Struct GUISkinScope | AngeliA",
    "summary": "Struct GUISkinScope Scope that change the skin of the GUI elements inside Implements IDisposable Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public readonly struct GUISkinScope : IDisposable Examples using AngeliA; namespace AngeliaGame; public class Example { [OnGameUpdate] internal static void OnGameUpdate () { using (new GUISkinScope(/*Your GUI Skin*/)) { // GUI elements inside will use the given GUI skin } } } Constructors | Edit this page View Source GUISkinScope(GUISkin) Declaration public GUISkinScope(GUISkin skin) Methods | Edit this page View Source Dispose() Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources. Declaration public void Dispose() Implements IDisposable Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.GUIState.html": {
    "href": "api/AngeliA.GUIState.html",
    "title": "Enum GUIState | AngeliA",
    "summary": "Enum GUIState Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public enum GUIState : byte Fields Name Description Disable Hover Normal Press Extension Methods Extension.Next<GUIState>(GUIState) Extension.Prev<GUIState>(GUIState) Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.GUIStyle.html": {
    "href": "api/AngeliA.GUIStyle.html",
    "title": "Class GUIStyle | AngeliA",
    "summary": "Class GUIStyle Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public sealed class GUIStyle Constructors | Edit this page View Source GUIStyle(GUIStyle) Declaration public GUIStyle(GUIStyle source = null) Fields | Edit this page View Source Alignment Declaration public Alignment Alignment | Edit this page View Source BodyColor Declaration public Color32 BodyColor | Edit this page View Source BodyColorDisable Declaration public Color32 BodyColorDisable | Edit this page View Source BodyColorDown Declaration public Color32 BodyColorDown | Edit this page View Source BodyColorHover Declaration public Color32 BodyColorHover | Edit this page View Source BodySprite Declaration public int BodySprite | Edit this page View Source BodySpriteDisable Declaration public int BodySpriteDisable | Edit this page View Source BodySpriteDown Declaration public int BodySpriteDown | Edit this page View Source BodySpriteHover Declaration public int BodySpriteHover | Edit this page View Source CharSize Declaration public int CharSize | Edit this page View Source CharSpace Declaration public int CharSpace | Edit this page View Source Clip Declaration public bool Clip | Edit this page View Source ContentColor Declaration public Color32 ContentColor | Edit this page View Source ContentColorDisable Declaration public Color32 ContentColorDisable | Edit this page View Source ContentColorDown Declaration public Color32 ContentColorDown | Edit this page View Source ContentColorHover Declaration public Color32 ContentColorHover | Edit this page View Source LineSpace Declaration public int LineSpace | Edit this page View Source None Declaration public static readonly GUIStyle None | Edit this page View Source Wrap Declaration public WrapMode Wrap Methods | Edit this page View Source GetBodyBorder(GUIState) Declaration public Int4 GetBodyBorder(GUIState state) | Edit this page View Source GetBodyColor(GUIState) Declaration public Color32 GetBodyColor(GUIState state) | Edit this page View Source GetBodySprite(GUIState) Declaration public int GetBodySprite(GUIState state) | Edit this page View Source GetContentBorder(GUIState) Declaration public Int4 GetContentBorder(GUIState state) | Edit this page View Source GetContentColor(GUIState) Declaration public Color32 GetContentColor(GUIState state) Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.GUIVerticalScrollScope.html": {
    "href": "api/AngeliA.GUIVerticalScrollScope.html",
    "title": "Struct GUIVerticalScrollScope | AngeliA",
    "summary": "Struct GUIVerticalScrollScope Scope that make GUI elements inside scrolls Implements IDisposable Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public readonly struct GUIVerticalScrollScope : IDisposable Examples using AngeliA; namespace AngeliaGame; public class Example { static Int2 ScrollPos; [OnGameUpdate] internal static void OnGameUpdate () { var cameraRect = Renderer.CameraRect; using (var scroll = new GUIScrollScope(cameraRect, ScrollPos, new Int2(0, -4096), new Int2(0, 4096))) { ScrollPos = scroll.Position; Renderer.Draw(BuiltInSprite.ICON_ENTITY, cameraRect.x + 1024, cameraRect.y, 0, 0, 0, 512, 512); Renderer.Draw(BuiltInSprite.ICON_ENTITY, cameraRect.x + 1024, cameraRect.y + 1024, 0, 0, 0, 512, 512); Renderer.Draw(BuiltInSprite.ICON_ENTITY, cameraRect.x + 1024, cameraRect.y + 2048, 0, 0, 0, 512, 512); } } } Constructors | Edit this page View Source GUIVerticalScrollScope(IRect, int, int, int, int) Scope that make GUI elements inside scrolls Declaration public GUIVerticalScrollScope(IRect panelRect, int positionY, int min = -2147483648, int max = 2147483647, int layer = 7) Examples using AngeliA; namespace AngeliaGame; public class Example { static Int2 ScrollPos; [OnGameUpdate] internal static void OnGameUpdate () { var cameraRect = Renderer.CameraRect; using (var scroll = new GUIScrollScope(cameraRect, ScrollPos, new Int2(0, -4096), new Int2(0, 4096))) { ScrollPos = scroll.Position; Renderer.Draw(BuiltInSprite.ICON_ENTITY, cameraRect.x + 1024, cameraRect.y, 0, 0, 0, 512, 512); Renderer.Draw(BuiltInSprite.ICON_ENTITY, cameraRect.x + 1024, cameraRect.y + 1024, 0, 0, 0, 512, 512); Renderer.Draw(BuiltInSprite.ICON_ENTITY, cameraRect.x + 1024, cameraRect.y + 2048, 0, 0, 0, 512, 512); } } } Fields | Edit this page View Source Scope Declaration public readonly GUIScrollScope Scope Properties | Edit this page View Source PositionY Declaration public int PositionY { get; } Methods | Edit this page View Source Dispose() Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources. Declaration public void Dispose() Implements IDisposable Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.Game.html": {
    "href": "api/AngeliA.Game.html",
    "title": "Class Game | AngeliA",
    "summary": "Class Game Represent an AngeliA game Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public abstract class Game Constructors | Edit this page View Source Game(params string[]) Create a game instance with command-line arguments Declaration public Game(params string[] args) Fields | Edit this page View Source Fonts Instance pool for all available font Declaration public static readonly List<FontData> Fonts | Edit this page View Source MusicPool Instance pool for all available background music Declaration public static readonly Dictionary<int, MusicData> MusicPool | Edit this page View Source SoundPool Instance pool for all available sound effect Declaration public static readonly Dictionary<int, SoundData> SoundPool Properties | Edit this page View Source BuiltInFontCount Declaration public static int BuiltInFontCount { get; } | Edit this page View Source CurrentBGM Instance that represent the background music Declaration public static object CurrentBGM { get; protected set; } | Edit this page View Source CurrentMonitor Get index of the monitor which this application window currently in Declaration public static int CurrentMonitor { get; } | Edit this page View Source CurrentMusicID Audio ID of the current loaded background music Declaration public static int CurrentMusicID { get; } | Edit this page View Source CursorInScreen True if the mouse cursor is currently inside application window Declaration public static bool CursorInScreen { get; } | Edit this page View Source CursorVisible True if the mouse cursor is currently visible Declaration public static bool CursorVisible { get; } | Edit this page View Source DoodleFrame Doodle pixels should be rendered of the global frame is less or equal to (this value + 1) Declaration protected int DoodleFrame { get; } | Edit this page View Source DoodleOnTopOfUiFrame Doodle pixels should cover the UI rendering layer if current global frame less than this value Declaration protected int DoodleOnTopOfUiFrame { get; } | Edit this page View Source DoodleScreenPadding Border size in screen space for the doodle canvas Declaration public static Int4 DoodleScreenPadding { get; set; } | Edit this page View Source FontCount Total count of loaded fonts Declaration public static int FontCount { get; } | Edit this page View Source GamepadLeftStickDirection Get the specific direction of the left gamepad stick Declaration public static Float2 GamepadLeftStickDirection { get; } | Edit this page View Source GamepadRightStickDirection Get the specific direction of the right gamepad stick Declaration public static Float2 GamepadRightStickDirection { get; } | Edit this page View Source GizmosOnTopOfUiFrame Gizmos should cover the UI rendering layer if current global frame less than this value Declaration protected int GizmosOnTopOfUiFrame { get; } | Edit this page View Source GlobalFrame Frame number that grows every 1/60 second Declaration public static int GlobalFrame { get; } | Edit this page View Source IgnoreArtworkPixels True if the application don't need pixel data from artwork sheet Declaration public static bool IgnoreArtworkPixels { get; } | Edit this page View Source IsGamepadAvailable True if any gamepad device is currently available to use Declaration public static bool IsGamepadAvailable { get; } | Edit this page View Source IsKeyboardAvailable True is the keyboard device is currently available to use Declaration public static bool IsKeyboardAvailable { get; } | Edit this page View Source IsMouseAvailable True if the mouse device is currently available to use Declaration public static bool IsMouseAvailable { get; } | Edit this page View Source IsMouseLeftHolding True if the mouse left button is currently holding Declaration public static bool IsMouseLeftHolding { get; } | Edit this page View Source IsMouseMidHolding True if the mouse middle button is currently holding Declaration public static bool IsMouseMidHolding { get; } | Edit this page View Source IsMouseRightHolding True if the mouse right button is currently holding Declaration public static bool IsMouseRightHolding { get; } | Edit this page View Source IsMusicPlaying True if the background music is currently playing Declaration public static bool IsMusicPlaying { get; } | Edit this page View Source IsPausing True if the game is currently pausing Declaration public static bool IsPausing { get; } | Edit this page View Source IsPlaying True if the game is currently not pausing Declaration public static bool IsPlaying { get; } | Edit this page View Source IsToolApplication True if the application should be treated as tool instead of game Declaration public static bool IsToolApplication { get; } | Edit this page View Source IsWindowDecorated If the application window has title bar and border frame or not Declaration public static bool IsWindowDecorated { get; set; } | Edit this page View Source IsWindowFocused True if the application window is currently focused Declaration public static bool IsWindowFocused { get; } | Edit this page View Source IsWindowMaximized If the application window is currently maximized Declaration public static bool IsWindowMaximized { get; set; } | Edit this page View Source IsWindowMinimized If the application window is currently minimized Declaration public static bool IsWindowMinimized { get; set; } | Edit this page View Source IsWindowResizable If the application window can be resize by the user Declaration public static bool IsWindowResizable { get; set; } | Edit this page View Source IsWindowTopmost If the application window renders on top of all other windows Declaration public static bool IsWindowTopmost { get; set; } | Edit this page View Source MonitorHeight Height of the monitor which the application currently inside Declaration public static int MonitorHeight { get; } | Edit this page View Source MonitorWidth Width of the monitor which the application currently inside Declaration public static int MonitorWidth { get; } | Edit this page View Source MouseScreenPosition Mouse position in screen space. (0,0) means top-left corner Declaration public static Int2 MouseScreenPosition { get; } | Edit this page View Source MouseScrollDelta Mouse wheel scrolling value at current frame. Return negative value when the page scrolls down (the content appears to move upward) Declaration public static int MouseScrollDelta { get; } | Edit this page View Source MusicVolume Volume amount for the background music (0 for mute, 1000 for loudest) Declaration public static int MusicVolume { get; set; } | Edit this page View Source PauselessFrame Frame number that still grows when the game is pausing Declaration public static int PauselessFrame { get; } | Edit this page View Source ProcedureAudioVolume Audio volume used by internal script Declaration public static int ProcedureAudioVolume { get; set; } | Edit this page View Source ScaledMusicVolume Music volume that effect by the internal procedure audio volume Declaration public static float ScaledMusicVolume { get; } | Edit this page View Source ScaledSoundVolume Sound volume that effect by the internal procedure audio volume Declaration public static float ScaledSoundVolume { get; } | Edit this page View Source ScreenEffectPadding Border size of all screen effects Declaration public static Int4 ScreenEffectPadding { get; set; } | Edit this page View Source ScreenHeight Height of the application window Declaration public static int ScreenHeight { get; } | Edit this page View Source ScreenWidth Width of the application window Declaration public static int ScreenWidth { get; } | Edit this page View Source SettleFrame Frame number that could be reset by the stage Declaration public static int SettleFrame { get; } | Edit this page View Source ShowingDoodle True if the doodle pixels are displaying at this frame Declaration public static bool ShowingDoodle { get; } | Edit this page View Source SoundVolume Volume amount for the sound effect (0 for mute, 1000 for loudest) Declaration public static int SoundVolume { get; set; } Methods | Edit this page View Source CancelDoodleOnTopOfUI() Do not make doodle pixels cover UI rendering layer anymore. Declaration public static void CancelDoodleOnTopOfUI() | Edit this page View Source CancelForceTargetFramerate() Do not override the target framerate anymore Declaration public static void CancelForceTargetFramerate() | Edit this page View Source CancelGizmosOnTopOfUI() Do not make gizmos cover UI rendering layer anymore. Declaration public static void CancelGizmosOnTopOfUI() | Edit this page View Source CenterCursor() Move the mouse cursor to the center of screen. This works when mouse cursor is hidding. Declaration public static void CenterCursor() | Edit this page View Source ClearAndUnloadAudioPool() Reset audio pool and unload the data in the memory Declaration public static void ClearAndUnloadAudioPool() | Edit this page View Source CreateNewFontData() Create a new instance of the internal data for font Declaration protected abstract FontData CreateNewFontData() | Edit this page View Source DoodleRect(FRect, Color32) Doodle the given color as pixels into the screen-space canvas. Pixels remains on screen until you hide all doodle or reset the canvas. Declaration public static void DoodleRect(FRect screenRect, Color32 color) Parameters Type Name Description FRect screenRect Rect position in screen space | Edit this page View Source DoodleRectSwap(FRect, Color32) Doodle the given color as pixels into the screen-space canvas. Pixels remains on screen until you hide all doodle or reset the canvas. Declaration public static void DoodleRectSwap(FRect screenRect, Color32 color) Parameters Type Name Description FRect screenRect Rect position in screen space that swap around when out of range | Edit this page View Source DoodleWorld(IBlockSquad, FRect, IRect, int, bool, bool, bool, bool) Doodle the given map data on screen based on summary tint from rendering sheet Declaration public static void DoodleWorld(IBlockSquad squad, FRect screenRect, IRect worldUnitRange, int z, bool ignoreLevel = false, bool ignoreBG = false, bool ignoreEntity = false, bool ignoreElement = true) Parameters Type Name Description IBlockSquad squad Source of the map block data FRect screenRect Position rect in screen space for the given world-unit-range IRect worldUnitRange Rect range on the map in unit space int z Position Z on the map bool ignoreLevel True if level blocks should be ignored bool ignoreBG True if background blocks should be ignored bool ignoreEntity True if entity blocks should be ignored bool ignoreElement True if element blocks should be ignored | Edit this page View Source DrawGizmosFrame(IRect, Color32, Int4, Int4) Draw a holo rectangle as gizmos for current frame Declaration public static void DrawGizmosFrame(IRect rect, Color32 color, Int4 thickness, Int4 gap = default) Parameters Type Name Description IRect rect Rect position in global space Color32 color Color tint Int4 thickness Border size in global space Int4 gap How big the fracture part in the middle in global space | Edit this page View Source DrawGizmosFrame(IRect, Color32, int, int) Draw a holo rectangle as gizmos for current frame Declaration public static void DrawGizmosFrame(IRect rect, Color32 color, int thickness, int gap = 0) Parameters Type Name Description IRect rect Rect position in global space Color32 color Color tint int thickness Border size in global space int gap How big the fracture part in the middle in global space | Edit this page View Source DrawGizmosLine(int, int, int, int, int, Color32) Draw a line as gizmos for current frame Declaration public static void DrawGizmosLine(int startX, int startY, int endX, int endY, int thickness, Color32 color) Parameters Type Name Description int startX Start point of the line in global space int startY Start point of the line in global space int endX End point of the line in global space int endY End point of the line in global space int thickness Thickness in global space Color32 color Color tint | Edit this page View Source DrawGizmosRect(IRect, Color32) Draw a rectangle as gizmos for current frame Declaration public static void DrawGizmosRect(IRect rect, Color32 color) Parameters Type Name Description IRect rect Rect position in global space Color32 color Color tint | Edit this page View Source DrawGizmosRect(IRect, Color32, Color32) Draw a rectangle as gizmos for current frame Declaration public static void DrawGizmosRect(IRect rect, Color32 colorT, Color32 colorB) Parameters Type Name Description IRect rect Rect position in global space Color32 colorT Color tint Color32 colorB Color tint | Edit this page View Source DrawGizmosRect(IRect, Color32, Color32, Color32, Color32) Draw a rectangle as gizmos for current frame Declaration public static void DrawGizmosRect(IRect rect, Color32 colorTL, Color32 colorTR, Color32 colorBL, Color32 colorBR) Parameters Type Name Description IRect rect Rect position in global space Color32 colorTL Color tint Color32 colorTR Color tint Color32 colorBL Color tint Color32 colorBR Color tint | Edit this page View Source DrawGizmosTexture(IRect, FRect, object, Color32, bool) Draw the given texture as gizmos for current frame Declaration public static void DrawGizmosTexture(IRect rect, FRect uv, object texture, Color32 tint, bool inverse = false) Parameters Type Name Description IRect rect Rect position FRect uv Which part of this texture should be draw. (0, 0, 1, 1) means all of them. (0, 0, 0.5f, 1) means left half. Color32 tint Color tint bool inverse True if the texture display as the inversed color of the current rendered pixel on screen. | Edit this page View Source DrawGizmosTexture(IRect, FRect, object, bool) Draw the given texture as gizmos for current frame Declaration public static void DrawGizmosTexture(IRect rect, FRect uv, object texture, bool inverse = false) Parameters Type Name Description IRect rect Rect position FRect uv Which part of this texture should be draw. (0, 0, 1, 1) means all of them. (0, 0, 0.5f, 1) means left half. bool inverse True if the texture display as the inversed color of the current rendered pixel on screen. | Edit this page View Source DrawGizmosTexture(IRect, object, Color32, bool) Draw the given texture as gizmos for current frame Declaration public static void DrawGizmosTexture(IRect rect, object texture, Color32 tint, bool inverse = false) Parameters Type Name Description IRect rect Rect position Color32 tint Color tint bool inverse True if the texture display as the inversed color of the current rendered pixel on screen. | Edit this page View Source DrawGizmosTexture(IRect, object, bool) Draw the given texture as gizmos for current frame Declaration public static void DrawGizmosTexture(IRect rect, object texture, bool inverse = false) Parameters Type Name Description IRect rect Rect position bool inverse True if the texture display as the inversed color of the current rendered pixel on screen. | Edit this page View Source FillPixelsIntoTexture(Color32[], object) Set the given pixel data into the given texture instance. Declaration public static void FillPixelsIntoTexture(Color32[] pixels, object texture) | Edit this page View Source ForAllPressingCharsThisFrame() Iterate through all pressing character at current frame. Not include non-character keys Declaration public static IEnumerable<char> ForAllPressingCharsThisFrame() | Edit this page View Source ForAllPressingKeysThisFrame() Iterate through all pressing keyboard keys at current frame. Include non-character keys Declaration public static IEnumerable<KeyboardKey> ForAllPressingKeysThisFrame() | Edit this page View Source ForceDoodleOnTopOfUI(int) Make doodle pixels cover UI rendering layer for given frames long. Declaration public static void ForceDoodleOnTopOfUI(int duration = 0) | Edit this page View Source ForceGizmosOnTopOfUI(int) Make gizmos cover UI rendering layer for given frames long. Declaration public static void ForceGizmosOnTopOfUI(int duration = 0) | Edit this page View Source ForceTargetFramerate(int, int) Override the target framerate for specified frames long Declaration public static void ForceTargetFramerate(int framerate, int duration = 1) | Edit this page View Source GetCameraRectFromViewRect(IRect) Calculate the camera rect based on given view rect Declaration public static IRect GetCameraRectFromViewRect(IRect viewRect) | Edit this page View Source GetCharPressed() Get the current pressing charcter and remove it from internal queue. Return '\\0' if no character is pressed. Declaration protected abstract char GetCharPressed() | Edit this page View Source GetCharSprite(int, char, out CharSprite) Get artwork sprite for rendering a text character Declaration public static bool GetCharSprite(int fontIndex, char c, out CharSprite result) Returns Type Description bool True if the sprite is successfuly required | Edit this page View Source GetClipboardText() Text content of the current system clipboard Declaration public static string GetClipboardText() | Edit this page View Source GetEffectEnable(int) True if the given screen effect is currently enabled. Declaration public static bool GetEffectEnable(int effectIndex) Parameters Type Name Description int effectIndex Use Const.SCREEN_EFFECT_XXXX for this index | Edit this page View Source GetKeyPressed() Get the current pressing keyboard key and remove it from internal queue. Return null if no key is pressed. Declaration protected abstract KeyboardKey? GetKeyPressed() | Edit this page View Source GetMonitorHeight(int) Get height of the current monitor. Use Game.CurrentMonitor to get the monitor index Declaration public static int GetMonitorHeight(int monitor) | Edit this page View Source GetMonitorWidth(int) Get width of the current monitor. Use Game.CurrentMonitor to get the monitor index Declaration public static int GetMonitorWidth(int monitor) | Edit this page View Source GetPixelsFromTexture(object) Create a new instance of Color32 array from the given texture Declaration public static Color32[] GetPixelsFromTexture(object texture) Returns Type Description Color32[] Return [] when invalid. Don't throw exception. | Edit this page View Source GetResizedTexture(object, int, int, bool) Create a new instance of texture which is the resized version of the given texture. Declaration public static object GetResizedTexture(object texture, int newWidth, int newHeight, bool nearestNeighbor = true) bool nearestNeighbor True if the misaligned pixels should be averaged with it's nearby pixels Returns Type Description object Return null if invalid. Don't throw exception. | Edit this page View Source GetTargetFramerate() Declaration public static int GetTargetFramerate() | Edit this page View Source GetTextureFromPixels(Color32[], int, int) Create a new instance of texture from given pixels data. Declaration public static object GetTextureFromPixels(Color32[] pixels, int width, int height) Parameters Type Name Description Color32[] pixels Pixel data. 0 means bottom-left corner. 1 makes it goes right for 1 pixel. int width Width of the pixel data in pixel int height Heigh of the pixel data in pixel Returns Type Description object Never return null and Don't throw exception. | Edit this page View Source GetTextureID(object) Get internal ID of the given texture instance. Declaration public static uint? GetTextureID(object texture) | Edit this page View Source GetTextureSize(object) Get the size in pixel of the given texture instance Declaration public static Int2 GetTextureSize(object texture) Returns Type Description Int2 Return default when invalid. Don't throw exception. | Edit this page View Source GetViewWidthFromViewHeight(int) Calculate view rect width based on given view rect height Declaration public static int GetViewWidthFromViewHeight(int viewHeight) | Edit this page View Source GetWindowPosition() Get application window position. (0,0) is top-left corner Declaration public static Int2 GetWindowPosition() | Edit this page View Source HideCursor() Make the mouse cursor disappear (not only for the current frame) Declaration public static void HideCursor() | Edit this page View Source HideDoodle() Do not display doodled pixels Declaration public static void HideDoodle() | Edit this page View Source IgnoreGizmos(int) Hide all gizmos for given frames long. Declaration public static void IgnoreGizmos(int duration = 0) | Edit this page View Source Initialize() Call this function once to initialize the game. Must be called before any Update function called. Declaration public void Initialize() | Edit this page View Source InvokeFileDropped(string) Invoke OnFileDropped event Declaration protected void InvokeFileDropped(string path) Parameters Type Name Description string path Path of the dropped file | Edit this page View Source InvokeGameQuitting() Invoke the OnGameQuitting event Declaration protected void InvokeGameQuitting() | Edit this page View Source InvokeGameTryingToQuit() Invoke the OnGameTryingToQuit event Declaration protected bool InvokeGameTryingToQuit() Returns Type Description bool True if the game should quit | Edit this page View Source InvokeWindowFocusChanged(bool) Invoke OnGameFocus/OnGameLostFocus event Declaration protected void InvokeWindowFocusChanged(bool focus) | Edit this page View Source IsGamepadKeyHolding(GamepadKey) True if the given gamepad button is currently holding Declaration public static bool IsGamepadKeyHolding(GamepadKey key) | Edit this page View Source IsGamepadLeftStickHolding(Direction4) True if the left gamepad stick is tilting to given direction Declaration public static bool IsGamepadLeftStickHolding(Direction4 direction) | Edit this page View Source IsGamepadRightStickHolding(Direction4) True if the right gamepad stick is tilting to given direction Declaration public static bool IsGamepadRightStickHolding(Direction4 direction) | Edit this page View Source IsKeyboardKeyHolding(KeyboardKey) True if the given keyboard key is currently holding Declaration public static bool IsKeyboardKeyHolding(KeyboardKey key) | Edit this page View Source IsTextureReady(object) True if the given texture instance is ready to use Declaration public static bool IsTextureReady(object texture) | Edit this page View Source LoadFontsIntoPool(string, bool) Load font file into system pool from given folder Declaration public static void LoadFontsIntoPool(string rootPath, bool builtIn) bool builtIn True if the fonts are used for built-in font | Edit this page View Source MakeWindowFocused() Make the application window focused Declaration public static void MakeWindowFocused() | Edit this page View Source OpenUrl(string) Open the given url with OS default application Declaration public static void OpenUrl(string url) | Edit this page View Source PassEffect(int, int) Active screen effect for given frames long. Declaration public static void PassEffect(int effectIndex, int duration = 0) Parameters Type Name Description int effectIndex Use Const.SCREEN_EFFECT_XXXX for this index | Edit this page View Source PassEffect_Greyscale(int) Enable greyscale screen effect Declaration public static void PassEffect_Greyscale(int duration = 0) Examples using AngeliA; namespace AngeliaGame; public class Example { [OnGameUpdate] internal static void OnGameUpdate () { Game.PassEffect_Greyscale(1); } } | Edit this page View Source PassEffect_Invert(int) Enable invert screen effect Declaration public static void PassEffect_Invert(int duration = 0) Examples using AngeliA; namespace AngeliaGame; public class Example { [OnGameUpdate] internal static void OnGameUpdate () { Game.PassEffect_Invert(1); } } | Edit this page View Source PassEffect_RetroDarken(float, float, int) Enable darken screen effect and set the params Declaration public static void PassEffect_RetroDarken(float amount, float step = 8, int duration = 0) Parameters Type Name Description float amount 0 means no darken, 1 means full darken float step How intermittent the darken should be. Default 8 steps. Examples using AngeliA; namespace AngeliaGame; public class Example { [OnGameUpdate] internal static void OnGameUpdate () { Game.PassEffect_RetroDarken( QTest.Float(\"amount\", 0f, 0f, 1f), QTest.Float(\"step\", 8f, 2f, 16f), 1 ); } } | Edit this page View Source PassEffect_RetroLighten(float, float, int) Enable lighten screen effect and set the params Declaration public static void PassEffect_RetroLighten(float amount, float step = 8, int duration = 0) Parameters Type Name Description float amount 0 means no lighten, 1 means full lighten float step How intermittent the lighten should be. Default 8 steps. Examples using AngeliA; namespace AngeliaGame; public class Example { [OnGameUpdate] internal static void OnGameUpdate () { Game.PassEffect_RetroLighten( QTest.Float(\"amount\", 0f, 0f, 1f), QTest.Float(\"step\", 8f, 2f, 16f), 1 ); } } | Edit this page View Source PassEffect_Tint(Color32, int) Enable color tint screen effect and set the params Declaration public static void PassEffect_Tint(Color32 color, int duration = 0) Examples using AngeliA; namespace AngeliaGame; public class Example { [OnGameUpdate] internal static void OnGameUpdate () { var color = new Color32( (byte)QTest.Int(\"r\", 255, 0, 255), (byte)QTest.Int(\"g\", 255, 0, 255), (byte)QTest.Int(\"b\", 255, 0, 255) ); Game.PassEffect_Tint(color, 1); } } | Edit this page View Source PassEffect_Vignette(float, float, float, float, float, int) Enable vignette screen effect and set the params Declaration public static void PassEffect_Vignette(float radius, float feather, float offsetX, float offsetY, float round, int duration = 0) Parameters Type Name Description float radius Size of the circle view. 0 means no view. 1 means the view covers whole screen. float feather How smooth is the edge of the circle view. 0 means sharp edge. 1 means smooth edge. float offsetX Position offset of the circle view. 0 means view's center at left edge of screen. 1 for right edge. float offsetY Position offset of the circle view. 0 means view's center at bottom edge of screen. 1 for top edge. float round How perfect the circle view is. 0 means the aspect ratio is the same with window aspect ratio. 1 means perfect circle. Examples using AngeliA; namespace AngeliaGame; public class Example { [OnGameUpdate] internal static void OnGameUpdate () { Game.PassEffect_Vignette( QTest.Float(\"radius\", 1f, 0f, 1f), QTest.Float(\"feather\", 0f, 0f, 1f), QTest.Float(\"x\", 0f, -1f, 1f), QTest.Float(\"y\", 0f, -1f, 1f), QTest.Float(\"round\", 0f, 0f, 1f), 1 ); } } | Edit this page View Source PauseGame() Pause the game from playing Declaration public static void PauseGame() | Edit this page View Source PauseMusic() Pause the background music Declaration public static void PauseMusic() | Edit this page View Source PlayMusic(int, bool) Load the music file, create the stream and play it as the background music Declaration public static void PlayMusic(int id, bool fromStart = false) Parameters Type Name Description int id ID of the audio bool fromStart True if seek the music to start | Edit this page View Source PlaySound(int, float, float, float) Play a sound Declaration public static void PlaySound(int id, float volume = 1, float pitch = 1, float pan = 0.5) Parameters Type Name Description int id Audio ID | Edit this page View Source PlaySoundAtPosition(int, Int2, float, float) Play a sound like it cames from the given position Declaration public static void PlaySoundAtPosition(int id, Int2 globalPosition, float volume = 1, float pitch = 1) Parameters Type Name Description int id Audio ID Int2 globalPosition Position in global space | Edit this page View Source PngBytesToTexture(byte[]) Create a new instance of texture from a byte array load from png file. Declaration public static object PngBytesToTexture(byte[] bytes) Returns Type Description object Never return null and Don't throw exception. | Edit this page View Source QuitApplication() Make the application quit without any confirmation Declaration public static void QuitApplication() | Edit this page View Source ResetDoodle() Clear the doodle pixels canvas Declaration public static void ResetDoodle() | Edit this page View Source RestartGame() Invoke the OnGameRestart event. The game-play logic will be reset after this is called Declaration public static void RestartGame() | Edit this page View Source SetClipboardText(string) Set the text content of the system clipboard Declaration public static void SetClipboardText(string text) | Edit this page View Source SetCursor(int) Set the appearance of the mouse cursor. Use Const.CURSOR_XXX for the index param Declaration public static void SetCursor(int index) | Edit this page View Source SetCursorToNormal() Set the mouse cursor to default Declaration public static void SetCursorToNormal() | Edit this page View Source SetDoodleOffset(Float2) Set position offset of the doodle pixels. x=1 means right shift the whole screen width. Declaration public static void SetDoodleOffset(Float2 screenOffset) | Edit this page View Source SetDoodleZoom(float) Set zoom amount of the doodle pixels. 1 means general size. 2 means zoom-in to double the size. Declaration public static void SetDoodleZoom(float zoom) | Edit this page View Source SetEffectEnable(int, bool) Make given screen effect enable of disable. Declaration public static void SetEffectEnable(int effectIndex, bool enable) Parameters Type Name Description int effectIndex Use Const.SCREEN_EFFECT_XXXX for this index | Edit this page View Source SetEventWaiting(bool) Set to true to make the application only repaint when a user input happens Declaration public static void SetEventWaiting(bool enable) | Edit this page View Source SetMusicVolume(int) Set volume for the background music (0 means mute, 1000 means loudest) Declaration public static void SetMusicVolume(int volume) | Edit this page View Source SetSoundVolume(int) Set volume for all sound effects Declaration public static void SetSoundVolume(int volume) | Edit this page View Source SetWindowIcon(int) Set the icon of the application window using a loaded artwork sprite from the main sheet Declaration public static void SetWindowIcon(int spriteID) | Edit this page View Source SetWindowMinSize(int) Set the minimal size limitation of the application window Declaration public static void SetWindowMinSize(int size) | Edit this page View Source SetWindowPosition(int, int) Set application window position. (0,0) is top-left corner Declaration public static void SetWindowPosition(int x, int y) | Edit this page View Source SetWindowSize(int, int) Set application window size. Use Game.GetMonitorWidth and Game.GetMonitorHeight to get the size of screen size Declaration public static void SetWindowSize(int x, int y) | Edit this page View Source SetWindowTitle(string) Set to title text of the application window Declaration public static void SetWindowTitle(string title) | Edit this page View Source ShowCursor() Make the mouse cursor appear (not only for the current frame) Declaration public static void ShowCursor() | Edit this page View Source ShowDoodle(int) Display the doodled pixels Declaration public static void ShowDoodle(int duration = 0) | Edit this page View Source StopAllSounds() Stop all sound effects that currently playing Declaration public static void StopAllSounds() | Edit this page View Source StopMusic() Stop the music stream and unload from memory Declaration public static void StopMusic() | Edit this page View Source SyncAudioPool(params string[]) Update audio files between system pool and file Declaration public static void SyncAudioPool(params string[] universeRoots) Parameters Type Name Description string[] universeRoots Folder path of the universe | Edit this page View Source SyncFontsWithPool(string) Reload font file if any font is modified Declaration public static bool SyncFontsWithPool(string rootPath) | Edit this page View Source TextureToPngBytes(object) Encode the given texture instance into png byte array. Declaration public static byte[] TextureToPngBytes(object texture) Returns Type Description byte[] Return [] when invalid. Don't throw exception. | Edit this page View Source UnloadFontsFromPool(bool) Unload fonts from system pool Declaration public static void UnloadFontsFromPool(bool ignoreBuiltIn = true) | Edit this page View Source UnloadTexture(object) Unload the given texture instance from memory Declaration public static void UnloadTexture(object texture) | Edit this page View Source UnpauseGame() Continue game from pausing Declaration public static void UnpauseGame() | Edit this page View Source UnpauseMusic() Resume the background music Declaration public static void UnpauseMusic() | Edit this page View Source Update() Call this function 60 times per second. Only call this after Initialize has been called. Declaration public void Update() | Edit this page View Source _AfterAllLayersUpdate() This function is called after all rendering layer get updated Declaration protected abstract void _AfterAllLayersUpdate() | Edit this page View Source _BeforeAllLayersUpdate() This function is called before any rendering layer get updated Declaration protected abstract void _BeforeAllLayersUpdate() | Edit this page View Source _CenterCursor() Move the mouse cursor to the center of screen. This works when mouse cursor is hidding. Declaration protected abstract void _CenterCursor() | Edit this page View Source _CursorInScreen() True if the mouse cursor is currently inside application window Declaration protected abstract bool _CursorInScreen() | Edit this page View Source _CursorVisible() True if the mouse cursor is currently visible Declaration protected abstract bool _CursorVisible() | Edit this page View Source _DoodleRect(FRect, Color32) Doodle the given color as pixels into the screen-space canvas. Pixels remains on screen until you hide all doodle or reset the canvas. Declaration protected abstract void _DoodleRect(FRect screenRect, Color32 color) Parameters Type Name Description FRect screenRect Rect position in screen space | Edit this page View Source _DoodleWorld(IBlockSquad, FRect, IRect, int, bool, bool, bool, bool) Doodle the given map data on screen based on summary tint from rendering sheet Declaration protected abstract void _DoodleWorld(IBlockSquad squad, FRect screenRect, IRect worldUnitRange, int z, bool ignoreLevel = false, bool ignoreBG = false, bool ignoreEntity = false, bool ignoreElement = true) Parameters Type Name Description IBlockSquad squad Source of the map block data FRect screenRect Position rect in screen space for the given world-unit-range IRect worldUnitRange Rect range on the map in unit space int z Position Z on the map bool ignoreLevel True if level blocks should be ignored bool ignoreBG True if background blocks should be ignored bool ignoreEntity True if entity blocks should be ignored bool ignoreElement True if element blocks should be ignored | Edit this page View Source _DrawGizmosLine(int, int, int, int, int, Color32) Draw a line as gizmos for current frame Declaration protected abstract void _DrawGizmosLine(int startX, int startY, int endX, int endY, int thickness, Color32 color) Parameters Type Name Description int startX Start point of the line in global space int startY Start point of the line in global space int endX End point of the line in global space int endY End point of the line in global space int thickness Thickness in global space Color32 color Color tint | Edit this page View Source _DrawGizmosRect(IRect, Color32) Draw a rectangle as gizmos for current frame Declaration protected abstract void _DrawGizmosRect(IRect rect, Color32 color) Parameters Type Name Description IRect rect Rect position in global space Color32 color Color tint | Edit this page View Source _DrawGizmosRect(IRect, Color32, Color32) Draw a rectangle as gizmos for current frame Declaration protected abstract void _DrawGizmosRect(IRect rect, Color32 colorT, Color32 colorB) Parameters Type Name Description IRect rect Rect position in global space Color32 colorT Color tint Color32 colorB Color tint | Edit this page View Source _DrawGizmosRect(IRect, Color32, Color32, Color32, Color32) Draw a rectangle as gizmos for current frame Declaration protected abstract void _DrawGizmosRect(IRect rect, Color32 colorTL, Color32 colorTR, Color32 colorBL, Color32 colorBR) Parameters Type Name Description IRect rect Rect position in global space Color32 colorTL Color tint Color32 colorTR Color tint Color32 colorBL Color tint Color32 colorBR Color tint | Edit this page View Source _DrawGizmosTexture(IRect, FRect, object, Color32, bool) Draw the given texture as gizmos for current frame Declaration protected abstract void _DrawGizmosTexture(IRect rect, FRect uv, object texture, Color32 tint, bool inverse) Parameters Type Name Description IRect rect Rect position FRect uv Which part of this texture should be draw. (0, 0, 1, 1) means all of them. (0, 0, 0.5f, 1) means left half. Color32 tint Color tint bool inverse True if the texture display as the inversed color of the current rendered pixel on screen. | Edit this page View Source _Effect_SetDarkenParams(float, float) Enable darken screen effect and set the params Declaration protected abstract void _Effect_SetDarkenParams(float amount, float step) Parameters Type Name Description float amount 0 means no darken, 1 means full darken float step How intermittent the darken should be. Default 8 steps. Examples using AngeliA; namespace AngeliaGame; public class Example { [OnGameUpdate] internal static void OnGameUpdate () { Game.PassEffect_RetroDarken( QTest.Float(\"amount\", 0f, 0f, 1f), QTest.Float(\"step\", 8f, 2f, 16f), 1 ); } } | Edit this page View Source _Effect_SetLightenParams(float, float) Enable lighten screen effect and set the params Declaration protected abstract void _Effect_SetLightenParams(float amount, float step) Parameters Type Name Description float amount 0 means no lighten, 1 means full lighten float step How intermittent the lighten should be. Default 8 steps. Examples using AngeliA; namespace AngeliaGame; public class Example { [OnGameUpdate] internal static void OnGameUpdate () { Game.PassEffect_RetroLighten( QTest.Float(\"amount\", 0f, 0f, 1f), QTest.Float(\"step\", 8f, 2f, 16f), 1 ); } } | Edit this page View Source _Effect_SetTintParams(Color32) Enable color tint screen effect and set the params Declaration protected abstract void _Effect_SetTintParams(Color32 color) Examples using AngeliA; namespace AngeliaGame; public class Example { [OnGameUpdate] internal static void OnGameUpdate () { var color = new Color32( (byte)QTest.Int(\"r\", 255, 0, 255), (byte)QTest.Int(\"g\", 255, 0, 255), (byte)QTest.Int(\"b\", 255, 0, 255) ); Game.PassEffect_Tint(color, 1); } } | Edit this page View Source _Effect_SetVignetteParams(float, float, float, float, float) Enable vignette screen effect and set the params Declaration protected abstract void _Effect_SetVignetteParams(float radius, float feather, float offsetX, float offsetY, float round) Parameters Type Name Description float radius Size of the circle view. 0 means no view. 1 means the view covers whole screen. float feather How smooth is the edge of the circle view. 0 means sharp edge. 1 means smooth edge. float offsetX Position offset of the circle view. 0 means view's center at left edge of screen. 1 for right edge. float offsetY Position offset of the circle view. 0 means view's center at bottom edge of screen. 1 for top edge. float round How perfect the circle view is. 0 means the aspect ratio is the same with window aspect ratio. 1 means perfect circle. Examples using AngeliA; namespace AngeliaGame; public class Example { [OnGameUpdate] internal static void OnGameUpdate () { Game.PassEffect_Vignette( QTest.Float(\"radius\", 1f, 0f, 1f), QTest.Float(\"feather\", 0f, 0f, 1f), QTest.Float(\"x\", 0f, -1f, 1f), QTest.Float(\"y\", 0f, -1f, 1f), QTest.Float(\"round\", 0f, 0f, 1f), 1 ); } } | Edit this page View Source _FillPixelsIntoTexture(Color32[], object) Set the given pixel data into the given texture instance. Declaration protected abstract void _FillPixelsIntoTexture(Color32[] pixels, object texture) | Edit this page View Source _GetCharSprite(int, char, out CharSprite) Get artwork sprite for rendering a text character Declaration protected abstract bool _GetCharSprite(int fontIndex, char c, out CharSprite result) Returns Type Description bool True if the sprite is successfuly required | Edit this page View Source _GetClipboardText() Text content of the current system clipboard Declaration protected abstract string _GetClipboardText() | Edit this page View Source _GetCurrentMonitor() Get index of the monitor which this application window currently in Declaration protected abstract int _GetCurrentMonitor() | Edit this page View Source _GetCurrentMusicID() Audio ID of the current loaded background music Declaration protected abstract int _GetCurrentMusicID() | Edit this page View Source _GetEffectEnable(int) True if the given screen effect is currently enabled. Declaration protected abstract bool _GetEffectEnable(int effectIndex) Parameters Type Name Description int effectIndex Use Const.SCREEN_EFFECT_XXXX for this index | Edit this page View Source _GetFontCount() Total count of loaded fonts Declaration protected abstract int _GetFontCount() | Edit this page View Source _GetGamepadLeftStickDirection() Get the specific direction of the left gamepad stick Declaration protected abstract Float2 _GetGamepadLeftStickDirection() | Edit this page View Source _GetGamepadRightStickDirection() Get the specific direction of the right gamepad stick Declaration protected abstract Float2 _GetGamepadRightStickDirection() | Edit this page View Source _GetMonitorHeight(int) Get height of the current monitor. Use Game.CurrentMonitor to get the monitor index Declaration protected abstract int _GetMonitorHeight(int monitor) | Edit this page View Source _GetMonitorWidth(int) Get width of the current monitor. Use Game.CurrentMonitor to get the monitor index Declaration protected abstract int _GetMonitorWidth(int monitor) | Edit this page View Source _GetMouseScreenPosition() Mouse position in screen space. (0,0) means top-left corner Declaration protected abstract Int2 _GetMouseScreenPosition() | Edit this page View Source _GetMouseScrollDelta() Mouse wheel scrolling value at current frame. Return negative value when the page scrolls down (the content appears to move upward) Declaration protected abstract int _GetMouseScrollDelta() | Edit this page View Source _GetPixelsFromTexture(object) Create a new instance of Color32 array from the given texture Declaration protected abstract Color32[] _GetPixelsFromTexture(object texture) Returns Type Description Color32[] Return [] when invalid. Don't throw exception. | Edit this page View Source _GetResizedTexture(object, int, int, bool) Create a new instance of texture which is the resized version of the given texture. Declaration protected abstract object _GetResizedTexture(object texture, int newWidth, int newHeight, bool nearestNeighbor = true) bool nearestNeighbor True if the misaligned pixels should be averaged with it's nearby pixels Returns Type Description object Return null if invalid. Don't throw exception. | Edit this page View Source _GetScreenHeight() Height of the application window Declaration protected abstract int _GetScreenHeight() | Edit this page View Source _GetScreenWidth() Width of the application window Declaration protected abstract int _GetScreenWidth() | Edit this page View Source _GetTextureFromPixels(Color32[], int, int) Create a new instance of texture from given pixels data. Declaration protected abstract object _GetTextureFromPixels(Color32[] pixels, int width, int height) Parameters Type Name Description Color32[] pixels Pixel data. 0 means bottom-left corner. 1 makes it goes right for 1 pixel. int width Width of the pixel data in pixel int height Heigh of the pixel data in pixel Returns Type Description object Never return null and Don't throw exception. | Edit this page View Source _GetTextureID(object) Get internal ID of the given texture instance. Declaration protected abstract uint? _GetTextureID(object texture) | Edit this page View Source _GetTextureSize(object) Get the size in pixel of the given texture instance Declaration protected abstract Int2 _GetTextureSize(object texture) Returns Type Description Int2 Return default when invalid. Don't throw exception. | Edit this page View Source _GetWindowDecorated() True if the application window is currently having Title bar and border frame Declaration protected abstract bool _GetWindowDecorated() | Edit this page View Source _GetWindowMaximized() True if the application window is currently maximized Declaration protected abstract bool _GetWindowMaximized() | Edit this page View Source _GetWindowMinimized() True if the application window is currently minimized Declaration protected abstract bool _GetWindowMinimized() | Edit this page View Source _GetWindowPosition() Get application window position. (0,0) is top-left corner Declaration protected abstract Int2 _GetWindowPosition() | Edit this page View Source _GetWindowResizable() True if the application window can be resize by the user Declaration protected abstract bool _GetWindowResizable() | Edit this page View Source _GetWindowTopmost() True if the application window renders on top of all other windows Declaration protected abstract bool _GetWindowTopmost() | Edit this page View Source _HideCursor() Make the mouse cursor disappear (not only for the current frame) Declaration protected abstract void _HideCursor() | Edit this page View Source _IgnoreGizmos(int) Hide all gizmos for given frames long. Declaration protected abstract void _IgnoreGizmos(int duration = 0) | Edit this page View Source _IsGamepadAvailable() True if any gamepad device is currently available to use Declaration protected abstract bool _IsGamepadAvailable() | Edit this page View Source _IsGamepadKeyHolding(GamepadKey) True if the given gamepad button is currently holding Declaration protected abstract bool _IsGamepadKeyHolding(GamepadKey key) | Edit this page View Source _IsGamepadLeftStickHolding(Direction4) True if the left gamepad stick is tilting to given direction Declaration protected abstract bool _IsGamepadLeftStickHolding(Direction4 direction) | Edit this page View Source _IsGamepadRightStickHolding(Direction4) True if the right gamepad stick is tilting to given direction Declaration protected abstract bool _IsGamepadRightStickHolding(Direction4 direction) | Edit this page View Source _IsKeyboardAvailable() True is the keyboard device is currently available to use Declaration protected abstract bool _IsKeyboardAvailable() | Edit this page View Source _IsKeyboardKeyHolding(KeyboardKey) True if the given keyboard key is currently holding Declaration protected abstract bool _IsKeyboardKeyHolding(KeyboardKey key) | Edit this page View Source _IsMouseAvailable() True if the mouse device is currently available to use Declaration protected abstract bool _IsMouseAvailable() | Edit this page View Source _IsMouseLeftHolding() True if the mouse left button is currently holding Declaration protected abstract bool _IsMouseLeftHolding() | Edit this page View Source _IsMouseMidHolding() True if the mouse middle button is currently holding Declaration protected abstract bool _IsMouseMidHolding() | Edit this page View Source _IsMouseRightHolding() True if the mouse right button is currently holding Declaration protected abstract bool _IsMouseRightHolding() | Edit this page View Source _IsMusicPlaying() True if the background music is currently playing Declaration protected abstract bool _IsMusicPlaying() | Edit this page View Source _IsTextureReady(object) True if the given texture instance is ready to use Declaration protected abstract bool _IsTextureReady(object texture) | Edit this page View Source _IsWindowFocused() True if the application window is currently focused Declaration protected abstract bool _IsWindowFocused() | Edit this page View Source _LoadSound(string) Load a audio file as sound effect Declaration protected abstract object _LoadSound(string filePath) | Edit this page View Source _LoadSoundAlias(object) Copy a sound instance that shares the same audio data with given sound object Declaration protected abstract object _LoadSoundAlias(object source) | Edit this page View Source _MakeWindowFocused() Make the application window focused Declaration protected abstract void _MakeWindowFocused() | Edit this page View Source _OnLayerUpdate(int, Cell[], int) This function holds the logic to draw all rendering cells for the current frame. Declaration protected abstract void _OnLayerUpdate(int layerIndex, Cell[] cells, int cellCount) Parameters Type Name Description int layerIndex Index of the rendering layer Cell[] cells All rendering cells that may need to be drawn int cellCount How many rendering cells need to be drawn | Edit this page View Source _OpenUrl(string) Open the given url with OS default application Declaration protected abstract void _OpenUrl(string url) | Edit this page View Source _PauseMusic() Pause the background music Declaration protected abstract void _PauseMusic() | Edit this page View Source _PlayMusic(int, bool) Load the music file, create the stream and play it as the background music Declaration protected abstract void _PlayMusic(int id, bool fromStart) Parameters Type Name Description int id ID of the audio bool fromStart True if seek the music to start | Edit this page View Source _PlaySound(int, float, float, float) Play a sound Declaration protected abstract void _PlaySound(int id, float volume, float pitch, float pan) Parameters Type Name Description int id Audio ID | Edit this page View Source _PngBytesToTexture(byte[]) Create a new instance of texture from a byte array load from png file. Declaration protected abstract object _PngBytesToTexture(byte[] bytes) Returns Type Description object Never return null and Don't throw exception. | Edit this page View Source _QuitApplication() Make the application quit without any confirmation Declaration protected abstract void _QuitApplication() | Edit this page View Source _ResetDoodle() Clear the doodle pixels canvas Declaration protected abstract void _ResetDoodle() | Edit this page View Source _SetClipboardText(string) Set the text content of the system clipboard Declaration protected abstract void _SetClipboardText(string text) | Edit this page View Source _SetCursor(int) Set the appearance of the mouse cursor. Use Const.CURSOR_XXX for the index param Declaration protected abstract void _SetCursor(int index) | Edit this page View Source _SetCursorToNormal() Set the mouse cursor to default Declaration protected abstract void _SetCursorToNormal() | Edit this page View Source _SetDoodleOffset(Float2) Set position offset of the doodle pixels. x=1 means right shift the whole screen width. Declaration protected abstract void _SetDoodleOffset(Float2 screenOffset) | Edit this page View Source _SetDoodleZoom(float) Set zoom amount of the doodle pixels. 1 means general size. 2 means zoom-in to double the size. Declaration protected abstract void _SetDoodleZoom(float zoom) | Edit this page View Source _SetEffectEnable(int, bool) Make given screen effect enable of disable. Declaration protected abstract void _SetEffectEnable(int effectIndex, bool enable) Parameters Type Name Description int effectIndex Use Const.SCREEN_EFFECT_XXXX for this index | Edit this page View Source _SetEventWaiting(bool) Set to true to make the application only repaint when a user input happens Declaration protected abstract void _SetEventWaiting(bool enable) | Edit this page View Source _SetFullscreen(bool) Set to true to make the application fullscreen Declaration protected abstract void _SetFullscreen(bool fullScreen) | Edit this page View Source _SetMusicVolume(int) Set volume for the background music (0 means mute, 1000 means loudest) Declaration protected abstract void _SetMusicVolume(int volume) | Edit this page View Source _SetSoundVolume(int) Set volume for all sound effects Declaration protected abstract void _SetSoundVolume(int volume) | Edit this page View Source _SetWindowDecorated(bool) Set to true to make the application window have title bar and border frame Declaration protected abstract void _SetWindowDecorated(bool decorated) | Edit this page View Source _SetWindowIcon(int) Set the icon of the application window using a loaded artwork sprite from the main sheet Declaration protected abstract void _SetWindowIcon(int spriteID) | Edit this page View Source _SetWindowMaximized(bool) Set to true to make the application window is currently maximized Declaration protected abstract void _SetWindowMaximized(bool maximized) | Edit this page View Source _SetWindowMinSize(int) Set the minimal size limitation of the application window Declaration protected abstract void _SetWindowMinSize(int size) | Edit this page View Source _SetWindowMinimized(bool) Set to true to make the application window is currently minimized Declaration protected abstract void _SetWindowMinimized(bool minimized) | Edit this page View Source _SetWindowPosition(int, int) Set application window position. (0,0) is top-left corner Declaration protected abstract void _SetWindowPosition(int x, int y) | Edit this page View Source _SetWindowResizable(bool) Set to true to make the application window can be resize by the user Declaration protected abstract void _SetWindowResizable(bool resizable) | Edit this page View Source _SetWindowSize(int, int) Set application window size. Use Game.GetMonitorWidth and Game.GetMonitorHeight to get the size of screen size Declaration protected abstract void _SetWindowSize(int x, int y) | Edit this page View Source _SetWindowTitle(string) Set to title text of the application window Declaration protected abstract void _SetWindowTitle(string title) | Edit this page View Source _SetWindowTopmost(bool) Set to true to make the application window renders on top of all other windows Declaration protected abstract void _SetWindowTopmost(bool topmost) | Edit this page View Source _ShowCursor() Make the mouse cursor appear (not only for the current frame) Declaration protected abstract void _ShowCursor() | Edit this page View Source _StopAllSounds() Stop all sound effects that currently playing Declaration protected abstract void _StopAllSounds() | Edit this page View Source _StopMusic() Stop the music stream and unload from memory Declaration protected abstract void _StopMusic() | Edit this page View Source _TextureToPngBytes(object) Encode the given texture instance into png byte array. Declaration protected abstract byte[] _TextureToPngBytes(object texture) Returns Type Description byte[] Return [] when invalid. Don't throw exception. | Edit this page View Source _UnPauseMusic() Resume the background music Declaration protected abstract void _UnPauseMusic() | Edit this page View Source _UnloadMusic(object) Unload the bgm object from memory Declaration protected abstract void _UnloadMusic(object music) | Edit this page View Source _UnloadSound(SoundData) Unload the sound object from memory Declaration protected abstract void _UnloadSound(SoundData sound) | Edit this page View Source _UnloadTexture(object) Unload the given texture instance from memory Declaration protected abstract void _UnloadTexture(object texture) Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.Gamekey.html": {
    "href": "api/AngeliA.Gamekey.html",
    "title": "Enum Gamekey | AngeliA",
    "summary": "Enum Gamekey Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public enum Gamekey Fields Name Description Action Down Jump Left Right Select Start Up Extension Methods Extension.GetDirection(Gamekey) Extension.Next<Gamekey>(Gamekey) Extension.Prev<Gamekey>(Gamekey) Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.GamepadKey.html": {
    "href": "api/AngeliA.GamepadKey.html",
    "title": "Enum GamepadKey | AngeliA",
    "summary": "Enum GamepadKey Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public enum GamepadKey Fields Name Description DpadDown DpadLeft DpadRight DpadUp East LeftShoulder LeftStick LeftTrigger North RightShoulder RightStick RightTrigger Select South Start West Extension Methods Extension.Next<GamepadKey>(GamepadKey) Extension.Prev<GamepadKey>(GamepadKey) Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.GenericDialogUI.html": {
    "href": "api/AngeliA.GenericDialogUI.html",
    "title": "Class GenericDialogUI | AngeliA",
    "summary": "Class GenericDialogUI Dialog UI entity for general purpose Implements IMapItem IWindowEntityUI Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax [Entity.StageOrder(4097)] [Entity.Capacity(1, 1)] public class GenericDialogUI : MenuUI, IMapItem, IWindowEntityUI Constructors | Edit this page View Source GenericDialogUI() Declaration public GenericDialogUI() Properties | Edit this page View Source BlockEvent True if this UI blocks mouse button event Declaration protected override bool BlockEvent { get; } Overrides MenuUI.BlockEvent | Edit this page View Source Instance Global instance of this entity Declaration public static GenericDialogUI Instance { get; } | Edit this page View Source InvokingData Custom data for internal logic Declaration public static object InvokingData { get; } | Edit this page View Source ShowingDialog True if the dialog is currently displaying Declaration public static bool ShowingDialog { get; } Methods | Edit this page View Source DrawMenu() Declaration protected override void DrawMenu() Overrides MenuUI.DrawMenu() | Edit this page View Source FirstUpdate() [1/4] This function is called every frame when entity is in stage. Prioritize using this function to fill collider in to physics system. Declaration public override void FirstUpdate() Overrides EntityUI.FirstUpdate() | Edit this page View Source LateUpdate() [4/4] This function is called every frame when entity is in stage. Prioritize using this function to render the entity. Declaration public override void LateUpdate() Overrides EntityUI.LateUpdate() | Edit this page View Source OnActivated() This function is called when entity enter the stage Declaration public override void OnActivated() Overrides MenuUI.OnActivated() | Edit this page View Source OnInactivated() This function is called when entity leave the stage Declaration public override void OnInactivated() Overrides Entity.OnInactivated() | Edit this page View Source SetCustomData(object, object, object) Set custom data for the specified item. Get this data from GenericDialogUI.InvokingData inside the \"action\" from SpawnDialog funtion Declaration public static void SetCustomData(object dataA = null, object dataB = null, object dataC = null) | Edit this page View Source SetItemTint(Color32) Set content tint of specified item Declaration public static void SetItemTint(Color32 tintA) | Edit this page View Source SetItemTint(Color32, Color32) Set content tint of specified item Declaration public static void SetItemTint(Color32 tintA, Color32 tintB) | Edit this page View Source SetItemTint(Color32, Color32, Color32) Set content tint of specified item Declaration public static void SetItemTint(Color32 tintA, Color32 tintB, Color32 tintC) | Edit this page View Source SpawnDialog(string, string, Action) Start a dialog with buttons with solid-looking part Declaration public static void SpawnDialog(string message, string label, Action action) Parameters Type Name Description string message Text message display on top string label Label content of the button Action action This function is called when the button is pressed | Edit this page View Source SpawnDialog(string, string, Action, string, Action) Start a dialog with buttons with solid-looking part Declaration public static void SpawnDialog(string message, string labelA, Action actionA, string labelB, Action actionB) Parameters Type Name Description string message Text message display on top string labelA Label content of the button Action actionA This function is called when the button is pressed string labelB Label content of the button Action actionB This function is called when the button is pressed | Edit this page View Source SpawnDialog(string, string, Action, string, Action, string, Action) Start a dialog with buttons with solid-looking part Declaration public static void SpawnDialog(string message, string labelA, Action actionA, string labelB, Action actionB, string labelC, Action actionC) Parameters Type Name Description string message Text message display on top string labelA Label content of the button Action actionA This function is called when the button is pressed string labelB Label content of the button Action actionB This function is called when the button is pressed string labelC Label content of the button Action actionC This function is called when the button is pressed | Edit this page View Source SpawnDialog_Button(string, string, Action) Start a dialog with buttons with solid-looking part Declaration public static void SpawnDialog_Button(string message, string label, Action action) Parameters Type Name Description string message Text message display on top string label Label content of the button Action action This function is called when the button is pressed | Edit this page View Source SpawnDialog_Button(string, string, Action, string, Action) Start a dialog with buttons with solid-looking part Declaration public static void SpawnDialog_Button(string message, string labelA, Action actionA, string labelB, Action actionB) Parameters Type Name Description string message Text message display on top string labelA Label content of the button Action actionA This function is called when the button is pressed string labelB Label content of the button Action actionB This function is called when the button is pressed | Edit this page View Source SpawnDialog_Button(string, string, Action, string, Action, string, Action) Start a dialog with buttons with solid-looking part Declaration public static void SpawnDialog_Button(string message, string labelA, Action actionA, string labelB, Action actionB, string labelC, Action actionC) Parameters Type Name Description string message Text message display on top string labelA Label content of the button Action actionA This function is called when the button is pressed string labelB Label content of the button Action actionB This function is called when the button is pressed string labelC Label content of the button Action actionC This function is called when the button is pressed Implements IMapItem IWindowEntityUI Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.GenericPopupUI.html": {
    "href": "api/AngeliA.GenericPopupUI.html",
    "title": "Class GenericPopupUI | AngeliA",
    "summary": "Class GenericPopupUI Popup menu UI for general perpose Implements IMapItem IWindowEntityUI Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax [Entity.StageOrder(4096)] [Entity.Capacity(1, 1)] public class GenericPopupUI : EntityUI, IMapItem, IWindowEntityUI Constructors | Edit this page View Source GenericPopupUI() Declaration public GenericPopupUI() Properties | Edit this page View Source BackgroundRect Rect position of the background in global space Declaration public IRect BackgroundRect { get; } | Edit this page View Source BlockEvent True if this UI blocks mouse button event Declaration protected override bool BlockEvent { get; } Overrides EntityUI.BlockEvent | Edit this page View Source CurrentSubLevel Recursive layer count of the sub-menu if a new item is added Declaration public int CurrentSubLevel { get; set; } | Edit this page View Source Instance Global single instance of this entity Declaration public static GenericPopupUI Instance { get; } | Edit this page View Source InvokingItemData Custom data of the currently pressed item Declaration public static object InvokingItemData { get; } | Edit this page View Source InvokingItemlabel Label of the currently pressed item Declaration public static string InvokingItemlabel { get; } | Edit this page View Source MenuID Custom ID of the menu Declaration public int MenuID { get; } | Edit this page View Source OffsetX Position offset X in global space between left edge of the camera to the left edge of this menu Declaration public int OffsetX { get; set; } | Edit this page View Source OffsetY Position offset X in global space between bottom edge of the camera to the bottom edge of this menu Declaration public int OffsetY { get; set; } | Edit this page View Source ShowingPopup True is the menu is currently displaying Declaration public static bool ShowingPopup { get; } Methods | Edit this page View Source AddItem(string, Action, bool, bool, object, bool) Add a new item (call BeginPopup first) Declaration public static void AddItem(string label, Action action, bool enabled = true, bool @checked = false, object data = null, bool editable = false) Parameters Type Name Description string label Text content inside this item Action action This function is called when the item is pressed bool enabled True if this item can be press bool checked True if there should be a check mark display on this item object data Custom data for this item. Get this data with GenericPopupUI.InvokingItemData inside the \"action\" from param bool editable True if this label can be edit by the user | Edit this page View Source AddItem(string, int, Direction2, int, Action, bool, bool, object, bool) Add a new item (call BeginPopup first) Declaration public static void AddItem(string label, int icon, Direction2 iconPosition, int checkMarkSprite, Action action, bool enabled = true, bool @checked = false, object data = null, bool editable = false) Parameters Type Name Description string label Text content inside this item int icon Artwork sprite of this item Direction2 iconPosition Position offset of this icon int checkMarkSprite Artwork sprite of the check mark Action action This function is called when the item is pressed bool enabled True if this item can be press bool checked True if there should be a check mark display on this item object data Custom data for this item. Get this data with GenericPopupUI.InvokingItemData inside the \"action\" from param bool editable True if this label can be edit by the user | Edit this page View Source AddSeparator() Add a empty line (call BeginPopup first) Declaration public static void AddSeparator() | Edit this page View Source BeginPopup(Int2, int) Start to make a new menu list Declaration public static void BeginPopup(Int2 globalOffset, int menuID = 0) | Edit this page View Source BeginPopup(int) Start to make a new menu list Declaration public static void BeginPopup(int menuID = 0) | Edit this page View Source BeginSubItem() Start to make a sub menu Declaration public static void BeginSubItem() | Edit this page View Source ClearItems() Remove all items inside the current popup menu Declaration public static void ClearItems() | Edit this page View Source ClosePopup() Close current open popup menu Declaration public static void ClosePopup() | Edit this page View Source EndSubItem() Stop making a sub menu Declaration public static void EndSubItem() | Edit this page View Source FirstUpdate() [1/4] This function is called every frame when entity is in stage. Prioritize using this function to fill collider in to physics system. Declaration public override void FirstUpdate() Overrides EntityUI.FirstUpdate() | Edit this page View Source OnActivated() This function is called when entity enter the stage Declaration public override void OnActivated() Overrides Entity.OnActivated() | Edit this page View Source OnInactivated() This function is called when entity leave the stage Declaration public override void OnInactivated() Overrides Entity.OnInactivated() | Edit this page View Source SetTint(Color32, Color32) Set color tint for the popup menu ui Declaration public static void SetTint(Color32 labelTint, Color32 iconTint) | Edit this page View Source UpdateUI() Declaration public override void UpdateUI() Overrides EntityUI.UpdateUI() Implements IMapItem IWindowEntityUI Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.GlobalGravityAttribute.html": {
    "href": "api/AngeliA.GlobalGravityAttribute.html",
    "title": "Class GlobalGravityAttribute | AngeliA",
    "summary": "Class GlobalGravityAttribute The gravity value applys on all rigidbody Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax [AttributeUsage(AttributeTargets.Assembly, AllowMultiple = true)] public class GlobalGravityAttribute : Attribute Constructors | Edit this page View Source GlobalGravityAttribute(int) The gravity value applys on all rigidbody Declaration public GlobalGravityAttribute(int gravity) Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.GlobalItemCombinationAttribute-1.html": {
    "href": "api/AngeliA.GlobalItemCombinationAttribute-1.html",
    "title": "Class GlobalItemCombinationAttribute<I0> | AngeliA",
    "summary": "Class GlobalItemCombinationAttribute<I0> Define a item combination to craft the item. Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax [AttributeUsage(AttributeTargets.Assembly, AllowMultiple = true)] public class GlobalItemCombinationAttribute<I0> : BasicGlobalItemCombinationAttribute Type Parameters Name Description I0 Constructors | Edit this page View Source GlobalItemCombinationAttribute(string, int, string, string, string, string, string, string, string) Define a item combination to craft the item. Declaration public GlobalItemCombinationAttribute(string result, int count = 1, string keepId0 = \"\", string keepId1 = \"\", string keepId2 = \"\", string keepId3 = \"\", string extraB = \"\", string extraC = \"\", string extraD = \"\") int count How many item does it craft at once string keepId0 Do not consume this item string keepId1 Do not consume this item string keepId2 Do not consume this item string keepId3 Do not consume this item string extraB Use this if the item is not based on class string extraC Use this if the item is not based on class string extraD Use this if the item is not based on class Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.GlobalItemCombinationAttribute-2.html": {
    "href": "api/AngeliA.GlobalItemCombinationAttribute-2.html",
    "title": "Class GlobalItemCombinationAttribute<I0, I1> | AngeliA",
    "summary": "Class GlobalItemCombinationAttribute<I0, I1> Define a item combination to craft the item. Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax [AttributeUsage(AttributeTargets.Assembly, AllowMultiple = true)] public class GlobalItemCombinationAttribute<I0, I1> : BasicGlobalItemCombinationAttribute Type Parameters Name Description I0 I1 Constructors | Edit this page View Source GlobalItemCombinationAttribute(string, int, string, string, string, string, string, string) Define a item combination to craft the item. Declaration public GlobalItemCombinationAttribute(string result, int count = 1, string keepId0 = \"\", string keepId1 = \"\", string keepId2 = \"\", string keepId3 = \"\", string extraC = \"\", string extraD = \"\") int count How many item does it craft at once string keepId0 Do not consume this item string keepId1 Do not consume this item string keepId2 Do not consume this item string keepId3 Do not consume this item string extraC Use this if the item is not based on class string extraD Use this if the item is not based on class Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.GlobalItemCombinationAttribute-3.html": {
    "href": "api/AngeliA.GlobalItemCombinationAttribute-3.html",
    "title": "Class GlobalItemCombinationAttribute<I0, I1, I2> | AngeliA",
    "summary": "Class GlobalItemCombinationAttribute<I0, I1, I2> Define a item combination to craft the item. Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax [AttributeUsage(AttributeTargets.Assembly, AllowMultiple = true)] public class GlobalItemCombinationAttribute<I0, I1, I2> : BasicGlobalItemCombinationAttribute Type Parameters Name Description I0 I1 I2 Constructors | Edit this page View Source GlobalItemCombinationAttribute(string, int, string, string, string, string, string) Define a item combination to craft the item. Declaration public GlobalItemCombinationAttribute(string result, int count = 1, string keepId0 = \"\", string keepId1 = \"\", string keepId2 = \"\", string keepId3 = \"\", string extraD = \"\") int count How many item does it craft at once string keepId0 Do not consume this item string keepId1 Do not consume this item string keepId2 Do not consume this item string keepId3 Do not consume this item string extraD Use this if the item is not based on class Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.GlobalItemCombinationAttribute-4.html": {
    "href": "api/AngeliA.GlobalItemCombinationAttribute-4.html",
    "title": "Class GlobalItemCombinationAttribute<I0, I1, I2, I3> | AngeliA",
    "summary": "Class GlobalItemCombinationAttribute<I0, I1, I2, I3> Define a item combination to craft the item. Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax [AttributeUsage(AttributeTargets.Assembly, AllowMultiple = true)] public class GlobalItemCombinationAttribute<I0, I1, I2, I3> : BasicGlobalItemCombinationAttribute Type Parameters Name Description I0 I1 I2 I3 Constructors | Edit this page View Source GlobalItemCombinationAttribute(string, int, string, string, string, string) Define a item combination to craft the item. Declaration public GlobalItemCombinationAttribute(string result, int count = 1, string keepId0 = \"\", string keepId1 = \"\", string keepId2 = \"\", string keepId3 = \"\") int count How many item does it craft at once string keepId0 Do not consume this item string keepId1 Do not consume this item string keepId2 Do not consume this item string keepId3 Do not consume this item Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.GlobalItemCombinationAttribute.html": {
    "href": "api/AngeliA.GlobalItemCombinationAttribute.html",
    "title": "Class GlobalItemCombinationAttribute | AngeliA",
    "summary": "Class GlobalItemCombinationAttribute Define a item combination to craft the item. Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax [AttributeUsage(AttributeTargets.Assembly, AllowMultiple = true)] public class GlobalItemCombinationAttribute : BasicGlobalItemCombinationAttribute Constructors | Edit this page View Source GlobalItemCombinationAttribute(string, int, string, string, string, string, string, string, string, string) Define a item combination to craft the item. Declaration public GlobalItemCombinationAttribute(string result, int count = 1, string keepId0 = \"\", string keepId1 = \"\", string keepId2 = \"\", string keepId3 = \"\", string extraA = \"\", string extraB = \"\", string extraC = \"\", string extraD = \"\") int count How many item does it craft at once string keepId0 Do not consume this item string keepId1 Do not consume this item string keepId2 Do not consume this item string keepId3 Do not consume this item string extraA Use this if the item is not based on class string extraB Use this if the item is not based on class string extraC Use this if the item is not based on class string extraD Use this if the item is not based on class Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.GroupAnimationHolder.html": {
    "href": "api/AngeliA.GroupAnimationHolder.html",
    "title": "Class GroupAnimationHolder | AngeliA",
    "summary": "Class GroupAnimationHolder Display animation from artwork sheet Implements IMapItem Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public class GroupAnimationHolder : Entity, IMapItem Methods | Edit this page View Source BeforeUpdate() [2/4] This function is called every frame when entity is in stage. Prioritize using this function to update physics logic. Declaration public override sealed void BeforeUpdate() Overrides Entity.BeforeUpdate() | Edit this page View Source Follow(Entity) Makes the holder follow the target all the time Declaration public void Follow(Entity target) | Edit this page View Source LateUpdate() [4/4] This function is called every frame when entity is in stage. Prioritize using this function to render the entity. Declaration public override void LateUpdate() Overrides Entity.LateUpdate() | Edit this page View Source OnActivated() This function is called when entity enter the stage Declaration public override void OnActivated() Overrides Entity.OnActivated() | Edit this page View Source Spawn(int, int, int, int, int, int, int) Create a new animation to the stage Declaration public static GroupAnimationHolder Spawn(int groupID, int x, int y, int renderLayer = 3, int rotation1000 = 0, int rotationSpeed = 0, int scale = 1000) Parameters Type Name Description int groupID Artwork sprite group ID int x Position X in global space int y Position Y in global space int renderLayer Which rendering layer does it renders into int rotation1000 Initialize rotation (0 means 0°, 1000 means 1°) int rotationSpeed Speed of the rotation (0 means 0°, 1 means 1°) Returns Type Description GroupAnimationHolder Instance of the holder | Edit this page View Source Spawn(int, int, int, int, int, int, int, bool, Color32, int, int) Create a new animation to the stage Declaration public static GroupAnimationHolder Spawn(int groupID, int x, int y, int rotation1000, int rotationSpeed, int duration, int framePerSprite, bool loop, Color32 tint, int z = 2147483646, int renderLayer = 3) Parameters Type Name Description int groupID Artwork sprite group ID int x Position X in global space int y Position Y in global space int rotation1000 Initialize rotation (0 means 0°, 1000 means 1°) int rotationSpeed Speed of the rotation (0 means 0°, 1 means 1°) int duration How long this animation is in frame. Set to -1 to get duration from artwork sprite group int framePerSprite How long does a single sprite takes in frame bool loop True if the animation loops Color32 tint Color tint int z Z value for sort rendering cells int renderLayer Which rendering layer does it renders into Returns Type Description GroupAnimationHolder Instance of the holder | Edit this page View Source Spawn(int, int, int, int, int, int, int, int, int, int, int, bool, Color32, int, int) Create a new animation to the stage Declaration public static GroupAnimationHolder Spawn(int groupID, int x, int y, int width, int height, int pivotX, int pivotY, int rotation1000, int rotationSpeed, int duration, int framePerSprite, bool loop, Color32 tint, int z = 2147483646, int renderLayer = 3) Parameters Type Name Description int groupID Artwork sprite group ID int x Position X in global space int y Position Y in global space int width Size X in global space int height Size Y in global space int pivotX Pivot X of the artwork sprite int pivotY Pivot Y of the artwork sprite int rotation1000 Initialize rotation (0 means 0°, 1000 means 1°) int rotationSpeed Speed of the rotation (0 means 0°, 1 means 1°) int duration How long this animation is in frame. Set to -1 to get duration from artwork sprite group int framePerSprite How long does a single sprite takes in frame bool loop True if the animation loops Color32 tint Color tint int z Z value for sort rendering cells int renderLayer Which rendering layer does it renders into Returns Type Description GroupAnimationHolder Instance of the holder Implements IMapItem Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.Hair.html": {
    "href": "api/AngeliA.Hair.html",
    "title": "Class Hair | AngeliA",
    "summary": "Class Hair Hair gadget for pose styled characters Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public abstract class Hair : BodyGadget Properties | Edit this page View Source DropMotionAmountForBraid Amount of the braid's animation generate when character rise and drop (0 means 0%, 1000 means 100%) Declaration protected virtual int DropMotionAmountForBraid { get; } | Edit this page View Source FlowAmountX Amount of the horizontal flow animation generate from character's movements (0 means 0%, 1000 means 100%) Declaration protected virtual int FlowAmountX { get; } | Edit this page View Source FlowAmountY Amount of the vertical flow animation generate from character's movements (0 means 0%, 1000 means 100%) Declaration protected virtual int FlowAmountY { get; } | Edit this page View Source FlowMotionAmountForBraid Amount of the braid's motion animation for hairs flowing in air (0 means 0%, 1000 means 100%) Declaration protected virtual int FlowMotionAmountForBraid { get; } | Edit this page View Source ForceBackOnFlowForBraid Set to true will make braid rendered in backside when it flows Declaration protected virtual bool ForceBackOnFlowForBraid { get; } | Edit this page View Source GadgetType Type of this body gadget Declaration public override sealed BodyGadgetType GadgetType { get; } Overrides BodyGadget.GadgetType | Edit this page View Source MotionAmountForBraid Amount of the braid's rotating animation generate from character's movements (0 means 0%, 1000 means 100%) Declaration protected virtual int MotionAmountForBraid { get; } | Edit this page View Source SpriteBraidLeft Artwork sprite of left braid Declaration public OrientedSprite SpriteBraidLeft { get; } | Edit this page View Source SpriteBraidRight Artwork sprite of right braid Declaration public OrientedSprite SpriteBraidRight { get; } | Edit this page View Source SpriteHairBackward Artwork sprite rendering in the back-side of character's head Declaration public OrientedSprite SpriteHairBackward { get; } | Edit this page View Source SpriteHairForward Artwork sprite rendering in the front-side of character's head Declaration public OrientedSprite SpriteHairForward { get; } | Edit this page View Source SpriteLoaded True if artwork sprite is loaded Declaration public override bool SpriteLoaded { get; } Overrides BodyGadget.SpriteLoaded | Edit this page View Source UseLimbRotateForBraid Make braids perform limb rotate instead of simply rotate the rendering cell Declaration protected virtual bool UseLimbRotateForBraid { get; } Methods | Edit this page View Source DrawBraid(PoseCharacterRenderer, bool, OrientedSprite, OrientedSprite, int, int, int, bool, int, int) Draw given sprites as braids for given character Declaration public static void DrawBraid(PoseCharacterRenderer renderer, bool forceBackOnFlow, OrientedSprite spriteLeft, OrientedSprite spriteRight, int motionAmount, int flowMotionAmount, int dropMotionAmount, bool useLimbRotate, int offsetX, int offsetY) Parameters Type Name Description PoseCharacterRenderer renderer Target character bool forceBackOnFlow Set to true will make braid rendered in backside when it flows OrientedSprite spriteLeft Artwork sprite on the left side OrientedSprite spriteRight Artwork sprite on the right side int motionAmount Motion animation amount int flowMotionAmount Motion animation amount for hairs flowing in air int dropMotionAmount Motion animation amount from character's rise and drop bool useLimbRotate Perform limb rotate instead of simply rotate the rendering cell int offsetX Position offset X int offsetY Position offset Y | Edit this page View Source DrawGadget(PoseCharacterRenderer) Render the gadget for the given character Declaration public override void DrawGadget(PoseCharacterRenderer renderer) Overrides BodyGadget.DrawGadget(PoseCharacterRenderer) | Edit this page View Source DrawGadgetFromPool(PoseCharacterRenderer) Draw hair gadget for given character Declaration public static void DrawGadgetFromPool(PoseCharacterRenderer renderer) | Edit this page View Source DrawGadgetGizmos(IRect, Color32, int) Render the gadget as gizmos Declaration public override void DrawGadgetGizmos(IRect rect, Color32 tint, int z) Parameters Type Name Description IRect rect Global rect position Color32 tint Color tint int z Z position for sorting Overrides BodyGadget.DrawGadgetGizmos(IRect, Color32, int) | Edit this page View Source DrawSpriteAsHair(PoseCharacterRenderer, OrientedSprite, OrientedSprite, int, int) Draw given sprites as hair for given character Declaration public static void DrawSpriteAsHair(PoseCharacterRenderer renderer, OrientedSprite spriteForward, OrientedSprite spriteBackward, int flowAmountX, int flowAmountY) Parameters Type Name Description PoseCharacterRenderer renderer Target character OrientedSprite spriteForward Hair artwork sprite for the front-side OrientedSprite spriteBackward Hair artwork sprite for the back-side int flowAmountX Horizontal motion animation amount for hairs flowing in air int flowAmountY Vertical motion animation amount for hairs flowing in air | Edit this page View Source FillFromSheet(string) Load sprite data from Renderer.CurrentSheet Declaration public override bool FillFromSheet(string name) Overrides BodyGadget.FillFromSheet(string) Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.HandCloth.html": {
    "href": "api/AngeliA.HandCloth.html",
    "title": "Class HandCloth | AngeliA",
    "summary": "Class HandCloth Gloves for a pose-style character Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public abstract class HandCloth : Cloth Properties | Edit this page View Source ClothType Where should characters wear this cloth Declaration public override sealed ClothType ClothType { get; } Overrides Cloth.ClothType | Edit this page View Source SpriteLoaded True if the artwork sprites are loaded Declaration public override bool SpriteLoaded { get; } Overrides Cloth.SpriteLoaded Methods | Edit this page View Source DrawCloth(PoseCharacterRenderer) Draw cloth for the given character Declaration public override void DrawCloth(PoseCharacterRenderer renderer) Overrides Cloth.DrawCloth(PoseCharacterRenderer) | Edit this page View Source DrawClothForHand(PoseCharacterRenderer, OrientedSprite, OrientedSprite, int) Draw artwork sprite as gloves for given character Declaration public static void DrawClothForHand(PoseCharacterRenderer renderer, OrientedSprite spriteLeft, OrientedSprite spriteRight, int localZ = 1) Parameters Type Name Description PoseCharacterRenderer renderer Target character OrientedSprite spriteLeft Artwork for left glove OrientedSprite spriteRight Artwork for right glove int localZ Z value for sort rendering cells | Edit this page View Source DrawClothFromPool(PoseCharacterRenderer) Draw gloves for given character from system pool Declaration public static void DrawClothFromPool(PoseCharacterRenderer renderer) | Edit this page View Source DrawClothGizmos(IRect, Color32, int) Draw cloth as gizmos Declaration public override void DrawClothGizmos(IRect rect, Color32 tint, int z) Parameters Type Name Description IRect rect Rect position in global space Color32 tint Color tint int z Z value for sort rendering cell Overrides Cloth.DrawClothGizmos(IRect, Color32, int) | Edit this page View Source FillFromSheet(string) Load sprite data from Renderer.CurrentSheet Declaration public override bool FillFromSheet(string name) Overrides Cloth.FillFromSheet(string) Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.HandTool.html": {
    "href": "api/AngeliA.HandTool.html",
    "title": "Class HandTool | AngeliA",
    "summary": "Class HandTool Tool equipment that can be equip in hand slot of a character Implements IMapItem Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax [Entity.MapEditorGroup(\"ItemHandTool\", 0)] public abstract class HandTool : Equipment, IMapItem Constructors | Edit this page View Source HandTool() Declaration public HandTool() | Edit this page View Source HandTool(bool) Declaration public HandTool(bool loadArtwork) Properties | Edit this page View Source AvailableInAir True if character can use this tool when not touching ground Declaration public virtual bool AvailableInAir { get; } | Edit this page View Source AvailableInWater True if character can use this tool when inside water Declaration public virtual bool AvailableInWater { get; } | Edit this page View Source AvailableWhenClimbing True if character can use this tool when climbing Declaration public virtual bool AvailableWhenClimbing { get; } | Edit this page View Source AvailableWhenDashing True if character can use this tool when dashing Declaration public virtual bool AvailableWhenDashing { get; } | Edit this page View Source AvailableWhenFlying True if character can use this tool when flying Declaration public virtual bool AvailableWhenFlying { get; } | Edit this page View Source AvailableWhenGrabbing True if character can use this tool when grabbing Declaration public virtual bool AvailableWhenGrabbing { get; } | Edit this page View Source AvailableWhenPounding True if character can use this tool when ground pounding Declaration public virtual bool AvailableWhenPounding { get; } | Edit this page View Source AvailableWhenRolling True if character can use this tool when rolling Declaration public virtual bool AvailableWhenRolling { get; } | Edit this page View Source AvailableWhenRunning True if character can use this tool when running Declaration public virtual bool AvailableWhenRunning { get; } | Edit this page View Source AvailableWhenRushing True if character can use this tool when rushing Declaration public virtual bool AvailableWhenRushing { get; } | Edit this page View Source AvailableWhenSliding True if character can use this tool when sliding on wall Declaration public virtual bool AvailableWhenSliding { get; } | Edit this page View Source AvailableWhenSquatting True if character can use this tool when squatting Declaration public virtual bool AvailableWhenSquatting { get; } | Edit this page View Source AvailableWhenWalking True if character can use this tool when walking Declaration public virtual bool AvailableWhenWalking { get; } | Edit this page View Source CancelUseWhenRelease True if usage of this tool should be stop when user relase the action button Declaration public virtual bool CancelUseWhenRelease { get; } | Edit this page View Source ChargeDuration How many frames does it have to charge to perform the tool as charged. Set to int.MaxValue to disable charge feature. Declaration public virtual int ChargeDuration { get; } | Edit this page View Source Cooldown How long have to wait to use again after the tool being used for once Declaration public virtual int Cooldown { get; } | Edit this page View Source DefaultMovementSpeedRateOnUse How fast can the character move when using this tool. (0 means do not move. 1000 means move as normal speed. null means do not effect movement speed.) Declaration public virtual int? DefaultMovementSpeedRateOnUse { get; } | Edit this page View Source Duration How long does the tool perform it's function for once Declaration public virtual int Duration { get; } | Edit this page View Source EquipmentType Which type is this quipment Declaration public override sealed EquipmentType EquipmentType { get; } Overrides Equipment.EquipmentType | Edit this page View Source HoldPunish How many extra frames have to wait if the user hold the action button to use the tool multiple time Declaration public virtual int HoldPunish { get; } | Edit this page View Source IgnoreGrabTwist Do not read grab twist data from character when rendering this tool Declaration public virtual bool IgnoreGrabTwist { get; } | Edit this page View Source LockFacingOnUse Do not change character facing when the tool is being use Declaration public virtual bool LockFacingOnUse { get; } | Edit this page View Source PerformDelayFrame How many frame does the internal tool logic invoke after character start to use the tool Declaration public int PerformDelayFrame { get; } | Edit this page View Source PerformDelayRate How many frame based on \"duration\" does the internal tool logic invoke after character start to use the tool. (0 means immediately invoke. 1000 means invoke after \"duration\" frames) Declaration public virtual int PerformDelayRate { get; } | Edit this page View Source RepeatWhenHolding True if this tool can be use repeatedly when holding the action button Declaration public virtual bool RepeatWhenHolding { get; } | Edit this page View Source RunningMovementSpeedRateOnUse How fast can the character move when using this tool when running. (0 means do not move. 1000 means move as normal speed. null means do not effect movement speed.) Declaration public virtual int? RunningMovementSpeedRateOnUse { get; } | Edit this page View Source SpriteID Artwork sprite ID for render this tool Declaration public int SpriteID { get; protected set; } | Edit this page View Source TypeName Name of the class type Declaration public string TypeName { get; init; } | Edit this page View Source UseStackAsUsage True if this tool treat it's inventory stack count as durability bar Declaration public virtual bool UseStackAsUsage { get; } | Edit this page View Source WalkingMovementSpeedRateOnUse How fast can the character move when using this tool when walking. (0 means do not move. 1000 means move as normal speed. null means do not effect movement speed.) Declaration public virtual int? WalkingMovementSpeedRateOnUse { get; } Methods | Edit this page View Source AllowingUse(Character) True if the tool can be use by the character Declaration public virtual bool AllowingUse(Character character) | Edit this page View Source GetHandheldPoseAnimationID(Character) Get the ID of the pose animation for handheld Declaration public virtual int GetHandheldPoseAnimationID(Character character) | Edit this page View Source GetPerformPoseAnimationID(Character) Get the ID of the pose animation for using the tool Declaration public virtual int GetPerformPoseAnimationID(Character character) | Edit this page View Source LoadFromSheet() Load artwork sprite from current rendering sheet Declaration public void LoadFromSheet() | Edit this page View Source OnToolPerform(Character) This function is called when this tool is used for once by the given character Declaration public virtual void OnToolPerform(Character user) | Edit this page View Source OnToolSpriteRendered(PoseCharacterRenderer, int, int, int, int, int, int, AngeSprite, int) This function is called when the tool is rendering by pose-style character Declaration public virtual Cell OnToolSpriteRendered(PoseCharacterRenderer renderer, int x, int y, int width, int height, int grabRotation, int grabScale, AngeSprite sprite, int z) Parameters Type Name Description PoseCharacterRenderer renderer Target character int x Position X of the sprite in global space int y Position Y of the sprite in global space int width Width of the sprite in global space int height Height of the sprite in global space int grabRotation Rotation of the sprite int grabScale Size scale of the sprite (0 means 0%, 1000 means 100%) AngeSprite sprite Artwork sprite int z Z value for sort rendering cells Implements IMapItem Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.HandheldPoseAnimation.html": {
    "href": "api/AngeliA.HandheldPoseAnimation.html",
    "title": "Class HandheldPoseAnimation | AngeliA",
    "summary": "Class HandheldPoseAnimation Pose animation which override onto a character for holding a handtool Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public abstract class HandheldPoseAnimation : PoseAnimation Methods | Edit this page View Source DrawTool(HandTool, PoseCharacterRenderer) Rendering the given handtool Declaration public abstract void DrawTool(HandTool tool, PoseCharacterRenderer renderer) Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.HeadCloth.html": {
    "href": "api/AngeliA.HeadCloth.html",
    "title": "Class HeadCloth | AngeliA",
    "summary": "Class HeadCloth Hat for a pose-style character Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public abstract class HeadCloth : Cloth Properties | Edit this page View Source ClothType Where should characters wear this cloth Declaration public override sealed ClothType ClothType { get; } Overrides Cloth.ClothType | Edit this page View Source SpriteLoaded True if the artwork sprites are loaded Declaration public override bool SpriteLoaded { get; } Overrides Cloth.SpriteLoaded Methods | Edit this page View Source DrawCloth(PoseCharacterRenderer) Draw cloth for the given character Declaration public override void DrawCloth(PoseCharacterRenderer renderer) Overrides Cloth.DrawCloth(PoseCharacterRenderer) | Edit this page View Source DrawClothForHead(PoseCharacterRenderer, OrientedSprite) Draw artwork sprite as hat for given character Declaration public static void DrawClothForHead(PoseCharacterRenderer renderer, OrientedSprite clothSprite) Parameters Type Name Description PoseCharacterRenderer renderer Target character OrientedSprite clothSprite Artwork sprite | Edit this page View Source DrawClothFromPool(PoseCharacterRenderer) Draw hat for given character from system pool Declaration public static void DrawClothFromPool(PoseCharacterRenderer renderer) | Edit this page View Source DrawClothGizmos(IRect, Color32, int) Draw cloth as gizmos Declaration public override void DrawClothGizmos(IRect rect, Color32 tint, int z) Parameters Type Name Description IRect rect Rect position in global space Color32 tint Color tint int z Z value for sort rendering cell Overrides Cloth.DrawClothGizmos(IRect, Color32, int) | Edit this page View Source FillFromSheet(string) Load sprite data from Renderer.CurrentSheet Declaration public override bool FillFromSheet(string name) Overrides Cloth.FillFromSheet(string) Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.HipCloth.HipClothType.html": {
    "href": "api/AngeliA.HipCloth.HipClothType.html",
    "title": "Enum HipCloth.HipClothType | AngeliA",
    "summary": "Enum HipCloth.HipClothType Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public enum HipCloth.HipClothType Fields Name Description None Pants Skirt Extension Methods Extension.Next<HipCloth.HipClothType>(HipCloth.HipClothType) Extension.Prev<HipCloth.HipClothType>(HipCloth.HipClothType) Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.HipCloth.html": {
    "href": "api/AngeliA.HipCloth.html",
    "title": "Class HipCloth | AngeliA",
    "summary": "Class HipCloth Pants or skirt for a pose-style character. Include hip and legs (no foot) Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public abstract class HipCloth : Cloth Properties | Edit this page View Source ClothType Where should characters wear this cloth Declaration public override sealed ClothType ClothType { get; } Overrides Cloth.ClothType | Edit this page View Source CoverLegs True if the pants renders on front of lengs Declaration protected virtual bool CoverLegs { get; } | Edit this page View Source SpriteLoaded True if the artwork sprites are loaded Declaration public override bool SpriteLoaded { get; } Overrides Cloth.SpriteLoaded Methods | Edit this page View Source DrawCloth(PoseCharacterRenderer) Draw cloth for the given character Declaration public override void DrawCloth(PoseCharacterRenderer rendering) Overrides Cloth.DrawCloth(PoseCharacterRenderer) | Edit this page View Source DrawClothAsPants(PoseCharacterRenderer, OrientedSprite, int) Draw artwork sprite as pants for given character Declaration public static void DrawClothAsPants(PoseCharacterRenderer rendering, OrientedSprite clothSprite, int localZ = 1) Parameters Type Name Description PoseCharacterRenderer rendering Target character OrientedSprite clothSprite Artwork sprite int localZ Z value for sort rendering cells | Edit this page View Source DrawClothAsSkirt(PoseCharacterRenderer, OrientedSprite, int, int) Draw artwork sprite as skirt for given character Declaration public static void DrawClothAsSkirt(PoseCharacterRenderer rendering, OrientedSprite clothSprite, int localZ = 6, int motionAmount = 1000) Parameters Type Name Description PoseCharacterRenderer rendering Target character OrientedSprite clothSprite Artwork sprite (should be a sprite group) int localZ Z value for sort rendering cells int motionAmount How much does the skirt flow with character movement (0 means 0%, 1000 means 100%) | Edit this page View Source DrawClothForLowerLeg(PoseCharacterRenderer, OrientedSprite, OrientedSprite, int) Draw artwork sprite as cloth only for lower-leg Declaration public static void DrawClothForLowerLeg(PoseCharacterRenderer rendering, OrientedSprite spriteLeft, OrientedSprite spriteRight, int localZ = 1) Parameters Type Name Description PoseCharacterRenderer rendering Target character OrientedSprite spriteLeft Artwork sprite for left leg OrientedSprite spriteRight Artwork sprite for right leg int localZ Z value for sort rendering cells | Edit this page View Source DrawClothForUpperLeg(PoseCharacterRenderer, OrientedSprite, OrientedSprite, int) Draw artwork sprite as cloth only for upper-leg Declaration public static void DrawClothForUpperLeg(PoseCharacterRenderer rendering, OrientedSprite spriteLeft, OrientedSprite spriteRight, int localZ = 1) Parameters Type Name Description PoseCharacterRenderer rendering Target character OrientedSprite spriteLeft Artwork sprite for left leg OrientedSprite spriteRight Artwork sprite for right leg int localZ Z value for sort rendering cells | Edit this page View Source DrawClothFromPool(PoseCharacterRenderer) Draw pants/skirt for given character from system pool Declaration public static void DrawClothFromPool(PoseCharacterRenderer rendering) | Edit this page View Source DrawClothGizmos(IRect, Color32, int) Draw cloth as gizmos Declaration public override void DrawClothGizmos(IRect rect, Color32 tint, int z) Parameters Type Name Description IRect rect Rect position in global space Color32 tint Color tint int z Z value for sort rendering cell Overrides Cloth.DrawClothGizmos(IRect, Color32, int) | Edit this page View Source DrawDoubleClothTailsOnHip(PoseCharacterRenderer, OrientedSprite, bool) Draw two tails as cloth decoration (like Suisei's standard suit from Hololive) Declaration public static void DrawDoubleClothTailsOnHip(PoseCharacterRenderer rendering, OrientedSprite clothSprite, bool drawOnAllPose = false) Parameters Type Name Description PoseCharacterRenderer rendering Target character OrientedSprite clothSprite Artwork sprite bool drawOnAllPose Draw this tail even when character is Rolling, Sleeping, Passout and Flying | Edit this page View Source DrawSingleClothTail(AngeSprite, int, int, int, int, int, int, int, int) Draw a single tail as cloth decoration (like Suisei's standard suit from Hololive) Declaration public static void DrawSingleClothTail(AngeSprite sprite, int globalX, int globalY, int z, int rotation, int deltaY, int scaleX = 1000, int scaleY = 1000, int motionAmount = 1000) Parameters Type Name Description AngeSprite sprite Artwork sprite int globalX Pivot position X of the tail in global space int globalY Pivot position Y of the tail in global space int z Z value for sorting rendering cells int rotation Rotation of this tail int deltaY Character's current movement speed Y int scaleX Horizontal size scale (0 means 0%, 1000 means 100%) int scaleY Vertical size scale (0 means 0%, 1000 means 100%) int motionAmount How much flow motion should apply from characters movement (0 means 0%, 1000 means 100%) | Edit this page View Source FillFromSheet(string) Load sprite data from Renderer.CurrentSheet Declaration public override bool FillFromSheet(string name) Overrides Cloth.FillFromSheet(string) Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.Horn.html": {
    "href": "api/AngeliA.Horn.html",
    "title": "Class Horn | AngeliA",
    "summary": "Class Horn Horn body gadget for pose-style character Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public abstract class Horn : BodyGadget Properties | Edit this page View Source AnchorOnFace True if the horn grows from character's face (like Ayame from Hololive) Declaration protected virtual bool AnchorOnFace { get; } | Edit this page View Source GadgetType Type of this body gadget Declaration public override sealed BodyGadgetType GadgetType { get; } Overrides BodyGadget.GadgetType | Edit this page View Source SpriteLoaded True if artwork sprite is loaded Declaration public override bool SpriteLoaded { get; } Overrides BodyGadget.SpriteLoaded Methods | Edit this page View Source DrawGadget(PoseCharacterRenderer) Render the gadget for the given character Declaration public override void DrawGadget(PoseCharacterRenderer renderer) Overrides BodyGadget.DrawGadget(PoseCharacterRenderer) | Edit this page View Source DrawGadgetFromPool(PoseCharacterRenderer) Draw horn gadget for given character Declaration public static void DrawGadgetFromPool(PoseCharacterRenderer renderer) | Edit this page View Source DrawGadgetGizmos(IRect, Color32, int) Render the gadget as gizmos Declaration public override void DrawGadgetGizmos(IRect rect, Color32 tint, int z) Parameters Type Name Description IRect rect Global rect position Color32 tint Color tint int z Z position for sorting Overrides BodyGadget.DrawGadgetGizmos(IRect, Color32, int) | Edit this page View Source DrawSpriteAsHorn(PoseCharacterRenderer, OrientedSprite, OrientedSprite, bool, bool, bool) Draw given sprites as horn for given character Declaration public static void DrawSpriteAsHorn(PoseCharacterRenderer renderer, OrientedSprite spriteLeft, OrientedSprite spriteRight, bool frontOfHeadL = true, bool frontOfHeadR = true, bool onFace = false) Parameters Type Name Description PoseCharacterRenderer renderer Target character OrientedSprite spriteLeft Artwork sprite for left horn OrientedSprite spriteRight Artwork sprite for right horn bool frontOfHeadL True if the left horn should render in front of character's head bool frontOfHeadR True if the right horn should render in front of character's head bool onFace True if the horn grows from character's face (like Ayame from Hololive) | Edit this page View Source FillFromSheet(string) Load sprite data from Renderer.CurrentSheet Declaration public override bool FillFromSheet(string name) Overrides BodyGadget.FillFromSheet(string) | Edit this page View Source FrontOfHeadL(PoseCharacterRenderer) True if the left horn should render in front of character's head Declaration protected virtual bool FrontOfHeadL(PoseCharacterRenderer renderer) | Edit this page View Source FrontOfHeadR(PoseCharacterRenderer) True if the right horn should render in front of character's head Declaration protected virtual bool FrontOfHeadR(PoseCharacterRenderer renderer) Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.Hotkey.html": {
    "href": "api/AngeliA.Hotkey.html",
    "title": "Struct Hotkey | AngeliA",
    "summary": "Struct Hotkey Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public readonly struct Hotkey Constructors | Edit this page View Source Hotkey(KeyboardKey, bool, bool, bool) Declaration public Hotkey(KeyboardKey key, bool ctrl = false, bool shift = false, bool alt = false) | Edit this page View Source Hotkey(string) Declaration public Hotkey(string data) Fields | Edit this page View Source Alt Declaration public readonly bool Alt | Edit this page View Source Ctrl Declaration public readonly bool Ctrl | Edit this page View Source Key Declaration public readonly KeyboardKey Key | Edit this page View Source Shift Declaration public readonly bool Shift Methods | Edit this page View Source Down() Declaration public bool Down() | Edit this page View Source DownGUI() Declaration public bool DownGUI() | Edit this page View Source Equals(object) Indicates whether this instance and a specified object are equal. Declaration public override bool Equals(object obj) Parameters Type Name Description object obj The object to compare with the current instance. Returns Type Description bool true if obj and this instance are the same type and represent the same value; otherwise, false. Overrides ValueType.Equals(object) | Edit this page View Source GetHashCode() Returns the hash code for this instance. Declaration public override int GetHashCode() Returns Type Description int A 32-bit signed integer that is the hash code for this instance. Overrides ValueType.GetHashCode() | Edit this page View Source GetStringData() Declaration public string GetStringData() | Edit this page View Source Holding() Declaration public bool Holding() | Edit this page View Source ToString() Returns the fully qualified type name of this instance. Declaration public override string ToString() Returns Type Description string The fully qualified type name. Overrides ValueType.ToString() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.IActionTarget.html": {
    "href": "api/AngeliA.IActionTarget.html",
    "title": "Interface IActionTarget | AngeliA",
    "summary": "Interface IActionTarget Interface that makes the entity react with player action. When player goes nearby, they can press action button to invoke the logic from this entity Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public interface IActionTarget Properties | Edit this page View Source AllowInvokeOnSquat True if this entity can be highlight when player is squatting Declaration bool AllowInvokeOnSquat { get; } | Edit this page View Source AllowInvokeOnStand True if this entity can be highlight when player is standing Declaration bool AllowInvokeOnStand { get; } | Edit this page View Source InvokeOnTouch True if this entity will be invoke when player comes nearby without pressing the action button Declaration bool InvokeOnTouch { get; } | Edit this page View Source IsHighlighted True if this entity is currently highlighting Declaration bool IsHighlighted { get; } | Edit this page View Source LockInput True if this entity lock player's input when highlighting Declaration bool LockInput { get; } Methods | Edit this page View Source AllowInvoke() True if the entity can be invoke at current frame Declaration bool AllowInvoke() | Edit this page View Source DrawActionTarget(IActionTarget, AngeSprite, IRect, float, float, bool, bool) Draw the artwork sprite for given action target entity Declaration public static void DrawActionTarget(IActionTarget target, AngeSprite sprite, IRect rect, float pivotX = 0.5, float pivotY = 0, bool blinkHorizontal = true, bool blinkVertical = true) Parameters Type Name Description IActionTarget target The action target entity IRect rect Rect position in global space float pivotX Pivot X for the artwork sprite float pivotY Pivot Y for the artwork sprite bool blinkHorizontal True if the entity blink with nearby entities together horizontaly bool blinkVertical True if the entity blink with nearby entities together Verticaly | Edit this page View Source Invoke() Invoke the logic provided by this entity. Declaration bool Invoke() Returns Type Description bool True if the logic performs successfuly | Edit this page View Source MakeCellAsActionTarget(IActionTarget, Cell, float, float, bool, bool) Make the rendering cell blink like an action target entity Declaration public static void MakeCellAsActionTarget(IActionTarget target, Cell cell, float pivotX = 0.5, float pivotY = 0, bool blinkHorizontal = true, bool blinkVertical = true) Parameters Type Name Description IActionTarget target The entity Cell cell The rendering cell float pivotX Pivot X for the artwork sprite float pivotY Pivot Y for the artwork sprite bool blinkHorizontal True if the entity blink with nearby entities together horizontaly bool blinkVertical True if the entity blink with nearby entities together Verticaly Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.IBlockEntity.html": {
    "href": "api/AngeliA.IBlockEntity.html",
    "title": "Interface IBlockEntity | AngeliA",
    "summary": "Interface IBlockEntity Interface that makes the entity behave like a block from map. This will make the entity become a block item for ItemSystem. Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public interface IBlockEntity Properties | Edit this page View Source AllowBeingEmbedAsElement True if this entity can be embed as a element in map (like putting a coin into a launcher in SMM2 and this entity would be the coin) Declaration bool AllowBeingEmbedAsElement { get; } | Edit this page View Source EmbedEntityAsElement True if this entity can embed other entity as a element in map (like putting a coin into a launcher in SMM2 and this entity would be the launcher) Declaration bool EmbedEntityAsElement { get; } | Edit this page View Source MaxStackCount Max item stack count as a block item. Declaration int MaxStackCount { get; } Methods | Edit this page View Source IsIgnoreEmbedAsElement(int) True if the given type of entity do not take other entity as embed element Declaration public static bool IsIgnoreEmbedAsElement(int blockEntityID) | Edit this page View Source OnEntityPicked() This function is called when this entity being picked as a block by a pick-tool Declaration void OnEntityPicked() | Edit this page View Source OnEntityPut() This function is called when this entity being put into the map as a block Declaration void OnEntityPut() | Edit this page View Source OnEntityRefresh() This function is called when there are map changes happens nearby and the entity needs to refresh itself Declaration void OnEntityRefresh() | Edit this page View Source RefreshBlockEntitiesNearby(Int2, Entity) Refresh all block entity instances near the given position. Declaration public static void RefreshBlockEntitiesNearby(Int2 centerUnitPos, Entity ignore = null) Parameters Type Name Description Int2 centerUnitPos This position is in unit space Entity ignore Do not refresh this entity Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.IBlockSquad.html": {
    "href": "api/AngeliA.IBlockSquad.html",
    "title": "Interface IBlockSquad | AngeliA",
    "summary": "Interface IBlockSquad Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public interface IBlockSquad Methods | Edit this page View Source FindBlock(int, int, int, int, Direction4, BlockType, out int, out int, int) Declaration bool FindBlock(int id, int unitX, int unitY, int unitZ, Direction4 direction, BlockType type, out int resultX, out int resultY, int maxDistance = 128) | Edit this page View Source GetAllBlocksAt(int, int, int) Declaration (int level, int bg, int entity, int element) GetAllBlocksAt(int unitX, int unitY, int z) | Edit this page View Source GetBlockAt(int, int, int, BlockType) Declaration int GetBlockAt(int unitX, int unitY, int z, BlockType type) | Edit this page View Source SetBlockAt(int, int, int, BlockType, int) Declaration void SetBlockAt(int unitX, int unitY, int z, BlockType type, int newID) | Edit this page View Source WorldExists(Int3) Declaration bool WorldExists(Int3 worldPos) Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.IBumpable.html": {
    "href": "api/AngeliA.IBumpable.html",
    "title": "Interface IBumpable | AngeliA",
    "summary": "Interface IBumpable Interface that makes the entity can be bump by other (like question mark block in Mario) Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public interface IBumpable Properties | Edit this page View Source BumpCooldown How many frames does it have to wait to be bump again Declaration int BumpCooldown { get; } | Edit this page View Source BumpTransferPower Extra speed that gives to the rigidbody when they got transfered bump from this entity Declaration int BumpTransferPower { get; } | Edit this page View Source FromAbove True if the entity can be bump from above Declaration bool FromAbove { get; } | Edit this page View Source FromBelow True if the entity can be bump from below Declaration bool FromBelow { get; } | Edit this page View Source FromLeft True if the entity can be bump from left Declaration bool FromLeft { get; } | Edit this page View Source FromRight True if the entity can be bump from right Declaration bool FromRight { get; } | Edit this page View Source LastBumpFrom Direction for the last bump of this entity Declaration Direction4 LastBumpFrom { get; set; } | Edit this page View Source LastBumpedFrame Frame when the entity get it's last bump Declaration int LastBumpedFrame { get; set; } | Edit this page View Source TransferBumpFromOther True if the entity take transfered bumps from other Declaration bool TransferBumpFromOther { get; } | Edit this page View Source TransferBumpToOther True if the entity bump other entities when being bumped Declaration bool TransferBumpToOther { get; } | Edit this page View Source TransferWithAttack True if the entity perform attack to the entity when transfer bumps (like in Mario bump on question block can kill the goombas on top) Declaration bool TransferWithAttack { get; } Methods | Edit this page View Source AllowBump(Entity, Direction4) True if the entity can be bump by the given target and direction currently Declaration bool AllowBump(Entity rig, Direction4 from) | Edit this page View Source AnimateForBump(IBumpable, Cell, int, int, int) Update the animation for bump, call this function every frame Declaration public static void AnimateForBump(IBumpable bumpable, Cell cell, int duration = 12, int distance = 32, int size = 32) Parameters Type Name Description IBumpable bumpable Target entity Cell cell Rendering cell int duration How length does the animation takes when it get bump int distance How far does it move when it get bump int size How big does it scale when it get bump | Edit this page View Source BumpAllOverlap(Entity, Direction4, bool, Damage, int) Perform bump for all overlaped IBumpable entities Declaration public static void BumpAllOverlap(Entity sender, Direction4 directionTo, bool forceBump = false, Damage damageToBumpedObject = default, int collisionMask = 3) Parameters Type Name Description Entity sender Entity that send the bump Direction4 directionTo Bump the IBumpables to this direction bool forceBump True if ignore the AllowBump function check this time Damage damageToBumpedObject Damage data that apply to the entities being bump int collisionMask Which layer does this bump applies | Edit this page View Source GetBumpTransferDamage() Get the instance of the damage that this entity deal to other when it transfer bump Declaration Damage GetBumpTransferDamage() | Edit this page View Source IsValidBumpDirection(IBumpable, Direction4) Trie if the given direction can be bump Declaration public static bool IsValidBumpDirection(IBumpable bump, Direction4 from) Parameters Type Name Description IBumpable bump Target entity | Edit this page View Source OnBumped(Entity, Damage) This function is called when this entity is bumped Declaration void OnBumped(Entity rig, Damage damage) Parameters Type Name Description Entity rig Rigidbody that bumps this entity Damage damage The damage this entity got from this bump Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.ICarrier.html": {
    "href": "api/AngeliA.ICarrier.html",
    "title": "Interface ICarrier | AngeliA",
    "summary": "Interface ICarrier Interface that makes entity carry other entities on top Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public interface ICarrier Properties | Edit this page View Source AllowBeingCarry True if this entity can be carry by other carrier Declaration bool AllowBeingCarry { get; } Methods | Edit this page View Source CarryTargetsOnTopHorizontally(Entity, int, OperationMode) Carry all ICarrier on top. This operation do not make any movement for the host entity itself Declaration public static void CarryTargetsOnTopHorizontally(Entity self, int _deltaX, OperationMode colMode = OperationMode.ColliderOnly) Parameters Type Name Description Entity self Host entity int _deltaX Position delta X at current frame in global space OperationMode colMode Does this operation include colliders and triggers | Edit this page View Source CarryTargetsOnTopVertically(Entity, int, OperationMode) Carry all ICarrier on top. This operation do not make any movement for the host entity itself Declaration public static void CarryTargetsOnTopVertically(Entity self, int _deltaY, OperationMode colMode = OperationMode.ColliderOnly) Parameters Type Name Description Entity self Host entity int _deltaY Position delta Y at current frame in global space OperationMode colMode Does this operation include colliders and triggers | Edit this page View Source OnBeingCarry(int, int) This function is called when this entity is being carried by other Declaration void OnBeingCarry(int deltaX, int deltaY) Parameters Type Name Description int deltaX Position delta X at current frame in global space int deltaY Position delta Y at current frame in global space | Edit this page View Source PerformCarry(int, int) Carry other entities for once Declaration void PerformCarry(int x, int y) Parameters Type Name Description int x Position delta X at current frame in global space int y Position delta Y at current frame in global space Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.ICircuitOperator.html": {
    "href": "api/AngeliA.ICircuitOperator.html",
    "title": "Interface ICircuitOperator | AngeliA",
    "summary": "Interface ICircuitOperator Interface that makes an entity behave like operator in circuit system Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public interface ICircuitOperator Methods | Edit this page View Source IsOperator(int) True if the given type of entity is a circuit operator Declaration public static bool IsOperator(int typeID) | Edit this page View Source OnTriggeredByCircuit() This function is called when the operator get triggered by the system Declaration void OnTriggeredByCircuit() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.ICombustible.html": {
    "href": "api/AngeliA.ICombustible.html",
    "title": "Interface ICombustible | AngeliA",
    "summary": "Interface ICombustible This interface makes the entity can be set on fire Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public interface ICombustible Properties | Edit this page View Source BurnStartFrame The frame this entity start on fire Declaration int BurnStartFrame { get; set; } | Edit this page View Source BurnedDuration How many frames does it takes to burn down this entity Declaration int BurnedDuration { get; } | Edit this page View Source IsBurning True if the entity is having a fire entity on Declaration bool IsBurning { get; } Methods | Edit this page View Source OnBurned() This function is called when the entity is burned down Declaration void OnBurned() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.IDamageReceiver.html": {
    "href": "api/AngeliA.IDamageReceiver.html",
    "title": "Interface IDamageReceiver | AngeliA",
    "summary": "Interface IDamageReceiver Interface that makes entity take damage from other Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public interface IDamageReceiver Properties | Edit this page View Source IgnoreDamageType This entity do not take damage with this tags Declaration Tag IgnoreDamageType { get; } | Edit this page View Source IsInvincible True if this entity is invincible Declaration bool IsInvincible { get; } | Edit this page View Source TakeDamageFromLevel True if this entity take damage when overlap with colliders from PhysicsLayer.Damage Declaration bool TakeDamageFromLevel { get; } | Edit this page View Source Team Which team does this entity belongs to Declaration int Team { get; } Methods | Edit this page View Source DamageAllOverlap(IRect, Damage, int, Entity, OperationMode, bool) Deal damage to all IDamageReceiver overlap by given range Declaration public static void DamageAllOverlap(IRect rect, Damage damage, int physicsMask = 10, Entity host = null, OperationMode mode = OperationMode.ColliderAndTrigger, bool allowMultipleDamage = true) Parameters Type Name Description IRect rect The range in global space int physicsMask Which physics layer is included Entity host Sender of this damage OperationMode mode Does this operation include collider or trigger bool allowMultipleDamage True if more than one receiver will take damage | Edit this page View Source OnDamaged(Damage) This function is called when the entity takes a damage Declaration void OnDamaged(Damage damage) | Edit this page View Source TakeDamage(Damage) Make this entity take the given damage. This function will call ValidDamage internally Declaration bool TakeDamage(Damage damage) Returns Type Description bool True if the damage is taken | Edit this page View Source ValidDamage(Damage) True if the damage will be take by this entity Declaration bool ValidDamage(Damage damage) Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.IFire.html": {
    "href": "api/AngeliA.IFire.html",
    "title": "Interface IFire | AngeliA",
    "summary": "Interface IFire Interface that makes the entity behave like fire Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public interface IFire Methods | Edit this page View Source Putout(bool) Putout this fire Declaration void Putout(bool manually) Parameters Type Name Description bool manually True if the fire got putout by something else | Edit this page View Source PutoutFire(IRect) Putout fire in given range Declaration public static void PutoutFire(IRect rect) Parameters Type Name Description IRect rect Range in global space | Edit this page View Source Setup(ICombustible) Set fire onto a target Declaration void Setup(ICombustible com) | Edit this page View Source SpreadFire(int, IRect, Entity) Set fire at given range Declaration public static void SpreadFire(int fireID, IRect rect, Entity ignore = null) Parameters Type Name Description int fireID Which type of fire will be spawn IRect rect Target range in global space Entity ignore Do not set this entity on fire Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.IItemTransfer.html": {
    "href": "api/AngeliA.IItemTransfer.html",
    "title": "Interface IItemTransfer | AngeliA",
    "summary": "Interface IItemTransfer Interface that mark the entity as can be transfer item through map Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public interface IItemTransfer Properties | Edit this page View Source Direction Declaration Direction4 Direction { get; } Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.IJsonSerializationCallback.html": {
    "href": "api/AngeliA.IJsonSerializationCallback.html",
    "title": "Interface IJsonSerializationCallback | AngeliA",
    "summary": "Interface IJsonSerializationCallback Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public interface IJsonSerializationCallback Methods | Edit this page View Source OnAfterLoadedFromDisk() Declaration void OnAfterLoadedFromDisk() | Edit this page View Source OnBeforeSaveToDisk() Declaration void OnBeforeSaveToDisk() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.IMapItem.html": {
    "href": "api/AngeliA.IMapItem.html",
    "title": "Interface IMapItem | AngeliA",
    "summary": "Interface IMapItem Marks class as item that can be paint as map editor block Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public interface IMapItem Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.IPlayable.html": {
    "href": "api/AngeliA.IPlayable.html",
    "title": "Interface IPlayable | AngeliA",
    "summary": "Interface IPlayable Interface that mark the character as playable character Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public interface IPlayable Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.IProgressiveItem.html": {
    "href": "api/AngeliA.IProgressiveItem.html",
    "title": "Interface IProgressiveItem | AngeliA",
    "summary": "Interface IProgressiveItem Interface that makes the item break/repair into other item Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public interface IProgressiveItem Properties | Edit this page View Source NextItemID ID of the item that this item will become when it got repair Declaration int NextItemID { get; set; } | Edit this page View Source PrevItemID ID of the item that this item will become when it's broken Declaration int PrevItemID { get; set; } | Edit this page View Source Progress Current localtion inside the profress chain Declaration int Progress { get; set; } | Edit this page View Source TotalProgress Total count of the profress chain Declaration int TotalProgress { get; set; } Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.IRect.html": {
    "href": "api/AngeliA.IRect.html",
    "title": "Struct IRect | AngeliA",
    "summary": "Struct IRect Implements IEquatable<IRect> IFormattable Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax [Serializable] public struct IRect : IEquatable<IRect>, IFormattable Constructors | Edit this page View Source IRect(IRect) Declaration public IRect(IRect source) | Edit this page View Source IRect(Int2, Int2) Declaration public IRect(Int2 position, Int2 size) | Edit this page View Source IRect(int, int, int, int) Declaration public IRect(int xMin, int yMin, int width, int height) Properties | Edit this page View Source center Declaration public readonly Float2 center { get; } | Edit this page View Source height Declaration public int height { readonly get; set; } | Edit this page View Source max Declaration public Int2 max { readonly get; set; } | Edit this page View Source min Declaration public Int2 min { readonly get; set; } | Edit this page View Source position Declaration public Int2 position { readonly get; set; } | Edit this page View Source size Declaration public Int2 size { readonly get; set; } | Edit this page View Source width Declaration public int width { readonly get; set; } | Edit this page View Source x Declaration public int x { readonly get; set; } | Edit this page View Source xMax Declaration public int xMax { readonly get; set; } | Edit this page View Source xMin Declaration public int xMin { readonly get; set; } | Edit this page View Source y Declaration public int y { readonly get; set; } | Edit this page View Source yMax Declaration public int yMax { readonly get; set; } | Edit this page View Source yMin Declaration public int yMin { readonly get; set; } | Edit this page View Source zero Declaration public static IRect zero { get; } Methods | Edit this page View Source Contains(Int2) Declaration public readonly bool Contains(Int2 position) | Edit this page View Source Equals(IRect) Indicates whether the current object is equal to another object of the same type. Declaration public readonly bool Equals(IRect other) Parameters Type Name Description IRect other An object to compare with this object. Returns Type Description bool true if the current object is equal to the other parameter; otherwise, false. | Edit this page View Source Equals(object) Indicates whether this instance and a specified object are equal. Declaration public override readonly bool Equals(object other) Returns Type Description bool true if obj and this instance are the same type and represent the same value; otherwise, false. Overrides ValueType.Equals(object) | Edit this page View Source GetHashCode() Returns the hash code for this instance. Declaration public override readonly int GetHashCode() Returns Type Description int A 32-bit signed integer that is the hash code for this instance. Overrides ValueType.GetHashCode() | Edit this page View Source MinMaxRect(Int2, Int2) Declaration public static IRect MinMaxRect(Int2 min, Int2 max) | Edit this page View Source MinMaxRect(int, int, int, int) Declaration public static IRect MinMaxRect(int minX, int minY, int maxX, int maxY) | Edit this page View Source Overlaps(IRect) Declaration public readonly bool Overlaps(IRect other) | Edit this page View Source Point(Int2) Declaration public static IRect Point(Int2 pos) | Edit this page View Source Point(int, int) Declaration public static IRect Point(int x, int y) | Edit this page View Source SetMinMax(Int2, Int2) Declaration public void SetMinMax(Int2 minPosition, Int2 maxPosition) | Edit this page View Source ToString() Returns the fully qualified type name of this instance. Declaration public override readonly string ToString() Returns Type Description string The fully qualified type name. Overrides ValueType.ToString() | Edit this page View Source ToString(string) Declaration public readonly string ToString(string format) | Edit this page View Source ToString(string, IFormatProvider) Formats the value of the current instance using the specified format. Declaration public readonly string ToString(string format, IFormatProvider formatProvider) Parameters Type Name Description string format The format to use. -or- A null reference (Nothing in Visual Basic) to use the default format defined for the type of the IFormattable implementation. IFormatProvider formatProvider The provider to use to format the value. -or- A null reference (Nothing in Visual Basic) to obtain the numeric format information from the current locale setting of the operating system. Returns Type Description string The value of the current instance in the specified format. Operators | Edit this page View Source operator ==(IRect, IRect) Declaration public static bool operator ==(IRect lhs, IRect rhs) | Edit this page View Source operator !=(IRect, IRect) Declaration public static bool operator !=(IRect lhs, IRect rhs) Implements IEquatable<T> IFormattable Extension Methods Extension.BottomHalf(IRect) Extension.BottomLeft(IRect) Extension.BottomMid(IRect) Extension.BottomRight(IRect) Extension.CenterInt(IRect) Extension.CenterX(IRect) Extension.CenterY(IRect) Extension.Clamp(IRect, IRect) Extension.ClampPositionInside(ref IRect, IRect) Extension.CompleteInside(IRect, IRect) Extension.Contains(IRect, int, int) Extension.CornerInside(IRect, Alignment, int) Extension.CornerInside(IRect, Alignment, int, int) Extension.CornerOutside(IRect, Alignment, int) Extension.CornerOutside(IRect, Alignment, int, int) Extension.Dodge(IRect, IRect, out IRect?, out IRect?, out IRect?, out IRect?) Extension.EdgeExact(IRect, Direction4, int) Extension.EdgeInside(IRect, Direction4, int) Extension.EdgeInsideDown(IRect, int) Extension.EdgeInsideLeft(IRect, int) Extension.EdgeInsideRight(IRect, int) Extension.EdgeInsideSquareDown(IRect) Extension.EdgeInsideSquareLeft(IRect) Extension.EdgeInsideSquareRight(IRect) Extension.EdgeInsideSquareUp(IRect) Extension.EdgeInsideUp(IRect, int) Extension.EdgeOutside(IRect, Direction4, int) Extension.EdgeOutsideDown(IRect, int) Extension.EdgeOutsideLeft(IRect, int) Extension.EdgeOutsideRight(IRect, int) Extension.EdgeOutsideUp(IRect, int) Extension.Envelope(IRect, int, int) Extension.Expand(IRect, Int4) Extension.Expand(IRect, int) Extension.Expand(IRect, int, int, int, int) Extension.ExpandHorizontal(IRect, int) Extension.ExpandVertical(IRect, int) Extension.Fit(IRect, AngeSprite, int, int) Extension.Fit(IRect, int, int, int, int) Extension.FlipHorizontal(ref IRect) Extension.FlipNegative(ref IRect) Extension.FlipVertical(ref IRect) Extension.ForceSquare(IRect, bool, bool, bool) Extension.GetFlipHorizontal(IRect) Extension.GetFlipNegative(IRect) Extension.GetFlipVertical(IRect) Extension.HorizontalMidHalf(IRect) Extension.Intersection(IRect, IRect) Extension.IsNotSame(IRect, IRect) Extension.IsSame(IRect, IRect) Extension.LeftHalf(IRect) Extension.LerpTo(IRect, IRect, int) Extension.LerpTo(IRect, IRect, float) Extension.MidLeft(IRect) Extension.MidRight(IRect) Extension.PartHorizontal(IRect, int, int) Extension.PartVertical(IRect, int, int) Extension.ResizeFrom(IRect, int, int, int, int) Extension.RightHalf(IRect) Extension.ScaleFrom(IRect, int, int, int) Extension.ScaleFrom(IRect, int, int, int, int) Extension.ScaleFrom(IRect, float, int, int) Extension.ScaleFrom(IRect, float, float, int, int) Extension.SetMinMax(ref IRect, int, int, int, int) Extension.Shift(IRect, Int2) Extension.Shift(IRect, int, int) Extension.Shrink(IRect, Int4) Extension.Shrink(IRect, int) Extension.Shrink(IRect, int, int, int, int) Extension.ShrinkDown(IRect, int) Extension.ShrinkLeft(IRect, int) Extension.ShrinkRight(IRect, int) Extension.ShrinkUp(IRect, int) Extension.SlideDown(ref IRect, int) Extension.SlideLeft(ref IRect, int) Extension.SlideRight(ref IRect, int) Extension.SlideUp(ref IRect, int) Extension.ToFRect(IRect) Extension.ToGlobal(IRect) Extension.ToUnit(IRect) Extension.TopHalf(IRect) Extension.TopLeft(IRect) Extension.TopMid(IRect) Extension.TopRight(IRect) Extension.UDivide(IRect, int) Extension.VerticalMidHalf(IRect) Extension.WithNewHeight(IRect, int) Extension.WithNewWidth(IRect, int) FrameworkUtil.MouseInside(IRect) Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.IRouteWalker.html": {
    "href": "api/AngeliA.IRouteWalker.html",
    "title": "Interface IRouteWalker | AngeliA",
    "summary": "Interface IRouteWalker Interface that makes an entity walks along a given path Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public interface IRouteWalker Properties | Edit this page View Source CurrentDirection Which direction this entity is currently walking Declaration Direction8 CurrentDirection { get; set; } | Edit this page View Source TargetPosition Where does this entity currently walking Declaration Int2 TargetPosition { get; set; } Methods | Edit this page View Source GetNextRoutePosition(Entity, ref Direction8, ref Int2, int, int, bool, BlockType, bool, HashSet<int>) Get the position in global space that the walker entity should go to Declaration public static Int2 GetNextRoutePosition(Entity entity, ref Direction8 currentDirection, ref Int2 targetPosition, int pathID, int speed, bool allowTurnBack = false, BlockType pathType = BlockType.Element, bool allowTilt = true, HashSet<int> pathSet = null) Parameters Type Name Description Entity entity Target entity that walks Direction8 currentDirection Which direction this entity is currently walking Int2 targetPosition Where does this entity currently walking int pathID Which map block should be treat as the path marker int speed Movement speed in global space bool allowTurnBack True if the walker turn back when reach the edge BlockType pathType Block type of the path marker bool allowTilt True if the walker can walk diagonally HashSet<int> pathSet A hash set of path marks, set to null if there's only one mark Returns Type Description Int2 The final position in global space | Edit this page View Source GetNextRoutePosition(IRouteWalker, int, int, bool, BlockType, bool, HashSet<int>) Get the position in global space that the walker entity should go to Declaration public static Int2 GetNextRoutePosition(IRouteWalker walker, int pathID, int speed, bool allowTurnBack = false, BlockType pathType = BlockType.Element, bool allowTilt = true, HashSet<int> pathSet = null) Parameters Type Name Description IRouteWalker walker Target walker int pathID Which map block should be treat as the path marker int speed Movement speed in global space bool allowTurnBack True if the walker turn back when reach the edge BlockType pathType Block type of the path marker bool allowTilt True if the walker can walk diagonally HashSet<int> pathSet A hash set of path marks, set to null if there's only one mark Returns Type Description Int2 The final position in global space | Edit this page View Source TryGetRouteFromMap(HashSet<int>, int, int, Direction8, out Direction8, BlockType, bool) Get path marker block from map Declaration public static bool TryGetRouteFromMap(HashSet<int> pathSet, int unitX, int unitY, Direction8 currentDirection, out Direction8 result, BlockType pathType = BlockType.Element, bool allowTilt = true) Parameters Type Name Description HashSet<int> pathSet A hash set of path marks, set to null if there's only one mark int unitX Position X in unit space int unitY Position Y in unit space Direction8 currentDirection Which direction this entity is currently walking Direction8 result Direction the walker should go BlockType pathType Block type of the path marker bool allowTilt True if the walker can walk diagonally Returns Type Description bool True if the path is successfuly found | Edit this page View Source TryGetRouteFromMap(int, int, int, Direction8, out Direction8, BlockType, bool) Get path marker block from map Declaration public static bool TryGetRouteFromMap(int pathID, int unitX, int unitY, Direction8 currentDirection, out Direction8 result, BlockType pathType = BlockType.Element, bool allowTilt = true) Parameters Type Name Description int pathID ID of the path marker block int unitX Position X in unit space int unitY Position Y in unit space Direction8 currentDirection Which direction this entity is currently walking Direction8 result Direction the walker should go BlockType pathType Block type of the path marker bool allowTilt True if the walker can walk diagonally Returns Type Description bool True if the path is successfuly found Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.IUndoItem.html": {
    "href": "api/AngeliA.IUndoItem.html",
    "title": "Interface IUndoItem | AngeliA",
    "summary": "Interface IUndoItem Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public interface IUndoItem Properties | Edit this page View Source Step Declaration int Step { get; set; } Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.IWindowEntityUI.html": {
    "href": "api/AngeliA.IWindowEntityUI.html",
    "title": "Interface IWindowEntityUI | AngeliA",
    "summary": "Interface IWindowEntityUI Interface that indicate the entity is a UI window Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public interface IWindowEntityUI Properties | Edit this page View Source BackgroundRect Rect position of the background in global space Declaration IRect BackgroundRect { get; } Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.IWithCharacterAttackness.html": {
    "href": "api/AngeliA.IWithCharacterAttackness.html",
    "title": "Interface IWithCharacterAttackness | AngeliA",
    "summary": "Interface IWithCharacterAttackness Interface that makes the entity contains a instance of character attackness behaviour Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public interface IWithCharacterAttackness Properties | Edit this page View Source CurrentAttackness Declaration CharacterAttackness CurrentAttackness { get; } Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.IWithCharacterBuff.html": {
    "href": "api/AngeliA.IWithCharacterBuff.html",
    "title": "Interface IWithCharacterBuff | AngeliA",
    "summary": "Interface IWithCharacterBuff Interface that makes the entity contains a instance of character buff behaviour Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public interface IWithCharacterBuff Properties | Edit this page View Source CurrentBuff Declaration CharacterBuff CurrentBuff { get; } Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.IWithCharacterHealth.html": {
    "href": "api/AngeliA.IWithCharacterHealth.html",
    "title": "Interface IWithCharacterHealth | AngeliA",
    "summary": "Interface IWithCharacterHealth Interface that makes the entity contains a instance of character health behaviour Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public interface IWithCharacterHealth Properties | Edit this page View Source CurrentHealth Declaration CharacterHealth CurrentHealth { get; } Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.IWithCharacterMovement.html": {
    "href": "api/AngeliA.IWithCharacterMovement.html",
    "title": "Interface IWithCharacterMovement | AngeliA",
    "summary": "Interface IWithCharacterMovement Interface that makes the entity contains a instance of character movement behaviour Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public interface IWithCharacterMovement Properties | Edit this page View Source CurrentMovement Declaration CharacterMovement CurrentMovement { get; } Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.IWithCharacterRenderer.html": {
    "href": "api/AngeliA.IWithCharacterRenderer.html",
    "title": "Interface IWithCharacterRenderer | AngeliA",
    "summary": "Interface IWithCharacterRenderer Interface that makes the entity contains a instance of character rendering behaviour Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public interface IWithCharacterRenderer Properties | Edit this page View Source CurrentRenderer Declaration CharacterRenderer CurrentRenderer { get; } Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.IgnoreArtworkPixelsAttribute.html": {
    "href": "api/AngeliA.IgnoreArtworkPixelsAttribute.html",
    "title": "Class IgnoreArtworkPixelsAttribute | AngeliA",
    "summary": "Class IgnoreArtworkPixelsAttribute Current application do not load pixel data from sheet Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax [AttributeUsage(AttributeTargets.Assembly, AllowMultiple = true)] public class IgnoreArtworkPixelsAttribute : Attribute Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.IgnoreInputScope.html": {
    "href": "api/AngeliA.IgnoreInputScope.html",
    "title": "Struct IgnoreInputScope | AngeliA",
    "summary": "Struct IgnoreInputScope Scope that make GUI elements ignore keyboard or mouse input from user Implements IDisposable Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public readonly struct IgnoreInputScope : IDisposable Examples using AngeliA; namespace AngeliaGame; public class Example { [OnGameUpdate] internal static void OnGameUpdate () { using (new IgnoreInputScope()) { // GUI elements inside will ignore keyboard or mouse input from user } } } Constructors | Edit this page View Source IgnoreInputScope(bool, bool) Declaration public IgnoreInputScope(bool ignoreKey = true, bool ignoreMouse = true) Methods | Edit this page View Source Dispose() Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources. Declaration public void Dispose() Implements IDisposable Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.Input.html": {
    "href": "api/AngeliA.Input.html",
    "title": "Class Input | AngeliA",
    "summary": "Class Input Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public static class Input Properties | Edit this page View Source AllowGamepad Declaration public static bool AllowGamepad { get; set; } | Edit this page View Source AnyGamekeyDown Declaration public static bool AnyGamekeyDown { get; } | Edit this page View Source AnyGamekeyHolding Declaration public static bool AnyGamekeyHolding { get; } | Edit this page View Source AnyGamepadButtonDown Declaration public static bool AnyGamepadButtonDown { get; } | Edit this page View Source AnyGamepadButtonHolding Declaration public static bool AnyGamepadButtonHolding { get; } | Edit this page View Source AnyKeyDown Declaration public static bool AnyKeyDown { get; } | Edit this page View Source AnyKeyHolding Declaration public static bool AnyKeyHolding { get; } | Edit this page View Source AnyKeyboardKeyDown Declaration public static bool AnyKeyboardKeyDown { get; } | Edit this page View Source AnyKeyboardKeyHolding Declaration public static bool AnyKeyboardKeyHolding { get; } | Edit this page View Source AnyMouseButtonDown Declaration public static bool AnyMouseButtonDown { get; } | Edit this page View Source AnyMouseButtonHolding Declaration public static bool AnyMouseButtonHolding { get; } | Edit this page View Source Direction Declaration public static Int2 Direction { get; } | Edit this page View Source DirectionX Declaration public static Direction3 DirectionX { get; } | Edit this page View Source DirectionY Declaration public static Direction3 DirectionY { get; } | Edit this page View Source HoldingAlt Declaration public static bool HoldingAlt { get; } | Edit this page View Source HoldingCtrl Declaration public static bool HoldingCtrl { get; } | Edit this page View Source HoldingShift Declaration public static bool HoldingShift { get; } | Edit this page View Source IgnoreMouseToActionFrame Declaration public static int IgnoreMouseToActionFrame { get; } | Edit this page View Source IgnoreMouseToJumpFrame Declaration public static int IgnoreMouseToJumpFrame { get; } | Edit this page View Source IgnoreRightStickToMouseWheelFrame Declaration public static int IgnoreRightStickToMouseWheelFrame { get; } | Edit this page View Source IgnoringKeyInput Declaration public static bool IgnoringKeyInput { get; } | Edit this page View Source IgnoringMouseInput Declaration public static bool IgnoringMouseInput { get; } | Edit this page View Source LastActionFromMouse Declaration public static bool LastActionFromMouse { get; } | Edit this page View Source LastMouseLeftButtonDownFrame Declaration public static (int prev, int current) LastMouseLeftButtonDownFrame { get; } | Edit this page View Source LastMouseMidButtonDownFrame Declaration public static (int prev, int current) LastMouseMidButtonDownFrame { get; } | Edit this page View Source LastMouseRightButtonDownFrame Declaration public static (int prev, int current) LastMouseRightButtonDownFrame { get; } | Edit this page View Source MidMouseToActionFrame Declaration public static int MidMouseToActionFrame { get; } | Edit this page View Source MouseGlobalPosition Declaration public static Int2 MouseGlobalPosition { get; } | Edit this page View Source MouseGlobalPositionDelta Declaration public static Int2 MouseGlobalPositionDelta { get; } | Edit this page View Source MouseLeftButtonDown Declaration public static bool MouseLeftButtonDown { get; } | Edit this page View Source MouseLeftButtonHolding Declaration public static bool MouseLeftButtonHolding { get; } | Edit this page View Source MouseLeftDownGlobalPosition Declaration public static Int2 MouseLeftDownGlobalPosition { get; } | Edit this page View Source MouseMidButtonDown Declaration public static bool MouseMidButtonDown { get; } | Edit this page View Source MouseMidButtonHolding Declaration public static bool MouseMidButtonHolding { get; } | Edit this page View Source MouseMidDownGlobalPosition Declaration public static Int2 MouseMidDownGlobalPosition { get; } | Edit this page View Source MouseMove Declaration public static bool MouseMove { get; } | Edit this page View Source MousePositionShift Declaration public static Int2 MousePositionShift { get; } | Edit this page View Source MouseRightButtonDown Declaration public static bool MouseRightButtonDown { get; } | Edit this page View Source MouseRightButtonHolding Declaration public static bool MouseRightButtonHolding { get; } | Edit this page View Source MouseRightDownGlobalPosition Declaration public static Int2 MouseRightDownGlobalPosition { get; } | Edit this page View Source MouseScreenPosition Declaration public static Int2 MouseScreenPosition { get; } | Edit this page View Source MouseScreenPositionDelta Declaration public static Int2 MouseScreenPositionDelta { get; } | Edit this page View Source MouseWheelDelta Declaration public static int MouseWheelDelta { get; } | Edit this page View Source UnshiftedMouseGlobalPosition Declaration public static Int2 UnshiftedMouseGlobalPosition { get; } | Edit this page View Source UsingGamepad Declaration public static bool UsingGamepad { get; } | Edit this page View Source UsingLeftStick Declaration public static bool UsingLeftStick { get; } Methods | Edit this page View Source CancelIgnoreKeyInput() Declaration public static void CancelIgnoreKeyInput() | Edit this page View Source CancelIgnoreMouseInput() Declaration public static void CancelIgnoreMouseInput() | Edit this page View Source GameKeyDown(Gamekey) Declaration public static bool GameKeyDown(Gamekey key) | Edit this page View Source GameKeyDownGUI(Gamekey) Declaration public static bool GameKeyDownGUI(Gamekey key) | Edit this page View Source GameKeyHolding(Gamekey) Declaration public static bool GameKeyHolding(Gamekey key) | Edit this page View Source GameKeyUp(Gamekey) Declaration public static bool GameKeyUp(Gamekey key) | Edit this page View Source GetDefaultGamepadMap(Gamekey) Declaration public static GamepadKey GetDefaultGamepadMap(Gamekey key) | Edit this page View Source GetDefaultKeyboardMap(Gamekey) Declaration public static KeyboardKey GetDefaultKeyboardMap(Gamekey key) | Edit this page View Source GetGamepadMap(Gamekey) Declaration public static GamepadKey GetGamepadMap(Gamekey key) | Edit this page View Source GetHoldingMouseButton() Declaration public static int GetHoldingMouseButton() | Edit this page View Source GetKeyboardMap(Gamekey) Declaration public static KeyboardKey GetKeyboardMap(Gamekey key) | Edit this page View Source IgnoreAllInput(int) Declaration public static void IgnoreAllInput(int duration = 0) | Edit this page View Source IgnoreKeyInput(int) Declaration public static void IgnoreKeyInput(int duration = 0) | Edit this page View Source IgnoreMouseInput(int) Declaration public static void IgnoreMouseInput(int duration = 0) | Edit this page View Source IgnoreMouseToActionJump(bool, bool, bool, int) Declaration public static void IgnoreMouseToActionJump(bool ignoreAction = true, bool ignoreJump = true, bool useMidButtonAsAction = false, int duration = 1) | Edit this page View Source IgnoreRightStickToMouseWheel(int) Declaration public static void IgnoreRightStickToMouseWheel(int duration = 1) | Edit this page View Source KeyboardDown(KeyboardKey) Declaration public static bool KeyboardDown(KeyboardKey key) | Edit this page View Source KeyboardDownGUI(KeyboardKey) Declaration public static bool KeyboardDownGUI(KeyboardKey key) | Edit this page View Source KeyboardHolding(KeyboardKey) Declaration public static bool KeyboardHolding(KeyboardKey key) | Edit this page View Source KeyboardKeyUsed(KeyboardKey) Declaration public static bool KeyboardKeyUsed(KeyboardKey key) | Edit this page View Source KeyboardUp(KeyboardKey) Declaration public static bool KeyboardUp(KeyboardKey key) | Edit this page View Source MouseButtonHolding(int) Declaration public static bool MouseButtonHolding(int button) | Edit this page View Source MouseKeyUsed(int) Declaration public static bool MouseKeyUsed(int key) | Edit this page View Source OnGameInitialize() Declaration [OnGameInitialize(-128)] public static void OnGameInitialize() | Edit this page View Source OnGameInitializeLater() Declaration [OnGameInitializeLater(0)] public static TaskResult OnGameInitializeLater() | Edit this page View Source SetGamepadMap(Gamekey, GamepadKey) Declaration public static void SetGamepadMap(Gamekey gameKey, GamepadKey gamepadKey) | Edit this page View Source SetKeyboardMap(Gamekey, KeyboardKey) Declaration public static void SetKeyboardMap(Gamekey gameKey, KeyboardKey keyboardKey) | Edit this page View Source SetMousePositionShift(int, int) Declaration public static void SetMousePositionShift(int x, int y) | Edit this page View Source TryGetHoldingGamepadButton(out GamepadKey) Declaration public static bool TryGetHoldingGamepadButton(out GamepadKey button) | Edit this page View Source TryGetHoldingKeyboardKey(out KeyboardKey) Declaration public static bool TryGetHoldingKeyboardKey(out KeyboardKey key) | Edit this page View Source UnuseAllMouseKey() Declaration public static void UnuseAllMouseKey() | Edit this page View Source UnuseGameKey(Gamekey) Declaration public static void UnuseGameKey(Gamekey key) | Edit this page View Source UnuseKeyboardKey(KeyboardKey) Declaration public static void UnuseKeyboardKey(KeyboardKey key) | Edit this page View Source UnuseMouseKey(int) Declaration public static void UnuseMouseKey(int key) | Edit this page View Source UseAllHoldingKeys(bool) Declaration public static void UseAllHoldingKeys(bool ignoreMouse = false) | Edit this page View Source UseAllMouseKey() Declaration public static void UseAllMouseKey() | Edit this page View Source UseGameKey(Gamekey) Declaration public static void UseGameKey(Gamekey key) | Edit this page View Source UseKeyboardKey(KeyboardKey) Declaration public static void UseKeyboardKey(KeyboardKey key) | Edit this page View Source UseMouseKey(int) Declaration public static void UseMouseKey(int index)"
  },
  "api/AngeliA.Int2.html": {
    "href": "api/AngeliA.Int2.html",
    "title": "Struct Int2 | AngeliA",
    "summary": "Struct Int2 Implements IEquatable<Int2> IFormattable Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax [Serializable] public struct Int2 : IEquatable<Int2>, IFormattable Constructors | Edit this page View Source Int2(int, int) Declaration public Int2(int x, int y) Properties | Edit this page View Source Area Declaration public readonly int Area { get; } | Edit this page View Source this[int] Declaration public int this[int index] { readonly get; set; } | Edit this page View Source down Declaration public static Int2 down { get; } | Edit this page View Source left Declaration public static Int2 left { get; } | Edit this page View Source magnitude Declaration public readonly float magnitude { get; } | Edit this page View Source one Declaration public static Int2 one { get; } | Edit this page View Source right Declaration public static Int2 right { get; } | Edit this page View Source sqrMagnitude Declaration public readonly int sqrMagnitude { get; } | Edit this page View Source up Declaration public static Int2 up { get; } | Edit this page View Source x Declaration public int x { readonly get; set; } | Edit this page View Source y Declaration public int y { readonly get; set; } | Edit this page View Source zero Declaration public static Int2 zero { get; } Methods | Edit this page View Source CeilToInt(Float2) Declaration public static Int2 CeilToInt(Float2 v) | Edit this page View Source Clamp(IRect) Declaration public void Clamp(IRect range) | Edit this page View Source Clamp(Int2, Int2) Declaration public void Clamp(Int2 min, Int2 max) | Edit this page View Source Deconstruct(out int, out int) Declaration public readonly void Deconstruct(out int x, out int y) | Edit this page View Source Distance(Int2, Int2) Declaration public static float Distance(Int2 a, Int2 b) | Edit this page View Source Equals(Int2) Indicates whether the current object is equal to another object of the same type. Declaration public readonly bool Equals(Int2 other) Parameters Type Name Description Int2 other An object to compare with this object. Returns Type Description bool true if the current object is equal to the other parameter; otherwise, false. | Edit this page View Source Equals(object) Indicates whether this instance and a specified object are equal. Declaration public override readonly bool Equals(object other) Returns Type Description bool true if obj and this instance are the same type and represent the same value; otherwise, false. Overrides ValueType.Equals(object) | Edit this page View Source FloorToInt(Float2) Declaration public static Int2 FloorToInt(Float2 v) | Edit this page View Source GetHashCode() Returns the hash code for this instance. Declaration public override readonly int GetHashCode() Returns Type Description int A 32-bit signed integer that is the hash code for this instance. Overrides ValueType.GetHashCode() | Edit this page View Source Max(Int2, Int2) Declaration public static Int2 Max(Int2 lhs, Int2 rhs) | Edit this page View Source Min(Int2, Int2) Declaration public static Int2 Min(Int2 lhs, Int2 rhs) | Edit this page View Source RoundToInt(Float2) Declaration public static Int2 RoundToInt(Float2 v) | Edit this page View Source Scale(Int2) Declaration public void Scale(Int2 scale) | Edit this page View Source Scale(Int2, Int2) Declaration public static Int2 Scale(Int2 a, Int2 b) | Edit this page View Source Set(int, int) Declaration public void Set(int x, int y) | Edit this page View Source Shift(int, int) Declaration public readonly Int2 Shift(int x, int y) | Edit this page View Source ToString() Returns the fully qualified type name of this instance. Declaration public override readonly string ToString() Returns Type Description string The fully qualified type name. Overrides ValueType.ToString() | Edit this page View Source ToString(string) Declaration public readonly string ToString(string format) | Edit this page View Source ToString(string, IFormatProvider) Formats the value of the current instance using the specified format. Declaration public readonly string ToString(string format, IFormatProvider formatProvider) Parameters Type Name Description string format The format to use. -or- A null reference (Nothing in Visual Basic) to use the default format defined for the type of the IFormattable implementation. IFormatProvider formatProvider The provider to use to format the value. -or- A null reference (Nothing in Visual Basic) to obtain the numeric format information from the current locale setting of the operating system. Returns Type Description string The value of the current instance in the specified format. Operators | Edit this page View Source operator +(Int2, Int2) Declaration public static Int2 operator +(Int2 a, Int2 b) | Edit this page View Source operator /(Int2, int) Declaration public static Int2 operator /(Int2 a, int b) | Edit this page View Source operator ==(Int2, Int2) Declaration public static bool operator ==(Int2 lhs, Int2 rhs) | Edit this page View Source explicit operator Int3(Int2) Declaration public static explicit operator Int3(Int2 v) | Edit this page View Source implicit operator Float2(Int2) Declaration public static implicit operator Float2(Int2 v) | Edit this page View Source operator !=(Int2, Int2) Declaration public static bool operator !=(Int2 lhs, Int2 rhs) | Edit this page View Source operator *(Int2, Int2) Declaration public static Int2 operator *(Int2 a, Int2 b) | Edit this page View Source operator *(Int2, int) Declaration public static Int2 operator *(Int2 a, int b) | Edit this page View Source operator *(int, Int2) Declaration public static Int2 operator *(int a, Int2 b) | Edit this page View Source operator -(Int2, Int2) Declaration public static Int2 operator -(Int2 a, Int2 b) | Edit this page View Source operator -(Int2) Declaration public static Int2 operator -(Int2 v) Implements IEquatable<T> IFormattable Extension Methods Extension.Clamp(ref Int2, IRect) Extension.Clamp(ref Int2, int, int, int, int) Extension.Clamped(Int2, IRect) Extension.Clamped(Int2, int, int, int, int) Extension.GetRotation(Int2) Extension.MoveTowards(Int2, Int2, Int2) Extension.MoveTowards(Int2, Int2, int) Extension.Shift(Int2, int, int) Extension.ShiftX(Int2, int) Extension.ShiftY(Int2, int) Extension.ToGlobal(Int2) Extension.ToUnifyGlobal(Int2) Extension.ToUnit(Int2) Extension.ToVector3Int(Int2, int) Extension.TryGetDirection8(Int2, out Direction8) Extension.UDivide(Int2, int) Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.Int3.html": {
    "href": "api/AngeliA.Int3.html",
    "title": "Struct Int3 | AngeliA",
    "summary": "Struct Int3 Implements IEquatable<Int3> IFormattable Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax [Serializable] public struct Int3 : IEquatable<Int3>, IFormattable Constructors | Edit this page View Source Int3(int, int) Declaration public Int3(int x, int y) | Edit this page View Source Int3(int, int, int) Declaration public Int3(int x, int y, int z) Properties | Edit this page View Source this[int] Declaration public int this[int index] { readonly get; set; } | Edit this page View Source back Declaration public static Int3 back { get; } | Edit this page View Source down Declaration public static Int3 down { get; } | Edit this page View Source forward Declaration public static Int3 forward { get; } | Edit this page View Source left Declaration public static Int3 left { get; } | Edit this page View Source magnitude Declaration public readonly float magnitude { get; } | Edit this page View Source one Declaration public static Int3 one { get; } | Edit this page View Source right Declaration public static Int3 right { get; } | Edit this page View Source sqrMagnitude Declaration public readonly int sqrMagnitude { get; } | Edit this page View Source up Declaration public static Int3 up { get; } | Edit this page View Source x Declaration public int x { readonly get; set; } | Edit this page View Source y Declaration public int y { readonly get; set; } | Edit this page View Source z Declaration public int z { readonly get; set; } | Edit this page View Source zero Declaration public static Int3 zero { get; } Methods | Edit this page View Source CeilToInt(Float3) Declaration public static Int3 CeilToInt(Float3 v) | Edit this page View Source Clamp(Int3, Int3) Declaration public void Clamp(Int3 min, Int3 max) | Edit this page View Source Distance(Int3, Int3) Declaration public static float Distance(Int3 a, Int3 b) | Edit this page View Source Equals(Int3) Indicates whether the current object is equal to another object of the same type. Declaration public readonly bool Equals(Int3 other) Parameters Type Name Description Int3 other An object to compare with this object. Returns Type Description bool true if the current object is equal to the other parameter; otherwise, false. | Edit this page View Source Equals(object) Indicates whether this instance and a specified object are equal. Declaration public override readonly bool Equals(object other) Returns Type Description bool true if obj and this instance are the same type and represent the same value; otherwise, false. Overrides ValueType.Equals(object) | Edit this page View Source FloorToInt(Float3) Declaration public static Int3 FloorToInt(Float3 v) | Edit this page View Source GetHashCode() Returns the hash code for this instance. Declaration public override readonly int GetHashCode() Returns Type Description int A 32-bit signed integer that is the hash code for this instance. Overrides ValueType.GetHashCode() | Edit this page View Source Max(Int3, Int3) Declaration public static Int3 Max(Int3 lhs, Int3 rhs) | Edit this page View Source Min(Int3, Int3) Declaration public static Int3 Min(Int3 lhs, Int3 rhs) | Edit this page View Source RoundToInt(Float3) Declaration public static Int3 RoundToInt(Float3 v) | Edit this page View Source Scale(Int3) Declaration public void Scale(Int3 scale) | Edit this page View Source Scale(Int3, Int3) Declaration public static Int3 Scale(Int3 a, Int3 b) | Edit this page View Source Set(int, int, int) Declaration public void Set(int x, int y, int z) | Edit this page View Source Shift(int, int, int) Declaration public readonly Int3 Shift(int x, int y, int z = 0) | Edit this page View Source ToString() Returns the fully qualified type name of this instance. Declaration public override readonly string ToString() Returns Type Description string The fully qualified type name. Overrides ValueType.ToString() | Edit this page View Source ToString(string) Declaration public readonly string ToString(string format) | Edit this page View Source ToString(string, IFormatProvider) Formats the value of the current instance using the specified format. Declaration public readonly string ToString(string format, IFormatProvider formatProvider) Parameters Type Name Description string format The format to use. -or- A null reference (Nothing in Visual Basic) to use the default format defined for the type of the IFormattable implementation. IFormatProvider formatProvider The provider to use to format the value. -or- A null reference (Nothing in Visual Basic) to obtain the numeric format information from the current locale setting of the operating system. Returns Type Description string The value of the current instance in the specified format. Operators | Edit this page View Source operator +(Int3, Int3) Declaration public static Int3 operator +(Int3 a, Int3 b) | Edit this page View Source operator /(Int3, int) Declaration public static Int3 operator /(Int3 a, int b) | Edit this page View Source operator ==(Int3, Int3) Declaration public static bool operator ==(Int3 lhs, Int3 rhs) | Edit this page View Source explicit operator Int2(Int3) Declaration public static explicit operator Int2(Int3 v) | Edit this page View Source implicit operator Float3(Int3) Declaration public static implicit operator Float3(Int3 v) | Edit this page View Source operator !=(Int3, Int3) Declaration public static bool operator !=(Int3 lhs, Int3 rhs) | Edit this page View Source operator *(Int3, Int3) Declaration public static Int3 operator *(Int3 a, Int3 b) | Edit this page View Source operator *(Int3, int) Declaration public static Int3 operator *(Int3 a, int b) | Edit this page View Source operator *(int, Int3) Declaration public static Int3 operator *(int a, Int3 b) | Edit this page View Source operator -(Int3, Int3) Declaration public static Int3 operator -(Int3 a, Int3 b) | Edit this page View Source operator -(Int3) Declaration public static Int3 operator -(Int3 a) Implements IEquatable<T> IFormattable Extension Methods Extension.ToGlobal(Int3) Extension.ToUnifyGlobal(Int3) Extension.ToUnit(Int3) Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.Int4.html": {
    "href": "api/AngeliA.Int4.html",
    "title": "Struct Int4 | AngeliA",
    "summary": "Struct Int4 Implements IEquatable<Int4> IFormattable Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax [Serializable] public struct Int4 : IEquatable<Int4>, IFormattable Constructors | Edit this page View Source Int4(int, int, int, int) Declaration public Int4(int x, int y, int z, int w) Fields | Edit this page View Source one Declaration public static readonly Int4 one | Edit this page View Source three Declaration public static readonly Int4 three | Edit this page View Source two Declaration public static readonly Int4 two | Edit this page View Source w Declaration public int w | Edit this page View Source x Declaration public int x | Edit this page View Source y Declaration public int y | Edit this page View Source z Declaration public int z | Edit this page View Source zero Declaration public static readonly Int4 zero Properties | Edit this page View Source IsZero Declaration public readonly bool IsZero { get; } | Edit this page View Source this[int] Declaration public int this[int index] { readonly get; set; } | Edit this page View Source down Declaration public int down { readonly get; set; } | Edit this page View Source horizontal Declaration public readonly int horizontal { get; } | Edit this page View Source left Declaration public int left { readonly get; set; } | Edit this page View Source right Declaration public int right { readonly get; set; } | Edit this page View Source up Declaration public int up { readonly get; set; } | Edit this page View Source vertical Declaration public readonly int vertical { get; } Methods | Edit this page View Source Contains(int) Declaration public readonly bool Contains(int value) | Edit this page View Source Count(int) Declaration public readonly int Count(int value) | Edit this page View Source Direction(int, int, int, int) Declaration public static Int4 Direction(int left, int right, int down, int up) | Edit this page View Source Equals(Int4) Indicates whether the current object is equal to another object of the same type. Declaration public readonly bool Equals(Int4 other) Parameters Type Name Description Int4 other An object to compare with this object. Returns Type Description bool true if the current object is equal to the other parameter; otherwise, false. | Edit this page View Source Equals(object) Indicates whether this instance and a specified object are equal. Declaration public override readonly bool Equals(object other) Returns Type Description bool true if obj and this instance are the same type and represent the same value; otherwise, false. Overrides ValueType.Equals(object) | Edit this page View Source FindIndex(int) Declaration public readonly int FindIndex(int value) | Edit this page View Source GetHashCode() Returns the hash code for this instance. Declaration public override readonly int GetHashCode() Returns Type Description int A 32-bit signed integer that is the hash code for this instance. Overrides ValueType.GetHashCode() | Edit this page View Source ToString() Returns the fully qualified type name of this instance. Declaration public override readonly string ToString() Returns Type Description string The fully qualified type name. Overrides ValueType.ToString() | Edit this page View Source ToString(string) Declaration public readonly string ToString(string format) | Edit this page View Source ToString(string, IFormatProvider) Formats the value of the current instance using the specified format. Declaration public readonly string ToString(string format, IFormatProvider formatProvider) Parameters Type Name Description string format The format to use. -or- A null reference (Nothing in Visual Basic) to use the default format defined for the type of the IFormattable implementation. IFormatProvider formatProvider The provider to use to format the value. -or- A null reference (Nothing in Visual Basic) to obtain the numeric format information from the current locale setting of the operating system. Returns Type Description string The value of the current instance in the specified format. Operators | Edit this page View Source operator +(Int4, Int4) Declaration public static Int4 operator +(Int4 a, Int4 b) | Edit this page View Source operator /(Int4, int) Declaration public static Int4 operator /(Int4 a, int b) | Edit this page View Source operator ==(Int4, Int4) Declaration public static bool operator ==(Int4 a, Int4 b) | Edit this page View Source explicit operator Int2(Int4) Declaration public static explicit operator Int2(Int4 i) | Edit this page View Source explicit operator Int3(Int4) Declaration public static explicit operator Int3(Int4 i) | Edit this page View Source operator !=(Int4, Int4) Declaration public static bool operator !=(Int4 a, Int4 b) | Edit this page View Source operator *(Int4, int) Declaration public static Int4 operator *(Int4 a, int b) | Edit this page View Source operator *(int, Int4) Declaration public static Int4 operator *(int b, Int4 a) Implements IEquatable<T> IFormattable Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.IntToChars.html": {
    "href": "api/AngeliA.IntToChars.html",
    "title": "Class IntToChars | AngeliA",
    "summary": "Class IntToChars Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public class IntToChars Constructors | Edit this page View Source IntToChars(string, string) Declaration public IntToChars(string prefix = \"\", string suffix = \"\") Fields | Edit this page View Source CharsValue Declaration public readonly char[] CharsValue | Edit this page View Source Prefix Declaration public readonly string Prefix | Edit this page View Source Suffix Declaration public readonly string Suffix Methods | Edit this page View Source Chars_to_Int(char[], int) Declaration public static int Chars_to_Int(char[] charsValue, int startIndex = 0) | Edit this page View Source GetChars(int) Declaration public char[] GetChars(int value) | Edit this page View Source Int_to_Chars(int, char[], ref int) Declaration public static void Int_to_Chars(int intValue, char[] charsValue, ref int startIndex) Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.Inventory.html": {
    "href": "api/AngeliA.Inventory.html",
    "title": "Class Inventory | AngeliA",
    "summary": "Class Inventory Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public static class Inventory Properties | Edit this page View Source PoolReady Declaration public static bool PoolReady { get; } Methods | Edit this page View Source AddItemAt(int, int, int) Declaration public static int AddItemAt(int inventoryID, int itemIndex, int count = 1) Returns Type Description int How many items has been added. Return 0 means no item added. Return \"count\" means all items added. | Edit this page View Source CollectItem(int, int, int, bool, bool, bool) Declaration public static int CollectItem(int inventoryID, int item, int count = 1, bool ignoreEquipment = true, bool ignoreInventory = false, bool dontCollectIntoEmptyEquipmentSlot = false) Returns Type Description int How many items has been collected. Return 0 means no item collected. Return \"count\" means all items collected. | Edit this page View Source CollectItem(int, int, out int, int, bool, bool, bool) Declaration public static int CollectItem(int inventoryID, int item, out int collectIndex, int count = 1, bool ignoreEquipment = true, bool ignoreInventory = false, bool dontCollectIntoEmptyEquipmentSlot = false) | Edit this page View Source FillEquipmentFromInventory(int, EquipmentType) Declaration public static void FillEquipmentFromInventory(int inventoryID, EquipmentType type) | Edit this page View Source FindAndAddItem(int, int, int, bool) Declaration public static int FindAndAddItem(int inventoryID, int targetItemID, int count = 1, bool ignoreEquipment = true) Returns Type Description int How many items has been added. Return 0 means no item added. Return \"count\" means all items added. | Edit this page View Source FindAndTakeItem(int, int, int) Declaration public static int FindAndTakeItem(int inventoryID, int targetItemID, int count = 1) Returns Type Description int How many items has been taken. Return 0 means no item taken. Return \"count\" means all items taken. | Edit this page View Source GetEquipment(int, EquipmentType, out int) Declaration public static int GetEquipment(int inventoryID, EquipmentType type, out int equipmentCount) | Edit this page View Source GetInventoryCapacity(int) Declaration public static int GetInventoryCapacity(int inventoryID) | Edit this page View Source GetInventoryIdFromBasicIdAndPos(int, string, Int3) Declaration public static int GetInventoryIdFromBasicIdAndPos(int basicID, string baseName, Int3 mapPos) | Edit this page View Source GetInventoryMapPosFromName(string, out string) Declaration public static Int3 GetInventoryMapPosFromName(string invNameWithoutExt, out string basicName) | Edit this page View Source GetItemAt(int, int) Declaration public static int GetItemAt(int inventoryID, int itemIndex) | Edit this page View Source GetItemAt(int, int, out int) Declaration public static int GetItemAt(int inventoryID, int itemIndex, out int count) | Edit this page View Source GetItemCount(int, int) Declaration public static int GetItemCount(int inventoryID, int itemIndex) | Edit this page View Source GiveItemToTarget(Entity, int, int, bool) Declaration public static bool GiveItemToTarget(Entity target, int itemID, int count = 1, bool spawnWhenInventoryFull = true) | Edit this page View Source HasEnoughRoomToCollect(int, int, int) Declaration public static bool HasEnoughRoomToCollect(int inventoryID, int item, int count) | Edit this page View Source HasInventory(int) Declaration public static bool HasInventory(int inventoryID) | Edit this page View Source HasItem(int, int, bool) Declaration public static bool HasItem(int inventoryID, int itemID, bool includeEquipment = true) | Edit this page View Source IndexOfItem(int, int) Declaration public static int IndexOfItem(int inventoryID, int itemID) | Edit this page View Source InitializeInventoryData(int, string, int, Int3, bool) Declaration public static int InitializeInventoryData(int basicID, string basicName, int capacity, Int3 mapUnitPos, bool hasEquipment = false) | Edit this page View Source InitializeInventoryData(int, string, int, bool) Declaration public static int InitializeInventoryData(int basicID, string basicName, int capacity, bool hasEquipment = false) | Edit this page View Source InitializeInventoryData(string, int, Int3, bool) Declaration public static int InitializeInventoryData(string basicName, int capacity, Int3 mapUnitPos, bool hasEquipment = false) | Edit this page View Source InitializeInventoryData(string, int, bool) Declaration public static int InitializeInventoryData(string basicName, int capacity, bool hasEquipment = false) | Edit this page View Source ItemTotalCount(int, int, bool) Declaration public static int ItemTotalCount(int inventoryID, int itemID, bool ignoreStack = false) | Edit this page View Source ItemTotalCount(int, int, int, out int, bool) Declaration public static int ItemTotalCount(int inventoryID, int itemID, int targetIndex, out int targetOrder, bool ignoreStack = false) | Edit this page View Source ItemTotalCount<I>(int, bool) Declaration public static int ItemTotalCount<I>(int inventoryID, bool ignoreStack = false) where I : Item | Edit this page View Source ItemTotalCount<I>(int, int, out int, bool) Declaration public static int ItemTotalCount<I>(int inventoryID, int targetIndex, out int targetOrder, bool ignoreStack = false) where I : Item | Edit this page View Source ReduceEquipmentCount(int, int, EquipmentType) Declaration public static void ReduceEquipmentCount(int inventoryID, int delta, EquipmentType type) | Edit this page View Source RepositionInventory(int, Int3) Declaration public static void RepositionInventory(int inventoryID, Int3 newMapUnitPosition) | Edit this page View Source ResizeInventory(int, int) Declaration public static void ResizeInventory(int inventoryID, int newSize) | Edit this page View Source SetEquipment(int, EquipmentType, int, int) Declaration public static bool SetEquipment(int inventoryID, EquipmentType type, int equipmentID, int equipmentCount) | Edit this page View Source SetItemAt(int, int, int, int) Declaration public static void SetItemAt(int inventoryID, int itemIndex, int newItem, int newCount) | Edit this page View Source TakeItemAt(int, int, int) Declaration public static int TakeItemAt(int inventoryID, int itemIndex, int count = 1) Returns Type Description int How many items has been taken. Return 0 means no item taken. Return \"count\" means all items taken. | Edit this page View Source UnlockAllItemsInside(int) Declaration public static void UnlockAllItemsInside(int inventoryID)"
  },
  "api/AngeliA.InventoryPartnerUI.html": {
    "href": "api/AngeliA.InventoryPartnerUI.html",
    "title": "Class InventoryPartnerUI | AngeliA",
    "summary": "Class InventoryPartnerUI A partner UI display on top of the player menu that display and manage an inventory Implements IWindowEntityUI Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public class InventoryPartnerUI : PlayerMenuPartnerUI, IWindowEntityUI Properties | Edit this page View Source AvatarID Artwork sprite ID of the avatar icon Declaration public int AvatarID { get; set; } | Edit this page View Source Column Inventory column count Declaration public override int Column { get; } Overrides PlayerMenuPartnerUI.Column | Edit this page View Source Row Inventory row count Declaration public override int Row { get; } Overrides PlayerMenuPartnerUI.Row | Edit this page View Source _Column Column count of the inventory Declaration public int _Column { get; set; } | Edit this page View Source _Row Row count of the inventory Declaration public int _Row { get; set; } Methods | Edit this page View Source DrawPanel(IRect) This function is called every frame for displaying this panel Declaration public override void DrawPanel(IRect panelRect) Parameters Type Name Description IRect panelRect Rect position for the range of this panel in global space Overrides PlayerMenuPartnerUI.DrawPanel(IRect) Implements IWindowEntityUI Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.Item.html": {
    "href": "api/AngeliA.Item.html",
    "title": "Class Item | AngeliA",
    "summary": "Class Item Basic unit inside inventory system. ※※⚠ Use global single instance ⚠※※ Implements IMapItem Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax [Entity.MapEditorGroup(\"Item\", 0)] public abstract class Item : IMapItem Constructors | Edit this page View Source Item() Declaration public Item() Properties | Edit this page View Source AllowDuplicateUpdate True if same type of item can update multiple times during same frame for same holder Declaration public virtual bool AllowDuplicateUpdate { get; } | Edit this page View Source EmbedIntoLevel True if this item can Embed into level blocks and get spawn when the block is picked. (like ore inside stone) Declaration public virtual bool EmbedIntoLevel { get; } | Edit this page View Source MaxStackCount Count limitation for multiple items inside one inventory slot Declaration public abstract int MaxStackCount { get; } | Edit this page View Source TypeID Unique ID for this type of item Declaration public int TypeID { get; init; } Methods | Edit this page View Source BeforeItemUpdate_FromEquipment(Character) This function is called every frame when the holder is equipping this item Declaration public virtual void BeforeItemUpdate_FromEquipment(Character holder) | Edit this page View Source BeforeItemUpdate_FromInventory(Character, int, int) This function is called every frame when this item is in an holder's inventory Declaration public virtual void BeforeItemUpdate_FromInventory(Character holder, int inventoryID, int itemIndex) Parameters Type Name Description Character holder The holder of the inventory int inventoryID ID of the inventory | Edit this page View Source BeforePoseAnimationUpdate_FromEquipment(PoseCharacterRenderer) This function is called every frame when a pose-style character equipping this item Declaration public virtual void BeforePoseAnimationUpdate_FromEquipment(PoseCharacterRenderer rendering) | Edit this page View Source CanUse(Character) True if this item can be use at current frame Declaration public virtual bool CanUse(Character holder) Parameters Type Name Description Character holder Holder that trying to use this item | Edit this page View Source DrawItem(Entity, IRect, Color32, int) Call this function to render the item Declaration public virtual void DrawItem(Entity holder, IRect rect, Color32 tint, int z) Parameters Type Name Description Entity holder Holder that own this item IRect rect Rect position in global space Color32 tint Color tint int z Z value for sort rendering cells | Edit this page View Source ItemConditionCheck(Character) True if the item should receive update callback at current condition Declaration public virtual bool ItemConditionCheck(Character holder) Parameters Type Name Description Character holder Holder that own this item | Edit this page View Source OnCharacterAttack_FromEquipment(Character, Bullet) This function is called when the holder attack with this item equipping Declaration public virtual void OnCharacterAttack_FromEquipment(Character character, Bullet bullet) Bullet bullet Instance of the bullet entity from the attack | Edit this page View Source OnCharacterAttack_FromInventory(Character, Bullet, int, int) This function is called when holder attacks Declaration public virtual void OnCharacterAttack_FromInventory(Character character, Bullet bullet, int inventoryID, int itemIndex) Parameters Type Name Description Character character The inventory holder Bullet bullet Bullet entity this attack spawns int inventoryID ID of the inventory | Edit this page View Source OnCollect(Character) This function is called when this item get collect from ItemHolder Declaration public virtual void OnCollect(Character holder) Parameters Type Name Description Character holder Character that collects this item | Edit this page View Source OnItemUpdate_FromEquipment(Character) This function is called every frame when the holder is equipping this item Declaration public virtual void OnItemUpdate_FromEquipment(Character holder) | Edit this page View Source OnItemUpdate_FromInventory(Character, int, int) This function is called every frame when this item is in an holder's inventory Declaration public virtual void OnItemUpdate_FromInventory(Character holder, int inventoryID, int itemIndex) Parameters Type Name Description Character holder The holder of the inventory int inventoryID ID of the inventory | Edit this page View Source OnItemUpdate_FromItemHolder(ItemHolder, int) This funtion is called every frame when it's being holded by a ItemHolder entity on stage Declaration public virtual void OnItemUpdate_FromItemHolder(ItemHolder holder, int count) | Edit this page View Source OnPoseAnimationUpdate_FromEquipment(PoseCharacterRenderer) This function is called every frame when a pose-style character equipping this item Declaration public virtual void OnPoseAnimationUpdate_FromEquipment(PoseCharacterRenderer rendering) | Edit this page View Source OnPoseAnimationUpdate_FromInventory(PoseCharacterRenderer, int, int) This function is called every frame when pose-style character update after rendering is ready Declaration public virtual void OnPoseAnimationUpdate_FromInventory(PoseCharacterRenderer rendering, int inventoryID, int itemIndex) Parameters Type Name Description PoseCharacterRenderer rendering The inventory holder int inventoryID ID of the inventory | Edit this page View Source OnTakeDamage_FromEquipment(Character, ref Damage) This function is called when the holder took damage with this item equipping Declaration public virtual void OnTakeDamage_FromEquipment(Character holder, ref Damage damage) | Edit this page View Source OnTakeDamage_FromInventory(Character, int, int, ref Damage) This function is called when holder take damage Declaration public virtual void OnTakeDamage_FromInventory(Character holder, int inventoryID, int itemIndex, ref Damage damage) Parameters Type Name Description Character holder The inventory holder int inventoryID ID of the inventory | Edit this page View Source TryRepairEquipment(Character) Perform a repair for this item as an equipment Declaration public virtual bool TryRepairEquipment(Character holder) | Edit this page View Source Use(Character, int, int, out bool) Perform the logic when the item get used Declaration public virtual bool Use(Character holder, int inventoryID, int itemIndex, out bool consume) Parameters Type Name Description Character holder Holder that using this item int inventoryID Inventory ID of this holder int itemIndex Index of this item inside the inventory bool consume True if the item should disappear after being used Returns Type Description bool True if the item is used Implements IMapItem Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.ItemCombinationAttribute-1.html": {
    "href": "api/AngeliA.ItemCombinationAttribute-1.html",
    "title": "Class ItemCombinationAttribute<I0> | AngeliA",
    "summary": "Class ItemCombinationAttribute<I0> Define a item combination to craft the item. Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax [AttributeUsage(AttributeTargets.Class, AllowMultiple = true)] public class ItemCombinationAttribute<I0> : BasicItemCombinationAttribute Type Parameters Name Description I0 Constructors | Edit this page View Source ItemCombinationAttribute(int, string, string, string, string, string, string, string) Define a item combination to craft the item. Declaration public ItemCombinationAttribute(int count = 1, string keepId0 = \"\", string keepId1 = \"\", string keepId2 = \"\", string keepId3 = \"\", string extraB = \"\", string extraC = \"\", string extraD = \"\") Parameters Type Name Description int count How many item does it craft at once string keepId0 Do not consume this item string keepId1 Do not consume this item string keepId2 Do not consume this item string keepId3 Do not consume this item string extraB Use this if the item is not based on class string extraC Use this if the item is not based on class string extraD Use this if the item is not based on class Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.ItemCombinationAttribute-2.html": {
    "href": "api/AngeliA.ItemCombinationAttribute-2.html",
    "title": "Class ItemCombinationAttribute<I0, I1> | AngeliA",
    "summary": "Class ItemCombinationAttribute<I0, I1> Define a item combination to craft the item. Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax [AttributeUsage(AttributeTargets.Class, AllowMultiple = true)] public class ItemCombinationAttribute<I0, I1> : BasicItemCombinationAttribute Type Parameters Name Description I0 I1 Constructors | Edit this page View Source ItemCombinationAttribute(int, string, string, string, string, string, string) Define a item combination to craft the item. Declaration public ItemCombinationAttribute(int count = 1, string keepId0 = \"\", string keepId1 = \"\", string keepId2 = \"\", string keepId3 = \"\", string extraC = \"\", string extraD = \"\") Parameters Type Name Description int count How many item does it craft at once string keepId0 Do not consume this item string keepId1 Do not consume this item string keepId2 Do not consume this item string keepId3 Do not consume this item string extraC Use this if the item is not based on class string extraD Use this if the item is not based on class Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.ItemCombinationAttribute-3.html": {
    "href": "api/AngeliA.ItemCombinationAttribute-3.html",
    "title": "Class ItemCombinationAttribute<I0, I1, I2> | AngeliA",
    "summary": "Class ItemCombinationAttribute<I0, I1, I2> Define a item combination to craft the item. Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax [AttributeUsage(AttributeTargets.Class, AllowMultiple = true)] public class ItemCombinationAttribute<I0, I1, I2> : BasicItemCombinationAttribute Type Parameters Name Description I0 I1 I2 Constructors | Edit this page View Source ItemCombinationAttribute(int, string, string, string, string, string) Define a item combination to craft the item. Declaration public ItemCombinationAttribute(int count = 1, string keepId0 = \"\", string keepId1 = \"\", string keepId2 = \"\", string keepId3 = \"\", string extraD = \"\") Parameters Type Name Description int count How many item does it craft at once string keepId0 Do not consume this item string keepId1 Do not consume this item string keepId2 Do not consume this item string keepId3 Do not consume this item string extraD Use this if the item is not based on class Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.ItemCombinationAttribute-4.html": {
    "href": "api/AngeliA.ItemCombinationAttribute-4.html",
    "title": "Class ItemCombinationAttribute<I0, I1, I2, I3> | AngeliA",
    "summary": "Class ItemCombinationAttribute<I0, I1, I2, I3> Define a item combination to craft the item. Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax [AttributeUsage(AttributeTargets.Class, AllowMultiple = true)] public class ItemCombinationAttribute<I0, I1, I2, I3> : BasicItemCombinationAttribute Type Parameters Name Description I0 I1 I2 I3 Constructors | Edit this page View Source ItemCombinationAttribute(int, string, string, string, string) Define a item combination to craft the item. Declaration public ItemCombinationAttribute(int count = 1, string keepId0 = \"\", string keepId1 = \"\", string keepId2 = \"\", string keepId3 = \"\") Parameters Type Name Description int count How many item does it craft at once string keepId0 Do not consume this item string keepId1 Do not consume this item string keepId2 Do not consume this item string keepId3 Do not consume this item Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.ItemCombinationAttribute.html": {
    "href": "api/AngeliA.ItemCombinationAttribute.html",
    "title": "Class ItemCombinationAttribute | AngeliA",
    "summary": "Class ItemCombinationAttribute Define a item combination to craft the item. Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax [AttributeUsage(AttributeTargets.Class, AllowMultiple = true)] public class ItemCombinationAttribute : BasicItemCombinationAttribute Constructors | Edit this page View Source ItemCombinationAttribute(int, string, string, string, string, string, string, string, string) Define a item combination to craft the item. Declaration public ItemCombinationAttribute(int count = 1, string keepId0 = \"\", string keepId1 = \"\", string keepId2 = \"\", string keepId3 = \"\", string extraA = \"\", string extraB = \"\", string extraC = \"\", string extraD = \"\") Parameters Type Name Description int count How many item does it craft at once string keepId0 Do not consume this item string keepId1 Do not consume this item string keepId2 Do not consume this item string keepId3 Do not consume this item string extraA Use this if the item is not based on class string extraB Use this if the item is not based on class string extraC Use this if the item is not based on class string extraD Use this if the item is not based on class Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.ItemCombinationParam.html": {
    "href": "api/AngeliA.ItemCombinationParam.html",
    "title": "Class ItemCombinationParam | AngeliA",
    "summary": "Class ItemCombinationParam Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public sealed class ItemCombinationParam Operators | Edit this page View Source implicit operator int(ItemCombinationParam) Declaration public static implicit operator int(ItemCombinationParam param) | Edit this page View Source implicit operator string(ItemCombinationParam) Declaration public static implicit operator string(ItemCombinationParam param) | Edit this page View Source implicit operator ItemCombinationParam(string) Declaration public static implicit operator ItemCombinationParam(string name) | Edit this page View Source implicit operator ItemCombinationParam(Type) Declaration public static implicit operator ItemCombinationParam(Type type) Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.ItemDropAttribute-1.html": {
    "href": "api/AngeliA.ItemDropAttribute-1.html",
    "title": "Class ItemDropAttribute<I> | AngeliA",
    "summary": "Class ItemDropAttribute<I> Register item drop for the entity, use ItemSystem.DropItemFor(Entity) to perform the item drop. Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax [AttributeUsage(AttributeTargets.Class, AllowMultiple = true)] public class ItemDropAttribute<I> : ItemDropAttribute Type Parameters Name Description I Which item does it drops Constructors | Edit this page View Source ItemDropAttribute(int, int) Register item drop for the entity, use ItemSystem.DropItemFor(Entity) to perform the item drop. Declaration public ItemDropAttribute(int dropChance, int dropCount = 1) Parameters Type Name Description int dropChance Probability of dropping this item. 0 means 0%, 1000 means 100% int dropCount How many items does it drop at once Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.ItemDropAttribute.html": {
    "href": "api/AngeliA.ItemDropAttribute.html",
    "title": "Class ItemDropAttribute | AngeliA",
    "summary": "Class ItemDropAttribute Register item drop for the entity, use ItemSystem.DropItemFor(Entity) to perform the item drop. Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public abstract class ItemDropAttribute : Attribute Constructors | Edit this page View Source ItemDropAttribute(int, int, int) Register item drop for the entity, use ItemSystem.DropItemFor(Entity) to perform the item drop. Declaration protected ItemDropAttribute(int typeID, int dropChance, int dropCount = 1) int dropChance Probability of dropping this item. 0 means 0%, 1000 means 100% int dropCount How many items does it drop at once Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.ItemHolder.html": {
    "href": "api/AngeliA.ItemHolder.html",
    "title": "Class ItemHolder | AngeliA",
    "summary": "Class ItemHolder Entity that represent an item on map Implements IMapItem ICarrier Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax [Entity.Capacity(2048, 0)] [Entity.Layer(6)] public class ItemHolder : Rigidbody, IMapItem, ICarrier Fields | Edit this page View Source TYPE_ID Declaration public static readonly int TYPE_ID Properties | Edit this page View Source CarryOtherOnTop Trhe if this entity can carry other ICarrier on top Declaration public override bool CarryOtherOnTop { get; } Overrides Rigidbody.CarryOtherOnTop | Edit this page View Source ItemCount How many items does this holder contains Declaration public int ItemCount { get; set; } | Edit this page View Source ItemID Item ID from inventory system Declaration public int ItemID { get; set; } | Edit this page View Source PhysicalLayer Which physical layer should this entity fill it's collider in Declaration public override int PhysicalLayer { get; } Overrides Rigidbody.PhysicalLayer | Edit this page View Source SelfCollisionMask Intrinsic physics layers this entity should collide with Declaration public override int SelfCollisionMask { get; } Overrides Rigidbody.SelfCollisionMask Methods | Edit this page View Source BeforeUpdate() [2/4] This function is called every frame when entity is in stage. Prioritize using this function to update physics logic. Declaration public override void BeforeUpdate() Overrides Entity.BeforeUpdate() | Edit this page View Source ClearHoldingPool() Reset the internal data of the items that's exists outside player's view Declaration public static void ClearHoldingPool() | Edit this page View Source Collect(Character) Collect the item holded inside this container Declaration public bool Collect(Character character) Returns Type Description bool True if the item has been collected | Edit this page View Source FirstUpdate() [1/4] This function is called every frame when entity is in stage. Prioritize using this function to fill collider in to physics system. Declaration public override void FirstUpdate() Overrides Rigidbody.FirstUpdate() | Edit this page View Source InsideGroundCheck() Function that holds the stuch inside ground checking logic Declaration protected override bool InsideGroundCheck() Overrides Rigidbody.InsideGroundCheck() | Edit this page View Source Jump(int) Perform a jump for once Declaration public void Jump(int velocity = 42) Parameters Type Name Description int velocity Initial speed Y | Edit this page View Source LateUpdate() [4/4] This function is called every frame when entity is in stage. Prioritize using this function to render the entity. Declaration public override void LateUpdate() Overrides Entity.LateUpdate() | Edit this page View Source OnActivated() This function is called when entity enter the stage Declaration public override void OnActivated() Overrides Rigidbody.OnActivated() | Edit this page View Source OnInactivated() This function is called when entity leave the stage Declaration public override void OnInactivated() Overrides Entity.OnInactivated() | Edit this page View Source Update() [3/4] This function is called every frame when entity is in stage. Prioritize using this function to update physics logic. Declaration public override void Update() Overrides Rigidbody.Update() Implements IMapItem ICarrier Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.ItemSystem.ItemData.html": {
    "href": "api/AngeliA.ItemSystem.ItemData.html",
    "title": "Class ItemSystem.ItemData | AngeliA",
    "summary": "Class ItemSystem.ItemData Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public class ItemSystem.ItemData Constructors | Edit this page View Source ItemData(Item, int, int, string, int) Declaration public ItemData(Item item, int nameID, int descriptionID, string typeName, int maxStackCount) Fields | Edit this page View Source DescriptionID Declaration public int DescriptionID | Edit this page View Source Item Declaration public Item Item | Edit this page View Source MaxStackCount Declaration public int MaxStackCount | Edit this page View Source NameID Declaration public int NameID | Edit this page View Source TypeName Declaration public string TypeName | Edit this page View Source Unlocked Declaration public bool Unlocked Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.ItemSystem.html": {
    "href": "api/AngeliA.ItemSystem.html",
    "title": "Class ItemSystem | AngeliA",
    "summary": "Class ItemSystem Core system that handles item related logic Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public static class ItemSystem Properties | Edit this page View Source ItemPoolReady True if the system is ready to use Declaration public static bool ItemPoolReady { get; } | Edit this page View Source ItemUnlockReady True if the item unlock data is loaded Declaration public static bool ItemUnlockReady { get; } Methods | Edit this page View Source CanUseItem(int, Character) True if the item can be use by the given character Declaration public static bool CanUseItem(int id, Character target) | Edit this page View Source ClearCombination() Reset the system craft combination pool Declaration public static void ClearCombination() | Edit this page View Source DropItemFor(Entity) Perform an item drop the target entity when the entity is destroyed Declaration public static bool DropItemFor(Entity entity) Returns Type Description bool True if the item drop successfuly performs | Edit this page View Source DropItemFor(int, int, int) Perform an item drop the target entity when the entity is destroyed Declaration public static bool DropItemFor(int sourceID, int x, int y) Parameters Type Name Description int sourceID ID of the target entity int x Position X of the item holder appears in global space int y Position Y of the item holder appears in global space Returns Type Description bool True if the item drop successfuly performs | Edit this page View Source ForAllCombinations() Iterate through all crafting combination inside the pool Declaration public static IEnumerable<KeyValuePair<Int4, int>> ForAllCombinations() Examples using AngeliA; namespace AngeliaGame; public class Example { [OnGameInitializeLater(4096)] internal static void OnGameUpdate () { Debug.Log(\"All item combinations inside this game:\"); foreach (var com in ItemSystem.ForAllCombinations()) { string name0 = ItemSystem.GetItemDisplayName(com.Key.x); string name1 = ItemSystem.GetItemDisplayName(com.Key.y); string name2 = ItemSystem.GetItemDisplayName(com.Key.z); string name3 = ItemSystem.GetItemDisplayName(com.Key.w); string nameResult = ItemSystem.GetItemDisplayName(com.Value); Debug.Log($\"{name0} + {name1} + {name2} + {name3} = {nameResult}\"); } } } | Edit this page View Source GetItem(int) Get global single instance of the item from given ID Declaration public static Item GetItem(int id) | Edit this page View Source GetItemDescription(int) Get description from the language system from the given item ID Declaration public static string GetItemDescription(int id) | Edit this page View Source GetItemDisplayName(int) Get display name from the language system from the given item ID Declaration public static string GetItemDisplayName(int id) | Edit this page View Source GetItemMaxStackCount(int) Get stack count limit of the given item in inventory panel Declaration public static int GetItemMaxStackCount(int id) | Edit this page View Source GetRelatedCombinations(Int4, List<Int4>, int) Get all craft combination that include the given combination. This is for making a helper list for the user to know what items can they craft. Declaration public static void GetRelatedCombinations(Int4 combination, List<Int4> output, int materialCountLimit) Parameters Type Name Description Int4 combination Current combination the user putted into the crafting fields List<Int4> output The helper list data int materialCountLimit Combinations which have more source items than this number will be ignored | Edit this page View Source GetSortedCombination(int, int, int, int) Sort the given combination to make it always unique no matter what order the source items are Declaration public static Int4 GetSortedCombination(int a, int b, int c, int d) Parameters Type Name Description int a Crafting source item ID int b Crafting source item ID int c Crafting source item ID int d Crafting source item ID Returns Type Description Int4 Sorted combination ID | Edit this page View Source HasItem(int) True if there is an item inside the system pool for the given ID Declaration public static bool HasItem(int id) | Edit this page View Source IsEquipment(int) True if the given item is equipment type Declaration public static bool IsEquipment(int itemID) | Edit this page View Source IsEquipment(int, out EquipmentType) True if the given item is equipment type Declaration public static bool IsEquipment(int itemID, out EquipmentType type) | Edit this page View Source IsItemUnlocked(int) True if the given item is unlocked. Locked items will display as \"?\" in crafting UI helper menu Declaration public static bool IsItemUnlocked(int itemID) | Edit this page View Source SetItemUnlocked(int, bool) Set given item into locked or unlocked. Locked items will display as \"?\" in crafting UI helper menu Declaration public static void SetItemUnlocked(int itemID, bool unlocked) | Edit this page View Source SpawnItem(int, int, int, int, bool) Spawn an item holder entity that holds the given item. Declaration public static ItemHolder SpawnItem(int itemID, int x, int y, int count = 1, bool jump = true) Parameters Type Name Description int itemID Target item id int x Position X of the item holder in global space int y Position Y of the item holder in global space int count Count of the target item inside the item holder. This function always spawn only one item holder entity. bool jump True if the item holder entity jump up when it spawns Returns Type Description ItemHolder Instance of the item holder entity | Edit this page View Source TryGetCombination(int, int, int, int, out int, out int, out int, out int, out int, out int) Get item crafting combination data of the given item ID pair Declaration public static bool TryGetCombination(int item0, int item1, int item2, int item3, out int result, out int resultCount, out int keep0, out int keep1, out int keep2, out int keep3) Parameters Type Name Description int item0 Source item ID int item1 Source item ID int item2 Source item ID int item3 Source item ID int result Result item ID that the given pair will craft into int resultCount How many result item does a single craft will get int keep0 Source item ID which do not get consume after craft int keep1 Source item ID which do not get consume after craft int keep2 Source item ID which do not get consume after craft int keep3 Source item ID which do not get consume after craft Returns Type Description bool True if it is a valid craft combination"
  },
  "api/AngeliA.Jewelry.html": {
    "href": "api/AngeliA.Jewelry.html",
    "title": "Class Jewelry | AngeliA",
    "summary": "Class Jewelry A type of equipment that EquipmentType always set to Jewelry Implements IMapItem Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public abstract class Jewelry : Equipment, IMapItem Properties | Edit this page View Source EquipmentType Which type is this quipment Declaration public override sealed EquipmentType EquipmentType { get; } Overrides Equipment.EquipmentType Implements IMapItem Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.JsonUtil.html": {
    "href": "api/AngeliA.JsonUtil.html",
    "title": "Class JsonUtil | AngeliA",
    "summary": "Class JsonUtil Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public static class JsonUtil Methods | Edit this page View Source GetJsonPath<T>(string, string, string) Declaration public static string GetJsonPath<T>(string rootPath, string name = \"\", string ext = \"json\") | Edit this page View Source LoadJsonFromPath<T>(string) Declaration public static T LoadJsonFromPath<T>(string jsonPath) | Edit this page View Source LoadJson<T>(string, string, string) Declaration public static T LoadJson<T>(string rootPath, string name = \"\", string ext = \"json\") | Edit this page View Source LoadOrCreateJsonFromPath<T>(string) Declaration public static T LoadOrCreateJsonFromPath<T>(string jsonPath) where T : new() | Edit this page View Source LoadOrCreateJson<T>(string, string, string) Declaration public static T LoadOrCreateJson<T>(string rootPath, string name = \"\", string ext = \"json\") where T : new() | Edit this page View Source SaveJsonToPath(object, string, bool) Declaration public static void SaveJsonToPath(object data, string jsonPath, bool prettyPrint = false) | Edit this page View Source SaveJson<T>(T, string, string, string, bool) Declaration public static void SaveJson<T>(T data, string rootPath, string name = \"\", string ext = \"json\", bool prettyPrint = false)"
  },
  "api/AngeliA.KeyboardKey.html": {
    "href": "api/AngeliA.KeyboardKey.html",
    "title": "Enum KeyboardKey | AngeliA",
    "summary": "Enum KeyboardKey Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public enum KeyboardKey Fields Name Description A B Backquote Backslash Backspace C CapsLock Comma D Delete Digit0 Digit1 Digit2 Digit3 Digit4 Digit5 Digit6 Digit7 Digit8 Digit9 DownArrow E End Enter Equals Escape F F1 F10 F11 F12 F2 F3 F4 F5 F6 F7 F8 F9 G H Home I IMESelected Insert J K L LeftAlt LeftArrow LeftBracket LeftCtrl LeftMeta LeftShift M Minus N None NumLock Numpad0 Numpad1 Numpad2 Numpad3 Numpad4 Numpad5 Numpad6 Numpad7 Numpad8 Numpad9 NumpadDivide NumpadEnter NumpadEquals NumpadMinus NumpadMultiply NumpadPeriod NumpadPlus O OEM1 OEM2 OEM3 OEM4 OEM5 P PageDown PageUp Pause Period PrintScreen Q Quote R RightAlt RightArrow RightBracket RightCtrl RightMeta RightShift S ScrollLock Semicolon Slash Space T Tab U UpArrow V W X Y Z Extension Methods Extension.Next<KeyboardKey>(KeyboardKey) Extension.Prev<KeyboardKey>(KeyboardKey) Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.Language.html": {
    "href": "api/AngeliA.Language.html",
    "title": "Class Language | AngeliA",
    "summary": "Class Language Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public static class Language Properties | Edit this page View Source CurrentLanguage Declaration public static string CurrentLanguage { get; } | Edit this page View Source LanguageCount Declaration public static int LanguageCount { get; } | Edit this page View Source PoolReady Declaration public static bool PoolReady { get; } Methods | Edit this page View Source Get(int, string) Declaration public static string Get(int id, string failback = \"\") | Edit this page View Source GetLanguageAt(int) Declaration public static string GetLanguageAt(int index) | Edit this page View Source SetLanguage(string) Declaration public static bool SetLanguage(string language)"
  },
  "api/AngeliA.LanguageCode.html": {
    "href": "api/AngeliA.LanguageCode.html",
    "title": "Class LanguageCode | AngeliA",
    "summary": "Class LanguageCode Quick setup for an language system key Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public class LanguageCode Examples private static readonly LanguageCode LanguageCodeName = (\"Key for language system\", \"Default content in English\"); Constructors | Edit this page View Source LanguageCode(string, string) Quick setup for an language system key Declaration public LanguageCode(string name, string defaultValue) Examples private static readonly LanguageCode LanguageCodeName = (\"Key for language system\", \"Default content in English\"); Fields | Edit this page View Source ID Declaration public readonly int ID Properties | Edit this page View Source DefaultValue Declaration public string DefaultValue { get; } | Edit this page View Source Name Declaration public string Name { get; } Methods | Edit this page View Source ToString() Returns a string that represents the current object. Declaration public override string ToString() Returns Type Description string A string that represents the current object. Overrides object.ToString() Operators | Edit this page View Source implicit operator string(LanguageCode) Declaration public static implicit operator string(LanguageCode code) | Edit this page View Source implicit operator LanguageCode((string name, string defaultValue)) Declaration public static implicit operator LanguageCode((string name, string defaultValue) value) Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.LanguageUtil.html": {
    "href": "api/AngeliA.LanguageUtil.html",
    "title": "Class LanguageUtil | AngeliA",
    "summary": "Class LanguageUtil Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public static class LanguageUtil Fields | Edit this page View Source ADD_KEYS_FOR_ALL_LANGUAGE_CODE_SETTING_ID Declaration public const int ADD_KEYS_FOR_ALL_LANGUAGE_CODE_SETTING_ID = 914528783 Methods | Edit this page View Source AddKeysForAllLanguageCode(string) Declaration public static void AddKeysForAllLanguageCode(string languageRoot) | Edit this page View Source GetLanguageFolderPath(string, string) Declaration public static string GetLanguageFolderPath(string languageRoot, string language) | Edit this page View Source GetSystemLanguageISO() Declaration public static string GetSystemLanguageISO() | Edit this page View Source LoadAllPairsFromDiskAtPath(string, bool) Declaration public static IEnumerable<KeyValuePair<string, string>> LoadAllPairsFromDiskAtPath(string path, bool keepEscapeCharacters = false) | Edit this page View Source LoadAllPairsFromFolder(string, string, bool) Declaration public static IEnumerable<KeyValuePair<string, string>> LoadAllPairsFromFolder(string languageRoot, string language, bool keepEscapeCharacters = false) | Edit this page View Source SaveAllPairsToDisk(string, IEnumerable<KeyValuePair<string, string>>) Declaration public static void SaveAllPairsToDisk(string filePath, IEnumerable<KeyValuePair<string, string>> pairs)"
  },
  "api/AngeliA.LayerScope.html": {
    "href": "api/AngeliA.LayerScope.html",
    "title": "Struct LayerScope | AngeliA",
    "summary": "Struct LayerScope Scope that make rendering cells inside use given render layer Implements IDisposable Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public readonly struct LayerScope : IDisposable Examples using AngeliA; namespace AngeliaGame; public class Example { [OnGameUpdate] internal static void OnGameUpdate () { using (new LayerScope(RenderLayer.ADD)) { // Rendering cells inside will be draw into additive layer } } } Constructors | Edit this page View Source LayerScope(int) Scope that make rendering cells inside use given render layer Declaration public LayerScope(int layer) Parameters Type Name Description int layer Use RenderLayer.XXX to get this index Methods | Edit this page View Source Dispose() Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources. Declaration public void Dispose() Implements IDisposable Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.LightingSystem.html": {
    "href": "api/AngeliA.LightingSystem.html",
    "title": "Class LightingSystem | AngeliA",
    "summary": "Class LightingSystem Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public static class LightingSystem Fields | Edit this page View Source SETTING_AIR_ILLUMINANCE_DAY Declaration public const int SETTING_AIR_ILLUMINANCE_DAY = 948523 | Edit this page View Source SETTING_AIR_ILLUMINANCE_NIGHT Declaration public const int SETTING_AIR_ILLUMINANCE_NIGHT = 948524 | Edit this page View Source SETTING_BACKGROUND_TINT Declaration public const int SETTING_BACKGROUND_TINT = 948525 | Edit this page View Source SETTING_FREE_IN_GAME_DAYTIME Declaration public const int SETTING_FREE_IN_GAME_DAYTIME = 948528 | Edit this page View Source SETTING_IN_GAME_DAYTIME Declaration public const int SETTING_IN_GAME_DAYTIME = 948527 | Edit this page View Source SETTING_LEVEL_ILLUMINATE_REMAIN Declaration public const int SETTING_LEVEL_ILLUMINATE_REMAIN = 948526 | Edit this page View Source SETTING_PIXEL_STYLE Declaration public const int SETTING_PIXEL_STYLE = 948520 | Edit this page View Source SETTING_SELF_LERP Declaration public const int SETTING_SELF_LERP = 948521 | Edit this page View Source SETTING_SOLID_ILLUMINANCE Declaration public const int SETTING_SOLID_ILLUMINANCE = 948522 Properties | Edit this page View Source Enable Declaration public static bool Enable { get; } Methods | Edit this page View Source CancelIgnoreLighting() Declaration public static void CancelIgnoreLighting() | Edit this page View Source ForceAirLerp(float, int) Declaration public static void ForceAirLerp(float lerp, int duration = 1) | Edit this page View Source ForceCameraScale(float, int) Declaration public static void ForceCameraScale(float scale, int duration = 1) | Edit this page View Source IgnoreLighting(int) Declaration public static void IgnoreLighting(int duration = 1) | Edit this page View Source Illuminate(int, int, int, int) Declaration public static void Illuminate(int x, int y, int radius, int amount = 1000)"
  },
  "api/AngeliA.Long4.html": {
    "href": "api/AngeliA.Long4.html",
    "title": "Struct Long4 | AngeliA",
    "summary": "Struct Long4 Implements IEquatable<Long4> IFormattable Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax [Serializable] public struct Long4 : IEquatable<Long4>, IFormattable Constructors | Edit this page View Source Long4(long, long, long, long) Declaration public Long4(long x, long y, long z, long w) Fields | Edit this page View Source one Declaration public static readonly Long4 one | Edit this page View Source three Declaration public static readonly Long4 three | Edit this page View Source two Declaration public static readonly Long4 two | Edit this page View Source w Declaration public long w | Edit this page View Source x Declaration public long x | Edit this page View Source y Declaration public long y | Edit this page View Source z Declaration public long z | Edit this page View Source zero Declaration public static readonly Long4 zero Properties | Edit this page View Source IsZero Declaration public readonly bool IsZero { get; } | Edit this page View Source this[int] Declaration public long this[int index] { readonly get; set; } | Edit this page View Source down Declaration public long down { readonly get; set; } | Edit this page View Source horizontal Declaration public readonly long horizontal { get; } | Edit this page View Source left Declaration public long left { readonly get; set; } | Edit this page View Source right Declaration public long right { readonly get; set; } | Edit this page View Source up Declaration public long up { readonly get; set; } | Edit this page View Source vertical Declaration public readonly long vertical { get; } Methods | Edit this page View Source Contains(long) Declaration public readonly bool Contains(long value) | Edit this page View Source Direction(long, long, long, long) Declaration public static Long4 Direction(long left, long right, long down, long up) | Edit this page View Source Equals(Long4) Indicates whether the current object is equal to another object of the same type. Declaration public readonly bool Equals(Long4 other) Parameters Type Name Description Long4 other An object to compare with this object. Returns Type Description bool true if the current object is equal to the other parameter; otherwise, false. | Edit this page View Source Equals(object) Indicates whether this instance and a specified object are equal. Declaration public override readonly bool Equals(object other) Returns Type Description bool true if obj and this instance are the same type and represent the same value; otherwise, false. Overrides ValueType.Equals(object) | Edit this page View Source GetHashCode() Returns the hash code for this instance. Declaration public override readonly int GetHashCode() Returns Type Description int A 32-bit signed integer that is the hash code for this instance. Overrides ValueType.GetHashCode() | Edit this page View Source Swap(long, long) Declaration public bool Swap(long value, long newValue) | Edit this page View Source ToString() Returns the fully qualified type name of this instance. Declaration public override readonly string ToString() Returns Type Description string The fully qualified type name. Overrides ValueType.ToString() | Edit this page View Source ToString(string) Declaration public readonly string ToString(string format) | Edit this page View Source ToString(string, IFormatProvider) Formats the value of the current instance using the specified format. Declaration public readonly string ToString(string format, IFormatProvider formatProvider) Parameters Type Name Description string format The format to use. -or- A null reference (Nothing in Visual Basic) to use the default format defined for the type of the IFormattable implementation. IFormatProvider formatProvider The provider to use to format the value. -or- A null reference (Nothing in Visual Basic) to obtain the numeric format information from the current locale setting of the operating system. Returns Type Description string The value of the current instance in the specified format. Operators | Edit this page View Source operator +(Long4, Long4) Declaration public static Long4 operator +(Long4 a, Long4 b) | Edit this page View Source operator ==(Long4, Long4) Declaration public static bool operator ==(Long4 a, Long4 b) | Edit this page View Source operator !=(Long4, Long4) Declaration public static bool operator !=(Long4 a, Long4 b) | Edit this page View Source operator *(Long4, long) Declaration public static Long4 operator *(Long4 a, long b) | Edit this page View Source operator *(long, Long4) Declaration public static Long4 operator *(long b, Long4 a) Implements IEquatable<T> IFormattable Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.MapEditor.html": {
    "href": "api/AngeliA.MapEditor.html",
    "title": "Class MapEditor | AngeliA",
    "summary": "Class MapEditor Entity for edit the map in run-time Implements IMapItem IWindowEntityUI Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax [Entity.StageOrder(-4096)] public sealed class MapEditor : WindowUI, IMapItem, IWindowEntityUI Constructors | Edit this page View Source MapEditor() Declaration public MapEditor() Fields | Edit this page View Source SETTING_QUICK_PLAYER_DROP ID for send/receive remote setting with the engine Declaration public const int SETTING_QUICK_PLAYER_DROP = 921761 | Edit this page View Source SETTING_SHOW_BEHIND ID for send/receive remote setting with the engine Declaration public const int SETTING_SHOW_BEHIND = 921762 | Edit this page View Source SETTING_SHOW_GRID_GIZMOS ID for send/receive remote setting with the engine Declaration public const int SETTING_SHOW_GRID_GIZMOS = 921764 | Edit this page View Source SETTING_SHOW_STATE ID for send/receive remote setting with the engine Declaration public const int SETTING_SHOW_STATE = 921763 | Edit this page View Source TYPE_ID Map editor's type id Declaration public static readonly int TYPE_ID Properties | Edit this page View Source BackgroundRect Rect position of the background part in global space Declaration public override IRect BackgroundRect { get; } Overrides WindowUI.BackgroundRect | Edit this page View Source CurrentZ Current position Z value for the camera view Declaration public int CurrentZ { get; } | Edit this page View Source Instance Single instance of the map editor Declaration public static MapEditor Instance { get; } | Edit this page View Source IsActived True if the map editor entity is actived Declaration public static bool IsActived { get; } | Edit this page View Source IsEditing True if the map editor is in edit mode Declaration public static bool IsEditing { get; } | Edit this page View Source IsEditorNavigating True if the map editor entity is in navigating mode Declaration public static bool IsEditorNavigating { get; } | Edit this page View Source IsPlaying True if the map editor entity is in play mode Declaration public static bool IsPlaying { get; } Methods | Edit this page View Source OnActivated() This function is called when entity enter the stage Declaration public override void OnActivated() Overrides Entity.OnActivated() | Edit this page View Source Save(bool) Require save the data Declaration public override void Save(bool forceSave = false) Parameters Type Name Description bool forceSave True if this save performs without dirty checks Overrides WindowUI.Save(bool) | Edit this page View Source SetViewZ(int) Set view position Z for map editor Declaration public void SetViewZ(int newZ) | Edit this page View Source UpdateWindowUI() Declaration public override void UpdateWindowUI() Overrides WindowUI.UpdateWindowUI() Implements IMapItem IWindowEntityUI Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.MapEditorToolbarButton.html": {
    "href": "api/AngeliA.MapEditorToolbarButton.html",
    "title": "Class MapEditorToolbarButton | AngeliA",
    "summary": "Class MapEditorToolbarButton Base class for detect toolbar button logic of the map editor Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public abstract class MapEditorToolbarButton Properties | Edit this page View Source Active True if the button display inside the toolbar Declaration public virtual Func<bool> Active { get; } | Edit this page View Source Enable True if the button apears to be enabled Declaration public virtual Func<bool> Enable { get; } | Edit this page View Source Func This function is called when user click the button Declaration public abstract Action Func { get; } | Edit this page View Source Icon Icon artwork sprite for the button Declaration public abstract SpriteCode Icon { get; } | Edit this page View Source Order Order of the button inside the toolbar Declaration public virtual int Order { get; } | Edit this page View Source Tip Tooltip which shows when user hover mouse on it Declaration public abstract LanguageCode Tip { get; } Methods | Edit this page View Source ButtonGUI(IRect) Draw UI for the button Declaration public virtual void ButtonGUI(IRect rect) Parameters Type Name Description IRect rect Rect position in global space Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.MenuUI.html": {
    "href": "api/AngeliA.MenuUI.html",
    "title": "Class MenuUI | AngeliA",
    "summary": "Class MenuUI General class for menu entity ui Implements IMapItem IWindowEntityUI Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public abstract class MenuUI : EntityUI, IMapItem, IWindowEntityUI Fields | Edit this page View Source AllowMouseClick True if the menu react to mouse input Declaration protected bool AllowMouseClick | Edit this page View Source AnimationAmount How many amount of appearing animation should apply on this menu Declaration protected int AnimationAmount | Edit this page View Source ArrowMarkCode Artwork sprite for the adjusting arrows Declaration protected SpriteCode ArrowMarkCode | Edit this page View Source BackgroundCode Artwork sprite for the background Declaration protected SpriteCode BackgroundCode | Edit this page View Source BackgroundTint Color tint of the background panel Declaration protected Color32 BackgroundTint | Edit this page View Source ContentPadding Unified padding gap for the content panel Declaration protected Int4 ContentPadding | Edit this page View Source Interactable True if the menu react to player input currently Declaration protected bool Interactable | Edit this page View Source ItemGap Unified space between two items Declaration protected int ItemGap | Edit this page View Source ItemHeight Unified height of a single item Declaration protected int ItemHeight | Edit this page View Source MaxItemCount How many items can it display at the same time Declaration protected int MaxItemCount | Edit this page View Source MoreItemMarkCode Artwork sprite for the mark displays on bottom when there's hiden item under the menu Declaration protected SpriteCode MoreItemMarkCode | Edit this page View Source MoreMarkSize Unified size of the hidden item indicator Declaration protected Int2 MoreMarkSize | Edit this page View Source MoreMarkTint Color tint of the hidden item indicator Declaration protected Color32 MoreMarkTint | Edit this page View Source MouseHighlightTint Color tint for the current hovering item Declaration protected Color32 MouseHighlightTint | Edit this page View Source QuitOnPressStartOrEscKey True if the menu close when player press \"Start\" button Declaration protected bool QuitOnPressStartOrEscKey | Edit this page View Source ScreenTint Color tint that blocks all screen behind Declaration protected Color32 ScreenTint | Edit this page View Source SelectionArrowMarkSize Unified size of the item adjusting arrow Declaration protected Int2 SelectionArrowMarkSize | Edit this page View Source SelectionMarkCode Artwork sprite for the selecting item mark Declaration protected SpriteCode SelectionMarkCode | Edit this page View Source SelectionMarkSize Unified size of the selection hand mark Declaration protected Int2 SelectionMarkSize | Edit this page View Source SelectionMarkTint Color tint of the selecting hand mark Declaration protected Color32 SelectionMarkTint | Edit this page View Source WindowWidth Unified width of the window Declaration protected int WindowWidth Properties | Edit this page View Source AnimationDuration Length in frame for the appearing animation Declaration public int AnimationDuration { get; set; } | Edit this page View Source BackgroundRect Rect position of the background range in global space Declaration public IRect BackgroundRect { get; } | Edit this page View Source BackgroundStyle GUI style instance of the background panel Declaration protected GUIStyle BackgroundStyle { get; set; } | Edit this page View Source BlockEvent True if this UI blocks mouse button event Declaration protected override bool BlockEvent { get; } Overrides EntityUI.BlockEvent | Edit this page View Source DefaultContentStyle GUI style instance of the item content Declaration protected GUIStyle DefaultContentStyle { get; init; } | Edit this page View Source DefaultLabelStyle GUI style instance of the item label Declaration protected GUIStyle DefaultLabelStyle { get; init; } | Edit this page View Source Message Text content of the message display on top. Set to empty means no message should be display. Declaration public string Message { get; set; } | Edit this page View Source MessageStyle GUI style instance of the message box Declaration protected GUIStyle MessageStyle { get; set; } | Edit this page View Source OverrideWindowWidth Forced horizontal size in global space Declaration public int OverrideWindowWidth { get; set; } | Edit this page View Source SelectionIndex Index of the current selecting item Declaration public int SelectionIndex { get; } Methods | Edit this page View Source BeforeUpdate() [2/4] This function is called every frame when entity is in stage. Prioritize using this function to update physics logic. Declaration public override void BeforeUpdate() Overrides Entity.BeforeUpdate() | Edit this page View Source DrawArrowItem(string, char[], bool, bool, out int, int, GUIStyle, GUIStyle, bool) Draw an item inside the menu Declaration protected bool DrawArrowItem(string label, char[] chars, bool leftArrow, bool rightArrow, out int delta, int icon = 0, GUIStyle labelStyle = null, GUIStyle contentStyle = null, bool drawStyleBody = false) Parameters Type Name Description string label Text displays on left side of this item char[] chars Text displays on right side of this item int delta Adjusted value from the user at current frame int icon Artwork sprite GUIStyle labelStyle GUI style of the label part GUIStyle contentStyle GUI style of the content part bool drawStyleBody True if the body of GUI style should be display Returns Type Description bool True if the item is pressed | Edit this page View Source DrawArrowItem(string, string, bool, bool, out int, int, GUIStyle, GUIStyle, bool) Draw an item inside the menu Declaration protected bool DrawArrowItem(string label, string content, bool leftArrow, bool rightArrow, out int delta, int icon = 0, GUIStyle labelStyle = null, GUIStyle contentStyle = null, bool drawStyleBody = false) Parameters Type Name Description string label Text displays on left side of this item string content Text displays on right side of this item int delta Adjusted value from the user at current frame int icon Artwork sprite GUIStyle labelStyle GUI style of the label part GUIStyle contentStyle GUI style of the content part bool drawStyleBody True if the body of GUI style should be display Returns Type Description bool True if the item is pressed | Edit this page View Source DrawItem(string, char[], int, GUIStyle, GUIStyle, bool) Draw an item inside the menu Declaration protected bool DrawItem(string label, char[] chars, int icon = 0, GUIStyle labelStyle = null, GUIStyle contentStyle = null, bool drawStyleBody = false) Parameters Type Name Description string label Text displays on left side of this item char[] chars Text displays on right side of this item int icon Artwork sprite GUIStyle labelStyle GUI style of the label part GUIStyle contentStyle GUI style of the content part bool drawStyleBody True if the body of GUI style should be display Returns Type Description bool True if the item is pressed | Edit this page View Source DrawItem(string, int, GUIStyle, GUIStyle, bool) Draw an item inside the menu Declaration protected bool DrawItem(string label, int icon = 0, GUIStyle labelStyle = null, GUIStyle contentStyle = null, bool drawStyleBody = false) Parameters Type Name Description string label Text displays on left side of this item int icon Artwork sprite GUIStyle labelStyle GUI style of the label part GUIStyle contentStyle GUI style of the content part bool drawStyleBody True if the body of GUI style should be display Returns Type Description bool True if the item is pressed | Edit this page View Source DrawItem(string, string, int, GUIStyle, GUIStyle, bool) Draw an item inside the menu Declaration protected bool DrawItem(string label, string content, int icon = 0, GUIStyle labelStyle = null, GUIStyle contentStyle = null, bool drawStyleBody = false) Parameters Type Name Description string label Text displays on left side of this item string content Text displays on right side of this item int icon Artwork sprite GUIStyle labelStyle GUI style of the label part GUIStyle contentStyle GUI style of the content part bool drawStyleBody True if the body of GUI style should be display Returns Type Description bool True if the item is pressed | Edit this page View Source DrawMenu() Declaration protected abstract void DrawMenu() | Edit this page View Source GetWindowRect() Get the rect position of the panel window in global space Declaration protected virtual IRect GetWindowRect() | Edit this page View Source OnActivated() This function is called when entity enter the stage Declaration public override void OnActivated() Overrides Entity.OnActivated() | Edit this page View Source OnSelectionChanged() This function is called when item selection is changed Declaration protected virtual void OnSelectionChanged() | Edit this page View Source RefreshAnimation() Declaration protected void RefreshAnimation() | Edit this page View Source SetSelection(int) Set current selecting item Declaration protected void SetSelection(int index) | Edit this page View Source UpdateUI() Declaration public override void UpdateUI() Overrides EntityUI.UpdateUI() Implements IMapItem IWindowEntityUI Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.MethodTask.html": {
    "href": "api/AngeliA.MethodTask.html",
    "title": "Class MethodTask | AngeliA",
    "summary": "Class MethodTask Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public class MethodTask : Task Fields | Edit this page View Source TYPE_ID Declaration public static readonly int TYPE_ID Methods | Edit this page View Source FrameUpdate() Declaration public override TaskResult FrameUpdate() Overrides Task.FrameUpdate() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.ModularBodySuit.html": {
    "href": "api/AngeliA.ModularBodySuit.html",
    "title": "Class ModularBodySuit | AngeliA",
    "summary": "Class ModularBodySuit Body cloth that auto generate from artwork sheet Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public sealed class ModularBodySuit : BodyCloth Properties | Edit this page View Source ModularName Declaration public string ModularName { get; } Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.ModularEar.html": {
    "href": "api/AngeliA.ModularEar.html",
    "title": "Class ModularEar | AngeliA",
    "summary": "Class ModularEar Ear body gadget that auto generate from artwork sheet Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public sealed class ModularEar : Ear Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.ModularFace.html": {
    "href": "api/AngeliA.ModularFace.html",
    "title": "Class ModularFace | AngeliA",
    "summary": "Class ModularFace Face body gadget that auto generate from artwork sheet Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public sealed class ModularFace : Face Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.ModularFootSuit.html": {
    "href": "api/AngeliA.ModularFootSuit.html",
    "title": "Class ModularFootSuit | AngeliA",
    "summary": "Class ModularFootSuit Shoes that auto generate from artwork sheet Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public sealed class ModularFootSuit : FootCloth Properties | Edit this page View Source ModularName Declaration public string ModularName { get; } Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.ModularHair.html": {
    "href": "api/AngeliA.ModularHair.html",
    "title": "Class ModularHair | AngeliA",
    "summary": "Class ModularHair Hair body gadget that auto generate from artwork sheet Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public sealed class ModularHair : Hair Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.ModularHandSuit.html": {
    "href": "api/AngeliA.ModularHandSuit.html",
    "title": "Class ModularHandSuit | AngeliA",
    "summary": "Class ModularHandSuit Gloves that auto generate from artwork sheet Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public sealed class ModularHandSuit : HandCloth Properties | Edit this page View Source ModularName Declaration public string ModularName { get; } Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.ModularHeadSuit.html": {
    "href": "api/AngeliA.ModularHeadSuit.html",
    "title": "Class ModularHeadSuit | AngeliA",
    "summary": "Class ModularHeadSuit Hat that auto generate from artwork sheet Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public sealed class ModularHeadSuit : HeadCloth Properties | Edit this page View Source ModularName Declaration public string ModularName { get; } Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.ModularHipSuit.html": {
    "href": "api/AngeliA.ModularHipSuit.html",
    "title": "Class ModularHipSuit | AngeliA",
    "summary": "Class ModularHipSuit Pants or skirt that auto generate from artwork sheet Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public sealed class ModularHipSuit : HipCloth Properties | Edit this page View Source ModularName Declaration public string ModularName { get; } Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.ModularHorn.html": {
    "href": "api/AngeliA.ModularHorn.html",
    "title": "Class ModularHorn | AngeliA",
    "summary": "Class ModularHorn Horn body gadget that auto generate from artwork sheet Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public sealed class ModularHorn : Horn Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.ModularTail.html": {
    "href": "api/AngeliA.ModularTail.html",
    "title": "Class ModularTail | AngeliA",
    "summary": "Class ModularTail Tail body gadget that auto generate from artwork sheet Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public sealed class ModularTail : Tail Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.ModularWing.html": {
    "href": "api/AngeliA.ModularWing.html",
    "title": "Class ModularWing | AngeliA",
    "summary": "Class ModularWing Wing body gadget that auto generate from artwork sheet Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public sealed class ModularWing : Wing Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.MovementEditor.html": {
    "href": "api/AngeliA.MovementEditor.html",
    "title": "Class MovementEditor | AngeliA",
    "summary": "Class MovementEditor Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public class MovementEditor Fields | Edit this page View Source SETTING_PANEL Declaration public const int SETTING_PANEL = 3632167 Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.MusicData.html": {
    "href": "api/AngeliA.MusicData.html",
    "title": "Class MusicData | AngeliA",
    "summary": "Class MusicData Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public class MusicData : AudioData Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.NoItemCombinationAttribute.html": {
    "href": "api/AngeliA.NoItemCombinationAttribute.html",
    "title": "Class NoItemCombinationAttribute | AngeliA",
    "summary": "Class NoItemCombinationAttribute Indicates to the system that this item does not require crafting combination Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax [AttributeUsage(AttributeTargets.Class, AllowMultiple = true)] public class NoItemCombinationAttribute : Attribute Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.NoiseMatching.html": {
    "href": "api/AngeliA.NoiseMatching.html",
    "title": "Enum NoiseMatching | AngeliA",
    "summary": "Enum NoiseMatching Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public enum NoiseMatching Fields Name Description Disable Divide Minus Multiply Plus Extension Methods Extension.Next<NoiseMatching>(NoiseMatching) Extension.Prev<NoiseMatching>(NoiseMatching) Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.NonStackableItem.html": {
    "href": "api/AngeliA.NonStackableItem.html",
    "title": "Class NonStackableItem | AngeliA",
    "summary": "Class NonStackableItem A type of item that do not stack-up inside inventory panel. The MaxStackCount is always 1. Implements IMapItem Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public abstract class NonStackableItem : Item, IMapItem Properties | Edit this page View Source MaxStackCount Count limitation for multiple items inside one inventory slot Declaration public override sealed int MaxStackCount { get; } Overrides Item.MaxStackCount Implements IMapItem Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.NotificationUI.html": {
    "href": "api/AngeliA.NotificationUI.html",
    "title": "Class NotificationUI | AngeliA",
    "summary": "Class NotificationUI Display a temporarily notification on top of screen during gameplay Implements IMapItem Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax [Entity.Capacity(6, 0)] public class NotificationUI : EntityUI, IMapItem Methods | Edit this page View Source BeforeUpdate() [2/4] This function is called every frame when entity is in stage. Prioritize using this function to update physics logic. Declaration public override void BeforeUpdate() Overrides Entity.BeforeUpdate() | Edit this page View Source OnActivated() This function is called when entity enter the stage Declaration public override void OnActivated() Overrides Entity.OnActivated() | Edit this page View Source SpawnNotification(string, int) Require a notification. Call this function once for a single notification. Declaration public static void SpawnNotification(string content, int icon = -2147483648) Parameters Type Name Description string content Text content of the notification int icon Artwork sprite ID for the notification. Set to int.MinValue if no icon should be display. | Edit this page View Source Update() [3/4] This function is called every frame when entity is in stage. Prioritize using this function to update physics logic. Declaration public override void Update() Overrides EntityUI.Update() | Edit this page View Source UpdateUI() Declaration public override void UpdateUI() Overrides EntityUI.UpdateUI() Implements IMapItem Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.NumberEight.html": {
    "href": "api/AngeliA.NumberEight.html",
    "title": "Class NumberEight | AngeliA",
    "summary": "Class NumberEight Element for indicate a number on map Implements IMapItem Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax [Entity.MapEditorGroup(\"System\", -512)] public sealed class NumberEight : IMapItem Fields | Edit this page View Source TYPE_ID Declaration public static readonly int TYPE_ID Implements IMapItem Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.NumberFive.html": {
    "href": "api/AngeliA.NumberFive.html",
    "title": "Class NumberFive | AngeliA",
    "summary": "Class NumberFive Element for indicate a number on map Implements IMapItem Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax [Entity.MapEditorGroup(\"System\", -512)] public sealed class NumberFive : IMapItem Fields | Edit this page View Source TYPE_ID Declaration public static readonly int TYPE_ID Implements IMapItem Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.NumberFour.html": {
    "href": "api/AngeliA.NumberFour.html",
    "title": "Class NumberFour | AngeliA",
    "summary": "Class NumberFour Element for indicate a number on map Implements IMapItem Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax [Entity.MapEditorGroup(\"System\", -512)] public sealed class NumberFour : IMapItem Fields | Edit this page View Source TYPE_ID Declaration public static readonly int TYPE_ID Implements IMapItem Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.NumberNine.html": {
    "href": "api/AngeliA.NumberNine.html",
    "title": "Class NumberNine | AngeliA",
    "summary": "Class NumberNine Element for indicate a number on map Implements IMapItem Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax [Entity.MapEditorGroup(\"System\", -512)] public sealed class NumberNine : IMapItem Fields | Edit this page View Source TYPE_ID Declaration public static readonly int TYPE_ID Implements IMapItem Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.NumberOne.html": {
    "href": "api/AngeliA.NumberOne.html",
    "title": "Class NumberOne | AngeliA",
    "summary": "Class NumberOne Element for indicate a number on map Implements IMapItem Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax [Entity.MapEditorGroup(\"System\", -512)] public sealed class NumberOne : IMapItem Fields | Edit this page View Source TYPE_ID Declaration public static readonly int TYPE_ID Implements IMapItem Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.NumberSeven.html": {
    "href": "api/AngeliA.NumberSeven.html",
    "title": "Class NumberSeven | AngeliA",
    "summary": "Class NumberSeven Element for indicate a number on map Implements IMapItem Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax [Entity.MapEditorGroup(\"System\", -512)] public sealed class NumberSeven : IMapItem Fields | Edit this page View Source TYPE_ID Declaration public static readonly int TYPE_ID Implements IMapItem Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.NumberSix.html": {
    "href": "api/AngeliA.NumberSix.html",
    "title": "Class NumberSix | AngeliA",
    "summary": "Class NumberSix Element for indicate a number on map Implements IMapItem Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax [Entity.MapEditorGroup(\"System\", -512)] public sealed class NumberSix : IMapItem Fields | Edit this page View Source TYPE_ID Declaration public static readonly int TYPE_ID Implements IMapItem Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.NumberThree.html": {
    "href": "api/AngeliA.NumberThree.html",
    "title": "Class NumberThree | AngeliA",
    "summary": "Class NumberThree Element for indicate a number on map Implements IMapItem Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax [Entity.MapEditorGroup(\"System\", -512)] public sealed class NumberThree : IMapItem Fields | Edit this page View Source TYPE_ID Declaration public static readonly int TYPE_ID Implements IMapItem Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.NumberTwo.html": {
    "href": "api/AngeliA.NumberTwo.html",
    "title": "Class NumberTwo | AngeliA",
    "summary": "Class NumberTwo Element for indicate a number on map Implements IMapItem Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax [Entity.MapEditorGroup(\"System\", -512)] public sealed class NumberTwo : IMapItem Fields | Edit this page View Source TYPE_ID Declaration public static readonly int TYPE_ID Implements IMapItem Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.NumberZero.html": {
    "href": "api/AngeliA.NumberZero.html",
    "title": "Class NumberZero | AngeliA",
    "summary": "Class NumberZero Element for indicate a number on map Implements IMapItem Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax [Entity.MapEditorGroup(\"System\", -512)] public sealed class NumberZero : IMapItem Fields | Edit this page View Source TYPE_ID Declaration public static readonly int TYPE_ID Implements IMapItem Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.OnBlockPicked_IntSpriteID_IRectAttribute.html": {
    "href": "api/AngeliA.OnBlockPicked_IntSpriteID_IRectAttribute.html",
    "title": "Class OnBlockPicked_IntSpriteID_IRectAttribute | AngeliA",
    "summary": "Class OnBlockPicked_IntSpriteID_IRectAttribute The function will be called when a map block has been picked Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public class OnBlockPicked_IntSpriteID_IRectAttribute : EventAttribute Examples [OnBlockPicked_IntSpriteID_IRect] internal static void ExampleFunction (int spriteID, IRect rectPosition) { } Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.OnBulletHitEnvironment_BulletAttribute.html": {
    "href": "api/AngeliA.OnBulletHitEnvironment_BulletAttribute.html",
    "title": "Class OnBulletHitEnvironment_BulletAttribute | AngeliA",
    "summary": "Class OnBulletHitEnvironment_BulletAttribute The function will be called when a bullet hit environment (something not an IDamageReceiver) Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public class OnBulletHitEnvironment_BulletAttribute : EventAttribute Examples [OnBulletHitEnvironment_Bullet] internal static void ExampleFunction (Bullet bullet) { } Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.OnCameOutOfWater_Rigidbody_EntityAttribute.html": {
    "href": "api/AngeliA.OnCameOutOfWater_Rigidbody_EntityAttribute.html",
    "title": "Class OnCameOutOfWater_Rigidbody_EntityAttribute | AngeliA",
    "summary": "Class OnCameOutOfWater_Rigidbody_EntityAttribute The function will be called when a rigidbody came out of water Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public class OnCameOutOfWater_Rigidbody_EntityAttribute : EventAttribute Examples [OnCameOutOfWater_Rigidbody_Entity] internal static void ExampleFunction (Rigidbody rig, Entity water) { } Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.OnCharacterCrash_EntityAttribute.html": {
    "href": "api/AngeliA.OnCharacterCrash_EntityAttribute.html",
    "title": "Class OnCharacterCrash_EntityAttribute | AngeliA",
    "summary": "Class OnCharacterCrash_EntityAttribute The function will be called when a character crash Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public class OnCharacterCrash_EntityAttribute : EventAttribute Examples [OnCharacterCrash_Entity] internal static void ExampleFunction (Entity character) { } Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.OnCharacterFly_EntityAttribute.html": {
    "href": "api/AngeliA.OnCharacterFly_EntityAttribute.html",
    "title": "Class OnCharacterFly_EntityAttribute | AngeliA",
    "summary": "Class OnCharacterFly_EntityAttribute The function will be called when a character fly Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public class OnCharacterFly_EntityAttribute : EventAttribute Examples [OnCharacterFly_Entity] internal static void ExampleFunction (Entity character) { } Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.OnCharacterFootStepped_EntityAttribute.html": {
    "href": "api/AngeliA.OnCharacterFootStepped_EntityAttribute.html",
    "title": "Class OnCharacterFootStepped_EntityAttribute | AngeliA",
    "summary": "Class OnCharacterFootStepped_EntityAttribute The function will be called when a character makes a foot step on running Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public class OnCharacterFootStepped_EntityAttribute : EventAttribute Examples [OnCharacterFootStepped_Entity] internal static void ExampleFunction (Entity character) { } Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.OnCharacterJump_EntityAttribute.html": {
    "href": "api/AngeliA.OnCharacterJump_EntityAttribute.html",
    "title": "Class OnCharacterJump_EntityAttribute | AngeliA",
    "summary": "Class OnCharacterJump_EntityAttribute The function will be called when a character jumps Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public class OnCharacterJump_EntityAttribute : EventAttribute Examples [OnCharacterJump_Entity] internal static void ExampleFunction (Entity character) { } Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.OnCharacterPassOut_EntityAttribute.html": {
    "href": "api/AngeliA.OnCharacterPassOut_EntityAttribute.html",
    "title": "Class OnCharacterPassOut_EntityAttribute | AngeliA",
    "summary": "Class OnCharacterPassOut_EntityAttribute The function will be called when a character pass out Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public class OnCharacterPassOut_EntityAttribute : EventAttribute Examples [OnCharacterPassOut_Entity] internal static void ExampleFunction (Entity character) { } Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.OnCharacterPound_EntityAttribute.html": {
    "href": "api/AngeliA.OnCharacterPound_EntityAttribute.html",
    "title": "Class OnCharacterPound_EntityAttribute | AngeliA",
    "summary": "Class OnCharacterPound_EntityAttribute The function will be called when a character ground pound Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public class OnCharacterPound_EntityAttribute : EventAttribute Examples [OnCharacterPound_Entity] internal static void ExampleFunction (Entity character) { } Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.OnCharacterSleeping_EntityAttribute.html": {
    "href": "api/AngeliA.OnCharacterSleeping_EntityAttribute.html",
    "title": "Class OnCharacterSleeping_EntityAttribute | AngeliA",
    "summary": "Class OnCharacterSleeping_EntityAttribute The function will be called when a character is sleeping Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public class OnCharacterSleeping_EntityAttribute : EventAttribute Examples [OnCharacterSleeping_Entity] internal static void ExampleFunction (Entity character) { } Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.OnCharacterSlideStepped_EntityAttribute.html": {
    "href": "api/AngeliA.OnCharacterSlideStepped_EntityAttribute.html",
    "title": "Class OnCharacterSlideStepped_EntityAttribute | AngeliA",
    "summary": "Class OnCharacterSlideStepped_EntityAttribute The function will be called when a character makes a step when sliding Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public class OnCharacterSlideStepped_EntityAttribute : EventAttribute Examples [OnCharacterSlideStepped_Entity] internal static void ExampleFunction (Entity character) { } Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.OnCharacterTeleport_EntityAttribute.html": {
    "href": "api/AngeliA.OnCharacterTeleport_EntityAttribute.html",
    "title": "Class OnCharacterTeleport_EntityAttribute | AngeliA",
    "summary": "Class OnCharacterTeleport_EntityAttribute The function will be called when a character teleport Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public class OnCharacterTeleport_EntityAttribute : EventAttribute Examples [OnCharacterTeleport_Entity] internal static void ExampleFunction (Entity character) { } Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.OnCheatPerformed_StringCodeAttribute.html": {
    "href": "api/AngeliA.OnCheatPerformed_StringCodeAttribute.html",
    "title": "Class OnCheatPerformed_StringCodeAttribute | AngeliA",
    "summary": "Class OnCheatPerformed_StringCodeAttribute The function will be called when user performed any cheat code. Cheat code can be perform like those in NES games. Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public class OnCheatPerformed_StringCodeAttribute : EventAttribute Examples [OnCheatPerformed_StringCode] internal static void ExampleFunction (string code) { } Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.OnCircuitWireActived_Int3UnitPosAttribute.html": {
    "href": "api/AngeliA.OnCircuitWireActived_Int3UnitPosAttribute.html",
    "title": "Class OnCircuitWireActived_Int3UnitPosAttribute | AngeliA",
    "summary": "Class OnCircuitWireActived_Int3UnitPosAttribute The function will be called when CircuitSystem's electric current pass through Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public class OnCircuitWireActived_Int3UnitPosAttribute : EventAttribute Examples [OnCircuitWireActived_Int3UnitPos] internal static void ExampleFunction (Int3 unitPos) { } Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.OnDealDamage_Damage_IDamageReceiverAttribute.html": {
    "href": "api/AngeliA.OnDealDamage_Damage_IDamageReceiverAttribute.html",
    "title": "Class OnDealDamage_Damage_IDamageReceiverAttribute | AngeliA",
    "summary": "Class OnDealDamage_Damage_IDamageReceiverAttribute The function will be called when something deal damage to a damage-receiver Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public class OnDealDamage_Damage_IDamageReceiverAttribute : EventAttribute Examples [OnDealDamage_Damage_IDamageReceiver] internal static void ExampleFunction (Damage damage, IDamageReceiver receiver) { } Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.OnFallIntoWater_Rigidbody_EntityAttribute.html": {
    "href": "api/AngeliA.OnFallIntoWater_Rigidbody_EntityAttribute.html",
    "title": "Class OnFallIntoWater_Rigidbody_EntityAttribute | AngeliA",
    "summary": "Class OnFallIntoWater_Rigidbody_EntityAttribute The function will be called when a rigidbody fall into water Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public class OnFallIntoWater_Rigidbody_EntityAttribute : EventAttribute Examples [OnFallIntoWater_Rigidbody_Entity] internal static void ExampleFunction (Rigidbody rig, Entity water) { } Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.OnFileDropped_StringPathAttribute.html": {
    "href": "api/AngeliA.OnFileDropped_StringPathAttribute.html",
    "title": "Class OnFileDropped_StringPathAttribute | AngeliA",
    "summary": "Class OnFileDropped_StringPathAttribute The function will be called when user drag and drop a file into the application window Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public class OnFileDropped_StringPathAttribute : EventAttribute Examples [OnFileDropped_StringPath] internal static void ExampleFunction (string filePath) { } Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.OnGameFocusedAttribute.html": {
    "href": "api/AngeliA.OnGameFocusedAttribute.html",
    "title": "Class OnGameFocusedAttribute | AngeliA",
    "summary": "Class OnGameFocusedAttribute The function will be called when the application window regain focus. Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public class OnGameFocusedAttribute : EventAttribute Examples [OnGameFocused] internal static void ExampleFunction () { } Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.OnGameInitializeAttribute.html": {
    "href": "api/AngeliA.OnGameInitializeAttribute.html",
    "title": "Class OnGameInitializeAttribute | AngeliA",
    "summary": "Class OnGameInitializeAttribute The function will be called when game initialize. Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public class OnGameInitializeAttribute : OrderedAttribute Examples [OnGameInitialize] internal static void ExampleFunction () { } Constructors | Edit this page View Source OnGameInitializeAttribute(int) The function will be called when game initialize. Declaration public OnGameInitializeAttribute(int order = 0) Parameters Type Name Description int order Function with smaller order will be called earlier Examples [OnGameInitialize] internal static void ExampleFunction () { } Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.OnGameInitializeLaterAttribute.html": {
    "href": "api/AngeliA.OnGameInitializeLaterAttribute.html",
    "title": "Class OnGameInitializeLaterAttribute | AngeliA",
    "summary": "Class OnGameInitializeLaterAttribute The function will be called when game initialize but after all [OnGameInitialize] functions already called Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public class OnGameInitializeLaterAttribute : OrderedAttribute Examples [OnGameInitializeLater] internal static void ExampleFunction () { } Constructors | Edit this page View Source OnGameInitializeLaterAttribute(int) The function will be called when game initialize but after all [OnGameInitialize] functions already called Declaration public OnGameInitializeLaterAttribute(int order = 0) Parameters Type Name Description int order Function with smaller order will be called earlier Examples [OnGameInitializeLater] internal static void ExampleFunction () { } Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.OnGameLostFocusAttribute.html": {
    "href": "api/AngeliA.OnGameLostFocusAttribute.html",
    "title": "Class OnGameLostFocusAttribute | AngeliA",
    "summary": "Class OnGameLostFocusAttribute The function will be called when the application window lost focus. Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public class OnGameLostFocusAttribute : EventAttribute Examples [OnGameLostFocus] internal static void ExampleFunction () { } Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.OnGameQuittingAttribute.html": {
    "href": "api/AngeliA.OnGameQuittingAttribute.html",
    "title": "Class OnGameQuittingAttribute | AngeliA",
    "summary": "Class OnGameQuittingAttribute The function will be called before the application actually quit. Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public class OnGameQuittingAttribute : EventAttribute Examples [OnGameQuitting] internal static void ExampleFunction () { } Constructors | Edit this page View Source OnGameQuittingAttribute(int) The function will be called before the application actually quit. Declaration public OnGameQuittingAttribute(int order = 0) Parameters Type Name Description int order Function with smaller order will be called earlier Examples [OnGameQuitting] internal static void ExampleFunction () { } Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.OnGameRestartAttribute.html": {
    "href": "api/AngeliA.OnGameRestartAttribute.html",
    "title": "Class OnGameRestartAttribute | AngeliA",
    "summary": "Class OnGameRestartAttribute The function will be called when game restart. Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public class OnGameRestartAttribute : EventAttribute Examples [OnGameRestart] internal static void ExampleFunction () { } Constructors | Edit this page View Source OnGameRestartAttribute(int) The function will be called when game restart. Declaration public OnGameRestartAttribute(int order = 0) Parameters Type Name Description int order Function with smaller order will be called earlier Examples [OnGameRestart] internal static void ExampleFunction () { } Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.OnGameTryingToQuitAttribute.html": {
    "href": "api/AngeliA.OnGameTryingToQuitAttribute.html",
    "title": "Class OnGameTryingToQuitAttribute | AngeliA",
    "summary": "Class OnGameTryingToQuitAttribute The function will be called when player try to quit the game. Return false will stop the application from quiting. Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public class OnGameTryingToQuitAttribute : EventAttribute Examples [OnGameTryingToQuit] internal static bool ExampleFunction () { return true; } Constructors | Edit this page View Source OnGameTryingToQuitAttribute(int) The function will be called when player try to quit the game. Return false will stop the application from quiting. Declaration public OnGameTryingToQuitAttribute(int order = 0) Parameters Type Name Description int order Function with smaller order will be called earlier Examples [OnGameTryingToQuit] internal static bool ExampleFunction () { return true; } Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.OnGameUpdateAttribute.html": {
    "href": "api/AngeliA.OnGameUpdateAttribute.html",
    "title": "Class OnGameUpdateAttribute | AngeliA",
    "summary": "Class OnGameUpdateAttribute The function will be called every time game update (60 times per second) Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public class OnGameUpdateAttribute : EventAttribute Examples [OnGameUpdate] internal static void ExampleFunction () { } Constructors | Edit this page View Source OnGameUpdateAttribute(int) The function will be called every time game update (60 times per second) Declaration public OnGameUpdateAttribute(int order = 0) Parameters Type Name Description int order Function with smaller order will be called earlier Examples [OnGameUpdate] internal static void ExampleFunction () { } Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.OnGameUpdateLaterAttribute.html": {
    "href": "api/AngeliA.OnGameUpdateLaterAttribute.html",
    "title": "Class OnGameUpdateLaterAttribute | AngeliA",
    "summary": "Class OnGameUpdateLaterAttribute The function will be called every time game update (60 times per second), but after all [OnGameUpdate] functions already called. Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public class OnGameUpdateLaterAttribute : EventAttribute Examples [OnGameUpdateLater] internal static void ExampleFunction () { } Constructors | Edit this page View Source OnGameUpdateLaterAttribute(int) The function will be called every time game update (60 times per second), but after all [OnGameUpdate] functions already called. Declaration public OnGameUpdateLaterAttribute(int order = 0) Parameters Type Name Description int order Function with smaller order will be called earlier Examples [OnGameUpdateLater] internal static void ExampleFunction () { } Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.OnGameUpdatePauselessAttribute.html": {
    "href": "api/AngeliA.OnGameUpdatePauselessAttribute.html",
    "title": "Class OnGameUpdatePauselessAttribute | AngeliA",
    "summary": "Class OnGameUpdatePauselessAttribute The function will be called every time game update (60 times per second), even when the game is paused. Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public class OnGameUpdatePauselessAttribute : EventAttribute Examples [OnGameUpdatePauseless] internal static void ExampleFunction () { } Constructors | Edit this page View Source OnGameUpdatePauselessAttribute(int) The function will be called every time game update (60 times per second), even when the game is paused. Declaration public OnGameUpdatePauselessAttribute(int order = 0) Parameters Type Name Description int order Function with smaller order will be called earlier Examples [OnGameUpdatePauseless] internal static void ExampleFunction () { } Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.OnItemCollected_Entity_Int2Pos_IntItemID_IntItemCountAttribute.html": {
    "href": "api/AngeliA.OnItemCollected_Entity_Int2Pos_IntItemID_IntItemCountAttribute.html",
    "title": "Class OnItemCollected_Entity_Int2Pos_IntItemID_IntItemCountAttribute | AngeliA",
    "summary": "Class OnItemCollected_Entity_Int2Pos_IntItemID_IntItemCountAttribute The function will be called when a character collect an item Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public class OnItemCollected_Entity_Int2Pos_IntItemID_IntItemCountAttribute : EventAttribute Examples [OnItemCollected_Entity_Int2Pos_IntItemID_IntItemCount] internal static void ExampleFunction (Entity holder, Int2 pos, int itemID, int itemCount) { } Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.OnItemDamage_Character_IntItemBefore_IntItemAfterAttribute.html": {
    "href": "api/AngeliA.OnItemDamage_Character_IntItemBefore_IntItemAfterAttribute.html",
    "title": "Class OnItemDamage_Character_IntItemBefore_IntItemAfterAttribute | AngeliA",
    "summary": "Class OnItemDamage_Character_IntItemBefore_IntItemAfterAttribute The function will be called when an item is damaged into another item Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public class OnItemDamage_Character_IntItemBefore_IntItemAfterAttribute : EventAttribute Examples [OnItemDamage_Character_IntItemBefore_IntItemAfter] internal static void ExampleFunction (Character holder, int itemIdBefore, int itemIdAfter) { } Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.OnItemError_Entity_Int2Pos_IntIconID.html": {
    "href": "api/AngeliA.OnItemError_Entity_Int2Pos_IntIconID.html",
    "title": "Class OnItemError_Entity_Int2Pos_IntIconID | AngeliA",
    "summary": "Class OnItemError_Entity_Int2Pos_IntIconID The function will be called when something wrong about an item (like when guns out of ammo) Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public class OnItemError_Entity_Int2Pos_IntIconID : EventAttribute Examples [OnItemError_Entity_Int2Pos_IntIconID] internal static void ExampleFunction (Entity holder, Int2 pos, int iconID) { } Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.OnItemLost_Character_IntItemIDAttribute.html": {
    "href": "api/AngeliA.OnItemLost_Character_IntItemIDAttribute.html",
    "title": "Class OnItemLost_Character_IntItemIDAttribute | AngeliA",
    "summary": "Class OnItemLost_Character_IntItemIDAttribute The function will be called when a character lost an item Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public class OnItemLost_Character_IntItemIDAttribute : EventAttribute Examples [OnItemLost_Character_IntItemID] internal static void ExampleFunction (Character holder, int itemID) { } Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.OnItemUnlocked_IntItemIDAttribute.html": {
    "href": "api/AngeliA.OnItemUnlocked_IntItemIDAttribute.html",
    "title": "Class OnItemUnlocked_IntItemIDAttribute | AngeliA",
    "summary": "Class OnItemUnlocked_IntItemIDAttribute The function will be called when an item is unlocked by player Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public class OnItemUnlocked_IntItemIDAttribute : EventAttribute Examples [OnItemUnlocked_IntItemID] internal static void ExampleFunction (int itemID) { } Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.OnLanguageChangedAttribute.html": {
    "href": "api/AngeliA.OnLanguageChangedAttribute.html",
    "title": "Class OnLanguageChangedAttribute | AngeliA",
    "summary": "Class OnLanguageChangedAttribute The function will be called when user change game display language. Language.CurrentLanguage is already set to new value when this function is called. Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public class OnLanguageChangedAttribute : EventAttribute Examples [OnLanguageChanged] internal static void ExampleFunction () { } Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.OnMainSheetReloadAttribute.html": {
    "href": "api/AngeliA.OnMainSheetReloadAttribute.html",
    "title": "Class OnMainSheetReloadAttribute | AngeliA",
    "summary": "Class OnMainSheetReloadAttribute The function will be called when artwork sheet for rendering loaded from file Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public class OnMainSheetReloadAttribute : EventAttribute Examples [OnMainSheetReload] internal static void ExampleFunction () { } Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.OnMapEditorModeChange_ModeAttribute.Mode.html": {
    "href": "api/AngeliA.OnMapEditorModeChange_ModeAttribute.Mode.html",
    "title": "Enum OnMapEditorModeChange_ModeAttribute.Mode | AngeliA",
    "summary": "Enum OnMapEditorModeChange_ModeAttribute.Mode Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public enum OnMapEditorModeChange_ModeAttribute.Mode Fields Name Description EnterEditMode Play mode to edit mode. After map editor internal logic is done EnterPlayMode Edit mode to play mode. After map editor internal logic is done ExitEditMode Edit mode to play mode. Before map editor internal logic is done ExitPlayMode Play mode to edit mode. Before map editor internal logic is done Extension Methods Extension.Next<OnMapEditorModeChange_ModeAttribute.Mode>(OnMapEditorModeChange_ModeAttribute.Mode) Extension.Prev<OnMapEditorModeChange_ModeAttribute.Mode>(OnMapEditorModeChange_ModeAttribute.Mode) Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.OnMapEditorModeChange_ModeAttribute.html": {
    "href": "api/AngeliA.OnMapEditorModeChange_ModeAttribute.html",
    "title": "Class OnMapEditorModeChange_ModeAttribute | AngeliA",
    "summary": "Class OnMapEditorModeChange_ModeAttribute The function will be called when user change map editor editing mode Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public class OnMapEditorModeChange_ModeAttribute : EventAttribute Examples [OnMapEditorModeChange_Mode] internal static void ExampleFunction (OnMapEditorModeChange_ModeAttribute.Mode mode) { } Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.OnObjectBreak_IntSpriteID_IRectAttribute.html": {
    "href": "api/AngeliA.OnObjectBreak_IntSpriteID_IRectAttribute.html",
    "title": "Class OnObjectBreak_IntSpriteID_IRectAttribute | AngeliA",
    "summary": "Class OnObjectBreak_IntSpriteID_IRectAttribute The function will be called when an object break Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public class OnObjectBreak_IntSpriteID_IRectAttribute : EventAttribute Examples [OnObjectBreak_IntSpriteID_IRect] internal static void ExampleFunction (int spriteID, IRect rectPosition) { } Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.OnObjectFreeFall_IntSpriteID_Int2Pos_IntRot_BoolFlip_Int2Velocity_IntRotSpeed_IntGravityAttribute.html": {
    "href": "api/AngeliA.OnObjectFreeFall_IntSpriteID_Int2Pos_IntRot_BoolFlip_Int2Velocity_IntRotSpeed_IntGravityAttribute.html",
    "title": "Class OnObjectFreeFall_IntSpriteID_Int2Pos_IntRot_BoolFlip_Int2Velocity_IntRotSpeed_IntGravityAttribute | AngeliA",
    "summary": "Class OnObjectFreeFall_IntSpriteID_Int2Pos_IntRot_BoolFlip_Int2Velocity_IntRotSpeed_IntGravityAttribute The function will be called when an object start to free fall Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public class OnObjectFreeFall_IntSpriteID_Int2Pos_IntRot_BoolFlip_Int2Velocity_IntRotSpeed_IntGravityAttribute : EventAttribute Examples [OnObjectFreeFall_IntSpriteID_Int2Pos_IntRot_BoolFlip_Int2Velocity_IntRotSpeed_IntGravity] internal static void ExampleFunction (int spriteID, Int2 pos, int startRotation, bool flip, Int2 velocity, int rotationSpeed, int gravity) { } Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.OnRemoteSettingChanged_IntID_IntDataAttribute.html": {
    "href": "api/AngeliA.OnRemoteSettingChanged_IntID_IntDataAttribute.html",
    "title": "Class OnRemoteSettingChanged_IntID_IntDataAttribute | AngeliA",
    "summary": "Class OnRemoteSettingChanged_IntID_IntDataAttribute The function will be called when engine send remote message to rigged game Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public class OnRemoteSettingChanged_IntID_IntDataAttribute : EventAttribute Examples [OnRemoteSettingChanged_IntID_IntData] internal static void ExampleFunction (int id, int data) { } Constructors | Edit this page View Source OnRemoteSettingChanged_IntID_IntDataAttribute(int) The function will be called when engine send remote message to rigged game Declaration public OnRemoteSettingChanged_IntID_IntDataAttribute(int order = 0) Examples [OnRemoteSettingChanged_IntID_IntData] internal static void ExampleFunction (int id, int data) { } Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.OnSavingSlotChangedAttribute.html": {
    "href": "api/AngeliA.OnSavingSlotChangedAttribute.html",
    "title": "Class OnSavingSlotChangedAttribute | AngeliA",
    "summary": "Class OnSavingSlotChangedAttribute The function will be called after user change the saving slot. Universe.BuiltIn.CurrentSavingSlot is the new value when this function is called. Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public class OnSavingSlotChangedAttribute : OrderedAttribute Examples [OnSavingSlotChanged] internal static void ExampleFunction () { } Constructors | Edit this page View Source OnSavingSlotChangedAttribute(int) The function will be called after user change the saving slot. Universe.BuiltIn.CurrentSavingSlot is the new value when this function is called. Declaration public OnSavingSlotChangedAttribute(int order = 0) Parameters Type Name Description int order Function with smaller order will be called earlier Examples [OnSavingSlotChanged] internal static void ExampleFunction () { } Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.OnTransferArrivedAttribute_IntEntityID_Int3UnitPos_ObjectDataAttribute.html": {
    "href": "api/AngeliA.OnTransferArrivedAttribute_IntEntityID_Int3UnitPos_ObjectDataAttribute.html",
    "title": "Class OnTransferArrivedAttribute_IntEntityID_Int3UnitPos_ObjectDataAttribute | AngeliA",
    "summary": "Class OnTransferArrivedAttribute_IntEntityID_Int3UnitPos_ObjectDataAttribute The function will be called when message from TransferSystem.StartTransfer() arrived Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public class OnTransferArrivedAttribute_IntEntityID_Int3UnitPos_ObjectDataAttribute : EventAttribute Examples [OnTransferArrivedAttribute_IntEntityID_Int3UnitPos_ObjectData] internal static void ExampleFunction (int receiverID, Int3 unitPosition, object userData) { } Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.OnTransferPassAttribute_Int3UnitPos_ObjectDataAttribute.html": {
    "href": "api/AngeliA.OnTransferPassAttribute_Int3UnitPos_ObjectDataAttribute.html",
    "title": "Class OnTransferPassAttribute_Int3UnitPos_ObjectDataAttribute | AngeliA",
    "summary": "Class OnTransferPassAttribute_Int3UnitPos_ObjectDataAttribute The function will be called when message from TransferSystem.StartTransfer() pass through Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public class OnTransferPassAttribute_Int3UnitPos_ObjectDataAttribute : EventAttribute Examples [OnTransferPassAttribute_Int3UnitPos_ObjectData] internal static void ExampleFunction (Int3 unitPos, object userData) { } Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.OnViewZChangedAttribute.html": {
    "href": "api/AngeliA.OnViewZChangedAttribute.html",
    "title": "Class OnViewZChangedAttribute | AngeliA",
    "summary": "Class OnViewZChangedAttribute The function will be called when player change the map layer Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public class OnViewZChangedAttribute : EventAttribute Examples [OnViewZChanged] internal static void ExampleFunction () { } Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.OnWindowSizeChangedAttribute.html": {
    "href": "api/AngeliA.OnWindowSizeChangedAttribute.html",
    "title": "Class OnWindowSizeChangedAttribute | AngeliA",
    "summary": "Class OnWindowSizeChangedAttribute The function will be called when user change the size of the application window Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public class OnWindowSizeChangedAttribute : EventAttribute Examples [OnWindowSizeChanged] internal static void ExampleFunction () { } Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.OnWorldCreatedBySquad_WorldAttribute.html": {
    "href": "api/AngeliA.OnWorldCreatedBySquad_WorldAttribute.html",
    "title": "Class OnWorldCreatedBySquad_WorldAttribute | AngeliA",
    "summary": "Class OnWorldCreatedBySquad_WorldAttribute The function will be called when a world instance is created by world squad Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public class OnWorldCreatedBySquad_WorldAttribute : EventAttribute Examples [OnWorldCreatedBySquad_World] internal static void ExampleFunction () { } Constructors | Edit this page View Source OnWorldCreatedBySquad_WorldAttribute(int) The function will be called when a world instance is created by world squad Declaration public OnWorldCreatedBySquad_WorldAttribute(int order = 0) Examples [OnWorldCreatedBySquad_World] internal static void ExampleFunction () { } Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.OnWorldLoadedBySquad_WorldAttribute.html": {
    "href": "api/AngeliA.OnWorldLoadedBySquad_WorldAttribute.html",
    "title": "Class OnWorldLoadedBySquad_WorldAttribute | AngeliA",
    "summary": "Class OnWorldLoadedBySquad_WorldAttribute The function will be called when a world instance is loaded by world squad Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public class OnWorldLoadedBySquad_WorldAttribute : EventAttribute Examples [OnWorldLoadedBySquad_World] internal static void ExampleFunction () { } Constructors | Edit this page View Source OnWorldLoadedBySquad_WorldAttribute(int) The function will be called when a world instance is loaded by world squad Declaration public OnWorldLoadedBySquad_WorldAttribute(int order = 0) Examples [OnWorldLoadedBySquad_World] internal static void ExampleFunction () { } Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.OnWorldSavedByMapEditor_WorldAttribute.html": {
    "href": "api/AngeliA.OnWorldSavedByMapEditor_WorldAttribute.html",
    "title": "Class OnWorldSavedByMapEditor_WorldAttribute | AngeliA",
    "summary": "Class OnWorldSavedByMapEditor_WorldAttribute The function will be called when a world instance is saved to file by the world squad Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public class OnWorldSavedByMapEditor_WorldAttribute : EventAttribute Examples [OnWorldSavedByMapEditor_World] internal static void ExampleFunction () { } Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.OperationMode.html": {
    "href": "api/AngeliA.OperationMode.html",
    "title": "Enum OperationMode | AngeliA",
    "summary": "Enum OperationMode Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public enum OperationMode Fields Name Description ColliderAndTrigger ColliderOnly TriggerOnly Extension Methods Extension.Next<OperationMode>(OperationMode) Extension.Prev<OperationMode>(OperationMode) Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.OrderedAttribute.html": {
    "href": "api/AngeliA.OrderedAttribute.html",
    "title": "Class OrderedAttribute | AngeliA",
    "summary": "Class OrderedAttribute Attribute apply to method and call all of them in given order Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax [AttributeUsage(AttributeTargets.Method, AllowMultiple = false)] public abstract class OrderedAttribute : Attribute Constructors | Edit this page View Source OrderedAttribute(int) Attribute apply to method and call all of them in given order Declaration protected OrderedAttribute(int order) Methods | Edit this page View Source InvokeAsAutoOrderingTask<A>() Call all static methods in order with given type of attribute Declaration public static void InvokeAsAutoOrderingTask<A>() where A : Attribute Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.OrientedSprite.html": {
    "href": "api/AngeliA.OrientedSprite.html",
    "title": "Struct OrientedSprite | AngeliA",
    "summary": "Struct OrientedSprite Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public struct OrientedSprite Constructors | Edit this page View Source OrientedSprite() Declaration public OrientedSprite() | Edit this page View Source OrientedSprite(string, string) Declaration public OrientedSprite(string hostName, string attachmentName) | Edit this page View Source OrientedSprite(string, string, string) Declaration public OrientedSprite(string hostName, string attachmentName, string attachmentNameAlt) | Edit this page View Source OrientedSprite(string, string, string, string) Declaration public OrientedSprite(string hostName, string attachmentName, string attachmentNameAltA, string attachmentNameAltB) | Edit this page View Source OrientedSprite(string, params string[]) Declaration public OrientedSprite(string hostName, params string[] attachmentNames) Fields | Edit this page View Source AttachmentName Declaration public string AttachmentName | Edit this page View Source SpriteID_BL Declaration public int SpriteID_BL | Edit this page View Source SpriteID_BR Declaration public int SpriteID_BR | Edit this page View Source SpriteID_FL Declaration public int SpriteID_FL | Edit this page View Source SpriteID_FR Declaration public int SpriteID_FR Properties | Edit this page View Source IsValid Declaration public readonly bool IsValid { get; } Methods | Edit this page View Source GetID(bool, bool) Declaration public readonly int GetID(bool front, bool right) | Edit this page View Source LoadFromSheet(string, string) Declaration public bool LoadFromSheet(string hostName, string attachmentName) | Edit this page View Source TryGetSprite(bool, bool, int, out AngeSprite) Declaration public readonly bool TryGetSprite(bool front, bool right, int animationFrame, out AngeSprite sprite) | Edit this page View Source TryGetSpriteForGizmos(out AngeSprite) Declaration public readonly bool TryGetSpriteForGizmos(out AngeSprite sprite) | Edit this page View Source TryGetSpriteGroup(bool, bool, out SpriteGroup) Declaration public readonly bool TryGetSpriteGroup(bool front, bool right, out SpriteGroup group) | Edit this page View Source TryGetSpriteWithoutAnimation(bool, bool, out AngeSprite) Declaration public readonly bool TryGetSpriteWithoutAnimation(bool front, bool right, out AngeSprite sprite) Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.Particle.html": {
    "href": "api/AngeliA.Particle.html",
    "title": "Class Particle | AngeliA",
    "summary": "Class Particle Entity that represent a animated decoration Implements IMapItem Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax [Entity.Capacity(512, 0)] [Entity.Layer(7)] public abstract class Particle : Entity, IMapItem Properties | Edit this page View Source AutoArtworkID Artwork sprite ID if this particle is using the built-in logic for rendering Declaration public virtual int AutoArtworkID { get; } | Edit this page View Source Duration How long of this particle exists in stage in frames Declaration public abstract int Duration { get; } | Edit this page View Source LocalFrame Animation frame start from 0 Declaration public int LocalFrame { get; } | Edit this page View Source Loop True if this particle animation loops Declaration public abstract bool Loop { get; } | Edit this page View Source RenderingLayer Which layer should this particle rendering into Declaration public virtual int RenderingLayer { get; } | Edit this page View Source RenderingZ Z value the sort rendering cells Declaration public virtual int RenderingZ { get; } | Edit this page View Source Rotation Angle of this particle Declaration public int Rotation { get; set; } | Edit this page View Source Scale Size scale this particle should apply (0 means 0%, 1000 means 100%) Declaration public int Scale { get; set; } | Edit this page View Source Tint Color tint for this particle Declaration public Color32 Tint { get; set; } | Edit this page View Source UserData Custom data this particle holds Declaration public object UserData { get; set; } Methods | Edit this page View Source BeforeUpdate() [2/4] This function is called every frame when entity is in stage. Prioritize using this function to update physics logic. Declaration public override sealed void BeforeUpdate() Overrides Entity.BeforeUpdate() | Edit this page View Source LateUpdate() [4/4] This function is called every frame when entity is in stage. Prioritize using this function to render the entity. Declaration public override void LateUpdate() Overrides Entity.LateUpdate() | Edit this page View Source OnActivated() This function is called when entity enter the stage Declaration public override void OnActivated() Overrides Entity.OnActivated() Implements IMapItem Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.Physics.html": {
    "href": "api/AngeliA.Physics.html",
    "title": "Class Physics | AngeliA",
    "summary": "Class Physics Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public static class Physics Fields | Edit this page View Source CellsName Declaration public const string CellsName = \"Cells\" | Edit this page View Source LayersName Declaration public const string LayersName = \"Layers\" Properties | Edit this page View Source CellHeight Declaration public static int CellHeight { get; } | Edit this page View Source CellWidth Declaration public static int CellWidth { get; } | Edit this page View Source CurrentFrame Declaration public static uint CurrentFrame { get; } | Edit this page View Source IsReady Declaration public static bool IsReady { get; } | Edit this page View Source PositionX Declaration public static int PositionX { get; } | Edit this page View Source PositionY Declaration public static int PositionY { get; } Methods | Edit this page View Source FillBlock(int, int, IRect, bool, Tag) Declaration public static void FillBlock(int layer, int blockID, IRect globalRect, bool isTrigger = false, Tag tag = Tag.None) | Edit this page View Source FillEntity(int, Entity, bool, Tag) Declaration public static void FillEntity(int layer, Entity entity, bool isTrigger = false, Tag tag = Tag.None) | Edit this page View Source ForcePush(Rigidbody, Direction4, int) Declaration public static void ForcePush(Rigidbody host, Direction4 direction, int distance) | Edit this page View Source GetEntity(int, IRect, int, Entity, OperationMode, Tag) Declaration public static Entity GetEntity(int typeID, IRect globalRect, int mask, Entity ignore = null, OperationMode mode = OperationMode.ColliderOnly, Tag tag = Tag.None) | Edit this page View Source GetEntity<T>(IRect, int, Entity, OperationMode, Tag) Declaration public static T GetEntity<T>(IRect globalRect, int mask, Entity ignore = null, OperationMode mode = OperationMode.ColliderOnly, Tag tag = Tag.None) | Edit this page View Source HasEntity<T>(IRect, int, Entity, OperationMode, Tag) Declaration public static bool HasEntity<T>(IRect globalRect, int mask, Entity ignore = null, OperationMode mode = OperationMode.ColliderOnly, Tag tag = Tag.None) where T : Entity | Edit this page View Source IgnoreOverlap(int, IRect, OperationMode) Declaration public static void IgnoreOverlap(int mask, IRect globalRect, OperationMode mode = OperationMode.ColliderAndTrigger) | Edit this page View Source Initialize() Declaration [OnGameInitializeLater(64)] public static void Initialize() | Edit this page View Source Move(int, Int2, int, int, Int2, Entity) Declaration public static Int2 Move(int mask, Int2 from, int speedX, int speedY, Int2 size, Entity entity) | Edit this page View Source MoveIgnoreOneway(int, Int2, int, int, Int2, Entity) Declaration public static Int2 MoveIgnoreOneway(int mask, Int2 from, int speedX, int speedY, Int2 size, Entity entity) | Edit this page View Source MoveImmediately(int, Int2, Direction4, int, Int2, Entity, bool) Declaration public static Int2 MoveImmediately(int mask, Int2 from, Direction4 direction, int speed, Int2 size, Entity entity, bool ignoreOneway = false) | Edit this page View Source Overlap(int, IRect, Entity, OperationMode, Tag) Declaration public static bool Overlap(int mask, IRect globalRect, Entity ignore = null, OperationMode mode = OperationMode.ColliderOnly, Tag tag = Tag.None) | Edit this page View Source Overlap(int, IRect, out PhysicsCell, Entity, OperationMode, Tag) Declaration public static bool Overlap(int mask, IRect globalRect, out PhysicsCell info, Entity ignore = null, OperationMode mode = OperationMode.ColliderOnly, Tag tag = Tag.None) | Edit this page View Source OverlapAll(PhysicsCell[], int, IRect, Entity, OperationMode, Tag) Declaration public static int OverlapAll(PhysicsCell[] hits, int mask, IRect globalRect, Entity ignore = null, OperationMode mode = OperationMode.ColliderOnly, Tag tag = Tag.None) | Edit this page View Source OverlapAll(int, IRect, out int, Entity, OperationMode, Tag) Declaration public static PhysicsCell[] OverlapAll(int mask, IRect globalRect, out int count, Entity ignore = null, OperationMode mode = OperationMode.ColliderOnly, Tag tag = Tag.None) | Edit this page View Source RoomCheck(int, IRect, Entity, Direction4, OperationMode, Tag) Declaration public static bool RoomCheck(int mask, IRect rect, Entity entity, Direction4 direction, OperationMode mode = OperationMode.ColliderOnly, Tag tag = Tag.None) | Edit this page View Source RoomCheck(int, IRect, Entity, Direction4, out PhysicsCell, OperationMode, Tag) Declaration public static bool RoomCheck(int mask, IRect rect, Entity entity, Direction4 direction, out PhysicsCell hit, OperationMode mode = OperationMode.ColliderOnly, Tag tag = Tag.None) | Edit this page View Source RoomCheckOneway(int, IRect, Entity, Direction4, out PhysicsCell, bool, bool) Declaration public static bool RoomCheckOneway(int mask, IRect rect, Entity entity, Direction4 direction, out PhysicsCell hit, bool overlapCheck = false, bool blockOnly = false) | Edit this page View Source RoomCheckOneway(int, IRect, Entity, Direction4, bool, bool) Declaration public static bool RoomCheckOneway(int mask, IRect rect, Entity entity, Direction4 direction, bool overlapCheck = false, bool blockOnly = false)"
  },
  "api/AngeliA.PhysicsCell.html": {
    "href": "api/AngeliA.PhysicsCell.html",
    "title": "Struct PhysicsCell | AngeliA",
    "summary": "Struct PhysicsCell Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public struct PhysicsCell Fields | Edit this page View Source EMPTY Declaration public static readonly PhysicsCell EMPTY | Edit this page View Source Entity Declaration public Entity Entity | Edit this page View Source Frame Declaration public uint Frame | Edit this page View Source IsTrigger Declaration public bool IsTrigger | Edit this page View Source Rect Declaration public IRect Rect | Edit this page View Source SourceID Declaration public int SourceID | Edit this page View Source Tag Declaration public Tag Tag Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.PhysicsLayer.html": {
    "href": "api/AngeliA.PhysicsLayer.html",
    "title": "Class PhysicsLayer | AngeliA",
    "summary": "Class PhysicsLayer A single physics layer Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public static class PhysicsLayer Fields | Edit this page View Source CHARACTER Declaration public const int CHARACTER = 3 | Edit this page View Source COUNT Declaration public const int COUNT = 5 | Edit this page View Source DAMAGE Declaration public const int DAMAGE = 4 | Edit this page View Source ENVIRONMENT Declaration public const int ENVIRONMENT = 1 | Edit this page View Source ITEM Declaration public const int ITEM = 2 | Edit this page View Source LEVEL Declaration public const int LEVEL = 0"
  },
  "api/AngeliA.PhysicsMask.html": {
    "href": "api/AngeliA.PhysicsMask.html",
    "title": "Class PhysicsMask | AngeliA",
    "summary": "Class PhysicsMask A group of physics layera Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public static class PhysicsMask Fields | Edit this page View Source ALL Declaration public const int ALL = 31 | Edit this page View Source CHARACTER Declaration public const int CHARACTER = 8 | Edit this page View Source DAMAGE Colliders inside damage layer will deal damage when overlape with IDamageReceiver Declaration public const int DAMAGE = 16 | Edit this page View Source DYNAMIC ENVIRONMENT | ITEM | CHARACTER Declaration public const int DYNAMIC = 14 | Edit this page View Source ENTITY ENVIRONMENT | CHARACTER Declaration public const int ENTITY = 10 | Edit this page View Source ENVIRONMENT Declaration public const int ENVIRONMENT = 2 | Edit this page View Source ITEM Declaration public const int ITEM = 4 | Edit this page View Source LEVEL Declaration public const int LEVEL = 1 | Edit this page View Source MAP LEVEL | ENVIRONMENT Declaration public const int MAP = 3 | Edit this page View Source NONE Declaration public const int NONE = 0 | Edit this page View Source SOLID LEVEL | ENVIRONMENT | CHARACTER Declaration public const int SOLID = 11"
  },
  "api/AngeliA.Pipe-1.html": {
    "href": "api/AngeliA.Pipe-1.html",
    "title": "Class Pipe<T> | AngeliA",
    "summary": "Class Pipe<T> A linked list that can add/remove from head/tail. No heap pressure. Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public class Pipe<T> Type Parameters Name Description T Constructors | Edit this page View Source Pipe(int) A linked list that can add/remove from head/tail. No heap pressure. Declaration public Pipe(int capacity = 1024) Properties | Edit this page View Source Capacity Total length of the data Declaration public int Capacity { get; init; } | Edit this page View Source Data Raw data of this pipe Declaration public T[] Data { get; init; } | Edit this page View Source IsFull True if the pipe reached max capacity Declaration public bool IsFull { get; } | Edit this page View Source this[int] Get filled data at index Declaration public T this[int index] { get; set; } Parameters Type Name Description int index Local index from \"Start\" | Edit this page View Source Length Length of the filled data Declaration public int Length { get; } | Edit this page View Source Start Head index of the filled data Declaration public int Start { get; } Methods | Edit this page View Source LinkToHead(T) Add data before head Declaration public bool LinkToHead(T data) Returns Type Description bool True if the data is added | Edit this page View Source LinkToTail(T) Add data after tail Declaration public bool LinkToTail(T data) Returns Type Description bool True if the data is added | Edit this page View Source Reorganize() Move data at head to the first of the internal array Declaration public void Reorganize() | Edit this page View Source Reset() Declaration public void Reset() | Edit this page View Source Sort(IComparer<T>) Declaration public void Sort(IComparer<T> comparer) | Edit this page View Source TryPeekHead(out T) Get data at head without remove the data from pipe Declaration public bool TryPeekHead(out T data) Returns Type Description bool True if length of pipe is not 0 | Edit this page View Source TryPeekTail(out T) Get data at tail without remove the data from pipe Declaration public bool TryPeekTail(out T data) Returns Type Description bool True if length of pipe is not 0 | Edit this page View Source TryPopHead(out T) Get and remove data at head Declaration public bool TryPopHead(out T data) Returns Type Description bool True if pipe is not empty | Edit this page View Source TryPopTail(out T) Get and remove data at tail Declaration public bool TryPopTail(out T data) Returns Type Description bool True if pipe is not empty Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.Platformer.ActionFurniture.html": {
    "href": "api/AngeliA.Platformer.ActionFurniture.html",
    "title": "Class ActionFurniture | AngeliA",
    "summary": "Class ActionFurniture Implements IMapItem IBlockEntity IActionTarget Namespace: AngeliA.Platformer Assembly: com.angelia.platformer.dll Syntax public abstract class ActionFurniture : Furniture, IMapItem, IBlockEntity, IActionTarget Methods | Edit this page View Source AllowInvoke() True if the entity can be invoke at current frame Declaration public virtual bool AllowInvoke() | Edit this page View Source Invoke() Invoke the logic provided by this entity. Declaration public abstract bool Invoke() Returns Type Description bool True if the logic performs successfuly | Edit this page View Source LateUpdate() [4/4] This function is called every frame when entity is in stage. Prioritize using this function to render the entity. Declaration public override void LateUpdate() Overrides Furniture.LateUpdate() Implements IMapItem IBlockEntity IActionTarget Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.Platformer.Armor-2.html": {
    "href": "api/AngeliA.Platformer.Armor-2.html",
    "title": "Class Armor<P, N> | AngeliA",
    "summary": "Class Armor<P, N> Implements IMapItem IProgressiveItem Namespace: AngeliA.Platformer Assembly: com.angelia.platformer.dll Syntax public abstract class Armor<P, N> : Equipment, IMapItem, IProgressiveItem where P : Equipment where N : Equipment Type Parameters Name Description P N Constructors | Edit this page View Source Armor() Declaration public Armor() Properties | Edit this page View Source HideEar Declaration protected virtual bool HideEar { get; } | Edit this page View Source HideFace Declaration protected virtual bool HideFace { get; } | Edit this page View Source HideHair Declaration protected virtual bool HideHair { get; } | Edit this page View Source HideHorn Declaration protected virtual bool HideHorn { get; } | Edit this page View Source HideTail Declaration protected virtual bool HideTail { get; } | Edit this page View Source HideWing Declaration protected virtual bool HideWing { get; } | Edit this page View Source RepairMaterials Declaration protected virtual Type[] RepairMaterials { get; } | Edit this page View Source Scale Declaration protected virtual int Scale { get; } Methods | Edit this page View Source DrawArmor(PoseCharacterRenderer) Declaration protected abstract void DrawArmor(PoseCharacterRenderer renderer) | Edit this page View Source OnPoseAnimationUpdate_FromEquipment(PoseCharacterRenderer) This function is called every frame when a pose-style character equipping this item Declaration public override void OnPoseAnimationUpdate_FromEquipment(PoseCharacterRenderer rendering) Overrides Item.OnPoseAnimationUpdate_FromEquipment(PoseCharacterRenderer) | Edit this page View Source OnTakeDamage_FromEquipment(Character, ref Damage) This function is called when the holder took damage with this item equipping Declaration public override void OnTakeDamage_FromEquipment(Character character, ref Damage damage) Overrides Item.OnTakeDamage_FromEquipment(Character, ref Damage) | Edit this page View Source RepairArmor(Character, int) Declaration public virtual bool RepairArmor(Character character, int materialID) | Edit this page View Source TryRepairEquipment(Character) Perform a repair for this item as an equipment Declaration public override bool TryRepairEquipment(Character character) Overrides Item.TryRepairEquipment(Character) Implements IMapItem IProgressiveItem Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.Platformer.ArrowBullet-1.html": {
    "href": "api/AngeliA.Platformer.ArrowBullet-1.html",
    "title": "Class ArrowBullet<I> | AngeliA",
    "summary": "Class ArrowBullet<I> Implements IMapItem Namespace: AngeliA.Platformer Assembly: com.angelia.platformer.dll Syntax public class ArrowBullet<I> : ArrowBullet, IMapItem Type Parameters Name Description I Constructors | Edit this page View Source ArrowBullet() Declaration public ArrowBullet() Implements IMapItem Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.Platformer.ArrowBullet.html": {
    "href": "api/AngeliA.Platformer.ArrowBullet.html",
    "title": "Class ArrowBullet | AngeliA",
    "summary": "Class ArrowBullet Implements IMapItem Namespace: AngeliA.Platformer Assembly: com.angelia.platformer.dll Syntax public class ArrowBullet : MovableBullet, IMapItem Constructors | Edit this page View Source ArrowBullet() Declaration public ArrowBullet() Properties | Edit this page View Source ArrowArtworkID Declaration public int ArrowArtworkID { get; init; } | Edit this page View Source ArrowItemID Declaration public int ArrowItemID { get; init; } | Edit this page View Source ArtworkID Declaration public override int ArtworkID { get; } Overrides MovableBullet.ArtworkID | Edit this page View Source SpawnItemWhenBulletDestroy Declaration protected virtual bool SpawnItemWhenBulletDestroy { get; } Methods | Edit this page View Source BeforeDespawn(IDamageReceiver) This function is called before the bullet get despawn by performing damage logic Declaration protected override void BeforeDespawn(IDamageReceiver receiver) Parameters Type Name Description IDamageReceiver receiver The target it hits Overrides MovableBullet.BeforeDespawn(IDamageReceiver) | Edit this page View Source OnActivated() This function is called when entity enter the stage Declaration public override void OnActivated() Overrides MovableBullet.OnActivated() Implements IMapItem Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.Platformer.AuraItem-1.html": {
    "href": "api/AngeliA.Platformer.AuraItem-1.html",
    "title": "Class AuraItem<B> | AngeliA",
    "summary": "Class AuraItem<B> Implements IMapItem Namespace: AngeliA.Platformer Assembly: com.angelia.platformer.dll Syntax public abstract class AuraItem<B> : BuffItem<B>, IMapItem where B : Buff Type Parameters Name Description B Properties | Edit this page View Source Radius Declaration protected virtual int Radius { get; } Methods | Edit this page View Source OnItemUpdate_FromInventory(Character, int, int) This function is called every frame when this item is in an holder's inventory Declaration public override void OnItemUpdate_FromInventory(Character holder, int inventoryID, int itemIndex) Parameters Type Name Description Character holder The holder of the inventory int inventoryID ID of the inventory Overrides BuffItem.OnItemUpdate_FromInventory(Character, int, int) Implements IMapItem Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.Platformer.BarrelMovement.html": {
    "href": "api/AngeliA.Platformer.BarrelMovement.html",
    "title": "Class BarrelMovement | AngeliA",
    "summary": "Class BarrelMovement Namespace: AngeliA.Platformer Assembly: com.angelia.platformer.dll Syntax public class BarrelMovement : VehicleMovement Constructors | Edit this page View Source BarrelMovement(Rigidbody) Declaration public BarrelMovement(Rigidbody rig) Methods | Edit this page View Source GetMovementState() Get current movement type base on current cached data Declaration protected override CharacterMovementState GetMovementState() Overrides CharacterMovement.GetMovementState() | Edit this page View Source InitializeMeta() Declaration protected override void InitializeMeta() Overrides VehicleMovement.InitializeMeta() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.Platformer.BarrelVehicle.html": {
    "href": "api/AngeliA.Platformer.BarrelVehicle.html",
    "title": "Class BarrelVehicle | AngeliA",
    "summary": "Class BarrelVehicle Implements IMapItem ICarrier IWithCharacterMovement IDamageReceiver Namespace: AngeliA.Platformer Assembly: com.angelia.platformer.dll Syntax public abstract class BarrelVehicle : Vehicle<BarrelMovement>, IMapItem, ICarrier, IWithCharacterMovement, IDamageReceiver Properties | Edit this page View Source AirDragX Amount of horizontal speed lost every frame Declaration public override int AirDragX { get; } Overrides Vehicle.AirDragX | Edit this page View Source AllowBeingPush True if this entity can be push by other Declaration public override bool AllowBeingPush { get; } Overrides Rigidbody.AllowBeingPush | Edit this page View Source BarrelSize Declaration public virtual int BarrelSize { get; } | Edit this page View Source DriverLeaveLocalPosition Declaration public override Int2? DriverLeaveLocalPosition { get; } Overrides Vehicle.DriverLeaveLocalPosition | Edit this page View Source DriverLocalPosition Declaration public override Int2? DriverLocalPosition { get; } Overrides Vehicle.DriverLocalPosition | Edit this page View Source RollSpeed Declaration public virtual int RollSpeed { get; } Methods | Edit this page View Source CheckForStartDrive(out Character) Declaration protected override bool CheckForStartDrive(out Character driver) Overrides Vehicle.CheckForStartDrive(out Character) | Edit this page View Source CheckForStopDrive() Declaration protected override bool CheckForStopDrive() Overrides Vehicle.CheckForStopDrive() | Edit this page View Source LateUpdate() [4/4] This function is called every frame when entity is in stage. Prioritize using this function to render the entity. Declaration public override void LateUpdate() Overrides Entity.LateUpdate() | Edit this page View Source OnActivated() This function is called when entity enter the stage Declaration public override void OnActivated() Overrides Vehicle.OnActivated() | Edit this page View Source Push(int) This function is called when the entity is being pushed Declaration public override void Push(int speedX) Overrides Rigidbody.Push(int) | Edit this page View Source Update() [3/4] This function is called every frame when entity is in stage. Prioritize using this function to update physics logic. Declaration public override void Update() Overrides Vehicle.Update() Implements IMapItem ICarrier IWithCharacterMovement IDamageReceiver Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.Platformer.BeamBullet.html": {
    "href": "api/AngeliA.Platformer.BeamBullet.html",
    "title": "Class BeamBullet | AngeliA",
    "summary": "Class BeamBullet Implements IMapItem Namespace: AngeliA.Platformer Assembly: com.angelia.platformer.dll Syntax public abstract class BeamBullet : MovableBullet, IMapItem Fields | Edit this page View Source BEAM_SPEED Declaration public const int BEAM_SPEED = 10752 Properties | Edit this page View Source BeamSize Declaration protected virtual int BeamSize { get; } | Edit this page View Source BeamSpriteID Declaration protected abstract int BeamSpriteID { get; } | Edit this page View Source BeamTint Declaration protected virtual Color32 BeamTint { get; } | Edit this page View Source BurstRotateSpeed Declaration protected virtual int BurstRotateSpeed { get; } | Edit this page View Source BurstSize Declaration protected virtual int BurstSize { get; } | Edit this page View Source BurstSpriteID Declaration protected abstract int BurstSpriteID { get; } | Edit this page View Source BurstTint Declaration protected virtual Color32 BurstTint { get; } | Edit this page View Source Duration How long can this bullet exists on stage in frame Declaration public override sealed int Duration { get; } Overrides MovableBullet.Duration | Edit this page View Source HandBurstRotateSpeed Declaration protected virtual int HandBurstRotateSpeed { get; } | Edit this page View Source HandBurstSize Declaration protected virtual int HandBurstSize { get; } | Edit this page View Source HandBurstSpriteID Declaration protected abstract int HandBurstSpriteID { get; } | Edit this page View Source HandBurstTint Declaration protected virtual Color32 HandBurstTint { get; } | Edit this page View Source IllumanteAmount Declaration protected virtual int IllumanteAmount { get; } | Edit this page View Source IllumanteUnitRadius Declaration protected virtual int IllumanteUnitRadius { get; } | Edit this page View Source MaxRange Declaration public override int MaxRange { get; } Overrides MovableBullet.MaxRange | Edit this page View Source OnlyShowBurstWhenHitReceiver Declaration protected virtual bool OnlyShowBurstWhenHitReceiver { get; } | Edit this page View Source RenderingLayer Declaration protected virtual int RenderingLayer { get; } | Edit this page View Source SparkSize Declaration protected virtual int SparkSize { get; } | Edit this page View Source SparkSpriteID Declaration protected abstract int SparkSpriteID { get; } | Edit this page View Source SparkTint Declaration protected virtual Color32 SparkTint { get; } | Edit this page View Source SpeedForward Declaration public override sealed int SpeedForward { get; } Overrides MovableBullet.SpeedForward Methods | Edit this page View Source BeforeDespawn(IDamageReceiver) This function is called before the bullet get despawn by performing damage logic Declaration protected override void BeforeDespawn(IDamageReceiver receiver) Parameters Type Name Description IDamageReceiver receiver The target it hits Overrides MovableBullet.BeforeDespawn(IDamageReceiver) | Edit this page View Source LateUpdate() [4/4] This function is called every frame when entity is in stage. Prioritize using this function to render the entity. Declaration public override void LateUpdate() Overrides MovableBullet.LateUpdate() | Edit this page View Source OnActivated() This function is called when entity enter the stage Declaration public override void OnActivated() Overrides MovableBullet.OnActivated() Implements IMapItem Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.Platformer.Bed.html": {
    "href": "api/AngeliA.Platformer.Bed.html",
    "title": "Class Bed | AngeliA",
    "summary": "Class Bed Implements IMapItem IBlockEntity IActionTarget Namespace: AngeliA.Platformer Assembly: com.angelia.platformer.dll Syntax public abstract class Bed : ActionFurniture, IMapItem, IBlockEntity, IActionTarget Properties | Edit this page View Source ModuleType Declaration protected override Direction3 ModuleType { get; } Overrides Furniture.ModuleType Methods | Edit this page View Source GetTargetOnBed(Character) Declaration public void GetTargetOnBed(Character target) | Edit this page View Source Invoke() Invoke the logic provided by this entity. Declaration public override bool Invoke() Returns Type Description bool True if the logic performs successfuly Overrides ActionFurniture.Invoke() | Edit this page View Source OnActivated() This function is called when entity enter the stage Declaration public override void OnActivated() Overrides Furniture.OnActivated() | Edit this page View Source OnInactivated() This function is called when entity leave the stage Declaration public override void OnInactivated() Overrides Entity.OnInactivated() | Edit this page View Source Update() [3/4] This function is called every frame when entity is in stage. Prioritize using this function to update physics logic. Declaration public override void Update() Overrides Entity.Update() Implements IMapItem IBlockEntity IActionTarget Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.Platformer.BodyArmor-2.html": {
    "href": "api/AngeliA.Platformer.BodyArmor-2.html",
    "title": "Class BodyArmor<P, N> | AngeliA",
    "summary": "Class BodyArmor<P, N> Implements IMapItem IProgressiveItem Namespace: AngeliA.Platformer Assembly: com.angelia.platformer.dll Syntax public abstract class BodyArmor<P, N> : Armor<P, N>, IMapItem, IProgressiveItem where P : Equipment where N : Equipment Type Parameters Name Description P N Constructors | Edit this page View Source BodyArmor() Declaration public BodyArmor() Properties | Edit this page View Source EquipmentType Which type is this quipment Declaration public override sealed EquipmentType EquipmentType { get; } Overrides Equipment.EquipmentType Methods | Edit this page View Source DrawArmor(PoseCharacterRenderer) Declaration protected override void DrawArmor(PoseCharacterRenderer renderer) Overrides Armor<P, N>.DrawArmor(PoseCharacterRenderer) Implements IMapItem IProgressiveItem Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.Platformer.Breakable.html": {
    "href": "api/AngeliA.Platformer.Breakable.html",
    "title": "Class Breakable | AngeliA",
    "summary": "Class Breakable Implements IMapItem ICarrier IBlockEntity IDamageReceiver Namespace: AngeliA.Platformer Assembly: com.angelia.platformer.dll Syntax [Entity.Layer(3)] public abstract class Breakable : Rigidbody, IMapItem, ICarrier, IBlockEntity, IDamageReceiver Properties | Edit this page View Source DestroyWhenInsideGround True if this entity despawns when it's inside ground Declaration public override bool DestroyWhenInsideGround { get; } Overrides Rigidbody.DestroyWhenInsideGround | Edit this page View Source IgnoreDamageType This entity do not take damage with this tags Declaration public virtual Tag IgnoreDamageType { get; } | Edit this page View Source PhysicalLayer Which physical layer should this entity fill it's collider in Declaration public override int PhysicalLayer { get; } Overrides Rigidbody.PhysicalLayer | Edit this page View Source SpawnItemFromMapWhenBreak Declaration public virtual bool SpawnItemFromMapWhenBreak { get; } Methods | Edit this page View Source LateUpdate() [4/4] This function is called every frame when entity is in stage. Prioritize using this function to render the entity. Declaration public override void LateUpdate() Overrides Entity.LateUpdate() | Edit this page View Source OnBreak() Declaration protected virtual void OnBreak() | Edit this page View Source OnInsideGroundDestroyed() This function is called when this entity is despawn by being stuck inside ground Declaration protected override void OnInsideGroundDestroyed() Overrides Rigidbody.OnInsideGroundDestroyed() Implements IMapItem ICarrier IBlockEntity IDamageReceiver Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.Platformer.BulletShooter-1.html": {
    "href": "api/AngeliA.Platformer.BulletShooter-1.html",
    "title": "Class BulletShooter<B> | AngeliA",
    "summary": "Class BulletShooter<B> Implements IMapItem IBlockEntity Namespace: AngeliA.Platformer Assembly: com.angelia.platformer.dll Syntax public abstract class BulletShooter<B> : BulletShooter, IMapItem, IBlockEntity where B : Bullet Type Parameters Name Description B Constructors | Edit this page View Source BulletShooter() Declaration public BulletShooter() Properties | Edit this page View Source BulletID Declaration protected override int BulletID { get; } Overrides BulletShooter.BulletID Implements IMapItem IBlockEntity Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.Platformer.BulletShooter.html": {
    "href": "api/AngeliA.Platformer.BulletShooter.html",
    "title": "Class BulletShooter | AngeliA",
    "summary": "Class BulletShooter Implements IMapItem IBlockEntity Namespace: AngeliA.Platformer Assembly: com.angelia.platformer.dll Syntax [Entity.Layer(3)] [Entity.MapEditorGroup(\"Contraption\", 0)] public abstract class BulletShooter : Entity, IMapItem, IBlockEntity Properties | Edit this page View Source AttackTargetTeam Declaration protected virtual int AttackTargetTeam { get; } | Edit this page View Source BulletID Declaration protected abstract int BulletID { get; } | Edit this page View Source LastShootFrame Declaration protected int LastShootFrame { get; } | Edit this page View Source ShootDirection Declaration protected abstract Direction4 ShootDirection { get; } | Edit this page View Source ShootFrequency Declaration protected virtual int ShootFrequency { get; } | Edit this page View Source ShootOffsetForward Declaration protected virtual int ShootOffsetForward { get; } | Edit this page View Source ShootOffsetSide Declaration protected virtual int ShootOffsetSide { get; } Methods | Edit this page View Source BeforeUpdate() [2/4] This function is called every frame when entity is in stage. Prioritize using this function to update physics logic. Declaration public override void BeforeUpdate() Overrides Entity.BeforeUpdate() | Edit this page View Source FirstUpdate() [1/4] This function is called every frame when entity is in stage. Prioritize using this function to fill collider in to physics system. Declaration public override void FirstUpdate() Overrides Entity.FirstUpdate() | Edit this page View Source OnActivated() This function is called when entity enter the stage Declaration public override void OnActivated() Overrides Entity.OnActivated() | Edit this page View Source OnBulletShoot(Bullet) Declaration protected virtual void OnBulletShoot(Bullet bullet) | Edit this page View Source Shoot() Declaration public void Shoot() Implements IMapItem IBlockEntity Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.Platformer.Burner-1.html": {
    "href": "api/AngeliA.Platformer.Burner-1.html",
    "title": "Class Burner<F> | AngeliA",
    "summary": "Class Burner<F> Implements IMapItem IBlockEntity Namespace: AngeliA.Platformer Assembly: com.angelia.platformer.dll Syntax [Entity.Layer(3)] [Entity.MapEditorGroup(\"Contraption\", 0)] public abstract class Burner<F> : Entity, IMapItem, IBlockEntity where F : Fire Type Parameters Name Description F Constructors | Edit this page View Source Burner() Declaration public Burner() Properties | Edit this page View Source AllowFireFromMapElement Declaration protected virtual bool AllowFireFromMapElement { get; } | Edit this page View Source Direction Declaration protected virtual Direction4 Direction { get; } | Edit this page View Source FireDuration Declaration protected virtual int FireDuration { get; } | Edit this page View Source FireFrequency Declaration protected virtual int FireFrequency { get; } Methods | Edit this page View Source FirstUpdate() [1/4] This function is called every frame when entity is in stage. Prioritize using this function to fill collider in to physics system. Declaration public override void FirstUpdate() Overrides Entity.FirstUpdate() | Edit this page View Source LateUpdate() [4/4] This function is called every frame when entity is in stage. Prioritize using this function to render the entity. Declaration public override void LateUpdate() Overrides Entity.LateUpdate() | Edit this page View Source OnActivated() This function is called when entity enter the stage Declaration public override void OnActivated() Overrides Entity.OnActivated() | Edit this page View Source Update() [3/4] This function is called every frame when entity is in stage. Prioritize using this function to update physics logic. Declaration public override void Update() Overrides Entity.Update() Implements IMapItem IBlockEntity Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.Platformer.CabinetIdol.html": {
    "href": "api/AngeliA.Platformer.CabinetIdol.html",
    "title": "Class CabinetIdol | AngeliA",
    "summary": "Class CabinetIdol Implements IMapItem IBlockEntity IActionTarget Namespace: AngeliA.Platformer Assembly: com.angelia.platformer.dll Syntax public abstract class CabinetIdol : Furniture, IMapItem, IBlockEntity, IActionTarget Methods | Edit this page View Source LateUpdate() [4/4] This function is called every frame when entity is in stage. Prioritize using this function to render the entity. Declaration public override void LateUpdate() Overrides Furniture.LateUpdate() Implements IMapItem IBlockEntity IActionTarget Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.Platformer.CameraAutoDirection.html": {
    "href": "api/AngeliA.Platformer.CameraAutoDirection.html",
    "title": "Class CameraAutoDirection | AngeliA",
    "summary": "Class CameraAutoDirection Implements IMapItem Namespace: AngeliA.Platformer Assembly: com.angelia.platformer.dll Syntax [Entity.MapEditorGroup(\"System\", -512)] public sealed class CameraAutoDirection : IMapItem Implements IMapItem Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.Platformer.CameraAutoScroll.html": {
    "href": "api/AngeliA.Platformer.CameraAutoScroll.html",
    "title": "Class CameraAutoScroll | AngeliA",
    "summary": "Class CameraAutoScroll Implements IMapItem Namespace: AngeliA.Platformer Assembly: com.angelia.platformer.dll Syntax [Entity.MapEditorGroup(\"System\", -512)] public sealed class CameraAutoScroll : Entity, IMapItem Methods | Edit this page View Source LateUpdate() [4/4] This function is called every frame when entity is in stage. Prioritize using this function to render the entity. Declaration public override void LateUpdate() Overrides Entity.LateUpdate() | Edit this page View Source OnActivated() This function is called when entity enter the stage Declaration public override void OnActivated() Overrides Entity.OnActivated() | Edit this page View Source OnInactivated() This function is called when entity leave the stage Declaration public override void OnInactivated() Overrides Entity.OnInactivated() Implements IMapItem Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.Platformer.CameraGate.html": {
    "href": "api/AngeliA.Platformer.CameraGate.html",
    "title": "Class CameraGate | AngeliA",
    "summary": "Class CameraGate Implements IMapItem Namespace: AngeliA.Platformer Assembly: com.angelia.platformer.dll Syntax [Entity.MapEditorGroup(\"System\", -512)] public abstract class CameraGate : Entity, IMapItem Properties | Edit this page View Source Direction Declaration protected abstract Direction4 Direction { get; } Methods | Edit this page View Source BeforeUpdate() [2/4] This function is called every frame when entity is in stage. Prioritize using this function to update physics logic. Declaration public override void BeforeUpdate() Overrides Entity.BeforeUpdate() | Edit this page View Source LateUpdate() [4/4] This function is called every frame when entity is in stage. Prioritize using this function to render the entity. Declaration public override void LateUpdate() Overrides Entity.LateUpdate() | Edit this page View Source Update() [3/4] This function is called every frame when entity is in stage. Prioritize using this function to update physics logic. Declaration public override void Update() Overrides Entity.Update() Implements IMapItem Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.Platformer.CameraGateDown.html": {
    "href": "api/AngeliA.Platformer.CameraGateDown.html",
    "title": "Class CameraGateDown | AngeliA",
    "summary": "Class CameraGateDown Implements IMapItem Namespace: AngeliA.Platformer Assembly: com.angelia.platformer.dll Syntax public class CameraGateDown : CameraGate, IMapItem Properties | Edit this page View Source Direction Declaration protected override Direction4 Direction { get; } Overrides CameraGate.Direction Implements IMapItem Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.Platformer.CameraGateLeft.html": {
    "href": "api/AngeliA.Platformer.CameraGateLeft.html",
    "title": "Class CameraGateLeft | AngeliA",
    "summary": "Class CameraGateLeft Implements IMapItem Namespace: AngeliA.Platformer Assembly: com.angelia.platformer.dll Syntax public class CameraGateLeft : CameraGate, IMapItem Properties | Edit this page View Source Direction Declaration protected override Direction4 Direction { get; } Overrides CameraGate.Direction Implements IMapItem Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.Platformer.CameraGateRight.html": {
    "href": "api/AngeliA.Platformer.CameraGateRight.html",
    "title": "Class CameraGateRight | AngeliA",
    "summary": "Class CameraGateRight Implements IMapItem Namespace: AngeliA.Platformer Assembly: com.angelia.platformer.dll Syntax public class CameraGateRight : CameraGate, IMapItem Properties | Edit this page View Source Direction Declaration protected override Direction4 Direction { get; } Overrides CameraGate.Direction Implements IMapItem Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.Platformer.CameraGateUp.html": {
    "href": "api/AngeliA.Platformer.CameraGateUp.html",
    "title": "Class CameraGateUp | AngeliA",
    "summary": "Class CameraGateUp Implements IMapItem Namespace: AngeliA.Platformer Assembly: com.angelia.platformer.dll Syntax public class CameraGateUp : CameraGate, IMapItem Properties | Edit this page View Source Direction Declaration protected override Direction4 Direction { get; } Overrides CameraGate.Direction Implements IMapItem Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.Platformer.CarryingPipe.html": {
    "href": "api/AngeliA.Platformer.CarryingPipe.html",
    "title": "Class CarryingPipe | AngeliA",
    "summary": "Class CarryingPipe Implements IMapItem IBlockEntity Namespace: AngeliA.Platformer Assembly: com.angelia.platformer.dll Syntax [Entity.MapEditorGroup(\"Entity\", 0)] [Entity.Layer(3)] public abstract class CarryingPipe : Entity, IMapItem, IBlockEntity Properties | Edit this page View Source BottomSprite Declaration protected abstract SpriteCode BottomSprite { get; } | Edit this page View Source CarryingPoseAnimationID Declaration protected virtual int CarryingPoseAnimationID { get; } | Edit this page View Source Direction Declaration protected abstract Direction4 Direction { get; } | Edit this page View Source EdgeSprite Declaration protected abstract SpriteCode EdgeSprite { get; } | Edit this page View Source InsertSprite Declaration protected abstract SpriteCode InsertSprite { get; } | Edit this page View Source MidSprite Declaration protected abstract SpriteCode MidSprite { get; } Methods | Edit this page View Source FirstUpdate() [1/4] This function is called every frame when entity is in stage. Prioritize using this function to fill collider in to physics system. Declaration public override void FirstUpdate() Overrides Entity.FirstUpdate() | Edit this page View Source IsEdge(bool) Declaration public bool IsEdge(bool requireOpenSpace) | Edit this page View Source LateUpdate() [4/4] This function is called every frame when entity is in stage. Prioritize using this function to render the entity. Declaration public override void LateUpdate() Overrides Entity.LateUpdate() | Edit this page View Source OnActivated() This function is called when entity enter the stage Declaration public override void OnActivated() Overrides Entity.OnActivated() | Edit this page View Source OnPlayerEnter(Character) Declaration protected virtual void OnPlayerEnter(Character player) | Edit this page View Source OnPlayerExit(Character) Declaration protected virtual void OnPlayerExit(Character player) | Edit this page View Source Update() [3/4] This function is called every frame when entity is in stage. Prioritize using this function to update physics logic. Declaration public override void Update() Overrides Entity.Update() Implements IMapItem IBlockEntity Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.Platformer.ChainCrusher.html": {
    "href": "api/AngeliA.Platformer.ChainCrusher.html",
    "title": "Class ChainCrusher | AngeliA",
    "summary": "Class ChainCrusher Implements IMapItem IBlockEntity ICircuitOperator IDamageReceiver Namespace: AngeliA.Platformer Assembly: com.angelia.platformer.dll Syntax [Entity.Layer(3)] [Entity.MapEditorGroup(\"Contraption\", 0)] public abstract class ChainCrusher : Entity, IMapItem, IBlockEntity, ICircuitOperator, IDamageReceiver Properties | Edit this page View Source AllowReleaseBall Declaration public virtual bool AllowReleaseBall { get; } | Edit this page View Source AttackTargetTeam Declaration public virtual int AttackTargetTeam { get; } | Edit this page View Source BallReleaseFrame Declaration protected int BallReleaseFrame { get; } | Edit this page View Source ChainLength Declaration public virtual int ChainLength { get; } | Edit this page View Source Clockwise Declaration public virtual bool Clockwise { get; } | Edit this page View Source CurrentSpikeBallPos Declaration protected Int2 CurrentSpikeBallPos { get; } | Edit this page View Source CurrentSpikeBallRotation Declaration protected float CurrentSpikeBallRotation { get; } | Edit this page View Source DamageAmount Declaration public virtual int DamageAmount { get; } | Edit this page View Source DamageType Declaration public virtual Tag DamageType { get; } | Edit this page View Source ReleaseBallOnCircuitTrigger Declaration public virtual bool ReleaseBallOnCircuitTrigger { get; } | Edit this page View Source ReleaseBallOnDamaged Declaration public virtual bool ReleaseBallOnDamaged { get; } | Edit this page View Source RotateFrequency Declaration public virtual int RotateFrequency { get; } | Edit this page View Source SpikeBallSize Declaration public virtual int SpikeBallSize { get; } Methods | Edit this page View Source BeforeUpdate() [2/4] This function is called every frame when entity is in stage. Prioritize using this function to update physics logic. Declaration public override void BeforeUpdate() Overrides Entity.BeforeUpdate() | Edit this page View Source CalculateCurrentSpikeBallTransform() Declaration protected virtual (Int2 pos, float rot) CalculateCurrentSpikeBallTransform() | Edit this page View Source FirstUpdate() [1/4] This function is called every frame when entity is in stage. Prioritize using this function to fill collider in to physics system. Declaration public override void FirstUpdate() Overrides Entity.FirstUpdate() | Edit this page View Source OnActivated() This function is called when entity enter the stage Declaration public override void OnActivated() Overrides Entity.OnActivated() | Edit this page View Source OnReleaseBall() Declaration protected virtual void OnReleaseBall() Implements IMapItem IBlockEntity ICircuitOperator IDamageReceiver Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.Platformer.Chair.html": {
    "href": "api/AngeliA.Platformer.Chair.html",
    "title": "Class Chair | AngeliA",
    "summary": "Class Chair Implements IMapItem IBlockEntity IActionTarget Namespace: AngeliA.Platformer Assembly: com.angelia.platformer.dll Syntax public abstract class Chair : ActionFurniture, IMapItem, IBlockEntity, IActionTarget Properties | Edit this page View Source ModuleType Declaration protected override sealed Direction3 ModuleType { get; } Overrides Furniture.ModuleType | Edit this page View Source SitPoseAnimationID Declaration protected virtual int SitPoseAnimationID { get; } Methods | Edit this page View Source AllowInvoke() True if the entity can be invoke at current frame Declaration public override bool AllowInvoke() Overrides ActionFurniture.AllowInvoke() | Edit this page View Source BeforeUpdate() [2/4] This function is called every frame when entity is in stage. Prioritize using this function to update physics logic. Declaration public override void BeforeUpdate() Overrides Furniture.BeforeUpdate() | Edit this page View Source Invoke() Invoke the logic provided by this entity. Declaration public override bool Invoke() Returns Type Description bool True if the logic performs successfuly Overrides ActionFurniture.Invoke() | Edit this page View Source LateUpdate() [4/4] This function is called every frame when entity is in stage. Prioritize using this function to render the entity. Declaration public override void LateUpdate() Overrides ActionFurniture.LateUpdate() | Edit this page View Source MakeTargetSit(Entity) Declaration public void MakeTargetSit(Entity target) | Edit this page View Source OnActivated() This function is called when entity enter the stage Declaration public override void OnActivated() Overrides Furniture.OnActivated() Implements IMapItem IBlockEntity IActionTarget Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.Platformer.CheckAltar-1.html": {
    "href": "api/AngeliA.Platformer.CheckAltar-1.html",
    "title": "Class CheckAltar<CP> | AngeliA",
    "summary": "Class CheckAltar<CP> Implements IMapItem ICircuitOperator IBlockEntity Namespace: AngeliA.Platformer Assembly: com.angelia.platformer.dll Syntax public abstract class CheckAltar<CP> : CheckAltar, IMapItem, ICircuitOperator, IBlockEntity where CP : CheckPoint Type Parameters Name Description CP Constructors | Edit this page View Source CheckAltar() Declaration public CheckAltar() Implements IMapItem ICircuitOperator IBlockEntity Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.Platformer.CheckAltar.html": {
    "href": "api/AngeliA.Platformer.CheckAltar.html",
    "title": "Class CheckAltar | AngeliA",
    "summary": "Class CheckAltar Implements IMapItem ICircuitOperator IBlockEntity Namespace: AngeliA.Platformer Assembly: com.angelia.platformer.dll Syntax [Entity.MapEditorGroup(\"CheckPoint\", 0)] [Entity.Layer(3)] public abstract class CheckAltar : Entity, IMapItem, ICircuitOperator, IBlockEntity Fields | Edit this page View Source LinkedCheckPointID Declaration protected int LinkedCheckPointID Properties | Edit this page View Source CurrentAltarID Declaration public static int CurrentAltarID { get; } | Edit this page View Source CurrentAltarUnitPos Declaration public static Int3 CurrentAltarUnitPos { get; } | Edit this page View Source LinkPoolReady Declaration public static bool LinkPoolReady { get; } Methods | Edit this page View Source FirstUpdate() [1/4] This function is called every frame when entity is in stage. Prioritize using this function to fill collider in to physics system. Declaration public override void FirstUpdate() Overrides Entity.FirstUpdate() | Edit this page View Source LateUpdate() [4/4] This function is called every frame when entity is in stage. Prioritize using this function to render the entity. Declaration public override void LateUpdate() Overrides Entity.LateUpdate() | Edit this page View Source OnActivated() This function is called when entity enter the stage Declaration public override void OnActivated() Overrides Entity.OnActivated() | Edit this page View Source Touch() Declaration public virtual void Touch() | Edit this page View Source TriggerCheckAltar(Int3) Declaration public static void TriggerCheckAltar(Int3 unitPos) | Edit this page View Source TriggerCheckAltar(int, Int3) Declaration public static void TriggerCheckAltar(int id, Int3 unitPos) | Edit this page View Source TryGetLinkedID(int, out int) Declaration public static bool TryGetLinkedID(int id, out int linkedID) | Edit this page View Source Update() [3/4] This function is called every frame when entity is in stage. Prioritize using this function to update physics logic. Declaration public override void Update() Overrides Entity.Update() Implements IMapItem ICircuitOperator IBlockEntity Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.Platformer.CheckPoint.html": {
    "href": "api/AngeliA.Platformer.CheckPoint.html",
    "title": "Class CheckPoint | AngeliA",
    "summary": "Class CheckPoint Implements IMapItem IBlockEntity ICircuitOperator Namespace: AngeliA.Platformer Assembly: com.angelia.platformer.dll Syntax [Entity.MapEditorGroup(\"CheckPoint\", 0)] [Entity.Layer(3)] public abstract class CheckPoint : Entity, IMapItem, IBlockEntity, ICircuitOperator Constructors | Edit this page View Source CheckPoint() Declaration public CheckPoint() Fields | Edit this page View Source LastTriggerFrame Declaration protected int LastTriggerFrame Properties | Edit this page View Source LastTriggeredCheckPointID Declaration public static int LastTriggeredCheckPointID { get; } | Edit this page View Source LastTriggeredCheckPointUnitPosition Declaration public static Int3? LastTriggeredCheckPointUnitPosition { get; } | Edit this page View Source RequireAltarUnlock Declaration protected virtual bool RequireAltarUnlock { get; } Methods | Edit this page View Source FirstUpdate() [1/4] This function is called every frame when entity is in stage. Prioritize using this function to fill collider in to physics system. Declaration public override void FirstUpdate() Overrides Entity.FirstUpdate() | Edit this page View Source LateUpdate() [4/4] This function is called every frame when entity is in stage. Prioritize using this function to render the entity. Declaration public override void LateUpdate() Overrides Entity.LateUpdate() | Edit this page View Source OnActivated() This function is called when entity enter the stage Declaration public override void OnActivated() Overrides Entity.OnActivated() | Edit this page View Source OnGameRestart() Declaration [OnGameRestart(0)] public static void OnGameRestart() | Edit this page View Source Touch() Declaration public virtual void Touch() | Edit this page View Source TriggerCheckPoint(Int3) Declaration public static void TriggerCheckPoint(Int3 unitPos) | Edit this page View Source TriggerCheckPoint(int, Int3) Declaration public static void TriggerCheckPoint(int id, Int3 unitPos) | Edit this page View Source Update() [3/4] This function is called every frame when entity is in stage. Prioritize using this function to update physics logic. Declaration public override void Update() Overrides Entity.Update() Events | Edit this page View Source OnCheckPointTouched Declaration public static event Action<CheckPoint, Character> OnCheckPointTouched Implements IMapItem IBlockEntity ICircuitOperator Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.Platformer.CheckPointPortal.html": {
    "href": "api/AngeliA.Platformer.CheckPointPortal.html",
    "title": "Class CheckPointPortal | AngeliA",
    "summary": "Class CheckPointPortal Implements IMapItem Namespace: AngeliA.Platformer Assembly: com.angelia.platformer.dll Syntax [Entity.Capacity(1, 0)] public class CheckPointPortal : CircleFlamePortal, IMapItem Fields | Edit this page View Source TYPE_ID Declaration public static readonly int TYPE_ID Properties | Edit this page View Source TargetGlobalPosition Declaration protected override Int3 TargetGlobalPosition { get; } Overrides Portal.TargetGlobalPosition Methods | Edit this page View Source Invoke(Character) Declaration public override bool Invoke(Character character) Overrides Portal.Invoke(Character) | Edit this page View Source LateUpdate() [4/4] This function is called every frame when entity is in stage. Prioritize using this function to render the entity. Declaration public override void LateUpdate() Overrides CircleFlamePortal.LateUpdate() | Edit this page View Source OnActivated() This function is called when entity enter the stage Declaration public override void OnActivated() Overrides CircleFlamePortal.OnActivated() | Edit this page View Source SetCheckPoint(int, Int3) Declaration public void SetCheckPoint(int checkPointID, Int3 unitPosition) | Edit this page View Source Update() [3/4] This function is called every frame when entity is in stage. Prioritize using this function to update physics logic. Declaration public override void Update() Overrides Portal.Update() Implements IMapItem Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.Platformer.CircleFlamePortal.html": {
    "href": "api/AngeliA.Platformer.CircleFlamePortal.html",
    "title": "Class CircleFlamePortal | AngeliA",
    "summary": "Class CircleFlamePortal Implements IMapItem Namespace: AngeliA.Platformer Assembly: com.angelia.platformer.dll Syntax public abstract class CircleFlamePortal : Portal, IMapItem Properties | Edit this page View Source CircleCode Declaration protected virtual int CircleCode { get; } | Edit this page View Source CircleSize Declaration protected virtual int CircleSize { get; } | Edit this page View Source FlameCode Declaration protected virtual int FlameCode { get; } | Edit this page View Source LightCode Declaration protected virtual int LightCode { get; } | Edit this page View Source RenderingMaxZ Declaration protected int RenderingMaxZ { get; } | Edit this page View Source RenderingMinZ Declaration protected int RenderingMinZ { get; } Methods | Edit this page View Source LateUpdate() [4/4] This function is called every frame when entity is in stage. Prioritize using this function to render the entity. Declaration public override void LateUpdate() Overrides Entity.LateUpdate() | Edit this page View Source OnActivated() This function is called when entity enter the stage Declaration public override void OnActivated() Overrides Portal.OnActivated() Implements IMapItem Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.Platformer.Clock.html": {
    "href": "api/AngeliA.Platformer.Clock.html",
    "title": "Class Clock | AngeliA",
    "summary": "Class Clock Implements IMapItem IBlockEntity Namespace: AngeliA.Platformer Assembly: com.angelia.platformer.dll Syntax public abstract class Clock : Furniture, IMapItem, IBlockEntity Properties | Edit this page View Source ModuleType Declaration protected override Direction3 ModuleType { get; } Overrides Furniture.ModuleType Methods | Edit this page View Source FirstUpdate() [1/4] This function is called every frame when entity is in stage. Prioritize using this function to fill collider in to physics system. Declaration public override void FirstUpdate() Overrides Furniture.FirstUpdate() | Edit this page View Source LateUpdate() [4/4] This function is called every frame when entity is in stage. Prioritize using this function to render the entity. Declaration public override void LateUpdate() Overrides Furniture.LateUpdate() Implements IMapItem IBlockEntity Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.Platformer.Collectable.html": {
    "href": "api/AngeliA.Platformer.Collectable.html",
    "title": "Class Collectable | AngeliA",
    "summary": "Class Collectable Implements IMapItem IBlockEntity Namespace: AngeliA.Platformer Assembly: com.angelia.platformer.dll Syntax [Entity.Layer(3)] [Entity.MapEditorGroup(\"Collectable\", 0)] public abstract class Collectable : Entity, IMapItem, IBlockEntity Properties | Edit this page View Source ItemCount Declaration protected virtual int ItemCount { get; } | Edit this page View Source ItemID Declaration protected virtual int ItemID { get; } Methods | Edit this page View Source FirstUpdate() [1/4] This function is called every frame when entity is in stage. Prioritize using this function to fill collider in to physics system. Declaration public override void FirstUpdate() Overrides Entity.FirstUpdate() | Edit this page View Source LateUpdate() [4/4] This function is called every frame when entity is in stage. Prioritize using this function to render the entity. Declaration public override void LateUpdate() Overrides Entity.LateUpdate() | Edit this page View Source OnActivated() This function is called when entity enter the stage Declaration public override void OnActivated() Overrides Entity.OnActivated() | Edit this page View Source OnCollect(Character) Declaration public virtual bool OnCollect(Character collector) | Edit this page View Source Update() [3/4] This function is called every frame when entity is in stage. Prioritize using this function to update physics logic. Declaration public override void Update() Overrides Entity.Update() Implements IMapItem IBlockEntity Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.Platformer.Conveyor.html": {
    "href": "api/AngeliA.Platformer.Conveyor.html",
    "title": "Class Conveyor | AngeliA",
    "summary": "Class Conveyor Implements IMapItem IBlockEntity Namespace: AngeliA.Platformer Assembly: com.angelia.platformer.dll Syntax [Entity.Layer(3)] public abstract class Conveyor : Entity, IMapItem, IBlockEntity Properties | Edit this page View Source ArtCodeLeft Declaration protected abstract int ArtCodeLeft { get; } | Edit this page View Source ArtCodeMid Declaration protected abstract int ArtCodeMid { get; } | Edit this page View Source ArtCodeRight Declaration protected abstract int ArtCodeRight { get; } | Edit this page View Source ArtCodeSingle Declaration protected abstract int ArtCodeSingle { get; } | Edit this page View Source MoveSpeed Declaration protected abstract int MoveSpeed { get; } | Edit this page View Source Pose Declaration protected FittingPose Pose { get; } Methods | Edit this page View Source BeforeUpdate() [2/4] This function is called every frame when entity is in stage. Prioritize using this function to update physics logic. Declaration public override void BeforeUpdate() Overrides Entity.BeforeUpdate() | Edit this page View Source FirstUpdate() [1/4] This function is called every frame when entity is in stage. Prioritize using this function to fill collider in to physics system. Declaration public override void FirstUpdate() Overrides Entity.FirstUpdate() | Edit this page View Source LateUpdate() [4/4] This function is called every frame when entity is in stage. Prioritize using this function to render the entity. Declaration public override void LateUpdate() Overrides Entity.LateUpdate() | Edit this page View Source OnActivated() This function is called when entity enter the stage Declaration public override void OnActivated() Overrides Entity.OnActivated() | Edit this page View Source ReloadPose() Declaration protected void ReloadPose() Implements IMapItem IBlockEntity Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.Platformer.CraftingTable.html": {
    "href": "api/AngeliA.Platformer.CraftingTable.html",
    "title": "Class CraftingTable | AngeliA",
    "summary": "Class CraftingTable Implements IMapItem IBlockEntity IActionTarget Namespace: AngeliA.Platformer Assembly: com.angelia.platformer.dll Syntax public abstract class CraftingTable : InventoryFurniture<CraftingUI>, IMapItem, IBlockEntity, IActionTarget Properties | Edit this page View Source UseInventoryThumbnail Declaration protected virtual bool UseInventoryThumbnail { get; } Methods | Edit this page View Source DrawInventoryThumbnail(IRect, bool) Declaration protected void DrawInventoryThumbnail(IRect itemRect, bool singleRow = false) | Edit this page View Source Invoke() Invoke the logic provided by this entity. Declaration public override bool Invoke() Returns Type Description bool True if the logic performs successfuly Overrides InventoryFurniture.Invoke() | Edit this page View Source LateUpdate() [4/4] This function is called every frame when entity is in stage. Prioritize using this function to render the entity. Declaration public override void LateUpdate() Overrides InventoryFurniture.LateUpdate() Implements IMapItem IBlockEntity IActionTarget Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.Platformer.CraftingUI.html": {
    "href": "api/AngeliA.Platformer.CraftingUI.html",
    "title": "Class CraftingUI | AngeliA",
    "summary": "Class CraftingUI Implements IWindowEntityUI Namespace: AngeliA.Platformer Assembly: com.angelia.platformer.dll Syntax public sealed class CraftingUI : InventoryPartnerUI, IWindowEntityUI Properties | Edit this page View Source FrameCode Declaration public SpriteCode FrameCode { get; set; } | Edit this page View Source ItemFieldSize Unified size of a single item field Declaration public override int ItemFieldSize { get; } Overrides PlayerMenuPartnerUI.ItemFieldSize Methods | Edit this page View Source DrawPanel(IRect) This function is called every frame for displaying this panel Declaration public override void DrawPanel(IRect panelRect) Parameters Type Name Description IRect panelRect Rect position for the range of this panel in global space Overrides InventoryPartnerUI.DrawPanel(IRect) | Edit this page View Source EnablePanel() This function is called when the panel start to display Declaration public override void EnablePanel() Overrides PlayerMenuPartnerUI.EnablePanel() | Edit this page View Source SetColumnAndRow(int, int) Declaration public void SetColumnAndRow(int newColumn, int newRow) Implements IWindowEntityUI Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.Platformer.DollItem.html": {
    "href": "api/AngeliA.Platformer.DollItem.html",
    "title": "Class DollItem | AngeliA",
    "summary": "Class DollItem Implements IMapItem Namespace: AngeliA.Platformer Assembly: com.angelia.platformer.dll Syntax public abstract class DollItem : Item, IMapItem Properties | Edit this page View Source DollSize Declaration public abstract int DollSize { get; } | Edit this page View Source MaxStackCount Count limitation for multiple items inside one inventory slot Declaration public override int MaxStackCount { get; } Overrides Item.MaxStackCount Methods | Edit this page View Source OnPoseAnimationUpdate_FromInventory(PoseCharacterRenderer, int, int) This function is called every frame when pose-style character update after rendering is ready Declaration public override void OnPoseAnimationUpdate_FromInventory(PoseCharacterRenderer rendering, int inventoryID, int itemIndex) Parameters Type Name Description PoseCharacterRenderer rendering The inventory holder int inventoryID ID of the inventory Overrides Item.OnPoseAnimationUpdate_FromInventory(PoseCharacterRenderer, int, int) Implements IMapItem Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.Platformer.DonutBlock.BreakMode.html": {
    "href": "api/AngeliA.Platformer.DonutBlock.BreakMode.html",
    "title": "Enum DonutBlock.BreakMode | AngeliA",
    "summary": "Enum DonutBlock.BreakMode Namespace: AngeliA.Platformer Assembly: com.angelia.platformer.dll Syntax protected enum DonutBlock.BreakMode Fields Name Description BreakOnFall BreakOnTouchGround DoNotBreak Extension Methods Extension.Next<DonutBlock.BreakMode>(DonutBlock.BreakMode) Extension.Prev<DonutBlock.BreakMode>(DonutBlock.BreakMode) Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.Platformer.DonutBlock.html": {
    "href": "api/AngeliA.Platformer.DonutBlock.html",
    "title": "Class DonutBlock | AngeliA",
    "summary": "Class DonutBlock Implements IMapItem IBlockEntity Namespace: AngeliA.Platformer Assembly: com.angelia.platformer.dll Syntax [Entity.Layer(3)] public abstract class DonutBlock : Entity, IMapItem, IBlockEntity Properties | Edit this page View Source BreakCondition Declaration protected virtual DonutBlock.BreakMode BreakCondition { get; } | Edit this page View Source FallingVelocity Declaration protected virtual int FallingVelocity { get; } | Edit this page View Source HoldDuration Declaration protected virtual int HoldDuration { get; } | Edit this page View Source HoldStartFrame Declaration protected int HoldStartFrame { get; } | Edit this page View Source IsFalling Declaration protected bool IsFalling { get; } | Edit this page View Source IsHolding Declaration protected bool IsHolding { get; } Methods | Edit this page View Source Break() Declaration protected virtual void Break() | Edit this page View Source FirstUpdate() [1/4] This function is called every frame when entity is in stage. Prioritize using this function to fill collider in to physics system. Declaration public override void FirstUpdate() Overrides Entity.FirstUpdate() | Edit this page View Source LateUpdate() [4/4] This function is called every frame when entity is in stage. Prioritize using this function to render the entity. Declaration public override void LateUpdate() Overrides Entity.LateUpdate() | Edit this page View Source OnActivated() This function is called when entity enter the stage Declaration public override void OnActivated() Overrides Entity.OnActivated() | Edit this page View Source Update() [3/4] This function is called every frame when entity is in stage. Prioritize using this function to update physics logic. Declaration public override void Update() Overrides Entity.Update() Implements IMapItem IBlockEntity Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.Platformer.Door.html": {
    "href": "api/AngeliA.Platformer.Door.html",
    "title": "Class Door | AngeliA",
    "summary": "Class Door Implements IMapItem IBlockEntity Namespace: AngeliA.Platformer Assembly: com.angelia.platformer.dll Syntax [Entity.Layer(3)] [Entity.MapEditorGroup(\"Teleport\", 0)] public abstract class Door : Entity, IMapItem, IBlockEntity Properties | Edit this page View Source IsFrontDoor Declaration public abstract bool IsFrontDoor { get; } | Edit this page View Source KeyItemID Declaration public virtual int KeyItemID { get; } | Edit this page View Source UnlockedDoorID Declaration public virtual int UnlockedDoorID { get; } Methods | Edit this page View Source AllowInvoke(Entity) Declaration public virtual bool AllowInvoke(Entity target) | Edit this page View Source BeforeUpdate() [2/4] This function is called every frame when entity is in stage. Prioritize using this function to update physics logic. Declaration public override void BeforeUpdate() Overrides Entity.BeforeUpdate() | Edit this page View Source FirstUpdate() [1/4] This function is called every frame when entity is in stage. Prioritize using this function to fill collider in to physics system. Declaration public override void FirstUpdate() Overrides Entity.FirstUpdate() | Edit this page View Source Invoke(Character) Declaration public virtual bool Invoke(Character character) | Edit this page View Source LateUpdate() [4/4] This function is called every frame when entity is in stage. Prioritize using this function to render the entity. Declaration public override void LateUpdate() Overrides Entity.LateUpdate() | Edit this page View Source OnActivated() This function is called when entity enter the stage Declaration public override void OnActivated() Overrides Entity.OnActivated() Implements IMapItem IBlockEntity Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.Platformer.EmptyMovableBullet.html": {
    "href": "api/AngeliA.Platformer.EmptyMovableBullet.html",
    "title": "Class EmptyMovableBullet | AngeliA",
    "summary": "Class EmptyMovableBullet Implements IMapItem Namespace: AngeliA.Platformer Assembly: com.angelia.platformer.dll Syntax public sealed class EmptyMovableBullet : MovableBullet, IMapItem Implements IMapItem Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.Platformer.Enemy.html": {
    "href": "api/AngeliA.Platformer.Enemy.html",
    "title": "Class Enemy | AngeliA",
    "summary": "Class Enemy Implements IMapItem IDamageReceiver ICarrier IWithCharacterMovement IWithCharacterAttackness IWithCharacterHealth IWithCharacterBuff IWithCharacterRenderer Namespace: AngeliA.Platformer Assembly: com.angelia.platformer.dll Syntax [Entity.RepositionWhenInactive(true)] public abstract class Enemy : Character, IMapItem, IDamageReceiver, ICarrier, IWithCharacterMovement, IWithCharacterAttackness, IWithCharacterHealth, IWithCharacterBuff, IWithCharacterRenderer Properties | Edit this page View Source AttackTargetTeam Target team for dealing damage to other Declaration public override int AttackTargetTeam { get; } Overrides Character.AttackTargetTeam | Edit this page View Source DamageOnTouch Declaration protected virtual bool DamageOnTouch { get; } | Edit this page View Source Team Target team for taking damage from other Declaration public override int Team { get; } Overrides Character.Team Methods | Edit this page View Source BeforeUpdate() [2/4] This function is called every frame when entity is in stage. Prioritize using this function to update physics logic. Declaration public override void BeforeUpdate() Overrides Character.BeforeUpdate() | Edit this page View Source FirstUpdate() [1/4] This function is called every frame when entity is in stage. Prioritize using this function to fill collider in to physics system. Declaration public override void FirstUpdate() Overrides Character.FirstUpdate() | Edit this page View Source OnActivated() This function is called when entity enter the stage Declaration public override void OnActivated() Overrides Character.OnActivated() | Edit this page View Source OnDamaged(Damage) This function is called when character take damage Declaration public override void OnDamaged(Damage damage) Overrides Character.OnDamaged(Damage) Implements IMapItem IDamageReceiver ICarrier IWithCharacterMovement IWithCharacterAttackness IWithCharacterHealth IWithCharacterBuff IWithCharacterRenderer Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.Platformer.Explosion.html": {
    "href": "api/AngeliA.Platformer.Explosion.html",
    "title": "Class Explosion | AngeliA",
    "summary": "Class Explosion Implements IMapItem Namespace: AngeliA.Platformer Assembly: com.angelia.platformer.dll Syntax [Entity.Layer(5)] public abstract class Explosion : Entity, IMapItem Properties | Edit this page View Source BreakObjectArtwork Declaration public int BreakObjectArtwork { get; set; } | Edit this page View Source CollisionMask Declaration protected virtual int CollisionMask { get; } | Edit this page View Source Damage Declaration protected virtual int Damage { get; } | Edit this page View Source DestroyBlocks Declaration protected virtual bool DestroyBlocks { get; } | Edit this page View Source Duration Declaration protected virtual int Duration { get; } | Edit this page View Source ExplodedFrame Declaration protected int ExplodedFrame { get; } | Edit this page View Source FireColor Declaration protected virtual Color32 FireColor { get; } | Edit this page View Source Radius Declaration protected virtual int Radius { get; } | Edit this page View Source RingColor Declaration protected virtual Color32 RingColor { get; } | Edit this page View Source Sender Declaration public Entity Sender { get; set; } | Edit this page View Source WaveColor Declaration protected virtual Color32 WaveColor { get; } Methods | Edit this page View Source BeforeUpdate() [2/4] This function is called every frame when entity is in stage. Prioritize using this function to update physics logic. Declaration public override void BeforeUpdate() Overrides Entity.BeforeUpdate() | Edit this page View Source OnActivated() This function is called when entity enter the stage Declaration public override void OnActivated() Overrides Entity.OnActivated() | Edit this page View Source OnExplode(IRect) Declaration protected abstract void OnExplode(IRect range) | Edit this page View Source Update() [3/4] This function is called every frame when entity is in stage. Prioritize using this function to update physics logic. Declaration public override void Update() Overrides Entity.Update() Implements IMapItem Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.Platformer.ExplosiveMovableBullet.html": {
    "href": "api/AngeliA.Platformer.ExplosiveMovableBullet.html",
    "title": "Class ExplosiveMovableBullet | AngeliA",
    "summary": "Class ExplosiveMovableBullet Implements IMapItem Namespace: AngeliA.Platformer Assembly: com.angelia.platformer.dll Syntax public abstract class ExplosiveMovableBullet : MovableBullet, IMapItem Properties | Edit this page View Source Duration How long can this bullet exists on stage in frame Declaration public override int Duration { get; } Overrides MovableBullet.Duration | Edit this page View Source ExplosionDuration Declaration protected virtual int ExplosionDuration { get; } | Edit this page View Source ExplosionID Declaration protected abstract int ExplosionID { get; } | Edit this page View Source Radius Declaration protected virtual int Radius { get; } Methods | Edit this page View Source BeforeDespawn(IDamageReceiver) This function is called before the bullet get despawn by performing damage logic Declaration protected override void BeforeDespawn(IDamageReceiver receiver) Parameters Type Name Description IDamageReceiver receiver The target it hits Overrides MovableBullet.BeforeDespawn(IDamageReceiver) | Edit this page View Source OnActivated() This function is called when entity enter the stage Declaration public override void OnActivated() Overrides MovableBullet.OnActivated() Implements IMapItem Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.Platformer.Fire.html": {
    "href": "api/AngeliA.Platformer.Fire.html",
    "title": "Class Fire | AngeliA",
    "summary": "Class Fire Implements IMapItem IFire Namespace: AngeliA.Platformer Assembly: com.angelia.platformer.dll Syntax [Entity.RepositionWhenInactive(true)] public abstract class Fire : Entity, IMapItem, IFire Properties | Edit this page View Source DamageCooldown Declaration protected virtual int DamageCooldown { get; } | Edit this page View Source DefaultDirection Declaration protected virtual Direction4 DefaultDirection { get; } | Edit this page View Source Direction Declaration public Direction4 Direction { get; set; } | Edit this page View Source IlluminateAmount Declaration protected virtual int IlluminateAmount { get; } | Edit this page View Source IlluminateUnitRadius Declaration protected virtual int IlluminateUnitRadius { get; } | Edit this page View Source PowerAmount Declaration protected virtual int PowerAmount { get; } | Edit this page View Source SpreadDuration Declaration protected virtual int SpreadDuration { get; } | Edit this page View Source SpreadRange Declaration protected virtual int SpreadRange { get; } | Edit this page View Source UseAdditiveShader Declaration protected virtual bool UseAdditiveShader { get; } | Edit this page View Source WeakenDuration Declaration protected virtual int WeakenDuration { get; } Methods | Edit this page View Source BeforeUpdate() [2/4] This function is called every frame when entity is in stage. Prioritize using this function to update physics logic. Declaration public override void BeforeUpdate() Overrides Entity.BeforeUpdate() | Edit this page View Source FirstUpdate() [1/4] This function is called every frame when entity is in stage. Prioritize using this function to fill collider in to physics system. Declaration public override void FirstUpdate() Overrides Entity.FirstUpdate() | Edit this page View Source LateUpdate() [4/4] This function is called every frame when entity is in stage. Prioritize using this function to render the entity. Declaration public override void LateUpdate() Overrides Entity.LateUpdate() | Edit this page View Source OnActivated() This function is called when entity enter the stage Declaration public override void OnActivated() Overrides Entity.OnActivated() | Edit this page View Source OnInactivated() This function is called when entity leave the stage Declaration public override void OnInactivated() Overrides Entity.OnInactivated() | Edit this page View Source Putout(bool) Putout this fire Declaration public void Putout(bool manually) Parameters Type Name Description bool manually True if the fire got putout by something else | Edit this page View Source Setup(ICombustible) Set fire onto a target Declaration public void Setup(ICombustible com) | Edit this page View Source Setup(int, Direction4, int, int, bool) Declaration public void Setup(int burnDuration, Direction4 direction, int width = 256, int height = 256, bool damageImmediately = false) | Edit this page View Source Spread() Declaration public void Spread() | Edit this page View Source Update() [3/4] This function is called every frame when entity is in stage. Prioritize using this function to update physics logic. Declaration public override void Update() Overrides Entity.Update() Events | Edit this page View Source OnFirePutout Declaration public static event Action<int, IRect> OnFirePutout Implements IMapItem IFire Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.Platformer.FireSprinkler.html": {
    "href": "api/AngeliA.Platformer.FireSprinkler.html",
    "title": "Class FireSprinkler | AngeliA",
    "summary": "Class FireSprinkler Implements IMapItem IBlockEntity ICircuitOperator Namespace: AngeliA.Platformer Assembly: com.angelia.platformer.dll Syntax public abstract class FireSprinkler : Furniture, IMapItem, IBlockEntity, ICircuitOperator Properties | Edit this page View Source AlarmLightSpriteCode Declaration protected virtual int AlarmLightSpriteCode { get; } | Edit this page View Source CheckFrequency Declaration protected virtual int CheckFrequency { get; } | Edit this page View Source DetectionRadius Declaration protected virtual int DetectionRadius { get; } | Edit this page View Source RespondDelay Declaration protected virtual int RespondDelay { get; } | Edit this page View Source SprinklingDuration Declaration protected virtual int SprinklingDuration { get; } | Edit this page View Source SprinklingRange Declaration protected virtual int SprinklingRange { get; } | Edit this page View Source SprinklingWaterSpriteCount Declaration protected virtual int SprinklingWaterSpriteCount { get; } | Edit this page View Source SprinklingWaterSpriteGroupCode Declaration protected virtual int SprinklingWaterSpriteGroupCode { get; } Methods | Edit this page View Source LateUpdate() [4/4] This function is called every frame when entity is in stage. Prioritize using this function to render the entity. Declaration public override void LateUpdate() Overrides Furniture.LateUpdate() | Edit this page View Source OnActivated() This function is called when entity enter the stage Declaration public override void OnActivated() Overrides Furniture.OnActivated() | Edit this page View Source Update() [3/4] This function is called every frame when entity is in stage. Prioritize using this function to update physics logic. Declaration public override void Update() Overrides Entity.Update() Implements IMapItem IBlockEntity ICircuitOperator Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.Platformer.FloatingCombatText.html": {
    "href": "api/AngeliA.Platformer.FloatingCombatText.html",
    "title": "Class FloatingCombatText | AngeliA",
    "summary": "Class FloatingCombatText Implements IMapItem Namespace: AngeliA.Platformer Assembly: com.angelia.platformer.dll Syntax [Entity.Capacity(128, 0)] [Entity.Layer(0)] public class FloatingCombatText : Entity, IMapItem Fields | Edit this page View Source BackgroundColor Declaration public Color32 BackgroundColor | Edit this page View Source Duration Declaration public int Duration | Edit this page View Source FloatAirDrag Declaration public int FloatAirDrag | Edit this page View Source FloatSpeed Declaration public int FloatSpeed | Edit this page View Source FontID Declaration public int FontID | Edit this page View Source GlobalHeight Declaration public int GlobalHeight | Edit this page View Source Style Declaration public GUIStyle Style | Edit this page View Source TYPE_ID Declaration public static readonly int TYPE_ID | Edit this page View Source TextColor Declaration public Color32 TextColor Methods | Edit this page View Source BeforeUpdate() [2/4] This function is called every frame when entity is in stage. Prioritize using this function to update physics logic. Declaration public override void BeforeUpdate() Overrides Entity.BeforeUpdate() | Edit this page View Source LateUpdate() [4/4] This function is called every frame when entity is in stage. Prioritize using this function to render the entity. Declaration public override void LateUpdate() Overrides Entity.LateUpdate() | Edit this page View Source OnActivated() This function is called when entity enter the stage Declaration public override void OnActivated() Overrides Entity.OnActivated() | Edit this page View Source Spawn(int, int, char[], int, Color32?, Color32?, GUIStyle) Declaration public static FloatingCombatText Spawn(int x, int y, char[] chars, int fontID = 0, Color32? color = null, Color32? backgroundColor = null, GUIStyle style = null) | Edit this page View Source Spawn(int, int, string, int, Color32?, Color32?, GUIStyle) Declaration public static FloatingCombatText Spawn(int x, int y, string text, int fontID = 0, Color32? color = null, Color32? backgroundColor = null, GUIStyle style = null) Implements IMapItem Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.Platformer.FrozenZone.html": {
    "href": "api/AngeliA.Platformer.FrozenZone.html",
    "title": "Class FrozenZone | AngeliA",
    "summary": "Class FrozenZone Implements IMapItem Namespace: AngeliA.Platformer Assembly: com.angelia.platformer.dll Syntax public abstract class FrozenZone : Entity, IMapItem Properties | Edit this page View Source Duration Declaration public int Duration { get; set; } | Edit this page View Source Fullscreen Declaration public bool Fullscreen { get; set; } Methods | Edit this page View Source BeforeUpdate() [2/4] This function is called every frame when entity is in stage. Prioritize using this function to update physics logic. Declaration public override void BeforeUpdate() Overrides Entity.BeforeUpdate() | Edit this page View Source FirstUpdate() [1/4] This function is called every frame when entity is in stage. Prioritize using this function to fill collider in to physics system. Declaration public override void FirstUpdate() Overrides Entity.FirstUpdate() | Edit this page View Source LateUpdate() [4/4] This function is called every frame when entity is in stage. Prioritize using this function to render the entity. Declaration public override void LateUpdate() Overrides Entity.LateUpdate() | Edit this page View Source OnActivated() This function is called when entity enter the stage Declaration public override void OnActivated() Overrides Entity.OnActivated() | Edit this page View Source OnTouchingZone(Rigidbody) Declaration protected virtual void OnTouchingZone(Rigidbody rig) | Edit this page View Source SpreadFrozenZone(int, IRect, int) Declaration public static void SpreadFrozenZone(int zoneID, IRect range, int duration = 300) Implements IMapItem Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.Platformer.Furniture.html": {
    "href": "api/AngeliA.Platformer.Furniture.html",
    "title": "Class Furniture | AngeliA",
    "summary": "Class Furniture Implements IMapItem IBlockEntity Namespace: AngeliA.Platformer Assembly: com.angelia.platformer.dll Syntax [Entity.MapEditorGroup(\"Furniture\", 0)] [Entity.Layer(3)] public abstract class Furniture : Entity, IMapItem, IBlockEntity Fields | Edit this page View Source ColliderBorder Declaration protected Int4 ColliderBorder Properties | Edit this page View Source FurnitureLeftOrDown Declaration public Furniture FurnitureLeftOrDown { get; } | Edit this page View Source FurnitureRightOrUp Declaration public Furniture FurnitureRightOrUp { get; } | Edit this page View Source ModuleType Declaration protected virtual Direction3 ModuleType { get; } | Edit this page View Source Pose Declaration protected FittingPose Pose { get; } Methods | Edit this page View Source BeforeUpdate() [2/4] This function is called every frame when entity is in stage. Prioritize using this function to update physics logic. Declaration public override void BeforeUpdate() Overrides Entity.BeforeUpdate() | Edit this page View Source FirstUpdate() [1/4] This function is called every frame when entity is in stage. Prioritize using this function to fill collider in to physics system. Declaration public override void FirstUpdate() Overrides Entity.FirstUpdate() | Edit this page View Source GetIsHighlighted() Declaration protected bool GetIsHighlighted() | Edit this page View Source GetSpriteFromPose() Declaration protected AngeSprite GetSpriteFromPose() | Edit this page View Source LateUpdate() [4/4] This function is called every frame when entity is in stage. Prioritize using this function to render the entity. Declaration public override void LateUpdate() Overrides Entity.LateUpdate() | Edit this page View Source OnActivated() This function is called when entity enter the stage Declaration public override void OnActivated() Overrides Entity.OnActivated() Implements IMapItem IBlockEntity Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.Platformer.GlitchScope.html": {
    "href": "api/AngeliA.Platformer.GlitchScope.html",
    "title": "Struct GlitchScope | AngeliA",
    "summary": "Struct GlitchScope Implements IDisposable Namespace: AngeliA.Platformer Assembly: com.angelia.platformer.dll Syntax public readonly struct GlitchScope : IDisposable Constructors | Edit this page View Source GlitchScope(int, int, int) Declaration public GlitchScope(int speedAmount = 1000, int shiftAmount = 1000, int scaleAmount = 1000) Methods | Edit this page View Source Dispose() Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources. Declaration public void Dispose() Implements IDisposable Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.Platformer.Gloves-2.html": {
    "href": "api/AngeliA.Platformer.Gloves-2.html",
    "title": "Class Gloves<P, N> | AngeliA",
    "summary": "Class Gloves<P, N> Implements IMapItem IProgressiveItem Namespace: AngeliA.Platformer Assembly: com.angelia.platformer.dll Syntax public abstract class Gloves<P, N> : Armor<P, N>, IMapItem, IProgressiveItem where P : Equipment where N : Equipment Type Parameters Name Description P N Constructors | Edit this page View Source Gloves() Declaration public Gloves() Properties | Edit this page View Source EquipmentType Which type is this quipment Declaration public override sealed EquipmentType EquipmentType { get; } Overrides Equipment.EquipmentType Methods | Edit this page View Source DrawArmor(PoseCharacterRenderer) Declaration protected override void DrawArmor(PoseCharacterRenderer renderer) Overrides Armor<P, N>.DrawArmor(PoseCharacterRenderer) Implements IMapItem IProgressiveItem Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.Platformer.GrandfatherClock.html": {
    "href": "api/AngeliA.Platformer.GrandfatherClock.html",
    "title": "Class GrandfatherClock | AngeliA",
    "summary": "Class GrandfatherClock Implements IMapItem IBlockEntity ICombustible Namespace: AngeliA.Platformer Assembly: com.angelia.platformer.dll Syntax public abstract class GrandfatherClock : Furniture, IMapItem, IBlockEntity, ICombustible Properties | Edit this page View Source ModuleType Declaration protected override Direction3 ModuleType { get; } Overrides Furniture.ModuleType Methods | Edit this page View Source LateUpdate() [4/4] This function is called every frame when entity is in stage. Prioritize using this function to render the entity. Declaration public override void LateUpdate() Overrides Furniture.LateUpdate() Implements IMapItem IBlockEntity ICombustible Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.Platformer.HealBullet.html": {
    "href": "api/AngeliA.Platformer.HealBullet.html",
    "title": "Class HealBullet | AngeliA",
    "summary": "Class HealBullet Implements IMapItem Namespace: AngeliA.Platformer Assembly: com.angelia.platformer.dll Syntax public abstract class HealBullet : Bullet, IMapItem Properties | Edit this page View Source Lerp Declaration protected virtual int Lerp { get; } Methods | Edit this page View Source BeforeUpdate() [2/4] This function is called every frame when entity is in stage. Prioritize using this function to update physics logic. Declaration public override void BeforeUpdate() Overrides Bullet.BeforeUpdate() | Edit this page View Source LateUpdate() [4/4] This function is called every frame when entity is in stage. Prioritize using this function to render the entity. Declaration public override void LateUpdate() Overrides Entity.LateUpdate() | Edit this page View Source OnActivated() This function is called when entity enter the stage Declaration public override void OnActivated() Overrides Bullet.OnActivated() Implements IMapItem Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.Platformer.HealWeapon-1.html": {
    "href": "api/AngeliA.Platformer.HealWeapon-1.html",
    "title": "Class HealWeapon<B> | AngeliA",
    "summary": "Class HealWeapon<B> Implements IMapItem Namespace: AngeliA.Platformer Assembly: com.angelia.platformer.dll Syntax public abstract class HealWeapon<B> : Weapon<B>, IMapItem where B : HealBullet Type Parameters Name Description B Properties | Edit this page View Source AllowManuallyAttack Declaration protected virtual bool AllowManuallyAttack { get; } | Edit this page View Source AutoAttackFrequency Declaration protected virtual int AutoAttackFrequency { get; } Methods | Edit this page View Source BeforeItemUpdate_FromEquipment(Character) This function is called every frame when the holder is equipping this item Declaration public override void BeforeItemUpdate_FromEquipment(Character holder) Overrides Item.BeforeItemUpdate_FromEquipment(Character) | Edit this page View Source SpawnBullet(Character) Spawn the bullet entity Declaration public override Bullet SpawnBullet(Character sender) Parameters Type Name Description Character sender Character that use the weapon Returns Type Description Bullet Instance of the spawned bullet entity. Return null when invalid Overrides Weapon.SpawnBullet(Character) Implements IMapItem Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.Platformer.Helmet-2.html": {
    "href": "api/AngeliA.Platformer.Helmet-2.html",
    "title": "Class Helmet<P, N> | AngeliA",
    "summary": "Class Helmet<P, N> Implements IMapItem IProgressiveItem Namespace: AngeliA.Platformer Assembly: com.angelia.platformer.dll Syntax public abstract class Helmet<P, N> : Armor<P, N>, IMapItem, IProgressiveItem where P : Equipment where N : Equipment Type Parameters Name Description P N Constructors | Edit this page View Source Helmet() Declaration public Helmet() Properties | Edit this page View Source EquipmentType Which type is this quipment Declaration public override sealed EquipmentType EquipmentType { get; } Overrides Equipment.EquipmentType | Edit this page View Source WearingMode Declaration protected abstract HelmetWearingMode WearingMode { get; } Methods | Edit this page View Source DrawArmor(PoseCharacterRenderer) Declaration protected override void DrawArmor(PoseCharacterRenderer renderer) Overrides Armor<P, N>.DrawArmor(PoseCharacterRenderer) Implements IMapItem IProgressiveItem Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.Platformer.HelmetWearingMode.html": {
    "href": "api/AngeliA.Platformer.HelmetWearingMode.html",
    "title": "Enum HelmetWearingMode | AngeliA",
    "summary": "Enum HelmetWearingMode Namespace: AngeliA.Platformer Assembly: com.angelia.platformer.dll Syntax public enum HelmetWearingMode Fields Name Description Attach Cover Extension Methods Extension.Next<HelmetWearingMode>(HelmetWearingMode) Extension.Prev<HelmetWearingMode>(HelmetWearingMode) Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.Platformer.IAutoTrackWalker.html": {
    "href": "api/AngeliA.Platformer.IAutoTrackWalker.html",
    "title": "Interface IAutoTrackWalker | AngeliA",
    "summary": "Interface IAutoTrackWalker Namespace: AngeliA.Platformer Assembly: com.angelia.platformer.dll Syntax public interface IAutoTrackWalker : IRouteWalker Properties | Edit this page View Source LastWalkingFrame Declaration int LastWalkingFrame { get; set; } | Edit this page View Source OnTrack Declaration bool OnTrack { get; } | Edit this page View Source TrackWalkSpeedRate Declaration int TrackWalkSpeedRate { get; } | Edit this page View Source WalkStartFrame Declaration int WalkStartFrame { get; set; } Methods | Edit this page View Source IsTypeAutoTrackWalker(int) Declaration public static bool IsTypeAutoTrackWalker(int id) Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.Platformer.IPingPongWalker.html": {
    "href": "api/AngeliA.Platformer.IPingPongWalker.html",
    "title": "Interface IPingPongWalker | AngeliA",
    "summary": "Interface IPingPongWalker Namespace: AngeliA.Platformer Assembly: com.angelia.platformer.dll Syntax public interface IPingPongWalker Properties | Edit this page View Source LastTurnFrame Declaration int LastTurnFrame { get; set; } | Edit this page View Source OnlyWalkWhenGrounded Declaration bool OnlyWalkWhenGrounded { get; } | Edit this page View Source TurningCheckMask Declaration int TurningCheckMask { get; } | Edit this page View Source TurningCooldown Declaration int TurningCooldown { get; } | Edit this page View Source WalkOffEdge Declaration bool WalkOffEdge { get; } | Edit this page View Source WalkSpeed Declaration int WalkSpeed { get; } | Edit this page View Source WalkingRight Declaration bool WalkingRight { get; set; } Methods | Edit this page View Source OnActive(IPingPongWalker) Declaration public static void OnActive(IPingPongWalker walker) | Edit this page View Source PingPongWalk(IPingPongWalker) Declaration public static void PingPongWalk(IPingPongWalker walker) Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.Platformer.IRider.html": {
    "href": "api/AngeliA.Platformer.IRider.html",
    "title": "Interface IRider | AngeliA",
    "summary": "Interface IRider Namespace: AngeliA.Platformer Assembly: com.angelia.platformer.dll Syntax public interface IRider Properties | Edit this page View Source ReadyToRide Declaration bool ReadyToRide { get; } Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.Platformer.IUnitable.UniteMode.html": {
    "href": "api/AngeliA.Platformer.IUnitable.UniteMode.html",
    "title": "Enum IUnitable.UniteMode | AngeliA",
    "summary": "Enum IUnitable.UniteMode Namespace: AngeliA.Platformer Assembly: com.angelia.platformer.dll Syntax public enum IUnitable.UniteMode Fields Name Description EightDirection FourDirection Horizontal Vertical Extension Methods Extension.Next<IUnitable.UniteMode>(IUnitable.UniteMode) Extension.Prev<IUnitable.UniteMode>(IUnitable.UniteMode) Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.Platformer.IUnitable.html": {
    "href": "api/AngeliA.Platformer.IUnitable.html",
    "title": "Interface IUnitable | AngeliA",
    "summary": "Interface IUnitable Namespace: AngeliA.Platformer Assembly: com.angelia.platformer.dll Syntax public interface IUnitable Fields | Edit this page View Source GlobalUniteStamp Declaration public static int GlobalUniteStamp | Edit this page View Source UnitedPositions Declaration public static readonly Pipe<Int2> UnitedPositions Properties | Edit this page View Source LocalUniteStamp Declaration int LocalUniteStamp { get; set; } | Edit this page View Source UniteTempParam Declaration public static object UniteTempParam { get; } Methods | Edit this page View Source ForAllUnitedEntity<E>(int, int, IRect, OperationMode, UniteMode, Action<E>, object) Declaration public static void ForAllUnitedEntity<E>(int physicsMask, int entityID, IRect rect, OperationMode mode, IUnitable.UniteMode partialMode, Action<E> results, object param = null) where E : IUnitable Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.Platformer.InventoryFurniture-1.html": {
    "href": "api/AngeliA.Platformer.InventoryFurniture-1.html",
    "title": "Class InventoryFurniture<UI> | AngeliA",
    "summary": "Class InventoryFurniture<UI> Implements IMapItem IBlockEntity IActionTarget Namespace: AngeliA.Platformer Assembly: com.angelia.platformer.dll Syntax public abstract class InventoryFurniture<UI> : InventoryFurniture, IMapItem, IBlockEntity, IActionTarget where UI : InventoryPartnerUI Type Parameters Name Description UI Constructors | Edit this page View Source InventoryFurniture() Declaration public InventoryFurniture() Implements IMapItem IBlockEntity IActionTarget Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.Platformer.InventoryFurniture.html": {
    "href": "api/AngeliA.Platformer.InventoryFurniture.html",
    "title": "Class InventoryFurniture | AngeliA",
    "summary": "Class InventoryFurniture Implements IMapItem IBlockEntity IActionTarget Namespace: AngeliA.Platformer Assembly: com.angelia.platformer.dll Syntax public abstract class InventoryFurniture : OpenableFurniture, IMapItem, IBlockEntity, IActionTarget Constructors | Edit this page View Source InventoryFurniture() Declaration public InventoryFurniture() Properties | Edit this page View Source InventoryColumn Declaration protected abstract int InventoryColumn { get; } | Edit this page View Source InventoryID Declaration protected int InventoryID { get; } | Edit this page View Source InventoryRow Declaration protected abstract int InventoryRow { get; } | Edit this page View Source PartnerID Declaration protected int PartnerID { get; init; } | Edit this page View Source UnlockItemInside Declaration protected virtual bool UnlockItemInside { get; } Methods | Edit this page View Source AllowInvoke() True if the entity can be invoke at current frame Declaration public override bool AllowInvoke() Overrides ActionFurniture.AllowInvoke() | Edit this page View Source Invoke() Invoke the logic provided by this entity. Declaration public override bool Invoke() Returns Type Description bool True if the logic performs successfuly Overrides OpenableFurniture.Invoke() | Edit this page View Source IsInventoryFurniture(int, out int) Declaration public static bool IsInventoryFurniture(int typeID, out int capacity) | Edit this page View Source LateUpdate() [4/4] This function is called every frame when entity is in stage. Prioritize using this function to render the entity. Declaration public override void LateUpdate() Overrides OpenableFurniture.LateUpdate() | Edit this page View Source OnActivated() This function is called when entity enter the stage Declaration public override void OnActivated() Overrides OpenableFurniture.OnActivated() | Edit this page View Source SetOpen(bool) Declaration protected override void SetOpen(bool open) Overrides OpenableFurniture.SetOpen(bool) | Edit this page View Source TryGetInventoryUI(int, out InventoryPartnerUI) Declaration protected bool TryGetInventoryUI(int typeID, out InventoryPartnerUI result) Implements IMapItem IBlockEntity IActionTarget Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.Platformer.ItemBasedSummon.html": {
    "href": "api/AngeliA.Platformer.ItemBasedSummon.html",
    "title": "Class ItemBasedSummon | AngeliA",
    "summary": "Class ItemBasedSummon Implements IMapItem ICarrier IWithCharacterMovement IWithCharacterAttackness IWithCharacterHealth IWithCharacterBuff IWithCharacterRenderer IDamageReceiver IActionTarget Namespace: AngeliA.Platformer Assembly: com.angelia.platformer.dll Syntax public abstract class ItemBasedSummon : Summon, IMapItem, ICarrier, IWithCharacterMovement, IWithCharacterAttackness, IWithCharacterHealth, IWithCharacterBuff, IWithCharacterRenderer, IDamageReceiver, IActionTarget Properties | Edit this page View Source OriginItemID Declaration public int OriginItemID { get; set; } Methods | Edit this page View Source OnActivated() This function is called when entity enter the stage Declaration public override void OnActivated() Overrides Summon.OnActivated() | Edit this page View Source Update() [3/4] This function is called every frame when entity is in stage. Prioritize using this function to update physics logic. Declaration public override void Update() Overrides Summon.Update() Implements IMapItem ICarrier IWithCharacterMovement IWithCharacterAttackness IWithCharacterHealth IWithCharacterBuff IWithCharacterRenderer IDamageReceiver IActionTarget Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.Platformer.Launcher.html": {
    "href": "api/AngeliA.Platformer.Launcher.html",
    "title": "Class Launcher | AngeliA",
    "summary": "Class Launcher Implements IMapItem IBlockEntity Namespace: AngeliA.Platformer Assembly: com.angelia.platformer.dll Syntax [Entity.Layer(3)] [Entity.MapEditorGroup(\"Contraption\", 0)] public abstract class Launcher : Entity, IMapItem, IBlockEntity Properties | Edit this page View Source AllowingAutoLaunch Declaration public virtual bool AllowingAutoLaunch { get; } | Edit this page View Source CurrentLaunchedCount Declaration public int CurrentLaunchedCount { get; } | Edit this page View Source FailbackEntityID Declaration public virtual int FailbackEntityID { get; } | Edit this page View Source ItemCountPreLaunch Declaration public virtual int ItemCountPreLaunch { get; } | Edit this page View Source KeepLaunchedEntityInMap Declaration public virtual bool KeepLaunchedEntityInMap { get; } | Edit this page View Source LastLaunchedFrame Declaration public int LastLaunchedFrame { get; set; } | Edit this page View Source LaunchFrequency Declaration public virtual int LaunchFrequency { get; } | Edit this page View Source LaunchOffset Declaration public virtual Int2 LaunchOffset { get; } | Edit this page View Source LaunchOverlapingElement Declaration public virtual bool LaunchOverlapingElement { get; } | Edit this page View Source LaunchTowardsPlayer Declaration public virtual bool LaunchTowardsPlayer { get; } | Edit this page View Source LaunchVelocity Declaration public virtual Int2 LaunchVelocity { get; } | Edit this page View Source LaunchWhenEntranceBlocked Declaration public virtual bool LaunchWhenEntranceBlocked { get; } | Edit this page View Source MaxLaunchCount Declaration public virtual int MaxLaunchCount { get; } | Edit this page View Source TargetEntityID Declaration public virtual int TargetEntityID { get; } | Edit this page View Source UseMomentum Declaration public virtual bool UseMomentum { get; } Methods | Edit this page View Source FirstUpdate() [1/4] This function is called every frame when entity is in stage. Prioritize using this function to fill collider in to physics system. Declaration public override void FirstUpdate() Overrides Entity.FirstUpdate() | Edit this page View Source LateUpdate() [4/4] This function is called every frame when entity is in stage. Prioritize using this function to render the entity. Declaration public override void LateUpdate() Overrides Entity.LateUpdate() | Edit this page View Source LaunchEntity() Declaration public Entity LaunchEntity() | Edit this page View Source LaunchToRightSide() Declaration public bool LaunchToRightSide() | Edit this page View Source OnActivated() This function is called when entity enter the stage Declaration public override void OnActivated() Overrides Entity.OnActivated() | Edit this page View Source OnEntityLaunched(Entity, int, int) Declaration protected virtual void OnEntityLaunched(Entity entity, int x, int y) | Edit this page View Source OnEntityRefresh() This function is called when there are map changes happens nearby and the entity needs to refresh itself Declaration public void OnEntityRefresh() | Edit this page View Source Update() [3/4] This function is called every frame when entity is in stage. Prioritize using this function to update physics logic. Declaration public override void Update() Overrides Entity.Update() | Edit this page View Source ValidForLaunch() Declaration public bool ValidForLaunch() Implements IMapItem IBlockEntity Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.Platformer.Leaf.html": {
    "href": "api/AngeliA.Platformer.Leaf.html",
    "title": "Class Leaf | AngeliA",
    "summary": "Class Leaf Implements IMapItem IBlockEntity ICombustible IDamageReceiver Namespace: AngeliA.Platformer Assembly: com.angelia.platformer.dll Syntax [Entity.MapEditorGroup(\"Vegetation\", 0)] [Entity.Layer(3)] public abstract class Leaf : Entity, IMapItem, IBlockEntity, ICombustible, IDamageReceiver Properties | Edit this page View Source LeafArtworkCode Declaration protected int LeafArtworkCode { get; } | Edit this page View Source LeafCount Declaration protected virtual int LeafCount { get; } | Edit this page View Source LeafExpand Declaration protected virtual int LeafExpand { get; } Methods | Edit this page View Source FirstUpdate() [1/4] This function is called every frame when entity is in stage. Prioritize using this function to fill collider in to physics system. Declaration public override void FirstUpdate() Overrides Entity.FirstUpdate() | Edit this page View Source GetLeafShiftY(int, int, int) Declaration protected int GetLeafShiftY(int frameOffset = 0, int duration = 60, int amount = 12) | Edit this page View Source LateUpdate() [4/4] This function is called every frame when entity is in stage. Prioritize using this function to render the entity. Declaration public override void LateUpdate() Overrides Entity.LateUpdate() | Edit this page View Source OnActivated() This function is called when entity enter the stage Declaration public override void OnActivated() Overrides Entity.OnActivated() | Edit this page View Source OnLeafBreak() Declaration protected virtual void OnLeafBreak() | Edit this page View Source Update() [3/4] This function is called every frame when entity is in stage. Prioritize using this function to update physics logic. Declaration public override void Update() Overrides Entity.Update() Implements IMapItem IBlockEntity ICombustible IDamageReceiver Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.Platformer.Light.html": {
    "href": "api/AngeliA.Platformer.Light.html",
    "title": "Class Light | AngeliA",
    "summary": "Class Light Implements IMapItem IBlockEntity Namespace: AngeliA.Platformer Assembly: com.angelia.platformer.dll Syntax public abstract class Light : Furniture, IMapItem, IBlockEntity Properties | Edit this page View Source IlluminateRange Declaration protected virtual int IlluminateRange { get; } | Edit this page View Source LightRange Declaration protected virtual int LightRange { get; } | Edit this page View Source LightSprite Declaration protected virtual SpriteCode LightSprite { get; } Methods | Edit this page View Source FirstUpdate() [1/4] This function is called every frame when entity is in stage. Prioritize using this function to fill collider in to physics system. Declaration public override void FirstUpdate() Overrides Furniture.FirstUpdate() | Edit this page View Source LateUpdate() [4/4] This function is called every frame when entity is in stage. Prioritize using this function to render the entity. Declaration public override void LateUpdate() Overrides Furniture.LateUpdate() | Edit this page View Source OnActivated() This function is called when entity enter the stage Declaration public override void OnActivated() Overrides Furniture.OnActivated() | Edit this page View Source Update() [3/4] This function is called every frame when entity is in stage. Prioritize using this function to update physics logic. Declaration public override void Update() Overrides Entity.Update() Implements IMapItem IBlockEntity Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.Platformer.Liquid.html": {
    "href": "api/AngeliA.Platformer.Liquid.html",
    "title": "Class Liquid | AngeliA",
    "summary": "Class Liquid Implements IMapItem Namespace: AngeliA.Platformer Assembly: com.angelia.platformer.dll Syntax [Entity.Layer(4)] public abstract class Liquid : Entity, IMapItem Properties | Edit this page View Source ArtworkID Declaration protected virtual int ArtworkID { get; } | Edit this page View Source ProduceID Declaration protected virtual int ProduceID { get; } | Edit this page View Source ReproduceFrequency Declaration protected virtual int ReproduceFrequency { get; } | Edit this page View Source ReproduceVolume Declaration protected virtual int ReproduceVolume { get; } | Edit this page View Source VanishSpeed Declaration protected virtual int VanishSpeed { get; } | Edit this page View Source Volume Declaration public int Volume { get; } Methods | Edit this page View Source BeforeUpdate() [2/4] This function is called every frame when entity is in stage. Prioritize using this function to update physics logic. Declaration public override void BeforeUpdate() Overrides Entity.BeforeUpdate() | Edit this page View Source FirstUpdate() [1/4] This function is called every frame when entity is in stage. Prioritize using this function to fill collider in to physics system. Declaration public override void FirstUpdate() Overrides Entity.FirstUpdate() | Edit this page View Source LateUpdate() [4/4] This function is called every frame when entity is in stage. Prioritize using this function to render the entity. Declaration public override void LateUpdate() Overrides Entity.LateUpdate() | Edit this page View Source OnActivated() This function is called when entity enter the stage Declaration public override void OnActivated() Overrides Entity.OnActivated() | Edit this page View Source RequireVanishCheck() Declaration protected virtual bool RequireVanishCheck() Implements IMapItem Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.Platformer.MapChest.html": {
    "href": "api/AngeliA.Platformer.MapChest.html",
    "title": "Class MapChest | AngeliA",
    "summary": "Class MapChest Implements IMapItem IActionTarget IBlockEntity Namespace: AngeliA.Platformer Assembly: com.angelia.platformer.dll Syntax public abstract class MapChest : Furniture, IMapItem, IActionTarget, IBlockEntity Fields | Edit this page View Source OpenedChest Declaration protected static readonly HashSet<Int3> OpenedChest Properties | Edit this page View Source ItemPlaceHolder Declaration protected virtual int ItemPlaceHolder { get; } Methods | Edit this page View Source ClearOpenedMarks(Mode) Declaration public static void ClearOpenedMarks(OnMapEditorModeChange_ModeAttribute.Mode mode) | Edit this page View Source ClearOpenedMarks_Restart() Declaration [OnGameRestart(0)] public static void ClearOpenedMarks_Restart() | Edit this page View Source IsChestOpened(MapChest) Declaration protected static bool IsChestOpened(MapChest chest) | Edit this page View Source LateUpdate() [4/4] This function is called every frame when entity is in stage. Prioritize using this function to render the entity. Declaration public override void LateUpdate() Overrides Furniture.LateUpdate() Implements IMapItem IActionTarget IBlockEntity Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.Platformer.MeleeBullet.html": {
    "href": "api/AngeliA.Platformer.MeleeBullet.html",
    "title": "Class MeleeBullet | AngeliA",
    "summary": "Class MeleeBullet Implements IMapItem Namespace: AngeliA.Platformer Assembly: com.angelia.platformer.dll Syntax public class MeleeBullet : Bullet, IMapItem Fields | Edit this page View Source TYPE_ID Declaration public static readonly int TYPE_ID Properties | Edit this page View Source Duration How long can this bullet exists on stage in frame Declaration public override int Duration { get; } Overrides Bullet.Duration | Edit this page View Source EnvironmentHitCount How many environment collider can this bullet hit without getting despawn Declaration protected override sealed int EnvironmentHitCount { get; } Overrides Bullet.EnvironmentHitCount | Edit this page View Source ReceiverHitCount How many target collider can this bullet hit without getting despawn Declaration protected override int ReceiverHitCount { get; } Overrides Bullet.ReceiverHitCount | Edit this page View Source SmokeParticleID Declaration public virtual int SmokeParticleID { get; } Methods | Edit this page View Source FollowSender() Declaration public void FollowSender() | Edit this page View Source Update() [3/4] This function is called every frame when entity is in stage. Prioritize using this function to update physics logic. Declaration public override void Update() Overrides Bullet.Update() Implements IMapItem Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.Platformer.MeleeWeapon.html": {
    "href": "api/AngeliA.Platformer.MeleeWeapon.html",
    "title": "Class MeleeWeapon | AngeliA",
    "summary": "Class MeleeWeapon Implements IMapItem Namespace: AngeliA.Platformer Assembly: com.angelia.platformer.dll Syntax public abstract class MeleeWeapon : Weapon<MeleeBullet>, IMapItem Properties | Edit this page View Source Damage Declaration public virtual int Damage { get; } | Edit this page View Source RangeXLeft Declaration public abstract int RangeXLeft { get; } | Edit this page View Source RangeXRight Declaration public abstract int RangeXRight { get; } | Edit this page View Source RangeY Declaration public abstract int RangeY { get; } Methods | Edit this page View Source SpawnBullet(Character) Spawn the bullet entity Declaration public override Bullet SpawnBullet(Character sender) Parameters Type Name Description Character sender Character that use the weapon Returns Type Description Bullet Instance of the spawned bullet entity. Return null when invalid Overrides Weapon.SpawnBullet(Character) Implements IMapItem Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.Platformer.MiniGame.SpawnBadgeHandler.html": {
    "href": "api/AngeliA.Platformer.MiniGame.SpawnBadgeHandler.html",
    "title": "Delegate MiniGame.SpawnBadgeHandler | AngeliA",
    "summary": "Delegate MiniGame.SpawnBadgeHandler Namespace: AngeliA.Platformer Assembly: com.angelia.platformer.dll Syntax public delegate void MiniGame.SpawnBadgeHandler(int quality) Parameters Type Name Description int quality Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.Platformer.MiniGame.html": {
    "href": "api/AngeliA.Platformer.MiniGame.html",
    "title": "Class MiniGame | AngeliA",
    "summary": "Class MiniGame Implements IMapItem IActionTarget IBlockEntity Namespace: AngeliA.Platformer Assembly: com.angelia.platformer.dll Syntax [Entity.MapEditorGroup(\"MiniGame\", 0)] [Entity.Layer(3)] public abstract class MiniGame : Entity, IMapItem, IActionTarget, IBlockEntity Constructors | Edit this page View Source MiniGame() Declaration public MiniGame() Properties | Edit this page View Source BadgeCount Declaration protected abstract int BadgeCount { get; } | Edit this page View Source BadgeHints Declaration protected virtual LanguageCode[] BadgeHints { get; } | Edit this page View Source DisplayName Declaration protected abstract string DisplayName { get; } | Edit this page View Source IsPlaying Declaration protected bool IsPlaying { get; } | Edit this page View Source RequireMouseCursor Declaration protected abstract bool RequireMouseCursor { get; } | Edit this page View Source RequireQuitConfirm Declaration protected virtual bool RequireQuitConfirm { get; } | Edit this page View Source ShowRestartOption Declaration protected virtual bool ShowRestartOption { get; } | Edit this page View Source Skin Declaration protected GUISkin Skin { get; } | Edit this page View Source WindowRect Declaration protected IRect WindowRect { get; } | Edit this page View Source WindowSize Declaration protected virtual Int2 WindowSize { get; } Methods | Edit this page View Source CloseMiniGame() Declaration protected virtual void CloseMiniGame() | Edit this page View Source DrawBadges(IRect) Declaration protected void DrawBadges(IRect panelRect) | Edit this page View Source DrawBadges(IRect, Color32) Declaration protected void DrawBadges(IRect panelRect, Color32 backgroundColor) | Edit this page View Source FirstUpdate() [1/4] This function is called every frame when entity is in stage. Prioritize using this function to fill collider in to physics system. Declaration public override void FirstUpdate() Overrides Entity.FirstUpdate() | Edit this page View Source GameUpdate() Declaration protected abstract void GameUpdate() | Edit this page View Source GiveBadge(int, bool) Declaration protected void GiveBadge(int index, bool isGold) | Edit this page View Source LateUpdate() [4/4] This function is called every frame when entity is in stage. Prioritize using this function to render the entity. Declaration public override sealed void LateUpdate() Overrides Entity.LateUpdate() | Edit this page View Source OnInactivated() This function is called when entity leave the stage Declaration public override void OnInactivated() Overrides Entity.OnInactivated() | Edit this page View Source RestartGame() Declaration protected virtual void RestartGame() | Edit this page View Source StartMiniGame() Declaration protected abstract void StartMiniGame() | Edit this page View Source Unify(int) Declaration protected static int Unify(int value) Events | Edit this page View Source OnBadgeSpawn Declaration public static event MiniGame.SpawnBadgeHandler OnBadgeSpawn Implements IMapItem IActionTarget IBlockEntity Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.Platformer.MiniGameTask.html": {
    "href": "api/AngeliA.Platformer.MiniGameTask.html",
    "title": "Class MiniGameTask | AngeliA",
    "summary": "Class MiniGameTask Namespace: AngeliA.Platformer Assembly: com.angelia.platformer.dll Syntax public class MiniGameTask : Task Fields | Edit this page View Source MiniGame Declaration public MiniGame MiniGame Methods | Edit this page View Source FrameUpdate() Declaration public override TaskResult FrameUpdate() Overrides Task.FrameUpdate() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.Platformer.MissileBullet.html": {
    "href": "api/AngeliA.Platformer.MissileBullet.html",
    "title": "Class MissileBullet | AngeliA",
    "summary": "Class MissileBullet Implements IMapItem IDamageReceiver Namespace: AngeliA.Platformer Assembly: com.angelia.platformer.dll Syntax public abstract class MissileBullet : Bullet, IMapItem, IDamageReceiver Properties | Edit this page View Source CurrentRotation Declaration public int CurrentRotation { get; set; } | Edit this page View Source CurrentVelocity Declaration public Int2 CurrentVelocity { get; set; } | Edit this page View Source DestroyOnHitTarget Declaration protected virtual bool DestroyOnHitTarget { get; } | Edit this page View Source DestroyWhenTakeDamage Declaration protected virtual bool DestroyWhenTakeDamage { get; } | Edit this page View Source Duration How long can this bullet exists on stage in frame Declaration public override int Duration { get; } Overrides Bullet.Duration | Edit this page View Source EnvironmentHitCount How many environment collider can this bullet hit without getting despawn Declaration protected override int EnvironmentHitCount { get; } Overrides Bullet.EnvironmentHitCount | Edit this page View Source ExplosionParticleID Declaration protected virtual int ExplosionParticleID { get; } | Edit this page View Source MissileAcceleration Declaration protected virtual int MissileAcceleration { get; } | Edit this page View Source MissileFlyingSpeed Declaration protected virtual int MissileFlyingSpeed { get; } | Edit this page View Source MissileStartSpeed Declaration protected virtual int MissileStartSpeed { get; } | Edit this page View Source MissileTarget Declaration public Entity MissileTarget { get; set; } | Edit this page View Source OnlyHitTarget Declaration protected virtual bool OnlyHitTarget { get; } | Edit this page View Source ReceiverHitCount How many target collider can this bullet hit without getting despawn Declaration protected override int ReceiverHitCount { get; } Overrides Bullet.ReceiverHitCount | Edit this page View Source SmokeParticleFrequency Declaration protected virtual int SmokeParticleFrequency { get; } | Edit this page View Source SmokeParticleID Declaration protected virtual int SmokeParticleID { get; } | Edit this page View Source TargetHitFrame Declaration protected int TargetHitFrame { get; } Methods | Edit this page View Source BeforeUpdate() [2/4] This function is called every frame when entity is in stage. Prioritize using this function to update physics logic. Declaration public override void BeforeUpdate() Overrides Bullet.BeforeUpdate() | Edit this page View Source FindTargetUpdate() Declaration protected virtual void FindTargetUpdate() | Edit this page View Source FirstUpdate() [1/4] This function is called every frame when entity is in stage. Prioritize using this function to fill collider in to physics system. Declaration public override void FirstUpdate() Overrides Entity.FirstUpdate() | Edit this page View Source LateUpdate() [4/4] This function is called every frame when entity is in stage. Prioritize using this function to render the entity. Declaration public override void LateUpdate() Overrides Entity.LateUpdate() | Edit this page View Source OnActivated() This function is called when entity enter the stage Declaration public override void OnActivated() Overrides Bullet.OnActivated() | Edit this page View Source OnMissileHit(IDamageReceiver) Declaration protected virtual void OnMissileHit(IDamageReceiver receiver) | Edit this page View Source PerformHitEnvironment(out bool) This function is called when the bullet hit environment colliders Declaration protected override void PerformHitEnvironment(out bool requireSelfDestroy) Parameters Type Name Description bool requireSelfDestroy True if this bullet should be despawn Overrides Bullet.PerformHitEnvironment(out bool) | Edit this page View Source PerformHitReceiver(IDamageReceiver, out bool) This function is called when the bullet hit IDamageReceiver Declaration protected override void PerformHitReceiver(IDamageReceiver receiver, out bool requireSelfDestroy) Parameters Type Name Description IDamageReceiver receiver The target it hits bool requireSelfDestroy True if this bullet should be despawn Overrides Bullet.PerformHitReceiver(IDamageReceiver, out bool) | Edit this page View Source SpawnMissileExplosionParticle() Declaration protected virtual Particle SpawnMissileExplosionParticle() | Edit this page View Source SpawnMissileSmokeParticle() Declaration protected virtual Particle SpawnMissileSmokeParticle() | Edit this page View Source UpdateMissileMovement() Declaration protected virtual void UpdateMissileMovement() Implements IMapItem IDamageReceiver Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.Platformer.MissileWeapon-1.html": {
    "href": "api/AngeliA.Platformer.MissileWeapon-1.html",
    "title": "Class MissileWeapon<B> | AngeliA",
    "summary": "Class MissileWeapon<B> Implements IMapItem Namespace: AngeliA.Platformer Assembly: com.angelia.platformer.dll Syntax public abstract class MissileWeapon<B> : Weapon<B>, IMapItem where B : MissileBullet Type Parameters Name Description B Properties | Edit this page View Source AvailableInAir True if character can use this tool when not touching ground Declaration public override bool AvailableInAir { get; } Overrides HandTool.AvailableInAir | Edit this page View Source AvailableInWater True if character can use this tool when inside water Declaration public override bool AvailableInWater { get; } Overrides HandTool.AvailableInWater | Edit this page View Source AvailableWhenClimbing True if character can use this tool when climbing Declaration public override bool AvailableWhenClimbing { get; } Overrides HandTool.AvailableWhenClimbing | Edit this page View Source AvailableWhenDashing True if character can use this tool when dashing Declaration public override bool AvailableWhenDashing { get; } Overrides HandTool.AvailableWhenDashing | Edit this page View Source AvailableWhenFlying True if character can use this tool when flying Declaration public override bool AvailableWhenFlying { get; } Overrides HandTool.AvailableWhenFlying | Edit this page View Source AvailableWhenGrabbing True if character can use this tool when grabbing Declaration public override bool AvailableWhenGrabbing { get; } Overrides HandTool.AvailableWhenGrabbing | Edit this page View Source AvailableWhenPounding True if character can use this tool when ground pounding Declaration public override bool AvailableWhenPounding { get; } Overrides HandTool.AvailableWhenPounding | Edit this page View Source AvailableWhenRolling True if character can use this tool when rolling Declaration public override bool AvailableWhenRolling { get; } Overrides HandTool.AvailableWhenRolling | Edit this page View Source AvailableWhenRunning True if character can use this tool when running Declaration public override bool AvailableWhenRunning { get; } Overrides HandTool.AvailableWhenRunning | Edit this page View Source AvailableWhenRushing True if character can use this tool when rushing Declaration public override bool AvailableWhenRushing { get; } Overrides HandTool.AvailableWhenRushing | Edit this page View Source AvailableWhenSliding True if character can use this tool when sliding on wall Declaration public override bool AvailableWhenSliding { get; } Overrides HandTool.AvailableWhenSliding | Edit this page View Source AvailableWhenSquatting True if character can use this tool when squatting Declaration public override bool AvailableWhenSquatting { get; } Overrides HandTool.AvailableWhenSquatting | Edit this page View Source AvailableWhenWalking True if character can use this tool when walking Declaration public override bool AvailableWhenWalking { get; } Overrides HandTool.AvailableWhenWalking | Edit this page View Source Cooldown How long have to wait to use again after the tool being used for once Declaration public override int Cooldown { get; } Overrides HandTool.Cooldown | Edit this page View Source DefaultMovementSpeedRateOnUse How fast can the character move when using this tool. (0 means do not move. 1000 means move as normal speed. null means do not effect movement speed.) Declaration public override int? DefaultMovementSpeedRateOnUse { get; } Overrides HandTool.DefaultMovementSpeedRateOnUse | Edit this page View Source Duration How long does the tool perform it's function for once Declaration public override int Duration { get; } Overrides HandTool.Duration | Edit this page View Source RunningMovementSpeedRateOnUse How fast can the character move when using this tool when running. (0 means do not move. 1000 means move as normal speed. null means do not effect movement speed.) Declaration public override int? RunningMovementSpeedRateOnUse { get; } Overrides HandTool.RunningMovementSpeedRateOnUse | Edit this page View Source ValidDirection Which direction can this weapon attack Declaration protected override WeaponValidDirection ValidDirection { get; } Overrides Weapon.ValidDirection | Edit this page View Source WalkingMovementSpeedRateOnUse How fast can the character move when using this tool when walking. (0 means do not move. 1000 means move as normal speed. null means do not effect movement speed.) Declaration public override int? WalkingMovementSpeedRateOnUse { get; } Overrides HandTool.WalkingMovementSpeedRateOnUse Methods | Edit this page View Source BeforeItemUpdate_FromEquipment(Character) This function is called every frame when the holder is equipping this item Declaration public override void BeforeItemUpdate_FromEquipment(Character holder) Overrides Item.BeforeItemUpdate_FromEquipment(Character) | Edit this page View Source SpawnBullet(Character) Spawn the bullet entity Declaration public override Bullet SpawnBullet(Character sender) Parameters Type Name Description Character sender Character that use the weapon Returns Type Description Bullet Instance of the spawned bullet entity. Return null when invalid Overrides Weapon.SpawnBullet(Character) Implements IMapItem Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.Platformer.MomentumBooster.html": {
    "href": "api/AngeliA.Platformer.MomentumBooster.html",
    "title": "Class MomentumBooster | AngeliA",
    "summary": "Class MomentumBooster Implements IMapItem IBlockEntity Namespace: AngeliA.Platformer Assembly: com.angelia.platformer.dll Syntax [Entity.Layer(3)] [Entity.MapEditorGroup(\"Contraption\", 0)] public abstract class MomentumBooster : Entity, IMapItem, IBlockEntity Properties | Edit this page View Source BoostDirection Declaration protected abstract Direction3 BoostDirection { get; } | Edit this page View Source BoostSpeed Declaration protected abstract int BoostSpeed { get; } | Edit this page View Source LastBoostFrame Declaration protected int LastBoostFrame { get; } | Edit this page View Source MomentumDecay Declaration protected virtual int MomentumDecay { get; } Methods | Edit this page View Source BeforeUpdate() [2/4] This function is called every frame when entity is in stage. Prioritize using this function to update physics logic. Declaration public override void BeforeUpdate() Overrides Entity.BeforeUpdate() | Edit this page View Source FirstUpdate() [1/4] This function is called every frame when entity is in stage. Prioritize using this function to fill collider in to physics system. Declaration public override void FirstUpdate() Overrides Entity.FirstUpdate() | Edit this page View Source OnActivated() This function is called when entity enter the stage Declaration public override void OnActivated() Overrides Entity.OnActivated() | Edit this page View Source OnBoosting(Rigidbody) Declaration protected virtual void OnBoosting(Rigidbody rig) Implements IMapItem IBlockEntity Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.Platformer.MovableBullet.html": {
    "href": "api/AngeliA.Platformer.MovableBullet.html",
    "title": "Class MovableBullet | AngeliA",
    "summary": "Class MovableBullet Implements IMapItem Namespace: AngeliA.Platformer Assembly: com.angelia.platformer.dll Syntax public abstract class MovableBullet : Bullet, IMapItem Properties | Edit this page View Source AriDrag Declaration public virtual Int2 AriDrag { get; } | Edit this page View Source ArtworkID Declaration public virtual int ArtworkID { get; } | Edit this page View Source CurrentRotation Declaration public int CurrentRotation { get; set; } | Edit this page View Source Duration How long can this bullet exists on stage in frame Declaration public override int Duration { get; } Overrides Bullet.Duration | Edit this page View Source EndRotation Declaration public virtual int EndRotation { get; } | Edit this page View Source EndRotationRandomRange Declaration public virtual int EndRotationRandomRange { get; } | Edit this page View Source EnvironmentHitCount How many environment collider can this bullet hit without getting despawn Declaration protected override int EnvironmentHitCount { get; } Overrides Bullet.EnvironmentHitCount | Edit this page View Source Gravity Declaration public virtual int Gravity { get; } | Edit this page View Source HitReceiver Declaration protected bool HitReceiver { get; } | Edit this page View Source InWater Declaration public bool InWater { get; } | Edit this page View Source MaxRange Declaration public virtual int MaxRange { get; } | Edit this page View Source ReceiverHitCount How many target collider can this bullet hit without getting despawn Declaration protected override int ReceiverHitCount { get; } Overrides Bullet.ReceiverHitCount | Edit this page View Source ResidueID Declaration public virtual int ResidueID { get; } | Edit this page View Source RotateSpeed Declaration public virtual int RotateSpeed { get; } | Edit this page View Source Scale Declaration public virtual int Scale { get; } | Edit this page View Source SpeedForward Declaration public virtual int SpeedForward { get; } | Edit this page View Source SpeedSide Declaration public virtual int SpeedSide { get; } | Edit this page View Source StartRotation Declaration public virtual int StartRotation { get; } | Edit this page View Source Velocity Declaration public Int2 Velocity { get; set; } | Edit this page View Source WaterSpeedRate Declaration public virtual int WaterSpeedRate { get; } Methods | Edit this page View Source BeforeDespawn(IDamageReceiver) This function is called before the bullet get despawn by performing damage logic Declaration protected override void BeforeDespawn(IDamageReceiver receiver) Parameters Type Name Description IDamageReceiver receiver The target it hits Overrides Bullet.BeforeDespawn(IDamageReceiver) | Edit this page View Source BeforeUpdate() [2/4] This function is called every frame when entity is in stage. Prioritize using this function to update physics logic. Declaration public override void BeforeUpdate() Overrides Bullet.BeforeUpdate() | Edit this page View Source GetLastUpdatedTramsform() Declaration protected (int startX, int startY, int endX, int endY, int length, int rotation1000, bool beamHitReceiver) GetLastUpdatedTramsform() | Edit this page View Source LateUpdate() [4/4] This function is called every frame when entity is in stage. Prioritize using this function to render the entity. Declaration public override void LateUpdate() Overrides Entity.LateUpdate() | Edit this page View Source OnActivated() This function is called when entity enter the stage Declaration public override void OnActivated() Overrides Bullet.OnActivated() | Edit this page View Source StartMove(Direction8, int, int) Declaration public virtual void StartMove(Direction8 dir, int speedForward, int speedSide) Implements IMapItem Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.Platformer.Navigation.IExpandRangeValidator.html": {
    "href": "api/AngeliA.Platformer.Navigation.IExpandRangeValidator.html",
    "title": "Interface Navigation.IExpandRangeValidator | AngeliA",
    "summary": "Interface Navigation.IExpandRangeValidator Namespace: AngeliA.Platformer Assembly: com.angelia.platformer.dll Syntax public interface Navigation.IExpandRangeValidator Methods | Edit this page View Source Verify(int, int) Declaration bool Verify(int cellX, int cellY) Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.Platformer.Navigation.Operation.html": {
    "href": "api/AngeliA.Platformer.Navigation.Operation.html",
    "title": "Struct Navigation.Operation | AngeliA",
    "summary": "Struct Navigation.Operation Namespace: AngeliA.Platformer Assembly: com.angelia.platformer.dll Syntax public struct Navigation.Operation Fields | Edit this page View Source Motion Declaration public NavigationOperateMotion Motion | Edit this page View Source TargetGlobalX Declaration public int TargetGlobalX | Edit this page View Source TargetGlobalY Declaration public int TargetGlobalY Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.Platformer.Navigation.html": {
    "href": "api/AngeliA.Platformer.Navigation.html",
    "title": "Class Navigation | AngeliA",
    "summary": "Class Navigation Namespace: AngeliA.Platformer Assembly: com.angelia.platformer.dll Syntax public static class Navigation Properties | Edit this page View Source IsReady Declaration public static bool IsReady { get; } Methods | Edit this page View Source ExpandTo(int, IRect, int, int, int, int, int, out int, out int, bool, IExpandRangeValidator) Declaration public static bool ExpandTo(int globalFrame, IRect viewRect, int fromX, int fromY, int toX, int toY, int maxIteration, out int resultX, out int resultY, bool endInAir = false, Navigation.IExpandRangeValidator rangeValidator = null) | Edit this page View Source Initialize() Declaration [OnGameInitialize(0)] public static void Initialize() | Edit this page View Source IsGround(int, IRect, int, int, out int) Declaration public static bool IsGround(int globalFrame, IRect viewRect, int globalX, int globalY, out int groundY) | Edit this page View Source NavigateTo(in Operation[], int, IRect, int, int, int, int, int) Declaration public static int NavigateTo(in Navigation.Operation[] Operations, int globalFrame, IRect viewRect, int fromX, int fromY, int toX, int toY, int jumpIteration = 16)"
  },
  "api/AngeliA.Platformer.NavigationOperateMotion.html": {
    "href": "api/AngeliA.Platformer.NavigationOperateMotion.html",
    "title": "Enum NavigationOperateMotion | AngeliA",
    "summary": "Enum NavigationOperateMotion Namespace: AngeliA.Platformer Assembly: com.angelia.platformer.dll Syntax public enum NavigationOperateMotion Fields Name Description Jump Move None Extension Methods Extension.Next<NavigationOperateMotion>(NavigationOperateMotion) Extension.Prev<NavigationOperateMotion>(NavigationOperateMotion) Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.Platformer.Oneway.html": {
    "href": "api/AngeliA.Platformer.Oneway.html",
    "title": "Class Oneway | AngeliA",
    "summary": "Class Oneway Implements IMapItem IBlockEntity Namespace: AngeliA.Platformer Assembly: com.angelia.platformer.dll Syntax [Entity.Layer(3)] [Entity.MapEditorGroup(\"Contraption\", 0)] public abstract class Oneway : Entity, IMapItem, IBlockEntity Properties | Edit this page View Source GateDirection Declaration public abstract Direction4 GateDirection { get; } | Edit this page View Source ReboundFrame Declaration protected int ReboundFrame { get; } Methods | Edit this page View Source ContactReboundUpdate(int) Declaration protected virtual bool ContactReboundUpdate(int frame) | Edit this page View Source FirstUpdate() [1/4] This function is called every frame when entity is in stage. Prioritize using this function to fill collider in to physics system. Declaration public override void FirstUpdate() Overrides Entity.FirstUpdate() | Edit this page View Source LateUpdate() [4/4] This function is called every frame when entity is in stage. Prioritize using this function to render the entity. Declaration public override void LateUpdate() Overrides Entity.LateUpdate() | Edit this page View Source OnActivated() This function is called when entity enter the stage Declaration public override void OnActivated() Overrides Entity.OnActivated() | Edit this page View Source Update() [3/4] This function is called every frame when entity is in stage. Prioritize using this function to update physics logic. Declaration public override void Update() Overrides Entity.Update() Implements IMapItem IBlockEntity Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.Platformer.OpenableFurniture.html": {
    "href": "api/AngeliA.Platformer.OpenableFurniture.html",
    "title": "Class OpenableFurniture | AngeliA",
    "summary": "Class OpenableFurniture Implements IMapItem IBlockEntity IActionTarget Namespace: AngeliA.Platformer Assembly: com.angelia.platformer.dll Syntax public abstract class OpenableFurniture : ActionFurniture, IMapItem, IBlockEntity, IActionTarget Properties | Edit this page View Source Open Declaration public bool Open { get; } Methods | Edit this page View Source Invoke() Invoke the logic provided by this entity. Declaration public override bool Invoke() Returns Type Description bool True if the logic performs successfuly Overrides ActionFurniture.Invoke() | Edit this page View Source LateUpdate() [4/4] This function is called every frame when entity is in stage. Prioritize using this function to render the entity. Declaration public override void LateUpdate() Overrides ActionFurniture.LateUpdate() | Edit this page View Source OnActivated() This function is called when entity enter the stage Declaration public override void OnActivated() Overrides Furniture.OnActivated() | Edit this page View Source SetOpen(bool) Declaration protected virtual void SetOpen(bool open) Implements IMapItem IBlockEntity IActionTarget Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.Platformer.OpenableUiFurniture.html": {
    "href": "api/AngeliA.Platformer.OpenableUiFurniture.html",
    "title": "Class OpenableUiFurniture | AngeliA",
    "summary": "Class OpenableUiFurniture Implements IMapItem IBlockEntity IActionTarget Namespace: AngeliA.Platformer Assembly: com.angelia.platformer.dll Syntax public abstract class OpenableUiFurniture : OpenableFurniture, IMapItem, IBlockEntity, IActionTarget Properties | Edit this page View Source WindowSize Declaration protected virtual Int2 WindowSize { get; } Methods | Edit this page View Source LateUpdate() [4/4] This function is called every frame when entity is in stage. Prioritize using this function to render the entity. Declaration public override void LateUpdate() Overrides OpenableFurniture.LateUpdate() | Edit this page View Source OnUiClose() Declaration protected virtual void OnUiClose() | Edit this page View Source OnUiOpen() Declaration protected virtual void OnUiOpen() | Edit this page View Source SetOpen(bool) Declaration protected override void SetOpen(bool open) Overrides OpenableFurniture.SetOpen(bool) | Edit this page View Source Unify(int) Declaration protected static int Unify(int value) | Edit this page View Source UpdateUI(IRect) Declaration protected abstract void UpdateUI(IRect windowRect) Implements IMapItem IBlockEntity IActionTarget Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.Platformer.OpeningTask.html": {
    "href": "api/AngeliA.Platformer.OpeningTask.html",
    "title": "Class OpeningTask | AngeliA",
    "summary": "Class OpeningTask Namespace: AngeliA.Platformer Assembly: com.angelia.platformer.dll Syntax public class OpeningTask : Task Fields | Edit this page View Source TYPE_ID Declaration public static readonly int TYPE_ID Properties | Edit this page View Source FadeOut Declaration public bool FadeOut { get; set; } | Edit this page View Source TargetViewX Declaration public int TargetViewX { get; set; } | Edit this page View Source TargetViewY Declaration public int TargetViewY { get; set; } | Edit this page View Source TargetViewZ Declaration public int TargetViewZ { get; set; } Methods | Edit this page View Source FrameUpdate() Declaration public override TaskResult FrameUpdate() Overrides Task.FrameUpdate() | Edit this page View Source OnGameRestart() Declaration [OnGameRestart(0)] public static void OnGameRestart() | Edit this page View Source OnStart() Declaration public override void OnStart() Overrides Task.OnStart() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.Platformer.PickTool.html": {
    "href": "api/AngeliA.Platformer.PickTool.html",
    "title": "Class PickTool | AngeliA",
    "summary": "Class PickTool Implements IMapItem Namespace: AngeliA.Platformer Assembly: com.angelia.platformer.dll Syntax public abstract class PickTool : HandTool, IMapItem Properties | Edit this page View Source AllowPickBackgroundBlock Declaration public virtual bool AllowPickBackgroundBlock { get; } | Edit this page View Source AllowPickBlockEntity Declaration public virtual bool AllowPickBlockEntity { get; } | Edit this page View Source AllowPickLevelBlock Declaration public virtual bool AllowPickLevelBlock { get; } | Edit this page View Source AvailableWhenSliding True if character can use this tool when sliding on wall Declaration public override bool AvailableWhenSliding { get; } Overrides HandTool.AvailableWhenSliding | Edit this page View Source AvailableWhenSquatting True if character can use this tool when squatting Declaration public override bool AvailableWhenSquatting { get; } Overrides HandTool.AvailableWhenSquatting | Edit this page View Source AvailableWhenWalking True if character can use this tool when walking Declaration public override bool AvailableWhenWalking { get; } Overrides HandTool.AvailableWhenWalking | Edit this page View Source DefaultMovementSpeedRateOnUse How fast can the character move when using this tool. (0 means do not move. 1000 means move as normal speed. null means do not effect movement speed.) Declaration public override int? DefaultMovementSpeedRateOnUse { get; } Overrides HandTool.DefaultMovementSpeedRateOnUse | Edit this page View Source DropItemAfterPicked Declaration public virtual bool DropItemAfterPicked { get; } | Edit this page View Source Duration How long does the tool perform it's function for once Declaration public override int Duration { get; } Overrides HandTool.Duration | Edit this page View Source MaxStackCount Count limitation for multiple items inside one inventory slot Declaration public override int MaxStackCount { get; } Overrides Equipment.MaxStackCount | Edit this page View Source MouseUnitRange Declaration public virtual int MouseUnitRange { get; } | Edit this page View Source PerformDelayRate How many frame based on \"duration\" does the internal tool logic invoke after character start to use the tool. (0 means immediately invoke. 1000 means invoke after \"duration\" frames) Declaration public override int PerformDelayRate { get; } Overrides HandTool.PerformDelayRate | Edit this page View Source RunningMovementSpeedRateOnUse How fast can the character move when using this tool when running. (0 means do not move. 1000 means move as normal speed. null means do not effect movement speed.) Declaration public override int? RunningMovementSpeedRateOnUse { get; } Overrides HandTool.RunningMovementSpeedRateOnUse | Edit this page View Source UseMouseToPick Declaration public virtual bool UseMouseToPick { get; } | Edit this page View Source UseStackAsUsage True if this tool treat it's inventory stack count as durability bar Declaration public override bool UseStackAsUsage { get; } Overrides HandTool.UseStackAsUsage | Edit this page View Source WalkingMovementSpeedRateOnUse How fast can the character move when using this tool when walking. (0 means do not move. 1000 means move as normal speed. null means do not effect movement speed.) Declaration public override int? WalkingMovementSpeedRateOnUse { get; } Overrides HandTool.WalkingMovementSpeedRateOnUse Methods | Edit this page View Source DrawPickTargetHighlight(int, int, bool) Declaration protected virtual void DrawPickTargetHighlight(int unitX, int unitY, bool hasTarget) | Edit this page View Source OnPoseAnimationUpdate_FromEquipment(PoseCharacterRenderer) This function is called every frame when a pose-style character equipping this item Declaration public override void OnPoseAnimationUpdate_FromEquipment(PoseCharacterRenderer rendering) Overrides Item.OnPoseAnimationUpdate_FromEquipment(PoseCharacterRenderer) | Edit this page View Source OnToolPerform(Character) This function is called when this tool is used for once by the given character Declaration public override void OnToolPerform(Character sender) Overrides HandTool.OnToolPerform(Character) Implements IMapItem Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.Platformer.Plant.html": {
    "href": "api/AngeliA.Platformer.Plant.html",
    "title": "Class Plant | AngeliA",
    "summary": "Class Plant Implements IMapItem IBlockEntity ICombustible IDamageReceiver Namespace: AngeliA.Platformer Assembly: com.angelia.platformer.dll Syntax [Entity.MapEditorGroup(\"Vegetation\", 0)] [Entity.Layer(3)] public abstract class Plant : Entity, IMapItem, IBlockEntity, ICombustible, IDamageReceiver Methods | Edit this page View Source FirstUpdate() [1/4] This function is called every frame when entity is in stage. Prioritize using this function to fill collider in to physics system. Declaration public override void FirstUpdate() Overrides Entity.FirstUpdate() | Edit this page View Source LateUpdate() [4/4] This function is called every frame when entity is in stage. Prioritize using this function to render the entity. Declaration public override void LateUpdate() Overrides Entity.LateUpdate() | Edit this page View Source OnPlantBreak() Declaration protected virtual void OnPlantBreak() Implements IMapItem IBlockEntity ICombustible IDamageReceiver Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.Platformer.Platform.html": {
    "href": "api/AngeliA.Platformer.Platform.html",
    "title": "Class Platform | AngeliA",
    "summary": "Class Platform Implements IMapItem IBlockEntity Namespace: AngeliA.Platformer Assembly: com.angelia.platformer.dll Syntax [Entity.Layer(3)] [Entity.MapEditorGroup(\"Platform\", 0)] public abstract class Platform : Entity, IMapItem, IBlockEntity Properties | Edit this page View Source OneWay Declaration public abstract bool OneWay { get; } | Edit this page View Source Pose Declaration protected FittingPose Pose { get; } | Edit this page View Source TouchedByCharacter Declaration protected bool TouchedByCharacter { get; } | Edit this page View Source TouchedByPlayer Declaration protected bool TouchedByPlayer { get; } | Edit this page View Source TouchedByRigidbody Declaration protected bool TouchedByRigidbody { get; } Methods | Edit this page View Source BeforeUpdate() [2/4] This function is called every frame when entity is in stage. Prioritize using this function to update physics logic. Declaration public override void BeforeUpdate() Overrides Entity.BeforeUpdate() | Edit this page View Source FirstUpdate() [1/4] This function is called every frame when entity is in stage. Prioritize using this function to fill collider in to physics system. Declaration public override void FirstUpdate() Overrides Entity.FirstUpdate() | Edit this page View Source LateUpdate() [4/4] This function is called every frame when entity is in stage. Prioritize using this function to render the entity. Declaration public override void LateUpdate() Overrides Entity.LateUpdate() | Edit this page View Source Move() Declaration protected abstract void Move() | Edit this page View Source OnActivated() This function is called when entity enter the stage Declaration public override void OnActivated() Overrides Entity.OnActivated() | Edit this page View Source OnCharacterTouched(Character) Declaration protected virtual void OnCharacterTouched(Character character) | Edit this page View Source OnPlayerTouched(Character) Declaration protected virtual void OnPlayerTouched(Character player) | Edit this page View Source OnRigidbodyTouched(Rigidbody) Declaration protected virtual void OnRigidbodyTouched(Rigidbody rig) | Edit this page View Source RenderPlatformBlock(int) Declaration protected virtual void RenderPlatformBlock(int artworkID) | Edit this page View Source SetTouch(bool, bool, bool) Declaration public void SetTouch(bool rigidbody = true, bool character = true, bool player = true) | Edit this page View Source Update() [3/4] This function is called every frame when entity is in stage. Prioritize using this function to update physics logic. Declaration public override void Update() Overrides Entity.Update() Implements IMapItem IBlockEntity Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.Platformer.PlatformerUtil.html": {
    "href": "api/AngeliA.Platformer.PlatformerUtil.html",
    "title": "Class PlatformerUtil | AngeliA",
    "summary": "Class PlatformerUtil Namespace: AngeliA.Platformer Assembly: com.angelia.platformer.dll Syntax public static class PlatformerUtil Methods | Edit this page View Source NavigationFreeWandering(Int2, Entity, out bool, int, int, int) Declaration public static Int2 NavigationFreeWandering(Int2 aimPosition, Entity target, out bool grounded, int frequency, int maxDistance, int randomShift = 0)"
  },
  "api/AngeliA.Platformer.Portal.html": {
    "href": "api/AngeliA.Platformer.Portal.html",
    "title": "Class Portal | AngeliA",
    "summary": "Class Portal Implements IMapItem Namespace: AngeliA.Platformer Assembly: com.angelia.platformer.dll Syntax [Entity.MapEditorGroup(\"Teleport\", 0)] public abstract class Portal : Entity, IMapItem Properties | Edit this page View Source DontSpawnAfterUsed Declaration protected virtual bool DontSpawnAfterUsed { get; } | Edit this page View Source TargetGlobalPosition Declaration protected abstract Int3 TargetGlobalPosition { get; } Methods | Edit this page View Source FirstUpdate() [1/4] This function is called every frame when entity is in stage. Prioritize using this function to fill collider in to physics system. Declaration public override void FirstUpdate() Overrides Entity.FirstUpdate() | Edit this page View Source Invoke(Character) Declaration public virtual bool Invoke(Character character) | Edit this page View Source OnActivated() This function is called when entity enter the stage Declaration public override void OnActivated() Overrides Entity.OnActivated() | Edit this page View Source Update() [3/4] This function is called every frame when entity is in stage. Prioritize using this function to update physics logic. Declaration public override void Update() Overrides Entity.Update() Implements IMapItem Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.Platformer.PoseAnimation_PhotoPose.html": {
    "href": "api/AngeliA.Platformer.PoseAnimation_PhotoPose.html",
    "title": "Class PoseAnimation_PhotoPose | AngeliA",
    "summary": "Class PoseAnimation_PhotoPose Namespace: AngeliA.Platformer Assembly: com.angelia.platformer.dll Syntax public class PoseAnimation_PhotoPose : PoseAnimation Fields | Edit this page View Source TYPE_ID Declaration public static readonly int TYPE_ID Methods | Edit this page View Source Animate(PoseCharacterRenderer) Perform the animation logic to the given character Declaration public override void Animate(PoseCharacterRenderer renderer) Overrides PoseAnimation.Animate(PoseCharacterRenderer) Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.Platformer.PoseAnimation_Ride.html": {
    "href": "api/AngeliA.Platformer.PoseAnimation_Ride.html",
    "title": "Class PoseAnimation_Ride | AngeliA",
    "summary": "Class PoseAnimation_Ride Namespace: AngeliA.Platformer Assembly: com.angelia.platformer.dll Syntax public class PoseAnimation_Ride : PoseAnimation Fields | Edit this page View Source TYPE_ID Declaration public static readonly int TYPE_ID Methods | Edit this page View Source Animate(PoseCharacterRenderer) Perform the animation logic to the given character Declaration public override void Animate(PoseCharacterRenderer renderer) Overrides PoseAnimation.Animate(PoseCharacterRenderer) Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.Platformer.PoseAnimation_Sit.html": {
    "href": "api/AngeliA.Platformer.PoseAnimation_Sit.html",
    "title": "Class PoseAnimation_Sit | AngeliA",
    "summary": "Class PoseAnimation_Sit Namespace: AngeliA.Platformer Assembly: com.angelia.platformer.dll Syntax public class PoseAnimation_Sit : PoseAnimation Fields | Edit this page View Source TYPE_ID Declaration public static readonly int TYPE_ID Methods | Edit this page View Source Animate(PoseCharacterRenderer) Perform the animation logic to the given character Declaration public override void Animate(PoseCharacterRenderer renderer) Overrides PoseAnimation.Animate(PoseCharacterRenderer) | Edit this page View Source Sit() Declaration public static void Sit() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.Platformer.PoseAnimation_SlidingSit.html": {
    "href": "api/AngeliA.Platformer.PoseAnimation_SlidingSit.html",
    "title": "Class PoseAnimation_SlidingSit | AngeliA",
    "summary": "Class PoseAnimation_SlidingSit Namespace: AngeliA.Platformer Assembly: com.angelia.platformer.dll Syntax public class PoseAnimation_SlidingSit : PoseAnimation Fields | Edit this page View Source TYPE_ID Declaration public static readonly int TYPE_ID Methods | Edit this page View Source Animate(PoseCharacterRenderer) Perform the animation logic to the given character Declaration public override void Animate(PoseCharacterRenderer renderer) Overrides PoseAnimation.Animate(PoseCharacterRenderer) | Edit this page View Source BaseAnimate(PoseCharacterRenderer) Declaration public void BaseAnimate(PoseCharacterRenderer renderer) | Edit this page View Source SlidingSit(bool) Declaration public static void SlidingSit(bool highPos) Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.Platformer.PoseAnimation_SlidingSitHigh.html": {
    "href": "api/AngeliA.Platformer.PoseAnimation_SlidingSitHigh.html",
    "title": "Class PoseAnimation_SlidingSitHigh | AngeliA",
    "summary": "Class PoseAnimation_SlidingSitHigh Namespace: AngeliA.Platformer Assembly: com.angelia.platformer.dll Syntax public class PoseAnimation_SlidingSitHigh : PoseAnimation_SlidingSit Fields | Edit this page View Source TYPE_ID Declaration public static readonly int TYPE_ID Methods | Edit this page View Source Animate(PoseCharacterRenderer) Perform the animation logic to the given character Declaration public override void Animate(PoseCharacterRenderer renderer) Overrides PoseAnimation_SlidingSit.Animate(PoseCharacterRenderer) Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.Platformer.PoseAttack_Bow.html": {
    "href": "api/AngeliA.Platformer.PoseAttack_Bow.html",
    "title": "Class PoseAttack_Bow | AngeliA",
    "summary": "Class PoseAttack_Bow Namespace: AngeliA.Platformer Assembly: com.angelia.platformer.dll Syntax public class PoseAttack_Bow : PoseAnimation Fields | Edit this page View Source TYPE_ID Declaration public static readonly int TYPE_ID Methods | Edit this page View Source Animate(PoseCharacterRenderer) Perform the animation logic to the given character Declaration public override void Animate(PoseCharacterRenderer renderer) Overrides PoseAnimation.Animate(PoseCharacterRenderer) | Edit this page View Source Bow() Declaration public static void Bow() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.Platformer.PoseAttack_Float.html": {
    "href": "api/AngeliA.Platformer.PoseAttack_Float.html",
    "title": "Class PoseAttack_Float | AngeliA",
    "summary": "Class PoseAttack_Float Namespace: AngeliA.Platformer Assembly: com.angelia.platformer.dll Syntax public class PoseAttack_Float : PoseAnimation Fields | Edit this page View Source TYPE_ID Declaration public static readonly int TYPE_ID Methods | Edit this page View Source Animate(PoseCharacterRenderer) Perform the animation logic to the given character Declaration public override void Animate(PoseCharacterRenderer renderer) Overrides PoseAnimation.Animate(PoseCharacterRenderer) | Edit this page View Source Wave() Declaration public static void Wave() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.Platformer.PoseAttack_Hand.html": {
    "href": "api/AngeliA.Platformer.PoseAttack_Hand.html",
    "title": "Class PoseAttack_Hand | AngeliA",
    "summary": "Class PoseAttack_Hand Namespace: AngeliA.Platformer Assembly: com.angelia.platformer.dll Syntax public class PoseAttack_Hand : PoseAnimation Fields | Edit this page View Source TYPE_ID Declaration public static readonly int TYPE_ID Methods | Edit this page View Source Animate(PoseCharacterRenderer) Perform the animation logic to the given character Declaration public override void Animate(PoseCharacterRenderer renderer) Overrides PoseAnimation.Animate(PoseCharacterRenderer) Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.Platformer.PoseAttack_MagicPole.html": {
    "href": "api/AngeliA.Platformer.PoseAttack_MagicPole.html",
    "title": "Class PoseAttack_MagicPole | AngeliA",
    "summary": "Class PoseAttack_MagicPole Namespace: AngeliA.Platformer Assembly: com.angelia.platformer.dll Syntax public class PoseAttack_MagicPole : PoseAnimation Fields | Edit this page View Source TYPE_ID Declaration public static readonly int TYPE_ID Methods | Edit this page View Source Animate(PoseCharacterRenderer) Perform the animation logic to the given character Declaration public override void Animate(PoseCharacterRenderer renderer) Overrides PoseAnimation.Animate(PoseCharacterRenderer) | Edit this page View Source Wave() Declaration public static void Wave() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.Platformer.PoseAttack_MagicSingleHanded.html": {
    "href": "api/AngeliA.Platformer.PoseAttack_MagicSingleHanded.html",
    "title": "Class PoseAttack_MagicSingleHanded | AngeliA",
    "summary": "Class PoseAttack_MagicSingleHanded Namespace: AngeliA.Platformer Assembly: com.angelia.platformer.dll Syntax public class PoseAttack_MagicSingleHanded : PoseAnimation Fields | Edit this page View Source TYPE_ID Declaration public static readonly int TYPE_ID Methods | Edit this page View Source Animate(PoseCharacterRenderer) Perform the animation logic to the given character Declaration public override void Animate(PoseCharacterRenderer renderer) Overrides PoseAnimation.Animate(PoseCharacterRenderer) | Edit this page View Source Wave() Declaration public static void Wave() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.Platformer.PoseAttack_Polearm.html": {
    "href": "api/AngeliA.Platformer.PoseAttack_Polearm.html",
    "title": "Class PoseAttack_Polearm | AngeliA",
    "summary": "Class PoseAttack_Polearm Namespace: AngeliA.Platformer Assembly: com.angelia.platformer.dll Syntax public class PoseAttack_Polearm : PoseAnimation Fields | Edit this page View Source TYPE_ID Declaration public static readonly int TYPE_ID Methods | Edit this page View Source Animate(PoseCharacterRenderer) Perform the animation logic to the given character Declaration public override void Animate(PoseCharacterRenderer renderer) Overrides PoseAnimation.Animate(PoseCharacterRenderer) | Edit this page View Source Poke() Declaration public static void Poke() | Edit this page View Source SlashIn() Declaration public static void SlashIn() | Edit this page View Source SlashOut() Declaration public static void SlashOut() | Edit this page View Source SmashDown() Declaration public static void SmashDown() | Edit this page View Source SmashUp() Declaration public static void SmashUp() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.Platformer.PoseAttack_Scratch.html": {
    "href": "api/AngeliA.Platformer.PoseAttack_Scratch.html",
    "title": "Class PoseAttack_Scratch | AngeliA",
    "summary": "Class PoseAttack_Scratch Namespace: AngeliA.Platformer Assembly: com.angelia.platformer.dll Syntax public class PoseAttack_Scratch : PoseAnimation Fields | Edit this page View Source TYPE_ID Declaration public static readonly int TYPE_ID Methods | Edit this page View Source Animate(PoseCharacterRenderer) Perform the animation logic to the given character Declaration public override void Animate(PoseCharacterRenderer renderer) Overrides PoseAnimation.Animate(PoseCharacterRenderer) | Edit this page View Source ScratchIn() Declaration public static void ScratchIn() | Edit this page View Source ScratchOut() Declaration public static void ScratchOut() | Edit this page View Source ScratchUp() Declaration public static void ScratchUp() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.Platformer.PoseAttack_Shooting.html": {
    "href": "api/AngeliA.Platformer.PoseAttack_Shooting.html",
    "title": "Class PoseAttack_Shooting | AngeliA",
    "summary": "Class PoseAttack_Shooting Namespace: AngeliA.Platformer Assembly: com.angelia.platformer.dll Syntax public class PoseAttack_Shooting : PoseAnimation Fields | Edit this page View Source TYPE_ID Declaration public static readonly int TYPE_ID Methods | Edit this page View Source Animate(PoseCharacterRenderer) Perform the animation logic to the given character Declaration public override void Animate(PoseCharacterRenderer renderer) Overrides PoseAnimation.Animate(PoseCharacterRenderer) | Edit this page View Source Shooting() Declaration public static void Shooting() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.Platformer.PoseAttack_WaveDoubleHanded.html": {
    "href": "api/AngeliA.Platformer.PoseAttack_WaveDoubleHanded.html",
    "title": "Class PoseAttack_WaveDoubleHanded | AngeliA",
    "summary": "Class PoseAttack_WaveDoubleHanded Namespace: AngeliA.Platformer Assembly: com.angelia.platformer.dll Syntax public class PoseAttack_WaveDoubleHanded : PoseAnimation Fields | Edit this page View Source TYPE_ID Declaration public static readonly int TYPE_ID Properties | Edit this page View Source StyleIndex Declaration public virtual int StyleIndex { get; } Methods | Edit this page View Source Animate(PoseCharacterRenderer) Perform the animation logic to the given character Declaration public override void Animate(PoseCharacterRenderer renderer) Overrides PoseAnimation.Animate(PoseCharacterRenderer) | Edit this page View Source SlashIn() Declaration public static void SlashIn() | Edit this page View Source SlashOut() Declaration public static void SlashOut() | Edit this page View Source SmashDown() Declaration public static void SmashDown() | Edit this page View Source SmashUp() Declaration public static void SmashUp() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.Platformer.PoseAttack_WaveDoubleHanded_SmashOnly.html": {
    "href": "api/AngeliA.Platformer.PoseAttack_WaveDoubleHanded_SmashOnly.html",
    "title": "Class PoseAttack_WaveDoubleHanded_SmashOnly | AngeliA",
    "summary": "Class PoseAttack_WaveDoubleHanded_SmashOnly Namespace: AngeliA.Platformer Assembly: com.angelia.platformer.dll Syntax public class PoseAttack_WaveDoubleHanded_SmashOnly : PoseAttack_WaveDoubleHanded Fields | Edit this page View Source TYPE_ID Declaration public static readonly int TYPE_ID Properties | Edit this page View Source StyleIndex Declaration public override int StyleIndex { get; } Overrides PoseAttack_WaveDoubleHanded.StyleIndex Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.Platformer.PoseAttack_WaveEachHand.html": {
    "href": "api/AngeliA.Platformer.PoseAttack_WaveEachHand.html",
    "title": "Class PoseAttack_WaveEachHand | AngeliA",
    "summary": "Class PoseAttack_WaveEachHand Namespace: AngeliA.Platformer Assembly: com.angelia.platformer.dll Syntax public class PoseAttack_WaveEachHand : PoseAnimation Fields | Edit this page View Source TYPE_ID Declaration public static readonly int TYPE_ID Properties | Edit this page View Source StyleIndex Declaration public virtual int StyleIndex { get; } Methods | Edit this page View Source Animate(PoseCharacterRenderer) Perform the animation logic to the given character Declaration public override void Animate(PoseCharacterRenderer renderer) Overrides PoseAnimation.Animate(PoseCharacterRenderer) | Edit this page View Source SlashIn() Declaration public static void SlashIn() | Edit this page View Source SlashOut() Declaration public static void SlashOut() | Edit this page View Source SmashDown() Declaration public static void SmashDown() | Edit this page View Source SmashUp() Declaration public static void SmashUp() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.Platformer.PoseAttack_WaveEachHand_SmashOnly.html": {
    "href": "api/AngeliA.Platformer.PoseAttack_WaveEachHand_SmashOnly.html",
    "title": "Class PoseAttack_WaveEachHand_SmashOnly | AngeliA",
    "summary": "Class PoseAttack_WaveEachHand_SmashOnly Namespace: AngeliA.Platformer Assembly: com.angelia.platformer.dll Syntax public class PoseAttack_WaveEachHand_SmashOnly : PoseAttack_WaveEachHand Fields | Edit this page View Source TYPE_ID Declaration public static readonly int TYPE_ID Properties | Edit this page View Source StyleIndex Declaration public override int StyleIndex { get; } Overrides PoseAttack_WaveEachHand.StyleIndex Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.Platformer.PoseAttack_WavePolearm.html": {
    "href": "api/AngeliA.Platformer.PoseAttack_WavePolearm.html",
    "title": "Class PoseAttack_WavePolearm | AngeliA",
    "summary": "Class PoseAttack_WavePolearm Namespace: AngeliA.Platformer Assembly: com.angelia.platformer.dll Syntax public class PoseAttack_WavePolearm : PoseAnimation Fields | Edit this page View Source TYPE_ID Declaration public static readonly int TYPE_ID Properties | Edit this page View Source StyleIndex Declaration public virtual int StyleIndex { get; } Methods | Edit this page View Source Animate(PoseCharacterRenderer) Perform the animation logic to the given character Declaration public override void Animate(PoseCharacterRenderer renderer) Overrides PoseAnimation.Animate(PoseCharacterRenderer) | Edit this page View Source SlashIn() Declaration public static void SlashIn() | Edit this page View Source SlashOut() Declaration public static void SlashOut() | Edit this page View Source SmashDown() Declaration public static void SmashDown() | Edit this page View Source SmashUp() Declaration public static void SmashUp() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.Platformer.PoseAttack_WavePolearm_SmashOnly.html": {
    "href": "api/AngeliA.Platformer.PoseAttack_WavePolearm_SmashOnly.html",
    "title": "Class PoseAttack_WavePolearm_SmashOnly | AngeliA",
    "summary": "Class PoseAttack_WavePolearm_SmashOnly Namespace: AngeliA.Platformer Assembly: com.angelia.platformer.dll Syntax public class PoseAttack_WavePolearm_SmashOnly : PoseAttack_WavePolearm Fields | Edit this page View Source TYPE_ID Declaration public static readonly int TYPE_ID Properties | Edit this page View Source StyleIndex Declaration public override int StyleIndex { get; } Overrides PoseAttack_WavePolearm.StyleIndex Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.Platformer.PoseAttack_WaveSingleHanded.html": {
    "href": "api/AngeliA.Platformer.PoseAttack_WaveSingleHanded.html",
    "title": "Class PoseAttack_WaveSingleHanded | AngeliA",
    "summary": "Class PoseAttack_WaveSingleHanded Namespace: AngeliA.Platformer Assembly: com.angelia.platformer.dll Syntax public class PoseAttack_WaveSingleHanded : PoseAnimation Fields | Edit this page View Source TYPE_ID Declaration public static readonly int TYPE_ID Methods | Edit this page View Source Animate(PoseCharacterRenderer) Perform the animation logic to the given character Declaration public override void Animate(PoseCharacterRenderer renderer) Overrides PoseAnimation.Animate(PoseCharacterRenderer) | Edit this page View Source SlashIn() Declaration public static void SlashIn() | Edit this page View Source SlashOut() Declaration public static void SlashOut() | Edit this page View Source SmashDown() Declaration public static void SmashDown() | Edit this page View Source SmashUp() Declaration public static void SmashUp() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.Platformer.PoseAttack_WaveSingleHanded_SmashOnly.html": {
    "href": "api/AngeliA.Platformer.PoseAttack_WaveSingleHanded_SmashOnly.html",
    "title": "Class PoseAttack_WaveSingleHanded_SmashOnly | AngeliA",
    "summary": "Class PoseAttack_WaveSingleHanded_SmashOnly Namespace: AngeliA.Platformer Assembly: com.angelia.platformer.dll Syntax public class PoseAttack_WaveSingleHanded_SmashOnly : PoseAttack_WaveSingleHanded Fields | Edit this page View Source TYPE_ID Declaration public static readonly int TYPE_ID Methods | Edit this page View Source Animate(PoseCharacterRenderer) Perform the animation logic to the given character Declaration public override void Animate(PoseCharacterRenderer renderer) Overrides PoseAttack_WaveSingleHanded.Animate(PoseCharacterRenderer) | Edit this page View Source Smash() Declaration public static void Smash() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.Platformer.PoseHandheld_Bow.html": {
    "href": "api/AngeliA.Platformer.PoseHandheld_Bow.html",
    "title": "Class PoseHandheld_Bow | AngeliA",
    "summary": "Class PoseHandheld_Bow Namespace: AngeliA.Platformer Assembly: com.angelia.platformer.dll Syntax public class PoseHandheld_Bow : HandheldPoseAnimation Fields | Edit this page View Source TYPE_ID Declaration public static readonly int TYPE_ID Methods | Edit this page View Source Animate(PoseCharacterRenderer) Perform the animation logic to the given character Declaration public override void Animate(PoseCharacterRenderer renderer) Overrides PoseAnimation.Animate(PoseCharacterRenderer) | Edit this page View Source DrawTool(HandTool, PoseCharacterRenderer) Rendering the given handtool Declaration public override void DrawTool(HandTool tool, PoseCharacterRenderer renderer) Overrides HandheldPoseAnimation.DrawTool(HandTool, PoseCharacterRenderer) Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.Platformer.PoseHandheld_DoubleHanded.html": {
    "href": "api/AngeliA.Platformer.PoseHandheld_DoubleHanded.html",
    "title": "Class PoseHandheld_DoubleHanded | AngeliA",
    "summary": "Class PoseHandheld_DoubleHanded Namespace: AngeliA.Platformer Assembly: com.angelia.platformer.dll Syntax public class PoseHandheld_DoubleHanded : HandheldPoseAnimation Fields | Edit this page View Source TYPE_ID Declaration public static readonly int TYPE_ID Methods | Edit this page View Source Animate(PoseCharacterRenderer) Perform the animation logic to the given character Declaration public override void Animate(PoseCharacterRenderer renderer) Overrides PoseAnimation.Animate(PoseCharacterRenderer) | Edit this page View Source DrawTool(HandTool, PoseCharacterRenderer) Rendering the given handtool Declaration public override void DrawTool(HandTool tool, PoseCharacterRenderer renderer) Overrides HandheldPoseAnimation.DrawTool(HandTool, PoseCharacterRenderer) Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.Platformer.PoseHandheld_EachHand.html": {
    "href": "api/AngeliA.Platformer.PoseHandheld_EachHand.html",
    "title": "Class PoseHandheld_EachHand | AngeliA",
    "summary": "Class PoseHandheld_EachHand Namespace: AngeliA.Platformer Assembly: com.angelia.platformer.dll Syntax public class PoseHandheld_EachHand : HandheldPoseAnimation Fields | Edit this page View Source TYPE_ID Declaration public static readonly int TYPE_ID Methods | Edit this page View Source Animate(PoseCharacterRenderer) Perform the animation logic to the given character Declaration public override void Animate(PoseCharacterRenderer renderer) Overrides PoseAnimation.Animate(PoseCharacterRenderer) | Edit this page View Source DrawTool(HandTool, PoseCharacterRenderer) Rendering the given handtool Declaration public override void DrawTool(HandTool tool, PoseCharacterRenderer renderer) Overrides HandheldPoseAnimation.DrawTool(HandTool, PoseCharacterRenderer) Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.Platformer.PoseHandheld_Float.html": {
    "href": "api/AngeliA.Platformer.PoseHandheld_Float.html",
    "title": "Class PoseHandheld_Float | AngeliA",
    "summary": "Class PoseHandheld_Float Namespace: AngeliA.Platformer Assembly: com.angelia.platformer.dll Syntax public class PoseHandheld_Float : HandheldPoseAnimation Fields | Edit this page View Source TYPE_ID Declaration public static readonly int TYPE_ID Methods | Edit this page View Source Animate(PoseCharacterRenderer) Perform the animation logic to the given character Declaration public override void Animate(PoseCharacterRenderer renderer) Overrides PoseAnimation.Animate(PoseCharacterRenderer) | Edit this page View Source DrawTool(HandTool, PoseCharacterRenderer) Rendering the given handtool Declaration public override void DrawTool(HandTool tool, PoseCharacterRenderer renderer) Overrides HandheldPoseAnimation.DrawTool(HandTool, PoseCharacterRenderer) Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.Platformer.PoseHandheld_MagicPole.html": {
    "href": "api/AngeliA.Platformer.PoseHandheld_MagicPole.html",
    "title": "Class PoseHandheld_MagicPole | AngeliA",
    "summary": "Class PoseHandheld_MagicPole Namespace: AngeliA.Platformer Assembly: com.angelia.platformer.dll Syntax public class PoseHandheld_MagicPole : HandheldPoseAnimation Fields | Edit this page View Source TYPE_ID Declaration public static readonly int TYPE_ID Methods | Edit this page View Source Animate(PoseCharacterRenderer) Perform the animation logic to the given character Declaration public override void Animate(PoseCharacterRenderer renderer) Overrides PoseAnimation.Animate(PoseCharacterRenderer) | Edit this page View Source DrawTool(HandTool, PoseCharacterRenderer) Rendering the given handtool Declaration public override void DrawTool(HandTool tool, PoseCharacterRenderer renderer) Overrides HandheldPoseAnimation.DrawTool(HandTool, PoseCharacterRenderer) Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.Platformer.PoseHandheld_Polearm.html": {
    "href": "api/AngeliA.Platformer.PoseHandheld_Polearm.html",
    "title": "Class PoseHandheld_Polearm | AngeliA",
    "summary": "Class PoseHandheld_Polearm Namespace: AngeliA.Platformer Assembly: com.angelia.platformer.dll Syntax public class PoseHandheld_Polearm : HandheldPoseAnimation Fields | Edit this page View Source TYPE_ID Declaration public static readonly int TYPE_ID Methods | Edit this page View Source Animate(PoseCharacterRenderer) Perform the animation logic to the given character Declaration public override void Animate(PoseCharacterRenderer renderer) Overrides PoseAnimation.Animate(PoseCharacterRenderer) | Edit this page View Source DrawTool(HandTool, PoseCharacterRenderer) Rendering the given handtool Declaration public override void DrawTool(HandTool tool, PoseCharacterRenderer renderer) Overrides HandheldPoseAnimation.DrawTool(HandTool, PoseCharacterRenderer) Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.Platformer.PoseHandheld_Shooting.html": {
    "href": "api/AngeliA.Platformer.PoseHandheld_Shooting.html",
    "title": "Class PoseHandheld_Shooting | AngeliA",
    "summary": "Class PoseHandheld_Shooting Namespace: AngeliA.Platformer Assembly: com.angelia.platformer.dll Syntax public class PoseHandheld_Shooting : HandheldPoseAnimation Fields | Edit this page View Source TYPE_ID Declaration public static readonly int TYPE_ID Methods | Edit this page View Source Animate(PoseCharacterRenderer) Perform the animation logic to the given character Declaration public override void Animate(PoseCharacterRenderer renderer) Overrides PoseAnimation.Animate(PoseCharacterRenderer) | Edit this page View Source DrawTool(HandTool, PoseCharacterRenderer) Rendering the given handtool Declaration public override void DrawTool(HandTool tool, PoseCharacterRenderer renderer) Overrides HandheldPoseAnimation.DrawTool(HandTool, PoseCharacterRenderer) Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.Platformer.PoseHandheld_SingleHanded.html": {
    "href": "api/AngeliA.Platformer.PoseHandheld_SingleHanded.html",
    "title": "Class PoseHandheld_SingleHanded | AngeliA",
    "summary": "Class PoseHandheld_SingleHanded Namespace: AngeliA.Platformer Assembly: com.angelia.platformer.dll Syntax public class PoseHandheld_SingleHanded : HandheldPoseAnimation Fields | Edit this page View Source TYPE_ID Declaration public static readonly int TYPE_ID Methods | Edit this page View Source Animate(PoseCharacterRenderer) Perform the animation logic to the given character Declaration public override void Animate(PoseCharacterRenderer renderer) Overrides PoseAnimation.Animate(PoseCharacterRenderer) | Edit this page View Source DrawTool(HandTool, PoseCharacterRenderer) Rendering the given handtool Declaration public override void DrawTool(HandTool tool, PoseCharacterRenderer renderer) Overrides HandheldPoseAnimation.DrawTool(HandTool, PoseCharacterRenderer) Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.Platformer.PoseHandheld_Throwing.html": {
    "href": "api/AngeliA.Platformer.PoseHandheld_Throwing.html",
    "title": "Class PoseHandheld_Throwing | AngeliA",
    "summary": "Class PoseHandheld_Throwing Namespace: AngeliA.Platformer Assembly: com.angelia.platformer.dll Syntax public class PoseHandheld_Throwing : HandheldPoseAnimation Fields | Edit this page View Source TYPE_ID Declaration public static readonly int TYPE_ID Methods | Edit this page View Source Animate(PoseCharacterRenderer) Perform the animation logic to the given character Declaration public override void Animate(PoseCharacterRenderer renderer) Overrides PoseAnimation.Animate(PoseCharacterRenderer) | Edit this page View Source DrawTool(HandTool, PoseCharacterRenderer) Rendering the given handtool Declaration public override void DrawTool(HandTool tool, PoseCharacterRenderer renderer) Overrides HandheldPoseAnimation.DrawTool(HandTool, PoseCharacterRenderer) Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.Platformer.ProjectileWeapon-1.html": {
    "href": "api/AngeliA.Platformer.ProjectileWeapon-1.html",
    "title": "Class ProjectileWeapon<B> | AngeliA",
    "summary": "Class ProjectileWeapon<B> Implements IMapItem Namespace: AngeliA.Platformer Assembly: com.angelia.platformer.dll Syntax public abstract class ProjectileWeapon<B> : Weapon<B>, IMapItem where B : MovableBullet Type Parameters Name Description B Properties | Edit this page View Source AdditionalBulletSpeedForward Declaration protected virtual int AdditionalBulletSpeedForward { get; } | Edit this page View Source AdditionalBulletSpeedSide Declaration protected virtual int AdditionalBulletSpeedSide { get; } | Edit this page View Source AngleSpeedDelta Declaration public virtual int AngleSpeedDelta { get; } | Edit this page View Source BulletCountInOneShot Declaration public virtual int BulletCountInOneShot { get; } | Edit this page View Source BulletPivotY Declaration protected virtual int BulletPivotY { get; } | Edit this page View Source ForceBulletCountNextShot Declaration protected int ForceBulletCountNextShot { get; set; } Methods | Edit this page View Source SpawnBullet(Character) Spawn the bullet entity Declaration public override Bullet SpawnBullet(Character sender) Parameters Type Name Description Character sender Character that use the weapon Returns Type Description Bullet Instance of the spawned bullet entity. Return null when invalid Overrides Weapon.SpawnBullet(Character) Implements IMapItem Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.Platformer.RideableMovement.html": {
    "href": "api/AngeliA.Platformer.RideableMovement.html",
    "title": "Class RideableMovement | AngeliA",
    "summary": "Class RideableMovement Namespace: AngeliA.Platformer Assembly: com.angelia.platformer.dll Syntax public class RideableMovement : VehicleMovement Constructors | Edit this page View Source RideableMovement(Rigidbody) Declaration public RideableMovement(Rigidbody rig) Methods | Edit this page View Source InitializeMeta() Declaration protected override void InitializeMeta() Overrides VehicleMovement.InitializeMeta() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.Platformer.RideableVehicle-1.html": {
    "href": "api/AngeliA.Platformer.RideableVehicle-1.html",
    "title": "Class RideableVehicle<RM> | AngeliA",
    "summary": "Class RideableVehicle<RM> Implements IMapItem IDamageReceiver ICarrier IWithCharacterMovement Namespace: AngeliA.Platformer Assembly: com.angelia.platformer.dll Syntax public abstract class RideableVehicle<RM> : Vehicle<RM>, IMapItem, IDamageReceiver, ICarrier, IWithCharacterMovement where RM : RideableMovement Type Parameters Name Description RM Constructors | Edit this page View Source RideableVehicle() Declaration public RideableVehicle() Fields | Edit this page View Source Navigation Declaration protected readonly RigidbodyNavigation Navigation Properties | Edit this page View Source AllowFreeWandering Declaration protected virtual bool AllowFreeWandering { get; } | Edit this page View Source StartDriveCooldown Declaration public override int StartDriveCooldown { get; } Overrides Vehicle.StartDriveCooldown Methods | Edit this page View Source BeforeUpdate() [2/4] This function is called every frame when entity is in stage. Prioritize using this function to update physics logic. Declaration public override void BeforeUpdate() Overrides Vehicle.BeforeUpdate() | Edit this page View Source CheckForStartDrive(out Character) Declaration protected override bool CheckForStartDrive(out Character driver) Overrides Vehicle.CheckForStartDrive(out Character) | Edit this page View Source CheckForStopDrive() Declaration protected override bool CheckForStopDrive() Overrides Vehicle.CheckForStopDrive() | Edit this page View Source OnActivated() This function is called when entity enter the stage Declaration public override void OnActivated() Overrides Vehicle.OnActivated() | Edit this page View Source OverrideDriverAnimation(PoseCharacterRenderer) Declaration protected virtual void OverrideDriverAnimation(PoseCharacterRenderer renderer) | Edit this page View Source StopDrive() Declaration public override void StopDrive() Overrides Vehicle.StopDrive() | Edit this page View Source Update() [3/4] This function is called every frame when entity is in stage. Prioritize using this function to update physics logic. Declaration public override void Update() Overrides Vehicle.Update() Implements IMapItem IDamageReceiver ICarrier IWithCharacterMovement Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.Platformer.RigidbodyNavigation.html": {
    "href": "api/AngeliA.Platformer.RigidbodyNavigation.html",
    "title": "Class RigidbodyNavigation | AngeliA",
    "summary": "Class RigidbodyNavigation Namespace: AngeliA.Platformer Assembly: com.angelia.platformer.dll Syntax public class RigidbodyNavigation Constructors | Edit this page View Source RigidbodyNavigation(Rigidbody) Declaration public RigidbodyNavigation(Rigidbody target) Fields | Edit this page View Source Target Declaration public readonly Rigidbody Target Properties | Edit this page View Source ClampInSpawnRect Declaration public virtual bool ClampInSpawnRect { get; } | Edit this page View Source DefaultFlySpeed Declaration public virtual int DefaultFlySpeed { get; } | Edit this page View Source DefaultRunSpeed Declaration public virtual int DefaultRunSpeed { get; } | Edit this page View Source EndFlyDistance Declaration public virtual int EndFlyDistance { get; } | Edit this page View Source EndMoveDistance Declaration public virtual int EndMoveDistance { get; } | Edit this page View Source EndMoveSlowDown Declaration public virtual int EndMoveSlowDown { get; } | Edit this page View Source HasPerformableOperation Declaration public bool HasPerformableOperation { get; } | Edit this page View Source InstanceShift Declaration public virtual int InstanceShift { get; } | Edit this page View Source JumpSpeed Declaration public virtual int JumpSpeed { get; } | Edit this page View Source MaxJumpDuration Declaration public virtual int MaxJumpDuration { get; } | Edit this page View Source MinimumFlyDuration Declaration public virtual int MinimumFlyDuration { get; } | Edit this page View Source NavigationAim Declaration public Int2 NavigationAim { get; set; } | Edit this page View Source NavigationAimGrounded Declaration public bool NavigationAimGrounded { get; set; } | Edit this page View Source NavigationEnable Declaration public virtual bool NavigationEnable { get; } | Edit this page View Source NavigationState Declaration public RigidbodyNavigationState NavigationState { get; set; } | Edit this page View Source StartFlyDistance Declaration public virtual int StartFlyDistance { get; } | Edit this page View Source StartMoveDistance Declaration public virtual int StartMoveDistance { get; } | Edit this page View Source TeleportWhenCantFly Declaration public virtual bool TeleportWhenCantFly { get; } Methods | Edit this page View Source OnActivated() Declaration public virtual void OnActivated() | Edit this page View Source PhysicsUpdate() Declaration public virtual void PhysicsUpdate() | Edit this page View Source ResetNavigation() Declaration public void ResetNavigation() | Edit this page View Source SetNavigationAim(Int2, bool) Declaration public void SetNavigationAim(Int2 newAim, bool grounded) Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.Platformer.RigidbodyNavigationState.html": {
    "href": "api/AngeliA.Platformer.RigidbodyNavigationState.html",
    "title": "Enum RigidbodyNavigationState | AngeliA",
    "summary": "Enum RigidbodyNavigationState Namespace: AngeliA.Platformer Assembly: com.angelia.platformer.dll Syntax public enum RigidbodyNavigationState Fields Name Description Fly Idle Operation Extension Methods Extension.Next<RigidbodyNavigationState>(RigidbodyNavigationState) Extension.Prev<RigidbodyNavigationState>(RigidbodyNavigationState) Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.Platformer.Shoes-2.html": {
    "href": "api/AngeliA.Platformer.Shoes-2.html",
    "title": "Class Shoes<P, N> | AngeliA",
    "summary": "Class Shoes<P, N> Implements IMapItem IProgressiveItem Namespace: AngeliA.Platformer Assembly: com.angelia.platformer.dll Syntax public abstract class Shoes<P, N> : Armor<P, N>, IMapItem, IProgressiveItem where P : Equipment where N : Equipment Type Parameters Name Description P N Constructors | Edit this page View Source Shoes() Declaration public Shoes() Properties | Edit this page View Source EquipmentType Which type is this quipment Declaration public override sealed EquipmentType EquipmentType { get; } Overrides Equipment.EquipmentType Methods | Edit this page View Source DrawArmor(PoseCharacterRenderer) Declaration protected override void DrawArmor(PoseCharacterRenderer renderer) Overrides Armor<P, N>.DrawArmor(PoseCharacterRenderer) Implements IMapItem IProgressiveItem Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.Platformer.Slime.html": {
    "href": "api/AngeliA.Platformer.Slime.html",
    "title": "Class Slime | AngeliA",
    "summary": "Class Slime Implements IMapItem IDamageReceiver ICarrier IWithCharacterMovement IWithCharacterAttackness IWithCharacterHealth IWithCharacterBuff IWithCharacterRenderer Namespace: AngeliA.Platformer Assembly: com.angelia.platformer.dll Syntax public abstract class Slime : Enemy, IMapItem, IDamageReceiver, ICarrier, IWithCharacterMovement, IWithCharacterAttackness, IWithCharacterHealth, IWithCharacterBuff, IWithCharacterRenderer Properties | Edit this page View Source AllowBeingPush True if this entity can be push by other Declaration public override bool AllowBeingPush { get; } Overrides Character.AllowBeingPush | Edit this page View Source AttachingDirection When this value is \"Up\" the walker will be upside-down. \"Center\" means not attaching anything. Declaration public Direction5 AttachingDirection { get; set; } | Edit this page View Source AttachingID Declaration public int AttachingID { get; set; } | Edit this page View Source AttachingRect Declaration public IRect AttachingRect { get; set; } | Edit this page View Source AttachingTarget Declaration public Entity AttachingTarget { get; set; } | Edit this page View Source EjectWhenInsideGround True if this entity try to move out of ground automatically when it stuck inside ground Declaration public override bool EjectWhenInsideGround { get; } Overrides Character.EjectWhenInsideGround | Edit this page View Source FacingPositive Declaration public bool FacingPositive { get; set; } | Edit this page View Source LocalPosition Declaration public Int2 LocalPosition { get; set; } | Edit this page View Source Rect Rect position of this entity in global space Declaration public override IRect Rect { get; } Overrides Rigidbody.Rect | Edit this page View Source WalkSpeed Declaration public int WalkSpeed { get; } Methods | Edit this page View Source FirstUpdate() [1/4] This function is called every frame when entity is in stage. Prioritize using this function to fill collider in to physics system. Declaration public override void FirstUpdate() Overrides Enemy.FirstUpdate() | Edit this page View Source GroundedCheck() Function that holds the touching ground checking logic Declaration protected override bool GroundedCheck() Overrides Rigidbody.GroundedCheck() | Edit this page View Source InsideGroundCheck() Function that holds the stuch inside ground checking logic Declaration protected override bool InsideGroundCheck() Overrides Character.InsideGroundCheck() | Edit this page View Source OnActivated() This function is called when entity enter the stage Declaration public override void OnActivated() Overrides Enemy.OnActivated() | Edit this page View Source OnCharacterRendered() This function is called after character is rendered Declaration public override void OnCharacterRendered() Overrides Character.OnCharacterRendered() | Edit this page View Source OnDamaged(Damage) This function is called when character take damage Declaration public override void OnDamaged(Damage damage) Overrides Enemy.OnDamaged(Damage) | Edit this page View Source Update() [3/4] This function is called every frame when entity is in stage. Prioritize using this function to update physics logic. Declaration public override void Update() Overrides Character.Update() Implements IMapItem IDamageReceiver ICarrier IWithCharacterMovement IWithCharacterAttackness IWithCharacterHealth IWithCharacterBuff IWithCharacterRenderer Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.Platformer.Slope.html": {
    "href": "api/AngeliA.Platformer.Slope.html",
    "title": "Class Slope | AngeliA",
    "summary": "Class Slope Implements IMapItem IBlockEntity Namespace: AngeliA.Platformer Assembly: com.angelia.platformer.dll Syntax [Entity.Layer(3)] [Entity.StageOrder(-2048)] public abstract class Slope : Entity, IMapItem, IBlockEntity Properties | Edit this page View Source CollisionMask Declaration public virtual int CollisionMask { get; } | Edit this page View Source DirectionHorizontal Declaration public abstract Direction2 DirectionHorizontal { get; } | Edit this page View Source DirectionVertical Declaration public abstract Direction2 DirectionVertical { get; } Methods | Edit this page View Source BeforeUpdate() [2/4] This function is called every frame when entity is in stage. Prioritize using this function to update physics logic. Declaration public override void BeforeUpdate() Overrides Entity.BeforeUpdate() | Edit this page View Source FirstUpdate() [1/4] This function is called every frame when entity is in stage. Prioritize using this function to fill collider in to physics system. Declaration public override void FirstUpdate() Overrides Entity.FirstUpdate() | Edit this page View Source LateUpdate() [4/4] This function is called every frame when entity is in stage. Prioritize using this function to render the entity. Declaration public override void LateUpdate() Overrides Entity.LateUpdate() Implements IMapItem IBlockEntity Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.Platformer.Spring.html": {
    "href": "api/AngeliA.Platformer.Spring.html",
    "title": "Class Spring | AngeliA",
    "summary": "Class Spring Implements IMapItem ICarrier IBlockEntity IAutoTrackWalker IRouteWalker Namespace: AngeliA.Platformer Assembly: com.angelia.platformer.dll Syntax [Entity.Layer(3)] [Entity.RepositionWhenInactive(true)] [Entity.MapEditorGroup(\"Contraption\", 0)] public abstract class Spring : Rigidbody, IMapItem, ICarrier, IBlockEntity, IAutoTrackWalker, IRouteWalker Properties | Edit this page View Source AllowBeingPush True if this entity can be push by other Declaration public override bool AllowBeingPush { get; } Overrides Rigidbody.AllowBeingPush | Edit this page View Source ArtworkRotation Declaration public int ArtworkRotation { get; set; } | Edit this page View Source Horizontal Declaration protected abstract bool Horizontal { get; } | Edit this page View Source PhysicalLayer Which physical layer should this entity fill it's collider in Declaration public override int PhysicalLayer { get; } Overrides Rigidbody.PhysicalLayer | Edit this page View Source Power Declaration protected abstract int Power { get; } Methods | Edit this page View Source BeforeUpdate() [2/4] This function is called every frame when entity is in stage. Prioritize using this function to update physics logic. Declaration public override void BeforeUpdate() Overrides Entity.BeforeUpdate() | Edit this page View Source LateUpdate() [4/4] This function is called every frame when entity is in stage. Prioritize using this function to render the entity. Declaration public override void LateUpdate() Overrides Entity.LateUpdate() | Edit this page View Source OnActivated() This function is called when entity enter the stage Declaration public override void OnActivated() Overrides Rigidbody.OnActivated() Implements IMapItem ICarrier IBlockEntity IAutoTrackWalker IRouteWalker Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.Platformer.StepTriggerPlatform.html": {
    "href": "api/AngeliA.Platformer.StepTriggerPlatform.html",
    "title": "Class StepTriggerPlatform | AngeliA",
    "summary": "Class StepTriggerPlatform Implements IMapItem IBlockEntity IUnitable ICircuitOperator Namespace: AngeliA.Platformer Assembly: com.angelia.platformer.dll Syntax public abstract class StepTriggerPlatform : TriggerablePlatform, IMapItem, IBlockEntity, IUnitable, ICircuitOperator Properties | Edit this page View Source TriggerOnCharacterTouch Declaration protected virtual bool TriggerOnCharacterTouch { get; } | Edit this page View Source TriggerOnPlayerTouch Declaration protected virtual bool TriggerOnPlayerTouch { get; } | Edit this page View Source TriggerOnRigidbodyTouch Declaration protected virtual bool TriggerOnRigidbodyTouch { get; } Methods | Edit this page View Source OnCharacterTouched(Character) Declaration protected override void OnCharacterTouched(Character character) Overrides Platform.OnCharacterTouched(Character) | Edit this page View Source OnPlayerTouched(Character) Declaration protected override void OnPlayerTouched(Character player) Overrides Platform.OnPlayerTouched(Character) | Edit this page View Source OnRigidbodyTouched(Rigidbody) Declaration protected override void OnRigidbodyTouched(Rigidbody rig) Overrides Platform.OnRigidbodyTouched(Rigidbody) Implements IMapItem IBlockEntity IUnitable ICircuitOperator Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.Platformer.Summon.html": {
    "href": "api/AngeliA.Platformer.Summon.html",
    "title": "Class Summon | AngeliA",
    "summary": "Class Summon Implements IMapItem ICarrier IWithCharacterMovement IWithCharacterAttackness IWithCharacterHealth IWithCharacterBuff IWithCharacterRenderer IDamageReceiver IActionTarget Namespace: AngeliA.Platformer Assembly: com.angelia.platformer.dll Syntax [Entity.Capacity(128, 0)] public abstract class Summon : Character, IMapItem, ICarrier, IWithCharacterMovement, IWithCharacterAttackness, IWithCharacterHealth, IWithCharacterBuff, IWithCharacterRenderer, IDamageReceiver, IActionTarget Constructors | Edit this page View Source Summon() Declaration public Summon() Properties | Edit this page View Source AllowBeingPush True if this entity can be push by other Declaration public override bool AllowBeingPush { get; } Overrides Character.AllowBeingPush | Edit this page View Source AllowRescueWhenPassout Declaration public virtual bool AllowRescueWhenPassout { get; } | Edit this page View Source AttackTargetTeam Target team for dealing damage to other Declaration public override int AttackTargetTeam { get; } Overrides Character.AttackTargetTeam | Edit this page View Source CarryOtherOnTop Trhe if this entity can carry other ICarrier on top Declaration public override bool CarryOtherOnTop { get; } Overrides Character.CarryOtherOnTop | Edit this page View Source InventoryUpdatedFrame Declaration public int InventoryUpdatedFrame { get; set; } | Edit this page View Source Navigation Declaration public SummonNavigation Navigation { get; init; } | Edit this page View Source Owner Declaration public Character Owner { get; set; } | Edit this page View Source RequireOwner Declaration public virtual bool RequireOwner { get; } | Edit this page View Source Team Target team for taking damage from other Declaration public override int Team { get; } Overrides Character.Team Methods | Edit this page View Source CreateNativeAttackness() Create new instance for character's intrinsic attackness behaviour Declaration protected override CharacterAttackness CreateNativeAttackness() Overrides Character.CreateNativeAttackness() | Edit this page View Source CreateSummon(Character, int, int, int, bool) Declaration public static Summon CreateSummon(Character owner, int typeID, int x, int y, bool forceCreate = false) | Edit this page View Source CreateSummonNavigation() Declaration protected virtual SummonNavigation CreateSummonNavigation() | Edit this page View Source CreateSummon<T>(Character, int, int, bool) Declaration public static T CreateSummon<T>(Character owner, int x, int y, bool forceCreate = false) where T : Summon | Edit this page View Source FirstUpdate() [1/4] This function is called every frame when entity is in stage. Prioritize using this function to fill collider in to physics system. Declaration public override void FirstUpdate() Overrides Character.FirstUpdate() | Edit this page View Source LateUpdate() [4/4] This function is called every frame when entity is in stage. Prioritize using this function to render the entity. Declaration public override void LateUpdate() Overrides Character.LateUpdate() | Edit this page View Source OnActivated() This function is called when entity enter the stage Declaration public override void OnActivated() Overrides Character.OnActivated() | Edit this page View Source OnDamaged(Damage) This function is called when character take damage Declaration public override void OnDamaged(Damage damage) Overrides Character.OnDamaged(Damage) | Edit this page View Source OnInactivated() This function is called when entity leave the stage Declaration public override void OnInactivated() Overrides Character.OnInactivated() | Edit this page View Source OnSummoned(bool) Declaration public virtual void OnSummoned(bool create) | Edit this page View Source SetCharacterState(CharacterState) Set character's general game state, ignore when state already is the current one Declaration public override void SetCharacterState(CharacterState state) Overrides Character.SetCharacterState(CharacterState) | Edit this page View Source Update() [3/4] This function is called every frame when entity is in stage. Prioritize using this function to update physics logic. Declaration public override void Update() Overrides Character.Update() Implements IMapItem ICarrier IWithCharacterMovement IWithCharacterAttackness IWithCharacterHealth IWithCharacterBuff IWithCharacterRenderer IDamageReceiver IActionTarget Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.Platformer.SummonItem-1.html": {
    "href": "api/AngeliA.Platformer.SummonItem-1.html",
    "title": "Class SummonItem<T> | AngeliA",
    "summary": "Class SummonItem<T> Implements IMapItem Namespace: AngeliA.Platformer Assembly: com.angelia.platformer.dll Syntax public abstract class SummonItem<T> : Item, IMapItem where T : ItemBasedSummon Type Parameters Name Description T Properties | Edit this page View Source MaxStackCount Count limitation for multiple items inside one inventory slot Declaration public override int MaxStackCount { get; } Overrides Item.MaxStackCount Methods | Edit this page View Source OnItemUpdate_FromInventory(Character, int, int) This function is called every frame when this item is in an holder's inventory Declaration public override void OnItemUpdate_FromInventory(Character holder, int inventoryID, int itemIndex) Parameters Type Name Description Character holder The holder of the inventory int inventoryID ID of the inventory Overrides Item.OnItemUpdate_FromInventory(Character, int, int) | Edit this page View Source SpawnSummonFromItem(Character) Declaration public T SpawnSummonFromItem(Character owner) Implements IMapItem Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.Platformer.SummonNavigation.html": {
    "href": "api/AngeliA.Platformer.SummonNavigation.html",
    "title": "Class SummonNavigation | AngeliA",
    "summary": "Class SummonNavigation Namespace: AngeliA.Platformer Assembly: com.angelia.platformer.dll Syntax public class SummonNavigation : RigidbodyNavigation Constructors | Edit this page View Source SummonNavigation(Summon) Declaration public SummonNavigation(Summon target) Properties | Edit this page View Source ClampInSpawnRect Declaration public override bool ClampInSpawnRect { get; } Overrides RigidbodyNavigation.ClampInSpawnRect | Edit this page View Source EndFlyDistance Declaration public override int EndFlyDistance { get; } Overrides RigidbodyNavigation.EndFlyDistance | Edit this page View Source EndMoveDistance Declaration public override int EndMoveDistance { get; } Overrides RigidbodyNavigation.EndMoveDistance | Edit this page View Source InstanceShift Declaration public override int InstanceShift { get; } Overrides RigidbodyNavigation.InstanceShift | Edit this page View Source IsFollowingOwner Declaration public bool IsFollowingOwner { get; } | Edit this page View Source IsWandering Declaration public bool IsWandering { get; } | Edit this page View Source JumpSpeed Declaration public override int JumpSpeed { get; } Overrides RigidbodyNavigation.JumpSpeed | Edit this page View Source MaxJumpDuration Declaration public override int MaxJumpDuration { get; } Overrides RigidbodyNavigation.MaxJumpDuration | Edit this page View Source MinimumFlyDuration Declaration public override int MinimumFlyDuration { get; } Overrides RigidbodyNavigation.MinimumFlyDuration | Edit this page View Source NavigationEnable Declaration public override bool NavigationEnable { get; } Overrides RigidbodyNavigation.NavigationEnable | Edit this page View Source StartFlyDistance Declaration public override int StartFlyDistance { get; } Overrides RigidbodyNavigation.StartFlyDistance | Edit this page View Source StartMoveDistance Declaration public override int StartMoveDistance { get; } Overrides RigidbodyNavigation.StartMoveDistance Methods | Edit this page View Source MakeFollowOwner() Declaration public void MakeFollowOwner() | Edit this page View Source MakeWander(int, int) Declaration public void MakeWander(int x, int y) | Edit this page View Source MakeWander<E>() Declaration public bool MakeWander<E>() where E : Entity | Edit this page View Source OnActivated() Declaration public override void OnActivated() Overrides RigidbodyNavigation.OnActivated() | Edit this page View Source PhysicsUpdate() Declaration public override void PhysicsUpdate() Overrides RigidbodyNavigation.PhysicsUpdate() | Edit this page View Source Refresh() Declaration public void Refresh() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.Platformer.Table.html": {
    "href": "api/AngeliA.Platformer.Table.html",
    "title": "Class Table | AngeliA",
    "summary": "Class Table Implements IMapItem IBlockEntity Namespace: AngeliA.Platformer Assembly: com.angelia.platformer.dll Syntax public abstract class Table : Furniture, IMapItem, IBlockEntity Properties | Edit this page View Source ModuleType Declaration protected override Direction3 ModuleType { get; } Overrides Furniture.ModuleType Implements IMapItem IBlockEntity Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.Platformer.TechGlitchEffectScope.html": {
    "href": "api/AngeliA.Platformer.TechGlitchEffectScope.html",
    "title": "Struct TechGlitchEffectScope | AngeliA",
    "summary": "Struct TechGlitchEffectScope Implements IDisposable Namespace: AngeliA.Platformer Assembly: com.angelia.platformer.dll Syntax public readonly struct TechGlitchEffectScope : IDisposable Constructors | Edit this page View Source TechGlitchEffectScope() Declaration public TechGlitchEffectScope() | Edit this page View Source TechGlitchEffectScope(int, Color32) Declaration public TechGlitchEffectScope(int range, Color32 tint = default) Methods | Edit this page View Source Dispose() Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources. Declaration public void Dispose() Implements IDisposable Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.Platformer.TeleportTask.html": {
    "href": "api/AngeliA.Platformer.TeleportTask.html",
    "title": "Class TeleportTask | AngeliA",
    "summary": "Class TeleportTask Namespace: AngeliA.Platformer Assembly: com.angelia.platformer.dll Syntax public class TeleportTask : Task Properties | Edit this page View Source Duration Declaration public int Duration { get; set; } | Edit this page View Source TeleportFrom Declaration public Int2 TeleportFrom { get; set; } | Edit this page View Source TeleportTo Declaration public Int3 TeleportTo { get; set; } | Edit this page View Source UseParallax Declaration public bool UseParallax { get; set; } | Edit this page View Source UseVignette Declaration public bool UseVignette { get; set; } | Edit this page View Source WaitDuration Declaration public int WaitDuration { get; set; } Methods | Edit this page View Source FrameUpdate() Declaration public override TaskResult FrameUpdate() Overrides Task.FrameUpdate() | Edit this page View Source OnStart() Declaration public override void OnStart() Overrides Task.OnStart() | Edit this page View Source TeleportFromDoor(int, int, int, int, int) Declaration public static TeleportTask TeleportFromDoor(int fromX, int fromY, int toX, int toY, int toZ) | Edit this page View Source TeleportFromPortal(int, int, int, int, int, bool) Declaration public static TeleportTask TeleportFromPortal(int fromX, int fromY, int toX, int toY, int toZ, bool samePosition) Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.Platformer.Tornado.html": {
    "href": "api/AngeliA.Platformer.Tornado.html",
    "title": "Class Tornado | AngeliA",
    "summary": "Class Tornado Implements IMapItem Namespace: AngeliA.Platformer Assembly: com.angelia.platformer.dll Syntax [Entity.Layer(3)] public abstract class Tornado : Entity, IMapItem Properties | Edit this page View Source ArtworkPart Declaration protected virtual SpriteCode ArtworkPart { get; } | Edit this page View Source StiffFrameGap Declaration protected virtual int StiffFrameGap { get; } | Edit this page View Source StrengthGrounded Declaration protected virtual int StrengthGrounded { get; } | Edit this page View Source StrengthInAir Declaration protected virtual int StrengthInAir { get; } | Edit this page View Source Velocity Declaration protected abstract Int2 Velocity { get; } Methods | Edit this page View Source BeforeUpdate() [2/4] This function is called every frame when entity is in stage. Prioritize using this function to update physics logic. Declaration public override void BeforeUpdate() Overrides Entity.BeforeUpdate() | Edit this page View Source LateUpdate() [4/4] This function is called every frame when entity is in stage. Prioritize using this function to render the entity. Declaration public override void LateUpdate() Overrides Entity.LateUpdate() | Edit this page View Source OnActivated() This function is called when entity enter the stage Declaration public override void OnActivated() Overrides Entity.OnActivated() Implements IMapItem Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.Platformer.Track.html": {
    "href": "api/AngeliA.Platformer.Track.html",
    "title": "Class Track | AngeliA",
    "summary": "Class Track Implements IMapItem IBlockEntity Namespace: AngeliA.Platformer Assembly: com.angelia.platformer.dll Syntax [Entity.MapEditorGroup(\"Contraption\", 0)] [Entity.Layer(3)] public abstract class Track : Entity, IMapItem, IBlockEntity Properties | Edit this page View Source AllowStraightConnection Declaration protected virtual bool AllowStraightConnection { get; } | Edit this page View Source AllowTiltConnection Declaration protected virtual bool AllowTiltConnection { get; } | Edit this page View Source BodySprite Declaration protected abstract SpriteCode BodySprite { get; } | Edit this page View Source BodyTiltSprite Declaration protected abstract SpriteCode BodyTiltSprite { get; } | Edit this page View Source CenterSprite Declaration protected abstract SpriteCode CenterSprite { get; } | Edit this page View Source HangGap Declaration protected virtual int HangGap { get; } | Edit this page View Source LoadItemFromMapElement Declaration protected virtual bool LoadItemFromMapElement { get; } | Edit this page View Source SlowDownWhenWalkerOverlap Declaration protected virtual bool SlowDownWhenWalkerOverlap { get; } | Edit this page View Source Speed Declaration protected virtual int Speed { get; } | Edit this page View Source TurnBackWhenReachEnd Declaration protected virtual bool TurnBackWhenReachEnd { get; } Methods | Edit this page View Source BeforeUpdate() [2/4] This function is called every frame when entity is in stage. Prioritize using this function to update physics logic. Declaration public override void BeforeUpdate() Overrides Entity.BeforeUpdate() | Edit this page View Source FirstUpdate() [1/4] This function is called every frame when entity is in stage. Prioritize using this function to fill collider in to physics system. Declaration public override void FirstUpdate() Overrides Entity.FirstUpdate() | Edit this page View Source IsConnected(Direction8) Declaration public bool IsConnected(Direction8 direction) | Edit this page View Source LateUpdate() [4/4] This function is called every frame when entity is in stage. Prioritize using this function to render the entity. Declaration public override void LateUpdate() Overrides Entity.LateUpdate() | Edit this page View Source OnActivated() This function is called when entity enter the stage Declaration public override void OnActivated() Overrides Entity.OnActivated() | Edit this page View Source OnEntityRefresh() This function is called when there are map changes happens nearby and the entity needs to refresh itself Declaration public void OnEntityRefresh() | Edit this page View Source OnWalking(IAutoTrackWalker) Declaration protected virtual void OnWalking(IAutoTrackWalker walker) Implements IMapItem IBlockEntity Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.Platformer.TrapDoor.html": {
    "href": "api/AngeliA.Platformer.TrapDoor.html",
    "title": "Class TrapDoor | AngeliA",
    "summary": "Class TrapDoor Implements IMapItem IBlockEntity ICircuitOperator Namespace: AngeliA.Platformer Assembly: com.angelia.platformer.dll Syntax [Entity.Layer(3)] [Entity.MapEditorGroup(\"Contraption\", 0)] public abstract class TrapDoor : Entity, IMapItem, IBlockEntity, ICircuitOperator Properties | Edit this page View Source IsOpening Declaration public bool IsOpening { get; set; } | Edit this page View Source LastSwitchFrame Declaration public int LastSwitchFrame { get; } | Edit this page View Source OpenDelay Declaration public virtual int OpenDelay { get; } | Edit this page View Source OpenDuration Declaration public virtual int OpenDuration { get; } | Edit this page View Source TriggerByCircuit Declaration public virtual bool TriggerByCircuit { get; } | Edit this page View Source TriggerWhenStepOn Declaration public virtual bool TriggerWhenStepOn { get; } Methods | Edit this page View Source BeforeUpdate() [2/4] This function is called every frame when entity is in stage. Prioritize using this function to update physics logic. Declaration public override void BeforeUpdate() Overrides Entity.BeforeUpdate() | Edit this page View Source Close() Declaration public virtual void Close() | Edit this page View Source FirstUpdate() [1/4] This function is called every frame when entity is in stage. Prioritize using this function to fill collider in to physics system. Declaration public override void FirstUpdate() Overrides Entity.FirstUpdate() | Edit this page View Source HitCheck() Declaration protected virtual bool HitCheck() | Edit this page View Source OnActivated() This function is called when entity enter the stage Declaration public override void OnActivated() Overrides Entity.OnActivated() | Edit this page View Source OnTriggeredByCircuit() This function is called when the operator get triggered by the system Declaration public void OnTriggeredByCircuit() | Edit this page View Source Open() Declaration public virtual void Open() Implements IMapItem IBlockEntity ICircuitOperator Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.Platformer.TriggerablePlatform.html": {
    "href": "api/AngeliA.Platformer.TriggerablePlatform.html",
    "title": "Class TriggerablePlatform | AngeliA",
    "summary": "Class TriggerablePlatform Implements IMapItem IBlockEntity IUnitable ICircuitOperator Namespace: AngeliA.Platformer Assembly: com.angelia.platformer.dll Syntax public abstract class TriggerablePlatform : Platform, IMapItem, IBlockEntity, IUnitable, ICircuitOperator Properties | Edit this page View Source AllowMultipleTrigger Declaration protected virtual bool AllowMultipleTrigger { get; } | Edit this page View Source LastTriggerFrame Declaration public int LastTriggerFrame { get; } | Edit this page View Source TriggerMode Declaration protected virtual IUnitable.UniteMode TriggerMode { get; } | Edit this page View Source TriggeredData Declaration protected object TriggeredData { get; set; } Methods | Edit this page View Source OnActivated() This function is called when entity enter the stage Declaration public override void OnActivated() Overrides Platform.OnActivated() | Edit this page View Source OnTriggered(object) Declaration protected virtual void OnTriggered(object data) | Edit this page View Source Trigger(object) Declaration public virtual void Trigger(object data = null) Implements IMapItem IBlockEntity IUnitable ICircuitOperator Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.Platformer.Vehicle-1.html": {
    "href": "api/AngeliA.Platformer.Vehicle-1.html",
    "title": "Class Vehicle<M> | AngeliA",
    "summary": "Class Vehicle<M> Implements IMapItem IDamageReceiver ICarrier IWithCharacterMovement Namespace: AngeliA.Platformer Assembly: com.angelia.platformer.dll Syntax public abstract class Vehicle<M> : Vehicle, IMapItem, IDamageReceiver, ICarrier, IWithCharacterMovement where M : VehicleMovement Type Parameters Name Description M Constructors | Edit this page View Source Vehicle() Declaration public Vehicle() Implements IMapItem IDamageReceiver ICarrier IWithCharacterMovement Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.Platformer.Vehicle.html": {
    "href": "api/AngeliA.Platformer.Vehicle.html",
    "title": "Class Vehicle | AngeliA",
    "summary": "Class Vehicle Implements IMapItem IDamageReceiver ICarrier IWithCharacterMovement Namespace: AngeliA.Platformer Assembly: com.angelia.platformer.dll Syntax [Entity.Layer(3)] [Entity.RepositionWhenInactive(true)] public abstract class Vehicle : Rigidbody, IMapItem, IDamageReceiver, ICarrier, IWithCharacterMovement Properties | Edit this page View Source AirDragX Amount of horizontal speed lost every frame Declaration public override int AirDragX { get; } Overrides Rigidbody.AirDragX | Edit this page View Source AirDragY Amount of vertical speed lost every frame Declaration public override int AirDragY { get; } Overrides Rigidbody.AirDragY | Edit this page View Source CarryOtherOnTop Trhe if this entity can carry other ICarrier on top Declaration public override bool CarryOtherOnTop { get; } Overrides Rigidbody.CarryOtherOnTop | Edit this page View Source Driver Declaration public Character Driver { get; } | Edit this page View Source DriverLeaveLocalPosition Declaration public virtual Int2? DriverLeaveLocalPosition { get; } | Edit this page View Source DriverLocalPosition Declaration public virtual Int2? DriverLocalPosition { get; } | Edit this page View Source FacingRight True if this entity is facing right side Declaration public override bool FacingRight { get; } Overrides Rigidbody.FacingRight | Edit this page View Source FillPyhsicsForDriver Declaration public virtual bool FillPyhsicsForDriver { get; } | Edit this page View Source LastDriveChangedFrame Declaration public int LastDriveChangedFrame { get; } | Edit this page View Source Movement Declaration public VehicleMovement Movement { get; protected set; } | Edit this page View Source PhysicalLayer Which physical layer should this entity fill it's collider in Declaration public override int PhysicalLayer { get; } Overrides Rigidbody.PhysicalLayer | Edit this page View Source SelfCollisionMask Intrinsic physics layers this entity should collide with Declaration public override int SelfCollisionMask { get; } Overrides Rigidbody.SelfCollisionMask | Edit this page View Source StartDriveCooldown Declaration public virtual int StartDriveCooldown { get; } Methods | Edit this page View Source BeforeUpdate() [2/4] This function is called every frame when entity is in stage. Prioritize using this function to update physics logic. Declaration public override void BeforeUpdate() Overrides Entity.BeforeUpdate() | Edit this page View Source CheckForStartDrive(out Character) Declaration protected virtual bool CheckForStartDrive(out Character driver) | Edit this page View Source CheckForStopDrive() Declaration protected virtual bool CheckForStopDrive() | Edit this page View Source FirstUpdate() [1/4] This function is called every frame when entity is in stage. Prioritize using this function to fill collider in to physics system. Declaration public override void FirstUpdate() Overrides Rigidbody.FirstUpdate() | Edit this page View Source OnActivated() This function is called when entity enter the stage Declaration public override void OnActivated() Overrides Rigidbody.OnActivated() | Edit this page View Source OnDamaged(Damage) This function is called when the entity takes a damage Declaration public virtual void OnDamaged(Damage damage) | Edit this page View Source StartDrive(Character) Declaration public virtual void StartDrive(Character driver) | Edit this page View Source StopDrive() Declaration public virtual void StopDrive() | Edit this page View Source TakeDriver() Declaration protected virtual void TakeDriver() | Edit this page View Source Update() [3/4] This function is called every frame when entity is in stage. Prioritize using this function to update physics logic. Declaration public override void Update() Overrides Rigidbody.Update() Implements IMapItem IDamageReceiver ICarrier IWithCharacterMovement Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.Platformer.VehicleMovement.html": {
    "href": "api/AngeliA.Platformer.VehicleMovement.html",
    "title": "Class VehicleMovement | AngeliA",
    "summary": "Class VehicleMovement Namespace: AngeliA.Platformer Assembly: com.angelia.platformer.dll Syntax public abstract class VehicleMovement : CharacterMovement Constructors | Edit this page View Source VehicleMovement(Rigidbody) Declaration public VehicleMovement(Rigidbody rig) Properties | Edit this page View Source Driver Declaration public Character Driver { get; set; } | Edit this page View Source SyncFromConfigFile Does movement config sync with json file in game universe folder Declaration public override sealed bool SyncFromConfigFile { get; } Overrides CharacterMovement.SyncFromConfigFile Methods | Edit this page View Source Crash() Perform crash (call this once when crash start) Declaration public override void Crash() Overrides CharacterMovement.Crash() | Edit this page View Source Dash() Perform dash (call this once when dash start) Declaration public override void Dash() Overrides CharacterMovement.Dash() | Edit this page View Source HoldJump(bool) Is character holding jump (call this every frame no matter character is jumpping or not) Declaration public override void HoldJump(bool holding) Overrides CharacterMovement.HoldJump(bool) | Edit this page View Source InitializeMeta() Declaration protected virtual void InitializeMeta() | Edit this page View Source Jump(bool) Perform jump (call this once when jump start) Declaration public override void Jump(bool isSquatJump = false) Parameters Type Name Description bool isSquatJump Is this jump a squat jump or not Overrides CharacterMovement.Jump(bool) | Edit this page View Source Move(Direction3, Direction3, bool) Move the character Declaration public override void Move(Direction3 x, Direction3 y, bool walk = false) bool walk True if character want to walk instead of run Overrides CharacterMovement.Move(Direction3, Direction3, bool) | Edit this page View Source Pound() Perform pound (call this once when pound start) Declaration public override void Pound() Overrides CharacterMovement.Pound() | Edit this page View Source Rush() Perform rush (call this once when rush start) Declaration public override void Rush() Overrides CharacterMovement.Rush() | Edit this page View Source Stop() Stop current movement Declaration public override void Stop() Overrides CharacterMovement.Stop() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.Platformer.Wallpaper.html": {
    "href": "api/AngeliA.Platformer.Wallpaper.html",
    "title": "Class Wallpaper | AngeliA",
    "summary": "Class Wallpaper Implements IMapItem Namespace: AngeliA.Platformer Assembly: com.angelia.platformer.dll Syntax [Entity.MapEditorGroup(\"Wallpaper\", 0)] public abstract class Wallpaper : Entity, IMapItem Properties | Edit this page View Source Amount Declaration protected int Amount { get; } Methods | Edit this page View Source BeforeUpdate() [2/4] This function is called every frame when entity is in stage. Prioritize using this function to update physics logic. Declaration public override void BeforeUpdate() Overrides Entity.BeforeUpdate() | Edit this page View Source DrawBackground(IRect) Declaration protected abstract void DrawBackground(IRect backgroundRect) | Edit this page View Source GetSkyTint(int) Declaration protected Color32 GetSkyTint(int y) | Edit this page View Source LateUpdate() [4/4] This function is called every frame when entity is in stage. Prioritize using this function to render the entity. Declaration public override sealed void LateUpdate() Overrides Entity.LateUpdate() | Edit this page View Source OnActivated() This function is called when entity enter the stage Declaration public override void OnActivated() Overrides Entity.OnActivated() | Edit this page View Source OnGameUpdate() Declaration [OnGameUpdate(0)] public static void OnGameUpdate() | Edit this page View Source Update() [3/4] This function is called every frame when entity is in stage. Prioritize using this function to update physics logic. Declaration public override void Update() Overrides Entity.Update() Implements IMapItem Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.Platformer.Wardrobe.html": {
    "href": "api/AngeliA.Platformer.Wardrobe.html",
    "title": "Class Wardrobe | AngeliA",
    "summary": "Class Wardrobe Implements IMapItem IBlockEntity IActionTarget Namespace: AngeliA.Platformer Assembly: com.angelia.platformer.dll Syntax public abstract class Wardrobe : InventoryFurniture<InventoryPartnerUI>, IMapItem, IBlockEntity, IActionTarget Properties | Edit this page View Source InventoryColumn Declaration protected override int InventoryColumn { get; } Overrides InventoryFurniture.InventoryColumn | Edit this page View Source InventoryRow Declaration protected override int InventoryRow { get; } Overrides InventoryFurniture.InventoryRow Implements IMapItem IBlockEntity IActionTarget Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.Platformer.html": {
    "href": "api/AngeliA.Platformer.html",
    "title": "Namespace AngeliA.Platformer | AngeliA",
    "summary": "Namespace AngeliA.Platformer Classes ActionFurniture Armor<P, N> ArrowBullet ArrowBullet<I> AuraItem<B> BarrelMovement BarrelVehicle BeamBullet Bed BodyArmor<P, N> Breakable BulletShooter BulletShooter<B> Burner<F> CabinetIdol CameraAutoDirection CameraAutoScroll CameraGate CameraGateDown CameraGateLeft CameraGateRight CameraGateUp CarryingPipe ChainCrusher Chair CheckAltar CheckAltar<CP> CheckPoint CheckPointPortal CircleFlamePortal Clock Collectable Conveyor CraftingTable CraftingUI DollItem DonutBlock Door EmptyMovableBullet Enemy Explosion ExplosiveMovableBullet Fire FireSprinkler FloatingCombatText FrozenZone Furniture Gloves<P, N> GrandfatherClock HealBullet HealWeapon<B> Helmet<P, N> InventoryFurniture InventoryFurniture<UI> ItemBasedSummon Launcher Leaf Light Liquid MapChest MeleeBullet MeleeWeapon MiniGame MiniGameTask MissileBullet MissileWeapon<B> MomentumBooster MovableBullet Navigation Oneway OpenableFurniture OpenableUiFurniture OpeningTask PickTool Plant Platform PlatformerUtil Portal PoseAnimation_PhotoPose PoseAnimation_Ride PoseAnimation_Sit PoseAnimation_SlidingSit PoseAnimation_SlidingSitHigh PoseAttack_Bow PoseAttack_Float PoseAttack_Hand PoseAttack_MagicPole PoseAttack_MagicSingleHanded PoseAttack_Polearm PoseAttack_Scratch PoseAttack_Shooting PoseAttack_WaveDoubleHanded PoseAttack_WaveDoubleHanded_SmashOnly PoseAttack_WaveEachHand PoseAttack_WaveEachHand_SmashOnly PoseAttack_WavePolearm PoseAttack_WavePolearm_SmashOnly PoseAttack_WaveSingleHanded PoseAttack_WaveSingleHanded_SmashOnly PoseHandheld_Bow PoseHandheld_DoubleHanded PoseHandheld_EachHand PoseHandheld_Float PoseHandheld_MagicPole PoseHandheld_Polearm PoseHandheld_Shooting PoseHandheld_SingleHanded PoseHandheld_Throwing ProjectileWeapon<B> RideableMovement RideableVehicle<RM> RigidbodyNavigation Shoes<P, N> Slime Slope Spring StepTriggerPlatform Summon SummonItem<T> SummonNavigation Table TeleportTask Tornado Track TrapDoor TriggerablePlatform Vehicle VehicleMovement Vehicle<M> Wallpaper Wardrobe Structs GlitchScope Navigation.Operation TechGlitchEffectScope Interfaces IAutoTrackWalker IPingPongWalker IRider IUnitable Navigation.IExpandRangeValidator Enums DonutBlock.BreakMode HelmetWearingMode IUnitable.UniteMode NavigationOperateMotion RigidbodyNavigationState Delegates MiniGame.SpawnBadgeHandler"
  },
  "api/AngeliA.PlayerMenuItem-1.html": {
    "href": "api/AngeliA.PlayerMenuItem-1.html",
    "title": "Class PlayerMenuItem<UI> | AngeliA",
    "summary": "Class PlayerMenuItem<UI> A type of item that spawns a player partner menu when use Implements IMapItem Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public abstract class PlayerMenuItem<UI> : Item, IMapItem where UI : PlayerMenuPartnerUI Type Parameters Name Description UI What type of menu does it spawns Constructors | Edit this page View Source PlayerMenuItem() Declaration public PlayerMenuItem() Properties | Edit this page View Source Column Inventory column count of the menu Declaration protected abstract int Column { get; } | Edit this page View Source MaxStackCount Count limitation for multiple items inside one inventory slot Declaration public override int MaxStackCount { get; } Overrides Item.MaxStackCount | Edit this page View Source Row Inventory row count of the menu Declaration protected abstract int Row { get; } Methods | Edit this page View Source CanUse(Character) True if this item can be use at current frame Declaration public override bool CanUse(Character character) Overrides Item.CanUse(Character) | Edit this page View Source OnPanelOpened(UI) This function is called when the menu is spawned Declaration protected virtual void OnPanelOpened(UI panelUI) Parameters Type Name Description UI panelUI Instance of the menu | Edit this page View Source Use(Character, int, int, out bool) Perform the logic when the item get used Declaration public override bool Use(Character character, int inventoryID, int itemIndex, out bool consume) int inventoryID Inventory ID of this holder int itemIndex Index of this item inside the inventory bool consume True if the item should disappear after being used Returns Type Description bool True if the item is used Overrides Item.Use(Character, int, int, out bool) Implements IMapItem Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.PlayerMenuPartnerUI.html": {
    "href": "api/AngeliA.PlayerMenuPartnerUI.html",
    "title": "Class PlayerMenuPartnerUI | AngeliA",
    "summary": "Class PlayerMenuPartnerUI Class for customize partner ui for player menu ui Implements IWindowEntityUI Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public abstract class PlayerMenuPartnerUI : IWindowEntityUI Properties | Edit this page View Source BackgroundRect Rect position of the background range in global space Declaration public IRect BackgroundRect { get; protected set; } | Edit this page View Source Column Inventory column count Declaration public virtual int Column { get; } | Edit this page View Source InventoryID ID for inventory system Declaration public int InventoryID { get; set; } | Edit this page View Source ItemFieldSize Unified size of a single item field Declaration public virtual int ItemFieldSize { get; } | Edit this page View Source MouseInPanel Trie if mouse cursor is currently inside this panel Declaration public bool MouseInPanel { get; set; } | Edit this page View Source Row Inventory row count Declaration public virtual int Row { get; } Methods | Edit this page View Source DrawPanel(IRect) This function is called every frame for displaying this panel Declaration public virtual void DrawPanel(IRect panelRect) Parameters Type Name Description IRect panelRect Rect position for the range of this panel in global space | Edit this page View Source EnablePanel() This function is called when the panel start to display Declaration public virtual void EnablePanel() | Edit this page View Source Unify(int) Convert unified size into global size Declaration protected static int Unify(int value) Implements IWindowEntityUI Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.PlayerMenuUI.html": {
    "href": "api/AngeliA.PlayerMenuUI.html",
    "title": "Class PlayerMenuUI | AngeliA",
    "summary": "Class PlayerMenuUI Menu UI for display player's state, manage equipments and items. Display when player press \"select\" button once. Implements IMapItem Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax [Entity.Capacity(1, 1)] public class PlayerMenuUI : EntityUI, IMapItem Constructors | Edit this page View Source PlayerMenuUI() Declaration public PlayerMenuUI() Properties | Edit this page View Source CursorInBottomPanel True if the cursor is in bottom inventory panel (the one for player's inventory) Declaration public bool CursorInBottomPanel { get; set; } | Edit this page View Source CursorIndex Index of the inventory cursor. (0 means bottom left, 1 makes the cursor go right) Declaration public int CursorIndex { get; set; } | Edit this page View Source Instance Global instance of this entity Declaration public static PlayerMenuUI Instance { get; } | Edit this page View Source Partner Instance of the current partner UI. Partner is the panel shows on top. The bottom one always display player's inventory. When partner panel is null, it display player's equipment panel. Declaration public PlayerMenuPartnerUI Partner { get; } | Edit this page View Source ShowingUI True is this menu is currently displaying Declaration public static bool ShowingUI { get; } | Edit this page View Source TakingCount Count of the current taking item. Declaration public int TakingCount { get; } | Edit this page View Source TakingID ID of the current taking item (the one move with the cursor), 0 means no item is taking. Declaration public int TakingID { get; } | Edit this page View Source TopPanelColumn Column count of the partner panel's inventory Declaration public int TopPanelColumn { get; } | Edit this page View Source TopPanelRow Row count of the partner panel's inventory Declaration public int TopPanelRow { get; } Methods | Edit this page View Source CloseMenu() Close the current opening player menu ui Declaration public static void CloseMenu() | Edit this page View Source DrawItemFieldUI(int, int, int, IRect, bool, int) Draw a single item field Declaration public static void DrawItemFieldUI(int itemID, int itemCount, int frameCode, IRect itemRect, bool interactable, int uiIndex) Parameters Type Name Description int itemID ID of the item from this field int itemCount Count of the item from this field int frameCode Artwork sprite ID of the field's frame IRect itemRect Rect position of this field in global space bool interactable True if this field is currently interactable int uiIndex Cursor index for this field for UI logic only | Edit this page View Source DrawTopInventory(int, int, int, int) Draw stardard inventory panel ui Declaration public static void DrawTopInventory(int inventoryID, int column, int row, int avatarID = 0) Parameters Type Name Description int inventoryID Inventory ID for the partner ui int column Inventory column count for the partner ui int row Inventory row count for the partner ui int avatarID Artwork sprite ID of the partner avatar | Edit this page View Source OnActivated() This function is called when entity enter the stage Declaration public override void OnActivated() Overrides Entity.OnActivated() | Edit this page View Source OnInactivated() This function is called when entity leave the stage Declaration public override void OnInactivated() Overrides Entity.OnInactivated() | Edit this page View Source OpenMenu() Open player menu ui without partner. Player equipment ui will be display on top. Declaration public static PlayerMenuUI OpenMenu() Returns Type Description PlayerMenuUI Instance of the player menu ui | Edit this page View Source OpenMenuWithPartner(PlayerMenuPartnerUI, int) Open player menu ui with given partner ui Declaration public static bool OpenMenuWithPartner(PlayerMenuPartnerUI partner, int partnerInventoryID) Parameters Type Name Description PlayerMenuPartnerUI partner Instance of the partner ui which will be display on top Returns Type Description bool True if the menu is opened | Edit this page View Source SetTaking(int, int) Set current taking item on the cursor Declaration public void SetTaking(int takingID, int takingCount) | Edit this page View Source UpdateUI() Declaration public override void UpdateUI() Overrides EntityUI.UpdateUI() Implements IMapItem Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.PlayerQuickMenuUI.html": {
    "href": "api/AngeliA.PlayerQuickMenuUI.html",
    "title": "Class PlayerQuickMenuUI | AngeliA",
    "summary": "Class PlayerQuickMenuUI UI menu that display when player hold \"select\" button during gameplay Implements IMapItem IWindowEntityUI Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax [Entity.Capacity(1, 1)] public class PlayerQuickMenuUI : EntityUI, IMapItem, IWindowEntityUI Constructors | Edit this page View Source PlayerQuickMenuUI() Declaration public PlayerQuickMenuUI() Properties | Edit this page View Source BackgroundRect Rect position for background panel range in global size Declaration public IRect BackgroundRect { get; } | Edit this page View Source Instance Global single instance for this entity Declaration public static PlayerQuickMenuUI Instance { get; } | Edit this page View Source ShowingUI True if the ui id currently displaying Declaration public static bool ShowingUI { get; } Methods | Edit this page View Source CloseMenu() Close the quick menu UI if it's opening Declaration public static void CloseMenu() | Edit this page View Source OnActivated() This function is called when entity enter the stage Declaration public override void OnActivated() Overrides Entity.OnActivated() | Edit this page View Source OnInactivated() This function is called when entity leave the stage Declaration public override void OnInactivated() Overrides Entity.OnInactivated() | Edit this page View Source OpenMenu() Open the quick menu UI Declaration public static PlayerQuickMenuUI OpenMenu() Returns Type Description PlayerQuickMenuUI Instance of the opened menu | Edit this page View Source UpdateUI() Declaration public override void UpdateUI() Overrides EntityUI.UpdateUI() Implements IMapItem IWindowEntityUI Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.PlayerSystem.html": {
    "href": "api/AngeliA.PlayerSystem.html",
    "title": "Class PlayerSystem | AngeliA",
    "summary": "Class PlayerSystem Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public static class PlayerSystem Fields | Edit this page View Source DragPlayerInMiddleButtonToMove_DebugOnly Declaration public static readonly FrameBasedBool DragPlayerInMiddleButtonToMove_DebugOnly | Edit this page View Source IgnorePlayerView Declaration public static readonly FrameBasedBool IgnorePlayerView | Edit this page View Source TargetViewHeight Declaration public static readonly FrameBasedInt TargetViewHeight Properties | Edit this page View Source AimViewX Declaration public static int AimViewX { get; } | Edit this page View Source AimViewY Declaration public static int AimViewY { get; } | Edit this page View Source AllowPlayerMenuUI Declaration public static bool AllowPlayerMenuUI { get; } | Edit this page View Source AllowQuickPlayerMenuUI Declaration public static bool AllowQuickPlayerMenuUI { get; } | Edit this page View Source Enable Declaration public static bool Enable { get; } | Edit this page View Source HomeUnitPosition Declaration public static Int3 HomeUnitPosition { get; set; } | Edit this page View Source IgnoreInputFrame Declaration public static int IgnoreInputFrame { get; } | Edit this page View Source IgnoringAction Declaration public static bool IgnoringAction { get; } | Edit this page View Source IgnoringInput Declaration public static bool IgnoringInput { get; } | Edit this page View Source PlayableCharactersCount Declaration public static int PlayableCharactersCount { get; } | Edit this page View Source RespawnCpUnitPosition Declaration public static Int3? RespawnCpUnitPosition { get; set; } | Edit this page View Source Selecting Declaration public static Character Selecting { get; } | Edit this page View Source TargetActionEntity Declaration public static IActionTarget TargetActionEntity { get; } | Edit this page View Source UnlockedPlayerCount Declaration public static int UnlockedPlayerCount { get; } Methods | Edit this page View Source ForAllPlayables() Declaration public static IEnumerable<int> ForAllPlayables() | Edit this page View Source ForAllUnlockedPlayers() Declaration public static IEnumerable<int> ForAllUnlockedPlayers() | Edit this page View Source ForceUpdateGroundedForView(int) Declaration public static void ForceUpdateGroundedForView(int duration = 1) | Edit this page View Source GetCameraShiftOffset(int) Declaration public static int GetCameraShiftOffset(int cameraHeight) | Edit this page View Source GetDefaultPlayerID(bool) Declaration public static int GetDefaultPlayerID(bool forceSelect = false) | Edit this page View Source GetPlayerFinalRespawnUnitPosition() Declaration public static Int3 GetPlayerFinalRespawnUnitPosition() | Edit this page View Source IgnoreAction(int) Declaration public static void IgnoreAction(int duration = 1) | Edit this page View Source IgnoreAttack(int) Declaration public static void IgnoreAttack(int duration = 1) | Edit this page View Source IgnoreInput(int) Declaration public static void IgnoreInput(int duration = 1) | Edit this page View Source IgnorePlayerMenu(int) Declaration public static void IgnorePlayerMenu(int duration = 1) | Edit this page View Source IgnorePlayerQuickMenu(int) Declaration public static void IgnorePlayerQuickMenu(int duration = 1) | Edit this page View Source IsPlayerUnlocked(int) Declaration public static bool IsPlayerUnlocked(int id) | Edit this page View Source SelectCharacterAsPlayer(int, bool) Declaration public static void SelectCharacterAsPlayer(int characterTypeID, bool failbackToDefault = true) | Edit this page View Source SetCharacterAsPlayer(Character) Declaration public static void SetCharacterAsPlayer(Character target) | Edit this page View Source UnlockPlayer(int) Declaration public static void UnlockPlayer(int id)"
  },
  "api/AngeliA.PoseAnimation.html": {
    "href": "api/AngeliA.PoseAnimation.html",
    "title": "Class PoseAnimation | AngeliA",
    "summary": "Class PoseAnimation Procedure animation to animate a pose-style character. ⚠Use global single instance from system pool⚠ Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public abstract class PoseAnimation Fields | Edit this page View Source A2G Scale values from artwork pixel space to global space Declaration protected const int A2G = 16 | Edit this page View Source AnimationType Which type of animation does the current character require to show Declaration protected static CharacterAnimationType AnimationType | Edit this page View Source AttackEase Eased progress of attack. (0 means start, 1 means end) Declaration protected static float AttackEase | Edit this page View Source AttackLerp Liner progress of attack. (0 means start, 1 means end) Declaration protected static float AttackLerp | Edit this page View Source Attackness Attackness behavior of the target character Declaration protected static CharacterAttackness Attackness | Edit this page View Source Body Declaration protected static BodyPart Body | Edit this page View Source CurrentAnimationFrame Local animation frame of the target character Declaration protected static int CurrentAnimationFrame | Edit this page View Source FacingFront True if the target character is facing front Declaration protected static bool FacingFront | Edit this page View Source FacingRight True if the target character is facing right Declaration protected static bool FacingRight | Edit this page View Source FacingSign Return 1 if the target character is facing right Declaration protected static int FacingSign | Edit this page View Source FootL Declaration protected static BodyPart FootL | Edit this page View Source FootR Declaration protected static BodyPart FootR | Edit this page View Source FrontSign Return 1 if the target character is facing front Declaration protected static int FrontSign | Edit this page View Source HandL Declaration protected static BodyPart HandL | Edit this page View Source HandR Declaration protected static BodyPart HandR | Edit this page View Source Head Declaration protected static BodyPart Head | Edit this page View Source Hip Declaration protected static BodyPart Hip | Edit this page View Source IsChargingAttack True if the target character is currently attacking Declaration protected static bool IsChargingAttack | Edit this page View Source LowerArmL Declaration protected static BodyPart LowerArmL | Edit this page View Source LowerArmR Declaration protected static BodyPart LowerArmR | Edit this page View Source LowerLegL Declaration protected static BodyPart LowerLegL | Edit this page View Source LowerLegR Declaration protected static BodyPart LowerLegR | Edit this page View Source Movement Movement behavior of the target character Declaration protected static CharacterMovement Movement | Edit this page View Source POSE_Z_HAND Declaration protected const int POSE_Z_HAND = 36 | Edit this page View Source Rendering Rendering behavior of the target character Declaration protected static PoseCharacterRenderer Rendering | Edit this page View Source ShoulderL Declaration protected static BodyPart ShoulderL | Edit this page View Source ShoulderR Declaration protected static BodyPart ShoulderR | Edit this page View Source Target Character that currently being animated Declaration protected static Character Target | Edit this page View Source UpperArmL Declaration protected static BodyPart UpperArmL | Edit this page View Source UpperArmR Declaration protected static BodyPart UpperArmR | Edit this page View Source UpperLegL Declaration protected static BodyPart UpperLegL | Edit this page View Source UpperLegR Declaration protected static BodyPart UpperLegR Properties | Edit this page View Source DontBlendToNext True if this animation should immediately transition to the next Declaration protected virtual bool DontBlendToNext { get; } | Edit this page View Source DontBlendToPrev True if the prev animation should immediately transition to this one Declaration protected virtual bool DontBlendToPrev { get; } | Edit this page View Source ValidHeadPosition True if head position need to be recalculate after perform this animation Declaration protected virtual bool ValidHeadPosition { get; } Methods | Edit this page View Source Animate(PoseCharacterRenderer) Perform the animation logic to the given character Declaration public virtual void Animate(PoseCharacterRenderer renderer) | Edit this page View Source AttackHeadDown(float, int, int, int) Make head moves down for attack animation for cached character Declaration protected static void AttackHeadDown(float ease01, int headOffsetXAmount = 1000, int headOffsetYAmount = 1000, int headRotateAmount = 1000) | Edit this page View Source AttackLegShake(float) Make legs shake for attack animation for cached character Declaration protected static void AttackLegShake(float ease01) | Edit this page View Source PerformAnimation(PoseAnimation, PoseCharacterRenderer) Animate target character from given animation Declaration public static void PerformAnimation(PoseAnimation animation, PoseCharacterRenderer renderer) | Edit this page View Source PerformAnimationBlend(PoseAnimation, PoseAnimation, float, PoseCharacterRenderer) Animate the target character from two given animations Declaration public static void PerformAnimationBlend(PoseAnimation animationA, PoseAnimation animationB, float blend01, PoseCharacterRenderer renderer) float blend01 0 means only perform animationA, 1 means only perform animationB. 0.5 means perform two animations equally. | Edit this page View Source PerformAnimationBlendFromPool(int, int, float, PoseCharacterRenderer) Animate the target character from two animations inside system pool Declaration public static void PerformAnimationBlendFromPool(int idA, int idB, float blend01, PoseCharacterRenderer renderer) float blend01 0 means only perform animationA, 1 means only perform animationB. 0.5 means perform two animations equally. | Edit this page View Source PerformAnimationFromPool(int, PoseCharacterRenderer) Animate the target character from animation inside system pool Declaration public static void PerformAnimationFromPool(int id, PoseCharacterRenderer renderer) | Edit this page View Source ResetShoulderAndUpperArmPos(bool, bool) Reset position of soulder and upper arm for cached character Declaration protected static void ResetShoulderAndUpperArmPos(bool resetLeft = true, bool resetRight = true) | Edit this page View Source TryGetAnimationFromPool(int, out PoseAnimation) Get global single instance from system pool Declaration public static bool TryGetAnimationFromPool(int id, out PoseAnimation result) Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.PoseAnimation_Animation_TakingDamage.html": {
    "href": "api/AngeliA.PoseAnimation_Animation_TakingDamage.html",
    "title": "Class PoseAnimation_Animation_TakingDamage | AngeliA",
    "summary": "Class PoseAnimation_Animation_TakingDamage Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public class PoseAnimation_Animation_TakingDamage : PoseAnimation Methods | Edit this page View Source Animate(PoseCharacterRenderer) Perform the animation logic to the given character Declaration public override void Animate(PoseCharacterRenderer renderer) Overrides PoseAnimation.Animate(PoseCharacterRenderer) Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.PoseAnimation_Brake.html": {
    "href": "api/AngeliA.PoseAnimation_Brake.html",
    "title": "Class PoseAnimation_Brake | AngeliA",
    "summary": "Class PoseAnimation_Brake Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public class PoseAnimation_Brake : PoseAnimation Methods | Edit this page View Source Animate(PoseCharacterRenderer) Perform the animation logic to the given character Declaration public override void Animate(PoseCharacterRenderer renderer) Overrides PoseAnimation.Animate(PoseCharacterRenderer) Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.PoseAnimation_Climb.html": {
    "href": "api/AngeliA.PoseAnimation_Climb.html",
    "title": "Class PoseAnimation_Climb | AngeliA",
    "summary": "Class PoseAnimation_Climb Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public class PoseAnimation_Climb : PoseAnimation Methods | Edit this page View Source Animate(PoseCharacterRenderer) Perform the animation logic to the given character Declaration public override void Animate(PoseCharacterRenderer renderer) Overrides PoseAnimation.Animate(PoseCharacterRenderer) Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.PoseAnimation_Crash.html": {
    "href": "api/AngeliA.PoseAnimation_Crash.html",
    "title": "Class PoseAnimation_Crash | AngeliA",
    "summary": "Class PoseAnimation_Crash Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public class PoseAnimation_Crash : PoseAnimation Properties | Edit this page View Source DontBlendToPrev True if the prev animation should immediately transition to this one Declaration protected override bool DontBlendToPrev { get; } Overrides PoseAnimation.DontBlendToPrev Methods | Edit this page View Source Animate(PoseCharacterRenderer) Perform the animation logic to the given character Declaration public override void Animate(PoseCharacterRenderer renderer) Overrides PoseAnimation.Animate(PoseCharacterRenderer) Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.PoseAnimation_Dash.html": {
    "href": "api/AngeliA.PoseAnimation_Dash.html",
    "title": "Class PoseAnimation_Dash | AngeliA",
    "summary": "Class PoseAnimation_Dash Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public class PoseAnimation_Dash : PoseAnimation Methods | Edit this page View Source Animate(PoseCharacterRenderer) Perform the animation logic to the given character Declaration public override void Animate(PoseCharacterRenderer renderer) Overrides PoseAnimation.Animate(PoseCharacterRenderer) Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.PoseAnimation_Fly.html": {
    "href": "api/AngeliA.PoseAnimation_Fly.html",
    "title": "Class PoseAnimation_Fly | AngeliA",
    "summary": "Class PoseAnimation_Fly Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public class PoseAnimation_Fly : PoseAnimation Methods | Edit this page View Source Animate(PoseCharacterRenderer) Perform the animation logic to the given character Declaration public override void Animate(PoseCharacterRenderer renderer) Overrides PoseAnimation.Animate(PoseCharacterRenderer) Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.PoseAnimation_GrabSide.html": {
    "href": "api/AngeliA.PoseAnimation_GrabSide.html",
    "title": "Class PoseAnimation_GrabSide | AngeliA",
    "summary": "Class PoseAnimation_GrabSide Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public class PoseAnimation_GrabSide : PoseAnimation Methods | Edit this page View Source Animate(PoseCharacterRenderer) Perform the animation logic to the given character Declaration public override void Animate(PoseCharacterRenderer renderer) Overrides PoseAnimation.Animate(PoseCharacterRenderer) Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.PoseAnimation_GrabTop.html": {
    "href": "api/AngeliA.PoseAnimation_GrabTop.html",
    "title": "Class PoseAnimation_GrabTop | AngeliA",
    "summary": "Class PoseAnimation_GrabTop Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public class PoseAnimation_GrabTop : PoseAnimation Methods | Edit this page View Source Animate(PoseCharacterRenderer) Perform the animation logic to the given character Declaration public override void Animate(PoseCharacterRenderer renderer) Overrides PoseAnimation.Animate(PoseCharacterRenderer) Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.PoseAnimation_Idle.html": {
    "href": "api/AngeliA.PoseAnimation_Idle.html",
    "title": "Class PoseAnimation_Idle | AngeliA",
    "summary": "Class PoseAnimation_Idle Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public class PoseAnimation_Idle : PoseAnimation Fields | Edit this page View Source TYPE_ID Declaration public static readonly int TYPE_ID Methods | Edit this page View Source Animate(PoseCharacterRenderer) Perform the animation logic to the given character Declaration public override void Animate(PoseCharacterRenderer renderer) Overrides PoseAnimation.Animate(PoseCharacterRenderer) Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.PoseAnimation_JumpDown.html": {
    "href": "api/AngeliA.PoseAnimation_JumpDown.html",
    "title": "Class PoseAnimation_JumpDown | AngeliA",
    "summary": "Class PoseAnimation_JumpDown Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public class PoseAnimation_JumpDown : PoseAnimation Methods | Edit this page View Source Animate(PoseCharacterRenderer) Perform the animation logic to the given character Declaration public override void Animate(PoseCharacterRenderer renderer) Overrides PoseAnimation.Animate(PoseCharacterRenderer) Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.PoseAnimation_JumpUp.html": {
    "href": "api/AngeliA.PoseAnimation_JumpUp.html",
    "title": "Class PoseAnimation_JumpUp | AngeliA",
    "summary": "Class PoseAnimation_JumpUp Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public class PoseAnimation_JumpUp : PoseAnimation Methods | Edit this page View Source Animate(PoseCharacterRenderer) Perform the animation logic to the given character Declaration public override void Animate(PoseCharacterRenderer renderer) Overrides PoseAnimation.Animate(PoseCharacterRenderer) Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.PoseAnimation_PassOut.html": {
    "href": "api/AngeliA.PoseAnimation_PassOut.html",
    "title": "Class PoseAnimation_PassOut | AngeliA",
    "summary": "Class PoseAnimation_PassOut Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public class PoseAnimation_PassOut : PoseAnimation Properties | Edit this page View Source ValidHeadPosition True if head position need to be recalculate after perform this animation Declaration protected override bool ValidHeadPosition { get; } Overrides PoseAnimation.ValidHeadPosition Methods | Edit this page View Source Animate(PoseCharacterRenderer) Perform the animation logic to the given character Declaration public override void Animate(PoseCharacterRenderer renderer) Overrides PoseAnimation.Animate(PoseCharacterRenderer) Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.PoseAnimation_Pound.html": {
    "href": "api/AngeliA.PoseAnimation_Pound.html",
    "title": "Class PoseAnimation_Pound | AngeliA",
    "summary": "Class PoseAnimation_Pound Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public class PoseAnimation_Pound : PoseAnimation Methods | Edit this page View Source Animate(PoseCharacterRenderer) Perform the animation logic to the given character Declaration public override void Animate(PoseCharacterRenderer renderer) Overrides PoseAnimation.Animate(PoseCharacterRenderer) Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.PoseAnimation_Rolling.html": {
    "href": "api/AngeliA.PoseAnimation_Rolling.html",
    "title": "Class PoseAnimation_Rolling | AngeliA",
    "summary": "Class PoseAnimation_Rolling Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public class PoseAnimation_Rolling : PoseAnimation Fields | Edit this page View Source TYPE_ID Declaration public static readonly int TYPE_ID Methods | Edit this page View Source Animate(PoseCharacterRenderer) Perform the animation logic to the given character Declaration public override void Animate(PoseCharacterRenderer renderer) Overrides PoseAnimation.Animate(PoseCharacterRenderer) Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.PoseAnimation_Run.html": {
    "href": "api/AngeliA.PoseAnimation_Run.html",
    "title": "Class PoseAnimation_Run | AngeliA",
    "summary": "Class PoseAnimation_Run Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public class PoseAnimation_Run : PoseAnimation Fields | Edit this page View Source TYPE_ID Declaration public static readonly int TYPE_ID Methods | Edit this page View Source Animate(PoseCharacterRenderer) Perform the animation logic to the given character Declaration public override void Animate(PoseCharacterRenderer renderer) Overrides PoseAnimation.Animate(PoseCharacterRenderer) Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.PoseAnimation_Rush.html": {
    "href": "api/AngeliA.PoseAnimation_Rush.html",
    "title": "Class PoseAnimation_Rush | AngeliA",
    "summary": "Class PoseAnimation_Rush Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public class PoseAnimation_Rush : PoseAnimation Methods | Edit this page View Source Animate(PoseCharacterRenderer) Perform the animation logic to the given character Declaration public override void Animate(PoseCharacterRenderer renderer) Overrides PoseAnimation.Animate(PoseCharacterRenderer) Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.PoseAnimation_Sleep.html": {
    "href": "api/AngeliA.PoseAnimation_Sleep.html",
    "title": "Class PoseAnimation_Sleep | AngeliA",
    "summary": "Class PoseAnimation_Sleep Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public class PoseAnimation_Sleep : PoseAnimation Methods | Edit this page View Source Animate(PoseCharacterRenderer) Perform the animation logic to the given character Declaration public override void Animate(PoseCharacterRenderer renderer) Overrides PoseAnimation.Animate(PoseCharacterRenderer) Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.PoseAnimation_Slide.html": {
    "href": "api/AngeliA.PoseAnimation_Slide.html",
    "title": "Class PoseAnimation_Slide | AngeliA",
    "summary": "Class PoseAnimation_Slide Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public class PoseAnimation_Slide : PoseAnimation Methods | Edit this page View Source Animate(PoseCharacterRenderer) Perform the animation logic to the given character Declaration public override void Animate(PoseCharacterRenderer renderer) Overrides PoseAnimation.Animate(PoseCharacterRenderer) Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.PoseAnimation_Spin.html": {
    "href": "api/AngeliA.PoseAnimation_Spin.html",
    "title": "Class PoseAnimation_Spin | AngeliA",
    "summary": "Class PoseAnimation_Spin Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public class PoseAnimation_Spin : PoseAnimation Methods | Edit this page View Source Animate(PoseCharacterRenderer) Perform the animation logic to the given character Declaration public override void Animate(PoseCharacterRenderer renderer) Overrides PoseAnimation.Animate(PoseCharacterRenderer) Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.PoseAnimation_SquatIdle.html": {
    "href": "api/AngeliA.PoseAnimation_SquatIdle.html",
    "title": "Class PoseAnimation_SquatIdle | AngeliA",
    "summary": "Class PoseAnimation_SquatIdle Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public class PoseAnimation_SquatIdle : PoseAnimation Fields | Edit this page View Source TYPE_ID Declaration public static readonly int TYPE_ID Methods | Edit this page View Source Animate(PoseCharacterRenderer) Perform the animation logic to the given character Declaration public override void Animate(PoseCharacterRenderer renderer) Overrides PoseAnimation.Animate(PoseCharacterRenderer) Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.PoseAnimation_SquatMove.html": {
    "href": "api/AngeliA.PoseAnimation_SquatMove.html",
    "title": "Class PoseAnimation_SquatMove | AngeliA",
    "summary": "Class PoseAnimation_SquatMove Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public class PoseAnimation_SquatMove : PoseAnimation Methods | Edit this page View Source Animate(PoseCharacterRenderer) Perform the animation logic to the given character Declaration public override void Animate(PoseCharacterRenderer renderer) Overrides PoseAnimation.Animate(PoseCharacterRenderer) Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.PoseAnimation_SwimIdle.html": {
    "href": "api/AngeliA.PoseAnimation_SwimIdle.html",
    "title": "Class PoseAnimation_SwimIdle | AngeliA",
    "summary": "Class PoseAnimation_SwimIdle Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public class PoseAnimation_SwimIdle : PoseAnimation Methods | Edit this page View Source Animate(PoseCharacterRenderer) Perform the animation logic to the given character Declaration public override void Animate(PoseCharacterRenderer renderer) Overrides PoseAnimation.Animate(PoseCharacterRenderer) Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.PoseAnimation_SwimMove.html": {
    "href": "api/AngeliA.PoseAnimation_SwimMove.html",
    "title": "Class PoseAnimation_SwimMove | AngeliA",
    "summary": "Class PoseAnimation_SwimMove Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public class PoseAnimation_SwimMove : PoseAnimation Methods | Edit this page View Source Animate(PoseCharacterRenderer) Perform the animation logic to the given character Declaration public override void Animate(PoseCharacterRenderer renderer) Overrides PoseAnimation.Animate(PoseCharacterRenderer) Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.PoseAnimation_Walk.html": {
    "href": "api/AngeliA.PoseAnimation_Walk.html",
    "title": "Class PoseAnimation_Walk | AngeliA",
    "summary": "Class PoseAnimation_Walk Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public class PoseAnimation_Walk : PoseAnimation Methods | Edit this page View Source Animate(PoseCharacterRenderer) Perform the animation logic to the given character Declaration public override void Animate(PoseCharacterRenderer renderer) Overrides PoseAnimation.Animate(PoseCharacterRenderer) Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.PoseCharacterRenderer.html": {
    "href": "api/AngeliA.PoseCharacterRenderer.html",
    "title": "Class PoseCharacterRenderer | AngeliA",
    "summary": "Class PoseCharacterRenderer Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public class PoseCharacterRenderer : CharacterRenderer Constructors | Edit this page View Source PoseCharacterRenderer(Character) Declaration public PoseCharacterRenderer(Character target) Fields | Edit this page View Source BODY_PART_COUNT How many body part does a pose character have Declaration public const int BODY_PART_COUNT = 17 | Edit this page View Source BODY_PART_NAME Declaration public static readonly string[] BODY_PART_NAME | Edit this page View Source BodyParts All body parts of the pose character Declaration public readonly BodyPart[] BodyParts | Edit this page View Source CM_PER_PX How many cm does one artwork pixel represents Declaration public const int CM_PER_PX = 5 | Edit this page View Source DEFAULT_BODY_PART_ID Declaration public static readonly int[] DEFAULT_BODY_PART_ID | Edit this page View Source EarID ID of current animal-ear gadget instance (like cat-girl's ears, not human ears) Declaration public readonly FrameBasedInt EarID | Edit this page View Source FaceID ID of current face gadget instance Declaration public readonly FrameBasedInt FaceID | Edit this page View Source ForceFaceExpressionIndex Which face expression does the face need to render Declaration public readonly FrameBasedInt ForceFaceExpressionIndex | Edit this page View Source HairID ID of current hair gadget instance Declaration public readonly FrameBasedInt HairID | Edit this page View Source HandGrabAttackTwistL Angle twist of the object grabbing by the left hand (0 means disappear, 1000 means normal) Declaration public readonly FrameBasedInt HandGrabAttackTwistL | Edit this page View Source HandGrabAttackTwistR Angle twist of the object grabbing by the right hand (0 means disappear, 1000 means normal) Declaration public readonly FrameBasedInt HandGrabAttackTwistR | Edit this page View Source HandGrabRotationL Rotation of the object grabbing by the left hand Declaration public readonly FrameBasedInt HandGrabRotationL | Edit this page View Source HandGrabRotationR Rotation of the object grabbing by the right hand Declaration public readonly FrameBasedInt HandGrabRotationR | Edit this page View Source HandGrabScaleL Size scaling of the object grabbing by the left hand (0 means 0%, 1000 means 100%) Declaration public readonly FrameBasedInt HandGrabScaleL | Edit this page View Source HandGrabScaleR Size scaling of the object grabbing by the right hand (0 means 0%, 1000 means 100%) Declaration public readonly FrameBasedInt HandGrabScaleR | Edit this page View Source HornID ID of current horn gadget instance Declaration public readonly FrameBasedInt HornID | Edit this page View Source SuitBody Current body suit id (cloth with sleeves) Declaration public readonly FrameBasedInt SuitBody | Edit this page View Source SuitFoot Current shoes suit id Declaration public readonly FrameBasedInt SuitFoot | Edit this page View Source SuitHand Current gloves suit id Declaration public readonly FrameBasedInt SuitHand | Edit this page View Source SuitHead Current hat suit id Declaration public readonly FrameBasedInt SuitHead | Edit this page View Source SuitHip Current hip suit id (pants or skirt) Declaration public readonly FrameBasedInt SuitHip | Edit this page View Source TailID ID of current tail gadget instance Declaration public readonly FrameBasedInt TailID | Edit this page View Source WingID ID of current wing gadget instance Declaration public readonly FrameBasedInt WingID Properties | Edit this page View Source BasicRootY Mid-Bottom local position of character hip y position Declaration public int BasicRootY { get; set; } | Edit this page View Source BlendDuration How many frames does it takes the character to transition from one pose to another Declaration public int BlendDuration { get; set; } | Edit this page View Source Body Body of the pose character Declaration public BodyPart Body { get; init; } | Edit this page View Source BodyTwist Make body rotate left or right Declaration public int BodyTwist { get; set; } | Edit this page View Source CharacterHeight Character body height in cm Declaration public int CharacterHeight { get; set; } | Edit this page View Source FootL Left foot of the pose character Declaration public BodyPart FootL { get; init; } | Edit this page View Source FootR Right foot of the pose character Declaration public BodyPart FootR { get; init; } | Edit this page View Source HandL Left hand of the pose character Declaration public BodyPart HandL { get; init; } | Edit this page View Source HandR Right hand of the pose character Declaration public BodyPart HandR { get; init; } | Edit this page View Source Head Head of the pose character Declaration public BodyPart Head { get; init; } | Edit this page View Source HeadTwist Make head rotate like shaking head Declaration public int HeadTwist { get; set; } | Edit this page View Source Hip Hip of the pose character Declaration public BodyPart Hip { get; init; } | Edit this page View Source LowerArmL Left lower arm of the pose character Declaration public BodyPart LowerArmL { get; init; } | Edit this page View Source LowerArmR Right lower arm of the pose character Declaration public BodyPart LowerArmR { get; init; } | Edit this page View Source LowerLegL Left lower leg of the pose character Declaration public BodyPart LowerLegL { get; init; } | Edit this page View Source LowerLegR Right lower leg of the pose character Declaration public BodyPart LowerLegR { get; init; } | Edit this page View Source PoseRootX Total offset X for pose rendering Declaration public int PoseRootX { get; set; } | Edit this page View Source PoseRootY Total offset Y for pose rendering Declaration public int PoseRootY { get; set; } | Edit this page View Source RenderedCellZ Basic rendering Z value for last time character get rendered Declaration public int RenderedCellZ { get; } | Edit this page View Source ShoulderL Left shoulder of the pose character Declaration public BodyPart ShoulderL { get; init; } | Edit this page View Source ShoulderR Right shoulder of the pose character Declaration public BodyPart ShoulderR { get; init; } | Edit this page View Source UpperArmL Left upper arm of the pose character Declaration public BodyPart UpperArmL { get; init; } | Edit this page View Source UpperArmR Right upper arm of the pose character Declaration public BodyPart UpperArmR { get; init; } | Edit this page View Source UpperLegL Left upper leg of the pose character Declaration public BodyPart UpperLegL { get; init; } | Edit this page View Source UpperLegR Right upper leg of the pose character Declaration public BodyPart UpperLegR { get; init; } Methods | Edit this page View Source BeforeUpdate() Declaration public override void BeforeUpdate() Overrides CharacterRenderer.BeforeUpdate() | Edit this page View Source GetGadgetID(BodyGadgetType) Get current body gadget ID the character is using Declaration public int GetGadgetID(BodyGadgetType type) | Edit this page View Source GetSuitID(ClothType) Get current suit ID the character is using Declaration public int GetSuitID(ClothType type) | Edit this page View Source LateUpdate() Declaration public override void LateUpdate() Overrides CharacterRenderer.LateUpdate() | Edit this page View Source ManualPoseAnimate(int, int) Make the renderer draw the character based on the given animation for specified frames long Declaration public void ManualPoseAnimate(int id, int duration = 1) | Edit this page View Source OnActivated() Callback function for character entity get activated Declaration public override void OnActivated() Overrides CharacterRenderer.OnActivated() | Edit this page View Source OverridePoseAnimation(CharacterAnimationType, int, int) Override animation for given animation type for specified frames long Declaration public void OverridePoseAnimation(CharacterAnimationType type, int id, int duration = 1) | Edit this page View Source PerformPoseAnimation() Declaration protected virtual void PerformPoseAnimation() | Edit this page View Source ReloadRenderingConfigPoolFromFileAndSheet(bool) Declaration public static void ReloadRenderingConfigPoolFromFileAndSheet(bool forceReset = false) | Edit this page View Source RenderBodyGadgets() Declaration protected virtual void RenderBodyGadgets() | Edit this page View Source RenderCloths() Declaration protected virtual void RenderCloths() | Edit this page View Source RenderEquipment() Declaration protected virtual void RenderEquipment() | Edit this page View Source RenderInventory() Declaration protected virtual void RenderInventory() | Edit this page View Source SaveCharacterToConfig(bool) Declaration public void SaveCharacterToConfig(bool saveToFile = false) | Edit this page View Source SyncRenderingConfigFromPool(bool) Declaration public void SyncRenderingConfigFromPool(bool forceSync = false) | Edit this page View Source TryGetConfigFromPool(int, out CharacterRenderingConfig) Declaration public static bool TryGetConfigFromPool(int id, out CharacterRenderingConfig config) Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.PoseHandheld_Block.html": {
    "href": "api/AngeliA.PoseHandheld_Block.html",
    "title": "Class PoseHandheld_Block | AngeliA",
    "summary": "Class PoseHandheld_Block Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public class PoseHandheld_Block : HandheldPoseAnimation Fields | Edit this page View Source TYPE_ID Declaration public static readonly int TYPE_ID Methods | Edit this page View Source DrawTool(HandTool, PoseCharacterRenderer) Declaration public override void DrawTool(HandTool tool, PoseCharacterRenderer renderer) Overrides HandheldPoseAnimation.DrawTool(HandTool, PoseCharacterRenderer) Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.PoseHandheld_Tool.html": {
    "href": "api/AngeliA.PoseHandheld_Tool.html",
    "title": "Class PoseHandheld_Tool | AngeliA",
    "summary": "Class PoseHandheld_Tool Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public class PoseHandheld_Tool : HandheldPoseAnimation Fields | Edit this page View Source TYPE_ID Declaration public static readonly int TYPE_ID Methods | Edit this page View Source DrawTool(HandTool, PoseCharacterRenderer) Declaration public override void DrawTool(HandTool tool, PoseCharacterRenderer renderer) Overrides HandheldPoseAnimation.DrawTool(HandTool, PoseCharacterRenderer) Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.PosePerform_Block.html": {
    "href": "api/AngeliA.PosePerform_Block.html",
    "title": "Class PosePerform_Block | AngeliA",
    "summary": "Class PosePerform_Block Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public class PosePerform_Block : PoseAnimation Fields | Edit this page View Source TYPE_ID Declaration public static readonly int TYPE_ID Methods | Edit this page View Source Animate(PoseCharacterRenderer) Perform the animation logic to the given character Declaration public override void Animate(PoseCharacterRenderer renderer) Overrides PoseAnimation.Animate(PoseCharacterRenderer) | Edit this page View Source Build() Declaration public static void Build() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.PosePerform_Tool.html": {
    "href": "api/AngeliA.PosePerform_Tool.html",
    "title": "Class PosePerform_Tool | AngeliA",
    "summary": "Class PosePerform_Tool Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public class PosePerform_Tool : PoseAnimation Fields | Edit this page View Source TYPE_ID Declaration public static readonly int TYPE_ID Methods | Edit this page View Source Animate(PoseCharacterRenderer) Perform the animation logic to the given character Declaration public override void Animate(PoseCharacterRenderer renderer) Overrides PoseAnimation.Animate(PoseCharacterRenderer) | Edit this page View Source Perform() Declaration public static void Perform() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.ProjectType.html": {
    "href": "api/AngeliA.ProjectType.html",
    "title": "Enum ProjectType | AngeliA",
    "summary": "Enum ProjectType Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public enum ProjectType Fields Name Description Artwork Project with only pixel artwork EngineTheme Project with only pixel artwork for theme of AngeliA Engine Game Project with coded logic, pixel artwork and audio etc... Extension Methods Extension.Next<ProjectType>(ProjectType) Extension.Prev<ProjectType>(ProjectType) Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.PropGroupAttribute.html": {
    "href": "api/AngeliA.PropGroupAttribute.html",
    "title": "Class PropGroupAttribute | AngeliA",
    "summary": "Class PropGroupAttribute Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax [AttributeUsage(AttributeTargets.Property|AttributeTargets.Field, AllowMultiple = false)] public class PropGroupAttribute : Attribute Constructors | Edit this page View Source PropGroupAttribute(string) Declaration public PropGroupAttribute(string name) Fields | Edit this page View Source Name Declaration public string Name Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.PropSeparatorAttribute.html": {
    "href": "api/AngeliA.PropSeparatorAttribute.html",
    "title": "Class PropSeparatorAttribute | AngeliA",
    "summary": "Class PropSeparatorAttribute Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax [AttributeUsage(AttributeTargets.Property|AttributeTargets.Field, AllowMultiple = false)] public class PropSeparatorAttribute : Attribute Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.PropVisibilityAttribute.html": {
    "href": "api/AngeliA.PropVisibilityAttribute.html",
    "title": "Class PropVisibilityAttribute | AngeliA",
    "summary": "Class PropVisibilityAttribute Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax [AttributeUsage(AttributeTargets.Property|AttributeTargets.Field, AllowMultiple = false)] public class PropVisibilityAttribute : Attribute Constructors | Edit this page View Source PropVisibilityAttribute(string, CompareMode) Declaration public PropVisibilityAttribute(string boolName, CompareMode compare = CompareMode.Equal) | Edit this page View Source PropVisibilityAttribute(string, CompareMode, int) Declaration public PropVisibilityAttribute(string intName, CompareMode compare, int compareTargetValue) | Edit this page View Source PropVisibilityAttribute(string, CompareMode, string) Declaration public PropVisibilityAttribute(string targetName, CompareMode compare, string compareTargetName) Fields | Edit this page View Source Compare Declaration public readonly CompareMode Compare | Edit this page View Source CompareTargetName Declaration public readonly string CompareTargetName | Edit this page View Source CompareTargetValue Declaration public readonly int CompareTargetValue | Edit this page View Source TargetName Declaration public readonly string TargetName Methods | Edit this page View Source PropMatch(Dictionary<string, int>) Declaration public bool PropMatch(Dictionary<string, int> map) | Edit this page View Source PropMatch(object) Declaration public bool PropMatch(object host) Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.RenderLayer.html": {
    "href": "api/AngeliA.RenderLayer.html",
    "title": "Class RenderLayer | AngeliA",
    "summary": "Class RenderLayer Layer for rendering Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public static class RenderLayer Fields | Edit this page View Source ADD Render cells with additive shader Declaration public const int ADD = 6 | Edit this page View Source BEHIND Behind layer of level blocks Declaration public const int BEHIND = 1 | Edit this page View Source COLOR Render cells with pure color, ignore sprite content Declaration public const int COLOR = 4 | Edit this page View Source COUNT Declaration public const int COUNT = 8 | Edit this page View Source DEFAULT Declaration public const int DEFAULT = 3 | Edit this page View Source DEFAULT_CAPACITY Declaration public static readonly int[] DEFAULT_CAPACITY | Edit this page View Source MULT Render cells with multiply shader Declaration public const int MULT = 5 | Edit this page View Source NAMES Declaration public static readonly string[] NAMES | Edit this page View Source SHADOW Hold shadow of level blocks and environment entities Declaration public const int SHADOW = 2 | Edit this page View Source UI Declaration public const int UI = 7 | Edit this page View Source WALLPAPER Most behind rendering layer, only overlap on top of sky color Declaration public const int WALLPAPER = 0"
  },
  "api/AngeliA.Renderer.CellComparer.html": {
    "href": "api/AngeliA.Renderer.CellComparer.html",
    "title": "Class Renderer.CellComparer | AngeliA",
    "summary": "Class Renderer.CellComparer Implements IComparer<Cell> Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public class Renderer.CellComparer : IComparer<Cell> Fields | Edit this page View Source Instance Declaration public static readonly Renderer.CellComparer Instance Methods | Edit this page View Source Compare(Cell, Cell) Compares two objects and returns a value indicating whether one is less than, equal to, or greater than the other. Declaration public int Compare(Cell a, Cell b) Returns Type Description int A signed integer that indicates the relative values of x and y, as shown in the following table. Value Meaning Less than zero x is less than y. Zero x equals y. Greater than zero x is greater than y. Implements IComparer<T> Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.Renderer.html": {
    "href": "api/AngeliA.Renderer.html",
    "title": "Class Renderer | AngeliA",
    "summary": "Class Renderer Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public static class Renderer Fields | Edit this page View Source MainSheet Declaration public static readonly Sheet MainSheet Properties | Edit this page View Source AltSheetCount Declaration public static int AltSheetCount { get; } | Edit this page View Source CameraRange Declaration public static FRect CameraRange { get; } | Edit this page View Source CameraRect Declaration public static IRect CameraRect { get; } | Edit this page View Source CameraRestrictionRate Declaration public static float CameraRestrictionRate { get; } | Edit this page View Source CurrentFontIndex Declaration public static int CurrentFontIndex { get; } | Edit this page View Source CurrentLayerIndex Declaration public static int CurrentLayerIndex { get; } | Edit this page View Source CurrentSheet Declaration public static Sheet CurrentSheet { get; } | Edit this page View Source CurrentSheetIndex Declaration public static int CurrentSheetIndex { get; set; } | Edit this page View Source GroupCount Declaration public static int GroupCount { get; } | Edit this page View Source IsReady Declaration public static bool IsReady { get; } | Edit this page View Source LayerCount Declaration public static int LayerCount { get; } | Edit this page View Source ScreenRenderRect Declaration public static IRect ScreenRenderRect { get; } | Edit this page View Source SpriteCount Declaration public static int SpriteCount { get; } Methods | Edit this page View Source AbandonLayerSort(int) Declaration public static void AbandonLayerSort(int layerIndex) | Edit this page View Source AddAltSheet(Sheet) Declaration public static int AddAltSheet(Sheet sheet) | Edit this page View Source BeginDraw() Declaration [OnGameUpdate(-512)] public static void BeginDraw() | Edit this page View Source ClampCells(Cell[], IRect) Declaration public static void ClampCells(Cell[] cells, IRect rect) | Edit this page View Source ClampCells(IRect, int, int) Declaration public static void ClampCells(IRect rect, int startIndex, int endIndex = -1) | Edit this page View Source ClampCells(int, IRect, int, int) Declaration public static void ClampCells(int layerIndex, IRect rect, int startIndex, int endIndex = -1) | Edit this page View Source ClearCharSpritePool() Declaration public static void ClearCharSpritePool() | Edit this page View Source ClearFontIndexIdMap() Declaration public static void ClearFontIndexIdMap() | Edit this page View Source Draw(AngeSprite, IRect, Color32, int) Declaration public static Cell Draw(AngeSprite sprite, IRect rect, Color32 color, int z = -2147483648) | Edit this page View Source Draw(AngeSprite, IRect, int) Declaration public static Cell Draw(AngeSprite sprite, IRect rect, int z = -2147483648) | Edit this page View Source Draw(AngeSprite, int, int, int, int, int, int, int, Color32, int, bool) Declaration public static Cell Draw(AngeSprite sprite, int x, int y, int pivotX, int pivotY, int rotation, int width, int height, Color32 color, int z = -2147483648, bool ignoreAttach = false) | Edit this page View Source Draw(AngeSprite, int, int, int, int, int, int, int, int) Declaration public static Cell Draw(AngeSprite sprite, int x, int y, int pivotX, int pivotY, int rotation, int width, int height, int z = -2147483648) | Edit this page View Source Draw(SpriteCode, IRect, Color32, int) Declaration public static Cell Draw(SpriteCode globalID, IRect rect, Color32 color, int z = -2147483648) | Edit this page View Source Draw(SpriteCode, IRect, int) Declaration public static Cell Draw(SpriteCode globalID, IRect rect, int z = -2147483648) | Edit this page View Source Draw(SpriteCode, int, int, int, int, int, int, int, Color32, int) Declaration public static Cell Draw(SpriteCode globalID, int x, int y, int pivotX, int pivotY, int rotation, int width, int height, Color32 color, int z = -2147483648) | Edit this page View Source Draw(SpriteCode, int, int, int, int, int, int, int, int) Declaration public static Cell Draw(SpriteCode globalID, int x, int y, int pivotX, int pivotY, int rotation, int width, int height, int z = -2147483648) | Edit this page View Source Draw(int, IRect, Color32, int) Declaration public static Cell Draw(int globalID, IRect rect, Color32 color, int z = -2147483648) | Edit this page View Source Draw(int, IRect, int) Declaration public static Cell Draw(int globalID, IRect rect, int z = -2147483648) | Edit this page View Source Draw(int, int, int, int, int, int, int, int, Color32, int) Declaration public static Cell Draw(int globalID, int x, int y, int pivotX, int pivotY, int rotation, int width, int height, Color32 color, int z = -2147483648) | Edit this page View Source Draw(int, int, int, int, int, int, int, int, int) Declaration public static Cell Draw(int globalID, int x, int y, int pivotX, int pivotY, int rotation, int width, int height, int z = -2147483648) | Edit this page View Source DrawAnimation(SpriteGroup, int, int, int, int, int, int, int, int, int) Declaration public static Cell DrawAnimation(SpriteGroup group, int x, int y, int pivotX, int pivotY, int rotation, int width, int height, int frame, int z = -2147483648) | Edit this page View Source DrawAnimation(int, int, int, int, int, int, int, int, int, int) Declaration public static Cell DrawAnimation(int chainID, int x, int y, int pivotX, int pivotY, int rotation, int width, int height, int frame, int z = -2147483648) | Edit this page View Source DrawChar(CharSprite, int, int, int, int, Color32) Declaration public static Cell DrawChar(CharSprite sprite, int x, int y, int width, int height, Color32 color) | Edit this page View Source DrawChar(char, int, int, int, int, Color32) Declaration public static Cell DrawChar(char c, int x, int y, int width, int height, Color32 color) | Edit this page View Source DrawPixel(IRect, Color32, int) Declaration public static Cell DrawPixel(IRect rect, Color32 color, int z = -2147483648) | Edit this page View Source DrawPixel(IRect, int) Declaration public static Cell DrawPixel(IRect rect, int z = -2147483648) | Edit this page View Source DrawPixel(int, int, int, int, int, int, int, Color32, int) Declaration public static Cell DrawPixel(int x, int y, int pivotX, int pivotY, int rotation, int width, int height, Color32 color, int z = -2147483648) | Edit this page View Source DrawPixel(int, int, int, int, int, int, int, int) Declaration public static Cell DrawPixel(int x, int y, int pivotX, int pivotY, int rotation, int width, int height, int z = -2147483648) | Edit this page View Source DrawSlice(AngeSprite, IRect) Declaration public static Cell[] DrawSlice(AngeSprite sprite, IRect rect) | Edit this page View Source DrawSlice(AngeSprite, IRect, Color32, int) Declaration public static Cell[] DrawSlice(AngeSprite sprite, IRect rect, Color32 color, int z = -2147483648) | Edit this page View Source DrawSlice(AngeSprite, IRect, int, int, int, int, Color32, int) Declaration public static Cell[] DrawSlice(AngeSprite sprite, IRect rect, int borderL, int borderR, int borderD, int borderU, Color32 color, int z = -2147483648) | Edit this page View Source DrawSlice(AngeSprite, IRect, int, int, int, int, int) Declaration public static Cell[] DrawSlice(AngeSprite sprite, IRect rect, int borderL, int borderR, int borderD, int borderU, int z = -2147483648) | Edit this page View Source DrawSlice(AngeSprite, int, int, int, int, int, int, int, Color32, int) Declaration public static Cell[] DrawSlice(AngeSprite sprite, int x, int y, int pivotX, int pivotY, int rotation, int width, int height, Color32 color, int z = -2147483648) | Edit this page View Source DrawSlice(AngeSprite, int, int, int, int, int, int, int, int) Declaration public static Cell[] DrawSlice(AngeSprite sprite, int x, int y, int pivotX, int pivotY, int rotation, int width, int height, int z = -2147483648) | Edit this page View Source DrawSlice(AngeSprite, int, int, int, int, int, int, int, int, int, int, int, Color32, int) Declaration public static Cell[] DrawSlice(AngeSprite sprite, int x, int y, int pivotX, int pivotY, int rotation, int width, int height, int borderL, int borderR, int borderD, int borderU, Color32 color, int z = -2147483648) | Edit this page View Source DrawSlice(AngeSprite, int, int, int, int, int, int, int, int, int, int, int, bool[], Color32, int) Declaration public static Cell[] DrawSlice(AngeSprite sprite, int x, int y, int pivotX, int pivotY, int rotation, int width, int height, int borderL, int borderR, int borderD, int borderU, bool[] partIgnore, Color32 color, int z) | Edit this page View Source DrawSlice(AngeSprite, int, int, int, int, int, int, int, int, int, int, int, int) Declaration public static Cell[] DrawSlice(AngeSprite sprite, int x, int y, int pivotX, int pivotY, int rotation, int width, int height, int borderL, int borderR, int borderD, int borderU, int z = -2147483648) | Edit this page View Source DrawSlice(SpriteCode, IRect) Declaration public static Cell[] DrawSlice(SpriteCode globalID, IRect rect) | Edit this page View Source DrawSlice(SpriteCode, IRect, Color32, int) Declaration public static Cell[] DrawSlice(SpriteCode globalID, IRect rect, Color32 color, int z = -2147483648) | Edit this page View Source DrawSlice(SpriteCode, IRect, int, int, int, int, Color32, int) Declaration public static Cell[] DrawSlice(SpriteCode globalID, IRect rect, int borderL, int borderR, int borderD, int borderU, Color32 color, int z = -2147483648) | Edit this page View Source DrawSlice(SpriteCode, IRect, int, int, int, int, int) Declaration public static Cell[] DrawSlice(SpriteCode globalID, IRect rect, int borderL, int borderR, int borderD, int borderU, int z = -2147483648) | Edit this page View Source DrawSlice(SpriteCode, int, int, int, int, int, int, int, Color32, int) Declaration public static Cell[] DrawSlice(SpriteCode globalID, int x, int y, int pivotX, int pivotY, int rotation, int width, int height, Color32 color, int z = -2147483648) | Edit this page View Source DrawSlice(SpriteCode, int, int, int, int, int, int, int, int) Declaration public static Cell[] DrawSlice(SpriteCode globalID, int x, int y, int pivotX, int pivotY, int rotation, int width, int height, int z = -2147483648) | Edit this page View Source DrawSlice(SpriteCode, int, int, int, int, int, int, int, int, int, int, int, Color32, int) Declaration public static Cell[] DrawSlice(SpriteCode globalID, int x, int y, int pivotX, int pivotY, int rotation, int width, int height, int borderL, int borderR, int borderD, int borderU, Color32 color, int z = -2147483648) | Edit this page View Source DrawSlice(SpriteCode, int, int, int, int, int, int, int, int, int, int, int, bool[], Color32, int) Declaration public static Cell[] DrawSlice(SpriteCode globalID, int x, int y, int pivotX, int pivotY, int rotation, int width, int height, int borderL, int borderR, int borderD, int borderU, bool[] partIgnore, Color32 color, int z = -2147483648) | Edit this page View Source DrawSlice(SpriteCode, int, int, int, int, int, int, int, int, int, int, int, int) Declaration public static Cell[] DrawSlice(SpriteCode globalID, int x, int y, int pivotX, int pivotY, int rotation, int width, int height, int borderL, int borderR, int borderD, int borderU, int z = -2147483648) | Edit this page View Source DrawSlice(int, IRect) Declaration public static Cell[] DrawSlice(int globalID, IRect rect) | Edit this page View Source DrawSlice(int, IRect, Color32, int) Declaration public static Cell[] DrawSlice(int globalID, IRect rect, Color32 color, int z = -2147483648) | Edit this page View Source DrawSlice(int, IRect, int, int, int, int, Color32, int) Declaration public static Cell[] DrawSlice(int globalID, IRect rect, int borderL, int borderR, int borderD, int borderU, Color32 color, int z = -2147483648) | Edit this page View Source DrawSlice(int, IRect, int, int, int, int, int) Declaration public static Cell[] DrawSlice(int globalID, IRect rect, int borderL, int borderR, int borderD, int borderU, int z = -2147483648) | Edit this page View Source DrawSlice(int, int, int, int, int, int, int, int, Color32, int) Declaration public static Cell[] DrawSlice(int globalID, int x, int y, int pivotX, int pivotY, int rotation, int width, int height, Color32 color, int z = -2147483648) | Edit this page View Source DrawSlice(int, int, int, int, int, int, int, int, int) Declaration public static Cell[] DrawSlice(int globalID, int x, int y, int pivotX, int pivotY, int rotation, int width, int height, int z = -2147483648) | Edit this page View Source DrawSlice(int, int, int, int, int, int, int, int, int, int, int, int, Color32, int) Declaration public static Cell[] DrawSlice(int globalID, int x, int y, int pivotX, int pivotY, int rotation, int width, int height, int borderL, int borderR, int borderD, int borderU, Color32 color, int z = -2147483648) | Edit this page View Source DrawSlice(int, int, int, int, int, int, int, int, int, int, int, int, bool[], Color32, int) Declaration public static Cell[] DrawSlice(int globalID, int x, int y, int pivotX, int pivotY, int rotation, int width, int height, int borderL, int borderR, int borderD, int borderU, bool[] partIgnore, Color32 color, int z = -2147483648) | Edit this page View Source DrawSlice(int, int, int, int, int, int, int, int, int, int, int, int, int) Declaration public static Cell[] DrawSlice(int globalID, int x, int y, int pivotX, int pivotY, int rotation, int width, int height, int borderL, int borderR, int borderD, int borderU, int z = -2147483648) | Edit this page View Source GetAltSheet(int) Declaration public static Sheet GetAltSheet(int index) | Edit this page View Source GetAnimationGroupDuration(SpriteGroup) Declaration public static int GetAnimationGroupDuration(SpriteGroup group) | Edit this page View Source GetAnimationGroupDuration(int) Declaration public static int GetAnimationGroupDuration(int chainID) | Edit this page View Source GetCells(int, out Span<Cell>, out int) Declaration public static bool GetCells(int layer, out Span<Cell> cells, out int count) | Edit this page View Source GetCells(out Span<Cell>, out int) Declaration public static bool GetCells(out Span<Cell> cells, out int count) | Edit this page View Source GetGroupAt(int) Declaration public static SpriteGroup GetGroupAt(int index) | Edit this page View Source GetLayerCapacity(int) Declaration public static int GetLayerCapacity(int layerIndex) | Edit this page View Source GetLayerTint(int) Declaration public static Color32 GetLayerTint(int layer) | Edit this page View Source GetSpriteAt(int) Declaration public static AngeSprite GetSpriteAt(int index) | Edit this page View Source GetUsedCellCount() Declaration public static int GetUsedCellCount() | Edit this page View Source GetUsedCellCount(int) Declaration public static int GetUsedCellCount(int layerIndex) | Edit this page View Source HasSprite(int) Declaration public static bool HasSprite(int globalID) | Edit this page View Source HasSpriteGroup(int) Declaration public static bool HasSpriteGroup(int groupID) | Edit this page View Source HasSpriteGroup(int, out int) Declaration public static bool HasSpriteGroup(int groupID, out int groupLength) | Edit this page View Source LoadMainSheet() Declaration public static void LoadMainSheet() | Edit this page View Source MultLayerTint(int, Color32) Declaration public static void MultLayerTint(int layer, Color32 tint) | Edit this page View Source OverrideFontIdAndIndex(int, int) Declaration public static void OverrideFontIdAndIndex(int fontId, int fontIndex) | Edit this page View Source RemoveAltSheet(int) Declaration public static void RemoveAltSheet(int index) | Edit this page View Source RequireCharForPool(char, out CharSprite) Declaration public static bool RequireCharForPool(char c, out CharSprite charSprite) | Edit this page View Source RequireCharForPool(char, int, out CharSprite) Declaration public static bool RequireCharForPool(char c, int fontIndex, out CharSprite charSprite) | Edit this page View Source ResetLayer(int) Declaration public static void ResetLayer(int layerIndex) | Edit this page View Source ReverseUnsortedCells(int) Declaration public static void ReverseUnsortedCells(int layerIndex) | Edit this page View Source SetFontID(int) Declaration public static void SetFontID(int id) | Edit this page View Source SetFontIndex(int) Declaration public static void SetFontIndex(int index) | Edit this page View Source SetLayer(int) Declaration public static void SetLayer(int index) | Edit this page View Source SetLayerTint(int, Color32) Declaration public static void SetLayerTint(int layer, Color32 tint) | Edit this page View Source SetLayerToAdditive() Declaration public static void SetLayerToAdditive() | Edit this page View Source SetLayerToBehind() Declaration public static void SetLayerToBehind() | Edit this page View Source SetLayerToColor() Declaration public static void SetLayerToColor() | Edit this page View Source SetLayerToDefault() Declaration public static void SetLayerToDefault() | Edit this page View Source SetLayerToMultiply() Declaration public static void SetLayerToMultiply() | Edit this page View Source SetLayerToShadow() Declaration public static void SetLayerToShadow() | Edit this page View Source SetLayerToWallpaper() Declaration public static void SetLayerToWallpaper() | Edit this page View Source SortLayer(int) Declaration public static void SortLayer(int layerIndex) | Edit this page View Source TryGetAnimationGroup(int, out SpriteGroup) Declaration public static bool TryGetAnimationGroup(int groupID, out SpriteGroup group) | Edit this page View Source TryGetSprite(int, out AngeSprite, bool) Declaration public static bool TryGetSprite(int globalID, out AngeSprite sprite, bool ignoreAnimation = true) | Edit this page View Source TryGetSpriteForGizmos(int, out AngeSprite) Declaration public static bool TryGetSpriteForGizmos(int artworkID, out AngeSprite sprite) | Edit this page View Source TryGetSpriteFromGroup(int, int, out AngeSprite, bool, bool, bool) Declaration public static bool TryGetSpriteFromGroup(int groupID, int index, out AngeSprite sprite, bool loopIndex = true, bool clampIndex = true, bool ignoreAnimatedWhenFailback = true) | Edit this page View Source TryGetSpriteGroup(int, out SpriteGroup) Declaration public static bool TryGetSpriteGroup(int groupID, out SpriteGroup group) | Edit this page View Source TryGetTextureFromSheet<T>(int, int, out T) Declaration public static bool TryGetTextureFromSheet<T>(int spriteID, int sheetIndex, out T texture) | Edit this page View Source UpdatePausing() Declaration [OnGameUpdatePauseless(-512)] public static void UpdatePausing()"
  },
  "api/AngeliA.RendererLayerCapacityAttribute.html": {
    "href": "api/AngeliA.RendererLayerCapacityAttribute.html",
    "title": "Class RendererLayerCapacityAttribute | AngeliA",
    "summary": "Class RendererLayerCapacityAttribute Max rendering cell count for the layer Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax [AttributeUsage(AttributeTargets.Assembly, AllowMultiple = true)] public class RendererLayerCapacityAttribute : Attribute Constructors | Edit this page View Source RendererLayerCapacityAttribute(int, int) Max rendering cell count for the layer Declaration public RendererLayerCapacityAttribute(int layer, int capacity) Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.RestartGameTask.html": {
    "href": "api/AngeliA.RestartGameTask.html",
    "title": "Class RestartGameTask | AngeliA",
    "summary": "Class RestartGameTask Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public class RestartGameTask : Task Fields | Edit this page View Source TYPE_ID Declaration public static readonly int TYPE_ID Methods | Edit this page View Source FrameUpdate() Declaration public override TaskResult FrameUpdate() Overrides Task.FrameUpdate() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.ReverseCellsScope.html": {
    "href": "api/AngeliA.ReverseCellsScope.html",
    "title": "Struct ReverseCellsScope | AngeliA",
    "summary": "Struct ReverseCellsScope Scope that make rendering cells reverse in sorting order Implements IDisposable Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public readonly struct ReverseCellsScope : IDisposable Examples using AngeliA; namespace AngeliaGame; public class Example { [OnGameUpdate] internal static void OnGameUpdate () { using (new ReverseCellsScope()) { // Rendering cells inside will be reversed in sorting order } } } Constructors | Edit this page View Source ReverseCellsScope() Declaration public ReverseCellsScope() Methods | Edit this page View Source Dispose() Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources. Declaration public void Dispose() Implements IDisposable Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.Rigidbody.html": {
    "href": "api/AngeliA.Rigidbody.html",
    "title": "Class Rigidbody | AngeliA",
    "summary": "Class Rigidbody Class for the entities which apply general physics by the system Implements IMapItem ICarrier Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public abstract class Rigidbody : Entity, IMapItem, ICarrier Fields | Edit this page View Source CollisionMask Which physics layers should this entity collide with Declaration public readonly FrameBasedInt CollisionMask | Edit this page View Source FallingGravityScale Amount of gravity apply to this entity when it's moving downward (0 means 0%, 1000 means 100%) Declaration public readonly FrameBasedInt FallingGravityScale | Edit this page View Source GlobalGravity Gravity value that applys to all rigidbody Declaration public static readonly FrameBasedInt GlobalGravity | Edit this page View Source IgnoreGravity True if this entity currently should not apply gravity Declaration public readonly FrameBasedBool IgnoreGravity | Edit this page View Source IgnoreGroundCheck If this entity currently check for touching ground Declaration public readonly FrameBasedBool IgnoreGroundCheck | Edit this page View Source IgnoreInsideGround If this entity currently check for stuck inside ground Declaration public readonly FrameBasedBool IgnoreInsideGround | Edit this page View Source IgnoreMomentum True if this entity currently should not apply any momentum Declaration public readonly FrameBasedBool IgnoreMomentum | Edit this page View Source IgnoreOneway True if this entity currently should not collide with oneway gates Declaration public readonly FrameBasedBool IgnoreOneway | Edit this page View Source IgnorePhysics True if this entity currently should not apply any physics logic Declaration public readonly FrameBasedBool IgnorePhysics | Edit this page View Source MomentumX Velocity X that keep applying on this entity. Every frame the value will move to 0 by \"decay\" Declaration public (int value, int decay) MomentumX | Edit this page View Source MomentumY Velocity Y that keep applying on this entity. Every frame the value will move to 0 by \"decay\" Declaration public (int value, int decay) MomentumY | Edit this page View Source RisingGravityScale Amount of gravity apply to this entity when it's moving upward (0 means 0%, 1000 means 100%) Declaration public readonly FrameBasedInt RisingGravityScale Properties | Edit this page View Source AirDragX Amount of horizontal speed lost every frame Declaration public virtual int AirDragX { get; } | Edit this page View Source AirDragY Amount of vertical speed lost every frame Declaration public virtual int AirDragY { get; } | Edit this page View Source AllowBeingPush True if this entity can be push by other Declaration public virtual bool AllowBeingPush { get; } | Edit this page View Source BounceSpeedRate How many speed remain after this entity collide on another entity (0 means 0%, 1000 means 100%) Declaration public int BounceSpeedRate { get; set; } | Edit this page View Source CarryOtherOnTop Trhe if this entity can carry other ICarrier on top Declaration public virtual bool CarryOtherOnTop { get; } | Edit this page View Source DeltaPositionX Changes of position X at current frame in global space Declaration public int DeltaPositionX { get; } | Edit this page View Source DeltaPositionY Changes of position Y at current frame in global space Declaration public int DeltaPositionY { get; } | Edit this page View Source DestroyWhenInsideGround True if this entity despawns when it's inside ground Declaration public virtual bool DestroyWhenInsideGround { get; } | Edit this page View Source EjectWhenInsideGround True if this entity try to move out of ground automatically when it stuck inside ground Declaration public virtual bool EjectWhenInsideGround { get; } | Edit this page View Source FacingRight True if this entity is facing right side Declaration public virtual bool FacingRight { get; } | Edit this page View Source GroundedID Block ID of the current touching ground block Declaration public int GroundedID { get; set; } | Edit this page View Source InWater True if this entity is inside water Declaration public bool InWater { get; } | Edit this page View Source IsGrounded True if this entity is touching ground Declaration public bool IsGrounded { get; protected set; } | Edit this page View Source IsInsideGround True if this entity is stucking inside the ground Declaration public bool IsInsideGround { get; } | Edit this page View Source MaxGravitySpeed Limitation for speed from gravity Declaration public virtual int MaxGravitySpeed { get; } | Edit this page View Source OffsetX Position offset between X value and Rect.x value Declaration public int OffsetX { get; set; } | Edit this page View Source OffsetY Position offset between Y value and Rect.y value Declaration public int OffsetY { get; set; } | Edit this page View Source PhysicalLayer Which physical layer should this entity fill it's collider in Declaration public abstract int PhysicalLayer { get; } | Edit this page View Source PrevX Position X for the last frame in global space Declaration public int PrevX { get; } | Edit this page View Source PrevY Position Y for the last frame in global space Declaration public int PrevY { get; } | Edit this page View Source Rect Rect position of this entity in global space Declaration public override IRect Rect { get; } Overrides Entity.Rect | Edit this page View Source RequireDodgeOverlap True if this entity do not react to the colliders which already overlaps on it. Declaration public bool RequireDodgeOverlap { get; set; } | Edit this page View Source SelfCollisionMask Intrinsic physics layers this entity should collide with Declaration public virtual int SelfCollisionMask { get; } | Edit this page View Source VelocityX Horizontal velocity at current frame Declaration public int VelocityX { get; set; } | Edit this page View Source VelocityY Vertical velocity at current frame Declaration public int VelocityY { get; set; } | Edit this page View Source WaterFloatSpeed Amount of upward speed apply when the entity inside water Declaration public virtual int WaterFloatSpeed { get; } | Edit this page View Source WaterSpeedRate Amount of speed scales when entity inside water (0 means 0%, 1000 means 100%) Declaration public virtual int WaterSpeedRate { get; } Methods | Edit this page View Source CancelMakeGrounded() Stop making this entity marked as touching ground Declaration public void CancelMakeGrounded() | Edit this page View Source FillAsOnewayUp(int, int) Make this entity fill upward oneway gate into the physics system for given frames long Declaration public void FillAsOnewayUp(int duration = 0, int priority = 0) | Edit this page View Source FillAsTrigger(int, int) Make this entity fill trigger into the physics system for given frames long Declaration public void FillAsTrigger(int duration = 0, int priority = 0) | Edit this page View Source FirstUpdate() [1/4] This function is called every frame when entity is in stage. Prioritize using this function to fill collider in to physics system. Declaration public override void FirstUpdate() Overrides Entity.FirstUpdate() | Edit this page View Source GroundedCheck() Function that holds the touching ground checking logic Declaration protected virtual bool GroundedCheck() | Edit this page View Source InsideGroundCheck() Function that holds the stuch inside ground checking logic Declaration protected virtual bool InsideGroundCheck() | Edit this page View Source MakeGrounded(int, int) Mark this entity as touching ground for given frames long Declaration public void MakeGrounded(int frame = 1, int blockID = 0) int blockID Ground block ID | Edit this page View Source OnActivated() This function is called when entity enter the stage Declaration public override void OnActivated() Overrides Entity.OnActivated() | Edit this page View Source OnInsideGroundDestroyed() This function is called when this entity is despawn by being stuck inside ground Declaration protected virtual void OnInsideGroundDestroyed() | Edit this page View Source PerformGroundCheck(IRect, out PhysicsCell) Return true if the entity is touching ground Declaration public bool PerformGroundCheck(IRect rect, out PhysicsCell hit) Parameters Type Name Description IRect rect Blocks overlap this rect range will be count as touching ground PhysicsCell hit The physics data from the ground block | Edit this page View Source PerformMove(int, int, bool) Make this entity move with physics rules at this frame Declaration public void PerformMove(int speedX, int speedY, bool ignoreCarry = false) Parameters Type Name Description int speedX Delta position X int speedY Delta position Y bool ignoreCarry True if this entity don't carry other on top | Edit this page View Source Push(int) This function is called when the entity is being pushed Declaration public virtual void Push(int speedX) | Edit this page View Source RefreshPrevPosition() Declaration protected void RefreshPrevPosition() | Edit this page View Source Update() [3/4] This function is called every frame when entity is in stage. Prioritize using this function to update physics logic. Declaration public override void Update() Overrides Entity.Update() Implements IMapItem ICarrier Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.RotateCellScope.html": {
    "href": "api/AngeliA.RotateCellScope.html",
    "title": "Struct RotateCellScope | AngeliA",
    "summary": "Struct RotateCellScope Scope that make rendering cells rotate Implements IDisposable Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public readonly struct RotateCellScope : IDisposable Examples using AngeliA; namespace AngeliaGame; public class Example { [OnGameUpdate] internal static void OnGameUpdate () { var cameraRect = Renderer.CameraRect; int rot = QTest.Int(\"Rot\", 0, 0, 360); int pointX = QTest.Int(\"Pivot X\", 4096, 0, 4096 * 2); int pointY = QTest.Int(\"Pivot Y\", 2048, 0, 4096); QTest.Mark(new Int2(cameraRect.x + pointX, cameraRect.y + pointY)); using (var scroll = new RotateCellScope(rot, cameraRect.x + pointX, cameraRect.y + pointY)) { Renderer.Draw( BuiltInSprite.ICON_ENTITY, cameraRect.CenterX(), cameraRect.CenterY(), 500, 500, 0, 512, 512 ); } } } Constructors | Edit this page View Source RotateCellScope() Declaration public RotateCellScope() | Edit this page View Source RotateCellScope(int, int, int, bool) Scope that make rendering cells rotate Declaration public RotateCellScope(int rotation, int pointX = -2147483648, int pointY = -2147483648, bool keepOriginalRotation = false) int pointX Orientation point X in global space int pointY Orientation point Y in global space bool keepOriginalRotation True if only change the position of cells (not rotation) Examples using AngeliA; namespace AngeliaGame; public class Example { [OnGameUpdate] internal static void OnGameUpdate () { var cameraRect = Renderer.CameraRect; int rot = QTest.Int(\"Rot\", 0, 0, 360); int pointX = QTest.Int(\"Pivot X\", 4096, 0, 4096 * 2); int pointY = QTest.Int(\"Pivot Y\", 2048, 0, 4096); QTest.Mark(new Int2(cameraRect.x + pointX, cameraRect.y + pointY)); using (var scroll = new RotateCellScope(rot, cameraRect.x + pointX, cameraRect.y + pointY)) { Renderer.Draw( BuiltInSprite.ICON_ENTITY, cameraRect.CenterX(), cameraRect.CenterY(), 500, 500, 0, 512, 512 ); } } } Methods | Edit this page View Source Dispose() Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources. Declaration public void Dispose() Implements IDisposable Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.Rule.html": {
    "href": "api/AngeliA.Rule.html",
    "title": "Enum Rule | AngeliA",
    "summary": "Enum Rule Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public enum Rule : byte Fields Name Description AnyTile Empty NotSameTile SameTile Whatever Extension Methods Extension.Next<Rule>(Rule) Extension.Prev<Rule>(Rule) Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.Saving-1.html": {
    "href": "api/AngeliA.Saving-1.html",
    "title": "Class Saving<T> | AngeliA",
    "summary": "Class Saving<T> Data that auto save into player saving data Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public abstract class Saving<T> : Saving Type Parameters Name Description T Type of the data Constructors | Edit this page View Source Saving(string, T, SavingLocation) Declaration public Saving(string key, T defaultValue, SavingLocation location) Parameters Type Name Description string key Unique key to identify this data SavingLocation location Set to \"global\" if this data shares between all saving slots Properties | Edit this page View Source DefaultValue Default value Declaration public T DefaultValue { get; init; } | Edit this page View Source Value Current value it holds Declaration public T Value { get; set; } Methods | Edit this page View Source GetValue(bool) Get the value it currently holds Declaration public T GetValue(bool forceLoad = false) | Edit this page View Source SetValue(T, bool) Set the value it currently holds Declaration public void SetValue(T value, bool forceSave = false) | Edit this page View Source StringToValue(string) Convert given string into the value Declaration protected abstract T StringToValue(string str) | Edit this page View Source ValueToString(T) Convert given value into string data Declaration protected abstract string ValueToString(T value) Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.Saving.html": {
    "href": "api/AngeliA.Saving.html",
    "title": "Class Saving | AngeliA",
    "summary": "Class Saving Data that auto save into player saving data Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public abstract class Saving Properties | Edit this page View Source ID AngeHash of the \"Key\" Declaration public int ID { get; init; } | Edit this page View Source Key Unique key to identify this data Declaration public string Key { get; init; } Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.SavingBool.html": {
    "href": "api/AngeliA.SavingBool.html",
    "title": "Class SavingBool | AngeliA",
    "summary": "Class SavingBool Boolean data that auto save into player saving data Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public class SavingBool : Saving<bool> Constructors | Edit this page View Source SavingBool(string, bool, SavingLocation) Boolean data that auto save into player saving data Declaration public SavingBool(string key, bool defaultValue, SavingLocation location) Parameters Type Name Description string key Unique key to identify this data SavingLocation location Set to \"global\" if this data shares between all saving slots Methods | Edit this page View Source StringToValue(string) Convert given string into the value Declaration protected override bool StringToValue(string str) Overrides Saving<bool>.StringToValue(string) | Edit this page View Source ValueToString(bool) Convert given value into string data Declaration protected override string ValueToString(bool value) Overrides Saving<bool>.ValueToString(bool) Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.SavingColor32.html": {
    "href": "api/AngeliA.SavingColor32.html",
    "title": "Class SavingColor32 | AngeliA",
    "summary": "Class SavingColor32 Color data that auto save into player saving data Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public class SavingColor32 : Saving<Color32> Constructors | Edit this page View Source SavingColor32(string, Color32, SavingLocation) Color data that auto save into player saving data Declaration public SavingColor32(string key, Color32 defaultValue, SavingLocation location) Parameters Type Name Description string key Unique key to identify this data SavingLocation location Set to \"global\" if this data shares between all saving slots Methods | Edit this page View Source StringToValue(string) Convert given string into the value Declaration protected override Color32 StringToValue(string str) Overrides Saving<Color32>.StringToValue(string) | Edit this page View Source ValueToString(Color32) Convert given value into string data Declaration protected override string ValueToString(Color32 value) Overrides Saving<Color32>.ValueToString(Color32) Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.SavingColor32NoAlpha.html": {
    "href": "api/AngeliA.SavingColor32NoAlpha.html",
    "title": "Class SavingColor32NoAlpha | AngeliA",
    "summary": "Class SavingColor32NoAlpha Color data without alpha value that auto save into player saving data Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public class SavingColor32NoAlpha : Saving<Color32> Constructors | Edit this page View Source SavingColor32NoAlpha(string, Color32, SavingLocation) Color data without alpha value that auto save into player saving data Declaration public SavingColor32NoAlpha(string key, Color32 defaultValue, SavingLocation location) Parameters Type Name Description string key Unique key to identify this data SavingLocation location Set to \"global\" if this data shares between all saving slots Methods | Edit this page View Source StringToValue(string) Convert given string into the value Declaration protected override Color32 StringToValue(string str) Overrides Saving<Color32>.StringToValue(string) | Edit this page View Source ValueToString(Color32) Convert given value into string data Declaration protected override string ValueToString(Color32 value) Overrides Saving<Color32>.ValueToString(Color32) Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.SavingHotkey.html": {
    "href": "api/AngeliA.SavingHotkey.html",
    "title": "Class SavingHotkey | AngeliA",
    "summary": "Class SavingHotkey Hotkey data that auto save into player saving data Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public class SavingHotkey : Saving<Hotkey> Constructors | Edit this page View Source SavingHotkey(string, Hotkey, SavingLocation) Hotkey data that auto save into player saving data Declaration public SavingHotkey(string key, Hotkey defaultValue, SavingLocation location) Parameters Type Name Description string key Unique key to identify this data SavingLocation location Set to \"global\" if this data shares between all saving slots Methods | Edit this page View Source StringToValue(string) Convert given string into the value Declaration protected override Hotkey StringToValue(string str) Overrides Saving<Hotkey>.StringToValue(string) | Edit this page View Source ValueToString(Hotkey) Convert given value into string data Declaration protected override string ValueToString(Hotkey value) Overrides Saving<Hotkey>.ValueToString(Hotkey) Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.SavingInt.html": {
    "href": "api/AngeliA.SavingInt.html",
    "title": "Class SavingInt | AngeliA",
    "summary": "Class SavingInt Intager data that auto save into player saving data Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public class SavingInt : Saving<int> Constructors | Edit this page View Source SavingInt(string, int, SavingLocation) Intager data that auto save into player saving data Declaration public SavingInt(string key, int defaultValue, SavingLocation location) Parameters Type Name Description string key Unique key to identify this data SavingLocation location Set to \"global\" if this data shares between all saving slots Methods | Edit this page View Source StringToValue(string) Convert given string into the value Declaration protected override int StringToValue(string str) Overrides Saving<int>.StringToValue(string) | Edit this page View Source ValueToString(int) Convert given value into string data Declaration protected override string ValueToString(int value) Overrides Saving<int>.ValueToString(int) Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.SavingLocation.html": {
    "href": "api/AngeliA.SavingLocation.html",
    "title": "Enum SavingLocation | AngeliA",
    "summary": "Enum SavingLocation Where should the saving data local inside the disk Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public enum SavingLocation Fields Name Description Global Shared between all saving slot Slot Only for it's own saving slot Extension Methods Extension.Next<SavingLocation>(SavingLocation) Extension.Prev<SavingLocation>(SavingLocation) Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.SavingString.html": {
    "href": "api/AngeliA.SavingString.html",
    "title": "Class SavingString | AngeliA",
    "summary": "Class SavingString String data that auto save into player saving data Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public class SavingString : Saving<string> Constructors | Edit this page View Source SavingString(string, string, SavingLocation) String data that auto save into player saving data Declaration public SavingString(string key, string defaultValue, SavingLocation location) Parameters Type Name Description string key Unique key to identify this data SavingLocation location Set to \"global\" if this data shares between all saving slots Methods | Edit this page View Source StringToValue(string) Convert given string into the value Declaration protected override string StringToValue(string str) Overrides Saving<string>.StringToValue(string) | Edit this page View Source ValueToString(string) Convert given value into string data Declaration protected override string ValueToString(string value) Overrides Saving<string>.ValueToString(string) Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.SavingSystem.html": {
    "href": "api/AngeliA.SavingSystem.html",
    "title": "Class SavingSystem | AngeliA",
    "summary": "Class SavingSystem Core system for handle data that auto keeps inside disk. Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public static class SavingSystem Properties | Edit this page View Source FileLoaded True if the internal pool is loaded from file Declaration public static bool FileLoaded { get; } | Edit this page View Source IsDirty True if there's any unsaved change Declaration public static bool IsDirty { get; set; } | Edit this page View Source PoolReady True if the internal pool is ready to use Declaration public static bool PoolReady { get; } | Edit this page View Source PoolVersion Data version of the internal pool Declaration public static int PoolVersion { get; } Methods | Edit this page View Source HasKey(Saving) True if the given key exists in the internal pool Declaration public static bool HasKey(Saving saving) | Edit this page View Source HasKey(int) True if the given key exists in the internal pool Declaration public static bool HasKey(int id)"
  },
  "api/AngeliA.SelectPlayerTask.html": {
    "href": "api/AngeliA.SelectPlayerTask.html",
    "title": "Class SelectPlayerTask | AngeliA",
    "summary": "Class SelectPlayerTask Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public class SelectPlayerTask : Task Fields | Edit this page View Source TYPE_ID Declaration public static readonly int TYPE_ID Methods | Edit this page View Source FrameUpdate() Declaration public override TaskResult FrameUpdate() Overrides Task.FrameUpdate() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.Sheet.html": {
    "href": "api/AngeliA.Sheet.html",
    "title": "Class Sheet | AngeliA",
    "summary": "Class Sheet Artwork sheet that holds sprites, sprite groups, atlas and textures data for rendering Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public class Sheet Constructors | Edit this page View Source Sheet(bool, bool, bool) Artwork sheet that holds sprites, sprite groups, atlas and textures data for rendering Declaration public Sheet(bool ignoreGroups = false, bool ignoreSpriteWithPaletteTag = true, bool ignoreTextureAndPixels = false) Parameters Type Name Description bool ignoreGroups True if do not require sprite group bool ignoreSpriteWithPaletteTag True if do not load sprites with Tag.Palette bool ignoreTextureAndPixels True if do not load pixel data and do not create textures | Edit this page View Source Sheet(List<AngeSprite>, List<Atlas>, bool, bool, bool) Create a sheet with given data Declaration public Sheet(List<AngeSprite> sprites, List<Atlas> atlasInfo, bool ignoreGroups = false, bool ignoreSpriteWithIgnoreTag = true, bool ignoreTextureAndPixels = false) bool ignoreGroups True if do not require sprite group bool ignoreSpriteWithIgnoreTag True if do not load sprites with Tag.Palette bool ignoreTextureAndPixels True if do not load pixel data and do not create textures Fields | Edit this page View Source Atlas All atlas instances inside this sheet Declaration public readonly List<Atlas> Atlas | Edit this page View Source AtlasPool Declaration public readonly Dictionary<int, Atlas> AtlasPool | Edit this page View Source GroupPool Declaration public readonly Dictionary<int, SpriteGroup> GroupPool | Edit this page View Source Groups All sprite group instances inside this sheet Declaration public readonly List<SpriteGroup> Groups | Edit this page View Source SpritePool Declaration public readonly Dictionary<int, AngeSprite> SpritePool | Edit this page View Source Sprites All sprite instances inside this sheet Declaration public readonly List<AngeSprite> Sprites | Edit this page View Source TexturePool Declaration public readonly Dictionary<int, object> TexturePool Methods | Edit this page View Source AddSprite(AngeSprite) Add the given sprite into this sheet Declaration public bool AddSprite(AngeSprite sprite) Returns Type Description bool True if the sprite is successfuly added | Edit this page View Source Clear() Clear all content inside this sheet Declaration public void Clear() | Edit this page View Source CombineAllSheetInFolder(string, bool, string) Add all content from sheets from given folder into this sheet. Declaration public void CombineAllSheetInFolder(string folderPath, bool topOnly = false, string ignoreNameWithExtension = \"\") string ignoreNameWithExtension Ignore sheets with this name | Edit this page View Source CombineSheet(Sheet, bool) Add all content from given sheet into this sheet. Declaration public void CombineSheet(Sheet sheet, bool renameDuplicateSprites = false) bool renameDuplicateSprites Set to false to skip the sprite with same name | Edit this page View Source ContainGroup(int) True if there is a group with given ID. Declaration public bool ContainGroup(int id) | Edit this page View Source ContainSprite(int) True if there is a sprite with given ID. Declaration public bool ContainSprite(int id) | Edit this page View Source CreateSprite(string, IRect, int) Create a sprite without add into this sheet Declaration public AngeSprite CreateSprite(string name, IRect pixelRect, int atlasID) | Edit this page View Source GetAvailableSpriteName(string) Get a new sprite name that be add into this sheet Declaration public string GetAvailableSpriteName(string basicName) | Edit this page View Source GetSpriteAnimationDuration(SpriteGroup) Get how long does the given animation group takes in frame Declaration public int GetSpriteAnimationDuration(SpriteGroup aniGroup) | Edit this page View Source IndexOfGroup(int) Find the group's index in the list Declaration public int IndexOfGroup(int id) Returns Type Description int -1 if the group not found | Edit this page View Source IndexOfSprite(int) Find the sprite's index in the list Declaration public int IndexOfSprite(int id) Returns Type Description int -1 if the sprite not found | Edit this page View Source LoadFromDisk(string) Declaration public bool LoadFromDisk(string path) | Edit this page View Source MoveAtlas(int, int, bool) Move the atlas inside the atlas list Declaration public void MoveAtlas(int from, int to, bool intoFolder = false) | Edit this page View Source RemoveAllAtlasAndSpritesInsideExcept(int) Declaration public void RemoveAllAtlasAndSpritesInsideExcept(int ignoreAtlasID) | Edit this page View Source RemoveAtlasAndAllSpritesInside(int) Declaration public void RemoveAtlasAndAllSpritesInside(int atlasIndex) | Edit this page View Source RemoveGroupAndAllSpritesInside(int) Declaration public void RemoveGroupAndAllSpritesInside(int groupIndex) | Edit this page View Source RemoveSprite(int) Declaration public void RemoveSprite(int spriteIndex) | Edit this page View Source RenameAtlas(int, string) Declaration public bool RenameAtlas(int atlasID, string newName) | Edit this page View Source RenameSprite(AngeSprite, string) Declaration public bool RenameSprite(AngeSprite sprite, string newName) | Edit this page View Source RenameSprite(int, string) Declaration public bool RenameSprite(int id, string newName) | Edit this page View Source SaveToDisk(string) Declaration public void SaveToDisk(string path) | Edit this page View Source SetData(List<AngeSprite>, List<Atlas>) Set the sprites and atlas data of this sheet Declaration public void SetData(List<AngeSprite> sprites, List<Atlas> atlasInfo) | Edit this page View Source SyncSpritePixelsIntoTexturePool(AngeSprite) Update rendering texture for the sprite if the pixel content changed Declaration public void SyncSpritePixelsIntoTexturePool(AngeSprite sprite) | Edit this page View Source TryGetSpriteFromAnimationFrame(SpriteGroup, int, out AngeSprite, int) Get current showing sprite from a animation group Declaration public bool TryGetSpriteFromAnimationFrame(SpriteGroup group, int localFrame, out AngeSprite sprite, int loopStart = -1) int localFrame Animation frame start from 0 AngeSprite sprite Result sprite int loopStart Sprite index this animation start to play after it reach the end. Set to -1 to use loop start value from group. Returns Type Description bool True if the sprite is successfuly found | Edit this page View Source TryGetTextureFromPool(int, out object) Get texture for rendering from given ID Declaration public bool TryGetTextureFromPool(int spriteID, out object texture) Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.SheetCharacterRenderer.html": {
    "href": "api/AngeliA.SheetCharacterRenderer.html",
    "title": "Class SheetCharacterRenderer | AngeliA",
    "summary": "Class SheetCharacterRenderer Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public class SheetCharacterRenderer : CharacterRenderer Constructors | Edit this page View Source SheetCharacterRenderer(Character) Declaration public SheetCharacterRenderer(Character target) Properties | Edit this page View Source RenderedCell Declaration public Cell RenderedCell { get; } Methods | Edit this page View Source LateUpdate() Declaration public override void LateUpdate() Overrides CharacterRenderer.LateUpdate() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.SheetIndexScope.html": {
    "href": "api/AngeliA.SheetIndexScope.html",
    "title": "Struct SheetIndexScope | AngeliA",
    "summary": "Struct SheetIndexScope Scope that change sheet index of the rendering cells inside Implements IDisposable Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public readonly struct SheetIndexScope : IDisposable Examples using AngeliA; namespace AngeliaGame; public class Example { [OnGameUpdate] internal static void OnGameUpdate () { using (new SheetIndexScope(/*Your Sheet Index*/)) { // Rendering cells inside will render with given sheet } } } Constructors | Edit this page View Source SheetIndexScope(int) Scope that change sheet index of the rendering cells inside Declaration public SheetIndexScope(int sheet) Methods | Edit this page View Source Dispose() Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources. Declaration public void Dispose() Implements IDisposable Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.ShiftCellsScope.html": {
    "href": "api/AngeliA.ShiftCellsScope.html",
    "title": "Struct ShiftCellsScope | AngeliA",
    "summary": "Struct ShiftCellsScope Scope that shift position of the rendering cells inside Implements IDisposable Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public readonly struct ShiftCellsScope : IDisposable Examples using AngeliA; namespace AngeliaGame; public class Example { [OnGameUpdate] internal static void OnGameUpdate () { using (new ShiftCellsScope(/*Your Offset Position Here*/)) { // Rendering cells inside will offset their position } } } Constructors | Edit this page View Source ShiftCellsScope(Int2) Scope that shift position of the rendering cells inside Declaration public ShiftCellsScope(Int2 shift) Examples using AngeliA; namespace AngeliaGame; public class Example { [OnGameUpdate] internal static void OnGameUpdate () { using (new ShiftCellsScope(/*Your Offset Position Here*/)) { // Rendering cells inside will offset their position } } } Methods | Edit this page View Source Dispose() Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources. Declaration public void Dispose() Implements IDisposable Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.Sky.html": {
    "href": "api/AngeliA.Sky.html",
    "title": "Class Sky | AngeliA",
    "summary": "Class Sky Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public static class Sky Properties | Edit this page View Source GradientBottom Declaration public static ColorGradient GradientBottom { get; set; } | Edit this page View Source GradientTop Declaration public static ColorGradient GradientTop { get; set; } | Edit this page View Source InGameDaytime01 Declaration public static float InGameDaytime01 { get; } | Edit this page View Source SkyTintBottomColor Declaration public static Color32 SkyTintBottomColor { get; } | Edit this page View Source SkyTintTopColor Declaration public static Color32 SkyTintTopColor { get; } | Edit this page View Source SunlightTint Declaration public static ColorGradient SunlightTint { get; set; } | Edit this page View Source SunlightTintColor Declaration public static Color32 SunlightTintColor { get; } Methods | Edit this page View Source ForceSkyboxTint(Color32, Color32, int) Declaration public static void ForceSkyboxTint(Color32 top, Color32 bottom, int duration = 1) | Edit this page View Source ForceSkyboxTint(Color32, int) Declaration public static void ForceSkyboxTint(Color32 color, int duration = 1) | Edit this page View Source GetInGameDaytimeFromRealTime() Declaration public static float GetInGameDaytimeFromRealTime() | Edit this page View Source RefreshSkyTintFromDateTime() Declaration [OnGameRestart(0)] public static void RefreshSkyTintFromDateTime() | Edit this page View Source SetInGameDaytime(float) Declaration public static void SetInGameDaytime(float newDaytime01)"
  },
  "api/AngeliA.SoundData.html": {
    "href": "api/AngeliA.SoundData.html",
    "title": "Class SoundData | AngeliA",
    "summary": "Class SoundData Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public class SoundData : AudioData Fields | Edit this page View Source LastPlayFrame Declaration public int LastPlayFrame | Edit this page View Source SoundObjects Declaration public object[] SoundObjects | Edit this page View Source StartFrames Declaration public int[] StartFrames Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.SpawnEntityTask.html": {
    "href": "api/AngeliA.SpawnEntityTask.html",
    "title": "Class SpawnEntityTask | AngeliA",
    "summary": "Class SpawnEntityTask Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public class SpawnEntityTask : Task Fields | Edit this page View Source EntityID Declaration public int EntityID | Edit this page View Source ForceReactive Declaration public bool ForceReactive | Edit this page View Source TYPE_ID Declaration public static readonly int TYPE_ID | Edit this page View Source X Declaration public int X | Edit this page View Source Y Declaration public int Y Methods | Edit this page View Source FrameUpdate() Declaration public override TaskResult FrameUpdate() Overrides Task.FrameUpdate() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.SpriteCode.html": {
    "href": "api/AngeliA.SpriteCode.html",
    "title": "Class SpriteCode | AngeliA",
    "summary": "Class SpriteCode Quick setup for an artwork sprite Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public class SpriteCode Examples private static readonly SpriteCode SpriteCodeName = \"Sprite/Group name in artwork sheet\"; Constructors | Edit this page View Source SpriteCode(string) Quick setup for an artwork sprite Declaration public SpriteCode(string name) Examples private static readonly SpriteCode SpriteCodeName = \"Sprite/Group name in artwork sheet\"; Fields | Edit this page View Source ID Declaration public readonly int ID Properties | Edit this page View Source Name Declaration public string Name { get; } Operators | Edit this page View Source implicit operator int(SpriteCode) Declaration public static implicit operator int(SpriteCode code) | Edit this page View Source implicit operator SpriteCode(string) Declaration public static implicit operator SpriteCode(string value) Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.SpriteGroup.html": {
    "href": "api/AngeliA.SpriteGroup.html",
    "title": "Class SpriteGroup | AngeliA",
    "summary": "Class SpriteGroup A chain of AngeSprites Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public class SpriteGroup Fields | Edit this page View Source Animated True if this group is animation group Declaration public bool Animated | Edit this page View Source ID Unique ID of this group Declaration public int ID | Edit this page View Source LoopStart Sprite index this animation start to play after it reach the end. Set to -1 for not loop. Declaration public int LoopStart | Edit this page View Source MAX_COUNT Declaration public const int MAX_COUNT = 256 | Edit this page View Source Name Unique name of this group Declaration public string Name | Edit this page View Source Random True if this group should apply random paiting brush in map editor Declaration public bool Random | Edit this page View Source Sprites Instance of sprite it holds Declaration public List<AngeSprite> Sprites | Edit this page View Source WithRule True if this group contains sprite with auto tiling rule Declaration public bool WithRule Properties | Edit this page View Source Count How many sprites does this group have Declaration public int Count { get; } Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.Stage.html": {
    "href": "api/AngeliA.Stage.html",
    "title": "Class Stage | AngeliA",
    "summary": "Class Stage Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public static class Stage Fields | Edit this page View Source SETTING_SET_VIEW_H Declaration public const int SETTING_SET_VIEW_H = 921736238 | Edit this page View Source SETTING_SET_VIEW_X Declaration public const int SETTING_SET_VIEW_X = 921736235 | Edit this page View Source SETTING_SET_VIEW_Y Declaration public const int SETTING_SET_VIEW_Y = 921736236 | Edit this page View Source SETTING_SET_VIEW_Z Declaration public const int SETTING_SET_VIEW_Z = 921736237 Properties | Edit this page View Source AntiSpawnRect Declaration public static IRect AntiSpawnRect { get; } | Edit this page View Source DelayingViewHeight Declaration public static int? DelayingViewHeight { get; } | Edit this page View Source DelayingViewX Declaration public static int? DelayingViewX { get; } | Edit this page View Source DelayingViewY Declaration public static int? DelayingViewY { get; } | Edit this page View Source Enable Declaration public static bool Enable { get; } | Edit this page View Source Entities Declaration public static Entity[][] Entities { get; } | Edit this page View Source EntityCounts Declaration public static int[] EntityCounts { get; } | Edit this page View Source IsReady Declaration public static bool IsReady { get; } | Edit this page View Source LastSettleFrame Declaration public static int LastSettleFrame { get; } | Edit this page View Source SpawnRect Declaration public static IRect SpawnRect { get; } | Edit this page View Source ViewRect Declaration public static IRect ViewRect { get; } | Edit this page View Source ViewZ Declaration public static int ViewZ { get; } Methods | Edit this page View Source DespawnAllEntitiesOfType<E>(int) Declaration public static void DespawnAllEntitiesOfType<E>(int targetLayer = -1) where E : Entity | Edit this page View Source DespawnAllNonUiEntities(bool) Declaration public static void DespawnAllNonUiEntities(bool refreshImmediately = false) | Edit this page View Source FindEntity(int) Declaration public static Entity FindEntity(int typeID) | Edit this page View Source FindEntity<T>() Declaration public static T FindEntity<T>() where T : Entity | Edit this page View Source ForAllActiveEntities<E>(int) Declaration public static IEnumerable<E> ForAllActiveEntities<E>(int entityLayer = -1) where E : Entity | Edit this page View Source GetCameraCullingPadding() Declaration public static Int4 GetCameraCullingPadding() | Edit this page View Source GetEntityCapacity(int) Declaration public static int GetEntityCapacity(int typeID) | Edit this page View Source GetEntityType(int) Declaration public static Type GetEntityType(int id) | Edit this page View Source GetOrSpawnEntity(int, int, int) Declaration public static Entity GetOrSpawnEntity(int typeID, int x, int y) | Edit this page View Source GetOrSpawnEntity<T>(int, int) Declaration public static T GetOrSpawnEntity<T>(int x, int y) where T : Entity | Edit this page View Source GetSpawnedEntityCount(int) Declaration public static int GetSpawnedEntityCount(int id) | Edit this page View Source IsEntityRequireDrawBehind(int) Declaration public static bool IsEntityRequireDrawBehind(int id) | Edit this page View Source IsEntityRequireReposition(int) Declaration public static bool IsEntityRequireReposition(int typeID) | Edit this page View Source IsValidEntityID(int) Declaration public static bool IsValidEntityID(int id) | Edit this page View Source PeekOrGetEntity(int) Declaration public static Entity PeekOrGetEntity(int typeID) | Edit this page View Source PeekOrGetEntity<T>() Declaration public static T PeekOrGetEntity<T>() where T : Entity | Edit this page View Source RemoveStagedEntity(Int3) Declaration public static void RemoveStagedEntity(Int3 instanceID) | Edit this page View Source SetViewPositionDelay(int, int, int, int) Declaration public static void SetViewPositionDelay(int x, int y, int lerp = 1000, int priority = -2147483648) | Edit this page View Source SetViewRectImmediately(IRect, bool, bool) Declaration public static void SetViewRectImmediately(IRect newRect, bool remapAllRenderingCells = false, bool resetDelay = true) | Edit this page View Source SetViewSizeDelay(int, int, int, bool) Declaration public static void SetViewSizeDelay(int height, int lerp = 1000, int priority = -2147483648, bool centralized = false) | Edit this page View Source SetViewXDelay(int, int, int) Declaration public static void SetViewXDelay(int x, int lerp = 1000, int priority = -2147483648) | Edit this page View Source SetViewYDelay(int, int, int) Declaration public static void SetViewYDelay(int y, int lerp = 1000, int priority = -2147483648) | Edit this page View Source SetViewZ(int, bool) Declaration public static void SetViewZ(int newZ, bool immediately = false) | Edit this page View Source Settle() Declaration public static void Settle() | Edit this page View Source SpawnEntity(int, int, int) Declaration public static Entity SpawnEntity(int typeID, int x, int y) | Edit this page View Source SpawnEntityFromWorld(int, int, int, int, int, int, bool) Declaration public static Entity SpawnEntityFromWorld(int typeID, int x, int y, int z, int reposDeltaX = 0, int reposDeltaY = 0, bool forceSpawn = false) | Edit this page View Source SpawnEntity<T>(int, int) Declaration public static T SpawnEntity<T>(int x, int y) where T : Entity | Edit this page View Source TryFindEntity(int, out Entity) Declaration public static bool TryFindEntity(int typeID, out Entity result) | Edit this page View Source TryFindEntityNearby<E>(Int2, out E, Func<E, bool>) Declaration public static bool TryFindEntityNearby<E>(Int2 pos, out E finalTarget, Func<E, bool> condition = null) | Edit this page View Source TryFindEntity<E>(out E) Declaration public static bool TryFindEntity<E>(out E result) where E : Entity | Edit this page View Source TryGetEntities(int, out ReadOnlySpan<Entity>, out int) Declaration public static bool TryGetEntities(int layer, out ReadOnlySpan<Entity> entities, out int count) | Edit this page View Source TryGetStagedEntity(Int3, out Entity) Declaration public static bool TryGetStagedEntity(Int3 instanceID, out Entity instance) | Edit this page View Source TryRepositionEntity(Entity, bool) Declaration public static void TryRepositionEntity(Entity entity, bool carryThoughZ = false) | Edit this page View Source TrySpawnEntity(int, int, int, out Entity) Declaration public static bool TrySpawnEntity(int typeID, int x, int y, out Entity entity) | Edit this page View Source TrySpawnEntity(int, object, object, out Entity) Declaration public static void TrySpawnEntity(int tYPE_ID, object x, object value, out Entity _) | Edit this page View Source TrySpawnEntity<T>(int, int, out T) Declaration public static bool TrySpawnEntity<T>(int x, int y, out T entity) where T : Entity"
  },
  "api/AngeliA.SummonAttackness.html": {
    "href": "api/AngeliA.SummonAttackness.html",
    "title": "Class SummonAttackness | AngeliA",
    "summary": "Class SummonAttackness Behavior class that handles attack logic for summon type character Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public class SummonAttackness : CharacterAttackness Constructors | Edit this page View Source SummonAttackness(Character) Behavior class that handles attack logic for summon type character Declaration public SummonAttackness(Character character) Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.SwitchItem-1.html": {
    "href": "api/AngeliA.SwitchItem-1.html",
    "title": "Class SwitchItem<TargetItem> | AngeliA",
    "summary": "Class SwitchItem<TargetItem> A type of item that switch to another item when use Implements IMapItem Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public abstract class SwitchItem<TargetItem> : Item, IMapItem where TargetItem : Item Type Parameters Name Description TargetItem The item it will switch to Constructors | Edit this page View Source SwitchItem() Declaration public SwitchItem() Properties | Edit this page View Source MaxStackCount Count limitation for multiple items inside one inventory slot Declaration public override int MaxStackCount { get; } Overrides Item.MaxStackCount | Edit this page View Source TargetID ID of the item it will switch to Declaration public int TargetID { get; init; } Methods | Edit this page View Source CanUse(Character) True if this item can be use at current frame Declaration public override bool CanUse(Character character) Overrides Item.CanUse(Character) | Edit this page View Source Use(Character, int, int, out bool) Perform the logic when the item get used Declaration public override bool Use(Character character, int inventoryID, int itemIndex, out bool consume) int inventoryID Inventory ID of this holder int itemIndex Index of this item inside the inventory bool consume True if the item should disappear after being used Returns Type Description bool True if the item is used Overrides Item.Use(Character, int, int, out bool) Implements IMapItem Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.Tag.html": {
    "href": "api/AngeliA.Tag.html",
    "title": "Enum Tag | AngeliA",
    "summary": "Enum Tag Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax [Flags] public enum Tag Fields Name Description Climb Can be climb by characters and allow them move horizontaly ClimbStable Can be climb by characters with fixed horizontal position ExplosiveDamage Damage from explosion FireDamage Damage from fire GrabSide Target can be grab from side GrabTop Target can be grab from below HideLimb Target cloth require limb behind not be render IceDamage Damage from ice LightenDamage Damage from electricity LoopStart Target sprite is the start frame of the loop MagicalDamage Damage from magic Mark Used in general perpose NoSlide Target can not be slide as wall None No tag OnewayDown Oneway gate facing downward OnewayLeft Oneway gate facing leftward OnewayRight Oneway gate facing rightward OnewayUp Oneway gate facing upward Palette Target sprite is a palette for pixel editing. PhysicalDamage General type of damage PoisonDamage Damage from poison Random When painting sprite from this group with map editor. It randomly select one sprite from this group and paint. ShowLimb Target cloth require limb behind to be render Slide Target can be slide as wall Slip Target is slippery Unbreackable Target can not be break or pick Water Target is water Extension Methods Extension.Next<Tag>(Tag) Extension.Prev<Tag>(Tag) TagUtil.HasAll(Tag, Tag) TagUtil.HasAny(Tag, Tag) Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.TagUtil.html": {
    "href": "api/AngeliA.TagUtil.html",
    "title": "Class TagUtil | AngeliA",
    "summary": "Class TagUtil Utility class for tags Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public static class TagUtil Fields | Edit this page View Source ALL_TAG_NAMES Enum name of tags Declaration public static readonly string[] ALL_TAG_NAMES | Edit this page View Source AllDamages Add damage tags Declaration public const Tag AllDamages = PhysicalDamage | ExplosiveDamage | MagicalDamage | PoisonDamage | FireDamage | IceDamage | LightenDamage | Edit this page View Source NonExplosiveDamage All damage tags without explosive damage Declaration public const Tag NonExplosiveDamage = PhysicalDamage | MagicalDamage | PoisonDamage | FireDamage | IceDamage | LightenDamage | Edit this page View Source TAG_COUNT Total count of tags Declaration public const int TAG_COUNT = 26 Methods | Edit this page View Source GetTagAt(int) Get tag at given index Declaration public static Tag GetTagAt(int index) | Edit this page View Source HasAll(Tag, Tag) True if source tag contains all tags from mask Declaration public static bool HasAll(this Tag self, Tag mask) | Edit this page View Source HasAny(Tag, Tag) True if source tag contains any tag from mask Declaration public static bool HasAny(this Tag self, Tag mask)"
  },
  "api/AngeliA.Tail.html": {
    "href": "api/AngeliA.Tail.html",
    "title": "Class Tail | AngeliA",
    "summary": "Class Tail Tail body gadget for pose-style character Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public abstract class Tail : BodyGadget Properties | Edit this page View Source AngleAmountRoot Total rotating angle amount for limb rotation (0 means 0%, 1000 means 100%) Declaration protected virtual int AngleAmountRoot { get; } | Edit this page View Source AngleAmountSubsequent Subsequent sugment's rotating angle amount for limb rotation (0 means 0%, 1000 means 100%) Declaration protected virtual int AngleAmountSubsequent { get; } | Edit this page View Source AngleOffset Total offset angle for the root sugment Declaration protected virtual int AngleOffset { get; } | Edit this page View Source FrameDelta Looping duration for the less influential part limb rotation Declaration protected virtual int FrameDelta { get; } | Edit this page View Source FrameLen Looping duration for the limb rotation Declaration protected virtual int FrameLen { get; } | Edit this page View Source Frequency Motion frequency for the limb rotation, smaller means faster Declaration protected virtual int Frequency { get; } | Edit this page View Source FrequencyAlt Motion frequency for the less influential part limb rotation, smaller means faster Declaration protected virtual int FrequencyAlt { get; } | Edit this page View Source GadgetType Type of this body gadget Declaration public override sealed BodyGadgetType GadgetType { get; } Overrides BodyGadget.GadgetType | Edit this page View Source LimbGrow Size-growing amount for limb rotation (0 means 0%, 1000 means 100%) Declaration protected virtual int LimbGrow { get; } | Edit this page View Source OffsetX Total position offset X Declaration protected virtual int OffsetX { get; } | Edit this page View Source OffsetY Total position offset Y Declaration protected virtual int OffsetY { get; } | Edit this page View Source SpriteLoaded True if artwork sprite is loaded Declaration public override bool SpriteLoaded { get; } Overrides BodyGadget.SpriteLoaded Methods | Edit this page View Source DrawGadget(PoseCharacterRenderer) Render the gadget for the given character Declaration public override void DrawGadget(PoseCharacterRenderer renderer) Overrides BodyGadget.DrawGadget(PoseCharacterRenderer) | Edit this page View Source DrawGadgetFromPool(PoseCharacterRenderer) Declaration public static void DrawGadgetFromPool(PoseCharacterRenderer renderer) | Edit this page View Source DrawGadgetGizmos(IRect, Color32, int) Render the gadget as gizmos Declaration public override void DrawGadgetGizmos(IRect rect, Color32 tint, int z) Parameters Type Name Description IRect rect Global rect position Color32 tint Color tint int z Z position for sorting Overrides BodyGadget.DrawGadgetGizmos(IRect, Color32, int) | Edit this page View Source DrawSpriteAsSimpleTail(OrientedSprite, int, int, bool, bool, bool, int) Draw given artwork sprite as tail with only one segment Declaration public static void DrawSpriteAsSimpleTail(OrientedSprite oSprite, int x, int y, bool facingFront, bool facingRight, bool facingUp, int z = -2147483648) Parameters Type Name Description OrientedSprite oSprite Artwork sprite int x Position X in global space int y Position Y in global space bool facingFront Is character facing front bool facingRight Is character facing right bool facingUp Is character facing up int z Z value for sorting rendering cell | Edit this page View Source DrawSpriteAsWhipTail(OrientedSprite, int, int, bool, bool, bool, int, int, int, int, int, int, int, int, int, int, bool, int, int) Draw given artwork sprite as tail at given position Declaration public static void DrawSpriteAsWhipTail(OrientedSprite oSprite, int x, int y, bool facingFront, bool facingRight, bool facingUp, int frequency = 113, int frequencyAlt = 277, int frameLen = 219, int frameDelta = 37, int angleAmountRoot = 1000, int angleAmountSubsequent = 1000, int angleOffset = 0, int limbGrow = 1000, int offsetX = 0, int offsetY = 0, bool isFlying = false, int frameOffset = 0, int z = -2147483648) Parameters Type Name Description OrientedSprite oSprite Artwork sprite int x Position X in global space int y Position Y in global space bool facingFront Is character facing front bool facingRight Is character facing right bool facingUp Is character facing up int frequency Motion frequency for the limb rotation, smaller means faster int frequencyAlt Motion frequency for the less influential part limb rotation, smaller means faster int frameLen Looping duration for the limb rotation int frameDelta Looping duration for the less influential part limb rotation int angleAmountRoot Total rotating angle amount for limb rotation (0 means 0%, 1000 means 100%) int angleAmountSubsequent Subsequent sugment's rotating angle amount for limb rotation (0 means 0%, 1000 means 100%) int angleOffset Total offset angle for the root sugment int limbGrow Size-growing amount for limb rotation (0 means 0%, 1000 means 100%) int offsetX Total position offset X int offsetY Total position offset Y bool isFlying Is character flying int frameOffset Current animation frame int z Z value for sorting rendering cell | Edit this page View Source FillFromSheet(string) Load sprite data from Renderer.CurrentSheet Declaration public override bool FillFromSheet(string name) Overrides BodyGadget.FillFromSheet(string) Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.Task.html": {
    "href": "api/AngeliA.Task.html",
    "title": "Class Task | AngeliA",
    "summary": "Class Task Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public abstract class Task Properties | Edit this page View Source LocalFrame Declaration public int LocalFrame { get; } | Edit this page View Source UserData Declaration public object UserData { get; } Methods | Edit this page View Source FrameUpdate() Declaration public abstract TaskResult FrameUpdate() | Edit this page View Source OnEnd() Declaration public virtual void OnEnd() | Edit this page View Source OnStart() Declaration public virtual void OnStart() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.TaskResult.html": {
    "href": "api/AngeliA.TaskResult.html",
    "title": "Enum TaskResult | AngeliA",
    "summary": "Enum TaskResult Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public enum TaskResult Fields Name Description Continue End Extension Methods Extension.Next<TaskResult>(TaskResult) Extension.Prev<TaskResult>(TaskResult) Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.TaskSystem.html": {
    "href": "api/AngeliA.TaskSystem.html",
    "title": "Class TaskSystem | AngeliA",
    "summary": "Class TaskSystem Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public static class TaskSystem Methods | Edit this page View Source AddToFirst(int, object) Declaration public static Task AddToFirst(int id, object userData = null) | Edit this page View Source AddToLast(int, object) Declaration public static Task AddToLast(int id, object userData = null) | Edit this page View Source ClearAllTask() Declaration public static void ClearAllTask() | Edit this page View Source EndAllTask() Declaration public static void EndAllTask() | Edit this page View Source GetCurrentTask() Declaration public static Task GetCurrentTask() | Edit this page View Source GetTaskAt(int) Declaration public static Task GetTaskAt(int index) | Edit this page View Source GetWaitingTaskCount() Declaration public static int GetWaitingTaskCount() | Edit this page View Source HasTask() Declaration public static bool HasTask() | Edit this page View Source HasTask<T>() Declaration public static bool HasTask<T>() where T : Task | Edit this page View Source Initialize() Declaration [OnGameInitialize(-128)] public static void Initialize() | Edit this page View Source IsTasking<T>() Declaration public static bool IsTasking<T>() where T : Task | Edit this page View Source PeekFromPool(int) Declaration public static Task PeekFromPool(int id) | Edit this page View Source TryAddToFirst(int, out Task) Declaration public static bool TryAddToFirst(int id, out Task task) | Edit this page View Source TryAddToFirst(int, object, out Task) Declaration public static bool TryAddToFirst(int id, object userData, out Task task) | Edit this page View Source TryAddToLast(int, out Task) Declaration public static bool TryAddToLast(int id, out Task task) | Edit this page View Source TryAddToLast(int, object, out Task) Declaration public static bool TryAddToLast(int id, object userData, out Task task)"
  },
  "api/AngeliA.ToolApplicationAttribute.html": {
    "href": "api/AngeliA.ToolApplicationAttribute.html",
    "title": "Class ToolApplicationAttribute | AngeliA",
    "summary": "Class ToolApplicationAttribute If application with current assembly should be treat as a \"tool\" rather than \"game\" Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax [AttributeUsage(AttributeTargets.Assembly, AllowMultiple = true)] public class ToolApplicationAttribute : Attribute Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.TransferSystem.html": {
    "href": "api/AngeliA.TransferSystem.html",
    "title": "Class TransferSystem | AngeliA",
    "summary": "Class TransferSystem Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public static class TransferSystem Methods | Edit this page View Source IsTransfer(int, out Direction4) Declaration public static bool IsTransfer(int transferID, out Direction4 direction) | Edit this page View Source StartTransfer(Int3, object, int) Declaration public static void StartTransfer(Int3 unitPos, object data, int stamp = -2147483648)"
  },
  "api/AngeliA.UILayerScope.html": {
    "href": "api/AngeliA.UILayerScope.html",
    "title": "Struct UILayerScope | AngeliA",
    "summary": "Struct UILayerScope Scope that make rendering cells inside into UI layer Implements IDisposable Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public readonly struct UILayerScope : IDisposable Examples using AngeliA; namespace AngeliaGame; public class Example { [OnGameUpdate] internal static void OnGameUpdate () { using (new UILayerScope()) { // Rendering cells inside will draw into UI layer } } } Constructors | Edit this page View Source UILayerScope() Declaration public UILayerScope() | Edit this page View Source UILayerScope(bool) Declaration public UILayerScope(bool ignoreSorting) Methods | Edit this page View Source Dispose() Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources. Declaration public void Dispose() Implements IDisposable Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.UndoRedo.html": {
    "href": "api/AngeliA.UndoRedo.html",
    "title": "Class UndoRedo | AngeliA",
    "summary": "Class UndoRedo Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public class UndoRedo Constructors | Edit this page View Source UndoRedo(int, Action<IUndoItem>, Action<IUndoItem>) Declaration public UndoRedo(int undoLimit = 4096, Action<IUndoItem> onUndoPerformed = null, Action<IUndoItem> onRedoPerformed = null) Fields | Edit this page View Source RedoList Declaration protected readonly Pipe<IUndoItem> RedoList | Edit this page View Source UndoList Declaration protected readonly Pipe<IUndoItem> UndoList Properties | Edit this page View Source CurrentStep Declaration public int CurrentStep { get; } Methods | Edit this page View Source AbortUnstable() Declaration public void AbortUnstable() | Edit this page View Source GrowStep() Declaration public virtual void GrowStep() | Edit this page View Source InvokeRedoPerform(IUndoItem) Declaration protected virtual void InvokeRedoPerform(IUndoItem data) | Edit this page View Source InvokeUndoPerform(IUndoItem) Declaration protected virtual void InvokeUndoPerform(IUndoItem data) | Edit this page View Source MarkAsStable() Declaration public void MarkAsStable() | Edit this page View Source Redo() Declaration public void Redo() | Edit this page View Source Register(IUndoItem) Declaration public virtual void Register(IUndoItem data) | Edit this page View Source Reset() Declaration public virtual void Reset() | Edit this page View Source Undo() Declaration public void Undo() Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.Universe.html": {
    "href": "api/AngeliA.Universe.html",
    "title": "Class Universe | AngeliA",
    "summary": "Class Universe Representation of game asset folder Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public class Universe Properties | Edit this page View Source BuiltIn Built-in universe of the current game Declaration public static Universe BuiltIn { get; } | Edit this page View Source BuiltInInfo Info.json of the built-in universe Declaration public static UniverseInfo BuiltInInfo { get; } | Edit this page View Source BuiltInMapRoot Map root folder path. Map inside this folder should not be edit by the player. Declaration public string BuiltInMapRoot { get; } | Edit this page View Source BuiltInSheetPath Built-in artwork sheet file path. This file is generated by the game engine. Declaration public string BuiltInSheetPath { get; } | Edit this page View Source CharacterMovementConfigRoot Folder that holds character movement config json files Declaration public string CharacterMovementConfigRoot { get; } | Edit this page View Source ConversationRoot Path of the folder that hold conversation files Declaration public string ConversationRoot { get; } | Edit this page View Source CurrentSavingSlot Current selected saving slot index Declaration public int CurrentSavingSlot { get; } | Edit this page View Source FontRoot Folder that holds font files Declaration public string FontRoot { get; } | Edit this page View Source GameSheetPath Artwork sheet file path. This file is painted by the developer of the game. Declaration public string GameSheetPath { get; } | Edit this page View Source Info Data from Info.json file Declaration public UniverseInfo Info { get; } | Edit this page View Source InfoPath Info.json file path Declaration public string InfoPath { get; } | Edit this page View Source LanguageRoot Folder that holds the localization files Declaration public string LanguageRoot { get; } | Edit this page View Source MusicRoot Folder that holds BGM audio files Declaration public string MusicRoot { get; } | Edit this page View Source SavingRoot Root of the saving folder Declaration public string SavingRoot { get; } | Edit this page View Source SheetRoot Artwork sheets root folder path Declaration public string SheetRoot { get; } | Edit this page View Source SlotCharacterRenderingConfigRoot Root folder path holds the rendering config json files for pose characters Declaration public string SlotCharacterRenderingConfigRoot { get; } | Edit this page View Source SlotInventoryRoot Root folder path holds the inventory files Declaration public string SlotInventoryRoot { get; } | Edit this page View Source SlotMetaRoot Meta root folder path of the current selected slot Declaration public string SlotMetaRoot { get; } | Edit this page View Source SlotRoot Folder path of the current selected slot Declaration public string SlotRoot { get; } | Edit this page View Source SlotUserMapRoot Map root folder of the current selected slot. Maps inside this folder can be edit by player Declaration public string SlotUserMapRoot { get; } | Edit this page View Source SoundRoot Folder that holds SFX audio files Declaration public string SoundRoot { get; } | Edit this page View Source UniverseMetaRoot Root meta folder path. This folder hold random text data. Declaration public string UniverseMetaRoot { get; } | Edit this page View Source UniverseRoot Root folder path of this universe Declaration public string UniverseRoot { get; } Methods | Edit this page View Source LoadFromFile(string, bool) Create a new universe instance from file Declaration public static Universe LoadFromFile(string universeFolder, bool useBuiltInSavingRoot = true) | Edit this page View Source ReloadSavingSlot(int, bool) Change saving slot Declaration public void ReloadSavingSlot(int newSlot, bool forceReload = false) Parameters Type Name Description int newSlot Slot index bool forceReload Perform this function even the \"newSlot\" is same with current | Edit this page View Source SetSavingRoot(string, int) Set saving data of the universe instance Declaration public void SetSavingRoot(string newSavingRoot, int slot) Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.UniverseInfo.html": {
    "href": "api/AngeliA.UniverseInfo.html",
    "title": "Class UniverseInfo | AngeliA",
    "summary": "Class UniverseInfo Representation of Info.json in universe folder Implements IJsonSerializationCallback Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax [Serializable] public class UniverseInfo : IJsonSerializationCallback Fields | Edit this page View Source AllowCheatCode Use cheat code after release Declaration public bool AllowCheatCode | Edit this page View Source AllowPause Allow player press start button (esc) to pause Declaration public bool AllowPause | Edit this page View Source AllowQuitFromMenu Show quit option inside pause menu Declaration public bool AllowQuitFromMenu | Edit this page View Source AllowRestartFromMenu Show restart option inside pause menu Declaration public bool AllowRestartFromMenu | Edit this page View Source DefaultViewHeight Default view rect height in global size Declaration public int DefaultViewHeight | Edit this page View Source DeveloperName Developer name of this project in English Declaration public string DeveloperName | Edit this page View Source EngineBuildVersion Which version of AngeliA Engine published this project Declaration public uint EngineBuildVersion | Edit this page View Source LastBackupSavingDate Last time AngeliA Engine backup the saving files Declaration public long LastBackupSavingDate | Edit this page View Source LastEdittingViewHeight Last edit view rect height from map editor Declaration public int LastEdittingViewHeight | Edit this page View Source LastEdittingViewPos Last edit view rect position from map editor Declaration public Int3 LastEdittingViewPos | Edit this page View Source LastOpenAtlasIndex Last opened atlas index by AngeliA Engine Declaration public int LastOpenAtlasIndex | Edit this page View Source LightMap_AirIlluminanceDay How much does air luminous during daytime Declaration public float LightMap_AirIlluminanceDay | Edit this page View Source LightMap_AirIlluminanceNight How much does air luminous during nighttime Declaration public float LightMap_AirIlluminanceNight | Edit this page View Source LightMap_BackgroundTint How much does background blocks luminous Declaration public float LightMap_BackgroundTint | Edit this page View Source LightMap_LevelIlluminateRemain How much does light remain after it hit solid blocks Declaration public float LightMap_LevelIlluminateRemain | Edit this page View Source LightMap_PixelStyle Use pixel style lighting Declaration public bool LightMap_PixelStyle | Edit this page View Source LightMap_SelfLerp Adjust the shadow generating influence between \"Solid block itself\" and \"Global sun light\" Declaration public float LightMap_SelfLerp | Edit this page View Source LightMap_SolidIlluminance How much does solid blocks luminous Declaration public float LightMap_SolidIlluminance | Edit this page View Source MajorVersion Major version of this project Declaration public int MajorVersion | Edit this page View Source MaxViewHeight Maximal view rect height in global size Declaration public int MaxViewHeight | Edit this page View Source MinViewHeight Minimal view rect height in global size Declaration public int MinViewHeight | Edit this page View Source MinorVersion Minor version of this project Declaration public int MinorVersion | Edit this page View Source PatchVersion Patch version of this project Declaration public int PatchVersion | Edit this page View Source ProductName Official name of this project in English Declaration public string ProductName | Edit this page View Source ProjectType Type of this project Declaration public ProjectType ProjectType | Edit this page View Source ReadonlyMap Save map file changes made by the player Declaration public bool ReadonlyMap | Edit this page View Source RequireFixScriptNamesWhenAnalyse Declaration public bool RequireFixScriptNamesWhenAnalyse | Edit this page View Source ScaleUiBasedOnMonitor Scale ui elements based on the monitor height instead of application window height Declaration public bool ScaleUiBasedOnMonitor | Edit this page View Source UseLightingSystem Use the global lighting system Declaration public bool UseLightingSystem | Edit this page View Source UseMapEditor Require map editor from AngeliA Engine when under development Declaration public bool UseMapEditor | Edit this page View Source UseProceduralMap Generate map proceduraly during game play Declaration public bool UseProceduralMap | Edit this page View Source ViewRatio Size ratio of the view rect. (1000 means 1:1, 2000 means 2:1) Declaration public int ViewRatio | Edit this page View Source WorldBehindAlpha Transparent amount of the behind map layer. (255 means not tramsparent, 0 means full tramsparent) Declaration public byte WorldBehindAlpha | Edit this page View Source WorldBehindParallax Parallax amount of the behind map layer. (1000 means no parallax, 2000 means behind move 2 times faster) Declaration public int WorldBehindParallax Methods | Edit this page View Source OnAfterLoadedFromDisk() Declaration public void OnAfterLoadedFromDisk() | Edit this page View Source OnBeforeSaveToDisk() Declaration public void OnBeforeSaveToDisk() | Edit this page View Source Valid(bool) Declaration public void Valid(bool minViewSizeFirst) Implements IJsonSerializationCallback Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.Util.MathfInternal.html": {
    "href": "api/AngeliA.Util.MathfInternal.html",
    "title": "Struct Util.MathfInternal | AngeliA",
    "summary": "Struct Util.MathfInternal Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public struct Util.MathfInternal Fields | Edit this page View Source FloatMinDenormal Declaration public static volatile float FloatMinDenormal | Edit this page View Source FloatMinNormal Declaration public static volatile float FloatMinNormal | Edit this page View Source IsFlushToZeroEnabled Declaration public static bool IsFlushToZeroEnabled Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.Util.html": {
    "href": "api/AngeliA.Util.html",
    "title": "Class Util | AngeliA",
    "summary": "Class Util Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public static class Util Fields | Edit this page View Source AllAssemblies Declaration public static readonly List<Assembly> AllAssemblies | Edit this page View Source Deg2Rad Declaration public const float Deg2Rad = 0.017453292 | Edit this page View Source Epsilon Declaration public static readonly float Epsilon | Edit this page View Source PI Declaration public const float PI = 3.1415927 | Edit this page View Source Rad2Deg Declaration public const float Rad2Deg = 57.29578 Methods | Edit this page View Source Abs(int) Declaration public static int Abs(int value) | Edit this page View Source Abs(float) Declaration public static float Abs(float value) | Edit this page View Source AddAssembly(Assembly) Declaration public static void AddAssembly(Assembly assembly) | Edit this page View Source AddEnvironmentVariable(string, string) Declaration public static void AddEnvironmentVariable(string key, string value) | Edit this page View Source AllChildClass(Type, bool, bool) Declaration public static IEnumerable<Type> AllChildClass(this Type type, bool includeAbstract = false, bool includeInterface = false) | Edit this page View Source AllChildClassID(Type, bool, bool) Declaration public static IEnumerable<int> AllChildClassID(this Type type, bool includeAbstract = false, bool includeInterface = false) | Edit this page View Source AllClassImplemented(Type, bool) Declaration public static IEnumerable<Type> AllClassImplemented(this Type interfaceType, bool includeAbstract = false) | Edit this page View Source AllClassImplementedID(Type, bool) Declaration public static IEnumerable<int> AllClassImplementedID(this Type interfaceType, bool includeAbstract = false) | Edit this page View Source AllClassWithAttribute(Type, bool, bool) Declaration public static IEnumerable<(Type, Attribute)> AllClassWithAttribute(this Type attribute, bool ignoreAbstract = true, bool ignoreInterface = true) | Edit this page View Source AllClassWithAttribute<A>(bool, bool, bool) Declaration public static IEnumerable<(Type, A)> AllClassWithAttribute<A>(bool ignoreAbstract = true, bool ignoreInterface = true, bool inherit = false) where A : Attribute | Edit this page View Source AllEnumIdPairs<E>() Declaration public static IEnumerable<KeyValuePair<E, int>> AllEnumIdPairs<E>() where E : struct, Enum | Edit this page View Source AllStaticMethodWithAttribute<T>() Declaration public static IEnumerable<KeyValuePair<MethodInfo, T>> AllStaticMethodWithAttribute<T>() where T : Attribute | Edit this page View Source Approximately(float, float) Declaration public static bool Approximately(float a, float b) | Edit this page View Source ArgPath_to_Path(string) Declaration public static string ArgPath_to_Path(string path) | Edit this page View Source Atan(float, float) Declaration public static float Atan(float x, float y) | Edit this page View Source BabylonianSqrt(int) Declaration public static int BabylonianSqrt(int n) | Edit this page View Source ByteToCompressedFile(string, byte[], int) Declaration public static void ByteToCompressedFile(string path, byte[] rawBytes, int length = -1) | Edit this page View Source BytesToFile(byte[], string, int) Declaration public static void BytesToFile(byte[] bytes, string path, int length = -1) | Edit this page View Source CeilToInt(float) Declaration public static int CeilToInt(float value) | Edit this page View Source ChangeExtension(string, string) Declaration public static string ChangeExtension(string path, string newEx) | Edit this page View Source Clamp(int, int, int) Declaration public static int Clamp(int a, int min, int max) | Edit this page View Source Clamp(float, float, float) Declaration public static float Clamp(float a, float min, float max) | Edit this page View Source Clamp01(float) Declaration public static float Clamp01(float value) | Edit this page View Source ColorToHtml(Color32, bool) Declaration public static string ColorToHtml(Color32 color, bool ignoreAlpha = false) | Edit this page View Source ColorToInt(Color32) Declaration public static int ColorToInt(Color32 color) | Edit this page View Source CombinePaths(string, string) Declaration public static string CombinePaths(string path1, string path2) | Edit this page View Source CombinePaths(string, string, string) Declaration public static string CombinePaths(string path1, string path2, string path3) | Edit this page View Source CombinePaths(string, string, string, string) Declaration public static string CombinePaths(string path1, string path2, string path3, string path4) | Edit this page View Source CombinePaths(params string[]) Declaration public static string CombinePaths(params string[] paths) | Edit this page View Source CompressedFileToByte(string, out int) Declaration public static byte[] CompressedFileToByte(string path, out int byteLength) | Edit this page View Source CopyFile(string, string, bool) Declaration public static bool CopyFile(string from, string to, bool overwrite = true) | Edit this page View Source CopyFolder(string, string, bool, bool, bool) Declaration public static bool CopyFolder(string from, string to, bool copySubDirs, bool ignoreHidden, bool overrideFile = false) | Edit this page View Source Cos(float) Declaration public static float Cos(float radAngle) | Edit this page View Source CreateFolder(string) Declaration public static void CreateFolder(string path) | Edit this page View Source DecompressBytes(byte[]) Declaration public static byte[] DecompressBytes(byte[] compressedBytes) | Edit this page View Source DeleteFile(string) Declaration public static void DeleteFile(string path) | Edit this page View Source DeleteFolder(string) Declaration public static void DeleteFolder(string path) | Edit this page View Source DistanceFloat(Float2, Float2) Declaration public static float DistanceFloat(Float2 a, Float2 b) | Edit this page View Source DistanceFloat(float, float, float, float) Declaration public static float DistanceFloat(float aX, float aY, float bX, float bY) | Edit this page View Source DistanceInt(Int2, Int2) Declaration public static int DistanceInt(Int2 a, Int2 b) | Edit this page View Source DistanceInt(int, int, int, int) Declaration public static int DistanceInt(int aX, int aY, int bX, int bY) | Edit this page View Source DrawFilledEllipse_Patrick(int, int, int, int) Declaration public static IEnumerable<IRect> DrawFilledEllipse_Patrick(int left, int bottom, int width, int height) | Edit this page View Source DrawHoloEllipse_Patrick(int, int, int, int) Declaration public static IEnumerable<Int2> DrawHoloEllipse_Patrick(int left, int bottom, int width, int height) | Edit this page View Source DrawLineWithRect_DDA(int, int, int, int) Declaration public static IEnumerable<IRect> DrawLineWithRect_DDA(int x0, int y0, int x1, int y1) | Edit this page View Source DrawLine_DDA(int, int, int, int) Declaration public static IEnumerable<Int2> DrawLine_DDA(int x0, int y0, int x1, int y1) | Edit this page View Source EnumerateFiles(string, bool, string) Declaration public static IEnumerable<string> EnumerateFiles(string path, bool topOnly, string searchPattern) | Edit this page View Source EnumerateFiles(string, bool, params string[]) Declaration public static IEnumerable<string> EnumerateFiles(string path, bool topOnly, params string[] searchPatterns) | Edit this page View Source EnumerateFolders(string, bool, string) Declaration public static IEnumerable<string> EnumerateFolders(string path, bool topOnly, string searchPattern = \"*\") | Edit this page View Source EnumerateFolders(string, bool, params string[]) Declaration public static IEnumerable<string> EnumerateFolders(string path, bool topOnly, params string[] searchPatterns) | Edit this page View Source ExecuteCommand(string, string, int, bool) Declaration public static int ExecuteCommand(string workingDirectory, string arguments, int logID = -1, bool wait = true) | Edit this page View Source FileExists(string) Declaration public static bool FileExists(string path) | Edit this page View Source FileToBytes(string) Declaration public static byte[] FileToBytes(string path) | Edit this page View Source FileToText(string) Declaration public static string FileToText(string path) | Edit this page View Source FileToText(string, Encoding) Declaration public static string FileToText(string path, Encoding encoding) | Edit this page View Source FindNextStringStep(string, int, bool) Declaration public static int FindNextStringStep(string content, int start, bool toRight) | Edit this page View Source FixPath(string, bool) Declaration public static string FixPath(string path, bool forUnity = true) | Edit this page View Source FloorToInt(float) Declaration public static int FloorToInt(float value) | Edit this page View Source FolderExists(string) Declaration public static bool FolderExists(string path) | Edit this page View Source ForAllAssemblyWithAttribute<A>() Declaration public static IEnumerable<(Assembly assembly, A attribyte)> ForAllAssemblyWithAttribute<A>() where A : Attribute | Edit this page View Source ForAllLinesInFile(string) Declaration public static IEnumerable<string> ForAllLinesInFile(string path) | Edit this page View Source ForAllLinesInFile(string, Encoding) Declaration public static IEnumerable<string> ForAllLinesInFile(string path, Encoding encoding) | Edit this page View Source ForAllLinesInString(string) Declaration public static IEnumerable<string> ForAllLinesInString(string content) | Edit this page View Source ForAllNameAndIntInFile(StreamReader) Declaration public static IEnumerable<(string name, int value)> ForAllNameAndIntInFile(StreamReader reader) | Edit this page View Source ForAllNameAndIntInFile(string) Declaration public static IEnumerable<(string name, int value)> ForAllNameAndIntInFile(string path) | Edit this page View Source ForAllNameAndIntInFile(string, Encoding) Declaration public static IEnumerable<(string name, int value)> ForAllNameAndIntInFile(string path, Encoding encoding) | Edit this page View Source ForAllNameAndStringInFile(StreamReader) Declaration public static IEnumerable<(string name, string value)> ForAllNameAndStringInFile(StreamReader reader) | Edit this page View Source ForAllNameAndStringInFile(string) Declaration public static IEnumerable<(string name, string value)> ForAllNameAndStringInFile(string path) | Edit this page View Source ForAllNameAndStringInFile(string, Encoding) Declaration public static IEnumerable<(string name, string value)> ForAllNameAndStringInFile(string path, Encoding encoding) | Edit this page View Source ForAllSystemLanguages() Declaration public static IEnumerable<string> ForAllSystemLanguages() | Edit this page View Source GetAllTypeSpan() Declaration public static ReadOnlySpan<Type> GetAllTypeSpan() | Edit this page View Source GetAngeHashForClassName(string) Declaration public static int GetAngeHashForClassName(string className) | Edit this page View Source GetDirection(int, int) Declaration public static Direction8 GetDirection(int deltaX, int deltaY) | Edit this page View Source GetDisplayName(string) Declaration public static string GetDisplayName(string name) | Edit this page View Source GetDisplayTimeFromTicks(long) Declaration public static string GetDisplayTimeFromTicks(long ticks) | Edit this page View Source GetExtensionWithDot(string) Declaration public static string GetExtensionWithDot(string path) | Edit this page View Source GetField(Type, string) Declaration public static FieldInfo GetField(Type type, string name) | Edit this page View Source GetFieldType(object, string) Declaration public static Type GetFieldType(object target, string name) | Edit this page View Source GetFieldValue(object, string) Declaration public static object GetFieldValue(object target, string fieldName) | Edit this page View Source GetFileCount(string, string, SearchOption) Declaration public static int GetFileCount(string path, string search = \"*\", SearchOption option = SearchOption.TopDirectoryOnly) | Edit this page View Source GetFileCreationDate(string) Declaration public static long GetFileCreationDate(string path) | Edit this page View Source GetFileModifyDate(string) Declaration public static long GetFileModifyDate(string path) | Edit this page View Source GetFileSizeInMB(string) Declaration public static float GetFileSizeInMB(string path) | Edit this page View Source GetFolderCount(string, string, SearchOption) Declaration public static int GetFolderCount(string path, string search = \"*\", SearchOption option = SearchOption.TopDirectoryOnly) | Edit this page View Source GetFolderFullPath(string) Declaration public static string GetFolderFullPath(string path) | Edit this page View Source GetFolderModifyDate(string) Declaration public static long GetFolderModifyDate(string path) | Edit this page View Source GetFullPath(string) Declaration public static string GetFullPath(string path) | Edit this page View Source GetKeyDisplayName(KeyboardKey) Declaration public static string GetKeyDisplayName(KeyboardKey key) | Edit this page View Source GetLanguageDisplayName(string) Declaration public static string GetLanguageDisplayName(string iso) | Edit this page View Source GetLanguageDisplayNameInEnglish(string) Declaration public static string GetLanguageDisplayNameInEnglish(string iso) | Edit this page View Source GetLongTime() Declaration public static long GetLongTime() | Edit this page View Source GetNameWithExtension(string) Declaration public static string GetNameWithExtension(string path) | Edit this page View Source GetNameWithoutExtension(string) Declaration public static string GetNameWithoutExtension(string path) | Edit this page View Source GetParentPath(string) Declaration public static string GetParentPath(string path) | Edit this page View Source GetProperty(Type, string) Declaration public static PropertyInfo GetProperty(Type type, string name) | Edit this page View Source GetPropertyValue(object, string) Declaration public static object GetPropertyValue(object target, string name) | Edit this page View Source GetStaticFieldType(Type, string) Declaration public static Type GetStaticFieldType(Type type, string name) | Edit this page View Source GetStaticFieldValue(Type, string) Declaration public static object GetStaticFieldValue(Type type, string name) | Edit this page View Source GetStaticPropertyValue(Type, string) Declaration public static object GetStaticPropertyValue(Type type, string name) | Edit this page View Source GetTimeString() Declaration public static string GetTimeString() | Edit this page View Source GetTrimedPixels(Color32[], int, int, out int, out int, out int, out int) Declaration public static Color32[] GetTrimedPixels(Color32[] pixels, int width, int height, out int left, out int right, out int down, out int up) | Edit this page View Source GetUrl(string) Declaration public static string GetUrl(string path) | Edit this page View Source GreatestCommonFactor(int, int) Declaration public static int GreatestCommonFactor(int a, int b) | Edit this page View Source HasFileIn(string, bool, string) Declaration public static bool HasFileIn(string path, bool topOnly, string searchPattern) | Edit this page View Source HasFileIn(string, bool, params string[]) Declaration public static bool HasFileIn(string path, bool topOnly, params string[] searchPattern) | Edit this page View Source HsvToRgb(float, float, float) Declaration public static Color32 HsvToRgb(float h, float s, float v) | Edit this page View Source HsvToRgbF(float, float, float) Declaration public static ColorF HsvToRgbF(float h, float s, float v) | Edit this page View Source HtmlToColor(string, out Color32) Declaration public static bool HtmlToColor(string html, out Color32 color) | Edit this page View Source IntToColor(int) Declaration public static Color32 IntToColor(int i) | Edit this page View Source InverseLerp(float, float, float) Declaration public static float InverseLerp(float from, float to, float value) | Edit this page View Source InverseLerpUnclamped(float, float, float) Declaration public static float InverseLerpUnclamped(float from, float to, float value) | Edit this page View Source InvokeAllStaticMethodWithAttribute<A>() Declaration public static void InvokeAllStaticMethodWithAttribute<A>() where A : Attribute | Edit this page View Source InvokeAllStaticMethodWithAttribute<A>(Comparison<KeyValuePair<MethodInfo, A>>) Declaration public static void InvokeAllStaticMethodWithAttribute<A>(Comparison<KeyValuePair<MethodInfo, A>> comparison) where A : Attribute | Edit this page View Source InvokeAllStaticMethodWithAttribute<A>(Func<KeyValuePair<MethodInfo, A>, bool>) Declaration public static void InvokeAllStaticMethodWithAttribute<A>(Func<KeyValuePair<MethodInfo, A>, bool> predicte) where A : Attribute | Edit this page View Source InvokeMethod(object, string, params object[]) Declaration public static object InvokeMethod(object obj, string methodName, params object[] param) | Edit this page View Source InvokeStaticMethod(Type, string, params object[]) Declaration public static object InvokeStaticMethod(Type type, string methodName, params object[] param) | Edit this page View Source IsExistingFileEmpty(string) Declaration public static bool IsExistingFileEmpty(string path) | Edit this page View Source IsFileHidden(string) Declaration public static bool IsFileHidden(string path) | Edit this page View Source IsFolderHidden(string) Declaration public static bool IsFolderHidden(string path) | Edit this page View Source IsPathValid(string) Declaration public static bool IsPathValid(string path) | Edit this page View Source IsPowerOfTwo(int) Declaration public static bool IsPowerOfTwo(int x) | Edit this page View Source IsSameDay(long, long) Declaration public static bool IsSameDay(long timeA, long timeB) | Edit this page View Source IsSamePath(string, string) Declaration public static bool IsSamePath(string pathA, string pathB) | Edit this page View Source IsSupportedLanguageISO(string) Declaration public static bool IsSupportedLanguageISO(string iso) | Edit this page View Source IsValidForFileName(string) Declaration public static bool IsValidForFileName(string content) | Edit this page View Source LeastCommonMultiple(int, int) Declaration public static int LeastCommonMultiple(int a, int b) | Edit this page View Source Lerp(float, float, float) Declaration public static float Lerp(float a, float b, float t) | Edit this page View Source LerpAngle(float, float, float) Declaration public static float LerpAngle(float a, float b, float t) | Edit this page View Source LerpAngleUnclamped(float, float, float) Declaration public static float LerpAngleUnclamped(float a, float b, float t) | Edit this page View Source LerpUnclamped(float, float, float) Declaration public static float LerpUnclamped(float a, float b, float t) | Edit this page View Source Max(int, int) Declaration public static int Max(int a, int b) | Edit this page View Source Max(int, int, int) Declaration public static int Max(int a, int b, int c) | Edit this page View Source Max(float, float) Declaration public static float Max(float a, float b) | Edit this page View Source MergeColor(Color32, Color32) Declaration public static Color32 MergeColor(Color32 top, Color32 back) | Edit this page View Source MergeColor(ColorF, ColorF) Declaration public static ColorF MergeColor(ColorF top, ColorF back) | Edit this page View Source MergeColor_Editor(Color32, Color32) Declaration public static Color32 MergeColor_Editor(Color32 top, Color32 back) | Edit this page View Source MergeColor_Lerp(Color32, Color32) Declaration public static Color32 MergeColor_Lerp(Color32 top, Color32 back) | Edit this page View Source MergeColor_Lerp(ColorF, ColorF) Declaration public static ColorF MergeColor_Lerp(ColorF top, ColorF back) | Edit this page View Source MergeColor_Overlay(Color32, Color32) Declaration public static Color32 MergeColor_Overlay(Color32 top, Color32 back) | Edit this page View Source MergeColor_Overlay(ColorF, ColorF) Declaration public static ColorF MergeColor_Overlay(ColorF top, ColorF back) | Edit this page View Source Min(int, int) Declaration public static int Min(int a, int b) | Edit this page View Source Min(int, int, int) Declaration public static int Min(int a, int b, int c) | Edit this page View Source Min(float, float) Declaration public static float Min(float a, float b) | Edit this page View Source MoveFile(string, string) Declaration public static void MoveFile(string from, string to) | Edit this page View Source MoveFolder(string, string) Declaration public static bool MoveFolder(string from, string to) | Edit this page View Source OverlapRectCircle(int, int, int, int, int, int, int) Declaration public static bool OverlapRectCircle(int radius, int circleX, int circleY, int minX, int minY, int maxX, int maxY) | Edit this page View Source PathIsFolder(string) Declaration public static bool PathIsFolder(string path) | Edit this page View Source Path_to_ArgPath(string) Declaration public static string Path_to_ArgPath(string path) | Edit this page View Source PingPong(float, float) Declaration public static float PingPong(float t, float length) | Edit this page View Source PointInTriangle(Float2, Float2, Float2, Float2) Declaration public static bool PointInTriangle(Float2 p, Float2 a, Float2 b, Float2 c) | Edit this page View Source PointInTriangle(float, float, float, float, float, float, float, float) Declaration public static bool PointInTriangle(float px, float py, float p0x, float p0y, float p1x, float p1y, float p2x, float p2y) | Edit this page View Source PointLine_Distance(Float2, Float2, Float2, out Float2) Declaration public static float PointLine_Distance(Float2 pt, Float2 p1, Float2 p2, out Float2 closest) | Edit this page View Source Pow(float, float) Declaration public static float Pow(float f, float p) | Edit this page View Source QuickRandom() Declaration public static int QuickRandom() | Edit this page View Source QuickRandom(int, int) \"min\" is Included, \"max\" is Excluded Declaration public static int QuickRandom(int min, int max) | Edit this page View Source QuickRandomColor(int, int, int, int, int, int, int, int) Declaration public static Color32 QuickRandomColor(int minH = 0, int maxH = 360, int minS = 0, int maxS = 100, int minV = 0, int maxV = 100, int minA = 0, int maxA = 255) | Edit this page View Source QuickRandomSign() Declaration public static int QuickRandomSign() | Edit this page View Source QuickRandomWithSeed(int) Declaration public static int QuickRandomWithSeed(int seed) | Edit this page View Source QuickRandomWithSeed(int, int, int) \"min\" is Included, \"max\" is Excluded Declaration public static int QuickRandomWithSeed(int seed, int min, int max) | Edit this page View Source QuickRandomWithSeed(long) Declaration public static int QuickRandomWithSeed(long seed) | Edit this page View Source QuickRandomWithSeed(long, int, int) \"min\" is Included, \"max\" is Excluded Declaration public static int QuickRandomWithSeed(long seed, int min, int max) | Edit this page View Source QuickSort<T>(Span<T>, int, int, IComparer<T>) Declaration public static void QuickSort<T>(Span<T> cells, int min, int max, IComparer<T> comparer) | Edit this page View Source QuickSort<T>(T[], int, int, IComparer<T>) Declaration public static void QuickSort<T>(T[] cells, int min, int max, IComparer<T> comparer) | Edit this page View Source RGBToHSV(Color32, out float, out float, out float) Declaration public static void RGBToHSV(Color32 rgbColor, out float h, out float s, out float v) | Edit this page View Source RGBToHSV(ColorF, out float, out float, out float) Declaration public static void RGBToHSV(ColorF rgbColor, out float h, out float s, out float v) | Edit this page View Source ReadBool(ref byte*) Declaration public static bool ReadBool(ref byte* p) | Edit this page View Source ReadBool(ref byte*, byte*) Declaration public static bool ReadBool(ref byte* p, byte* end) | Edit this page View Source ReadByte(ref byte*) Declaration public static byte ReadByte(ref byte* p) | Edit this page View Source ReadByte(ref byte*, byte*) Declaration public static byte ReadByte(ref byte* p, byte* end) | Edit this page View Source ReadBytes(ref byte*, int) Declaration public static byte[] ReadBytes(ref byte* p, int length) | Edit this page View Source ReadBytes(ref byte*, int, byte*) Declaration public static byte[] ReadBytes(ref byte* p, int length, byte* end) | Edit this page View Source ReadChar(ref byte*) Declaration public static char ReadChar(ref byte* p) | Edit this page View Source ReadChar(ref byte*, byte*) Declaration public static char ReadChar(ref byte* p, byte* end) | Edit this page View Source ReadDouble(ref byte*) Declaration public static double ReadDouble(ref byte* p) | Edit this page View Source ReadDouble(ref byte*, byte*) Declaration public static double ReadDouble(ref byte* p, byte* end) | Edit this page View Source ReadFloat(ref byte*) Declaration public static float ReadFloat(ref byte* p) | Edit this page View Source ReadFloat(ref byte*, byte*) Declaration public static float ReadFloat(ref byte* p, byte* end) | Edit this page View Source ReadInt(ref byte*) Declaration public static int ReadInt(ref byte* p) | Edit this page View Source ReadInt(ref byte*, byte*) Declaration public static int ReadInt(ref byte* p, byte* end) | Edit this page View Source ReadLong(ref byte*) Declaration public static long ReadLong(ref byte* p) | Edit this page View Source ReadLong(ref byte*, byte*) Declaration public static long ReadLong(ref byte* p, byte* end) | Edit this page View Source ReadSByte(ref byte*) Declaration public static sbyte ReadSByte(ref byte* p) | Edit this page View Source ReadSByte(ref byte*, byte*) Declaration public static sbyte ReadSByte(ref byte* p, byte* end) | Edit this page View Source ReadShort(ref byte*) Declaration public static short ReadShort(ref byte* p) | Edit this page View Source ReadShort(ref byte*, byte*) Declaration public static short ReadShort(ref byte* p, byte* end) | Edit this page View Source ReadUInt(ref byte*) Declaration public static uint ReadUInt(ref byte* p) | Edit this page View Source ReadUInt(ref byte*, byte*) Declaration public static uint ReadUInt(ref byte* p, byte* end) | Edit this page View Source ReadULong(ref byte*) Declaration public static ulong ReadULong(ref byte* p) | Edit this page View Source ReadULong(ref byte*, byte*) Declaration public static ulong ReadULong(ref byte* p, byte* end) | Edit this page View Source ReadUShort(ref byte*) Declaration public static ushort ReadUShort(ref byte* p) | Edit this page View Source ReadUShort(ref byte*, byte*) Declaration public static ushort ReadUShort(ref byte* p, byte* end) | Edit this page View Source ReadXML<T>(string) Declaration public static T ReadXML<T>(string path) where T : class | Edit this page View Source Remap(int, int, int, int, int) Declaration public static int Remap(int l, int r, int newL, int newR, int t) | Edit this page View Source Remap(float, float, float, float, float) Declaration public static float Remap(float l, float r, float newL, float newR, float t) | Edit this page View Source RemapUnclamped(int, int, int, int, int) Declaration public static int RemapUnclamped(int l, int r, int newL, int newR, int t) | Edit this page View Source RemapUnclamped(float, float, float, float, float) Declaration public static float RemapUnclamped(float l, float r, float newL, float newR, float t) | Edit this page View Source Repeat(float, float) Declaration public static float Repeat(float t, float length) | Edit this page View Source RotateAround(int, int, int, int, int) Declaration public static Int2 RotateAround(int x, int y, int rotation, int originX, int originY) | Edit this page View Source RoundToInt(float) Declaration public static int RoundToInt(float value) | Edit this page View Source SegmentIntersect(Float2, Float2, Float2, Float2) Declaration public static Float2? SegmentIntersect(Float2 a1, Float2 a2, Float2 b1, Float2 b2) | Edit this page View Source SegmentRectIntersect(Float2, Float2, FRect) Declaration public static (Float2? intersect0, Float2? intersect1) SegmentRectIntersect(Float2 a0, Float2 a1, FRect rect) | Edit this page View Source SetFieldValue(object, string, object) Declaration public static void SetFieldValue(object target, string name, object value) | Edit this page View Source SetFileModifyDate(string, long) Declaration public static void SetFileModifyDate(string path, long fileTime) | Edit this page View Source SetFolderModifyDate(string, long) Declaration public static void SetFolderModifyDate(string path, long fileTime) | Edit this page View Source SetPropertyValue(object, string, object) Declaration public static void SetPropertyValue(object target, string name, object value) | Edit this page View Source SetStaticFieldValue(Type, string, object) Declaration public static void SetStaticFieldValue(Type type, string name, object value) | Edit this page View Source SetStaticPropertyValue(Type, string, object) Declaration public static void SetStaticPropertyValue(Type type, string name, object value) | Edit this page View Source Sin(float) Declaration public static float Sin(float radAngle) | Edit this page View Source Sqrt(float) Declaration public static float Sqrt(float f) | Edit this page View Source SquareDistance(Int2, Int2) Declaration public static int SquareDistance(Int2 a, Int2 b) | Edit this page View Source SquareDistance(int, int, int, int) Declaration public static int SquareDistance(int aX, int aY, int bX, int bY) | Edit this page View Source SquareDistanceF(float, float, float, float) Declaration public static float SquareDistanceF(float aX, float aY, float bX, float bY) | Edit this page View Source TextToFile(string, string, bool) Declaration public static void TextToFile(string data, string path, bool append = false) | Edit this page View Source TextToFile(string, string, Encoding, bool) Declaration public static void TextToFile(string data, string path, Encoding encoding, bool append = false) | Edit this page View Source TryCompute(string, out int) Declaration public static bool TryCompute(string expression, out int result) | Edit this page View Source TryGetAttributeFromAllAssemblies<A>() Declaration public static bool TryGetAttributeFromAllAssemblies<A>() where A : Attribute | Edit this page View Source TryGetAttributeFromAllAssemblies<A>(out A) Declaration public static bool TryGetAttributeFromAllAssemblies<A>(out A attribute) where A : Attribute | Edit this page View Source TryGetIntFromString(string, int, out int, out int) Declaration public static bool TryGetIntFromString(string str, int startIndex, out int value, out int endIndex) | Edit this page View Source TryGetLanguageDisplayName(string, out string) Declaration public static bool TryGetLanguageDisplayName(string iso, out string displayName) | Edit this page View Source TryGetRelativePath(string, string, out string) Declaration public static bool TryGetRelativePath(string relativeTo, string path, out string relativePath) | Edit this page View Source UpdateFile(string, string, bool) Declaration public static void UpdateFile(string source, string target, bool skipWhenTargetNotExists = false) | Edit this page View Source Vector2InverseLerp2(Float2, Float2, float, float) Declaration public static Float2 Vector2InverseLerp2(Float2 a, Float2 b, float x, float y) | Edit this page View Source Vector2Lerp2(Float2, Float2, float, float) Declaration public static Float2 Vector2Lerp2(Float2 a, Float2 b, float x, float y) | Edit this page View Source Vector3InverseLerp3(Float3, Float3, float, float, float) Declaration public static Float3 Vector3InverseLerp3(Float3 a, Float3 b, float x, float y, float z = 0) | Edit this page View Source Vector3Lerp3(Float3, Float3, float, float, float) Declaration public static Float3 Vector3Lerp3(Float3 a, Float3 b, float x, float y, float z = 0) | Edit this page View Source Write(ref byte*, bool) Declaration public static void Write(ref byte* p, bool value) | Edit this page View Source Write(ref byte*, bool, byte*) Declaration public static void Write(ref byte* p, bool value, byte* end) | Edit this page View Source Write(ref byte*, byte) Declaration public static void Write(ref byte* p, byte value) | Edit this page View Source Write(ref byte*, byte, byte*) Declaration public static void Write(ref byte* p, byte value, byte* end) | Edit this page View Source Write(ref byte*, byte[], int) Declaration public static void Write(ref byte* p, byte[] bytes, int length) | Edit this page View Source Write(ref byte*, byte[], int, byte*) Declaration public static void Write(ref byte* p, byte[] bytes, int length, byte* end) | Edit this page View Source Write(ref byte*, char) Declaration public static void Write(ref byte* p, char value) | Edit this page View Source Write(ref byte*, char, byte*) Declaration public static void Write(ref byte* p, char value, byte* end) | Edit this page View Source Write(ref byte*, double) Declaration public static void Write(ref byte* p, double value) | Edit this page View Source Write(ref byte*, double, byte*) Declaration public static void Write(ref byte* p, double value, byte* end) | Edit this page View Source Write(ref byte*, short) Declaration public static void Write(ref byte* p, short value) | Edit this page View Source Write(ref byte*, short, byte*) Declaration public static void Write(ref byte* p, short value, byte* end) | Edit this page View Source Write(ref byte*, int) Declaration public static void Write(ref byte* p, int value) | Edit this page View Source Write(ref byte*, int, byte*) Declaration public static void Write(ref byte* p, int value, byte* end) | Edit this page View Source Write(ref byte*, long) Declaration public static void Write(ref byte* p, long value) | Edit this page View Source Write(ref byte*, long, byte*) Declaration public static void Write(ref byte* p, long value, byte* end) | Edit this page View Source Write(ref byte*, sbyte) Declaration public static void Write(ref byte* p, sbyte value) | Edit this page View Source Write(ref byte*, sbyte, byte*) Declaration public static void Write(ref byte* p, sbyte value, byte* end) | Edit this page View Source Write(ref byte*, float) Declaration public static void Write(ref byte* p, float value) | Edit this page View Source Write(ref byte*, float, byte*) Declaration public static void Write(ref byte* p, float value, byte* end) | Edit this page View Source Write(ref byte*, ushort) Declaration public static void Write(ref byte* p, ushort value) | Edit this page View Source Write(ref byte*, ushort, byte*) Declaration public static void Write(ref byte* p, ushort value, byte* end) | Edit this page View Source Write(ref byte*, uint) Declaration public static void Write(ref byte* p, uint value) | Edit this page View Source Write(ref byte*, uint, byte*) Declaration public static void Write(ref byte* p, uint value, byte* end) | Edit this page View Source Write(ref byte*, ulong) Declaration public static void Write(ref byte* p, ulong value) | Edit this page View Source Write(ref byte*, ulong, byte*) Declaration public static void Write(ref byte* p, ulong value, byte* end) | Edit this page View Source WritePixelsToConsole(Color32[], int) Declaration public static void WritePixelsToConsole(Color32[] pixels, int width) | Edit this page View Source WriteXML<T>(T, string) Declaration public static void WriteXML<T>(T data, string path) where T : class"
  },
  "api/AngeliA.Weapon-1.html": {
    "href": "api/AngeliA.Weapon-1.html",
    "title": "Class Weapon<B> | AngeliA",
    "summary": "Class Weapon<B> A type of handtool that launch a type of bullet when being used Implements IMapItem Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public abstract class Weapon<B> : Weapon, IMapItem where B : Bullet Type Parameters Name Description B Constructors | Edit this page View Source Weapon() Declaration public Weapon() Implements IMapItem Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.Weapon.html": {
    "href": "api/AngeliA.Weapon.html",
    "title": "Class Weapon | AngeliA",
    "summary": "Class Weapon A type of handtool that launch a type of bullet when being used Implements IMapItem Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public abstract class Weapon : HandTool, IMapItem Properties | Edit this page View Source BulletID Entity ID of the bullet Declaration public int BulletID { get; protected set; } | Edit this page View Source ValidDirection Which direction can this weapon attack Declaration protected virtual WeaponValidDirection ValidDirection { get; } Methods | Edit this page View Source OnPoseAnimationUpdate_FromEquipment(PoseCharacterRenderer) This function is called every frame when a pose-style character equipping this item Declaration public override void OnPoseAnimationUpdate_FromEquipment(PoseCharacterRenderer rendering) Overrides Item.OnPoseAnimationUpdate_FromEquipment(PoseCharacterRenderer) | Edit this page View Source SpawnBullet(Character) Spawn the bullet entity Declaration public virtual Bullet SpawnBullet(Character sender) Parameters Type Name Description Character sender Character that use the weapon Returns Type Description Bullet Instance of the spawned bullet entity. Return null when invalid Implements IMapItem Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.WeaponValidDirection.html": {
    "href": "api/AngeliA.WeaponValidDirection.html",
    "title": "Enum WeaponValidDirection | AngeliA",
    "summary": "Enum WeaponValidDirection Which direction can the weapon attack to Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public enum WeaponValidDirection Fields Name Description Eight ← → ↑ ↖ ↗ ↓ ↙ ↘ Five ← → ↑ ↖ ↗ Four ← → ↑ ↓ Three ← → ↑ Two ← → Extension Methods Extension.Next<WeaponValidDirection>(WeaponValidDirection) Extension.Prev<WeaponValidDirection>(WeaponValidDirection) Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.WindowUI.html": {
    "href": "api/AngeliA.WindowUI.html",
    "title": "Class WindowUI | AngeliA",
    "summary": "Class WindowUI Implements IMapItem IWindowEntityUI Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax [Entity.Capacity(1, 0)] public abstract class WindowUI : EntityUI, IMapItem, IWindowEntityUI Properties | Edit this page View Source BackgroundRect Rect position of the background part in global space Declaration public virtual IRect BackgroundRect { get; } | Edit this page View Source DefaultWindowName Failback display name of this type of window Declaration public virtual string DefaultWindowName { get; } | Edit this page View Source IsDirty True if the content of the window have unsaved changes Declaration public bool IsDirty { get; } | Edit this page View Source NotificationContent Content data for the notification this window require to display Declaration public string NotificationContent { get; set; } | Edit this page View Source NotificationSubContent Secondary content data for the notification this window require to display Declaration public string NotificationSubContent { get; set; } | Edit this page View Source RequiringTooltipContent Content data for the tooltip this window require to display Declaration public string RequiringTooltipContent { get; set; } | Edit this page View Source RequiringTooltipRect Rect position in global space for the tooltip this window require to display Declaration public IRect RequiringTooltipRect { get; } | Edit this page View Source Skin Built-in skin of the system Declaration protected GUISkin Skin { get; } | Edit this page View Source WindowRect Rect position for the root boundary Declaration public static IRect WindowRect { get; } Methods | Edit this page View Source CleanDirty() Mark this window as not dirty (do not contains unsaved changes) Declaration public virtual void CleanDirty() | Edit this page View Source ForceWindowRect(IRect) Set window rect for all window UI Declaration public static void ForceWindowRect(IRect newRect) | Edit this page View Source RequireNotification(string, string) Require a notification. Declaration protected void RequireNotification(string content, string subContent = null) | Edit this page View Source RequireTooltip(IRect, string) Require display tooltip for given range. Call this function every frame no matter the tooltip should be currently display or not. Declaration protected void RequireTooltip(IRect rect, string content) | Edit this page View Source Save(bool) Require save the data Declaration public virtual void Save(bool forceSave = false) Parameters Type Name Description bool forceSave True if this save performs without dirty checks | Edit this page View Source SetDirty() Mark this window as dirty (contains unsaved changes) Declaration public virtual void SetDirty() | Edit this page View Source UpdateUI() Declaration public override sealed void UpdateUI() Overrides EntityUI.UpdateUI() | Edit this page View Source UpdateWindowUI() Declaration public abstract void UpdateWindowUI() Implements IMapItem IWindowEntityUI Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.Wing.html": {
    "href": "api/AngeliA.Wing.html",
    "title": "Class Wing | AngeliA",
    "summary": "Class Wing Wing body gadget for pose-style character Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public abstract class Wing : BodyGadget Properties | Edit this page View Source GadgetType Type of this body gadget Declaration public override sealed BodyGadgetType GadgetType { get; } Overrides BodyGadget.GadgetType | Edit this page View Source IsPropeller True if this wing is in tail-propeller style (like character \"Tails\" from Sonic) Declaration public bool IsPropeller { get; } | Edit this page View Source Scale Size scale for the wing (0 means 0%, 1000 means 100%) Declaration protected virtual int Scale { get; } | Edit this page View Source SpriteLoaded True if artwork sprite is loaded Declaration public override bool SpriteLoaded { get; } Overrides BodyGadget.SpriteLoaded Methods | Edit this page View Source DrawGadget(PoseCharacterRenderer) Render the gadget for the given character Declaration public override void DrawGadget(PoseCharacterRenderer renderer) Overrides BodyGadget.DrawGadget(PoseCharacterRenderer) | Edit this page View Source DrawGadgetFromPool(PoseCharacterRenderer) Draw gadget for given character Declaration public static void DrawGadgetFromPool(PoseCharacterRenderer renderer) | Edit this page View Source DrawGadgetGizmos(IRect, Color32, int) Render the gadget as gizmos Declaration public override void DrawGadgetGizmos(IRect rect, Color32 tint, int z) Parameters Type Name Description IRect rect Global rect position Color32 tint Color tint int z Z position for sorting Overrides BodyGadget.DrawGadgetGizmos(IRect, Color32, int) | Edit this page View Source DrawSpriteAsWing(PoseCharacterRenderer, OrientedSprite, bool, int) Draw given artwork sprite as wing for given character Declaration public static void DrawSpriteAsWing(PoseCharacterRenderer renderer, OrientedSprite oSprite, bool isPropeller, int scale = 1000) Parameters Type Name Description PoseCharacterRenderer renderer Target character OrientedSprite oSprite Artwork sprite bool isPropeller True if this wing is in propeller style (like character \"Tails\" from Sonic) int scale Size scale (0 means 0%, 1000 means 100%) | Edit this page View Source FillFromSheet(string) Load sprite data from Renderer.CurrentSheet Declaration public override bool FillFromSheet(string name) Overrides BodyGadget.FillFromSheet(string) | Edit this page View Source IsPropellerWing(int) True if the given wing is a propeller style wing Declaration public static bool IsPropellerWing(int wingID) Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.World.html": {
    "href": "api/AngeliA.World.html",
    "title": "Class World | AngeliA",
    "summary": "Class World Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public class World Constructors | Edit this page View Source World() Declaration public World() | Edit this page View Source World(Int3) Declaration public World(Int3 pos) Fields | Edit this page View Source CacheMapPixels Declaration public static readonly Color32[] CacheMapPixels | Edit this page View Source TextureMapLinkedPool Declaration public static readonly Dictionary<uint, Int3> TextureMapLinkedPool Properties | Edit this page View Source Backgrounds Declaration public int[] Backgrounds { get; set; } | Edit this page View Source Elements Declaration public int[] Elements { get; set; } | Edit this page View Source Entities Declaration public int[] Entities { get; set; } | Edit this page View Source Levels Declaration public int[] Levels { get; set; } | Edit this page View Source WorldPosition Declaration public Int3 WorldPosition { get; set; } Methods | Edit this page View Source Clear(Int3?) Declaration public void Clear(Int3? pos = null) | Edit this page View Source ContainsBlock(int, BlockType) Declaration public bool ContainsBlock(int blockID, BlockType type) | Edit this page View Source CopyFrom(World) Declaration public void CopyFrom(World source) | Edit this page View Source EmptyCheck() Declaration public bool EmptyCheck() | Edit this page View Source FillMapIntoTexture(object) Declaration public void FillMapIntoTexture(object texture) | Edit this page View Source LoadFromDisk(string, int, int, int) Declaration public bool LoadFromDisk(string filePath, int worldX, int worldY, int worldZ) | Edit this page View Source LoadMapIntoTexture(string, object) Declaration public static bool LoadMapIntoTexture(string filePath, object texture) | Edit this page View Source SaveToDisk(string) Declaration public void SaveToDisk(string filePath) Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.WorldPathPool.html": {
    "href": "api/AngeliA.WorldPathPool.html",
    "title": "Class WorldPathPool | AngeliA",
    "summary": "Class WorldPathPool Implements IDictionary<Int3, string> ICollection<KeyValuePair<Int3, string>> IReadOnlyDictionary<Int3, string> IReadOnlyCollection<KeyValuePair<Int3, string>> IEnumerable<KeyValuePair<Int3, string>> IDictionary ICollection IEnumerable IDeserializationCallback ISerializable Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public class WorldPathPool : Dictionary<Int3, string>, IDictionary<Int3, string>, ICollection<KeyValuePair<Int3, string>>, IReadOnlyDictionary<Int3, string>, IReadOnlyCollection<KeyValuePair<Int3, string>>, IEnumerable<KeyValuePair<Int3, string>>, IDictionary, ICollection, IEnumerable, IDeserializationCallback, ISerializable Methods | Edit this page View Source GetOrAddPath(Int3) Declaration public string GetOrAddPath(Int3 worldPos) | Edit this page View Source GetWorldNameFromPosition(Int3) Declaration public static string GetWorldNameFromPosition(Int3 pos) | Edit this page View Source GetWorldNameFromPosition(int, int, int) Declaration public static string GetWorldNameFromPosition(int x, int y, int z) | Edit this page View Source SetMapRoot(string) Declaration public void SetMapRoot(string newRoot) | Edit this page View Source TryGetPath(Int3, out string) Declaration public bool TryGetPath(Int3 worldPos, out string path) | Edit this page View Source TryGetWorldPositionFromName(string, out Int3) Declaration public static bool TryGetWorldPositionFromName(string name, out Int3 pos) Implements IDictionary<TKey, TValue> ICollection<T> IReadOnlyDictionary<TKey, TValue> IReadOnlyCollection<T> IEnumerable<T> IDictionary ICollection IEnumerable IDeserializationCallback ISerializable Extension Methods Extension.JoinArray<T>(IEnumerable<T>, Func<T, string>, char) Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.WorldSquad.html": {
    "href": "api/AngeliA.WorldSquad.html",
    "title": "Class WorldSquad | AngeliA",
    "summary": "Class WorldSquad Implements IBlockSquad Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public sealed class WorldSquad : IBlockSquad Properties | Edit this page View Source Behind Declaration public static WorldSquad Behind { get; set; } | Edit this page View Source Enable Declaration public static bool Enable { get; set; } | Edit this page View Source Front Declaration public static WorldSquad Front { get; set; } | Edit this page View Source SquadReady Declaration public static bool SquadReady { get; } Methods | Edit this page View Source AddBlockRedirect(int, int) Declaration public static void AddBlockRedirect(int fromID, int toID) | Edit this page View Source ClearStreamWorldPool() Declaration public static void ClearStreamWorldPool() | Edit this page View Source GetAllBlocksAt(int, int, int) Declaration public (int level, int bg, int entity, int element) GetAllBlocksAt(int unitX, int unitY, int z) | Edit this page View Source GetBlockAt(int, int, BlockType) Declaration public int GetBlockAt(int unitX, int unitY, BlockType type) | Edit this page View Source GetBlockAt(int, int, int, BlockType) Declaration public int GetBlockAt(int unitX, int unitY, int z, BlockType type) | Edit this page View Source OnGameRestart() Declaration [OnGameRestart(0)] public static void OnGameRestart() | Edit this page View Source OnGameUpdate() Declaration [OnGameUpdate(-64)] public static void OnGameUpdate() | Edit this page View Source RemoveBlockRedirect(int) Declaration public static bool RemoveBlockRedirect(int fromID) | Edit this page View Source ResetStreamFailbackCopying() Declaration public static void ResetStreamFailbackCopying() | Edit this page View Source SetBlockAt(int, int, int, BlockType, int) Declaration public void SetBlockAt(int unitX, int unitY, int z, BlockType type, int newID) | Edit this page View Source WorldExists(Int3) Declaration public bool WorldExists(Int3 worldPos) Implements IBlockSquad Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.WorldStream.html": {
    "href": "api/AngeliA.WorldStream.html",
    "title": "Class WorldStream | AngeliA",
    "summary": "Class WorldStream Implements IBlockSquad Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public sealed class WorldStream : IBlockSquad Constructors | Edit this page View Source WorldStream(string) Declaration public WorldStream(string mapFolder) Properties | Edit this page View Source IsDirty Declaration public bool IsDirty { get; } | Edit this page View Source MapRoot Declaration public string MapRoot { get; init; } | Edit this page View Source UseBuiltInAsFailback Declaration public bool UseBuiltInAsFailback { get; set; } Methods | Edit this page View Source ClearWorldPool() Declaration public void ClearWorldPool() | Edit this page View Source DiscardAllChanges(bool) Declaration public void DiscardAllChanges(bool forceDiscard = false) | Edit this page View Source GetAllBlocksAt(int, int, int) Declaration public (int level, int bg, int entity, int element) GetAllBlocksAt(int unitX, int unitY, int z) | Edit this page View Source GetBlockAt(int, int, int, BlockType) Declaration public int GetBlockAt(int unitX, int unitY, int z, BlockType type) | Edit this page View Source GetOrCreateStreamFromPool(string) Declaration public static WorldStream GetOrCreateStreamFromPool(string mapFolder) | Edit this page View Source GetOrCreateWorld(int, int, int) Declaration public World GetOrCreateWorld(int worldX, int worldY, int worldZ) | Edit this page View Source GetWorldVersion(Int3) Declaration public uint? GetWorldVersion(Int3 worldPos) | Edit this page View Source ResetFailbackCopying() Declaration public void ResetFailbackCopying() | Edit this page View Source SaveAllDirty() Declaration public void SaveAllDirty() | Edit this page View Source SetBlockAt(int, int, int, BlockType, int) Declaration public void SetBlockAt(int unitX, int unitY, int z, BlockType type, int value) | Edit this page View Source TryGetWorld(Int3, out World) Declaration public bool TryGetWorld(Int3 worldPos, out World world) | Edit this page View Source TryGetWorld(int, int, int, out World) Declaration public bool TryGetWorld(int worldX, int worldY, int worldZ, out World world) | Edit this page View Source WorldExists(Int3) Declaration public bool WorldExists(Int3 worldPos) Events | Edit this page View Source OnWorldCreated Declaration public static event Action<WorldStream, World> OnWorldCreated | Edit this page View Source OnWorldLoaded Declaration public static event Action<WorldStream, World> OnWorldLoaded | Edit this page View Source OnWorldSaved Declaration public static event Action<WorldStream, World> OnWorldSaved Implements IBlockSquad Extension Methods Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.WrapMode.html": {
    "href": "api/AngeliA.WrapMode.html",
    "title": "Enum WrapMode | AngeliA",
    "summary": "Enum WrapMode How text wrap when reach edge Namespace: AngeliA Assembly: AngeliA Framework.dll Syntax public enum WrapMode : byte Fields Name Description NoWrap WordWrap Wrap Extension Methods Extension.Next<WrapMode>(WrapMode) Extension.Prev<WrapMode>(WrapMode) Extension.ForAllFields<T>(object, BindingFlags, bool) Extension.ForAllProperties<T>(object)"
  },
  "api/AngeliA.html": {
    "href": "api/AngeliA.html",
    "title": "Namespace AngeliA | AngeliA",
    "summary": "Namespace AngeliA Classes AfterLateUpdateAttribute The function will be called after all entity.LateUpdate is called AfterLayerFrameUpdate_IntLayerAttribute The function will be called after rendering layer update AfterLevelRenderedAttribute The function will be called after world squad render all level blocks for the current frame AngePath Utility class for path-related logic in an AngeliA project AngeSprite Artwork sprite data for rendering the game AntiBuffItem<B> A type of item that prevents a given type of buff from giving to the host Atlas Segment container of sprites inside artwork sheet AudioCode Quick setup for an audio ID AudioData AutoValidList<T> A list that automatically remove element inside based on the given function BasicGlobalItemCombinationAttribute BasicItemCombinationAttribute Define a item combination to craft the item. BeforeBeforeUpdateAttribute The function will be called before any entity.BeforeUpdate is called BeforeFirstUpdateAttribute The function will be called before any entity.FirstUpdate is called BeforeLateUpdateAttribute The function will be called before any entity.LateUpdate is called BeforeLayerFrameUpdate_IntLayerAttribute The function will be called before rendering layer update BeforeLevelRenderedAttribute The function will be called before world squad rendering any level blocks for the current frame BeforeSavingSlotChangedAttribute The function will be called before user change the saving slot. Universe.BuiltIn.CurrentSavingSlot is still the old value when this function is called. BeforeUpdateUpdateAttribute The function will be called before any entity.Update is called BlockBuilder Item that represent a map block inside inventory. Also handles the build block to map/stage logic BlockColor BlockColorBlack BlockColorBlue BlockColorCyan BlockColorGreen BlockColorGrey BlockColorOrange BlockColorPink BlockColorPurple BlockColorRed BlockColorYellow BlockColoringSystem BodyCloth Body cloth of a pose-style character. Include body, shoulder and arms BodyGadget Representation of a pose character's extra body part. Always use instance from pool. BodyGadgetItem A type of item that holds a body gadget. BodyPart Representation of a bodypart for a pose-style character BodySetAttribute Treat specified sprites as bodyset for pose-characters BodySetItem Represent an item that holds a whole set of bodypart for pose-style characters to apply Buff Represent a type of buff BuffItem Item that gives the holder a buff BuffItem<B> Item that gives the holder a buff BuiltInSprite Utility class to get built-in sprites BuiltInText Utility class to get built-in text through language system Bullet An entity represent bullet from weapons that deal damage to IDamageReceiver Cell Rendering cell CellScreenshotSystem CellScreenshotSystem.Screenshot ChangeSavingSlotTask CharSprite Character General representation of characters in AngeliA games CharacterAttackness Behavior class that handles attack logic for character CharacterAttribute Attribute for character class CharacterAttribute.DefaultSelectedPlayerAttribute Make the character the default selected player CharacterBuff Behavior class that handles buff logic for characters CharacterHealth Behavior class that handles health logic for character CharacterMovement Behavior class that handles movement logic for character CharacterPose Complete pose infomation at one moment for a pose-style character CharacterRenderer Behaviour class handles rendering of character CharacterRenderingConfig CheatCodeAttribute The function will be called when user perform the given cheat code. Cheat code can be perform like those in NES games. CheatSystem CircuitOperate_Int3UnitPos_IntStamp_Direction5FromAttribute The function will be called when CircuitSystem triggers the entity that holds this function CircuitSystem Cloth Cloth for pose-style character (not for equipment items). Get instance with Cloth.TryGetCloth(id, out var result) ClothItem Represent an item that holds a cloth for pose-style character to wear. Unlike body armor, cloth do not occupy equipment slot. ColorGradient Const Utility class for constant values ControlHintUI Hint for active buttons displays at botton-left corner of the screen during gameplay Cursor Debug Log debug messages to the console or screen DefaultDialogueUI Implementation of the dialogueUI with default settings DefaultGamepadGamekeyAttribute Default gamepad binding for the given gamekey DefaultKeyboardGamekeyAttribute Default keyboard binding for the given gamekey DefaultPropellerWing DefaultWing DelayTask DespawnEntityTask DialogueTask DialogueUI Entity that shows dialogue content. Driven by the DialogueTask. Ear Animal ear body gadget for pose character. (Like cat-girl's ears, not human ears) Ease EchoDictionary<TKey, TValue> EnablePlayerSystemAttribute Indicates whether the current application uses the player system or not Entity General object with logic which can spawn into the stage EntityAttribute Attribute for entities EntityAttribute.CapacityAttribute Spawn limit count of this entity EntityAttribute.DontDespawnOutOfRangeAttribute Do not despawn this entity when it's out of view rect EntityAttribute.DontDestroyOnZChangedAttribute This entity do not despawn when player enter another map layer EntityAttribute.DontDrawBehindAttribute This entity will not display on the behind layer EntityAttribute.DontSpawnFromWorld Do not spawn this entity when it's painted into the map EntityAttribute.ExcludeInMapEditorAttribute Do not show this entity inside the palette panel of map editor. EntityAttribute.LayerAttribute Which layer should this entity spawn inside. EntityAttribute.MapEditorGroupAttribute Which map editor palette group should this entity in EntityAttribute.RepositionWhenInactiveAttribute When the entity despawn, reset the position in map. So next time it will be load from the position where it last appeared EntityAttribute.SpawnWithCheatCodeAttribute Player can use \"Spawn---\" to spawn this entity to stage. EntityAttribute.StageOrderAttribute The order in which this entity gets updated in it's layer EntityAttribute.UpdateOutOfRangeAttribute This entity will update when it's outside view rect EntityHookTask EntityLayer Layer for entity spawning EntityLayerCapacityAttribute Max entity count for the layer EntityUI Entities which spawns into the stage and serves as UI Equipment Represent an item that can be equip into a slot for a character EventAttribute Attribute for link all static methods with a System.Action. When the action is invoked, all methods get called. Extension Face Face gadget for pose characters FadeInTask FadeOutTask FastNoiseGroup FileBrowserUI Built-in file brower entity for PC only FontData Food Item that represent food FootCloth Shoes of a pose-style character FrameBasedBool A data that can be override for specified frames FrameBasedColor A data that can be override for specified frames FrameBasedInt A data that can be override for specified frames FrameBasedValue A data that can be override for specified frames FrameBasedValue<T> A data that can be override for specified frames FrameworkUtil GUI GUI for Game-User-Interface. Handles UI related rendering and interaction logic GUISkin GUIStyle Game Represent an AngeliA game GenericDialogUI Dialog UI entity for general purpose GenericPopupUI Popup menu UI for general perpose GlobalGravityAttribute The gravity value applys on all rigidbody GlobalItemCombinationAttribute Define a item combination to craft the item. GlobalItemCombinationAttribute<I0> Define a item combination to craft the item. GlobalItemCombinationAttribute<I0, I1> Define a item combination to craft the item. GlobalItemCombinationAttribute<I0, I1, I2> Define a item combination to craft the item. GlobalItemCombinationAttribute<I0, I1, I2, I3> Define a item combination to craft the item. GroupAnimationHolder Display animation from artwork sheet Hair Hair gadget for pose styled characters HandCloth Gloves for a pose-style character HandTool Tool equipment that can be equip in hand slot of a character HandheldPoseAnimation Pose animation which override onto a character for holding a handtool HeadCloth Hat for a pose-style character HipCloth Pants or skirt for a pose-style character. Include hip and legs (no foot) Horn Horn body gadget for pose-style character IgnoreArtworkPixelsAttribute Current application do not load pixel data from sheet Input IntToChars Inventory InventoryPartnerUI A partner UI display on top of the player menu that display and manage an inventory Item Basic unit inside inventory system. ※※⚠ Use global single instance ⚠※※ ItemCombinationAttribute Define a item combination to craft the item. ItemCombinationAttribute<I0> Define a item combination to craft the item. ItemCombinationAttribute<I0, I1> Define a item combination to craft the item. ItemCombinationAttribute<I0, I1, I2> Define a item combination to craft the item. ItemCombinationAttribute<I0, I1, I2, I3> Define a item combination to craft the item. ItemCombinationParam ItemDropAttribute Register item drop for the entity, use ItemSystem.DropItemFor(Entity) to perform the item drop. ItemDropAttribute<I> Register item drop for the entity, use ItemSystem.DropItemFor(Entity) to perform the item drop. ItemHolder Entity that represent an item on map ItemSystem Core system that handles item related logic Jewelry A type of equipment that EquipmentType always set to Jewelry JsonUtil Language LanguageCode Quick setup for an language system key LanguageUtil LightingSystem MapEditor Entity for edit the map in run-time MapEditorToolbarButton Base class for detect toolbar button logic of the map editor MenuUI General class for menu entity ui MethodTask ModularBodySuit Body cloth that auto generate from artwork sheet ModularEar Ear body gadget that auto generate from artwork sheet ModularFace Face body gadget that auto generate from artwork sheet ModularFootSuit Shoes that auto generate from artwork sheet ModularHair Hair body gadget that auto generate from artwork sheet ModularHandSuit Gloves that auto generate from artwork sheet ModularHeadSuit Hat that auto generate from artwork sheet ModularHipSuit Pants or skirt that auto generate from artwork sheet ModularHorn Horn body gadget that auto generate from artwork sheet ModularTail Tail body gadget that auto generate from artwork sheet ModularWing Wing body gadget that auto generate from artwork sheet MovementEditor MusicData NoItemCombinationAttribute Indicates to the system that this item does not require crafting combination NonStackableItem A type of item that do not stack-up inside inventory panel. The MaxStackCount is always 1. NotificationUI Display a temporarily notification on top of screen during gameplay NumberEight Element for indicate a number on map NumberFive Element for indicate a number on map NumberFour Element for indicate a number on map NumberNine Element for indicate a number on map NumberOne Element for indicate a number on map NumberSeven Element for indicate a number on map NumberSix Element for indicate a number on map NumberThree Element for indicate a number on map NumberTwo Element for indicate a number on map NumberZero Element for indicate a number on map OnBlockPicked_IntSpriteID_IRectAttribute The function will be called when a map block has been picked OnBulletHitEnvironment_BulletAttribute The function will be called when a bullet hit environment (something not an IDamageReceiver) OnCameOutOfWater_Rigidbody_EntityAttribute The function will be called when a rigidbody came out of water OnCharacterCrash_EntityAttribute The function will be called when a character crash OnCharacterFly_EntityAttribute The function will be called when a character fly OnCharacterFootStepped_EntityAttribute The function will be called when a character makes a foot step on running OnCharacterJump_EntityAttribute The function will be called when a character jumps OnCharacterPassOut_EntityAttribute The function will be called when a character pass out OnCharacterPound_EntityAttribute The function will be called when a character ground pound OnCharacterSleeping_EntityAttribute The function will be called when a character is sleeping OnCharacterSlideStepped_EntityAttribute The function will be called when a character makes a step when sliding OnCharacterTeleport_EntityAttribute The function will be called when a character teleport OnCheatPerformed_StringCodeAttribute The function will be called when user performed any cheat code. Cheat code can be perform like those in NES games. OnCircuitWireActived_Int3UnitPosAttribute The function will be called when CircuitSystem's electric current pass through OnDealDamage_Damage_IDamageReceiverAttribute The function will be called when something deal damage to a damage-receiver OnFallIntoWater_Rigidbody_EntityAttribute The function will be called when a rigidbody fall into water OnFileDropped_StringPathAttribute The function will be called when user drag and drop a file into the application window OnGameFocusedAttribute The function will be called when the application window regain focus. OnGameInitializeAttribute The function will be called when game initialize. OnGameInitializeLaterAttribute The function will be called when game initialize but after all [OnGameInitialize] functions already called OnGameLostFocusAttribute The function will be called when the application window lost focus. OnGameQuittingAttribute The function will be called before the application actually quit. OnGameRestartAttribute The function will be called when game restart. OnGameTryingToQuitAttribute The function will be called when player try to quit the game. Return false will stop the application from quiting. OnGameUpdateAttribute The function will be called every time game update (60 times per second) OnGameUpdateLaterAttribute The function will be called every time game update (60 times per second), but after all [OnGameUpdate] functions already called. OnGameUpdatePauselessAttribute The function will be called every time game update (60 times per second), even when the game is paused. OnItemCollected_Entity_Int2Pos_IntItemID_IntItemCountAttribute The function will be called when a character collect an item OnItemDamage_Character_IntItemBefore_IntItemAfterAttribute The function will be called when an item is damaged into another item OnItemError_Entity_Int2Pos_IntIconID The function will be called when something wrong about an item (like when guns out of ammo) OnItemLost_Character_IntItemIDAttribute The function will be called when a character lost an item OnItemUnlocked_IntItemIDAttribute The function will be called when an item is unlocked by player OnLanguageChangedAttribute The function will be called when user change game display language. Language.CurrentLanguage is already set to new value when this function is called. OnMainSheetReloadAttribute The function will be called when artwork sheet for rendering loaded from file OnMapEditorModeChange_ModeAttribute The function will be called when user change map editor editing mode OnObjectBreak_IntSpriteID_IRectAttribute The function will be called when an object break OnObjectFreeFall_IntSpriteID_Int2Pos_IntRot_BoolFlip_Int2Velocity_IntRotSpeed_IntGravityAttribute The function will be called when an object start to free fall OnRemoteSettingChanged_IntID_IntDataAttribute The function will be called when engine send remote message to rigged game OnSavingSlotChangedAttribute The function will be called after user change the saving slot. Universe.BuiltIn.CurrentSavingSlot is the new value when this function is called. OnTransferArrivedAttribute_IntEntityID_Int3UnitPos_ObjectDataAttribute The function will be called when message from TransferSystem.StartTransfer() arrived OnTransferPassAttribute_Int3UnitPos_ObjectDataAttribute The function will be called when message from TransferSystem.StartTransfer() pass through OnViewZChangedAttribute The function will be called when player change the map layer OnWindowSizeChangedAttribute The function will be called when user change the size of the application window OnWorldCreatedBySquad_WorldAttribute The function will be called when a world instance is created by world squad OnWorldLoadedBySquad_WorldAttribute The function will be called when a world instance is loaded by world squad OnWorldSavedByMapEditor_WorldAttribute The function will be called when a world instance is saved to file by the world squad OrderedAttribute Attribute apply to method and call all of them in given order Particle Entity that represent a animated decoration Physics PhysicsLayer A single physics layer PhysicsMask A group of physics layera Pipe<T> A linked list that can add/remove from head/tail. No heap pressure. PlayerMenuItem<UI> A type of item that spawns a player partner menu when use PlayerMenuPartnerUI Class for customize partner ui for player menu ui PlayerMenuUI Menu UI for display player's state, manage equipments and items. Display when player press \"select\" button once. PlayerQuickMenuUI UI menu that display when player hold \"select\" button during gameplay PlayerSystem PoseAnimation Procedure animation to animate a pose-style character. ⚠Use global single instance from system pool⚠ PoseAnimation_Animation_TakingDamage PoseAnimation_Brake PoseAnimation_Climb PoseAnimation_Crash PoseAnimation_Dash PoseAnimation_Fly PoseAnimation_GrabSide PoseAnimation_GrabTop PoseAnimation_Idle PoseAnimation_JumpDown PoseAnimation_JumpUp PoseAnimation_PassOut PoseAnimation_Pound PoseAnimation_Rolling PoseAnimation_Run PoseAnimation_Rush PoseAnimation_Sleep PoseAnimation_Slide PoseAnimation_Spin PoseAnimation_SquatIdle PoseAnimation_SquatMove PoseAnimation_SwimIdle PoseAnimation_SwimMove PoseAnimation_Walk PoseCharacterRenderer PosePerform_Block PosePerform_Tool PropGroupAttribute PropSeparatorAttribute PropVisibilityAttribute RenderLayer Layer for rendering Renderer Renderer.CellComparer RendererLayerCapacityAttribute Max rendering cell count for the layer RestartGameTask Rigidbody Class for the entities which apply general physics by the system Saving Data that auto save into player saving data SavingBool Boolean data that auto save into player saving data SavingColor32 Color data that auto save into player saving data SavingColor32NoAlpha Color data without alpha value that auto save into player saving data SavingHotkey Hotkey data that auto save into player saving data SavingInt Intager data that auto save into player saving data SavingString String data that auto save into player saving data SavingSystem Core system for handle data that auto keeps inside disk. Saving<T> Data that auto save into player saving data SelectPlayerTask Sheet Artwork sheet that holds sprites, sprite groups, atlas and textures data for rendering SheetCharacterRenderer Sky SoundData SpawnEntityTask SpriteCode Quick setup for an artwork sprite SpriteGroup A chain of AngeSprites Stage SummonAttackness Behavior class that handles attack logic for summon type character SwitchItem<TargetItem> A type of item that switch to another item when use TagUtil Utility class for tags Tail Tail body gadget for pose-style character Task TaskSystem ToolApplicationAttribute If application with current assembly should be treat as a \"tool\" rather than \"game\" TransferSystem UndoRedo Universe Representation of game asset folder UniverseInfo Representation of Info.json in universe folder Util Weapon A type of handtool that launch a type of bullet when being used Weapon<B> A type of handtool that launch a type of bullet when being used WindowUI Wing Wing body gadget for pose-style character World WorldPathPool WorldSquad WorldStream Structs AfterimageScope BlockRule CellZScope Scope to change rendering cell z value ClampCellsScope Scope to clamp rendering cell into given rect position Color32 ColorF ColorGradient.Data Damage Data structure for a single damage performed DefaultLayerScope Scope that makes renderer draw into default layer DynamicClampCellScope Scope that clamp rendering cells inside given range by changing the size scale of the content EnvironmentShadowScope Scope that draw shadows for rendering cells inside FRect Float2 Float3 Float4 FontScope Scope that makes labels inside display with given font GUIBodyColorScope Scope that change the body color of GUI element inside GUIColorScope Scope that change the color of GUI element inside GUIContentColorScope Scope that change the content color of GUI element inside GUIEnableScope Scope that set enable of GUI elements inside GUIHorizontalScrollScope Scope that make GUI elements inside scrolls GUIInteractableScope Scope that set interactable of GUI elements inside GUILabelWidthScope Scope that set internal label width of GUI elements inside GUIScrollScope Scope that make GUI elements inside scrolls GUISkinScope Scope that change the skin of the GUI elements inside GUIVerticalScrollScope Scope that make GUI elements inside scrolls Hotkey IRect IgnoreInputScope Scope that make GUI elements ignore keyboard or mouse input from user Int2 Int3 Int4 LayerScope Scope that make rendering cells inside use given render layer Long4 OrientedSprite PhysicsCell ReverseCellsScope Scope that make rendering cells reverse in sorting order RotateCellScope Scope that make rendering cells rotate SheetIndexScope Scope that change sheet index of the rendering cells inside ShiftCellsScope Scope that shift position of the rendering cells inside UILayerScope Scope that make rendering cells inside into UI layer Util.MathfInternal Interfaces IActionTarget Interface that makes the entity react with player action. When player goes nearby, they can press action button to invoke the logic from this entity IBlockEntity Interface that makes the entity behave like a block from map. This will make the entity become a block item for ItemSystem. IBlockSquad IBumpable Interface that makes the entity can be bump by other (like question mark block in Mario) ICarrier Interface that makes entity carry other entities on top ICircuitOperator Interface that makes an entity behave like operator in circuit system ICombustible This interface makes the entity can be set on fire IDamageReceiver Interface that makes entity take damage from other IFire Interface that makes the entity behave like fire IItemTransfer Interface that mark the entity as can be transfer item through map IJsonSerializationCallback IMapItem Marks class as item that can be paint as map editor block IPlayable Interface that mark the character as playable character IProgressiveItem Interface that makes the item break/repair into other item IRouteWalker Interface that makes an entity walks along a given path IUndoItem IWindowEntityUI Interface that indicate the entity is a UI window IWithCharacterAttackness Interface that makes the entity contains a instance of character attackness behaviour IWithCharacterBuff Interface that makes the entity contains a instance of character buff behaviour IWithCharacterHealth Interface that makes the entity contains a instance of character health behaviour IWithCharacterMovement Interface that makes the entity contains a instance of character movement behaviour IWithCharacterRenderer Interface that makes the entity contains a instance of character rendering behaviour Enums Alignment AntiBuffItem<B>.TriggerMode How anti buff item been trigger AtlasState Internal data used for display folder layout AtlasType Type of sprite atlas BlockType BodyGadgetType BodyPart.CoverMode How cloths is covering the bodypart CharacterAnimationType Which type of animation does this character shows CharacterFaceExpression Face expression type for pose animation characters CharacterInventoryType Which type of inventory does this character have CharacterMovementState CharacterState General game state of a character ClothType CompareMode Direction2 Direction3 Direction4 Direction5 Direction8 EquipmentType Represent the type of the equipment FittingPose GUIState Gamekey GamepadKey HipCloth.HipClothType KeyboardKey NoiseMatching OnMapEditorModeChange_ModeAttribute.Mode OperationMode ProjectType Rule SavingLocation Where should the saving data local inside the disk Tag TaskResult WeaponValidDirection Which direction can the weapon attack to WrapMode How text wrap when reach edge"
  },
  "docs/getting-started.html": {
    "href": "docs/getting-started.html",
    "title": "Getting Started | AngeliA",
    "summary": "Getting Started This page is still under construction... \uD83C\uDFD7️"
  },
  "docs/introduction.html": {
    "href": "docs/introduction.html",
    "title": "Introduction | AngeliA",
    "summary": "Introduction This page is still under construction... \uD83C\uDFD7️"
  },
  "index.html": {
    "href": "index.html",
    "title": "| AngeliA",
    "summary": "Download & Setup Download the latest version from the Release section, extract the file and you're ready to go! Documentation & API Reference Documentation | API Reference Documentations are still under construction... \uD83C\uDFD7️ Community & Support Discord AngeliA Official YouTube Moenen Contributors"
  }
}